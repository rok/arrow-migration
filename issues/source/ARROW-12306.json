{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13370517",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13370517",
    "key": "ARROW-12306",
    "fields": {
        "fixVersions": [],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/6",
            "id": "6",
            "description": "The problem isn't valid and it can't be fixed.",
            "name": "Invalid"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": null,
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
            "name": "Closed",
            "id": "6",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12335005",
                "id": "12335005",
                "name": "Rust - DataFusion"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=heymind",
            "name": "heymind",
            "key": "heymind",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Siwei",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=heymind",
            "name": "heymind",
            "key": "heymind",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Siwei",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 9000,
            "total": 9000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 9000,
            "total": 9000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12306/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 15,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13370517/worklog/584002",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "heymind opened a new pull request #10066:\nURL: https://github.com/apache/arrow/pull/10066\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-16T02:25:30.440+0000",
                    "updated": "2021-04-16T02:25:30.440+0000",
                    "started": "2021-04-16T02:25:30.439+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "584002",
                    "issueId": "13370517"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13370517/worklog/584003",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10066:\nURL: https://github.com/apache/arrow/pull/10066#issuecomment-820863105\n\n\n   https://issues.apache.org/jira/browse/ARROW-12306\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-16T02:25:53.872+0000",
                    "updated": "2021-04-16T02:25:53.872+0000",
                    "started": "2021-04-16T02:25:53.872+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "584003",
                    "issueId": "13370517"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13370517/worklog/584737",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #10066:\nURL: https://github.com/apache/arrow/pull/10066#discussion_r615375862\n\n\n\n##########\nFile path: rust/datafusion/src/physical_plan/csv.rs\n##########\n@@ -272,25 +371,46 @@ impl ExecutionPlan for CsvExec {\n     }\n \n     async fn execute(&self, partition: usize) -> Result<SendableRecordBatchStream> {\n-        Ok(Box::pin(CsvStream::try_new(\n-            &self.filenames[partition],\n-            self.schema.clone(),\n-            self.has_header,\n-            self.delimiter,\n-            &self.projection,\n-            self.batch_size,\n-            self.limit,\n-        )?))\n+        match &self.source {\n+            SourceReader::PartitionedFiles { filenames, .. } => {\n+                Ok(Box::pin(CsvStream::try_new(\n+                    &filenames[partition],\n+                    self.schema.clone(),\n+                    self.has_header,\n+                    self.delimiter,\n+                    &self.projection,\n+                    self.batch_size,\n+                    self.limit,\n+                )?))\n+            }\n+            SourceReader::Reader(rdr) => {\n+                if let Some(rdr) = rdr.lock().unwrap().take() {\n\nReview comment:\n       I recommend checking here that `partition==0` and returning an internal error otherwise:\r\n   \r\n   Something like\r\n   \r\n   ```\r\n   if partition != 0 { \r\n      Err(DataFusionError::Internal(\"Only partition 0 is valid when CSV comes from a reader\"))\r\n   }\r\n                               .\r\n   ```\n\n##########\nFile path: rust/datafusion/src/physical_plan/csv.rs\n##########\n@@ -272,25 +371,46 @@ impl ExecutionPlan for CsvExec {\n     }\n \n     async fn execute(&self, partition: usize) -> Result<SendableRecordBatchStream> {\n-        Ok(Box::pin(CsvStream::try_new(\n-            &self.filenames[partition],\n-            self.schema.clone(),\n-            self.has_header,\n-            self.delimiter,\n-            &self.projection,\n-            self.batch_size,\n-            self.limit,\n-        )?))\n+        match &self.source {\n+            SourceReader::PartitionedFiles { filenames, .. } => {\n+                Ok(Box::pin(CsvStream::try_new(\n+                    &filenames[partition],\n+                    self.schema.clone(),\n+                    self.has_header,\n+                    self.delimiter,\n+                    &self.projection,\n+                    self.batch_size,\n+                    self.limit,\n+                )?))\n+            }\n+            SourceReader::Reader(rdr) => {\n+                if let Some(rdr) = rdr.lock().unwrap().take() {\n+                    Ok(Box::pin(CsvStream::try_new_from_reader(\n+                        rdr,\n+                        self.schema.clone(),\n+                        self.has_header,\n+                        self.delimiter,\n+                        &self.projection,\n+                        self.batch_size,\n+                        self.limit,\n+                    )?))\n+                } else {\n+                    Err(DataFusionError::Execution(\n+                        \"You can only read once if the data comes from a reader\"\n\nReview comment:\n       ```suggestion\r\n                           \"Error reading CSV: Data can only be read a single time when the source is a reader\"\r\n   ```\n\n##########\nFile path: rust/datafusion/src/datasource/csv.rs\n##########\n@@ -142,3 +143,142 @@ impl TableProvider for CsvFile {\n         self.statistics.clone()\n     }\n }\n+/// Loads CSV data from a reader\n+pub struct CsvRead<R: Read> {\n+    reader: Mutex<Option<R>>,\n+    schema: SchemaRef,\n+    has_header: bool,\n+    delimiter: u8,\n+    statistics: Statistics,\n+}\n+\n+impl<R: Read> CsvRead<R> {\n+    /// Attempt to initialize a `CsvRead` from a reader. The schema MUST be provided in options.\n+    pub fn try_new(reader: R, options: CsvReadOptions) -> Result<Self> {\n+        let schema = Arc::new(match options.schema {\n+            Some(s) => s.clone(),\n+            None => {\n+                return Err(DataFusionError::Execution(\n+                    \"Schema must be provided\".to_string(),\n\nReview comment:\n       ```suggestion\r\n                       \"Schema must be provided to CsvRead\".to_string(),\r\n   ```\n\n##########\nFile path: rust/datafusion/src/physical_plan/csv.rs\n##########\n@@ -106,13 +107,71 @@ impl<'a> CsvReadOptions<'a> {\n     }\n }\n \n+///  SourceReader represents where the data comes from.\n+enum SourceReader {\n+    /// The data comes from partitioned files\n+    PartitionedFiles {\n+        /// Path to directory containing partitioned files with the same schema\n+        path: String,\n+        /// The individual files under path\n+        filenames: Vec<String>,\n+    },\n+\n+    /// The data comes from anything impl Read trait\n+    Reader(Mutex<Option<Box<dyn Read + Send + Sync + 'static>>>),\n+}\n+\n+impl std::fmt::Debug for SourceReader {\n+    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n+        match self {\n+            SourceReader::PartitionedFiles { path, filenames } => f\n+                .debug_struct(\"PartitionedFiles\")\n+                .field(\"path\", path)\n+                .field(\"filenames\", filenames)\n+                .finish()?,\n+            SourceReader::Reader(_) => f.write_str(\"Reader\")?,\n+        };\n+        Ok(())\n+    }\n+}\n+\n+impl Clone for SourceReader {\n+    fn clone(&self) -> Self {\n+        match self {\n+            SourceReader::PartitionedFiles { path, filenames } => {\n+                Self::PartitionedFiles {\n+                    path: path.clone(),\n+                    filenames: filenames.clone(),\n+                }\n+            }\n+            SourceReader::Reader(_) => Self::Reader(Mutex::new(None)),\n\nReview comment:\n       This might cause some non trivial confusion -- namey that `Clone'`ing a SourceReader will *not* clone the underlying reader. Thus any `Clone`'d `CsvExec` won't be usable at at all (it will generate an error)\r\n   \r\n    I wonder if `CsvExec` really needs to be `Clone` at all -- like can we just remove the `Clone` derivation:\r\n   \r\n   ```\r\n   #[derive(Debug)]\r\n   pub struct CsvExec {\r\n   ```\n\n##########\nFile path: rust/datafusion/src/datasource/csv.rs\n##########\n@@ -142,3 +143,142 @@ impl TableProvider for CsvFile {\n         self.statistics.clone()\n     }\n }\n+/// Loads CSV data from a reader\n+pub struct CsvRead<R: Read> {\n\nReview comment:\n       I wonder if there is any way to reduce the duplication between `CsvRead<R>` and `CsvFile` -- as you have done for `CsvExec`. That way we can reuse the same tests for things like schema matching.\r\n   \r\n   Since the `Reader` gets `Box`ed anyways for execution, I don't think there is any performance difference using something that is generic over `R` vs a `Box<R>`\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-18T10:25:19.124+0000",
                    "updated": "2021-04-18T10:25:19.124+0000",
                    "started": "2021-04-18T10:25:19.124+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "584737",
                    "issueId": "13370517"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13370517/worklog/584876",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "heymind commented on a change in pull request #10066:\nURL: https://github.com/apache/arrow/pull/10066#discussion_r615542436\n\n\n\n##########\nFile path: rust/datafusion/src/physical_plan/csv.rs\n##########\n@@ -106,13 +107,71 @@ impl<'a> CsvReadOptions<'a> {\n     }\n }\n \n+///  SourceReader represents where the data comes from.\n+enum SourceReader {\n+    /// The data comes from partitioned files\n+    PartitionedFiles {\n+        /// Path to directory containing partitioned files with the same schema\n+        path: String,\n+        /// The individual files under path\n+        filenames: Vec<String>,\n+    },\n+\n+    /// The data comes from anything impl Read trait\n+    Reader(Mutex<Option<Box<dyn Read + Send + Sync + 'static>>>),\n+}\n+\n+impl std::fmt::Debug for SourceReader {\n+    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n+        match self {\n+            SourceReader::PartitionedFiles { path, filenames } => f\n+                .debug_struct(\"PartitionedFiles\")\n+                .field(\"path\", path)\n+                .field(\"filenames\", filenames)\n+                .finish()?,\n+            SourceReader::Reader(_) => f.write_str(\"Reader\")?,\n+        };\n+        Ok(())\n+    }\n+}\n+\n+impl Clone for SourceReader {\n+    fn clone(&self) -> Self {\n+        match self {\n+            SourceReader::PartitionedFiles { path, filenames } => {\n+                Self::PartitionedFiles {\n+                    path: path.clone(),\n+                    filenames: filenames.clone(),\n+                }\n+            }\n+            SourceReader::Reader(_) => Self::Reader(Mutex::new(None)),\n\nReview comment:\n       I agree it's unnecessary for `CsvExec` to be `Clone`. But if we remove the `Clone` derivation, will it introduce a breaking change ? \r\n   \r\n   If the `CsvExec` is built from source files ( not from a reader ) , the `Clone` will act as expected.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-19T04:56:34.614+0000",
                    "updated": "2021-04-19T04:56:34.614+0000",
                    "started": "2021-04-19T04:56:34.614+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "584876",
                    "issueId": "13370517"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13370517/worklog/584880",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "heymind commented on a change in pull request #10066:\nURL: https://github.com/apache/arrow/pull/10066#discussion_r615545715\n\n\n\n##########\nFile path: rust/datafusion/src/datasource/csv.rs\n##########\n@@ -142,3 +143,142 @@ impl TableProvider for CsvFile {\n         self.statistics.clone()\n     }\n }\n+/// Loads CSV data from a reader\n+pub struct CsvRead<R: Read> {\n\nReview comment:\n       Okay. Would you mind to introduce another dependency crate `either` ?  It's more clear than introducing a new enum.\r\n   \r\n   ```rs\r\n   pub struct CsvFile {\r\n       source: Either<Box<dyn Read>,String>,\r\n      ....\r\n   }\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-19T05:09:27.330+0000",
                    "updated": "2021-04-19T05:09:27.330+0000",
                    "started": "2021-04-19T05:09:27.330+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "584880",
                    "issueId": "13370517"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13370517/worklog/585034",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on pull request #10066:\nURL: https://github.com/apache/arrow/pull/10066#issuecomment-822357349\n\n\n   The Apache Arrow Rust community is moving the Rust implementation into its own dedicated github repositories [arrow-rs](https://github.com/apache/arrow-rs) and [arrow-datafusion](https://github.com/apache/arrow-datafusion). It is likely we will not merge this PR into this repository\r\n   \r\n   Please see the [mailing-list](https://lists.apache.org/thread.html/rce7c61cb3f703367dc00984530016e3fcb828e5a8035655fbcccf862%40%3Cdev.arrow.apache.org%3E) thread for more details\r\n   \r\n   We expect the process to take a few days and will follow up with a migration plan for the in-flight PRs.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-19T10:21:28.279+0000",
                    "updated": "2021-04-19T10:21:28.279+0000",
                    "started": "2021-04-19T10:21:28.278+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585034",
                    "issueId": "13370517"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13370517/worklog/585040",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on pull request #10066:\nURL: https://github.com/apache/arrow/pull/10066#issuecomment-822358642\n\n\n   The Apache Arrow Rust community is moving the Rust implementation into its own dedicated github repositories [arrow-rs](https://github.com/apache/arrow-rs) and [arrow-datafusion](https://github.com/apache/arrow-datafusion). It is likely we will not merge this PR into this repository\r\n   \r\n   Please see the [mailing-list](https://lists.apache.org/thread.html/rce7c61cb3f703367dc00984530016e3fcb828e5a8035655fbcccf862%40%3Cdev.arrow.apache.org%3E) thread for more details\r\n   \r\n   We expect the process to take a few days and will follow up with a migration plan for the in-flight PRs.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-19T10:23:46.142+0000",
                    "updated": "2021-04-19T10:23:46.142+0000",
                    "started": "2021-04-19T10:23:46.142+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585040",
                    "issueId": "13370517"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13370517/worklog/585751",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #10066:\nURL: https://github.com/apache/arrow/pull/10066#discussion_r616617432\n\n\n\n##########\nFile path: rust/datafusion/src/physical_plan/csv.rs\n##########\n@@ -106,13 +107,71 @@ impl<'a> CsvReadOptions<'a> {\n     }\n }\n \n+///  SourceReader represents where the data comes from.\n+enum SourceReader {\n+    /// The data comes from partitioned files\n+    PartitionedFiles {\n+        /// Path to directory containing partitioned files with the same schema\n+        path: String,\n+        /// The individual files under path\n+        filenames: Vec<String>,\n+    },\n+\n+    /// The data comes from anything impl Read trait\n+    Reader(Mutex<Option<Box<dyn Read + Send + Sync + 'static>>>),\n+}\n+\n+impl std::fmt::Debug for SourceReader {\n+    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n+        match self {\n+            SourceReader::PartitionedFiles { path, filenames } => f\n+                .debug_struct(\"PartitionedFiles\")\n+                .field(\"path\", path)\n+                .field(\"filenames\", filenames)\n+                .finish()?,\n+            SourceReader::Reader(_) => f.write_str(\"Reader\")?,\n+        };\n+        Ok(())\n+    }\n+}\n+\n+impl Clone for SourceReader {\n+    fn clone(&self) -> Self {\n+        match self {\n+            SourceReader::PartitionedFiles { path, filenames } => {\n+                Self::PartitionedFiles {\n+                    path: path.clone(),\n+                    filenames: filenames.clone(),\n+                }\n+            }\n+            SourceReader::Reader(_) => Self::Reader(Mutex::new(None)),\n\nReview comment:\n       Removing `Clone` would be a breaking change I agree -- though I am not sure how many people `Clone` physical plans\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-20T12:03:56.986+0000",
                    "updated": "2021-04-20T12:03:56.986+0000",
                    "started": "2021-04-20T12:03:56.986+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585751",
                    "issueId": "13370517"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13370517/worklog/585752",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #10066:\nURL: https://github.com/apache/arrow/pull/10066#discussion_r616618045\n\n\n\n##########\nFile path: rust/datafusion/src/datasource/csv.rs\n##########\n@@ -142,3 +143,142 @@ impl TableProvider for CsvFile {\n         self.statistics.clone()\n     }\n }\n+/// Loads CSV data from a reader\n+pub struct CsvRead<R: Read> {\n\nReview comment:\n       I think we are trying to keep the number of dependencies down (as we expect applications to be built on top of DataFusion) so I think we should use a specific enum rather than another crate\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-20T12:04:43.947+0000",
                    "updated": "2021-04-20T12:04:43.947+0000",
                    "started": "2021-04-20T12:04:43.946+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585752",
                    "issueId": "13370517"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13370517/worklog/588434",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "heymind commented on a change in pull request #10066:\nURL: https://github.com/apache/arrow/pull/10066#discussion_r619734334\n\n\n\n##########\nFile path: rust/datafusion/src/physical_plan/csv.rs\n##########\n@@ -106,13 +107,71 @@ impl<'a> CsvReadOptions<'a> {\n     }\n }\n \n+///  SourceReader represents where the data comes from.\n+enum SourceReader {\n+    /// The data comes from partitioned files\n+    PartitionedFiles {\n+        /// Path to directory containing partitioned files with the same schema\n+        path: String,\n+        /// The individual files under path\n+        filenames: Vec<String>,\n+    },\n+\n+    /// The data comes from anything impl Read trait\n+    Reader(Mutex<Option<Box<dyn Read + Send + Sync + 'static>>>),\n+}\n+\n+impl std::fmt::Debug for SourceReader {\n+    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n+        match self {\n+            SourceReader::PartitionedFiles { path, filenames } => f\n+                .debug_struct(\"PartitionedFiles\")\n+                .field(\"path\", path)\n+                .field(\"filenames\", filenames)\n+                .finish()?,\n+            SourceReader::Reader(_) => f.write_str(\"Reader\")?,\n+        };\n+        Ok(())\n+    }\n+}\n+\n+impl Clone for SourceReader {\n+    fn clone(&self) -> Self {\n+        match self {\n+            SourceReader::PartitionedFiles { path, filenames } => {\n+                Self::PartitionedFiles {\n+                    path: path.clone(),\n+                    filenames: filenames.clone(),\n+                }\n+            }\n+            SourceReader::Reader(_) => Self::Reader(Mutex::new(None)),\n\nReview comment:\n       But `CsvExec::with_new_children` requires itself `Clone` ...\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-25T01:51:39.560+0000",
                    "updated": "2021-04-25T01:51:39.560+0000",
                    "started": "2021-04-25T01:51:39.560+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "588434",
                    "issueId": "13370517"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13370517/worklog/588435",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "heymind commented on pull request #10066:\nURL: https://github.com/apache/arrow/pull/10066#issuecomment-826201045\n\n\n   https://github.com/apache/arrow-datafusion/pull/54\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-25T01:51:52.850+0000",
                    "updated": "2021-04-25T01:51:52.850+0000",
                    "started": "2021-04-25T01:51:52.850+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "588435",
                    "issueId": "13370517"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13370517/worklog/588436",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "heymind closed pull request #10066:\nURL: https://github.com/apache/arrow/pull/10066\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-25T01:51:56.092+0000",
                    "updated": "2021-04-25T01:51:56.092+0000",
                    "started": "2021-04-25T01:51:56.092+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "588436",
                    "issueId": "13370517"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13370517/worklog/588750",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "heymind commented on a change in pull request #10066:\nURL: https://github.com/apache/arrow/pull/10066#discussion_r619734334\n\n\n\n##########\nFile path: rust/datafusion/src/physical_plan/csv.rs\n##########\n@@ -106,13 +107,71 @@ impl<'a> CsvReadOptions<'a> {\n     }\n }\n \n+///  SourceReader represents where the data comes from.\n+enum SourceReader {\n+    /// The data comes from partitioned files\n+    PartitionedFiles {\n+        /// Path to directory containing partitioned files with the same schema\n+        path: String,\n+        /// The individual files under path\n+        filenames: Vec<String>,\n+    },\n+\n+    /// The data comes from anything impl Read trait\n+    Reader(Mutex<Option<Box<dyn Read + Send + Sync + 'static>>>),\n+}\n+\n+impl std::fmt::Debug for SourceReader {\n+    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n+        match self {\n+            SourceReader::PartitionedFiles { path, filenames } => f\n+                .debug_struct(\"PartitionedFiles\")\n+                .field(\"path\", path)\n+                .field(\"filenames\", filenames)\n+                .finish()?,\n+            SourceReader::Reader(_) => f.write_str(\"Reader\")?,\n+        };\n+        Ok(())\n+    }\n+}\n+\n+impl Clone for SourceReader {\n+    fn clone(&self) -> Self {\n+        match self {\n+            SourceReader::PartitionedFiles { path, filenames } => {\n+                Self::PartitionedFiles {\n+                    path: path.clone(),\n+                    filenames: filenames.clone(),\n+                }\n+            }\n+            SourceReader::Reader(_) => Self::Reader(Mutex::new(None)),\n\nReview comment:\n       But `CsvExec::with_new_children` requires itself `Clone` ...\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-26T06:42:19.204+0000",
                    "updated": "2021-04-26T06:42:19.204+0000",
                    "started": "2021-04-26T06:42:19.203+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "588750",
                    "issueId": "13370517"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13370517/worklog/588776",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "heymind closed pull request #10066:\nURL: https://github.com/apache/arrow/pull/10066\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-26T06:44:58.460+0000",
                    "updated": "2021-04-26T06:44:58.460+0000",
                    "started": "2021-04-26T06:44:58.459+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "588776",
                    "issueId": "13370517"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13370517/worklog/588928",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "heymind commented on pull request #10066:\nURL: https://github.com/apache/arrow/pull/10066#issuecomment-826201045\n\n\n   https://github.com/apache/arrow-datafusion/pull/54\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-26T07:02:59.018+0000",
                    "updated": "2021-04-26T07:02:59.018+0000",
                    "started": "2021-04-26T07:02:59.018+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "588928",
                    "issueId": "13370517"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/5",
            "id": "5",
            "description": "General wishlist item.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Wish",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 9000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@61ba95bd[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@12a8d5b1[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@142fed84[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@407eb7ed[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@766c8bc7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@3bb7b844[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@509f317b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@65eb255a[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@774bb893[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@71b85ba6[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5805b803[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@647887ac[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 9000,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Apr 26 13:33:17 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-04-26T13:33:19.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12306/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2021-04-09T02:17:29.000+0000",
        "updated": "2021-04-26T13:33:19.000+0000",
        "timeoriginalestimate": null,
        "description": "Hello,\r\n\r\nI'm building a command line tool that can run SQL queries on text files (csv, json-line ..) . But the `CsvExec` in\u00a0datafusion can only read csv text from files currently. I have checked its inner implantation the csv reader in arrow, anything impl `Read` could be a valid input.\r\n\r\n\u00a0\r\n\r\nShould this feature ( read csv from stdin) come with\u00a0datafusion ? Or I just make it into my own crate.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 9000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] Read CSV format text from stdin or memory",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13370517/comment/17318190",
                    "id": "17318190",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "[~heymind] I think having the CsvExec be able to read from stdin (aka anything that impl `Read`) is a good idea\r\n\r\n\r\nPerhaps you an extend CsvFile https://github.com/apache/arrow/blob/master/rust/datafusion/src/datasource/csv.rs#L50 so that it can take either a `Path` or something that implements `Read` and then pass that information down to the `CsvExec`",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-04-09T18:18:23.459+0000",
                    "updated": "2021-04-09T18:18:23.459+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13370517/comment/17318668",
                    "id": "17318668",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=heymind",
                        "name": "heymind",
                        "key": "heymind",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Siwei",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Ok.I will do it.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=heymind",
                        "name": "heymind",
                        "key": "heymind",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Siwei",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-04-11T06:57:39.254+0000",
                    "updated": "2021-04-11T06:57:39.254+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13370517/comment/17332405",
                    "id": "17332405",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Migrated to github: https://github.com/apache/arrow-datafusion/issues/198",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-04-26T13:33:17.696+0000",
                    "updated": "2021-04-26T13:33:17.696+0000"
                }
            ],
            "maxResults": 3,
            "total": 3,
            "startAt": 0
        },
        "customfield_12311820": "0|z0poz4:",
        "customfield_12314139": null
    }
}