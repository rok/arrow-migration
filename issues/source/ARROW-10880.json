{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13345474",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13345474",
    "key": "ARROW-10880",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349493",
                "id": "12349493",
                "description": "",
                "name": "4.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-04-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12604681",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12604681",
                "type": {
                    "id": "12310460",
                    "name": "Child-Issue",
                    "inward": "is a child of",
                    "outward": "is a parent of",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310460"
                },
                "inwardIssue": {
                    "id": "13302466",
                    "key": "ARROW-8672",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302466",
                    "fields": {
                        "summary": "[Java] Implement RecordBatch IPC buffer compression from ARROW-300",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
                            "id": "7",
                            "description": "The sub-task of the issue",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
                            "name": "Sub-task",
                            "subtask": true,
                            "avatarId": 21146
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "aggregateprogress": {
            "progress": 54600,
            "total": 54600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 54600,
            "total": 54600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-10880/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 91,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13345474/worklog/525359",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 opened a new pull request #8949:\nURL: https://github.com/apache/arrow/pull/8949\n\n\n   Support compressing/decompressing RecordBatch IPC buffers by LZ4.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-17T02:57:15.252+0000",
                    "updated": "2020-12-17T02:57:15.252+0000",
                    "started": "2020-12-17T02:57:15.252+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "525359",
                    "issueId": "13345474"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13345474/worklog/525360",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #8949:\nURL: https://github.com/apache/arrow/pull/8949#issuecomment-747171848\n\n\n   https://issues.apache.org/jira/browse/ARROW-10880\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-17T02:58:18.250+0000",
                    "updated": "2020-12-17T02:58:18.250+0000",
                    "started": "2020-12-17T02:58:18.250+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "525360",
                    "issueId": "13345474"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13345474/worklog/526458",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kiszk commented on a change in pull request #8949:\nURL: https://github.com/apache/arrow/pull/8949#discussion_r546331739\n\n\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/compression/Lz4CompressionCodec.java\n##########\n@@ -0,0 +1,110 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.compression;\n+\n+import java.nio.ByteBuffer;\n+\n+import org.apache.arrow.flatbuf.CompressionType;\n+import org.apache.arrow.memory.ArrowBuf;\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.memory.util.MemoryUtil;\n+import org.apache.arrow.util.Preconditions;\n+\n+import net.jpountz.lz4.LZ4Compressor;\n+import net.jpountz.lz4.LZ4Factory;\n+import net.jpountz.lz4.LZ4FastDecompressor;\n+\n+/**\n+ * Compression codec for the LZ4 algorithm.\n+ */\n+public class Lz4CompressionCodec implements CompressionCodec {\n+\n+  private static final long SIZE_OF_MESSAGE_LENGTH = 8L;\n+\n+  private final LZ4Factory factory;\n+\n+  private LZ4Compressor compressor;\n+\n+  private LZ4FastDecompressor decompressor;\n+\n+  public Lz4CompressionCodec() {\n+    factory = LZ4Factory.fastestInstance();\n+  }\n+\n+  @Override\n+  public ArrowBuf compress(BufferAllocator allocator, ArrowBuf unCompressedBuffer) {\n+    Preconditions.checkArgument(unCompressedBuffer.writerIndex() <= Integer.MAX_VALUE,\n+        \"The uncompressed buffer size exceeds the integer limit\");\n+\n+    // create compressor lazily\n+    if (compressor == null) {\n+      compressor = factory.fastCompressor();\n+    }\n+\n+    int maxCompressedLength = compressor.maxCompressedLength((int) unCompressedBuffer.writerIndex());\n+\n+    // first 8 bytes reserved for uncompressed length, to be consistent with the\n+    // C++ implementation.\n+    ArrowBuf compressedBuffer = allocator.buffer(maxCompressedLength + SIZE_OF_MESSAGE_LENGTH);\n+    compressedBuffer.setLong(0, unCompressedBuffer.writerIndex());\n\nReview comment:\n       Do we need to ensure this in little-endian? (c.f. https://github.com/apache/arrow/blob/master/cpp/src/arrow/ipc/reader.cc#L385).\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-20T06:54:12.647+0000",
                    "updated": "2020-12-20T06:54:12.647+0000",
                    "started": "2020-12-20T06:54:12.647+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "526458",
                    "issueId": "13345474"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13345474/worklog/526459",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kiszk commented on a change in pull request #8949:\nURL: https://github.com/apache/arrow/pull/8949#discussion_r546331755\n\n\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/compression/Lz4CompressionCodec.java\n##########\n@@ -0,0 +1,110 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.compression;\n+\n+import java.nio.ByteBuffer;\n+\n+import org.apache.arrow.flatbuf.CompressionType;\n+import org.apache.arrow.memory.ArrowBuf;\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.memory.util.MemoryUtil;\n+import org.apache.arrow.util.Preconditions;\n+\n+import net.jpountz.lz4.LZ4Compressor;\n+import net.jpountz.lz4.LZ4Factory;\n+import net.jpountz.lz4.LZ4FastDecompressor;\n+\n+/**\n+ * Compression codec for the LZ4 algorithm.\n+ */\n+public class Lz4CompressionCodec implements CompressionCodec {\n+\n+  private static final long SIZE_OF_MESSAGE_LENGTH = 8L;\n+\n+  private final LZ4Factory factory;\n+\n+  private LZ4Compressor compressor;\n+\n+  private LZ4FastDecompressor decompressor;\n+\n+  public Lz4CompressionCodec() {\n+    factory = LZ4Factory.fastestInstance();\n+  }\n+\n+  @Override\n+  public ArrowBuf compress(BufferAllocator allocator, ArrowBuf unCompressedBuffer) {\n+    Preconditions.checkArgument(unCompressedBuffer.writerIndex() <= Integer.MAX_VALUE,\n+        \"The uncompressed buffer size exceeds the integer limit\");\n+\n+    // create compressor lazily\n+    if (compressor == null) {\n+      compressor = factory.fastCompressor();\n+    }\n+\n+    int maxCompressedLength = compressor.maxCompressedLength((int) unCompressedBuffer.writerIndex());\n+\n+    // first 8 bytes reserved for uncompressed length, to be consistent with the\n+    // C++ implementation.\n+    ArrowBuf compressedBuffer = allocator.buffer(maxCompressedLength + SIZE_OF_MESSAGE_LENGTH);\n+    compressedBuffer.setLong(0, unCompressedBuffer.writerIndex());\n+\n+    ByteBuffer uncompressed =\n+        MemoryUtil.directBuffer(unCompressedBuffer.memoryAddress(), (int) unCompressedBuffer.writerIndex());\n+    ByteBuffer compressed =\n+        MemoryUtil.directBuffer(compressedBuffer.memoryAddress() + SIZE_OF_MESSAGE_LENGTH, maxCompressedLength);\n+\n+    int compressedLength = compressor.compress(\n+        uncompressed, 0, (int) unCompressedBuffer.writerIndex(), compressed, 0, maxCompressedLength);\n+    compressedBuffer.writerIndex(compressedLength + SIZE_OF_MESSAGE_LENGTH);\n+\n+    unCompressedBuffer.close();\n+    return compressedBuffer;\n+  }\n+\n+  @Override\n+  public ArrowBuf decompress(BufferAllocator allocator, ArrowBuf compressedBuffer) {\n+    Preconditions.checkArgument(compressedBuffer.writerIndex() <= Integer.MAX_VALUE,\n+        \"The compressed buffer size exceeds the integer limit\");\n+\n+    Preconditions.checkArgument(compressedBuffer.writerIndex() > SIZE_OF_MESSAGE_LENGTH,\n+        \"Not enough data to decompress.\");\n+\n+    // create decompressor lazily\n+    if (decompressor == null) {\n+      decompressor = factory.fastDecompressor();\n+    }\n+\n+    long decompressedLength = compressedBuffer.getLong(0);\n\nReview comment:\n       ditto\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-20T06:54:25.599+0000",
                    "updated": "2020-12-20T06:54:25.599+0000",
                    "started": "2020-12-20T06:54:25.599+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "526459",
                    "issueId": "13345474"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13345474/worklog/526654",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on a change in pull request #8949:\nURL: https://github.com/apache/arrow/pull/8949#discussion_r546486677\n\n\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/compression/Lz4CompressionCodec.java\n##########\n@@ -0,0 +1,110 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.compression;\n+\n+import java.nio.ByteBuffer;\n+\n+import org.apache.arrow.flatbuf.CompressionType;\n+import org.apache.arrow.memory.ArrowBuf;\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.memory.util.MemoryUtil;\n+import org.apache.arrow.util.Preconditions;\n+\n+import net.jpountz.lz4.LZ4Compressor;\n+import net.jpountz.lz4.LZ4Factory;\n+import net.jpountz.lz4.LZ4FastDecompressor;\n+\n+/**\n+ * Compression codec for the LZ4 algorithm.\n+ */\n+public class Lz4CompressionCodec implements CompressionCodec {\n+\n+  private static final long SIZE_OF_MESSAGE_LENGTH = 8L;\n+\n+  private final LZ4Factory factory;\n+\n+  private LZ4Compressor compressor;\n+\n+  private LZ4FastDecompressor decompressor;\n+\n+  public Lz4CompressionCodec() {\n+    factory = LZ4Factory.fastestInstance();\n+  }\n+\n+  @Override\n+  public ArrowBuf compress(BufferAllocator allocator, ArrowBuf unCompressedBuffer) {\n+    Preconditions.checkArgument(unCompressedBuffer.writerIndex() <= Integer.MAX_VALUE,\n+        \"The uncompressed buffer size exceeds the integer limit\");\n+\n+    // create compressor lazily\n+    if (compressor == null) {\n+      compressor = factory.fastCompressor();\n+    }\n+\n+    int maxCompressedLength = compressor.maxCompressedLength((int) unCompressedBuffer.writerIndex());\n+\n+    // first 8 bytes reserved for uncompressed length, to be consistent with the\n+    // C++ implementation.\n+    ArrowBuf compressedBuffer = allocator.buffer(maxCompressedLength + SIZE_OF_MESSAGE_LENGTH);\n+    compressedBuffer.setLong(0, unCompressedBuffer.writerIndex());\n\nReview comment:\n       Revised accordingly. Thanks for your kind reminder.\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/compression/Lz4CompressionCodec.java\n##########\n@@ -0,0 +1,110 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.compression;\n+\n+import java.nio.ByteBuffer;\n+\n+import org.apache.arrow.flatbuf.CompressionType;\n+import org.apache.arrow.memory.ArrowBuf;\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.memory.util.MemoryUtil;\n+import org.apache.arrow.util.Preconditions;\n+\n+import net.jpountz.lz4.LZ4Compressor;\n+import net.jpountz.lz4.LZ4Factory;\n+import net.jpountz.lz4.LZ4FastDecompressor;\n+\n+/**\n+ * Compression codec for the LZ4 algorithm.\n+ */\n+public class Lz4CompressionCodec implements CompressionCodec {\n+\n+  private static final long SIZE_OF_MESSAGE_LENGTH = 8L;\n+\n+  private final LZ4Factory factory;\n+\n+  private LZ4Compressor compressor;\n+\n+  private LZ4FastDecompressor decompressor;\n+\n+  public Lz4CompressionCodec() {\n+    factory = LZ4Factory.fastestInstance();\n+  }\n+\n+  @Override\n+  public ArrowBuf compress(BufferAllocator allocator, ArrowBuf unCompressedBuffer) {\n+    Preconditions.checkArgument(unCompressedBuffer.writerIndex() <= Integer.MAX_VALUE,\n+        \"The uncompressed buffer size exceeds the integer limit\");\n+\n+    // create compressor lazily\n+    if (compressor == null) {\n+      compressor = factory.fastCompressor();\n+    }\n+\n+    int maxCompressedLength = compressor.maxCompressedLength((int) unCompressedBuffer.writerIndex());\n+\n+    // first 8 bytes reserved for uncompressed length, to be consistent with the\n+    // C++ implementation.\n+    ArrowBuf compressedBuffer = allocator.buffer(maxCompressedLength + SIZE_OF_MESSAGE_LENGTH);\n+    compressedBuffer.setLong(0, unCompressedBuffer.writerIndex());\n+\n+    ByteBuffer uncompressed =\n+        MemoryUtil.directBuffer(unCompressedBuffer.memoryAddress(), (int) unCompressedBuffer.writerIndex());\n+    ByteBuffer compressed =\n+        MemoryUtil.directBuffer(compressedBuffer.memoryAddress() + SIZE_OF_MESSAGE_LENGTH, maxCompressedLength);\n+\n+    int compressedLength = compressor.compress(\n+        uncompressed, 0, (int) unCompressedBuffer.writerIndex(), compressed, 0, maxCompressedLength);\n+    compressedBuffer.writerIndex(compressedLength + SIZE_OF_MESSAGE_LENGTH);\n+\n+    unCompressedBuffer.close();\n+    return compressedBuffer;\n+  }\n+\n+  @Override\n+  public ArrowBuf decompress(BufferAllocator allocator, ArrowBuf compressedBuffer) {\n+    Preconditions.checkArgument(compressedBuffer.writerIndex() <= Integer.MAX_VALUE,\n+        \"The compressed buffer size exceeds the integer limit\");\n+\n+    Preconditions.checkArgument(compressedBuffer.writerIndex() > SIZE_OF_MESSAGE_LENGTH,\n+        \"Not enough data to decompress.\");\n+\n+    // create decompressor lazily\n+    if (decompressor == null) {\n+      decompressor = factory.fastDecompressor();\n+    }\n+\n+    long decompressedLength = compressedBuffer.getLong(0);\n\nReview comment:\n       Revised. Thank you.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-21T03:03:46.149+0000",
                    "updated": "2020-12-21T03:03:46.149+0000",
                    "started": "2020-12-21T03:03:46.149+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "526654",
                    "issueId": "13345474"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13345474/worklog/530635",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kiszk commented on pull request #8949:\nURL: https://github.com/apache/arrow/pull/8949#issuecomment-753952360\n\n\n   Looks good to me\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-04T12:39:20.406+0000",
                    "updated": "2021-01-04T12:39:20.406+0000",
                    "started": "2021-01-04T12:39:20.405+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "530635",
                    "issueId": "13345474"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13345474/worklog/530943",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #8949:\nURL: https://github.com/apache/arrow/pull/8949#discussion_r551603003\n\n\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/compression/Lz4CompressionCodec.java\n##########\n@@ -0,0 +1,119 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.compression;\n+\n+import static org.apache.arrow.memory.util.MemoryUtil.LITTLE_ENDIAN;\n+\n+import java.nio.ByteBuffer;\n+\n+import org.apache.arrow.flatbuf.CompressionType;\n+import org.apache.arrow.memory.ArrowBuf;\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.memory.util.MemoryUtil;\n+import org.apache.arrow.util.Preconditions;\n+\n+import net.jpountz.lz4.LZ4Compressor;\n\nReview comment:\n       How was this library chosen?  It looks like it might not have been released in a while?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-04T22:19:35.358+0000",
                    "updated": "2021-01-04T22:19:35.358+0000",
                    "started": "2021-01-04T22:19:35.358+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "530943",
                    "issueId": "13345474"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13345474/worklog/530944",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #8949:\nURL: https://github.com/apache/arrow/pull/8949#discussion_r551603225\n\n\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/compression/Lz4CompressionCodec.java\n##########\n@@ -0,0 +1,119 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.compression;\n+\n+import static org.apache.arrow.memory.util.MemoryUtil.LITTLE_ENDIAN;\n+\n+import java.nio.ByteBuffer;\n+\n+import org.apache.arrow.flatbuf.CompressionType;\n+import org.apache.arrow.memory.ArrowBuf;\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.memory.util.MemoryUtil;\n+import org.apache.arrow.util.Preconditions;\n+\n+import net.jpountz.lz4.LZ4Compressor;\n+import net.jpountz.lz4.LZ4Factory;\n+import net.jpountz.lz4.LZ4FastDecompressor;\n+\n+/**\n+ * Compression codec for the LZ4 algorithm.\n+ */\n+public class Lz4CompressionCodec implements CompressionCodec {\n+\n+  private static final long SIZE_OF_MESSAGE_LENGTH = 8L;\n+\n+  private final LZ4Factory factory;\n+\n+  private LZ4Compressor compressor;\n+\n+  private LZ4FastDecompressor decompressor;\n+\n+  public Lz4CompressionCodec() {\n+    factory = LZ4Factory.fastestInstance();\n+  }\n+\n+  @Override\n+  public ArrowBuf compress(BufferAllocator allocator, ArrowBuf unCompressedBuffer) {\n\nReview comment:\n       ```suggestion\r\n     public ArrowBuf compress(BufferAllocator allocator, ArrowBuf uncompressedBuffer) {\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-04T22:20:08.639+0000",
                    "updated": "2021-01-04T22:20:08.639+0000",
                    "started": "2021-01-04T22:20:08.638+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "530944",
                    "issueId": "13345474"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13345474/worklog/530945",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #8949:\nURL: https://github.com/apache/arrow/pull/8949#discussion_r551603359\n\n\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/compression/Lz4CompressionCodec.java\n##########\n@@ -0,0 +1,119 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.compression;\n+\n+import static org.apache.arrow.memory.util.MemoryUtil.LITTLE_ENDIAN;\n+\n+import java.nio.ByteBuffer;\n+\n+import org.apache.arrow.flatbuf.CompressionType;\n+import org.apache.arrow.memory.ArrowBuf;\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.memory.util.MemoryUtil;\n+import org.apache.arrow.util.Preconditions;\n+\n+import net.jpountz.lz4.LZ4Compressor;\n+import net.jpountz.lz4.LZ4Factory;\n+import net.jpountz.lz4.LZ4FastDecompressor;\n+\n+/**\n+ * Compression codec for the LZ4 algorithm.\n+ */\n+public class Lz4CompressionCodec implements CompressionCodec {\n+\n+  private static final long SIZE_OF_MESSAGE_LENGTH = 8L;\n+\n+  private final LZ4Factory factory;\n+\n+  private LZ4Compressor compressor;\n+\n+  private LZ4FastDecompressor decompressor;\n+\n+  public Lz4CompressionCodec() {\n+    factory = LZ4Factory.fastestInstance();\n+  }\n+\n+  @Override\n+  public ArrowBuf compress(BufferAllocator allocator, ArrowBuf unCompressedBuffer) {\n\nReview comment:\n       ? or is this consistent with the existing API?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-04T22:20:21.480+0000",
                    "updated": "2021-01-04T22:20:21.480+0000",
                    "started": "2021-01-04T22:20:21.480+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "530945",
                    "issueId": "13345474"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13345474/worklog/530946",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #8949:\nURL: https://github.com/apache/arrow/pull/8949#discussion_r551603469\n\n\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/compression/Lz4CompressionCodec.java\n##########\n@@ -0,0 +1,119 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.compression;\n+\n+import static org.apache.arrow.memory.util.MemoryUtil.LITTLE_ENDIAN;\n+\n+import java.nio.ByteBuffer;\n+\n+import org.apache.arrow.flatbuf.CompressionType;\n+import org.apache.arrow.memory.ArrowBuf;\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.memory.util.MemoryUtil;\n+import org.apache.arrow.util.Preconditions;\n+\n+import net.jpountz.lz4.LZ4Compressor;\n+import net.jpountz.lz4.LZ4Factory;\n+import net.jpountz.lz4.LZ4FastDecompressor;\n+\n+/**\n+ * Compression codec for the LZ4 algorithm.\n+ */\n+public class Lz4CompressionCodec implements CompressionCodec {\n+\n+  private static final long SIZE_OF_MESSAGE_LENGTH = 8L;\n+\n+  private final LZ4Factory factory;\n+\n+  private LZ4Compressor compressor;\n+\n+  private LZ4FastDecompressor decompressor;\n+\n+  public Lz4CompressionCodec() {\n+    factory = LZ4Factory.fastestInstance();\n+  }\n+\n+  @Override\n+  public ArrowBuf compress(BufferAllocator allocator, ArrowBuf unCompressedBuffer) {\n+    Preconditions.checkArgument(unCompressedBuffer.writerIndex() <= Integer.MAX_VALUE,\n+        \"The uncompressed buffer size exceeds the integer limit\");\n+\n+    // create compressor lazily\n\nReview comment:\n       why?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-04T22:20:34.366+0000",
                    "updated": "2021-01-04T22:20:34.366+0000",
                    "started": "2021-01-04T22:20:34.365+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "530946",
                    "issueId": "13345474"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13345474/worklog/530947",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #8949:\nURL: https://github.com/apache/arrow/pull/8949#issuecomment-754259372\n\n\n   Is it possible to add a test to confirm that this can be read/written from the C++ implementation?\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-04T22:23:29.926+0000",
                    "updated": "2021-01-04T22:23:29.926+0000",
                    "started": "2021-01-04T22:23:29.926+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "530947",
                    "issueId": "13345474"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13345474/worklog/531295",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kiszk commented on a change in pull request #8949:\nURL: https://github.com/apache/arrow/pull/8949#discussion_r551997558\n\n\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/compression/Lz4CompressionCodec.java\n##########\n@@ -0,0 +1,119 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.compression;\n+\n+import static org.apache.arrow.memory.util.MemoryUtil.LITTLE_ENDIAN;\n+\n+import java.nio.ByteBuffer;\n+\n+import org.apache.arrow.flatbuf.CompressionType;\n+import org.apache.arrow.memory.ArrowBuf;\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.memory.util.MemoryUtil;\n+import org.apache.arrow.util.Preconditions;\n+\n+import net.jpountz.lz4.LZ4Compressor;\n\nReview comment:\n       My guess is that this import refers to [this](https://github.com/lz4/lz4-java/tree/master/src/java/net/jpountz/lz4).\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-05T15:19:27.072+0000",
                    "updated": "2021-01-05T15:19:27.072+0000",
                    "started": "2021-01-05T15:19:27.072+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "531295",
                    "issueId": "13345474"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13345474/worklog/531315",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "HedgehogCode commented on pull request #8949:\nURL: https://github.com/apache/arrow/pull/8949#issuecomment-754727763\n\n\n   When I use the changes and try to compress and decompress an empty buffer (by using a variable sized vector with only missing values) I get a SIGSEGV:\r\n   ```\r\n   #\r\n   # A fatal error has been detected by the Java Runtime Environment:\r\n   #\r\n   #  SIGSEGV (0xb) at pc=0x00007f1209448fd0, pid=10504, tid=0x00007f1208bc7700\r\n   #\r\n   # JRE version: OpenJDK Runtime Environment (8.0_275-b01) (build 1.8.0_275-b01)\r\n   # Java VM: OpenJDK 64-Bit Server VM (25.275-b01 mixed mode linux-amd64 compressed oops)\r\n   # Problematic frame:\r\n   # V  [libjvm.so+0x6fdfd0]  jni_ThrowNew+0xc0\r\n   #\r\n   # Core dump written. Default location: /workspaces/arrow/java/vector/core or core.10504\r\n   ```\r\n   \r\n   This can be reproduced by adding the following test to `TestCompressionCodec.java`:\r\n   ```java\r\n     @Test\r\n     public void testEmptyBuffer() throws Exception {\r\n       final int vecLength = 10;\r\n       final VarBinaryVector origVec = new VarBinaryVector(\"vec\", allocator);\r\n   \r\n       origVec.allocateNew(vecLength);\r\n   \r\n       // Do not set any values (all missing)\r\n       origVec.setValueCount(vecLength);\r\n   \r\n       final List<ArrowBuf> origBuffers = origVec.getFieldBuffers();\r\n       final List<ArrowBuf> compressedBuffers = compressBuffers(origBuffers);\r\n       final List<ArrowBuf> decompressedBuffers = deCompressBuffers(compressedBuffers);\r\n   \r\n       // TODO assert that the decompressed buffers are correct\r\n       AutoCloseables.close(decompressedBuffers);\r\n     }\r\n   ```\r\n   This looks like an error in the lz4-java library but I am not sure. I thought I should mention it here first.\r\n   (Note that I am using OpenJDK 8 and I haven't tried OpenJDK 11 yet)\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-05T16:01:55.016+0000",
                    "updated": "2021-01-05T16:01:55.016+0000",
                    "started": "2021-01-05T16:01:55.015+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "531315",
                    "issueId": "13345474"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13345474/worklog/531316",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "HedgehogCode edited a comment on pull request #8949:\nURL: https://github.com/apache/arrow/pull/8949#issuecomment-754727763\n\n\n   When I use the changes and try to compress and decompress an empty buffer (by using a variable sized vector with only missing values) I get a SIGSEGV ([hs_err_pid10504.log](https://github.com/apache/arrow/files/5771248/hs_err_pid10504.log)):\r\n   ```\r\n   #\r\n   # A fatal error has been detected by the Java Runtime Environment:\r\n   #\r\n   #  SIGSEGV (0xb) at pc=0x00007f1209448fd0, pid=10504, tid=0x00007f1208bc7700\r\n   #\r\n   # JRE version: OpenJDK Runtime Environment (8.0_275-b01) (build 1.8.0_275-b01)\r\n   # Java VM: OpenJDK 64-Bit Server VM (25.275-b01 mixed mode linux-amd64 compressed oops)\r\n   # Problematic frame:\r\n   # V  [libjvm.so+0x6fdfd0]  jni_ThrowNew+0xc0\r\n   #\r\n   # Core dump written. Default location: /workspaces/arrow/java/vector/core or core.10504\r\n   ```\r\n   \r\n   This can be reproduced by adding the following test to `TestCompressionCodec.java`:\r\n   ```java\r\n     @Test\r\n     public void testEmptyBuffer() throws Exception {\r\n       final int vecLength = 10;\r\n       final VarBinaryVector origVec = new VarBinaryVector(\"vec\", allocator);\r\n   \r\n       origVec.allocateNew(vecLength);\r\n   \r\n       // Do not set any values (all missing)\r\n       origVec.setValueCount(vecLength);\r\n   \r\n       final List<ArrowBuf> origBuffers = origVec.getFieldBuffers();\r\n       final List<ArrowBuf> compressedBuffers = compressBuffers(origBuffers);\r\n       final List<ArrowBuf> decompressedBuffers = deCompressBuffers(compressedBuffers);\r\n   \r\n       // TODO assert that the decompressed buffers are correct\r\n       AutoCloseables.close(decompressedBuffers);\r\n     }\r\n   ```\r\n   This looks like an error in the lz4-java library but I am not sure. I thought I should mention it here first.\r\n   (Note that I am using OpenJDK 8 and I haven't tried OpenJDK 11 yet)\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-05T16:03:59.246+0000",
                    "updated": "2021-01-05T16:03:59.246+0000",
                    "started": "2021-01-05T16:03:59.246+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "531316",
                    "issueId": "13345474"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13345474/worklog/531641",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on a change in pull request #8949:\nURL: https://github.com/apache/arrow/pull/8949#discussion_r552332372\n\n\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/compression/Lz4CompressionCodec.java\n##########\n@@ -0,0 +1,119 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.compression;\n+\n+import static org.apache.arrow.memory.util.MemoryUtil.LITTLE_ENDIAN;\n+\n+import java.nio.ByteBuffer;\n+\n+import org.apache.arrow.flatbuf.CompressionType;\n+import org.apache.arrow.memory.ArrowBuf;\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.memory.util.MemoryUtil;\n+import org.apache.arrow.util.Preconditions;\n+\n+import net.jpountz.lz4.LZ4Compressor;\n\nReview comment:\n       @kiszk You are right. I chose this library because our C++ implementation also depends on this repo (https://github.com/lz4/lz4). \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-06T02:39:38.679+0000",
                    "updated": "2021-01-06T02:39:38.679+0000",
                    "started": "2021-01-06T02:39:38.679+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "531641",
                    "issueId": "13345474"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13345474/worklog/531644",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on a change in pull request #8949:\nURL: https://github.com/apache/arrow/pull/8949#discussion_r552335378\n\n\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/compression/Lz4CompressionCodec.java\n##########\n@@ -0,0 +1,119 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.compression;\n+\n+import static org.apache.arrow.memory.util.MemoryUtil.LITTLE_ENDIAN;\n+\n+import java.nio.ByteBuffer;\n+\n+import org.apache.arrow.flatbuf.CompressionType;\n+import org.apache.arrow.memory.ArrowBuf;\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.memory.util.MemoryUtil;\n+import org.apache.arrow.util.Preconditions;\n+\n+import net.jpountz.lz4.LZ4Compressor;\n+import net.jpountz.lz4.LZ4Factory;\n+import net.jpountz.lz4.LZ4FastDecompressor;\n+\n+/**\n+ * Compression codec for the LZ4 algorithm.\n+ */\n+public class Lz4CompressionCodec implements CompressionCodec {\n+\n+  private static final long SIZE_OF_MESSAGE_LENGTH = 8L;\n+\n+  private final LZ4Factory factory;\n+\n+  private LZ4Compressor compressor;\n+\n+  private LZ4FastDecompressor decompressor;\n+\n+  public Lz4CompressionCodec() {\n+    factory = LZ4Factory.fastestInstance();\n+  }\n+\n+  @Override\n+  public ArrowBuf compress(BufferAllocator allocator, ArrowBuf unCompressedBuffer) {\n\nReview comment:\n       Nice catch. Thank you!\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-06T02:51:28.448+0000",
                    "updated": "2021-01-06T02:51:28.448+0000",
                    "started": "2021-01-06T02:51:28.448+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "531644",
                    "issueId": "13345474"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13345474/worklog/531645",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on a change in pull request #8949:\nURL: https://github.com/apache/arrow/pull/8949#discussion_r552335719\n\n\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/compression/Lz4CompressionCodec.java\n##########\n@@ -0,0 +1,119 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.compression;\n+\n+import static org.apache.arrow.memory.util.MemoryUtil.LITTLE_ENDIAN;\n+\n+import java.nio.ByteBuffer;\n+\n+import org.apache.arrow.flatbuf.CompressionType;\n+import org.apache.arrow.memory.ArrowBuf;\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.memory.util.MemoryUtil;\n+import org.apache.arrow.util.Preconditions;\n+\n+import net.jpountz.lz4.LZ4Compressor;\n+import net.jpountz.lz4.LZ4Factory;\n+import net.jpountz.lz4.LZ4FastDecompressor;\n+\n+/**\n+ * Compression codec for the LZ4 algorithm.\n+ */\n+public class Lz4CompressionCodec implements CompressionCodec {\n+\n+  private static final long SIZE_OF_MESSAGE_LENGTH = 8L;\n+\n+  private final LZ4Factory factory;\n+\n+  private LZ4Compressor compressor;\n+\n+  private LZ4FastDecompressor decompressor;\n+\n+  public Lz4CompressionCodec() {\n+    factory = LZ4Factory.fastestInstance();\n+  }\n+\n+  @Override\n+  public ArrowBuf compress(BufferAllocator allocator, ArrowBuf unCompressedBuffer) {\n+    Preconditions.checkArgument(unCompressedBuffer.writerIndex() <= Integer.MAX_VALUE,\n+        \"The uncompressed buffer size exceeds the integer limit\");\n+\n+    // create compressor lazily\n\nReview comment:\n       For some scenarios (e.g. flight sender), we only need the compressor, while for others (e.g. flight receiver), we only need the decompressor. So there is no need to create both eagerly. \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-06T02:52:43.786+0000",
                    "updated": "2021-01-06T02:52:43.786+0000",
                    "started": "2021-01-06T02:52:43.786+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "531645",
                    "issueId": "13345474"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13345474/worklog/531647",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #8949:\nURL: https://github.com/apache/arrow/pull/8949#issuecomment-755044988\n\n\n   > Is it possible to add a test to confirm that this can be read/written from the C++ implementation?\r\n   \r\n   @emkornfield I think it is a good idea to provide e2e cross-language integration tests. \r\n   However, I am not sure if we are ready now. \r\n   \r\n   In particular, we need to change the way buffers are released after compressing. \r\n   Previously, we release the buffers by directly closing the related vectors. This no longer works now, as vector's buffers are released by the codec, and the compressed buffers need to be released properly.\r\n   \r\n   Solution to this problem may have impacts to other parts of the code base. So maybe we need another issue to discuss it (if we do not do it in this PR).\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-06T03:00:33.825+0000",
                    "updated": "2021-01-06T03:00:33.825+0000",
                    "started": "2021-01-06T03:00:33.825+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "531647",
                    "issueId": "13345474"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13345474/worklog/531648",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #8949:\nURL: https://github.com/apache/arrow/pull/8949#issuecomment-755045402\n\n\n   > When I use the changes and try to compress and decompress an empty buffer (by using a variable sized vector with only missing values) I get a SIGSEGV ([hs_err_pid10504.log](https://github.com/apache/arrow/files/5771248/hs_err_pid10504.log)):\r\n   > \r\n   > ```\r\n   > #\r\n   > # A fatal error has been detected by the Java Runtime Environment:\r\n   > #\r\n   > #  SIGSEGV (0xb) at pc=0x00007f1209448fd0, pid=10504, tid=0x00007f1208bc7700\r\n   > #\r\n   > # JRE version: OpenJDK Runtime Environment (8.0_275-b01) (build 1.8.0_275-b01)\r\n   > # Java VM: OpenJDK 64-Bit Server VM (25.275-b01 mixed mode linux-amd64 compressed oops)\r\n   > # Problematic frame:\r\n   > # V  [libjvm.so+0x6fdfd0]  jni_ThrowNew+0xc0\r\n   > #\r\n   > # Core dump written. Default location: /workspaces/arrow/java/vector/core or core.10504\r\n   > ```\r\n   > \r\n   > This can be reproduced by adding the following test to `TestCompressionCodec.java`:\r\n   > \r\n   > ```java\r\n   >   @Test\r\n   >   public void testEmptyBuffer() throws Exception {\r\n   >     final int vecLength = 10;\r\n   >     final VarBinaryVector origVec = new VarBinaryVector(\"vec\", allocator);\r\n   > \r\n   >     origVec.allocateNew(vecLength);\r\n   > \r\n   >     // Do not set any values (all missing)\r\n   >     origVec.setValueCount(vecLength);\r\n   > \r\n   >     final List<ArrowBuf> origBuffers = origVec.getFieldBuffers();\r\n   >     final List<ArrowBuf> compressedBuffers = compressBuffers(origBuffers);\r\n   >     final List<ArrowBuf> decompressedBuffers = deCompressBuffers(compressedBuffers);\r\n   > \r\n   >     // TODO assert that the decompressed buffers are correct\r\n   >     AutoCloseables.close(decompressedBuffers);\r\n   >   }\r\n   > ```\r\n   > \r\n   > This looks like an error in the lz4-java library but I am not sure. I thought I should mention it here first.\r\n   > (Note that I am using OpenJDK 8 and I haven't tried OpenJDK 11 yet)\r\n   \r\n   @HedgehogCode Thanks a lot for your effort and information. I will take a look at the problem. \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-06T03:02:02.404+0000",
                    "updated": "2021-01-06T03:02:02.404+0000",
                    "started": "2021-01-06T03:02:02.404+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "531648",
                    "issueId": "13345474"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13345474/worklog/532379",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #8949:\nURL: https://github.com/apache/arrow/pull/8949#issuecomment-756003757\n\n\n   > When I use the changes and try to compress and decompress an empty buffer (by using a variable sized vector with only missing values) I get a SIGSEGV ([hs_err_pid10504.log](https://github.com/apache/arrow/files/5771248/hs_err_pid10504.log)):\r\n   > \r\n   > ```\r\n   > #\r\n   > # A fatal error has been detected by the Java Runtime Environment:\r\n   > #\r\n   > #  SIGSEGV (0xb) at pc=0x00007f1209448fd0, pid=10504, tid=0x00007f1208bc7700\r\n   > #\r\n   > # JRE version: OpenJDK Runtime Environment (8.0_275-b01) (build 1.8.0_275-b01)\r\n   > # Java VM: OpenJDK 64-Bit Server VM (25.275-b01 mixed mode linux-amd64 compressed oops)\r\n   > # Problematic frame:\r\n   > # V  [libjvm.so+0x6fdfd0]  jni_ThrowNew+0xc0\r\n   > #\r\n   > # Core dump written. Default location: /workspaces/arrow/java/vector/core or core.10504\r\n   > ```\r\n   > \r\n   > This can be reproduced by adding the following test to `TestCompressionCodec.java`:\r\n   > \r\n   > ```java\r\n   >   @Test\r\n   >   public void testEmptyBuffer() throws Exception {\r\n   >     final int vecLength = 10;\r\n   >     final VarBinaryVector origVec = new VarBinaryVector(\"vec\", allocator);\r\n   > \r\n   >     origVec.allocateNew(vecLength);\r\n   > \r\n   >     // Do not set any values (all missing)\r\n   >     origVec.setValueCount(vecLength);\r\n   > \r\n   >     final List<ArrowBuf> origBuffers = origVec.getFieldBuffers();\r\n   >     final List<ArrowBuf> compressedBuffers = compressBuffers(origBuffers);\r\n   >     final List<ArrowBuf> decompressedBuffers = deCompressBuffers(compressedBuffers);\r\n   > \r\n   >     // TODO assert that the decompressed buffers are correct\r\n   >     AutoCloseables.close(decompressedBuffers);\r\n   >   }\r\n   > ```\r\n   > \r\n   > This looks like an error in the lz4-java library but I am not sure. I thought I should mention it here first.\r\n   > (Note that I am using OpenJDK 8 and I haven't tried OpenJDK 11 yet)\r\n   \r\n   @HedgehogCode The problem happend when lz4-java tried to decompress an empty buffer. I have fixed the problem by taking special case of empty buffers. Thanks again for your kind reminder. \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-07T09:41:01.555+0000",
                    "updated": "2021-01-07T09:41:01.555+0000",
                    "started": "2021-01-07T09:41:01.555+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "532379",
                    "issueId": "13345474"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 54600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@111a91a9[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@77407848[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@48b7d90a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@3cc17a6c[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2ae07e92[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@b928eae[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7d9b795f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@4abe7e9a[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@63838db1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@7cfb9891[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5a0c57d0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@63ffb8a5[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 54600,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Mar 17 19:04:50 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-03-17T19:04:50.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-10880/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-12-11T09:25:11.000+0000",
        "updated": "2022-01-26T06:00:50.000+0000",
        "timeoriginalestimate": null,
        "description": "Support compressing/decompressing RecordBatch IPC buffers by LZ4.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "15h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 54600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] Support compressing RecordBatch IPC buffers by LZ4",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13345474/comment/17303668",
                    "id": "17303668",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield",
                        "name": "emkornfield",
                        "key": "emkornfield",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 8949\n[https://github.com/apache/arrow/pull/8949]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield",
                        "name": "emkornfield",
                        "key": "emkornfield",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-03-17T19:04:50.132+0000",
                    "updated": "2021-03-17T19:04:50.132+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0lf4w:",
        "customfield_12314139": null
    }
}