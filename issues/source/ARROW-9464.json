{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13316701",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316701",
    "key": "ARROW-9464",
    "fields": {
        "fixVersions": [],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/6",
            "id": "6",
            "description": "The problem isn't valid and it can't be fixed.",
            "name": "Invalid"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12596936",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12596936",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "outwardIssue": {
                    "id": "13322597",
                    "key": "ARROW-9732",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13322597",
                    "fields": {
                        "summary": "[Rust] [DataFusion] Add \"Physical Planner\" type thing which can do optimizations",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
            "name": "andygrove",
            "key": "andygrove",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
            },
            "displayName": "Andy Grove",
            "active": true,
            "timeZone": "America/Denver"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
            "name": "Closed",
            "id": "6",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12335005",
                "id": "12335005",
                "name": "Rust - DataFusion"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
            "name": "andygrove",
            "key": "andygrove",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
            },
            "displayName": "Andy Grove",
            "active": true,
            "timeZone": "America/Denver"
        },
        "subtasks": [
            {
                "id": "13316944",
                "key": "ARROW-9480",
                "self": "https://issues.apache.org/jira/rest/api/2/issue/13316944",
                "fields": {
                    "summary": "[Rust] [DataFusion] All DataFusion execution plan traits should require Send + Sync",
                    "status": {
                        "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                        "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                        "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                        "name": "Closed",
                        "id": "6",
                        "statusCategory": {
                            "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                            "id": 3,
                            "key": "done",
                            "colorName": "green",
                            "name": "Done"
                        }
                    },
                    "priority": {
                        "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                        "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                        "name": "Major",
                        "id": "3"
                    },
                    "issuetype": {
                        "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
                        "id": "7",
                        "description": "The sub-task of the issue",
                        "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
                        "name": "Sub-task",
                        "subtask": true,
                        "avatarId": 21146
                    }
                }
            },
            {
                "id": "13316945",
                "key": "ARROW-9481",
                "self": "https://issues.apache.org/jira/rest/api/2/issue/13316945",
                "fields": {
                    "summary": "[Rust] [DataFusion] Create physical plan enum to wrap execution plan",
                    "status": {
                        "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                        "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                        "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                        "name": "Closed",
                        "id": "6",
                        "statusCategory": {
                            "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                            "id": 3,
                            "key": "done",
                            "colorName": "green",
                            "name": "Done"
                        }
                    },
                    "priority": {
                        "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                        "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                        "name": "Major",
                        "id": "3"
                    },
                    "issuetype": {
                        "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
                        "id": "7",
                        "description": "The sub-task of the issue",
                        "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
                        "name": "Sub-task",
                        "subtask": true,
                        "avatarId": 21146
                    }
                }
            },
            {
                "id": "13316946",
                "key": "ARROW-9482",
                "self": "https://issues.apache.org/jira/rest/api/2/issue/13316946",
                "fields": {
                    "summary": "[Rust] [DataFusion] Implement pretty print for physical query plan",
                    "status": {
                        "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                        "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                        "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                        "name": "Closed",
                        "id": "6",
                        "statusCategory": {
                            "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                            "id": 3,
                            "key": "done",
                            "colorName": "green",
                            "name": "Done"
                        }
                    },
                    "priority": {
                        "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                        "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                        "name": "Major",
                        "id": "3"
                    },
                    "issuetype": {
                        "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
                        "id": "7",
                        "description": "The sub-task of the issue",
                        "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
                        "name": "Sub-task",
                        "subtask": true,
                        "avatarId": 21146
                    }
                }
            },
            {
                "id": "13317292",
                "key": "ARROW-9507",
                "self": "https://issues.apache.org/jira/rest/api/2/issue/13317292",
                "fields": {
                    "summary": "[Rust] [DataFusion] PhysicalExpr should implement Display trait",
                    "status": {
                        "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                        "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                        "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                        "name": "Resolved",
                        "id": "5",
                        "statusCategory": {
                            "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                            "id": 3,
                            "key": "done",
                            "colorName": "green",
                            "name": "Done"
                        }
                    },
                    "priority": {
                        "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                        "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                        "name": "Major",
                        "id": "3"
                    },
                    "issuetype": {
                        "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
                        "id": "7",
                        "description": "The sub-task of the issue",
                        "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
                        "name": "Sub-task",
                        "subtask": true,
                        "avatarId": 21146
                    }
                }
            },
            {
                "id": "13322291",
                "key": "ARROW-9707",
                "self": "https://issues.apache.org/jira/rest/api/2/issue/13322291",
                "fields": {
                    "summary": "[Rust] [DataFusion] Re-implement threading model",
                    "status": {
                        "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                        "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                        "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                        "name": "Closed",
                        "id": "6",
                        "statusCategory": {
                            "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                            "id": 3,
                            "key": "done",
                            "colorName": "green",
                            "name": "Done"
                        }
                    },
                    "priority": {
                        "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                        "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                        "name": "Major",
                        "id": "3"
                    },
                    "issuetype": {
                        "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
                        "id": "7",
                        "description": "The sub-task of the issue",
                        "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
                        "name": "Sub-task",
                        "subtask": true,
                        "avatarId": 21146
                    }
                }
            },
            {
                "id": "13322294",
                "key": "ARROW-9708",
                "self": "https://issues.apache.org/jira/rest/api/2/issue/13322294",
                "fields": {
                    "summary": "[Rust] [DataFusion] Remove use of threads and channels from ParquetScanExec",
                    "status": {
                        "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                        "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                        "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                        "name": "Closed",
                        "id": "6",
                        "statusCategory": {
                            "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                            "id": 3,
                            "key": "done",
                            "colorName": "green",
                            "name": "Done"
                        }
                    },
                    "priority": {
                        "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                        "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                        "name": "Major",
                        "id": "3"
                    },
                    "issuetype": {
                        "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
                        "id": "7",
                        "description": "The sub-task of the issue",
                        "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
                        "name": "Sub-task",
                        "subtask": true,
                        "avatarId": 21146
                    }
                }
            },
            {
                "id": "13324116",
                "key": "ARROW-9834",
                "self": "https://issues.apache.org/jira/rest/api/2/issue/13324116",
                "fields": {
                    "summary": "[Rust] [DataFusion] Remove Partition trait",
                    "status": {
                        "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                        "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                        "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                        "name": "Resolved",
                        "id": "5",
                        "statusCategory": {
                            "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                            "id": 3,
                            "key": "done",
                            "colorName": "green",
                            "name": "Done"
                        }
                    },
                    "priority": {
                        "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                        "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                        "name": "Major",
                        "id": "3"
                    },
                    "issuetype": {
                        "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
                        "id": "7",
                        "description": "The sub-task of the issue",
                        "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
                        "name": "Sub-task",
                        "subtask": true,
                        "avatarId": 21146
                    }
                }
            },
            {
                "id": "13324157",
                "key": "ARROW-9838",
                "self": "https://issues.apache.org/jira/rest/api/2/issue/13324157",
                "fields": {
                    "summary": "[Rust] [DataFusion] DefaultPhysicalPlanner should insert explicit MergeExec nodes",
                    "status": {
                        "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                        "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                        "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                        "name": "Closed",
                        "id": "6",
                        "statusCategory": {
                            "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                            "id": 3,
                            "key": "done",
                            "colorName": "green",
                            "name": "Done"
                        }
                    },
                    "priority": {
                        "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                        "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                        "name": "Major",
                        "id": "3"
                    },
                    "issuetype": {
                        "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
                        "id": "7",
                        "description": "The sub-task of the issue",
                        "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
                        "name": "Sub-task",
                        "subtask": true,
                        "avatarId": 21146
                    }
                }
            }
        ],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
            "name": "andygrove",
            "key": "andygrove",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
            },
            "displayName": "Andy Grove",
            "active": true,
            "timeZone": "America/Denver"
        },
        "aggregateprogress": {
            "progress": 34200,
            "total": 34200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 13800,
            "total": 13800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9464/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 23,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316701/worklog/473597",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove opened a new pull request #8029:\nURL: https://github.com/apache/arrow/pull/8029\n\n\n   This follows on from https://github.com/apache/arrow/pull/8028.\r\n   \r\n   - Removes `Partition` trait, which was really redundant.\r\n   - `ExecutonPlan.execute()` now takes a partition index.\r\n   - Removed `DatasourceExec` since no longer needed now that `TableProvider.scan` returns an `ExecutionPlan` directly.\r\n   \r\n   This is a step towards extracting the threading model out of the operators like `MergeExec` and having the operators be able to work with different threading models.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-22T22:45:55.526+0000",
                    "updated": "2020-08-22T22:45:55.526+0000",
                    "started": "2020-08-22T22:45:55.526+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "473597",
                    "issueId": "13316701"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316701/worklog/473598",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #8029:\nURL: https://github.com/apache/arrow/pull/8029#issuecomment-678704604\n\n\n   @jorgecarleitao @alamb Sorry, this is a bit of a larger change than usual.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-22T22:46:40.160+0000",
                    "updated": "2020-08-22T22:46:40.160+0000",
                    "started": "2020-08-22T22:46:40.160+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "473598",
                    "issueId": "13316701"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316701/worklog/473599",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #8029:\nURL: https://github.com/apache/arrow/pull/8029#issuecomment-678704633\n\n\n   https://issues.apache.org/jira/browse/ARROW-9464\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-22T22:47:03.211+0000",
                    "updated": "2020-08-22T22:47:03.211+0000",
                    "started": "2020-08-22T22:47:03.211+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "473599",
                    "issueId": "13316701"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316701/worklog/473604",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #8029:\nURL: https://github.com/apache/arrow/pull/8029#discussion_r475168077\n\n\n\n##########\nFile path: rust/datafusion/src/execution/physical_plan/sort.rs\n##########\n@@ -61,44 +61,28 @@ impl ExecutionPlan for SortExec {\n         self.input.schema().clone()\n     }\n \n-    fn partitions(&self) -> Result<Vec<Arc<dyn Partition>>> {\n-        Ok(vec![\n-            (Arc::new(SortPartition {\n-                input: self.input.partitions()?,\n-                expr: self.expr.clone(),\n-                schema: self.schema(),\n-                concurrency: self.concurrency,\n-            })),\n-        ])\n+    /// Get the output partitioning of this plan\n+    fn output_partitioning(&self) -> Partitioning {\n+        Partitioning::UnknownPartitioning(1)\n\nReview comment:\n       To make sure I am following: this is 1 because we pull everything to the same partition in a sort via `Merge`.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-23T04:19:47.252+0000",
                    "updated": "2020-08-23T04:19:47.252+0000",
                    "started": "2020-08-23T04:19:47.252+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "473604",
                    "issueId": "13316701"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316701/worklog/473605",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #8029:\nURL: https://github.com/apache/arrow/pull/8029#issuecomment-678728434\n\n\n   Yes, exactly. We could do more efficient things in the future such as\n   perform sorts in parallel and then do a sort-merge join on the results.\n   \n   On Sat, Aug 22, 2020, 10:19 PM Jorge Leitao <notifications@github.com>\n   wrote:\n   \n   > *@jorgecarleitao* commented on this pull request.\n   > ------------------------------\n   >\n   > In rust/datafusion/src/execution/physical_plan/sort.rs\n   > <https://github.com/apache/arrow/pull/8029#discussion_r475168077>:\n   >\n   > > @@ -61,44 +61,28 @@ impl ExecutionPlan for SortExec {\n   >          self.input.schema().clone()\n   >      }\n   >\n   > -    fn partitions(&self) -> Result<Vec<Arc<dyn Partition>>> {\n   > -        Ok(vec![\n   > -            (Arc::new(SortPartition {\n   > -                input: self.input.partitions()?,\n   > -                expr: self.expr.clone(),\n   > -                schema: self.schema(),\n   > -                concurrency: self.concurrency,\n   > -            })),\n   > -        ])\n   > +    /// Get the output partitioning of this plan\n   > +    fn output_partitioning(&self) -> Partitioning {\n   > +        Partitioning::UnknownPartitioning(1)\n   >\n   > To make sure I am following: this is 1 because we pull everything to the\n   > same partition in a sort via Merge.\n   >\n   > \u2014\n   > You are receiving this because you authored the thread.\n   > Reply to this email directly, view it on GitHub\n   > <https://github.com/apache/arrow/pull/8029#pullrequestreview-472977856>,\n   > or unsubscribe\n   > <https://github.com/notifications/unsubscribe-auth/AAHEBRGZMBCN76CQNAE6RDTSCCKF3ANCNFSM4QIKKJ7Q>\n   > .\n   >\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-23T04:40:25.277+0000",
                    "updated": "2020-08-23T04:40:25.277+0000",
                    "started": "2020-08-23T04:40:25.277+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "473605",
                    "issueId": "13316701"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316701/worklog/473635",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #8029:\nURL: https://github.com/apache/arrow/pull/8029#discussion_r475205751\n\n\n\n##########\nFile path: rust/datafusion/src/execution/context.rs\n##########\n@@ -350,72 +350,64 @@ impl ExecutionContext {\n     }\n \n     /// Execute a physical plan and collect the results in memory\n-    pub fn collect(&self, plan: &dyn ExecutionPlan) -> Result<Vec<RecordBatch>> {\n-        let partitions = plan.partitions()?;\n-\n-        match partitions.len() {\n+    pub fn collect(&self, plan: Arc<dyn ExecutionPlan>) -> Result<Vec<RecordBatch>> {\n+        match plan.output_partitioning().partition_count() {\n             0 => Ok(vec![]),\n             1 => {\n-                let it = partitions[0].execute()?;\n+                let it = plan.execute(0)?;\n                 common::collect(it)\n             }\n             _ => {\n                 // merge into a single partition\n                 let plan = MergeExec::new(\n                     plan.schema().clone(),\n-                    partitions,\n+                    plan.clone(),\n                     self.state\n                         .lock()\n                         .expect(\"failed to lock mutex\")\n                         .config\n                         .concurrency,\n                 );\n-                let partitions = plan.partitions()?;\n-                if partitions.len() == 1 {\n-                    common::collect(partitions[0].execute()?)\n-                } else {\n-                    Err(ExecutionError::InternalError(format!(\n-                        \"MergeExec returned {} partitions\",\n-                        partitions.len()\n-                    )))\n-                }\n+                // MergeExec must produce a single partition\n+                assert_eq!(1, plan.output_partitioning().partition_count());\n+                common::collect(plan.execute(0)?)\n             }\n         }\n     }\n \n     /// Execute a query and write the results to a partitioned CSV file\n-    pub fn write_csv(&self, plan: &dyn ExecutionPlan, path: &str) -> Result<()> {\n+    pub fn write_csv(&self, plan: Arc<dyn ExecutionPlan>, path: &str) -> Result<()> {\n         // create directory to contain the CSV files (one per partition)\n         let path = path.to_string();\n         fs::create_dir(&path)?;\n \n-        let threads: Vec<JoinHandle<Result<()>>> = plan\n-            .partitions()?\n-            .iter()\n-            .enumerate()\n-            .map(|(i, p)| {\n-                let p = p.clone();\n-                let path = path.clone();\n-                thread::spawn(move || {\n-                    let filename = format!(\"part-{}.csv\", i);\n-                    let path = Path::new(&path).join(&filename);\n-                    let file = fs::File::create(path)?;\n-                    let mut writer = csv::Writer::new(file);\n-                    let reader = p.execute()?;\n-                    let mut reader = reader.lock().unwrap();\n-                    loop {\n-                        match reader.next_batch() {\n-                            Ok(Some(batch)) => {\n-                                writer.write(&batch)?;\n+        let threads: Vec<JoinHandle<Result<()>>> =\n\nReview comment:\n       Not for this PR, but the \"write to CSV\" might be a good thing to turn into an actual plan node with a logical and execution plan\n\n##########\nFile path: rust/datafusion/src/execution/physical_plan/sort.rs\n##########\n@@ -61,44 +61,28 @@ impl ExecutionPlan for SortExec {\n         self.input.schema().clone()\n     }\n \n-    fn partitions(&self) -> Result<Vec<Arc<dyn Partition>>> {\n-        Ok(vec![\n-            (Arc::new(SortPartition {\n-                input: self.input.partitions()?,\n-                expr: self.expr.clone(),\n-                schema: self.schema(),\n-                concurrency: self.concurrency,\n-            })),\n-        ])\n+    /// Get the output partitioning of this plan\n+    fn output_partitioning(&self) -> Partitioning {\n+        Partitioning::UnknownPartitioning(1)\n\nReview comment:\n       I think it is because the `Sort` execution plan node produces the output in a big single logical chunk (aka you can't produce parts of the output of the sort in parallel), which is perhaps what you are saying\n\n##########\nFile path: rust/datafusion/src/datasource/csv.rs\n##########\n@@ -43,14 +43,15 @@ use std::string::String;\n use std::sync::Arc;\n \n use crate::datasource::TableProvider;\n-use crate::error::Result;\n+use crate::error::{ExecutionError, Result};\n use crate::execution::physical_plan::csv::CsvExec;\n pub use crate::execution::physical_plan::csv::CsvReadOptions;\n-use crate::execution::physical_plan::{ExecutionPlan, Partition};\n+use crate::execution::physical_plan::{common, ExecutionPlan};\n \n /// Represents a CSV file with a provided schema\n pub struct CsvFile {\n-    filename: String,\n+    /// Path to a single CSV file or a directory containing one of more CSV files\n\nReview comment:\n       \ud83d\udc4d this had confused me in the past\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-23T11:22:45.751+0000",
                    "updated": "2020-08-23T11:22:45.751+0000",
                    "started": "2020-08-23T11:22:45.751+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "473635",
                    "issueId": "13316701"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316701/worklog/473655",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on a change in pull request #8029:\nURL: https://github.com/apache/arrow/pull/8029#discussion_r475225864\n\n\n\n##########\nFile path: rust/datafusion/src/execution/physical_plan/sort.rs\n##########\n@@ -61,44 +61,28 @@ impl ExecutionPlan for SortExec {\n         self.input.schema().clone()\n     }\n \n-    fn partitions(&self) -> Result<Vec<Arc<dyn Partition>>> {\n-        Ok(vec![\n-            (Arc::new(SortPartition {\n-                input: self.input.partitions()?,\n-                expr: self.expr.clone(),\n-                schema: self.schema(),\n-                concurrency: self.concurrency,\n-            })),\n-        ])\n+    /// Get the output partitioning of this plan\n+    fn output_partitioning(&self) -> Partitioning {\n+        Partitioning::UnknownPartitioning(1)\n\nReview comment:\n       Yes, that's correct.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-23T14:26:17.368+0000",
                    "updated": "2020-08-23T14:26:17.368+0000",
                    "started": "2020-08-23T14:26:17.368+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "473655",
                    "issueId": "13316701"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316701/worklog/473659",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #8029:\nURL: https://github.com/apache/arrow/pull/8029#issuecomment-678784408\n\n\n   > This is an impressive simplification and improvement. Really great work, @andygrove !\r\n   > \r\n   > I went through it and could not find any issue with it, only benefits.\r\n   > \r\n   > To make sure I understood this:\r\n   > \r\n   >     * scans infer the number of partitions based on the number of files they scan\r\n   > \r\n   >     * the number of partitions is annotated in `Partitioning::UnknownPartitioning(N)`\r\n   > \r\n   >     * the number of partitions is exposed to others via `output_partitioning`\r\n   > \r\n   >     * others use `output_partitioning` to know up to which partition number they need to run against to run through all input partitions.\r\n   > \r\n   > \r\n   > The invariant is that the maximum number that `execute(...)` accepts equals to the number exposed in `output_partitioning`, i.e. if a plan passes through that number, a `panic!` happens.\r\n   \r\n   Yes, your understanding is correct on all of these points.\r\n   \r\n    \r\n   > I could think of an alternative approach where a plan outputs an iterator over partitions, so that others can iterate against (which would avoid us having to guarantee the invariant mentioned above through discipline), but you probably already though through this alternative :)\r\n   \r\n   Typically, we want to try and execute the partitions in parallel, either on separate threads in a single process or in separate processes in a cluster. We may want to use `async` for the execute method in the future.\r\n   \r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-23T14:58:59.464+0000",
                    "updated": "2020-08-23T14:58:59.464+0000",
                    "started": "2020-08-23T14:58:59.464+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "473659",
                    "issueId": "13316701"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316701/worklog/473661",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove closed pull request #8029:\nURL: https://github.com/apache/arrow/pull/8029\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-23T15:06:49.717+0000",
                    "updated": "2020-08-23T15:06:49.717+0000",
                    "started": "2020-08-23T15:06:49.717+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "473661",
                    "issueId": "13316701"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316701/worklog/473680",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove opened a new pull request #8034:\nURL: https://github.com/apache/arrow/pull/8034\n\n\n   This PR adds the first physical optimization rule, to insert explicit MergeExec nodes into the physical plan when operators require a single partition of input (such as GlobalLimitExec, SortExec, HashAggregateExec in final mode).\r\n   \r\n   This removes the merging logic from the operators, making them more easily re-usable in different contexts (such as in a distributed query engine, which could provide its own planner and/or optimization rules).\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-23T18:04:08.626+0000",
                    "updated": "2020-08-23T18:04:08.626+0000",
                    "started": "2020-08-23T18:04:08.625+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "473680",
                    "issueId": "13316701"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316701/worklog/473681",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #8034:\nURL: https://github.com/apache/arrow/pull/8034#issuecomment-678805566\n\n\n   @alamb @jorgecarleitao I'm pretty excited about this PR. This is a good example of how we can write optimizer rules against a trait-based plan.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-23T18:04:51.757+0000",
                    "updated": "2020-08-23T18:04:51.757+0000",
                    "started": "2020-08-23T18:04:51.757+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "473681",
                    "issueId": "13316701"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316701/worklog/473682",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #8034:\nURL: https://github.com/apache/arrow/pull/8034#issuecomment-678805666\n\n\n   https://issues.apache.org/jira/browse/ARROW-9464\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-23T18:05:44.941+0000",
                    "updated": "2020-08-23T18:05:44.941+0000",
                    "started": "2020-08-23T18:05:44.941+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "473682",
                    "issueId": "13316701"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316701/worklog/473683",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on pull request #8034:\nURL: https://github.com/apache/arrow/pull/8034#issuecomment-678807425\n\n\n   It looks fantastic! Super excited to see this!\r\n   \r\n   Gave it a quick look, and my understanding so far:\r\n   \r\n   * Physical nodes have requirements (`required_child_distribution`)\r\n   * Physical nodes can fulfill requirements (`output_partitioning`)\r\n   * The physical optimizer knows which physical nodes fulfill certain requirements (Merge fulfills `Distribution::SinglePartition` so far), and introduces them to fulfill a nodes' requirements, by using `children` to get the node's children and `with_new_children` to re-write the node with new children (that fulfill requirements).\r\n   \r\n   Is this a good overview of this PR (before going into the specifics)?\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-23T18:22:44.864+0000",
                    "updated": "2020-08-23T18:22:44.864+0000",
                    "started": "2020-08-23T18:22:44.863+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "473683",
                    "issueId": "13316701"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316701/worklog/473687",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #8034:\nURL: https://github.com/apache/arrow/pull/8034#issuecomment-678809178\n\n\n   > It looks fantastic! Super excited to see this!\r\n   > \r\n   > Gave it a quick look, and my understanding so far:\r\n   > \r\n   >     * Physical nodes have requirements (`required_child_distribution`)\r\n   > \r\n   >     * Physical nodes can fulfill requirements (`output_partitioning`)\r\n   > \r\n   >     * The physical optimizer knows which physical nodes fulfill certain requirements (Merge fulfills `Distribution::SinglePartition` so far), and introduces them to fulfill a nodes' requirements, by using `children` to get the node's children and `with_new_children` to re-write the node with new children (that fulfill requirements).\r\n   > \r\n   > \r\n   > Is this a good overview of this PR (before going into the specifics)?\r\n   \r\n   Yes, I think that's a good overview. \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-23T18:38:34.668+0000",
                    "updated": "2020-08-23T18:38:34.668+0000",
                    "started": "2020-08-23T18:38:34.667+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "473687",
                    "issueId": "13316701"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316701/worklog/473692",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #8034:\nURL: https://github.com/apache/arrow/pull/8034#discussion_r475253287\n\n\n\n##########\nFile path: rust/datafusion/src/execution/physical_plan/mod.rs\n##########\n@@ -74,6 +85,15 @@ impl Partitioning {\n     }\n }\n \n+/// Distribution schemes\n+#[derive(Debug, Clone)]\n+pub enum Distribution {\n+    /// Unspecified distribution\n\nReview comment:\n       Maybe `/// no distribution is required`?\n\n##########\nFile path: rust/datafusion/src/execution/physical_plan/mod.rs\n##########\n@@ -50,6 +50,17 @@ pub trait ExecutionPlan: Debug + Send + Sync {\n     fn schema(&self) -> SchemaRef;\n     /// Specifies the output partitioning scheme of this plan\n     fn output_partitioning(&self) -> Partitioning;\n+    /// Specifies the data distribution requirements of all the children for this operator\n+    fn required_child_distribution(&self) -> Distribution {\n+        Distribution::UnspecifiedDistribution\n+    }\n+    /// Get the children of this plan\n\nReview comment:\n       Suggestion for docs:\r\n   \r\n   ```\r\n   /// `children` of this plan. This corresponds to all plans that this plan depends on. \r\n   /// This function should return an empty vector for `scans`.\r\n   ```\n\n##########\nFile path: rust/datafusion/src/execution/physical_plan/mod.rs\n##########\n@@ -50,6 +50,17 @@ pub trait ExecutionPlan: Debug + Send + Sync {\n     fn schema(&self) -> SchemaRef;\n     /// Specifies the output partitioning scheme of this plan\n     fn output_partitioning(&self) -> Partitioning;\n+    /// Specifies the data distribution requirements of all the children for this operator\n+    fn required_child_distribution(&self) -> Distribution {\n+        Distribution::UnspecifiedDistribution\n+    }\n+    /// Get the children of this plan\n+    fn children(&self) -> Vec<Arc<dyn ExecutionPlan>>;\n+    /// Replace the children of this execution plan\n+    fn with_new_children(\n\nReview comment:\n       ```\r\n   /// Returns a new plan where all children were replaced by new plans. \r\n   /// The size of `children` must be equal to the size of `ExecutionPlan::children()`.\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-23T19:08:57.567+0000",
                    "updated": "2020-08-23T19:08:57.567+0000",
                    "started": "2020-08-23T19:08:57.567+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "473692",
                    "issueId": "13316701"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316701/worklog/473859",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #8034:\nURL: https://github.com/apache/arrow/pull/8034#discussion_r475537669\n\n\n\n##########\nFile path: rust/datafusion/src/execution/physical_plan/mod.rs\n##########\n@@ -74,6 +85,15 @@ impl Partitioning {\n     }\n }\n \n+/// Distribution schemes\n+#[derive(Debug, Clone)]\n+pub enum Distribution {\n+    /// Unspecified distribution\n\nReview comment:\n       I think \"unspecified\" is more accurate -- specifically the data is distributed around all the partitions, but the optimizer/planner doesn't know *how* it is distributed\n\n##########\nFile path: rust/datafusion/src/execution/physical_plan/parquet.rs\n##########\n@@ -91,11 +91,26 @@ impl ExecutionPlan for ParquetExec {\n         self.schema.clone()\n     }\n \n+    fn children(&self) -> Vec<Arc<dyn ExecutionPlan>> {\n+        // this is a leaf node and has no children\n+        vec![]\n+    }\n+\n     /// Get the output partitioning of this plan\n     fn output_partitioning(&self) -> Partitioning {\n         Partitioning::UnknownPartitioning(self.filenames.len())\n     }\n \n+    fn with_new_children(\n+        &self,\n+        _: Vec<Arc<dyn ExecutionPlan>>,\n+    ) -> Result<Arc<dyn ExecutionPlan>> {\n+        Err(ExecutionError::General(format!(\n\nReview comment:\n       This is fine for this PR, but I think this implementation could actually check that children was empty and then return `self.clone()`.\n\n##########\nFile path: rust/datafusion/src/execution/physical_plan/mod.rs\n##########\n@@ -50,6 +50,17 @@ pub trait ExecutionPlan: Debug + Send + Sync {\n     fn schema(&self) -> SchemaRef;\n     /// Specifies the output partitioning scheme of this plan\n     fn output_partitioning(&self) -> Partitioning;\n+    /// Specifies the data distribution requirements of all the children for this operator\n+    fn required_child_distribution(&self) -> Distribution {\n+        Distribution::UnspecifiedDistribution\n+    }\n+    /// Get the children of this plan\n\nReview comment:\n       Or maybe\r\n   \r\n   ```\r\n   /// `children` of this plan. This corresponds to all plans that provide input to this plan. \r\n   /// This function should return an empty vector for leaf nodes such as `scans`.\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-24T11:44:01.027+0000",
                    "updated": "2020-08-24T11:44:01.027+0000",
                    "started": "2020-08-24T11:44:01.027+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "473859",
                    "issueId": "13316701"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316701/worklog/474098",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #8034:\nURL: https://github.com/apache/arrow/pull/8034#issuecomment-679426900\n\n\n   Thanks for the reviews @alamb and @jorgecarleitao .. I have implemented the suggested and also improved the error handling so we return `Err` results rather than panic if the partitioning is incorrect at execution time.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-25T00:06:06.249+0000",
                    "updated": "2020-08-25T00:06:06.249+0000",
                    "started": "2020-08-25T00:06:06.249+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "474098",
                    "issueId": "13316701"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316701/worklog/474099",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove edited a comment on pull request #8034:\nURL: https://github.com/apache/arrow/pull/8034#issuecomment-679426900\n\n\n   Thanks for the reviews @alamb and @jorgecarleitao .. I have implemented the suggested changes and have also improved the error handling so that we return `Err` results rather than panic if the partitioning is incorrect at execution time.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-25T00:06:30.252+0000",
                    "updated": "2020-08-25T00:06:30.252+0000",
                    "started": "2020-08-25T00:06:30.252+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "474099",
                    "issueId": "13316701"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316701/worklog/474310",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #8034:\nURL: https://github.com/apache/arrow/pull/8034#discussion_r476449126\n\n\n\n##########\nFile path: rust/datafusion/src/execution/physical_plan/planner.rs\n##########\n@@ -61,6 +61,55 @@ impl PhysicalPlanner for DefaultPhysicalPlanner {\n         &self,\n         logical_plan: &LogicalPlan,\n         ctx_state: &ExecutionContextState,\n+    ) -> Result<Arc<dyn ExecutionPlan>> {\n+        let plan = self.create_initial_plan(logical_plan, ctx_state)?;\n+        self.optimize_plan(plan, ctx_state)\n+    }\n+}\n+\n+impl DefaultPhysicalPlanner {\n+    /// Create a physical plan from a logical plan\n+    fn optimize_plan(\n+        &self,\n+        plan: Arc<dyn ExecutionPlan>,\n+        ctx_state: &ExecutionContextState,\n+    ) -> Result<Arc<dyn ExecutionPlan>> {\n+        let children = plan\n+            .children()\n+            .iter()\n+            .map(|child| self.optimize_plan(child.clone(), ctx_state))\n+            .collect::<Result<Vec<_>>>()?;\n+\n+        if children.len() == 0 {\n+            // leaf node, children cannot be replaced\n+            Ok(plan.clone())\n+        } else {\n+            match plan.required_child_distribution() {\n+                Distribution::UnspecifiedDistribution => plan.with_new_children(children),\n+                Distribution::SinglePartition => plan.with_new_children(\n\nReview comment:\n       This is clever -- I like it. \ud83d\udc4d \n\n##########\nFile path: rust/datafusion/src/execution/physical_plan/hash_aggregate.rs\n##########\n@@ -111,6 +123,17 @@ impl ExecutionPlan for HashAggregateExec {\n         self.schema.clone()\n     }\n \n+    fn children(&self) -> Vec<Arc<dyn ExecutionPlan>> {\n+        vec![self.input.clone()]\n+    }\n+\n+    fn required_child_distribution(&self) -> Distribution {\n+        match &self.mode {\n+            AggregateMode::Partial => Distribution::UnspecifiedDistribution,\n\nReview comment:\n       I would think the output distribution is likely the same as the input distribution if the input distribution is on the grouping keys. THe only possibly change here is if the mode is `Partial` and the input distribution is `SinglePartition` so is the output\n\n##########\nFile path: rust/datafusion/src/execution/physical_plan/hash_aggregate.rs\n##########\n@@ -121,21 +144,40 @@ impl ExecutionPlan for HashAggregateExec {\n         partition: usize,\n     ) -> Result<Arc<Mutex<dyn RecordBatchReader + Send + Sync>>> {\n         let input = self.input.execute(partition)?;\n+        let group_expr = self.group_expr.iter().map(|x| x.0.clone()).collect();\n+        let aggr_expr = self.aggr_expr.iter().map(|x| x.0.clone()).collect();\n         if self.group_expr.is_empty() {\n             Ok(Arc::new(Mutex::new(HashAggregateIterator::new(\n                 self.schema.clone(),\n-                self.aggr_expr.clone(),\n+                aggr_expr,\n                 input,\n             ))))\n         } else {\n             Ok(Arc::new(Mutex::new(GroupedHashAggregateIterator::new(\n                 self.schema.clone(),\n-                self.group_expr.clone(),\n-                self.aggr_expr.clone(),\n+                group_expr,\n+                aggr_expr,\n                 input,\n             ))))\n         }\n     }\n+\n+    fn with_new_children(\n+        &self,\n+        children: Vec<Arc<dyn ExecutionPlan>>,\n+    ) -> Result<Arc<dyn ExecutionPlan>> {\n+        match children.len() {\n\nReview comment:\n       I like this pattern of matching child length\n\n##########\nFile path: rust/datafusion/src/execution/physical_plan/projection.rs\n##########\n@@ -32,7 +32,7 @@ use arrow::record_batch::{RecordBatch, RecordBatchReader};\n #[derive(Debug)]\n pub struct ProjectionExec {\n     /// The projection expressions\n\nReview comment:\n       ```suggestion\r\n       /// The projection expressions stored as tuples of (expression, output column name)\r\n   ```\n\n##########\nFile path: rust/datafusion/src/execution/physical_plan/planner.rs\n##########\n@@ -153,33 +202,28 @@ impl PhysicalPlanner for DefaultPhysicalPlanner {\n                     .collect::<Result<Vec<_>>>()?;\n \n                 let initial_aggr = HashAggregateExec::try_new(\n+                    AggregateMode::Partial,\n\nReview comment:\n       An improvement for a subsequent PR would be to only skip the partial aggregate if the input distribution is ` Distribution::SinglePartition`\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-25T13:36:04.622+0000",
                    "updated": "2020-08-25T13:36:04.622+0000",
                    "started": "2020-08-25T13:36:04.622+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "474310",
                    "issueId": "13316701"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316701/worklog/474337",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on a change in pull request #8034:\nURL: https://github.com/apache/arrow/pull/8034#discussion_r476475961\n\n\n\n##########\nFile path: rust/datafusion/src/execution/physical_plan/planner.rs\n##########\n@@ -61,6 +61,55 @@ impl PhysicalPlanner for DefaultPhysicalPlanner {\n         &self,\n         logical_plan: &LogicalPlan,\n         ctx_state: &ExecutionContextState,\n+    ) -> Result<Arc<dyn ExecutionPlan>> {\n+        let plan = self.create_initial_plan(logical_plan, ctx_state)?;\n+        self.optimize_plan(plan, ctx_state)\n+    }\n+}\n+\n+impl DefaultPhysicalPlanner {\n+    /// Create a physical plan from a logical plan\n+    fn optimize_plan(\n+        &self,\n+        plan: Arc<dyn ExecutionPlan>,\n+        ctx_state: &ExecutionContextState,\n+    ) -> Result<Arc<dyn ExecutionPlan>> {\n+        let children = plan\n+            .children()\n+            .iter()\n+            .map(|child| self.optimize_plan(child.clone(), ctx_state))\n+            .collect::<Result<Vec<_>>>()?;\n+\n+        if children.len() == 0 {\n+            // leaf node, children cannot be replaced\n+            Ok(plan.clone())\n+        } else {\n+            match plan.required_child_distribution() {\n+                Distribution::UnspecifiedDistribution => plan.with_new_children(children),\n+                Distribution::SinglePartition => plan.with_new_children(\n\nReview comment:\n       I can't take credit for the cleverness unfortunately, since I stole all of this from Apache Spark. \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-25T14:06:32.622+0000",
                    "updated": "2020-08-25T14:06:32.622+0000",
                    "started": "2020-08-25T14:06:32.622+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "474337",
                    "issueId": "13316701"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 13800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@2f556ea3[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@847f1d1[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3679cbc9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@1876dae[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2694a980[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@78cd9936[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@923265[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3ac2c5c4[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3999a3b5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@2d898999[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3c199757[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@105989f5[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 34200,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Apr 26 13:18:22 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-04-26T13:18:24.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9464/watchers",
            "watchCount": 4,
            "isWatching": false
        },
        "created": "2020-07-14T13:10:14.000+0000",
        "updated": "2021-04-26T13:18:24.000+0000",
        "timeoriginalestimate": null,
        "description": "I would like to propose a refactor of the physical/execution planning based on the experience I have had in implementing distributed execution in Ballista.\r\n\r\nThis will likely need subtasks but here is an overview of the changes I am proposing.\r\nh3. *Introduce physical plan optimization rule to insert \"shuffle\" operators*\r\n\r\nWe should extend the ExecutionPlan trait so that each operator can specify its input and output partitioning needs, and then have an optimization rule that can insert any repartitioning or reordering steps required.\r\n\r\nFor example, these are the methods to be added to ExecutionPlan. This design is based on Apache Spark.\r\n\r\n\u00a0\r\n{code:java}\r\n/// Specifies how data is partitioned across different nodes in the cluster\r\nfn output_partitioning(&self) -> Partitioning {\r\n    Partitioning::UnknownPartitioning(0)\r\n}\r\n\r\n/// Specifies the data distribution requirements of all the children for this operator\r\nfn required_child_distribution(&self) -> Distribution {\r\n    Distribution::UnspecifiedDistribution\r\n}\r\n\r\n/// Specifies how data is ordered in each partition\r\nfn output_ordering(&self) -> Option<Vec<SortOrder>> {\r\n    None\r\n}\r\n\r\n/// Specifies the data distribution requirements of all the children for this operator\r\nfn required_child_ordering(&self) -> Option<Vec<Vec<SortOrder>>> {\r\n    None\r\n}\r\n {code}\r\nA good example of applying this rule would be in the case of hash aggregates where we perform a partial aggregate in parallel across partitions and then coalesce the results and apply a final hash aggregate.\r\n\r\nAnother example would be a SortMergeExec specifying the sort order required for its children.\r\n\r\n\u00a0\r\n\r\n\u00a0",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 13800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] [DataFusion] Physical plan refactor to support optimization rules and more efficient use of threads",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316701/comment/17176414",
                    "id": "17176414",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "body": "Based on recent experience testing query execution with async, I no longer feel that async makes sense for DataFusion. Async is good for network io but not for file io. It is better to have a single thread per partition when executing queries.\r\n\r\nAlso, we can't use async with Parquet currently without launching a dedicated thread per partition which pretty much defeats the point of using async in the first place.\r\n\r\nI believe that we do need the concept of executors and a scheduler in DataFusion, where each executor would run on a dedicated thread. Other projects would then be able to extend this for distributed execution for example.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "created": "2020-08-12T15:19:33.316+0000",
                    "updated": "2020-08-12T15:19:59.595+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316701/comment/17176423",
                    "id": "17176423",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alippai",
                        "name": "alippai",
                        "key": "alippai",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Adam Lippai",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "I think using sync file io is a good compromise, Arrow or Datafusion doesn't perform low-latency or highly concurrent file io, at least not yet.\u00a0\u00a0\r\n\r\nDoes \"It is better to have a single thread per partition when executing queries.\" contradict \"we do need the concept of executors and a scheduler in DataFusion\"?\r\nWhat do you think about my initial concern regarding the number of max threads?\r\nDoes limiting the concurrency or using a threadpool make sense?\r\n\r\nIf I have a partitioned dataset (let's say 1000 or 10k files), each with 1000 columns I should be able to read and process it without spawning this amount of threads _at once_.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alippai",
                        "name": "alippai",
                        "key": "alippai",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Adam Lippai",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2020-08-12T15:33:01.481+0000",
                    "updated": "2020-08-12T15:33:01.481+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316701/comment/17176442",
                    "id": "17176442",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "body": "I did a slightly better job of explaining this in https://issues.apache.org/jira/browse/ARROW-9707\r\n\r\n\"The current threading model is very simple and does not scale. We currently use 1-2 dedicated threads per partition and they all run simultaneously, which is a huge problem if you have more partitions than logical or physical cores.\r\nThis task is to re-implement the threading model so that query execution uses a fixed (configurable) number of threads. Work will be broken down into stages and tasks and each in-process executor (running on a dedicated thread) will process its queue of tasks.\r\n\r\nThis process will be driven by a scheduler.\"",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "created": "2020-08-12T15:58:30.506+0000",
                    "updated": "2020-08-12T15:58:30.506+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316701/comment/17182717",
                    "id": "17182717",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "body": "Issue resolved by pull request 8029\n[https://github.com/apache/arrow/pull/8029]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "created": "2020-08-23T15:06:44.701+0000",
                    "updated": "2020-08-23T15:06:44.701+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316701/comment/17184854",
                    "id": "17184854",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "body": "Issue resolved by pull request 8034\n[https://github.com/apache/arrow/pull/8034]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "created": "2020-08-26T02:14:08.199+0000",
                    "updated": "2020-08-26T02:14:08.199+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316701/comment/17206837",
                    "id": "17206837",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "body": "There are subtasks that are not complete yet. Reopening this for 3.0.0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "created": "2020-10-03T18:25:46.419+0000",
                    "updated": "2020-10-03T18:25:46.419+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316701/comment/17332286",
                    "id": "17332286",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Migrated to github: https://github.com/apache/arrow-datafusion/issues/92",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-04-26T13:18:22.102+0000",
                    "updated": "2021-04-26T13:18:22.102+0000"
                }
            ],
            "maxResults": 7,
            "total": 7,
            "startAt": 0
        },
        "customfield_12311820": "0|z0gquo:",
        "customfield_12314139": null
    }
}