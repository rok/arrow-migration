{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13250411",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250411",
    "key": "ARROW-6219",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12567811",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12567811",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "outwardIssue": {
                    "id": "13250149",
                    "key": "ARROW-6202",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250149",
                    "fields": {
                        "summary": "[Java] Exception in thread \"main\" org.apache.arrow.memory.OutOfMemoryException: Unable to allocate buffer of size 4 due to memory limit. Current allocation: 2147483646",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                            "id": "1",
                            "description": "A problem which impairs or prevents the functions of the product.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                            "name": "Bug",
                            "subtask": false,
                            "avatarId": 21133
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
            "name": "tianchen92",
            "key": "tianchen92",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
            },
            "displayName": "Ji Liu",
            "active": true,
            "timeZone": "Asia/Gaza"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
            "name": "emkornfield@gmail.com",
            "key": "emkornfield@gmail.com",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Micah Kornfield",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
            "name": "emkornfield@gmail.com",
            "key": "emkornfield@gmail.com",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Micah Kornfield",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 34800,
            "total": 34800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 34800,
            "total": 34800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6219/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 63,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250411/worklog/293943",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #5075: ARROW-6219: [Java] Add API for JDBC adapter that can convert less then the full result set at a time\nURL: https://github.com/apache/arrow/pull/5075\n \n \n   Related to [ARROW-6219](https://issues.apache.org/jira/browse/ARROW-6219).\r\n   Somehow we should configure number of rows per batch and either let clients iterate or provide an iterator API.  Otherwise for large result sets we might run out of memory.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-13T15:04:14.502+0000",
                    "updated": "2019-08-13T15:04:14.502+0000",
                    "started": "2019-08-13T15:04:14.501+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "293943",
                    "issueId": "13250411"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250411/worklog/293944",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on issue #5075: ARROW-6219: [Java] Add API for JDBC adapter that can convert less then the full result set at a time\nURL: https://github.com/apache/arrow/pull/5075#issuecomment-520874182\n \n \n   cc @emkornfield \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-13T15:04:33.755+0000",
                    "updated": "2019-08-13T15:04:33.755+0000",
                    "started": "2019-08-13T15:04:33.755+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "293944",
                    "issueId": "13250411"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250411/worklog/294091",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #5075: ARROW-6219: [Java] Add API for JDBC adapter that can convert less then the full result set at a time\nURL: https://github.com/apache/arrow/pull/5075#issuecomment-520958895\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/5075?src=pr&el=h1) Report\n   > Merging [#5075](https://codecov.io/gh/apache/arrow/pull/5075?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/e41ad0d2ccaf96812d902b161d8a0b2b372f1b72?src=pr&el=desc) will **increase** coverage by `2.1%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/5075/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/5075?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #5075      +/-   ##\n   ==========================================\n   + Coverage    87.6%   89.71%    +2.1%     \n   ==========================================\n     Files        1009      670     -339     \n     Lines      144077    99567   -44510     \n     Branches     1418        0    -1418     \n   ==========================================\n   - Hits       126220    89326   -36894     \n   + Misses      17495    10241    -7254     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/5075?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/plasma/thirdparty/ae/ae.c](https://codecov.io/gh/apache/arrow/pull/5075/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGhpcmRwYXJ0eS9hZS9hZS5j) | `70.75% <0%> (-0.95%)` | :arrow_down: |\n   | [python/pyarrow/tests/test\\_parquet.py](https://codecov.io/gh/apache/arrow/pull/5075/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9wYXJxdWV0LnB5) | `96.33% <0%> (-0.07%)` | :arrow_down: |\n   | [r/src/recordbatch.cpp](https://codecov.io/gh/apache/arrow/pull/5075/diff?src=pr&el=tree#diff-ci9zcmMvcmVjb3JkYmF0Y2guY3Bw) | | |\n   | [r/R/Table.R](https://codecov.io/gh/apache/arrow/pull/5075/diff?src=pr&el=tree#diff-ci9SL1RhYmxlLlI=) | | |\n   | [js/src/util/fn.ts](https://codecov.io/gh/apache/arrow/pull/5075/diff?src=pr&el=tree#diff-anMvc3JjL3V0aWwvZm4udHM=) | | |\n   | [go/arrow/array/bufferbuilder.go](https://codecov.io/gh/apache/arrow/pull/5075/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYnVmZmVyYnVpbGRlci5nbw==) | | |\n   | [r/src/symbols.cpp](https://codecov.io/gh/apache/arrow/pull/5075/diff?src=pr&el=tree#diff-ci9zcmMvc3ltYm9scy5jcHA=) | | |\n   | [rust/datafusion/src/execution/projection.rs](https://codecov.io/gh/apache/arrow/pull/5075/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vcHJvamVjdGlvbi5ycw==) | | |\n   | [rust/datafusion/src/execution/filter.rs](https://codecov.io/gh/apache/arrow/pull/5075/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vZmlsdGVyLnJz) | | |\n   | [rust/arrow/src/csv/writer.rs](https://codecov.io/gh/apache/arrow/pull/5075/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvY3N2L3dyaXRlci5ycw==) | | |\n   | ... and [331 more](https://codecov.io/gh/apache/arrow/pull/5075/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/5075?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/5075?src=pr&el=footer). Last update [e41ad0d...f3abaaf](https://codecov.io/gh/apache/arrow/pull/5075?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-13T18:43:56.868+0000",
                    "updated": "2019-08-13T18:43:56.868+0000",
                    "started": "2019-08-13T18:43:56.867+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "294091",
                    "issueId": "13250411"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250411/worklog/294348",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5075: ARROW-6219: [Java] Add API for JDBC adapter that can convert less then the full result set at a time\nURL: https://github.com/apache/arrow/pull/5075#discussion_r313681790\n \n \n\n ##########\n File path: java/adapter/jdbc/src/main/java/org/apache/arrow/adapter/jdbc/ArrowVectorIterator.java\n ##########\n @@ -0,0 +1,81 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.adapter.jdbc;\n+\n+import java.io.IOException;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+\n+import org.apache.arrow.vector.VectorSchemaRoot;\n+import org.apache.arrow.vector.types.pojo.Schema;\n+\n+/**\n+ * VectorSchemaRoot iterator for partially converting JDBC data.\n+ */\n+public class ArrowVectorIterator {\n \n Review comment:\n   should this extend Iterator<VectorSchemaRoot>\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-14T02:17:48.073+0000",
                    "updated": "2019-08-14T02:17:48.073+0000",
                    "started": "2019-08-14T02:17:48.073+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "294348",
                    "issueId": "13250411"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250411/worklog/294350",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #5075: ARROW-6219: [Java] Add API for JDBC adapter that can convert less then the full result set at a time\nURL: https://github.com/apache/arrow/pull/5075#discussion_r313683400\n \n \n\n ##########\n File path: java/adapter/jdbc/src/main/java/org/apache/arrow/adapter/jdbc/ArrowVectorIterator.java\n ##########\n @@ -0,0 +1,81 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.adapter.jdbc;\n+\n+import java.io.IOException;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+\n+import org.apache.arrow.vector.VectorSchemaRoot;\n+import org.apache.arrow.vector.types.pojo.Schema;\n+\n+/**\n+ * VectorSchemaRoot iterator for partially converting JDBC data.\n+ */\n+public class ArrowVectorIterator {\n \n Review comment:\n   The only reason not extend Iterator here is that we should try-catch exception within this class. If you think it's necessary, I could change.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-14T02:28:03.453+0000",
                    "updated": "2019-08-14T02:28:03.453+0000",
                    "started": "2019-08-14T02:28:03.453+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "294350",
                    "issueId": "13250411"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250411/worklog/294372",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5075: ARROW-6219: [Java] Add API for JDBC adapter that can convert less then the full result set at a time\nURL: https://github.com/apache/arrow/pull/5075#discussion_r313684352\n \n \n\n ##########\n File path: java/adapter/jdbc/src/main/java/org/apache/arrow/adapter/jdbc/ArrowVectorIterator.java\n ##########\n @@ -0,0 +1,81 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.adapter.jdbc;\n+\n+import java.io.IOException;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+\n+import org.apache.arrow.vector.VectorSchemaRoot;\n+import org.apache.arrow.vector.types.pojo.Schema;\n+\n+/**\n+ * VectorSchemaRoot iterator for partially converting JDBC data.\n+ */\n+public class ArrowVectorIterator {\n+\n+  private final ResultSet resultSet;\n+  private final JdbcToArrowConfig config;\n+\n+  private final Schema schema;\n+\n+  private final int partialLimit;\n+\n+  /**\n+   * The last vector value count.\n+   */\n+  private int preCount;\n+\n+  /**\n+   * Construct an instance.\n+   */\n+  public ArrowVectorIterator(ResultSet resultSet, JdbcToArrowConfig config) throws SQLException {\n+    this.resultSet = resultSet;\n+    this.config = config;\n+    this.partialLimit = config.getPartialLimit();\n+    this.schema = JdbcToArrowUtils.jdbcToArrowSchema(resultSet.getMetaData(), config);\n+  }\n+\n+  /**\n+   * Whether the {@link ResultSet} has data to read into a new vector.\n+   */\n+  public boolean hasNext() throws SQLException {\n+\n+    // ResultSet does not has API like hasNext, if use next() and previous() to check follow data, user must set\n+    // ResultSet.TYPE_SCROLL_INSENSITIVE otherwise, previous() will throw exception.\n+    // So we use preCount and partialLimit to check follow data which is a little hack.\n+    if (preCount == 0 && resultSet.isBeforeFirst() != resultSet.isAfterLast()) {\n+      return true;\n+    } else if (preCount < partialLimit) {\n+      return false;\n+    } else if (preCount == partialLimit && resultSet.isLast()) {\n+      return false;\n+    }\n+    return true;\n+  }\n+\n+  /**\n+   * Get the next converted vector.\n \n Review comment:\n   Gets the next vector.  The user is responsible for freeing its resource from close.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-14T03:11:59.409+0000",
                    "updated": "2019-08-14T03:11:59.409+0000",
                    "started": "2019-08-14T03:11:59.408+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "294372",
                    "issueId": "13250411"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250411/worklog/294373",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5075: ARROW-6219: [Java] Add API for JDBC adapter that can convert less then the full result set at a time\nURL: https://github.com/apache/arrow/pull/5075#discussion_r313684283\n \n \n\n ##########\n File path: java/adapter/jdbc/src/main/java/org/apache/arrow/adapter/jdbc/ArrowVectorIterator.java\n ##########\n @@ -0,0 +1,81 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.adapter.jdbc;\n+\n+import java.io.IOException;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+\n+import org.apache.arrow.vector.VectorSchemaRoot;\n+import org.apache.arrow.vector.types.pojo.Schema;\n+\n+/**\n+ * VectorSchemaRoot iterator for partially converting JDBC data.\n+ */\n+public class ArrowVectorIterator {\n+\n+  private final ResultSet resultSet;\n+  private final JdbcToArrowConfig config;\n+\n+  private final Schema schema;\n+\n+  private final int partialLimit;\n+\n+  /**\n+   * The last vector value count.\n+   */\n+  private int preCount;\n+\n+  /**\n+   * Construct an instance.\n+   */\n+  public ArrowVectorIterator(ResultSet resultSet, JdbcToArrowConfig config) throws SQLException {\n \n Review comment:\n   I think this code could potentially be cleaner and require less contract on the result set if you made the constructor private and used a static factory method \r\n   \r\n   ```\r\n   ArrowVectorIterator create(resultSet, config)  throws SQLException {\r\n       ArrowVectorIterator iterator = new ArrowVectorIterator(resultSet, config\r\n       try {\r\n       iterator.load();\r\n       return iterator;\r\n       } catch (Exception e) {\r\n          iterator.close()\r\n       }\r\n   }\r\n   \r\n   // Loads the next schema root or null if no more rows are available.\r\n   void load()\r\n   \r\n   bool hasNext() {\r\n       return nextBach != null;\r\n   }\r\n   \r\n   VectorSchemaRoot next() throws SQLException {\r\n       Preconditions.check(hasNext());\r\n       VectorSchemaRoot return = nextBatch;\r\n       try {\r\n         load();\r\n       }  catch (Exception e) {\r\n          return.close();\r\n       }\r\n   \r\n       void close(){\r\n          if (nextBatch != null) {\r\n             nextbatch.close();\r\n          }\r\n       }\r\n   }\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-14T03:11:59.440+0000",
                    "updated": "2019-08-14T03:11:59.440+0000",
                    "started": "2019-08-14T03:11:59.440+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "294373",
                    "issueId": "13250411"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250411/worklog/294374",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5075: ARROW-6219: [Java] Add API for JDBC adapter that can convert less then the full result set at a time\nURL: https://github.com/apache/arrow/pull/5075#discussion_r313686278\n \n \n\n ##########\n File path: java/adapter/jdbc/src/main/java/org/apache/arrow/adapter/jdbc/consumer/CompositeJdbcConsumer.java\n ##########\n @@ -45,6 +53,9 @@ public void consume(ResultSet rs) throws SQLException, IOException {\n         consumer.consume(rs);\n       }\n       readRowCount++;\n+      if (partialRead && readRowCount >= partialLimit) {\n \n Review comment:\n   doesn't this need to be zeoed?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-14T03:11:59.536+0000",
                    "updated": "2019-08-14T03:11:59.536+0000",
                    "started": "2019-08-14T03:11:59.535+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "294374",
                    "issueId": "13250411"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250411/worklog/294375",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5075: ARROW-6219: [Java] Add API for JDBC adapter that can convert less then the full result set at a time\nURL: https://github.com/apache/arrow/pull/5075#discussion_r313688744\n \n \n\n ##########\n File path: java/adapter/jdbc/src/main/java/org/apache/arrow/adapter/jdbc/JdbcToArrow.java\n ##########\n @@ -215,4 +215,165 @@ public static VectorSchemaRoot sqlToArrow(ResultSet resultSet, JdbcToArrowConfig\n     JdbcToArrowUtils.jdbcToArrowVectors(resultSet, root, config);\n     return root;\n   }\n+\n+\n+  /*----------------------------------------------------------------*\n+   |                                                                |\n+   |          partial convert API                        |\n+   |                                                                |\n+   *----------------------------------------------------------------*/\n+\n+  /**\n+   * For the given SQL query, execute and fetch the data from Relational DB and\n+   * convert it to {@link ArrowVectorIterator}.\n+   *\n+   * @param connection Database connection to be used.\n+   * @param query      The DB Query to fetch the data.\n+   * @param allocator  Memory allocator\n+   * @return Arrow Data Objects {@link ArrowVectorIterator}\n+   * @throws SQLException Propagate any SQL Exceptions to the caller after closing any resources opened such as\n+   *                      ResultSet and Statement objects.\n+   */\n+  public static ArrowVectorIterator sqlToArrowVectorIterator(\n \n Review comment:\n   I know you are are trying to keep consistency with the existing API but I think all these overrides are overkill.  I would prefer to just keep the methods that take a ResultSet, and probably just those with signatures:\r\n   (ResultSet, BaseAllocator)\r\n   (ResultSet, Config)\r\n   we should enforce that config requires an allocator.  Any other combinations can be used done with the Builder or added as convinience factor methods on Config.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-14T03:11:59.588+0000",
                    "updated": "2019-08-14T03:11:59.588+0000",
                    "started": "2019-08-14T03:11:59.575+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "294375",
                    "issueId": "13250411"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250411/worklog/294376",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5075: ARROW-6219: [Java] Add API for JDBC adapter that can convert less then the full result set at a time\nURL: https://github.com/apache/arrow/pull/5075#discussion_r313684390\n \n \n\n ##########\n File path: java/adapter/jdbc/src/main/java/org/apache/arrow/adapter/jdbc/ArrowVectorIterator.java\n ##########\n @@ -0,0 +1,81 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.adapter.jdbc;\n+\n+import java.io.IOException;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+\n+import org.apache.arrow.vector.VectorSchemaRoot;\n+import org.apache.arrow.vector.types.pojo.Schema;\n+\n+/**\n+ * VectorSchemaRoot iterator for partially converting JDBC data.\n+ */\n+public class ArrowVectorIterator {\n+\n+  private final ResultSet resultSet;\n+  private final JdbcToArrowConfig config;\n+\n+  private final Schema schema;\n+\n+  private final int partialLimit;\n+\n+  /**\n+   * The last vector value count.\n+   */\n+  private int preCount;\n+\n+  /**\n+   * Construct an instance.\n+   */\n+  public ArrowVectorIterator(ResultSet resultSet, JdbcToArrowConfig config) throws SQLException {\n+    this.resultSet = resultSet;\n+    this.config = config;\n+    this.partialLimit = config.getPartialLimit();\n+    this.schema = JdbcToArrowUtils.jdbcToArrowSchema(resultSet.getMetaData(), config);\n+  }\n+\n+  /**\n+   * Whether the {@link ResultSet} has data to read into a new vector.\n+   */\n+  public boolean hasNext() throws SQLException {\n+\n+    // ResultSet does not has API like hasNext, if use next() and previous() to check follow data, user must set\n+    // ResultSet.TYPE_SCROLL_INSENSITIVE otherwise, previous() will throw exception.\n+    // So we use preCount and partialLimit to check follow data which is a little hack.\n+    if (preCount == 0 && resultSet.isBeforeFirst() != resultSet.isAfterLast()) {\n+      return true;\n+    } else if (preCount < partialLimit) {\n+      return false;\n+    } else if (preCount == partialLimit && resultSet.isLast()) {\n+      return false;\n+    }\n+    return true;\n+  }\n+\n+  /**\n+   * Get the next converted vector.\n+   */\n+  public VectorSchemaRoot next() throws SQLException, IOException {\n+    VectorSchemaRoot root = VectorSchemaRoot.create(schema, config.getAllocator());\n+    JdbcToArrowUtils.jdbcToArrowVectors(resultSet, root, config);\n \n Review comment:\n   memory leak if this throws.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-14T03:11:59.592+0000",
                    "updated": "2019-08-14T03:11:59.592+0000",
                    "started": "2019-08-14T03:11:59.575+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "294376",
                    "issueId": "13250411"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250411/worklog/294377",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5075: ARROW-6219: [Java] Add API for JDBC adapter that can convert less then the full result set at a time\nURL: https://github.com/apache/arrow/pull/5075#discussion_r313686021\n \n \n\n ##########\n File path: java/adapter/jdbc/src/main/java/org/apache/arrow/adapter/jdbc/JdbcToArrowConfig.java\n ##########\n @@ -124,6 +145,20 @@ public boolean shouldIncludeMetadata() {\n     return includeMetadata;\n   }\n \n+  /**\n \n Review comment:\n   can these be combined into a single int value, where -1 indicates read all rows (using a constant field)?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-14T03:11:59.617+0000",
                    "updated": "2019-08-14T03:11:59.617+0000",
                    "started": "2019-08-14T03:11:59.617+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "294377",
                    "issueId": "13250411"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250411/worklog/294378",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5075: ARROW-6219: [Java] Add API for JDBC adapter that can convert less then the full result set at a time\nURL: https://github.com/apache/arrow/pull/5075#discussion_r313686093\n \n \n\n ##########\n File path: java/adapter/jdbc/src/main/java/org/apache/arrow/adapter/jdbc/JdbcToArrowConfigBuilder.java\n ##########\n @@ -33,6 +33,9 @@\n   private Map<Integer, JdbcFieldInfo> arraySubTypesByColumnIndex;\n   private Map<String, JdbcFieldInfo> arraySubTypesByColumnName;\n \n+  private boolean partialRead;\n+  private int partialLimit;\n \n Review comment:\n   this should have a default.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-14T03:11:59.619+0000",
                    "updated": "2019-08-14T03:11:59.619+0000",
                    "started": "2019-08-14T03:11:59.618+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "294378",
                    "issueId": "13250411"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250411/worklog/294379",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5075: ARROW-6219: [Java] Add API for JDBC adapter that can convert less then the full result set at a time\nURL: https://github.com/apache/arrow/pull/5075#discussion_r313689828\n \n \n\n ##########\n File path: java/adapter/jdbc/src/main/java/org/apache/arrow/adapter/jdbc/ArrowVectorIterator.java\n ##########\n @@ -0,0 +1,81 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.adapter.jdbc;\n+\n+import java.io.IOException;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+\n+import org.apache.arrow.vector.VectorSchemaRoot;\n+import org.apache.arrow.vector.types.pojo.Schema;\n+\n+/**\n+ * VectorSchemaRoot iterator for partially converting JDBC data.\n+ */\n+public class ArrowVectorIterator {\n+\n+  private final ResultSet resultSet;\n+  private final JdbcToArrowConfig config;\n+\n+  private final Schema schema;\n+\n+  private final int partialLimit;\n+\n+  /**\n+   * The last vector value count.\n+   */\n+  private int preCount;\n+\n+  /**\n+   * Construct an instance.\n+   */\n+  public ArrowVectorIterator(ResultSet resultSet, JdbcToArrowConfig config) throws SQLException {\n+    this.resultSet = resultSet;\n+    this.config = config;\n+    this.partialLimit = config.getPartialLimit();\n+    this.schema = JdbcToArrowUtils.jdbcToArrowSchema(resultSet.getMetaData(), config);\n+  }\n+\n+  /**\n+   * Whether the {@link ResultSet} has data to read into a new vector.\n+   */\n+  public boolean hasNext() throws SQLException {\n+\n+    // ResultSet does not has API like hasNext, if use next() and previous() to check follow data, user must set\n+    // ResultSet.TYPE_SCROLL_INSENSITIVE otherwise, previous() will throw exception.\n+    // So we use preCount and partialLimit to check follow data which is a little hack.\n+    if (preCount == 0 && resultSet.isBeforeFirst() != resultSet.isAfterLast()) {\n+      return true;\n+    } else if (preCount < partialLimit) {\n+      return false;\n+    } else if (preCount == partialLimit && resultSet.isLast()) {\n+      return false;\n+    }\n+    return true;\n+  }\n+\n+  /**\n+   * Get the next converted vector.\n+   */\n+  public VectorSchemaRoot next() throws SQLException, IOException {\n+    VectorSchemaRoot root = VectorSchemaRoot.create(schema, config.getAllocator());\n+    JdbcToArrowUtils.jdbcToArrowVectors(resultSet, root, config);\n \n Review comment:\n   we should use the consumer here directly to avoid recreating the objects/temporary buffers each time.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-14T03:11:59.697+0000",
                    "updated": "2019-08-14T03:11:59.697+0000",
                    "started": "2019-08-14T03:11:59.696+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "294379",
                    "issueId": "13250411"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250411/worklog/294380",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5075: ARROW-6219: [Java] Add API for JDBC adapter that can convert less then the full result set at a time\nURL: https://github.com/apache/arrow/pull/5075#discussion_r313688872\n \n \n\n ##########\n File path: java/adapter/jdbc/src/main/java/org/apache/arrow/adapter/jdbc/JdbcToArrow.java\n ##########\n @@ -215,4 +215,165 @@ public static VectorSchemaRoot sqlToArrow(ResultSet resultSet, JdbcToArrowConfig\n     JdbcToArrowUtils.jdbcToArrowVectors(resultSet, root, config);\n     return root;\n   }\n+\n+\n+  /*----------------------------------------------------------------*\n+   |                                                                |\n+   |          partial convert API                        |\n+   |                                                                |\n+   *----------------------------------------------------------------*/\n+\n+  /**\n+   * For the given SQL query, execute and fetch the data from Relational DB and\n+   * convert it to {@link ArrowVectorIterator}.\n+   *\n+   * @param connection Database connection to be used.\n+   * @param query      The DB Query to fetch the data.\n+   * @param allocator  Memory allocator\n+   * @return Arrow Data Objects {@link ArrowVectorIterator}\n+   * @throws SQLException Propagate any SQL Exceptions to the caller after closing any resources opened such as\n+   *                      ResultSet and Statement objects.\n+   */\n+  public static ArrowVectorIterator sqlToArrowVectorIterator(\n \n Review comment:\n   We should also probably mark all the methods above as deprecated since they encourage bad practice.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-14T03:11:59.725+0000",
                    "updated": "2019-08-14T03:11:59.725+0000",
                    "started": "2019-08-14T03:11:59.725+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "294380",
                    "issueId": "13250411"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250411/worklog/294381",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5075: ARROW-6219: [Java] Add API for JDBC adapter that can convert less then the full result set at a time\nURL: https://github.com/apache/arrow/pull/5075#discussion_r313689108\n \n \n\n ##########\n File path: java/adapter/jdbc/src/test/java/org/apache/arrow/adapter/jdbc/h2/JdbcToArrowPartialReadTest.java\n ##########\n @@ -0,0 +1,299 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.adapter.jdbc.h2;\n+\n+import static org.apache.arrow.adapter.jdbc.JdbcToArrowTestHelper.*;\n+import static org.junit.Assert.assertArrayEquals;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+\n+import java.io.IOException;\n+import java.math.BigDecimal;\n+import java.sql.SQLException;\n+import java.util.ArrayList;\n+import java.util.Calendar;\n+import java.util.List;\n+\n+import org.apache.arrow.adapter.jdbc.ArrowVectorIterator;\n+import org.apache.arrow.adapter.jdbc.JdbcToArrow;\n+import org.apache.arrow.adapter.jdbc.JdbcToArrowConfig;\n+import org.apache.arrow.adapter.jdbc.JdbcToArrowConfigBuilder;\n+import org.apache.arrow.adapter.jdbc.JdbcToArrowTestHelper;\n+import org.apache.arrow.adapter.jdbc.Table;\n+import org.apache.arrow.memory.RootAllocator;\n+import org.apache.arrow.vector.BigIntVector;\n+import org.apache.arrow.vector.BitVector;\n+import org.apache.arrow.vector.DateMilliVector;\n+import org.apache.arrow.vector.DecimalVector;\n+import org.apache.arrow.vector.Float4Vector;\n+import org.apache.arrow.vector.Float8Vector;\n+import org.apache.arrow.vector.IntVector;\n+import org.apache.arrow.vector.SmallIntVector;\n+import org.apache.arrow.vector.TimeMilliVector;\n+import org.apache.arrow.vector.TimeStampVector;\n+import org.apache.arrow.vector.TinyIntVector;\n+import org.apache.arrow.vector.ValueVector;\n+import org.apache.arrow.vector.VarBinaryVector;\n+import org.apache.arrow.vector.VarCharVector;\n+import org.apache.arrow.vector.VectorSchemaRoot;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Parameterized;\n+\n+@RunWith(Parameterized.class)\n+public class JdbcToArrowPartialReadTest extends JdbcToArrowTest {\n+\n+  /**\n+   * Constructor which populate table object for each test iteration.\n+   *\n+   * @param table Table object\n+   */\n+  public JdbcToArrowPartialReadTest(Table table) {\n+    super(table);\n+  }\n+\n+  @Override\n+  public void testJdbcToArroValues() throws SQLException, IOException {\n+\n+    JdbcToArrowConfig config = new JdbcToArrowConfigBuilder(new RootAllocator(Integer.MAX_VALUE),\n+        Calendar.getInstance()).setPartialRead(true).setPartialLimit(3).build();\n+\n+    ArrowVectorIterator iterator =\n+        JdbcToArrow.sqlToArrowVectorIterator(conn.createStatement().executeQuery(table.getQuery()), config);\n+\n+    validate(iterator);\n+  }\n+\n+  private void validate(ArrowVectorIterator iterator) throws SQLException, IOException {\n+\n+    List<BigIntVector> bigIntVectors = new ArrayList<>();\n+    List<TinyIntVector> tinyIntVectors = new ArrayList<>();\n+    List<IntVector> intVectors = new ArrayList<>();\n+    List<SmallIntVector> smallIntVectors = new ArrayList<>();\n+    List<VarBinaryVector> vectorsForBinary = new ArrayList<>();\n+    List<VarBinaryVector> vectorsForBlob = new ArrayList<>();\n+    List<VarCharVector> vectorsForClob = new ArrayList<>();\n+    List<VarCharVector> vectorsForVarChar = new ArrayList<>();\n+    List<VarCharVector> vectorsForChar = new ArrayList<>();\n+    List<BitVector> vectorsForBit = new ArrayList<>();\n+    List<BitVector> vectorsForBool = new ArrayList<>();\n+    List<DateMilliVector> dateMilliVectors = new ArrayList<>();\n+    List<TimeMilliVector> timeMilliVectors = new ArrayList<>();\n+    List<TimeStampVector> timeStampVectors = new ArrayList<>();\n+    List<DecimalVector> decimalVectors = new ArrayList<>();\n+    List<Float4Vector> float4Vectors = new ArrayList<>();\n+    List<Float8Vector> float8Vectors = new ArrayList<>();\n+\n+    while (iterator.hasNext()) {\n+      VectorSchemaRoot root = iterator.next();\n \n Review comment:\n   doesn't this need to be closed?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-14T03:11:59.728+0000",
                    "updated": "2019-08-14T03:11:59.728+0000",
                    "started": "2019-08-14T03:11:59.727+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "294381",
                    "issueId": "13250411"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250411/worklog/294382",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5075: ARROW-6219: [Java] Add API for JDBC adapter that can convert less then the full result set at a time\nURL: https://github.com/apache/arrow/pull/5075#discussion_r313688807\n \n \n\n ##########\n File path: java/adapter/jdbc/src/main/java/org/apache/arrow/adapter/jdbc/JdbcToArrow.java\n ##########\n @@ -215,4 +215,165 @@ public static VectorSchemaRoot sqlToArrow(ResultSet resultSet, JdbcToArrowConfig\n     JdbcToArrowUtils.jdbcToArrowVectors(resultSet, root, config);\n     return root;\n   }\n+\n+\n+  /*----------------------------------------------------------------*\n+   |                                                                |\n+   |          partial convert API                        |\n+   |                                                                |\n+   *----------------------------------------------------------------*/\n+\n+  /**\n+   * For the given SQL query, execute and fetch the data from Relational DB and\n+   * convert it to {@link ArrowVectorIterator}.\n+   *\n+   * @param connection Database connection to be used.\n+   * @param query      The DB Query to fetch the data.\n+   * @param allocator  Memory allocator\n+   * @return Arrow Data Objects {@link ArrowVectorIterator}\n+   * @throws SQLException Propagate any SQL Exceptions to the caller after closing any resources opened such as\n+   *                      ResultSet and Statement objects.\n+   */\n+  public static ArrowVectorIterator sqlToArrowVectorIterator(\n+      Connection connection,\n+      String query,\n+      BaseAllocator allocator)\n+      throws SQLException, IOException {\n+    Preconditions.checkNotNull(allocator, \"Memory allocator object can not be null\");\n+\n+    JdbcToArrowConfig config =\n+        new JdbcToArrowConfig(allocator, JdbcToArrowUtils.getUtcCalendar());\n+    return sqlToArrowVectorIterator(connection, query, config);\n+  }\n+\n+  /**\n+   * For the given SQL query, execute and fetch the data from Relational DB and convert it to Arrow objects.\n+   *\n+   * @param connection Database connection to be used.\n+   * @param allocator  Memory allocator\n+   * @param calendar   Calendar object to use to handle Date, Time and Timestamp datasets.\n+   * @return Arrow Data Objects {@link ArrowVectorIterator}\n+   * @throws SQLException Propagate any SQL Exceptions to the caller after closing any resources opened such as\n+   *                      ResultSet and Statement objects.\n+   */\n+  public static ArrowVectorIterator sqlToArrowVectorIterator(\n+      Connection connection,\n+      String query,\n+      BaseAllocator allocator,\n+      Calendar calendar) throws SQLException, IOException {\n+\n+    Preconditions.checkNotNull(allocator, \"Memory allocator object can not be null\");\n+    Preconditions.checkNotNull(calendar, \"Calendar object can not be null\");\n+\n+    return sqlToArrowVectorIterator(connection, query, new JdbcToArrowConfig(allocator, calendar));\n+  }\n+\n+  /**\n+   * For the given SQL query, execute and fetch the data from Relational DB and convert it to Arrow objects.\n+   *\n+   * @param connection Database connection to be used.\n+   * @param query      The DB Query to fetch the data.\n+   * @param config     Configuration\n+   * @return Arrow Data Objects {@link ArrowVectorIterator}\n+   * @throws SQLException Propagate any SQL Exceptions to the caller after closing any resources opened such as\n+   *                      ResultSet and Statement objects.\n+   */\n+  public static ArrowVectorIterator sqlToArrowVectorIterator(\n+      Connection connection,\n+      String query,\n+      JdbcToArrowConfig config)\n+      throws SQLException, IOException {\n+    Preconditions.checkNotNull(connection, \"JDBC connection object can not be null\");\n+    Preconditions.checkArgument(query != null && query.length() > 0, \"SQL query can not be null or empty\");\n+\n+    try (Statement stmt = connection.createStatement()) {\n+      return sqlToArrowVectorIterator(stmt.executeQuery(query), config);\n+    }\n+  }\n+\n+  /**\n+   * For the given JDBC {@link ResultSet}, fetch the data from Relational DB and convert it to Arrow objects.\n+   *\n+   * @param resultSet ResultSet to use to fetch the data from underlying database\n+   * @return Arrow Data Objects {@link ArrowVectorIterator}\n+   * @throws SQLException on error\n+   */\n+  public static ArrowVectorIterator sqlToArrowVectorIterator(ResultSet resultSet)\n+      throws SQLException, IOException {\n+    Preconditions.checkNotNull(resultSet, \"JDBC ResultSet object can not be null\");\n+\n+    return sqlToArrowVectorIterator(resultSet, JdbcToArrowUtils.getUtcCalendar());\n+  }\n+\n+  /**\n+   * For the given JDBC {@link ResultSet}, fetch the data from Relational DB and convert it to Arrow objects.\n+   *\n+   * @param resultSet ResultSet to use to fetch the data from underlying database\n+   * @param allocator Memory allocator\n+   * @return Arrow Data Objects {@link ArrowVectorIterator}\n+   * @throws SQLException on error\n+   */\n+  public static ArrowVectorIterator sqlToArrowVectorIterator(\n+      ResultSet resultSet,\n+      BaseAllocator allocator)\n+      throws SQLException, IOException {\n+    Preconditions.checkNotNull(allocator, \"Memory Allocator object can not be null\");\n+\n+    JdbcToArrowConfig config =\n+        new JdbcToArrowConfig(allocator, JdbcToArrowUtils.getUtcCalendar());\n+    return sqlToArrowVectorIterator(resultSet, config);\n+  }\n+\n+  /**\n+   * For the given JDBC {@link ResultSet}, fetch the data from Relational DB and convert it to Arrow objects.\n+   *\n+   * @param resultSet ResultSet to use to fetch the data from underlying database\n+   * @param calendar  Calendar instance to use for Date, Time and Timestamp datasets, or <code>null</code> if none.\n+   * @return Arrow Data Objects {@link ArrowVectorIterator}\n+   * @throws SQLException on error\n+   */\n+  public static ArrowVectorIterator sqlToArrowVectorIterator(\n+      ResultSet resultSet,\n+      Calendar calendar)\n+      throws SQLException, IOException {\n+    Preconditions.checkNotNull(resultSet, \"JDBC ResultSet object can not be null\");\n+    return sqlToArrowVectorIterator(resultSet,\n+        new JdbcToArrowConfig(new RootAllocator(Integer.MAX_VALUE), calendar));\n \n Review comment:\n   I think this leaks memory?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-14T03:11:59.762+0000",
                    "updated": "2019-08-14T03:11:59.762+0000",
                    "started": "2019-08-14T03:11:59.762+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "294382",
                    "issueId": "13250411"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250411/worklog/294395",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #5075: ARROW-6219: [Java] Add API for JDBC adapter that can convert less then the full result set at a time\nURL: https://github.com/apache/arrow/pull/5075#discussion_r313692314\n \n \n\n ##########\n File path: java/adapter/jdbc/src/main/java/org/apache/arrow/adapter/jdbc/JdbcToArrowConfig.java\n ##########\n @@ -124,6 +145,20 @@ public boolean shouldIncludeMetadata() {\n     return includeMetadata;\n   }\n \n+  /**\n \n Review comment:\n   This means only keep partialLimit in config and remove partialRead, right?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-14T03:30:54.078+0000",
                    "updated": "2019-08-14T03:30:54.078+0000",
                    "started": "2019-08-14T03:30:54.077+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "294395",
                    "issueId": "13250411"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250411/worklog/294396",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #5075: ARROW-6219: [Java] Add API for JDBC adapter that can convert less then the full result set at a time\nURL: https://github.com/apache/arrow/pull/5075#discussion_r313692414\n \n \n\n ##########\n File path: java/adapter/jdbc/src/main/java/org/apache/arrow/adapter/jdbc/consumer/CompositeJdbcConsumer.java\n ##########\n @@ -45,6 +53,9 @@ public void consume(ResultSet rs) throws SQLException, IOException {\n         consumer.consume(rs);\n       }\n       readRowCount++;\n+      if (partialRead && readRowCount >= partialLimit) {\n \n Review comment:\n   Ah, what does this mean here? :)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-14T03:31:41.947+0000",
                    "updated": "2019-08-14T03:31:41.947+0000",
                    "started": "2019-08-14T03:31:41.947+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "294396",
                    "issueId": "13250411"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250411/worklog/294406",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5075: ARROW-6219: [Java] Add API for JDBC adapter that can convert less then the full result set at a time\nURL: https://github.com/apache/arrow/pull/5075#discussion_r313693143\n \n \n\n ##########\n File path: java/adapter/jdbc/src/main/java/org/apache/arrow/adapter/jdbc/consumer/CompositeJdbcConsumer.java\n ##########\n @@ -45,6 +53,9 @@ public void consume(ResultSet rs) throws SQLException, IOException {\n         consumer.consume(rs);\n       }\n       readRowCount++;\n+      if (partialRead && readRowCount >= partialLimit) {\n \n Review comment:\n   sorry I meant zeroed.  It probably makes sense to move the actual loop outside of the consumer and maybe into the iterator.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-14T03:37:35.058+0000",
                    "updated": "2019-08-14T03:37:35.058+0000",
                    "started": "2019-08-14T03:37:35.058+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "294406",
                    "issueId": "13250411"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250411/worklog/294407",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5075: ARROW-6219: [Java] Add API for JDBC adapter that can convert less then the full result set at a time\nURL: https://github.com/apache/arrow/pull/5075#discussion_r313693224\n \n \n\n ##########\n File path: java/adapter/jdbc/src/main/java/org/apache/arrow/adapter/jdbc/JdbcToArrowConfig.java\n ##########\n @@ -124,6 +145,20 @@ public boolean shouldIncludeMetadata() {\n     return includeMetadata;\n   }\n \n+  /**\n \n Review comment:\n   Yes.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-14T03:38:15.662+0000",
                    "updated": "2019-08-14T03:38:15.662+0000",
                    "started": "2019-08-14T03:38:15.661+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "294407",
                    "issueId": "13250411"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 34800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@2731c3d4[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1b7d43ee[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@311da235[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@408ef5cb[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4a32ea9b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@d8261b9[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@51526636[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@66c5f17a[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3bfea90b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@256f8864[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@674e3929[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@2e495a9b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 34800,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Aug 16 02:36:17 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-08-16T02:36:17.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6219/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2019-08-13T03:51:15.000+0000",
        "updated": "2019-08-16T02:36:21.000+0000",
        "timeoriginalestimate": null,
        "description": "Somehow we should configure number of rows per batch and either let clients iterate or provide an iterator API.\u00a0 Otherwise for large result sets we might run out of memory.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "9h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 34800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] Add API for JDBC adapter that can convert less then the full result set at a time.",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250411/comment/16905788",
                    "id": "16905788",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
                        "name": "tianchen92",
                        "key": "tianchen92",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
                        },
                        "displayName": "Ji Liu",
                        "active": true,
                        "timeZone": "Asia/Gaza"
                    },
                    "body": "This is what I actually want to do in jdbc and avro adapter, I will take this if you don't mind.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
                        "name": "tianchen92",
                        "key": "tianchen92",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
                        },
                        "displayName": "Ji Liu",
                        "active": true,
                        "timeZone": "Asia/Gaza"
                    },
                    "created": "2019-08-13T03:54:12.382+0000",
                    "updated": "2019-08-13T03:54:12.382+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250411/comment/16905789",
                    "id": "16905789",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
                        "name": "tianchen92",
                        "key": "tianchen92",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
                        },
                        "displayName": "Ji Liu",
                        "active": true,
                        "timeZone": "Asia/Gaza"
                    },
                    "body": "And should we also add APIs for field select?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
                        "name": "tianchen92",
                        "key": "tianchen92",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
                        },
                        "displayName": "Ji Liu",
                        "active": true,
                        "timeZone": "Asia/Gaza"
                    },
                    "created": "2019-08-13T04:00:32.275+0000",
                    "updated": "2019-08-13T04:00:32.275+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250411/comment/16905790",
                    "id": "16905790",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Please go ahead :)\n\n\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-08-13T04:01:00.028+0000",
                    "updated": "2019-08-13T04:01:00.028+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250411/comment/16905805",
                    "id": "16905805",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "For avro yes (probably a separate issue), for jdbc I don't think it is need\nsince the user should have pruned them on the select statement.\n\n\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-08-13T04:29:00.022+0000",
                    "updated": "2019-08-13T04:29:00.022+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250411/comment/16905809",
                    "id": "16905809",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
                        "name": "tianchen92",
                        "key": "tianchen92",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
                        },
                        "displayName": "Ji Liu",
                        "active": true,
                        "timeZone": "Asia/Gaza"
                    },
                    "body": "I have thought about this before, for APIs accept sql, seems users could realize both limit row and field selection by sql. But for APIs accept ResultSet, need it be realized\uff1f\r\n\r\nOr from another aspect, if user could prune fields, I think they could also specify the limit?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
                        "name": "tianchen92",
                        "key": "tianchen92",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
                        },
                        "displayName": "Ji Liu",
                        "active": true,
                        "timeZone": "Asia/Gaza"
                    },
                    "created": "2019-08-13T04:36:37.900+0000",
                    "updated": "2019-08-13T04:37:05.289+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250411/comment/16905814",
                    "id": "16905814",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "I think field selection certainly.\u00a0 I'm not sure about row limit.\u00a0 It some cases it can be a lot more efficient to not have a row-limit then doing repeated queries with row-limit and offset.\u00a0 I'm guessing that\u00a0https://issues.apache.org/jira/browse/ARROW-6202\u00a0is one case where a limit was not being used.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-08-13T04:51:36.616+0000",
                    "updated": "2019-08-13T04:51:36.616+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250411/comment/16908643",
                    "id": "16908643",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 5075\n[https://github.com/apache/arrow/pull/5075]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-08-16T02:36:17.495+0000",
                    "updated": "2019-08-16T02:36:17.495+0000"
                }
            ],
            "maxResults": 7,
            "total": 7,
            "startAt": 0
        },
        "customfield_12311820": "0|z05lgw:",
        "customfield_12314139": null
    }
}