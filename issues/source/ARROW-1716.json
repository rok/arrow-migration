{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13111555",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111555",
    "key": "ARROW-1716",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341352",
                "id": "12341352",
                "name": "0.8.0",
                "archived": false,
                "released": true,
                "releaseDate": "2017-12-18"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341666",
                "id": "12341666",
                "name": "0.7.1",
                "archived": false,
                "released": true,
                "releaseDate": "2017-10-01"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=cpcloud",
            "name": "cpcloud",
            "key": "cpcloud",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=cpcloud&avatarId=31265",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cpcloud&avatarId=31265",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cpcloud&avatarId=31265",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cpcloud&avatarId=31265"
            },
            "displayName": "Phillip Cloud",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=cpcloud",
            "name": "cpcloud",
            "key": "cpcloud",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=cpcloud&avatarId=31265",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cpcloud&avatarId=31265",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cpcloud&avatarId=31265",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cpcloud&avatarId=31265"
            },
            "displayName": "Phillip Cloud",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=cpcloud",
            "name": "cpcloud",
            "key": "cpcloud",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=cpcloud&avatarId=31265",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cpcloud&avatarId=31265",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cpcloud&avatarId=31265",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cpcloud&avatarId=31265"
            },
            "displayName": "Phillip Cloud",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1716/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@708e4390[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@215400e7[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6929cfb9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@68fbb943[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@55d068fb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@72d23c37[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@552171d3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@60a5eb95[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@36e4d0ca[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@55b461a5[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@b452d29[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@44739697[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Nov 07 21:22:29 UTC 2017",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2017-11-07T21:22:28.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1716/watchers",
            "watchCount": 5,
            "isWatching": false
        },
        "created": "2017-10-23T22:36:26.000+0000",
        "updated": "2017-11-07T21:22:29.000+0000",
        "timeoriginalestimate": null,
        "description": "Suprisingly, Java and C++ integration tests pass after ARROW-1588. This hides a bug, because we're writing decimal values as hex encoded bytes.\r\n\r\nC++ and Java compare that the bytes are the same, but because C++ is interpreting everything as little endian after ARROW-1588 and Java is big endian the numbers these bytes represent will be different in their respective systems.\r\n\r\nI propose that instead of encoding DecimaArray/DecimalVector values as hex encoded bytes, we store the integer as a string when writing Arrow DecimalArray/DecimalVector data to JSON. This will allow us to compare that the bytes have the same meaning in both systems.\r\n\r\nThis requires a change to the way Arrow writes JSON.\r\n\r\n[~icexelloss] was extremely helpful in helping me get to the bottom of this.\r\n\r\ncc [~icexelloss] [~wesmckinn] [~jnadeau]\r\n\r\n",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Format/JSON] Use string integer value for Decimals in JSON",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111555/comment/16215980",
                    "id": "16215980",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "+1",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-10-23T22:38:14.368+0000",
                    "updated": "2017-10-23T22:38:14.368+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111555/comment/16216023",
                    "id": "16216023",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=icexelloss",
                        "name": "icexelloss",
                        "key": "icexelloss",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Li Jin",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "+1. Java already has a string constructor for BigInteger\r\n\r\nhttps://docs.oracle.com/javase/6/docs/api/java/math/BigInteger.html#BigInteger%28java.lang.String%29\r\n\r\n[~cpcloud] is this what you have in mind?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=icexelloss",
                        "name": "icexelloss",
                        "key": "icexelloss",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Li Jin",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-23T23:16:30.542+0000",
                    "updated": "2017-10-23T23:16:30.542+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111555/comment/16217258",
                    "id": "16217258",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=cpcloud",
                        "name": "cpcloud",
                        "key": "cpcloud",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=cpcloud&avatarId=31265",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cpcloud&avatarId=31265",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cpcloud&avatarId=31265",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cpcloud&avatarId=31265"
                        },
                        "displayName": "Phillip Cloud",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Yep, that's right.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=cpcloud",
                        "name": "cpcloud",
                        "key": "cpcloud",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=cpcloud&avatarId=31265",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cpcloud&avatarId=31265",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cpcloud&avatarId=31265",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cpcloud&avatarId=31265"
                        },
                        "displayName": "Phillip Cloud",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-10-24T16:58:59.049+0000",
                    "updated": "2017-10-24T16:58:59.049+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111555/comment/16217830",
                    "id": "16217830",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bryanc",
                        "name": "bryanc",
                        "key": "bryanc",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bryanc&avatarId=23479",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bryanc&avatarId=23479",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bryanc&avatarId=23479",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bryanc&avatarId=23479"
                        },
                        "displayName": "Bryan Cutler",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "+1.  For reading values from JSON we can just use the {{scale}} from the schema right?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bryanc",
                        "name": "bryanc",
                        "key": "bryanc",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bryanc&avatarId=23479",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bryanc&avatarId=23479",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bryanc&avatarId=23479",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bryanc&avatarId=23479"
                        },
                        "displayName": "Bryan Cutler",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2017-10-24T22:41:18.519+0000",
                    "updated": "2017-10-24T22:41:18.519+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111555/comment/16217918",
                    "id": "16217918",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=cpcloud",
                        "name": "cpcloud",
                        "key": "cpcloud",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=cpcloud&avatarId=31265",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cpcloud&avatarId=31265",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cpcloud&avatarId=31265",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cpcloud&avatarId=31265"
                        },
                        "displayName": "Phillip Cloud",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Yep. The JSON will contain the unscaled value.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=cpcloud",
                        "name": "cpcloud",
                        "key": "cpcloud",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=cpcloud&avatarId=31265",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cpcloud&avatarId=31265",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cpcloud&avatarId=31265",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cpcloud&avatarId=31265"
                        },
                        "displayName": "Phillip Cloud",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-10-25T00:22:08.839+0000",
                    "updated": "2017-10-25T00:22:08.839+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111555/comment/16224119",
                    "id": "16224119",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud opened a new pull request #1267: WIP: ARROW-1716: [Format/JSON] Use string integer value for Decimals in JSON\nURL: https://github.com/apache/arrow/pull/1267\n \n \n   This PR closes a number of JIRAs:\n   \n   * [ARROW-1716](https://issues.apache.org/jira/browse/ARROW-1716)\n   * [ARROW-1749: [C++] Handle range of Decimal128 values that require 39 digits to be displayed](https://issues.apache.org/jira/browse/ARROW-1749)\n   * [ARROW-1750: [C++] Remove the need for arrow/util/random.h](https://issues.apache.org/jira/browse/ARROW-1750)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-29T18:09:40.598+0000",
                    "updated": "2017-10-29T18:09:40.598+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111555/comment/16225985",
                    "id": "16225985",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "BryanCutler commented on a change in pull request #1267: ARROW-1716: [Format/JSON] Use string integer value for Decimals in JSON\nURL: https://github.com/apache/arrow/pull/1267#discussion_r147862847\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/file/json/JsonFileReader.java\n ##########\n @@ -332,9 +334,10 @@ private void setValueFromParser(ValueVector valueVector, int i) throws IOExcepti\n         ((Float8Vector) valueVector).getMutator().set(i, parser.readValueAs(Double.class));\n         break;\n       case DECIMAL: {\n-          DecimalVector decimalVector = ((DecimalVector) valueVector);\n-          byte[] value = decodeHexSafe(parser.readValueAs(String.class));\n-          DecimalUtility.writeByteArrayToArrowBuf(value, decimalVector.getBuffer(), i);\n+          DecimalVector decimalVector = (DecimalVector) valueVector;\n+          BigInteger integerValue = new BigInteger(parser.readValueAs(String.class));\n+          BigDecimal decimalValue = new BigDecimal(integerValue, 0);\n \n Review comment:\n   Could you add a note that the scale won't be used when writing to the ArrowBuf?  Also, I think you could just use `BigDecimal(integerValue)` to make an unscaled value\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-30T23:37:04.693+0000",
                    "updated": "2017-10-30T23:37:04.693+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111555/comment/16226054",
                    "id": "16226054",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on a change in pull request #1267: ARROW-1716: [Format/JSON] Use string integer value for Decimals in JSON\nURL: https://github.com/apache/arrow/pull/1267#discussion_r147871768\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/file/json/JsonFileReader.java\n ##########\n @@ -332,9 +334,10 @@ private void setValueFromParser(ValueVector valueVector, int i) throws IOExcepti\n         ((Float8Vector) valueVector).getMutator().set(i, parser.readValueAs(Double.class));\n         break;\n       case DECIMAL: {\n-          DecimalVector decimalVector = ((DecimalVector) valueVector);\n-          byte[] value = decodeHexSafe(parser.readValueAs(String.class));\n-          DecimalUtility.writeByteArrayToArrowBuf(value, decimalVector.getBuffer(), i);\n+          DecimalVector decimalVector = (DecimalVector) valueVector;\n+          BigInteger integerValue = new BigInteger(parser.readValueAs(String.class));\n+          BigDecimal decimalValue = new BigDecimal(integerValue, 0);\n \n Review comment:\n   Yep will do.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-31T00:40:07.032+0000",
                    "updated": "2017-10-31T00:40:07.032+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111555/comment/16226057",
                    "id": "16226057",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on issue #1267: ARROW-1716: [Format/JSON] Use string integer value for Decimals in JSON\nURL: https://github.com/apache/arrow/pull/1267#issuecomment-340626088\n \n \n   @BryanCutler Yep, that's right. The integration tests are currently failing. Can you help me out with making the changes to the Java codebase required to get the integration tests working again? I'm happy to keep digging, but this will go much faster if someone familiar with the Java side of things can give me a hand.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-31T00:41:37.463+0000",
                    "updated": "2017-10-31T00:41:37.463+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111555/comment/16226072",
                    "id": "16226072",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "BryanCutler commented on issue #1267: ARROW-1716: [Format/JSON] Use string integer value for Decimals in JSON\nURL: https://github.com/apache/arrow/pull/1267#issuecomment-340628007\n \n \n   Sure, I can look into it tomorrow\n   \n   On Oct 30, 2017 5:41 PM, \"Phillip Cloud\" <notifications@github.com> wrote:\n   \n   > @BryanCutler <https://github.com/bryancutler> Yep, that's right. The\n   > integration tests are currently failing. Can you help me out with making\n   > the changes to the Java codebase required to get the integration tests\n   > working again? I'm happy to keep digging, but this will go much faster if\n   > someone familiar with the Java side of things can give me a hand.\n   >\n   > \u2014\n   > You are receiving this because you were mentioned.\n   > Reply to this email directly, view it on GitHub\n   > <https://github.com/apache/arrow/pull/1267#issuecomment-340626088>, or mute\n   > the thread\n   > <https://github.com/notifications/unsubscribe-auth/AEUwdevvzpfRLzWUGuy0I5UPf1CaJUeQks5sxmzDgaJpZM4QKaYg>\n   > .\n   >\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-31T00:55:10.257+0000",
                    "updated": "2017-10-31T00:55:10.257+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111555/comment/16226073",
                    "id": "16226073",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on issue #1267: ARROW-1716: [Format/JSON] Use string integer value for Decimals in JSON\nURL: https://github.com/apache/arrow/pull/1267#issuecomment-340628187\n \n \n   @cpcloud I think either @BryanCutler or I can work with you tomorrow. @BryanCutler feel free to take a look, if you need me to take this let me know.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-31T00:56:22.340+0000",
                    "updated": "2017-10-31T00:56:22.340+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111555/comment/16227186",
                    "id": "16227186",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on issue #1267: ARROW-1716: [Format/JSON] Use string integer value for Decimals in JSON\nURL: https://github.com/apache/arrow/pull/1267#issuecomment-340845253\n \n \n   @BryanCutler @icexelloss Thanks guys.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-31T17:46:00.739+0000",
                    "updated": "2017-10-31T17:46:00.739+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111555/comment/16227484",
                    "id": "16227484",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "BryanCutler commented on issue #1267: ARROW-1716: [Format/JSON] Use string integer value for Decimals in JSON\nURL: https://github.com/apache/arrow/pull/1267#issuecomment-340898818\n \n \n   @cpcloud I create https://github.com/cpcloud/arrow/pull/1\r\n   Not sure if it's the most optimized way to swap bytes, but integration tests are passing for me\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-31T20:36:22.043+0000",
                    "updated": "2017-10-31T20:36:22.043+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111555/comment/16227485",
                    "id": "16227485",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "BryanCutler commented on issue #1267: ARROW-1716: [Format/JSON] Use string integer value for Decimals in JSON\nURL: https://github.com/apache/arrow/pull/1267#issuecomment-340898818\n \n \n   @cpcloud I created https://github.com/cpcloud/arrow/pull/1\r\n   Not sure if it's the most optimized way to swap bytes, but integration tests are passing for me\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-31T20:36:28.140+0000",
                    "updated": "2017-10-31T20:36:28.140+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111555/comment/16233617",
                    "id": "16233617",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1267: ARROW-1716: [Format/JSON] Use string integer value for Decimals in JSON\nURL: https://github.com/apache/arrow/pull/1267#discussion_r148177712\n \n \n\n ##########\n File path: cpp/src/arrow/test-util.h\n ##########\n @@ -81,25 +83,20 @@ namespace test {\n \n template <typename T>\n void randint(int64_t N, T lower, T upper, std::vector<T>* out) {\n-  Random rng(random_seed());\n-  uint64_t draw;\n-  uint64_t span = upper - lower;\n-  T val;\n-  for (int64_t i = 0; i < N; ++i) {\n-    draw = rng.Uniform64(span);\n-    val = static_cast<T>(draw + lower);\n-    out->push_back(val);\n-  }\n+  const int random_seed = 0;\n+  std::mt19937 gen(random_seed);\n \n Review comment:\n   Random or static seed?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-01T03:57:59.008+0000",
                    "updated": "2017-11-01T03:57:59.008+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111555/comment/16233618",
                    "id": "16233618",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1267: ARROW-1716: [Format/JSON] Use string integer value for Decimals in JSON\nURL: https://github.com/apache/arrow/pull/1267#discussion_r148177700\n \n \n\n ##########\n File path: cpp/src/arrow/test-util.h\n ##########\n @@ -143,55 +139,161 @@ static inline Status GetBitmapFromVector(const std::vector<T>& is_valid,\n // Sets approximately pct_null of the first n bytes in null_bytes to zero\n // and the rest to non-zero (true) values.\n static inline void random_null_bytes(int64_t n, double pct_null, uint8_t* null_bytes) {\n-  Random rng(random_seed());\n-  for (int64_t i = 0; i < n; ++i) {\n-    null_bytes[i] = rng.NextDoubleFraction() > pct_null;\n-  }\n+  const int random_seed = 0;\n+  std::mt19937 gen(random_seed);\n+  std::uniform_real_distribution<double> d(0.0, 1.0);\n+  std::generate(null_bytes, null_bytes + n,\n+                [&d, &gen, &pct_null] { return d(gen) > pct_null; });\n }\n \n static inline void random_is_valid(int64_t n, double pct_null,\n                                    std::vector<bool>* is_valid) {\n-  Random rng(random_seed());\n-  for (int64_t i = 0; i < n; ++i) {\n-    is_valid->push_back(rng.NextDoubleFraction() > pct_null);\n-  }\n+  const int random_seed = 0;\n+  std::mt19937 gen(random_seed);\n \n Review comment:\n   Seed\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-01T03:57:59.028+0000",
                    "updated": "2017-11-01T03:57:59.028+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111555/comment/16233619",
                    "id": "16233619",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1267: ARROW-1716: [Format/JSON] Use string integer value for Decimals in JSON\nURL: https://github.com/apache/arrow/pull/1267#discussion_r148177501\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/json-internal.cc\n ##########\n @@ -1094,6 +1108,32 @@ class ArrayReader {\n   }\n \n   template <typename T>\n+  typename std::enable_if<std::is_base_of<DecimalType, T>::value, Status>::type Visit(\n+      const T& type) {\n+    typename TypeTraits<T>::BuilderType builder(type_, pool_);\n+\n+    const auto& json_data = obj_->FindMember(\"DATA\");\n+    RETURN_NOT_ARRAY(\"DATA\", json_data, *obj_);\n+\n+    const auto& json_data_arr = json_data->value.GetArray();\n+\n+    DCHECK_EQ(static_cast<int32_t>(json_data_arr.Size()), length_);\n+\n+    for (int i = 0; i < length_; ++i) {\n+      if (!is_valid_[i]) {\n+        RETURN_NOT_OK(builder.AppendNull());\n+        continue;\n+      }\n+\n+      const rj::Value& val = json_data_arr[i];\n+      DCHECK(val.IsString()) << \"JSON value is not a string\";\n+      const Decimal128 value(val.GetString());\n \n Review comment:\n   Can this fail?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-01T03:57:59.046+0000",
                    "updated": "2017-11-01T03:57:59.046+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111555/comment/16233620",
                    "id": "16233620",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1267: ARROW-1716: [Format/JSON] Use string integer value for Decimals in JSON\nURL: https://github.com/apache/arrow/pull/1267#discussion_r148177691\n \n \n\n ##########\n File path: cpp/src/arrow/test-util.h\n ##########\n @@ -143,55 +139,161 @@ static inline Status GetBitmapFromVector(const std::vector<T>& is_valid,\n // Sets approximately pct_null of the first n bytes in null_bytes to zero\n // and the rest to non-zero (true) values.\n static inline void random_null_bytes(int64_t n, double pct_null, uint8_t* null_bytes) {\n-  Random rng(random_seed());\n-  for (int64_t i = 0; i < n; ++i) {\n-    null_bytes[i] = rng.NextDoubleFraction() > pct_null;\n-  }\n+  const int random_seed = 0;\n+  std::mt19937 gen(random_seed);\n \n Review comment:\n   Use a random seed here? Or add a seed option to the function\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-01T03:57:59.117+0000",
                    "updated": "2017-11-01T03:57:59.117+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111555/comment/16233647",
                    "id": "16233647",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on a change in pull request #1267: ARROW-1716: [Format/JSON] Use string integer value for Decimals in JSON\nURL: https://github.com/apache/arrow/pull/1267#discussion_r148181414\n \n \n\n ##########\n File path: cpp/src/arrow/test-util.h\n ##########\n @@ -81,25 +83,20 @@ namespace test {\n \n template <typename T>\n void randint(int64_t N, T lower, T upper, std::vector<T>* out) {\n-  Random rng(random_seed());\n-  uint64_t draw;\n-  uint64_t span = upper - lower;\n-  T val;\n-  for (int64_t i = 0; i < N; ++i) {\n-    draw = rng.Uniform64(span);\n-    val = static_cast<T>(draw + lower);\n-    out->push_back(val);\n-  }\n+  const int random_seed = 0;\n+  std::mt19937 gen(random_seed);\n \n Review comment:\n   This was originally calling the `random_seed()` function which just returned zero. I can add a seed parameter.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-01T04:44:00.950+0000",
                    "updated": "2017-11-01T04:44:00.950+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111555/comment/16234535",
                    "id": "16234535",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on issue #1267: ARROW-1716: [Format/JSON] Use string integer value for Decimals in JSON\nURL: https://github.com/apache/arrow/pull/1267#issuecomment-341198003\n \n \n   @wesm Would you mind if I address the seed parameter in a follow up PR? There's already a bunch of changes in this PR and I'd rather deal with any change in test behavior after this is merged in.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-01T18:32:38.698+0000",
                    "updated": "2017-11-01T18:32:38.698+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111555/comment/16234735",
                    "id": "16234735",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1267: ARROW-1716: [Format/JSON] Use string integer value for Decimals in JSON\nURL: https://github.com/apache/arrow/pull/1267#issuecomment-341238921\n \n \n   Sure, no worries about the seed\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-01T20:52:53.513+0000",
                    "updated": "2017-11-01T20:52:53.513+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111555/comment/16236936",
                    "id": "16236936",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on a change in pull request #1267: ARROW-1716: [Format/JSON] Use string integer value for Decimals in JSON\nURL: https://github.com/apache/arrow/pull/1267#discussion_r148698208\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/json-internal.cc\n ##########\n @@ -1094,6 +1108,32 @@ class ArrayReader {\n   }\n \n   template <typename T>\n+  typename std::enable_if<std::is_base_of<DecimalType, T>::value, Status>::type Visit(\n+      const T& type) {\n+    typename TypeTraits<T>::BuilderType builder(type_, pool_);\n+\n+    const auto& json_data = obj_->FindMember(\"DATA\");\n+    RETURN_NOT_ARRAY(\"DATA\", json_data, *obj_);\n+\n+    const auto& json_data_arr = json_data->value.GetArray();\n+\n+    DCHECK_EQ(static_cast<int32_t>(json_data_arr.Size()), length_);\n+\n+    for (int i = 0; i < length_; ++i) {\n+      if (!is_valid_[i]) {\n+        RETURN_NOT_OK(builder.AppendNull());\n+        continue;\n+      }\n+\n+      const rj::Value& val = json_data_arr[i];\n+      DCHECK(val.IsString()) << \"JSON value is not a string\";\n+      const Decimal128 value(val.GetString());\n \n Review comment:\n   I'll use the `Decimal::FromString` static method here since that'll return `Status`.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-03T01:33:16.342+0000",
                    "updated": "2017-11-03T01:33:16.342+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111555/comment/16238491",
                    "id": "16238491",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on issue #1267: WIP: ARROW-1716: [Format/JSON] Use string integer value for Decimals in JSON\nURL: https://github.com/apache/arrow/pull/1267#issuecomment-341841391\n \n \n   I found some bugs here, so marking as WIP. I'm going to put up separate PRs to fix the issues before merging this in.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-03T22:20:38.926+0000",
                    "updated": "2017-11-03T22:20:38.926+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111555/comment/16238492",
                    "id": "16238492",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on issue #1267: WIP: ARROW-1716: [Format/JSON] Use string integer value for Decimals in JSON\nURL: https://github.com/apache/arrow/pull/1267#issuecomment-341841565\n \n \n   Good news is that we should be able to print the full range of values that fit into 16 bytes, including those that require more than 38 decimal digits to be displayed.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-03T22:21:38.362+0000",
                    "updated": "2017-11-03T22:21:38.362+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111555/comment/16241428",
                    "id": "16241428",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1267: ARROW-1716: [Format/JSON] Use string integer value for Decimals in JSON\nURL: https://github.com/apache/arrow/pull/1267#issuecomment-342364526\n \n \n   Rebase this? Then this should be good\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-07T03:26:15.180+0000",
                    "updated": "2017-11-07T03:26:15.180+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111555/comment/16242906",
                    "id": "16242906",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 1267\n[https://github.com/apache/arrow/pull/1267]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-11-07T21:22:28.259+0000",
                    "updated": "2017-11-07T21:22:28.259+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111555/comment/16242907",
                    "id": "16242907",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm closed pull request #1267: ARROW-1716: [Format/JSON] Use string integer value for Decimals in JSON\nURL: https://github.com/apache/arrow/pull/1267\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/ipc/ipc-read-write-test.cc b/cpp/src/arrow/ipc/ipc-read-write-test.cc\nindex 6f2f5cf85..40cd3f0ee 100644\n--- a/cpp/src/arrow/ipc/ipc-read-write-test.cc\n+++ b/cpp/src/arrow/ipc/ipc-read-write-test.cc\n@@ -727,7 +727,7 @@ TEST_F(TestTensorRoundTrip, BasicRoundtrip) {\n   int64_t size = 24;\n \n   std::vector<int64_t> values;\n-  test::randint<int64_t>(size, 0, 100, &values);\n+  test::randint(size, 0, 100, &values);\n \n   auto data = test::GetBufferFromVector(values);\n \n@@ -748,7 +748,7 @@ TEST_F(TestTensorRoundTrip, NonContiguous) {\n   ASSERT_OK(io::MemoryMapFixture::InitMemoryMap(kBufferSize, path, &mmap_));\n \n   std::vector<int64_t> values;\n-  test::randint<int64_t>(24, 0, 100, &values);\n+  test::randint(24, 0, 100, &values);\n \n   auto data = test::GetBufferFromVector(values);\n   Tensor tensor(int64(), data, {4, 3}, {48, 16});\ndiff --git a/cpp/src/arrow/ipc/json-internal.cc b/cpp/src/arrow/ipc/json-internal.cc\nindex 025f6c276..c1c0661d6 100644\n--- a/cpp/src/arrow/ipc/json-internal.cc\n+++ b/cpp/src/arrow/ipc/json-internal.cc\n@@ -33,6 +33,7 @@\n #include \"arrow/type.h\"\n #include \"arrow/type_traits.h\"\n #include \"arrow/util/bit-util.h\"\n+#include \"arrow/util/decimal.h\"\n #include \"arrow/util/logging.h\"\n #include \"arrow/util/string.h\"\n #include \"arrow/visitor_inline.h\"\n@@ -448,7 +449,8 @@ class ArrayWriter {\n   }\n \n   void WriteDataValues(const FixedSizeBinaryArray& arr) {\n-    int32_t width = arr.byte_width();\n+    const int32_t width = arr.byte_width();\n+\n     for (int64_t i = 0; i < arr.length(); ++i) {\n       const uint8_t* buf = arr.GetValue(i);\n       std::string encoded = HexEncode(buf, width);\n@@ -456,6 +458,13 @@ class ArrayWriter {\n     }\n   }\n \n+  void WriteDataValues(const DecimalArray& arr) {\n+    for (int64_t i = 0; i < arr.length(); ++i) {\n+      const Decimal128 value(arr.GetValue(i));\n+      writer_->String(value.ToIntegerString());\n+    }\n+  }\n+\n   void WriteDataValues(const BooleanArray& arr) {\n     for (int i = 0; i < arr.length(); ++i) {\n       writer_->Bool(arr.Value(i));\n@@ -1053,7 +1062,9 @@ class ArrayReader {\n   }\n \n   template <typename T>\n-  typename std::enable_if<std::is_base_of<FixedSizeBinaryType, T>::value, Status>::type\n+  typename std::enable_if<std::is_base_of<FixedSizeBinaryType, T>::value &&\n+                              !std::is_base_of<DecimalType, T>::value,\n+                          Status>::type\n   Visit(const T& type) {\n     typename TypeTraits<T>::BuilderType builder(type_, pool_);\n \n@@ -1073,22 +1084,52 @@ class ArrayReader {\n     for (int i = 0; i < length_; ++i) {\n       if (!is_valid_[i]) {\n         RETURN_NOT_OK(builder.AppendNull());\n-        continue;\n-      }\n+      } else {\n+        const rj::Value& val = json_data_arr[i];\n+        DCHECK(val.IsString())\n+            << \"Found non-string JSON value when parsing FixedSizeBinary value\";\n+        std::string hex_string = val.GetString();\n+        if (static_cast<int32_t>(hex_string.size()) != byte_width * 2) {\n+          DCHECK(false) << \"Expected size: \" << byte_width * 2\n+                        << \" got: \" << hex_string.size();\n+        }\n+        const char* hex_data = hex_string.c_str();\n \n-      const rj::Value& val = json_data_arr[i];\n-      DCHECK(val.IsString());\n-      std::string hex_string = val.GetString();\n-      if (static_cast<int32_t>(hex_string.size()) != byte_width * 2) {\n-        DCHECK(false) << \"Expected size: \" << byte_width * 2\n-                      << \" got: \" << hex_string.size();\n+        for (int32_t j = 0; j < byte_width; ++j) {\n+          RETURN_NOT_OK(ParseHexValue(hex_data + j * 2, &byte_buffer_data[j]));\n+        }\n+        RETURN_NOT_OK(builder.Append(byte_buffer_data));\n       }\n-      const char* hex_data = hex_string.c_str();\n+    }\n+    return builder.Finish(&result_);\n+  }\n+\n+  template <typename T>\n+  typename std::enable_if<std::is_base_of<DecimalType, T>::value, Status>::type Visit(\n+      const T& type) {\n+    typename TypeTraits<T>::BuilderType builder(type_, pool_);\n+\n+    const auto& json_data = obj_->FindMember(\"DATA\");\n+    RETURN_NOT_ARRAY(\"DATA\", json_data, *obj_);\n \n-      for (int32_t j = 0; j < byte_width; ++j) {\n-        RETURN_NOT_OK(ParseHexValue(hex_data + j * 2, &byte_buffer_data[j]));\n+    const auto& json_data_arr = json_data->value.GetArray();\n+\n+    DCHECK_EQ(static_cast<int32_t>(json_data_arr.Size()), length_);\n+\n+    for (int i = 0; i < length_; ++i) {\n+      if (!is_valid_[i]) {\n+        RETURN_NOT_OK(builder.AppendNull());\n+      } else {\n+        const rj::Value& val = json_data_arr[i];\n+        DCHECK(val.IsString())\n+            << \"Found non-string JSON value when parsing Decimal128 value\";\n+        DCHECK_GT(val.GetStringLength(), 0)\n+            << \"Empty string found when parsing Decimal128 value\";\n+\n+        Decimal128 value;\n+        RETURN_NOT_OK(Decimal128::FromString(val.GetString(), &value));\n+        RETURN_NOT_OK(builder.Append(value));\n       }\n-      RETURN_NOT_OK(builder.Append(byte_buffer_data));\n     }\n     return builder.Finish(&result_);\n   }\ndiff --git a/cpp/src/arrow/ipc/test-common.h b/cpp/src/arrow/ipc/test-common.h\nindex b2137b7db..91023db48 100644\n--- a/cpp/src/arrow/ipc/test-common.h\n+++ b/cpp/src/arrow/ipc/test-common.h\n@@ -671,8 +671,11 @@ Status MakeFWBinary(std::shared_ptr<RecordBatch>* out) {\n }\n \n Status MakeDecimal(std::shared_ptr<RecordBatch>* out) {\n-  auto f0 = field(\"f0\", decimal(19, 4));\n-  auto schema = ::arrow::schema({f0, f0});\n+  constexpr int kDecimalPrecision = 38;\n+  auto type = decimal(kDecimalPrecision, 4);\n+  auto f0 = field(\"f0\", type);\n+  auto f1 = field(\"f1\", type);\n+  auto schema = ::arrow::schema({f0, f1});\n \n   constexpr int kDecimalSize = 16;\n   constexpr int length = 10;\n@@ -682,7 +685,7 @@ Status MakeDecimal(std::shared_ptr<RecordBatch>* out) {\n \n   RETURN_NOT_OK(AllocateBuffer(default_memory_pool(), kDecimalSize * length, &data));\n \n-  test::random_bytes(kDecimalSize * length, 0, data->mutable_data());\n+  test::random_decimals(length, 1, kDecimalPrecision, data->mutable_data());\n   test::random_null_bytes(length, 0.1, is_valid_bytes.data());\n \n   RETURN_NOT_OK(BitUtil::BytesToBits(is_valid_bytes, default_memory_pool(), &is_valid));\n@@ -690,10 +693,10 @@ Status MakeDecimal(std::shared_ptr<RecordBatch>* out) {\n   auto a1 = std::make_shared<DecimalArray>(f0->type(), length, data, is_valid,\n                                            kUnknownNullCount);\n \n-  auto a2 = std::make_shared<DecimalArray>(f0->type(), length, data);\n+  auto a2 = std::make_shared<DecimalArray>(f1->type(), length, data);\n \n   ArrayVector arrays = {a1, a2};\n-  *out = std::make_shared<RecordBatch>(schema, a1->length(), arrays);\n+  *out = std::make_shared<RecordBatch>(schema, length, arrays);\n   return Status::OK();\n }\n \ndiff --git a/integration/integration_test.py b/integration/integration_test.py\nindex 59a1de5a4..205176ecc 100644\n--- a/integration/integration_test.py\n+++ b/integration/integration_test.py\n@@ -65,24 +65,16 @@ def rands(nchars):\n     return ''.join(np.random.choice(RANDS_CHARS, nchars))\n \n \n-if six.PY2:\n-    def frombytes(o):\n-        return o\n+def tobytes(o):\n+    if isinstance(o, six.text_type):\n+        return o.encode('utf8')\n+    return o\n \n-    def tobytes(o):\n-        if isinstance(o, unicode):\n-            return o.encode('utf8')\n-        else:\n-            return o\n-else:\n-    def tobytes(o):\n-        if isinstance(o, str):\n-            return o.encode('utf8')\n-        else:\n-            return o\n \n-    def frombytes(o):\n+def frombytes(o):\n+    if isinstance(o, six.binary_type):\n         return o.decode('utf8')\n+    return o\n \n \n # from the merge_arrow_pr.py script\n@@ -177,7 +169,7 @@ def _get_type_layout(self):\n class PrimitiveColumn(Column):\n \n     def __init__(self, name, count, is_valid, values):\n-        Column.__init__(self, name, count)\n+        super(PrimitiveColumn, self).__init__(name, count)\n         self.is_valid = is_valid\n         self.values = values\n \n@@ -191,15 +183,16 @@ def _get_buffers(self):\n         ]\n \n \n-TEST_INT_MIN = - 2**31 + 1\n-TEST_INT_MAX = 2**31 - 1\n+TEST_INT_MAX = 2 ** 31 - 1\n+TEST_INT_MIN = ~TEST_INT_MAX\n+\n \n class IntegerType(PrimitiveType):\n \n     def __init__(self, name, is_signed, bit_width, nullable=True,\n                  min_value=TEST_INT_MIN,\n                  max_value=TEST_INT_MAX):\n-        PrimitiveType.__init__(self, name, nullable=nullable)\n+        super(IntegerType, self).__init__(name, nullable=nullable)\n         self.is_signed = is_signed\n         self.bit_width = bit_width\n         self.min_value = min_value\n@@ -239,9 +232,11 @@ class DateType(IntegerType):\n     MILLISECOND = 1\n \n     def __init__(self, name, unit, nullable=True):\n-        self.unit = unit\n         bit_width = 32 if unit == self.DAY else 64\n-        IntegerType.__init__(self, name, True, bit_width, nullable=nullable)\n+        super(DateType, self).__init__(\n+            name, True, bit_width, nullable=nullable\n+        )\n+        self.unit = unit\n \n     def _get_type(self):\n         return OrderedDict([\n@@ -268,9 +263,10 @@ class TimeType(IntegerType):\n     }\n \n     def __init__(self, name, unit='s', nullable=True):\n+        super(TimeType, self).__init__(\n+            name, True, self.BIT_WIDTHS[unit], nullable=nullable\n+        )\n         self.unit = unit\n-        IntegerType.__init__(self, name, True, self.BIT_WIDTHS[unit],\n-                             nullable=nullable)\n \n     def _get_type(self):\n         return OrderedDict([\n@@ -283,9 +279,9 @@ def _get_type(self):\n class TimestampType(IntegerType):\n \n     def __init__(self, name, unit='s', tz=None, nullable=True):\n+        super(TimestampType, self).__init__(name, True, 64, nullable=nullable)\n         self.unit = unit\n         self.tz = tz\n-        IntegerType.__init__(self, name, True, 64, nullable=nullable)\n \n     def _get_type(self):\n         fields = [\n@@ -302,7 +298,7 @@ def _get_type(self):\n class FloatingPointType(PrimitiveType):\n \n     def __init__(self, name, bit_width, nullable=True):\n-        PrimitiveType.__init__(self, name, nullable=nullable)\n+        super(FloatingPointType, self).__init__(name, nullable=nullable)\n \n         self.bit_width = bit_width\n         self.precision = {\n@@ -331,13 +327,30 @@ def generate_column(self, size, name=None):\n         return PrimitiveColumn(name, size, is_valid, values)\n \n \n-class DecimalType(PrimitiveType):\n-    def __init__(self, name, bit_width, precision, scale, nullable=True):\n-        PrimitiveType.__init__(self, name, nullable=True)\n+DECIMAL_PRECISION_TO_VALUE = {\n+    key: (1 << (8 * i - 1)) - 1 for i, key in enumerate(\n+        [1, 3, 5, 7, 10, 12, 15, 17, 19, 22, 24, 27, 29, 32, 34, 36],\n+        start=1,\n+    )\n+}\n \n-        self.bit_width = bit_width\n+\n+def decimal_range_from_precision(precision):\n+    assert 1 <= precision <= 38\n+    try:\n+        max_value = DECIMAL_PRECISION_TO_VALUE[precision]\n+    except KeyError:\n+        return decimal_range_from_precision(precision - 1)\n+    else:\n+        return ~max_value, max_value\n+\n+\n+class DecimalType(PrimitiveType):\n+    def __init__(self, name, precision, scale, bit_width=128, nullable=True):\n+        super(DecimalType, self).__init__(name, nullable=True)\n         self.precision = precision\n         self.scale = scale\n+        self.bit_width = bit_width\n \n     @property\n     def numpy_type(self):\n@@ -359,7 +372,8 @@ def _get_type_layout(self):\n                            ('typeBitWidth', self.bit_width)])])])\n \n     def generate_column(self, size, name=None):\n-        values = [random.randint(0, 2**self.bit_width - 1) for x in range(size)]\n+        min_value, max_value = decimal_range_from_precision(self.precision)\n+        values = [random.randint(min_value, max_value) for _ in range(size)]\n \n         is_valid = self._make_is_valid(size)\n         if name is None:\n@@ -369,14 +383,12 @@ def generate_column(self, size, name=None):\n \n class DecimalColumn(PrimitiveColumn):\n \n-    def __init__(self, name, count, is_valid, values, bit_width):\n-        PrimitiveColumn.__init__(self, name, count, is_valid, values)\n+    def __init__(self, name, count, is_valid, values, bit_width=128):\n+        super(DecimalColumn, self).__init__(name, count, is_valid, values)\n         self.bit_width = bit_width\n-        self.hex_width = bit_width / 4\n \n     def _encode_value(self, x):\n-        hex_format_str = '%%0%dx' % self.hex_width\n-        return (hex_format_str % x).upper()\n+        return str(x)\n \n \n class BooleanType(PrimitiveType):\n@@ -510,7 +522,7 @@ def _encode_value(self, x):\n class ListType(DataType):\n \n     def __init__(self, name, value_type, nullable=True):\n-        DataType.__init__(self, name, nullable=nullable)\n+        super(ListType, self).__init__(name, nullable=nullable)\n         self.value_type = value_type\n \n     def _get_type(self):\n@@ -553,7 +565,7 @@ def generate_column(self, size, name=None):\n class ListColumn(Column):\n \n     def __init__(self, name, count, is_valid, offsets, values):\n-        Column.__init__(self, name, count)\n+        super(ListColumn, self).__init__(name, count)\n         self.is_valid = is_valid\n         self.offsets = offsets\n         self.values = values\n@@ -571,7 +583,7 @@ def _get_children(self):\n class StructType(DataType):\n \n     def __init__(self, name, field_types, nullable=True):\n-        DataType.__init__(self, name, nullable=nullable)\n+        super(StructType, self).__init__(name, nullable=nullable)\n         self.field_types = field_types\n \n     def _get_type(self):\n@@ -620,7 +632,7 @@ def get_json(self):\n class DictionaryType(DataType):\n \n     def __init__(self, name, index_type, dictionary, nullable=True):\n-        DataType.__init__(self, name, nullable=nullable)\n+        super(DictionaryType, self).__init__(name, nullable=nullable)\n         assert isinstance(index_type, IntegerType)\n         assert isinstance(dictionary, Dictionary)\n \n@@ -655,7 +667,7 @@ def generate_column(self, size, name=None):\n class StructColumn(Column):\n \n     def __init__(self, name, count, is_valid, field_values):\n-        Column.__init__(self, name, count)\n+        super(StructColumn, self).__init__(name, count)\n         self.is_valid = is_valid\n         self.field_values = field_values\n \n@@ -758,11 +770,12 @@ def generate_primitive_case(batch_sizes):\n \n def generate_decimal_case():\n     fields = [\n-        DecimalType('f1', 128, 24, 10, True),\n-        DecimalType('f2', 128, 32, -10, True)\n+        DecimalType(name='f{}'.format(i), precision=precision, scale=2)\n+        for i, precision in enumerate(range(3, 39))\n     ]\n \n-    batch_sizes = [7, 10]\n+    possible_batch_sizes = 7, 10\n+    batch_sizes = [possible_batch_sizes[i % 2] for i in range(len(fields))]\n \n     return _generate_file('decimal', fields, batch_sizes)\n \n@@ -867,8 +880,9 @@ def run(self):\n \n     def _compare_implementations(self, producer, consumer):\n         print('##########################################################')\n-        print('{0} producing, {1} consuming'.format(producer.name,\n-                                                       consumer.name))\n+        print(\n+            '{0} producing, {1} consuming'.format(producer.name, consumer.name)\n+        )\n         print('##########################################################')\n \n         for json_path in self.json_files:\n@@ -1033,6 +1047,7 @@ def run_all_tests(debug=False):\n     runner.run()\n     print('-- All tests passed!')\n \n+\n if __name__ == '__main__':\n     parser = argparse.ArgumentParser(description='Arrow integration test CLI')\n     parser.add_argument('--debug', dest='debug', action='store_true',\ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/file/json/JsonFileReader.java b/java/vector/src/main/java/org/apache/arrow/vector/file/json/JsonFileReader.java\nindex c6ebd61aa..e1c7c909f 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/file/json/JsonFileReader.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/file/json/JsonFileReader.java\n@@ -27,6 +27,8 @@\n \n import java.io.File;\n import java.io.IOException;\n+import java.math.BigDecimal;\n+import java.math.BigInteger;\n import java.util.ArrayList;\n import java.util.HashMap;\n import java.util.List;\n@@ -332,9 +334,10 @@ private void setValueFromParser(ValueVector valueVector, int i) throws IOExcepti\n         ((Float8Vector) valueVector).getMutator().set(i, parser.readValueAs(Double.class));\n         break;\n       case DECIMAL: {\n-          DecimalVector decimalVector = ((DecimalVector) valueVector);\n-          byte[] value = decodeHexSafe(parser.readValueAs(String.class));\n-          DecimalUtility.writeByteArrayToArrowBuf(value, decimalVector.getBuffer(), i);\n+          DecimalVector decimalVector = (DecimalVector) valueVector;\n+          // Here we assume the decimal value is the unscaled integer value as a string\n+          BigDecimal decimalValue = new BigDecimal(parser.readValueAs(String.class));\n+          DecimalUtility.writeBigDecimalToArrowBuf(decimalValue, decimalVector.getBuffer(), i);\n         }\n         break;\n       case VARBINARY:\ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/file/json/JsonFileWriter.java b/java/vector/src/main/java/org/apache/arrow/vector/file/json/JsonFileWriter.java\nindex 04e44379e..05341bec4 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/file/json/JsonFileWriter.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/file/json/JsonFileWriter.java\n@@ -20,6 +20,7 @@\n \n import java.io.File;\n import java.io.IOException;\n+import java.math.BigDecimal;\n import java.util.ArrayList;\n import java.util.HashSet;\n import java.util.List;\n@@ -48,6 +49,7 @@\n import org.apache.arrow.vector.dictionary.Dictionary;\n import org.apache.arrow.vector.dictionary.DictionaryProvider;\n import org.apache.arrow.vector.schema.ArrowVectorType;\n+import org.apache.arrow.vector.types.pojo.ArrowType;\n import org.apache.arrow.vector.types.pojo.Field;\n import org.apache.arrow.vector.types.pojo.Schema;\n \n@@ -242,9 +244,9 @@ private void writeValueToGenerator(ValueVector valueVector, int i) throws IOExce\n         }\n         break;\n       case DECIMAL: {\n-          ArrowBuf bytebuf = valueVector.getDataBuffer();\n-          String hexString = Hex.encodeHexString(DecimalUtility.getByteArrayFromArrowBuf(bytebuf, i));\n-          generator.writeString(hexString);\n+          BigDecimal decimalValue = ((DecimalVector) valueVector).getAccessor().getObject(i);\n+          // We write the unscaled value, because the scale is stored in the type metadata.\n+          generator.writeString(decimalValue.unscaledValue().toString());\n         }\n         break;\n       default:\ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/util/DecimalUtility.java b/java/vector/src/main/java/org/apache/arrow/vector/util/DecimalUtility.java\nindex 033ae6c09..acf7c58a1 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/util/DecimalUtility.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/util/DecimalUtility.java\n@@ -142,8 +142,18 @@ public static StringBuilder toStringWithZeroes(long number, int desiredLength) {\n    */\n   public static BigDecimal getBigDecimalFromArrowBuf(ArrowBuf bytebuf, int index, int scale) {\n     byte[] value = new byte[DECIMAL_BYTE_LENGTH];\n+    byte temp;\n     final int startIndex = index * DECIMAL_BYTE_LENGTH;\n+\n+    // Decimal stored as little endian, need to swap bytes to make BigDecimal\n     bytebuf.getBytes(startIndex, value, 0, DECIMAL_BYTE_LENGTH);\n+    int stop = DECIMAL_BYTE_LENGTH / 2;\n+    for (int i = 0, j; i < stop; i++) {\n+      temp = value[i];\n+      j = (DECIMAL_BYTE_LENGTH - 1) - i;\n+      value[i] = value[j];\n+      value[j] = temp;\n+    }\n     BigInteger unscaledValue = new BigInteger(value);\n     return new BigDecimal(unscaledValue, scale);\n   }\n@@ -212,10 +222,26 @@ private static void writeByteArrayToArrowBuf(byte[] bytes, ArrowBuf bytebuf, int\n     if (bytes.length > DECIMAL_BYTE_LENGTH) {\n       throw new UnsupportedOperationException(\"Decimal size greater than 16 bytes\");\n     }\n-    final int padLength = DECIMAL_BYTE_LENGTH - bytes.length;\n-    for (int i = 0; i < padLength; i++) {\n+\n+    // Decimal stored as little endian, need to swap data bytes before writing to ArrowBuf\n+    byte[] bytesLE = new byte[bytes.length];\n+    int stop = bytes.length / 2;\n+    for (int i = 0, j; i < stop; i++) {\n+      j = (bytes.length - 1) - i;\n+      bytesLE[i] = bytes[j];\n+      bytesLE[j] = bytes[i];\n+    }\n+    if (bytes.length % 2 != 0) {\n+      int i = (bytes.length / 2);\n+      bytesLE[i] = bytes[i];\n+    }\n+\n+    // Write LE data\n+    bytebuf.setBytes(startIndex, bytesLE, 0, bytes.length);\n+\n+    // Write padding after data\n+    for (int i = bytes.length; i < DECIMAL_BYTE_LENGTH; i++) {\n       bytebuf.setByte(startIndex + i, padValue);\n     }\n-    bytebuf.setBytes(startIndex + padLength, bytes, 0, bytes.length);\n   }\n }\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-07T21:22:29.022+0000",
                    "updated": "2017-11-07T21:22:29.022+0000"
                }
            ],
            "maxResults": 27,
            "total": 27,
            "startAt": 0
        },
        "customfield_12311820": "0|i3lm6f:",
        "customfield_12314139": null
    }
}