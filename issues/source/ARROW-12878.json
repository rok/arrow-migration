{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13380419",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380419",
    "key": "ARROW-12878",
    "fields": {
        "parent": {
            "id": "13329760",
            "key": "ARROW-10117",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/13329760",
            "fields": {
                "summary": "[C++] Implement work-stealing scheduler / multiple queues in ThreadPool",
                "status": {
                    "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                    "description": "The issue is open and ready for the assignee to start work on it.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                    "name": "Open",
                    "id": "1",
                    "statusCategory": {
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                        "id": 2,
                        "key": "new",
                        "colorName": "blue-gray",
                        "name": "To Do"
                    }
                },
                "priority": {
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                    "name": "Major",
                    "id": "3"
                },
                "issuetype": {
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                    "id": "4",
                    "description": "An improvement or enhancement to an existing feature or task.",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                    "name": "Improvement",
                    "subtask": false,
                    "avatarId": 21140
                }
            }
        },
        "fixVersions": [],
        "resolution": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12616913",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12616913",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "outwardIssue": {
                    "id": "13304151",
                    "key": "ARROW-8767",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13304151",
                    "fields": {
                        "summary": "[C++] Make ThreadPool task ordering configurable",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                            "description": "The issue is open and ready for the assignee to start work on it.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                            "name": "Open",
                            "id": "1",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                                "id": 2,
                                "key": "new",
                                "colorName": "blue-gray",
                                "name": "To Do"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/5",
                            "id": "5",
                            "description": "General wishlist item.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Wish",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": null,
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
            "description": "The issue is open and ready for the assignee to start work on it.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
            "name": "Open",
            "id": "1",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                "id": 2,
                "key": "new",
                "colorName": "blue-gray",
                "name": "To Do"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
            "name": "westonpace",
            "key": "westonpace",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Weston Pace",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
            "name": "westonpace",
            "key": "westonpace",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Weston Pace",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 14400,
            "total": 14400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 14400,
            "total": 14400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12878/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 24,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380419/worklog/602051",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace opened a new pull request #10401:\nURL: https://github.com/apache/arrow/pull/10401\n\n\n   This PR splits `arrow::internal::ThreadPool` into a base class (`ThreadPool`) and a concrete implementation (`SimpleThreadPool`).  The base class handles capacity, statistics, and lifecycle.  The concrete implementations handle task queuing and worker loops.  This is a step towards a WorkStealingThreadPool class coming soon.  I'm leaving this in draft until the work stealing version is available.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-26T01:08:07.340+0000",
                    "updated": "2021-05-26T01:08:07.340+0000",
                    "started": "2021-05-26T01:08:07.340+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "602051",
                    "issueId": "13380419"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380419/worklog/602052",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10401:\nURL: https://github.com/apache/arrow/pull/10401#issuecomment-848382149\n\n\n   https://issues.apache.org/jira/browse/ARROW-12878\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-26T01:08:21.113+0000",
                    "updated": "2021-05-26T01:08:21.113+0000",
                    "started": "2021-05-26T01:08:21.113+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "602052",
                    "issueId": "13380419"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380419/worklog/602206",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #10401:\nURL: https://github.com/apache/arrow/pull/10401#issuecomment-848618336\n\n\n   I'm not sure this is a good idea. I don't expect thread pool implementations to share a lot of code.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-26T09:28:58.185+0000",
                    "updated": "2021-05-26T09:28:58.185+0000",
                    "started": "2021-05-26T09:28:58.185+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "602206",
                    "issueId": "13380419"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380419/worklog/603391",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on pull request #10401:\nURL: https://github.com/apache/arrow/pull/10401#issuecomment-850090913\n\n\n   @pitrou See #10420 for an example alternative thread pool (some of the changes from 10420 will need to be back-ported to this PR).  Basically the goal is to allow the capacity management / fork protection / shutdown logic to go into the base class while the task queue and worker loops belong to the child implementations.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-28T03:51:17.070+0000",
                    "updated": "2021-05-28T03:51:17.070+0000",
                    "started": "2021-05-28T03:51:17.070+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "603391",
                    "issueId": "13380419"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380419/worklog/608876",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on pull request #10401:\nURL: https://github.com/apache/arrow/pull/10401#issuecomment-857305138\n\n\n   There is still one more test failure (ASAN / UBSAN) to work through but this should be ready to review.  In addition to work stealing this base could be used for experiments into round robin scheduling or priority scheduling.  Related: ARROW-8767\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-09T01:39:38.393+0000",
                    "updated": "2021-06-09T01:39:38.393+0000",
                    "started": "2021-06-09T01:39:38.393+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "608876",
                    "issueId": "13380419"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380419/worklog/609146",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #10401:\nURL: https://github.com/apache/arrow/pull/10401#discussion_r648313166\n\n\n\n##########\nFile path: cpp/src/arrow/util/future_test.cc\n##########\n@@ -106,12 +107,18 @@ template <typename T>\n class SimpleExecutor {\n  public:\n   explicit SimpleExecutor(int nfutures)\n-      : pool_(ThreadPool::Make(/*threads=*/4).ValueOrDie()) {\n+      : pool_(SimpleThreadPool::Make(/*threads=*/4).ValueOrDie()) {\n     for (int i = 0; i < nfutures; ++i) {\n       futures_.push_back(Future<T>::Make());\n     }\n   }\n \n+  // Need to explicilty call the pool shutdown.  The worker threads have a shared_ptr\n+  // to the pool so they will keep it alive after this class is destructed.  However, the\n\nReview comment:\n       Hmm, does that mean there is a reference cycle which would make the pool immortal? Or just that the pool would be destroyed too late? (hopefully the latter)\n\n##########\nFile path: cpp/src/arrow/util/thread_pool_test.cc\n##########\n@@ -452,6 +454,42 @@ TEST_F(TestThreadPool, QuickShutdown) {\n   add_tester.CheckNotAllComputed();\n }\n \n+TEST_F(TestThreadPool, DestroyWithoutShutdown) {\n+  std::mutex mx;\n+  std::condition_variable cv;\n+  std::weak_ptr<ThreadPool> weak_pool;\n+  bool ready = false;\n+  bool completed = false;\n+  {\n+    auto pool = this->MakeThreadPool(1);\n+    weak_pool = pool;\n+    // Simulate Windows\n+    pool->shutdown_on_destroy_ = false;\n+\n+    ASSERT_OK(pool->Spawn([&mx, &cv, &completed, &ready] {\n+      std::unique_lock<std::mutex> lock(mx);\n+      ready = true;\n+      cv.notify_one();\n+      cv.wait(lock);\n\nReview comment:\n       `wait` is prone to spurious wakeups, so it should always be called with a predicate (or the predicate checked separately in a loop).\n\n##########\nFile path: cpp/src/arrow/util/thread_pool_test.cc\n##########\n@@ -452,6 +454,42 @@ TEST_F(TestThreadPool, QuickShutdown) {\n   add_tester.CheckNotAllComputed();\n }\n \n+TEST_F(TestThreadPool, DestroyWithoutShutdown) {\n+  std::mutex mx;\n+  std::condition_variable cv;\n+  std::weak_ptr<ThreadPool> weak_pool;\n+  bool ready = false;\n+  bool completed = false;\n+  {\n+    auto pool = this->MakeThreadPool(1);\n+    weak_pool = pool;\n+    // Simulate Windows\n+    pool->shutdown_on_destroy_ = false;\n+\n+    ASSERT_OK(pool->Spawn([&mx, &cv, &completed, &ready] {\n+      std::unique_lock<std::mutex> lock(mx);\n+      ready = true;\n+      cv.notify_one();\n\nReview comment:\n       Hmm... how do you know the notified one won't be the `wait` call just below?\r\n   \r\n   Also, I'm not sure that `notify_one` *guarantees* that only one thread will be notified. For example, the [POSIX equivalent](https://pubs.opengroup.org/onlinepubs/9699919799/functions/pthread_cond_signal.html) says:\r\n   > The `pthread_cond_signal()` function shall unblock *at least one* of the threads that are blocked on the specified condition variable\r\n   \r\n   (emphasis mine)\r\n   \n\n##########\nFile path: cpp/src/arrow/util/thread_pool_test.cc\n##########\n@@ -452,6 +454,42 @@ TEST_F(TestThreadPool, QuickShutdown) {\n   add_tester.CheckNotAllComputed();\n }\n \n+TEST_F(TestThreadPool, DestroyWithoutShutdown) {\n+  std::mutex mx;\n+  std::condition_variable cv;\n+  std::weak_ptr<ThreadPool> weak_pool;\n+  bool ready = false;\n+  bool completed = false;\n+  {\n+    auto pool = this->MakeThreadPool(1);\n+    weak_pool = pool;\n+    // Simulate Windows\n+    pool->shutdown_on_destroy_ = false;\n+\n+    ASSERT_OK(pool->Spawn([&mx, &cv, &completed, &ready] {\n+      std::unique_lock<std::mutex> lock(mx);\n+      ready = true;\n+      cv.notify_one();\n+      cv.wait(lock);\n+      completed = true;\n+    }));\n+  }\n+\n+  std::unique_lock<std::mutex> lock(mx);\n+  cv.wait(lock, [&ready] { return ready; });\n+  // Thread pool has shut down, now we unblock the task\n+  cv.notify_one();\n+  lock.unlock();\n+\n+  // The worker thread should be able to keep the thread pool alive by itself\n\nReview comment:\n       Hmm... really? Why is that? If the user doesn't hold any reference to a thread pool anymore, then presumably the thread pool should \"disappear\". Whether it does before or after the currently running tasks finish, I don't know.\n\n##########\nFile path: cpp/src/arrow/util/thread_pool.h\n##########\n@@ -321,37 +335,139 @@ class ARROW_EXPORT ThreadPool : public Executor {\n   // tasks are finished.\n   Status Shutdown(bool wait = true);\n \n-  struct State;\n+  // ------------- Statistics API ---------------\n+\n+  /// The current number of tasks either currently running or in the queue to run\n+  uint64_t NumTasksRunningOrQueued() const;\n+  /// A guess at the maximum number of tasks running or queued at any one point\n+  uint64_t MaxTasksQueued() const;\n+  /// The total number of tasks that have been submitted over the lifetime of the pool\n+  uint64_t TotalTasksQueued() const;\n+\n+  // ------------- Children API -----------------\n+\n+  /// Called by children when a worker thread completes a task\n+  void RecordFinishedTask();\n+  /// True if the thread pool is shutting down, should only be checked if a thread has\n+  /// no tasks to work on.  This allows us to ensure we drain the task queue before\n+  /// shutting down the pool.\n+  ///\n+  /// Once this returns true a thread must not call it (or ShouldWorkerQuitNow) again\n+  bool ShouldWorkerQuit(ThreadIt* thread_it);\n+  /// True if the thread is no longer needed (e.g. excess capacity) or if a quick shutdown\n+  /// has been requested.  Should be checked frequently as threads can quit with remaining\n+  /// work if this is true\n+  ///\n+  /// Once this returns true a thread must not call it (or ShouldWorkerQuit) again\n+  bool ShouldWorkerQuitNow(ThreadIt* thread_it);\n+  /// Should be called first by a worker thread as soon as it starts up.  Until this call\n+  /// finishes `thread_it` will not have a valid value\n+  void WaitForReady();\n+  /// Called by a child implementation when new work arrives that should wake up idle\n+  /// threads.  This will notify one worker waiting on WaitForWork.  Generally called\n+  /// in DoSubmitTask but might be called less often if a child implementation wants\n+  /// to\n+  void NotifyIdleWorker();\n+  /// Called by a worker thread that is ready to wait for work to arrive\n+  void WaitForWork();\n+\n+  struct Control;\n \n  protected:\n+  FRIEND_TEST(TestThreadPool, DestroyWithoutShutdown);\n   FRIEND_TEST(TestThreadPool, SetCapacity);\n   FRIEND_TEST(TestGlobalThreadPool, Capacity);\n   friend ARROW_EXPORT ThreadPool* GetCpuThreadPool();\n \n-  ThreadPool();\n+  explicit ThreadPool(bool eternal = false);\n \n   Status SpawnReal(TaskHints hints, FnOnce<void()> task, StopToken,\n                    StopCallback&&) override;\n \n+  /// Called on the child process after a fork.  After a fork all threads will have ceased\n+  /// running in the child process.  This method should clean up the thread pool state and\n+  /// restart any previously running threads.\n+  ///\n+  /// The behavior is somewhat ill-defined if tasks are running when the fork happened.\n+  /// For more details see ARROW-12879\n+  virtual void ResetAfterFork();\n+\n+  /// Launches a worker thread\n+  virtual std::shared_ptr<Thread> LaunchWorker(ThreadIt thread_it) = 0;\n+  /// Adds a task to the task queue(s)\n+  virtual void DoSubmitTask(TaskHints hints, Task task) = 0;\n+  /// Should return true only if there is no work to be done\n+  virtual bool Empty() = 0;\n   // Collect finished worker threads, making sure the OS threads have exited\n   void CollectFinishedWorkersUnlocked();\n   // Launch a given number of additional workers\n   void LaunchWorkersUnlocked(int threads);\n+  // Marks a thread finished and removes it from the workers list\n+  void MarkThreadFinishedUnlocked(ThreadIt* thread_it);\n   // Get the current actual capacity\n-  int GetActualCapacity();\n+  int GetActualCapacity() const;\n+  // Get the amount of threads we could still launch based on capacity and # of tasks\n+  int GetAdditionalThreadsNeeded() const;\n   // Reinitialize the thread pool if the pid changed\n   void ProtectAgainstFork();\n+  void RecordTaskSubmitted();\n \n   static std::shared_ptr<ThreadPool> MakeCpuThreadPool();\n \n-  std::shared_ptr<State> sp_state_;\n-  State* state_;\n+  std::atomic<uint64_t> num_tasks_running_;\n\nReview comment:\n       Rather than exposing this in a `.h`, I'd rather see those instance variables and methods segregated to a separate object (call it \"implementation\", \"task queue\" or whatever you prefer :-)). It would also avoid the `Thread` wrapper.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-09T13:51:31.860+0000",
                    "updated": "2021-06-09T13:51:31.860+0000",
                    "started": "2021-06-09T13:51:31.859+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "609146",
                    "issueId": "13380419"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380419/worklog/609286",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #10401:\nURL: https://github.com/apache/arrow/pull/10401#issuecomment-857898290\n\n\n   @westonpace I would recommend running the ASAN build locally using `archery docker ...`.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-09T17:37:50.378+0000",
                    "updated": "2021-06-09T17:37:50.378+0000",
                    "started": "2021-06-09T17:37:50.378+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "609286",
                    "issueId": "13380419"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380419/worklog/609290",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on pull request #10401:\nURL: https://github.com/apache/arrow/pull/10401#issuecomment-857902006\n\n\n   @pitrou Unfortunately, it passes when run locally in that way.  My development system is also Ubuntu 20.04 so I've tried various stress runs but haven't had any luck.  I'm hopeful this last change will put the stack traces in the build log as it does seem to be failing reliably on the build server.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-09T17:42:13.508+0000",
                    "updated": "2021-06-09T17:42:13.508+0000",
                    "started": "2021-06-09T17:42:13.508+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "609290",
                    "issueId": "13380419"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380419/worklog/609291",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #10401:\nURL: https://github.com/apache/arrow/pull/10401#discussion_r648533784\n\n\n\n##########\nFile path: cpp/src/arrow/util/future_test.cc\n##########\n@@ -106,12 +107,18 @@ template <typename T>\n class SimpleExecutor {\n  public:\n   explicit SimpleExecutor(int nfutures)\n-      : pool_(ThreadPool::Make(/*threads=*/4).ValueOrDie()) {\n+      : pool_(SimpleThreadPool::Make(/*threads=*/4).ValueOrDie()) {\n     for (int i = 0; i < nfutures; ++i) {\n       futures_.push_back(Future<T>::Make());\n     }\n   }\n \n+  // Need to explicilty call the pool shutdown.  The worker threads have a shared_ptr\n+  // to the pool so they will keep it alive after this class is destructed.  However, the\n\nReview comment:\n       It is the latter.  The test spawns a task and gives it a reference (via `this` capture) to a future.  The future is destroyed when the test is destroyed which was happening before the spawned task was finished.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-09T17:44:47.258+0000",
                    "updated": "2021-06-09T17:44:47.258+0000",
                    "started": "2021-06-09T17:44:47.258+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "609291",
                    "issueId": "13380419"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380419/worklog/609297",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #10401:\nURL: https://github.com/apache/arrow/pull/10401#discussion_r648541270\n\n\n\n##########\nFile path: cpp/src/arrow/util/thread_pool_test.cc\n##########\n@@ -452,6 +454,42 @@ TEST_F(TestThreadPool, QuickShutdown) {\n   add_tester.CheckNotAllComputed();\n }\n \n+TEST_F(TestThreadPool, DestroyWithoutShutdown) {\n+  std::mutex mx;\n+  std::condition_variable cv;\n+  std::weak_ptr<ThreadPool> weak_pool;\n+  bool ready = false;\n+  bool completed = false;\n+  {\n+    auto pool = this->MakeThreadPool(1);\n+    weak_pool = pool;\n+    // Simulate Windows\n+    pool->shutdown_on_destroy_ = false;\n+\n+    ASSERT_OK(pool->Spawn([&mx, &cv, &completed, &ready] {\n+      std::unique_lock<std::mutex> lock(mx);\n+      ready = true;\n+      cv.notify_one();\n\nReview comment:\n       I'm pretty sure you're right, notify may wake up more than one thread.  However, I don't think it can wake up a thread before it starts waiting.  In other words, a thread can never notify itself.\r\n   \r\n   I can probably rewrite this with two conditions though to make it more legible and guard against spurious wakeups.  My goal here is to ensure that the worker thread is spawned before I lose the reference to the thread pool.  Although, thinking on this again, the synchronization may not be needed at all since the lambda that creates a copy of the thread pool's shared_ptr is guaranteed to have been created before `Spawn` returns.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-09T17:55:41.256+0000",
                    "updated": "2021-06-09T17:55:41.256+0000",
                    "started": "2021-06-09T17:55:41.256+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "609297",
                    "issueId": "13380419"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380419/worklog/609301",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #10401:\nURL: https://github.com/apache/arrow/pull/10401#discussion_r648543567\n\n\n\n##########\nFile path: cpp/src/arrow/util/thread_pool_test.cc\n##########\n@@ -452,6 +454,42 @@ TEST_F(TestThreadPool, QuickShutdown) {\n   add_tester.CheckNotAllComputed();\n }\n \n+TEST_F(TestThreadPool, DestroyWithoutShutdown) {\n+  std::mutex mx;\n+  std::condition_variable cv;\n+  std::weak_ptr<ThreadPool> weak_pool;\n+  bool ready = false;\n+  bool completed = false;\n+  {\n+    auto pool = this->MakeThreadPool(1);\n+    weak_pool = pool;\n+    // Simulate Windows\n+    pool->shutdown_on_destroy_ = false;\n+\n+    ASSERT_OK(pool->Spawn([&mx, &cv, &completed, &ready] {\n+      std::unique_lock<std::mutex> lock(mx);\n+      ready = true;\n+      cv.notify_one();\n+      cv.wait(lock);\n+      completed = true;\n+    }));\n+  }\n+\n+  std::unique_lock<std::mutex> lock(mx);\n+  cv.wait(lock, [&ready] { return ready; });\n+  // Thread pool has shut down, now we unblock the task\n+  cv.notify_one();\n+  lock.unlock();\n+\n+  // The worker thread should be able to keep the thread pool alive by itself\n\nReview comment:\n       It's more of an implementation detail (since the worker thread calls methods on the thread pool).  You are right that it doesn't really exist as a \"black box\" requirement.  The thread pool user shouldn't care.\r\n   \r\n   I can take out the assert.  If the worker thread were doing the wrong thing it would segfault and/or throw an exception which should cause the test to fail so there may not be anything I need to assert.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-09T17:58:19.723+0000",
                    "updated": "2021-06-09T17:58:19.723+0000",
                    "started": "2021-06-09T17:58:19.723+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "609301",
                    "issueId": "13380419"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380419/worklog/609306",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #10401:\nURL: https://github.com/apache/arrow/pull/10401#discussion_r648544911\n\n\n\n##########\nFile path: cpp/src/arrow/util/thread_pool_test.cc\n##########\n@@ -452,6 +454,42 @@ TEST_F(TestThreadPool, QuickShutdown) {\n   add_tester.CheckNotAllComputed();\n }\n \n+TEST_F(TestThreadPool, DestroyWithoutShutdown) {\n+  std::mutex mx;\n+  std::condition_variable cv;\n+  std::weak_ptr<ThreadPool> weak_pool;\n+  bool ready = false;\n+  bool completed = false;\n+  {\n+    auto pool = this->MakeThreadPool(1);\n+    weak_pool = pool;\n+    // Simulate Windows\n+    pool->shutdown_on_destroy_ = false;\n+\n+    ASSERT_OK(pool->Spawn([&mx, &cv, &completed, &ready] {\n+      std::unique_lock<std::mutex> lock(mx);\n+      ready = true;\n+      cv.notify_one();\n\nReview comment:\n       Yes, you should probably use two different predicates and booleans.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-09T18:00:05.976+0000",
                    "updated": "2021-06-09T18:00:05.976+0000",
                    "started": "2021-06-09T18:00:05.976+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "609306",
                    "issueId": "13380419"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380419/worklog/609456",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #10401:\nURL: https://github.com/apache/arrow/pull/10401#discussion_r648832182\n\n\n\n##########\nFile path: cpp/src/arrow/util/future_test.cc\n##########\n@@ -106,12 +107,18 @@ template <typename T>\n class SimpleExecutor {\n  public:\n   explicit SimpleExecutor(int nfutures)\n-      : pool_(ThreadPool::Make(/*threads=*/4).ValueOrDie()) {\n+      : pool_(SimpleThreadPool::Make(/*threads=*/4).ValueOrDie()) {\n     for (int i = 0; i < nfutures; ++i) {\n       futures_.push_back(Future<T>::Make());\n     }\n   }\n \n+  // Need to explicilty call the pool shutdown.  The worker threads have a shared_ptr\n+  // to the pool so they will keep it alive after this class is destructed.  However, the\n\nReview comment:\n       Actually, it was the former, and that was the ASAN error.  If the worker threads have a strong reference to the thread pool then the thread pool is never destroyed unless it is shutdown (which doesn't work for the eternal pools).  I've fixed it now as worker threads only have a reference to the thread pool's state and not the thread pool (as it was originally).\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-10T04:01:18.532+0000",
                    "updated": "2021-06-10T04:01:18.532+0000",
                    "started": "2021-06-10T04:01:18.532+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "609456",
                    "issueId": "13380419"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380419/worklog/609457",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #10401:\nURL: https://github.com/apache/arrow/pull/10401#discussion_r648833516\n\n\n\n##########\nFile path: cpp/src/arrow/util/thread_pool.h\n##########\n@@ -321,37 +335,139 @@ class ARROW_EXPORT ThreadPool : public Executor {\n   // tasks are finished.\n   Status Shutdown(bool wait = true);\n \n-  struct State;\n+  // ------------- Statistics API ---------------\n+\n+  /// The current number of tasks either currently running or in the queue to run\n+  uint64_t NumTasksRunningOrQueued() const;\n+  /// A guess at the maximum number of tasks running or queued at any one point\n+  uint64_t MaxTasksQueued() const;\n+  /// The total number of tasks that have been submitted over the lifetime of the pool\n+  uint64_t TotalTasksQueued() const;\n+\n+  // ------------- Children API -----------------\n+\n+  /// Called by children when a worker thread completes a task\n+  void RecordFinishedTask();\n+  /// True if the thread pool is shutting down, should only be checked if a thread has\n+  /// no tasks to work on.  This allows us to ensure we drain the task queue before\n+  /// shutting down the pool.\n+  ///\n+  /// Once this returns true a thread must not call it (or ShouldWorkerQuitNow) again\n+  bool ShouldWorkerQuit(ThreadIt* thread_it);\n+  /// True if the thread is no longer needed (e.g. excess capacity) or if a quick shutdown\n+  /// has been requested.  Should be checked frequently as threads can quit with remaining\n+  /// work if this is true\n+  ///\n+  /// Once this returns true a thread must not call it (or ShouldWorkerQuit) again\n+  bool ShouldWorkerQuitNow(ThreadIt* thread_it);\n+  /// Should be called first by a worker thread as soon as it starts up.  Until this call\n+  /// finishes `thread_it` will not have a valid value\n+  void WaitForReady();\n+  /// Called by a child implementation when new work arrives that should wake up idle\n+  /// threads.  This will notify one worker waiting on WaitForWork.  Generally called\n+  /// in DoSubmitTask but might be called less often if a child implementation wants\n+  /// to\n+  void NotifyIdleWorker();\n+  /// Called by a worker thread that is ready to wait for work to arrive\n+  void WaitForWork();\n+\n+  struct Control;\n \n  protected:\n+  FRIEND_TEST(TestThreadPool, DestroyWithoutShutdown);\n   FRIEND_TEST(TestThreadPool, SetCapacity);\n   FRIEND_TEST(TestGlobalThreadPool, Capacity);\n   friend ARROW_EXPORT ThreadPool* GetCpuThreadPool();\n \n-  ThreadPool();\n+  explicit ThreadPool(bool eternal = false);\n \n   Status SpawnReal(TaskHints hints, FnOnce<void()> task, StopToken,\n                    StopCallback&&) override;\n \n+  /// Called on the child process after a fork.  After a fork all threads will have ceased\n+  /// running in the child process.  This method should clean up the thread pool state and\n+  /// restart any previously running threads.\n+  ///\n+  /// The behavior is somewhat ill-defined if tasks are running when the fork happened.\n+  /// For more details see ARROW-12879\n+  virtual void ResetAfterFork();\n+\n+  /// Launches a worker thread\n+  virtual std::shared_ptr<Thread> LaunchWorker(ThreadIt thread_it) = 0;\n+  /// Adds a task to the task queue(s)\n+  virtual void DoSubmitTask(TaskHints hints, Task task) = 0;\n+  /// Should return true only if there is no work to be done\n+  virtual bool Empty() = 0;\n   // Collect finished worker threads, making sure the OS threads have exited\n   void CollectFinishedWorkersUnlocked();\n   // Launch a given number of additional workers\n   void LaunchWorkersUnlocked(int threads);\n+  // Marks a thread finished and removes it from the workers list\n+  void MarkThreadFinishedUnlocked(ThreadIt* thread_it);\n   // Get the current actual capacity\n-  int GetActualCapacity();\n+  int GetActualCapacity() const;\n+  // Get the amount of threads we could still launch based on capacity and # of tasks\n+  int GetAdditionalThreadsNeeded() const;\n   // Reinitialize the thread pool if the pid changed\n   void ProtectAgainstFork();\n+  void RecordTaskSubmitted();\n \n   static std::shared_ptr<ThreadPool> MakeCpuThreadPool();\n \n-  std::shared_ptr<State> sp_state_;\n-  State* state_;\n+  std::atomic<uint64_t> num_tasks_running_;\n\nReview comment:\n       I've made a stab at this (at the moment the implementation is called `WorkerControl` but I could be convinced to call it `ThreadPoolImpl` but it doesn't avoid the thread wrapper because of inheritance.  If `ThreadPool` is a base class that other implementations can extend then it has a pure virtual `LaunchWorker` that has to return \"something that can be joined\" which is what the `Thread` wrapper is for.  Options:\r\n   \r\n    * Keep the thread wrapper\r\n    * Just include `<thread>` in `thread_pool.h`\r\n    * Make the pimpl class extensible instead of the public class.  This will force (as best I can tell) all future child implementations to be in `thread_pool.cc`.  It would simplify the logic in other places though.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-10T04:06:05.440+0000",
                    "updated": "2021-06-10T04:06:05.440+0000",
                    "started": "2021-06-10T04:06:05.440+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "609457",
                    "issueId": "13380419"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380419/worklog/609458",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #10401:\nURL: https://github.com/apache/arrow/pull/10401#discussion_r648833585\n\n\n\n##########\nFile path: cpp/src/arrow/util/thread_pool_test.cc\n##########\n@@ -452,6 +454,42 @@ TEST_F(TestThreadPool, QuickShutdown) {\n   add_tester.CheckNotAllComputed();\n }\n \n+TEST_F(TestThreadPool, DestroyWithoutShutdown) {\n+  std::mutex mx;\n+  std::condition_variable cv;\n+  std::weak_ptr<ThreadPool> weak_pool;\n+  bool ready = false;\n+  bool completed = false;\n+  {\n+    auto pool = this->MakeThreadPool(1);\n+    weak_pool = pool;\n+    // Simulate Windows\n+    pool->shutdown_on_destroy_ = false;\n+\n+    ASSERT_OK(pool->Spawn([&mx, &cv, &completed, &ready] {\n+      std::unique_lock<std::mutex> lock(mx);\n+      ready = true;\n+      cv.notify_one();\n\nReview comment:\n       I've cleaned this test up to use two predicates & booleans.\n\n##########\nFile path: cpp/src/arrow/util/thread_pool_test.cc\n##########\n@@ -452,6 +454,42 @@ TEST_F(TestThreadPool, QuickShutdown) {\n   add_tester.CheckNotAllComputed();\n }\n \n+TEST_F(TestThreadPool, DestroyWithoutShutdown) {\n+  std::mutex mx;\n+  std::condition_variable cv;\n+  std::weak_ptr<ThreadPool> weak_pool;\n+  bool ready = false;\n+  bool completed = false;\n+  {\n+    auto pool = this->MakeThreadPool(1);\n+    weak_pool = pool;\n+    // Simulate Windows\n+    pool->shutdown_on_destroy_ = false;\n+\n+    ASSERT_OK(pool->Spawn([&mx, &cv, &completed, &ready] {\n+      std::unique_lock<std::mutex> lock(mx);\n+      ready = true;\n+      cv.notify_one();\n+      cv.wait(lock);\n\nReview comment:\n       Fixed.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-10T04:06:28.869+0000",
                    "updated": "2021-06-10T04:06:28.869+0000",
                    "started": "2021-06-10T04:06:28.868+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "609458",
                    "issueId": "13380419"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380419/worklog/609459",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #10401:\nURL: https://github.com/apache/arrow/pull/10401#discussion_r648833804\n\n\n\n##########\nFile path: cpp/src/arrow/util/thread_pool_test.cc\n##########\n@@ -452,6 +454,42 @@ TEST_F(TestThreadPool, QuickShutdown) {\n   add_tester.CheckNotAllComputed();\n }\n \n+TEST_F(TestThreadPool, DestroyWithoutShutdown) {\n+  std::mutex mx;\n+  std::condition_variable cv;\n+  std::weak_ptr<ThreadPool> weak_pool;\n+  bool ready = false;\n+  bool completed = false;\n+  {\n+    auto pool = this->MakeThreadPool(1);\n+    weak_pool = pool;\n+    // Simulate Windows\n+    pool->shutdown_on_destroy_ = false;\n+\n+    ASSERT_OK(pool->Spawn([&mx, &cv, &completed, &ready] {\n+      std::unique_lock<std::mutex> lock(mx);\n+      ready = true;\n+      cv.notify_one();\n+      cv.wait(lock);\n+      completed = true;\n+    }));\n+  }\n+\n+  std::unique_lock<std::mutex> lock(mx);\n+  cv.wait(lock, [&ready] { return ready; });\n+  // Thread pool has shut down, now we unblock the task\n+  cv.notify_one();\n+  lock.unlock();\n+\n+  // The worker thread should be able to keep the thread pool alive by itself\n\nReview comment:\n       This logic ended up being wrong.  The pointer should indeed (and now does) \"disappear\".\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-10T04:07:02.172+0000",
                    "updated": "2021-06-10T04:07:02.172+0000",
                    "started": "2021-06-10T04:07:02.172+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "609459",
                    "issueId": "13380419"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380419/worklog/610476",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on pull request #10401:\nURL: https://github.com/apache/arrow/pull/10401#issuecomment-859991386\n\n\n   This is stable again and ready for review.  As mentioned in https://github.com/apache/arrow/pull/10401#discussion_r648833516 there is a little bit of awkwardness with pimpl + inheritance so let me know if one of those alternatives seems preferable.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-14T07:55:57.684+0000",
                    "updated": "2021-06-14T07:55:57.684+0000",
                    "started": "2021-06-14T07:55:57.683+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "610476",
                    "issueId": "13380419"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380419/worklog/612697",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #10401:\nURL: https://github.com/apache/arrow/pull/10401#issuecomment-865106129\n\n\n   Hmm, I don't think you have to expose any inheritance at the public API level. You can just do so in the private impl classes (you can call them however you like :-)). That would help clean up the public header too.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-21T15:02:19.387+0000",
                    "updated": "2021-06-21T15:02:19.387+0000",
                    "started": "2021-06-21T15:02:19.386+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "612697",
                    "issueId": "13380419"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380419/worklog/612699",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou edited a comment on pull request #10401:\nURL: https://github.com/apache/arrow/pull/10401#issuecomment-865106129\n\n\n   Hmm, I don't think you have to expose any inheritance at the public API level. You can just do so in the private impl classes (you can call them however you like :-)). That would help clean up the public header too.\r\n   \r\n   (also, er, big sorry for the delay :-S)\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-21T15:02:47.972+0000",
                    "updated": "2021-06-21T15:02:47.972+0000",
                    "started": "2021-06-21T15:02:47.972+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "612699",
                    "issueId": "13380419"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380419/worklog/613130",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou edited a comment on pull request #10401:\nURL: https://github.com/apache/arrow/pull/10401#issuecomment-865106129\n\n\n   Hmm, I don't think you have to expose any inheritance at the public API level. You can just do so in the private impl classes (you can call them however you like :-)). That would help clean up the public header too.\r\n   \r\n   (also, er, big sorry for the delay :-S)\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-22T07:50:59.940+0000",
                    "updated": "2021-06-22T07:50:59.940+0000",
                    "started": "2021-06-22T07:50:59.940+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "613130",
                    "issueId": "13380419"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
            "id": "7",
            "description": "The sub-task of the issue",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
            "name": "Sub-task",
            "subtask": true,
            "avatarId": 21146
        },
        "timespent": 14400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@1f998acc[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@79405ea7[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@380506b3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@43cbd272[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2fe758a8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@dabbdac[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1d8b1234[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@ce0bb5[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1579311c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@456fb8c2[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3008e9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@70d328f9[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 14400,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Jul 12 14:04:27 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": null,
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12878/watchers",
            "watchCount": 2,
            "isWatching": true
        },
        "created": "2021-05-25T23:01:48.000+0000",
        "updated": "2022-07-12T14:04:27.000+0000",
        "timeoriginalestimate": null,
        "description": "Rather than duplicate everything in arrow::internal::ThreadPool when creating a work stealing thread pool we should make arrow::internal::ThreadPool a base class that can be extended by specific strategies.\r\n\r\nThis PR is simply to split the thread pool into a base class and a \"SimpleThreadPool\" implementation which uses a single queue of tasks and locks (i.e. what we have today).",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "4h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 14400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Generalize thread pool to allow for different queuing strategies / worker loops",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380419/comment/17565624",
                    "id": "17565624",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=toddfarmer",
                        "name": "toddfarmer",
                        "key": "JIRAUSER288796",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39935",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39935",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39935",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39935"
                        },
                        "displayName": "Todd Farmer",
                        "active": true,
                        "timeZone": "America/Boise"
                    },
                    "body": "This issue was last updated over 90 days ago, which may be an indication it is no longer being actively worked. To better reflect the current state, the issue is being unassigned. Please feel free to re-take assignment of the issue if it is being actively worked, or if you plan to start that work soon.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=toddfarmer",
                        "name": "toddfarmer",
                        "key": "JIRAUSER288796",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39935",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39935",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39935",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39935"
                        },
                        "displayName": "Todd Farmer",
                        "active": true,
                        "timeZone": "America/Boise"
                    },
                    "created": "2022-07-12T14:04:27.540+0000",
                    "updated": "2022-07-12T14:04:27.540+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0rdc0:",
        "customfield_12314139": null
    }
}