{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13431051",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13431051",
    "key": "ARROW-15804",
    "fields": {
        "parent": {
            "id": "13431053",
            "key": "ARROW-15805",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/13431053",
            "fields": {
                "summary": "[R] Update the as.Date() binding",
                "status": {
                    "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                    "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                    "name": "Resolved",
                    "id": "5",
                    "statusCategory": {
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                        "id": 3,
                        "key": "done",
                        "colorName": "green",
                        "name": "Done"
                    }
                },
                "priority": {
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                    "name": "Major",
                    "id": "3"
                },
                "issuetype": {
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                    "id": "4",
                    "description": "An improvement or enhancement to an existing feature or task.",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                    "name": "Improvement",
                    "subtask": false,
                    "avatarId": 21140
                }
            }
        },
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351550",
                "id": "12351550",
                "name": "9.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-08-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12634651",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12634651",
                "type": {
                    "id": "10001",
                    "name": "dependent",
                    "inward": "is depended upon by",
                    "outward": "depends upon",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10001"
                },
                "outwardIssue": {
                    "id": "13428017",
                    "key": "ARROW-15659",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13428017",
                    "fields": {
                        "summary": "[R] strptime should return NA (not error) with format mismatch ",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                            "id": "1",
                            "description": "A problem which impairs or prevents the functions of the product.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                            "name": "Bug",
                            "subtask": false,
                            "avatarId": 21133
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=dragosmg",
            "name": "dragosmg",
            "key": "dragosmg",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34061",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34061",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34061",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34061"
            },
            "displayName": "Drago\u0219 Moldovan-Gr\u00fcnfeld",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333008",
                "id": "12333008",
                "name": "R"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=dragosmg",
            "name": "dragosmg",
            "key": "dragosmg",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34061",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34061",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34061",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34061"
            },
            "displayName": "Drago\u0219 Moldovan-Gr\u00fcnfeld",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=dragosmg",
            "name": "dragosmg",
            "key": "dragosmg",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34061",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34061",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34061",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34061"
            },
            "displayName": "Drago\u0219 Moldovan-Gr\u00fcnfeld",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 27000,
            "total": 27000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 27000,
            "total": 27000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15804/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 45,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13431051/worklog/766555",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "dragosmg opened a new pull request, #13070:\nURL: https://github.com/apache/arrow/pull/13070\n\n   This PR will allow users to attempt parsing with several formats via the `tryFormats` argument to `as.Date()`.\n\n\n",
                    "created": "2022-05-05T10:30:08.126+0000",
                    "updated": "2022-05-05T10:30:08.126+0000",
                    "started": "2022-05-05T10:30:08.126+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "766555",
                    "issueId": "13431051"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13431051/worklog/766556",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13070:\nURL: https://github.com/apache/arrow/pull/13070#issuecomment-1118400912\n\n   https://issues.apache.org/jira/browse/ARROW-15804\n\n\n",
                    "created": "2022-05-05T10:30:29.808+0000",
                    "updated": "2022-05-05T10:30:29.808+0000",
                    "started": "2022-05-05T10:30:29.808+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "766556",
                    "issueId": "13431051"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13431051/worklog/768553",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "dragosmg commented on code in PR #13070:\nURL: https://github.com/apache/arrow/pull/13070#discussion_r869364766\n\n\n##########\nr/tests/testthat/test-dataset-dplyr.R:\n##########\n@@ -80,26 +80,29 @@ test_that(\"filter() on timestamp columns\", {\n     df1[5:10, c(\"ts\")],\n   )\n \n-  # Now with Date\n+  # Now with bare string date\n+  skip(\"Implement more aggressive implicit casting for scalars (ARROW-11402)\")\n   expect_equal(\n     ds %>%\n-      filter(ts >= as.Date(\"2015-05-04\")) %>%\n+      filter(ts >= \"2015-05-04\") %>%\n       filter(part == 1) %>%\n       select(ts) %>%\n       collect(),\n     df1[5:10, c(\"ts\")],\n   )\n \n-  # Now with bare string date\n-  skip(\"Implement more aggressive implicit casting for scalars (ARROW-11402)\")\n+  # string processing requires RE2 library (not available on Windows with R 3.6)\n+  skip_if_not_available(\"re2\")\n\nReview Comment:\n   I moved this test at the end of the test block since the `as.Date()` binding now depends on RE2 (not available in R 3.6 on Windows).\n\n\n\n##########\nr/tests/testthat/test-dataset-dplyr.R:\n##########\n@@ -108,18 +111,20 @@ test_that(\"filter() on date32 columns\", {\n   df <- data.frame(date = as.Date(c(\"2020-02-02\", \"2020-02-03\")))\n   write_parquet(df, file.path(tmp, \"file.parquet\"))\n \n+  # Also with timestamp scalar\n   expect_equal(\n     open_dataset(tmp) %>%\n-      filter(date > as.Date(\"2020-02-02\")) %>%\n+      filter(date > lubridate::ymd_hms(\"2020-02-02 00:00:00\")) %>%\n       collect() %>%\n       nrow(),\n     1L\n   )\n \n-  # Also with timestamp scalar\n+  # string processing requires RE2 library (not available on Windows with R 3.6)\n+  skip_if_not_available(\"re2\")\n\nReview Comment:\n   Same as above - `as.Date()` now needs RE2.\n\n\n\n",
                    "created": "2022-05-10T15:15:48.565+0000",
                    "updated": "2022-05-10T15:15:48.565+0000",
                    "started": "2022-05-10T15:15:48.565+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "768553",
                    "issueId": "13431051"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13431051/worklog/769083",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on code in PR #13070:\nURL: https://github.com/apache/arrow/pull/13070#discussion_r870332856\n\n\n##########\nr/tests/testthat/test-dplyr-funcs-datetime.R:\n##########\n@@ -1490,8 +1490,10 @@ test_that(\"`as.Date()` and `as_date()`\", {\n     dt_utc = ymd_hms(\"2010-08-03 00:50:50\"),\n     date_var = as.Date(\"2022-02-25\"),\n     difference_date = ymd_hms(\"2010-08-03 00:50:50\", tz = \"Pacific/Marquesas\"),\n-    character_ymd_var = \"2022-02-25 00:00:01\",\n-    character_ydm_var = \"2022/25/02 00:00:01\",\n+    character_ymd_hms_var = \"2022-02-25 00:00:01\",\n+    character_ydm_hms_var = \"2022/25/02 00:00:01\",\n+    character_ymd_var = \"2022-02-25\",\n+    character_ydm_var = \"2022/25/02\",\n     integer_var = 32L,\n\nReview Comment:\n   We should add at least one test with multiple dates (and especially one with multiple formats, like `c(\"2022-01-23\", \"2022/01/23\")`) I suspect that will surface some interesting consequences for the operational parts of this code. For example:\r\n   \r\n   ```\r\n   > as.Date(c(\"2022-01-01\", \"2022/01/01\"), tryFormats = c(\"%Y-%m-%d\", \"%Y/%m/%d\"))\r\n   [1] \"2022-01-01\" NA     \r\n   > lubridate::as_date(c(\"2022-01-01\", \"2022/01/01\"))\r\n   [1] \"2022-01-01\" \"2022-01-01\"\r\n   ```\r\n   \r\n   We don't need to necessarily change this particular fixture (though having multiple rows is generally a good idea that we probably should have caught earlier...). But we should definitely have tests for this behavior.\n\n\n\n",
                    "created": "2022-05-11T13:57:45.530+0000",
                    "updated": "2022-05-11T13:57:45.530+0000",
                    "started": "2022-05-11T13:57:45.530+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "769083",
                    "issueId": "13431051"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13431051/worklog/769136",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "dragosmg commented on code in PR #13070:\nURL: https://github.com/apache/arrow/pull/13070#discussion_r870450357\n\n\n##########\nr/tests/testthat/test-dplyr-funcs-datetime.R:\n##########\n@@ -1490,8 +1490,10 @@ test_that(\"`as.Date()` and `as_date()`\", {\n     dt_utc = ymd_hms(\"2010-08-03 00:50:50\"),\n     date_var = as.Date(\"2022-02-25\"),\n     difference_date = ymd_hms(\"2010-08-03 00:50:50\", tz = \"Pacific/Marquesas\"),\n-    character_ymd_var = \"2022-02-25 00:00:01\",\n-    character_ydm_var = \"2022/25/02 00:00:01\",\n+    character_ymd_hms_var = \"2022-02-25 00:00:01\",\n+    character_ydm_hms_var = \"2022/25/02 00:00:01\",\n+    character_ymd_var = \"2022-02-25\",\n+    character_ydm_var = \"2022/25/02\",\n     integer_var = 32L,\n\nReview Comment:\n   The `NA` appears due to the way the `tryFormats` are used: if the first format in `tryFormats` is successful (for the first non-NA element of `x`), the second one isn't tried. While with `coalesce` we continue to try until we run out of formats. \n\n\n\n",
                    "created": "2022-05-11T15:17:52.020+0000",
                    "updated": "2022-05-11T15:17:52.020+0000",
                    "started": "2022-05-11T15:17:52.020+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "769136",
                    "issueId": "13431051"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13431051/worklog/769158",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "dragosmg commented on code in PR #13070:\nURL: https://github.com/apache/arrow/pull/13070#discussion_r870450357\n\n\n##########\nr/tests/testthat/test-dplyr-funcs-datetime.R:\n##########\n@@ -1490,8 +1490,10 @@ test_that(\"`as.Date()` and `as_date()`\", {\n     dt_utc = ymd_hms(\"2010-08-03 00:50:50\"),\n     date_var = as.Date(\"2022-02-25\"),\n     difference_date = ymd_hms(\"2010-08-03 00:50:50\", tz = \"Pacific/Marquesas\"),\n-    character_ymd_var = \"2022-02-25 00:00:01\",\n-    character_ydm_var = \"2022/25/02 00:00:01\",\n+    character_ymd_hms_var = \"2022-02-25 00:00:01\",\n+    character_ydm_hms_var = \"2022/25/02 00:00:01\",\n+    character_ymd_var = \"2022-02-25\",\n+    character_ydm_var = \"2022/25/02\",\n     integer_var = 32L,\n\nReview Comment:\n   The `NA` appears due to the way the `tryFormats` are used: if the first format in `tryFormats` is successful (for the first non-NA element of `x`), the second one isn't tried. While with `coalesce` we continue to try until we run out of formats. \r\n   \r\n   I guess the underlying assumption in base is that all strings have the same format. \n\n\n\n",
                    "created": "2022-05-11T15:51:40.607+0000",
                    "updated": "2022-05-11T15:51:40.607+0000",
                    "started": "2022-05-11T15:51:40.606+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "769158",
                    "issueId": "13431051"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13431051/worklog/769168",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "dragosmg commented on PR #13070:\nURL: https://github.com/apache/arrow/pull/13070#issuecomment-1123968811\n\n   > Like I mention with the test addition, I suspect coalesce isn't quite the right behavior here. As for returning NA: is that the behavior of the function we are binding? If so, that's great + good. If not, we should think if we can fix that.\r\n   \r\n   I agree with you that `coalesce()` doesn't seem to be the right behaviour (i.e. not giving us _perfect_ overlap with `base::as.Date()`). Do you have any ideas on this? I can't replicate the base behaviour (subsetting the column ...).\r\n   \r\n   On the returning `NA`. It depends. We don't align with the behaviour of `as.Date()` only when _all_ formats fail to parse and `optional = FALSE` (which is the default) , in which case we align with `as.Date(optional = TRUE)`.  It's a decent, but again, not _perfect_ overlap.\r\n   \r\n   ``` r\r\n   x <- c(NA, \"2022-01-01\", \"2022/01/01\")\r\n   \r\n   as.Date(x, tryFormats = c(\"%y-%m-%d\", \"%y/%m/%d\"), optional = FALSE) # default\r\n   #> Error in charToDate(x): character string is not in a standard unambiguous format\r\n   as.Date(x, tryFormats = c(\"%y-%m-%d\", \"%y/%m/%d\"), optional = TRUE)\r\n   #> [1] NA NA NA\r\n   ```\r\n   \r\n   <sup>Created on 2022-05-11 by the [reprex package](https://reprex.tidyverse.org) (v2.0.1)</sup>\n\n\n",
                    "created": "2022-05-11T16:04:25.327+0000",
                    "updated": "2022-05-11T16:04:25.327+0000",
                    "started": "2022-05-11T16:04:25.326+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "769168",
                    "issueId": "13431051"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13431051/worklog/769211",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on PR #13070:\nURL: https://github.com/apache/arrow/pull/13070#issuecomment-1124050785\n\n   > Do you have any ideas on this? I\"m struggling a bit to replicate the base behaviour (subsetting the column ...).\r\n   \r\n   What have you tried so far? This _will_ be tricky + it's totally possible that it is not feasible to emulate this behavior with the way we build these. \r\n   \r\n   > On the returning NA. It depends. We don't align with the behaviour of as.Date() only when all formats fail to parse and optional = FALSE (which is the default) , in which case we align with as.Date(optional = TRUE). It's a decent, but again, not perfect overlap. \r\n   \r\n   Since we have the option to either emit an `NA` or error on parsing fail, could we capture this behavior?  \r\n   \r\n   \r\n   Tangentially, the example you use works, though it's a bit confusing IMO `%y` fails because it's year-without-century as opposed to `%Y`. And the NA at the beginning also made me think that was what you were relying on for failing the guessing, but that's doesn't actually make the parsing fail (which I got from reading the source of `as.Date.character`...). Here's a slightly more minimal | possibly less confusing example of that same phenomenon: \r\n   \r\n   ```\r\n   > x <- c(\"2022-01-01\", \"2022/01/01\")\r\n   > as.Date(x, tryFormats = c(\"%Y--\", \"%m--\"), optional = FALSE)\r\n   Error in charToDate(x) : \r\n     character string is not in a standard unambiguous format\r\n   > as.Date(x, tryFormats = c(\"%Y--\", \"%m--\"), optional = TRUE)\r\n   [1] NA NA\r\n   ```\r\n   \n\n\n",
                    "created": "2022-05-11T17:28:43.299+0000",
                    "updated": "2022-05-11T17:28:43.299+0000",
                    "started": "2022-05-11T17:28:43.299+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "769211",
                    "issueId": "13431051"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13431051/worklog/769505",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "dragosmg commented on PR #13070:\nURL: https://github.com/apache/arrow/pull/13070#issuecomment-1124753103\n\n   > What have you tried so far? This _will_ be tricky + it's totally possible that it is not feasible to emulate this behavior with the way we build these.\r\n    \r\n   Initially I started by trying to apply an identical logic to `as.Date.character()`: find the first non-null element and attempt to parse it with the first format, then move on to the next format, etc. Computationally it should be relatively efficient since we would try the formats on a single element, but I couldn't figure out how to do this with expressions (find the first non-null, apply the format, force the computation, if NA, try the next one, etc).   \r\n   \n\n\n",
                    "created": "2022-05-12T09:34:12.760+0000",
                    "updated": "2022-05-12T09:34:12.760+0000",
                    "started": "2022-05-12T09:34:12.760+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "769505",
                    "issueId": "13431051"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13431051/worklog/769510",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "dragosmg commented on PR #13070:\nURL: https://github.com/apache/arrow/pull/13070#issuecomment-1124764857\n\n   > Since we have the option to either emit an `NA` or error on parsing fail, could we capture this behavior?\r\n   \r\n   We could, but _if_ we use `coalesce()` (not saying we should, but it's the best I was able to come up with), then we'd need to build the iteration something like:\r\n   ```r\r\n   coalesce(\r\n   build_expr(\"strptime\", ..., error_is_null = TRUE)\r\n   ...\r\n   build_expr(\"strptime\", ..., error_is_null = FALSE)\r\n   )\r\n   ```\r\n   \r\n   Because we'd still try the various formats and we want to error or return NA only if all of them fail to parse.\n\n\n",
                    "created": "2022-05-12T09:39:47.101+0000",
                    "updated": "2022-05-12T09:39:47.101+0000",
                    "started": "2022-05-12T09:39:47.101+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "769510",
                    "issueId": "13431051"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13431051/worklog/769768",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "dragosmg commented on PR #13070:\nURL: https://github.com/apache/arrow/pull/13070#issuecomment-1125242801\n\n   @jonkeane in terms of what have I tried, I went down this route to identify the fist non-NULL element of `x`. \r\n   \r\n   ```r\r\n     for (i in 1:x$length()) {\r\n       if (x$IsValid(i -1)) {\r\n         xx <- x$Slice(i - 1 , 1)\r\n         break()\r\n       }\r\n     }\r\n   ```\r\n   which doesn't work when `x` is an `Expression`, but it does the it is an `Array`. If only there were a way to anticipatively get the length of an `Expression` output (and other info) once evaluated. \n\n\n",
                    "created": "2022-05-12T17:21:28.409+0000",
                    "updated": "2022-05-12T17:21:28.409+0000",
                    "started": "2022-05-12T17:21:28.409+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "769768",
                    "issueId": "13431051"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13431051/worklog/770220",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on PR #13070:\nURL: https://github.com/apache/arrow/pull/13070#issuecomment-1126151870\n\n   > Initially I started by trying to apply an identical logic to as.Date.character(): find the first non-null element and attempt to parse it with the first format, then move on to the next format, etc. Computationally it should be relatively efficient since we would try the formats on a single element, but I couldn't figure out how to do this with expressions (find the first non-null, apply the format, force the computation, if NA, try the next one, etc).\r\n   \r\n   Your description of how base R accomplishes this is good \u2014 and like you mention: iterating through data (even to get a single element) might be complicate or problematic.\r\n   \r\n   The next step I would take is to explore what functionality is available (you seem to have found `IsValid()` which is good. You'll need to look at both Arrays and Expressions, since you could get either in a dplyr query like this (are there any other object types you might encounter there?). And then I would try and construct a way to get the format then apply it. In this exploration it's ok to have unreasonable or code that we might not want to ship to see if it's possible. This type of data introspection is not common in our bindings, but you might look around to see if there are any others that do similar (I don't know of any off the top of my head, but it's possible that one exists).\r\n   \r\n   Another approach might be to try other methods of constructing expressions that don't use coalesce but produce multiple columns and you select one at the end of the expression.\r\n   \r\n   It's entirely possible that this type of introspection + format selection will not be feasible in R-only code too. But as always, it's helpful to explore and see + have something that ~works even if it's not what we want to create tests + implement it in the C++ layer. \n\n\n",
                    "created": "2022-05-13T15:00:16.999+0000",
                    "updated": "2022-05-13T15:00:16.999+0000",
                    "started": "2022-05-13T15:00:16.998+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "770220",
                    "issueId": "13431051"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13431051/worklog/770867",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "dragosmg commented on PR #13070:\nURL: https://github.com/apache/arrow/pull/13070#issuecomment-1127773550\n\n   > You'll need to look at both Arrays and Expressions, since you could get either in a dplyr query like this (are there any other object types you might encounter there?\r\n   \r\n   That was one of my issues. I figured how to do it for Arrays (i.e. the logic of the selection), but not for Expressions - which are the types we have there. \n\n\n",
                    "created": "2022-05-16T14:50:38.015+0000",
                    "updated": "2022-05-16T14:50:38.015+0000",
                    "started": "2022-05-16T14:50:38.015+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "770867",
                    "issueId": "13431051"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13431051/worklog/774626",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "dragosmg commented on PR #13070:\nURL: https://github.com/apache/arrow/pull/13070#issuecomment-1137441893\n\n   I've been thinking a bit about this. I wasn't able to find a way to mimic the `base::as.Date()` behaviour. I proposed we could keep the existing behaviour of **not** allowing more that one format for `tryFormats`. This would be consistent with the `strptime` behaviour, where the base R version allows a `format` vector longer than 1 and recycles the vector, while Arrow's version of `strptime` does not allow a `format` vector longer than 1. \r\n   \r\n   reprex to show `base::strptime()` with a format vector longer than 1 and the accompanying recycling behaviour:\r\n   ``` r\r\n   library(arrow, warn.conflicts = FALSE)\r\n   \r\n   a <- c(\"2022-01-01\", \"2022/01/02\", \"2022/01/03\", \"2022-01-04\", NA)\r\n   strptime(a, format = c(\"%Y-%m-%d\", \"%Y/%m/%d\"))\r\n   #> [1] \"2022-01-01 GMT\" \"2022-01-02 GMT\" NA               NA              \r\n   #> [5] NA\r\n   \r\n   call_function(\"strptime\", Array$create(a), \r\n                 options = list(format = c(\"%Y-%m-%d\", \"%Y/%m/%d\"), unit = 0L, error_is_null = TRUE))\r\n   #> Error: Expected string vector of length 1\r\n   ```\r\n   \r\n   <sup>Created on 2022-05-25 by the [reprex package](https://reprex.tidyverse.org) (v2.0.1)</sup>  \r\n   \r\n   What do you think @jonkeane?\n\n\n",
                    "created": "2022-05-25T15:30:36.655+0000",
                    "updated": "2022-05-25T15:30:36.655+0000",
                    "started": "2022-05-25T15:30:36.654+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "774626",
                    "issueId": "13431051"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13431051/worklog/774954",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "dragosmg commented on PR #13070:\nURL: https://github.com/apache/arrow/pull/13070#issuecomment-1138334117\n\n   I think there is something I'd like to try here. An approach similar to the `case_when()` binding. It might be computationally costly, but it might also work (and won't require relying on `coalesce()`). \r\n   Short sketch:\r\n   * build `strptime` Expressions for each `tryFormat` -> this should give us a list of Expressions\r\n   * force evaluation of each Expression with `arrow_eval` in a mask probably 2-3 caller environments higher -> this should give us a list of values\r\n   * reduce the list of values to the position of the first NA / first non-NA elements. \r\n   * compare first NA / non-NA positions and choose the format    \n\n\n",
                    "created": "2022-05-26T09:18:39.070+0000",
                    "updated": "2022-05-26T09:18:39.070+0000",
                    "started": "2022-05-26T09:18:39.070+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "774954",
                    "issueId": "13431051"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13431051/worklog/787542",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on code in PR #13070:\nURL: https://github.com/apache/arrow/pull/13070#discussion_r912860201\n\n\n##########\nr/R/dplyr-datetime-helpers.R:\n##########\n@@ -105,7 +105,12 @@ binding_as_date <- function(x,\n                             tryFormats = \"%Y-%m-%d\",\n                             origin = \"1970-01-01\") {\n   if (is.null(format) && length(tryFormats) > 1) {\n-    abort(\"`as.Date()` with multiple `tryFormats` is not supported in Arrow\")\n+    abort(\n+      paste(\n+        \"`as.Date()` with multiple `tryFormats` is not supported in Arrow,\",\n+        \"consider using the specialised parsing functions\"\n\nReview Comment:\n   As a naive user I might not know what you mean here by \"the specialised parsing functions\" - mind making this message more specific?\n\n\n\n",
                    "created": "2022-07-04T10:23:53.278+0000",
                    "updated": "2022-07-04T10:23:53.278+0000",
                    "started": "2022-07-04T10:23:53.278+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "787542",
                    "issueId": "13431051"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13431051/worklog/787543",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "dragosmg commented on code in PR #13070:\nURL: https://github.com/apache/arrow/pull/13070#discussion_r912861073\n\n\n##########\nr/R/dplyr-datetime-helpers.R:\n##########\n@@ -105,7 +105,12 @@ binding_as_date <- function(x,\n                             tryFormats = \"%Y-%m-%d\",\n                             origin = \"1970-01-01\") {\n   if (is.null(format) && length(tryFormats) > 1) {\n-    abort(\"`as.Date()` with multiple `tryFormats` is not supported in Arrow\")\n+    abort(\n+      paste(\n+        \"`as.Date()` with multiple `tryFormats` is not supported in Arrow,\",\n+        \"consider using the specialised parsing functions\"\n\nReview Comment:\n   Does \"lubridate specialised parsing functions\" sound better?\n\n\n\n",
                    "created": "2022-07-04T10:24:58.330+0000",
                    "updated": "2022-07-04T10:24:58.330+0000",
                    "started": "2022-07-04T10:24:58.330+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "787543",
                    "issueId": "13431051"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13431051/worklog/787545",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "dragosmg commented on code in PR #13070:\nURL: https://github.com/apache/arrow/pull/13070#discussion_r912861073\n\n\n##########\nr/R/dplyr-datetime-helpers.R:\n##########\n@@ -105,7 +105,12 @@ binding_as_date <- function(x,\n                             tryFormats = \"%Y-%m-%d\",\n                             origin = \"1970-01-01\") {\n   if (is.null(format) && length(tryFormats) > 1) {\n-    abort(\"`as.Date()` with multiple `tryFormats` is not supported in Arrow\")\n+    abort(\n+      paste(\n+        \"`as.Date()` with multiple `tryFormats` is not supported in Arrow,\",\n+        \"consider using the specialised parsing functions\"\n\nReview Comment:\n   Does \"lubridate specialised parsing functions\" sound better? I'm thinking about the family of functions that take a string as input and output a date object.\n\n\n\n",
                    "created": "2022-07-04T10:25:23.355+0000",
                    "updated": "2022-07-04T10:25:23.355+0000",
                    "started": "2022-07-04T10:25:23.355+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "787545",
                    "issueId": "13431051"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13431051/worklog/787548",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "dragosmg commented on code in PR #13070:\nURL: https://github.com/apache/arrow/pull/13070#discussion_r912864038\n\n\n##########\nr/R/dplyr-datetime-helpers.R:\n##########\n@@ -105,7 +105,12 @@ binding_as_date <- function(x,\n                             tryFormats = \"%Y-%m-%d\",\n                             origin = \"1970-01-01\") {\n   if (is.null(format) && length(tryFormats) > 1) {\n-    abort(\"`as.Date()` with multiple `tryFormats` is not supported in Arrow\")\n+    abort(\n+      paste(\n+        \"`as.Date()` with multiple `tryFormats` is not supported in Arrow,\",\n+        \"consider using the specialised parsing functions\"\n\nReview Comment:\n   Or the \"specialised parsing functions in lubridate\"? Maybe with an \"(e.g ymd())\".\n\n\n\n",
                    "created": "2022-07-04T10:28:33.825+0000",
                    "updated": "2022-07-04T10:28:33.825+0000",
                    "started": "2022-07-04T10:28:33.825+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "787548",
                    "issueId": "13431051"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13431051/worklog/787550",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on code in PR #13070:\nURL: https://github.com/apache/arrow/pull/13070#discussion_r912865250\n\n\n##########\nr/R/dplyr-datetime-helpers.R:\n##########\n@@ -105,7 +105,12 @@ binding_as_date <- function(x,\n                             tryFormats = \"%Y-%m-%d\",\n                             origin = \"1970-01-01\") {\n   if (is.null(format) && length(tryFormats) > 1) {\n-    abort(\"`as.Date()` with multiple `tryFormats` is not supported in Arrow\")\n+    abort(\n+      paste(\n+        \"`as.Date()` with multiple `tryFormats` is not supported in Arrow,\",\n+        \"consider using the specialised parsing functions\"\n\nReview Comment:\n   I'd be inclined to include an example function (do you mean like `ymd()` etc?) as it's not immediately apparent what functions you mean without a little extra thought.\n\n\n\n",
                    "created": "2022-07-04T10:30:09.095+0000",
                    "updated": "2022-07-04T10:30:09.095+0000",
                    "started": "2022-07-04T10:30:09.094+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "787550",
                    "issueId": "13431051"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
            "id": "7",
            "description": "The sub-task of the issue",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
            "name": "Sub-task",
            "subtask": true,
            "avatarId": 21146
        },
        "timespent": 27000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5aafc3ab[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@9c523ce[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@75b1c1ae[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@554a4785[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@40cef1f6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@2e1279e7[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5555713a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@5224727a[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@65d26889[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@58b2f895[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@26109e18[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@57569f02[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 27000,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Jul 05 11:35:28 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-07-05T11:35:28.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15804/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2022-02-28T17:33:56.000+0000",
        "updated": "2022-07-05T14:11:18.000+0000",
        "timeoriginalestimate": null,
        "description": "We could use {{coalesce()}} to cycle through several {{{}formats{}}}. However this would not\u00a0get us a behaviour identical to base R. For more on this see Jon's comment in the umbrella / parent issue.\u00a0\r\n\r\nI improved the error message and the behaviour with remain the same. Users will not be able to supply more formats to {{{}tryFormats{}}}, but they will be advised to try the specialised parsing functions when they do so.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "7.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 27000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[R] Improve as.Date() error message when supplying several tryFormats",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13431051/comment/17562619",
                    "id": "17562619",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
                        "name": "thisisnic",
                        "key": "thisisnic",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
                        },
                        "displayName": "Nicola Crane",
                        "active": true,
                        "timeZone": "Africa/Casablanca"
                    },
                    "body": "Issue resolved by pull request 13070\n[https://github.com/apache/arrow/pull/13070]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
                        "name": "thisisnic",
                        "key": "thisisnic",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
                        },
                        "displayName": "Nicola Crane",
                        "active": true,
                        "timeZone": "Africa/Casablanca"
                    },
                    "created": "2022-07-05T11:35:28.480+0000",
                    "updated": "2022-07-05T11:35:28.480+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z100k0:",
        "customfield_12314139": null
    }
}