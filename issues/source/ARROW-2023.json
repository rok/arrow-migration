{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13133266",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133266",
    "key": "ARROW-2023",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341707",
                "id": "12341707",
                "description": "",
                "name": "0.9.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-03-19"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12525065",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12525065",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "outwardIssue": {
                    "id": "13103863",
                    "key": "ARROW-1589",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13103863",
                    "fields": {
                        "summary": "[C++] Fuzzing for certain input formats",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/6",
                            "id": "6",
                            "description": "A new unit, integration or system test.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/issuetypes/requirement.png",
                            "name": "Test",
                            "subtask": false
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2023/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@53857ab6[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@63d920b7[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@66954dd1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@4ce3052c[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@320d9c5d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@42e39062[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@ed4a62a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@5aca18b9[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4fb88c9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@5ac578b4[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@710b7030[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7b0eb178[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Feb 27 09:38:20 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-02-27T09:38:20.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2023/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2018-01-24T03:53:41.000+0000",
        "updated": "2018-02-27T09:38:20.000+0000",
        "timeoriginalestimate": null,
        "description": "This was reported to segfault in ARROW-1589",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Test opening IPC stream reader or file reader on an empty InputStream",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133266/comment/16338411",
                    "id": "16338411",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm opened a new pull request #1503: WIP ARROW-2023: [C++] Start stream reader tests for malformed inputs\nURL: https://github.com/apache/arrow/pull/1503\n \n \n   More to do here, see discussion in https://issues.apache.org/jira/browse/ARROW-1589\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-24T23:27:25.588+0000",
                    "updated": "2018-01-24T23:27:25.588+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133266/comment/16377554",
                    "id": "16377554",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1503: ARROW-2023: [C++] Fix ASAN failure on malformed / empty stream input, enable ASAN builds, add more dev docs\nURL: https://github.com/apache/arrow/pull/1503#issuecomment-368645019\n \n \n   @xhochy @crepererum this is ready to go. note this only fixes one of the fuzzer failures, now it returns a Flatbuffers error:\r\n   \r\n   ```\r\n   ==19598==The signal is caused by a READ memory access.\r\n       #0 0x682c79 in int flatbuffers::ReadScalar<int>(void const*) /home/wesm/cpp-toolchain/include/flatbuffers/flatbuffers.h:198:23\r\n       #1 0x682b6f in flatbuffers::Table::GetVTable() const /home/wesm/cpp-toolchain/include/flatbuffers/flatbuffers.h:1583:20\r\n       #2 0x682a3a in flatbuffers::Table::GetOptionalFieldOffset(unsigned short) const /home/wesm/cpp-toolchain/include/flatbuffers/flatbuffers.h:1590:19\r\n       #3 0x6b0e8e in long flatbuffers::Table::GetField<long>(unsigned short, long) const /home/wesm/cpp-toolchain/include/flatbuffers/flatbuffers.h:1599:25\r\n       #4 0x783934 in org::apache::arrow::flatbuf::Message::bodyLength() const /home/wesm/code/arrow/cpp/build/src/arrow/ipc/Message_generated.h:294:12\r\n       #5 0x77ced7 in arrow::ipc::Message::ReadFrom(std::shared_ptr<arrow::Buffer> const&, arrow::io::InputStream*, std::unique_ptr<arrow::ipc::Message, std::default_delete<arrow::ipc::Message> >*) /home/wesm/code/arrow/cpp/build/../src/arrow/ipc/message.cc:140:37\r\n       #6 0x7824d9 in arrow::ipc::ReadMessage(arrow::io::InputStream*, std::unique_ptr<arrow::ipc::Message, std::default_delete<arrow::ipc::Message> >*) /home/wesm/code/arrow/cpp/build/../src/arrow/ipc/message.cc:236:10\r\n       #7 0x784036 in arrow::ipc::InputStreamMessageReader::ReadNextMessage(std::unique_ptr<arrow::ipc::Message, std::default_delete<arrow::ipc::Message> >*) /home/wesm/code/arrow/cpp/build/../src/arrow/ipc/message.cc:255:12\r\n       #8 0x67abb8 in arrow::ipc::ReadMessageAndValidate(arrow::ipc::MessageReader*, arrow::ipc::Message::Type, bool, std::unique_ptr<arrow::ipc::Message, std::default_delete<arrow::ipc::Message> >*) /home/wesm/code/arrow/cpp/build/../src/arrow/ipc/reader.cc:371:29\r\n       #9 0x6b2e82 in arrow::ipc::RecordBatchStreamReader::RecordBatchStreamReaderImpl::ReadSchema() /home/wesm/code/arrow/cpp/build/../src/arrow/ipc/reader.cc:426:23\r\n       #10 0x67d40f in arrow::ipc::RecordBatchStreamReader::RecordBatchStreamReaderImpl::Open(std::unique_ptr<arrow::ipc::MessageReader, std::default_delete<arrow::ipc::MessageReader> >) /home/wesm/code/arrow/cpp/build/../src/arrow/ipc/reader.cc:407:12\r\n       #11 0x6724d2 in arrow::ipc::RecordBatchStreamReader::Open(std::unique_ptr<arrow::ipc::MessageReader, std::default_delete<arrow::ipc::MessageReader> >, std::shared_ptr<arrow::RecordBatchReader>*) /home/wesm/code/arrow/cpp/build/../src/arrow/ipc/reader.cc:477:36\r\n       #12 0x672dc0 in arrow::ipc::RecordBatchStreamReader::Open(arrow::io::InputStream*, std::shared_ptr<arrow::RecordBatchReader>*) /home/wesm/code/arrow/cpp/build/../src/arrow/ipc/reader.cc:484:10\r\n       #13 0x651842 in LLVMFuzzerTestOneInput /home/wesm/code/arrow/cpp/build/../src/arrow/ipc/ipc-fuzzing-test.cc:31:12\r\n       #14 0x52a0ae in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) (/home/wesm/code/arrow/cpp/build/debug/ipc-fuzzing-test+0x52a0ae)\r\n       #15 0x529a94 in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*) (/home/wesm/code/arrow/cpp/build/debug/ipc-fuzzing-test+0x529a94)\r\n       #16 0x52ad51 in fuzzer::Fuzzer::MutateAndTestOne() (/home/wesm/code/arrow/cpp/build/debug/ipc-fuzzing-test+0x52ad51)\r\n       #17 0x52af17 in fuzzer::Fuzzer::Loop() (/home/wesm/code/arrow/cpp/build/debug/ipc-fuzzing-test+0x52af17)\r\n       #18 0x523415 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) (/home/wesm/code/arrow/cpp/build/debug/ipc-fuzzing-test+0x523415)\r\n       #19 0x51e280 in main (/home/wesm/code/arrow/cpp/build/debug/ipc-fuzzing-test+0x51e280)\r\n       #20 0x7fdeb9619f44 in __libc_start_main /build/eglibc-ripdx6/eglibc-2.19/csu/libc-start.c:287\r\n       #21 0x51e185 in _start (/home/wesm/code/arrow/cpp/build/debug/ipc-fuzzing-test+0x51e185)\r\n   ```\r\n   \r\n   I created https://issues.apache.org/jira/browse/ARROW-2222 about adding an option to validate input messages\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-26T20:48:52.213+0000",
                    "updated": "2018-02-26T20:48:52.213+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133266/comment/16377663",
                    "id": "16377663",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1503: ARROW-2023: [C++] Fix ASAN failure on malformed / empty stream input, enable ASAN builds, add more dev docs\nURL: https://github.com/apache/arrow/pull/1503#issuecomment-368666040\n \n \n   appveyor build: https://ci.appveyor.com/project/wesm/arrow/build/1.0.1724\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-26T22:00:17.709+0000",
                    "updated": "2018-02-26T22:00:17.709+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133266/comment/16378286",
                    "id": "16378286",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "body": "Issue resolved by pull request 1503\n[https://github.com/apache/arrow/pull/1503]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "created": "2018-02-27T09:38:20.610+0000",
                    "updated": "2018-02-27T09:38:20.610+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133266/comment/16378287",
                    "id": "16378287",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy closed pull request #1503: ARROW-2023: [C++] Fix ASAN failure on malformed / empty stream input, enable ASAN builds, add more dev docs\nURL: https://github.com/apache/arrow/pull/1503\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/CMakeLists.txt b/cpp/CMakeLists.txt\nindex b9221414b..8c0e95634 100644\n--- a/cpp/CMakeLists.txt\n+++ b/cpp/CMakeLists.txt\n@@ -291,8 +291,6 @@ include(ThirdpartyToolchain)\n set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${CXX_COMMON_FLAGS}\")\n set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${ARROW_CXXFLAGS}\")\n \n-message(STATUS \"CMAKE_CXX_FLAGS: ${CMAKE_CXX_FLAGS}\")\n-\n if (\"${COMPILER_FAMILY}\" STREQUAL \"clang\")\n   # Using Clang with ccache causes a bunch of spurious warnings that are\n   # purportedly fixed in the next version of ccache. See the following for details:\n@@ -305,7 +303,7 @@ endif()\n \n # ASAN / TSAN / UBSAN\n if(ARROW_FUZZING)\n-    set(ARROW_USE_COVERAGE ON)\n+  set(ARROW_USE_COVERAGE ON)\n endif()\n include(san-config)\n \n@@ -333,6 +331,9 @@ if (\"${ARROW_GENERATE_COVERAGE}\")\n   endif()\n endif()\n \n+# CMAKE_CXX_FLAGS now fully assembled\n+message(STATUS \"CMAKE_CXX_FLAGS: ${CMAKE_CXX_FLAGS}\")\n+\n # set compile output directory\n string (TOLOWER ${CMAKE_BUILD_TYPE} BUILD_SUBDIR_NAME)\n \ndiff --git a/cpp/README.md b/cpp/README.md\nindex 1daf86381..daeeade72 100644\n--- a/cpp/README.md\n+++ b/cpp/README.md\n@@ -99,7 +99,14 @@ and benchmarks or `make runbenchmark` to run only the benchmark tests.\n \n Benchmark logs will be placed in the build directory under `build/benchmark-logs`.\n \n-## Building/Running fuzzers\n+### Testing with LLVM AddressSanitizer\n+\n+To use AddressSanitizer (ASAN) to find bad memory accesses or leaks with LLVM,\n+pass `-DARROW_USE_ASAN=ON` when building. You must use clang to compile with\n+ASAN, and `ARROW_USE_ASAN` is mutually-exclusive with the valgrind option\n+`ARROW_TEST_MEMCHECK`.\n+\n+### Building/Running fuzzers\n \n Fuzzers can help finding unhandled exceptions and problems with untrusted input that\n may lead to crashes, security issues and undefined behavior. They do this by\n@@ -128,6 +135,22 @@ stack trace as well as the input data. After a problem was found this way, it sh\n be reported and fixed. Usually, the fuzzing process cannot be continued until the\n fix is applied, since the fuzzer usually converts to the problem again.\n \n+If you build fuzzers with ASAN, you need to set the `ASAN_SYMBOLIZER_PATH`\n+environment variable to the absolute path of `llvm-symbolizer`, which is a tool\n+that ships with LLVM.\n+\n+```shell\n+export ASAN_SYMBOLIZER_PATH=$(type -p llvm-symbolizer)\n+```\n+\n+Note that some fuzzer builds currently reject paths with a version qualifier\n+(like `llvm-sanitizer-5.0`). To overcome this, set an appropriate symlink\n+(here, when using LLVM 5.0):\n+\n+```shell\n+ln -sf /usr/bin/llvm-sanitizer-5.0 /usr/bin/llvm-sanitizer\n+```\n+\n There are some problems that may occur during the compilation process:\n \n - libfuzzer was not distributed with your LLVM: `ld: file not found: .../libLLVMFuzzer.a`\ndiff --git a/cpp/build-support/lsan-suppressions.txt b/cpp/build-support/lsan-suppressions.txt\nnew file mode 100644\nindex 000000000..927afb397\n--- /dev/null\n+++ b/cpp/build-support/lsan-suppressions.txt\n@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# False positive from atexit() registration in libc\n+leak:*__new_exitfn*\ndiff --git a/cpp/build-support/run-test.sh b/cpp/build-support/run-test.sh\nindex b4da4f3f0..656ab7bd3 100755\n--- a/cpp/build-support/run-test.sh\n+++ b/cpp/build-support/run-test.sh\n@@ -88,12 +88,6 @@ function setup_sanitizers() {\n   # Set up suppressions for LeakSanitizer\n   LSAN_OPTIONS=\"$LSAN_OPTIONS suppressions=$ROOT/build-support/lsan-suppressions.txt\"\n   export LSAN_OPTIONS\n-\n-  # Suppressions require symbolization. We'll default to using the symbolizer in\n-  # thirdparty.\n-  if [ -z \"$ASAN_SYMBOLIZER_PATH\" ]; then\n-    export ASAN_SYMBOLIZER_PATH=$(find $NATIVE_TOOLCHAIN/llvm-3.7.0/bin -name llvm-symbolizer)\n-  fi\n }\n \n function run_test() {\ndiff --git a/cpp/src/arrow/io/memory.cc b/cpp/src/arrow/io/memory.cc\nindex ecdf26f0a..45d6bdbde 100644\n--- a/cpp/src/arrow/io/memory.cc\n+++ b/cpp/src/arrow/io/memory.cc\n@@ -257,9 +257,11 @@ Status BufferReader::Tell(int64_t* position) const {\n bool BufferReader::supports_zero_copy() const { return true; }\n \n Status BufferReader::Read(int64_t nbytes, int64_t* bytes_read, void* buffer) {\n-  memcpy(buffer, data_ + position_, nbytes);\n   *bytes_read = std::min(nbytes, size_ - position_);\n-  position_ += *bytes_read;\n+  if (*bytes_read) {\n+    memcpy(buffer, data_ + position_, *bytes_read);\n+    position_ += *bytes_read;\n+  }\n   return Status::OK();\n }\n \ndiff --git a/cpp/src/arrow/ipc/ipc-read-write-test.cc b/cpp/src/arrow/ipc/ipc-read-write-test.cc\nindex 1fcbdac5e..d877e9922 100644\n--- a/cpp/src/arrow/ipc/ipc-read-write-test.cc\n+++ b/cpp/src/arrow/ipc/ipc-read-write-test.cc\n@@ -755,5 +755,21 @@ TEST_F(TestTensorRoundTrip, NonContiguous) {\n   CheckTensorRoundTrip(tensor);\n }\n \n+TEST(TestRecordBatchStreamReader, MalformedInput) {\n+  const std::string empty_str = \"\";\n+  const std::string garbage_str = \"12345678\";\n+\n+  auto empty = std::make_shared<Buffer>(empty_str);\n+  auto garbage = std::make_shared<Buffer>(garbage_str);\n+\n+  std::shared_ptr<RecordBatchReader> batch_reader;\n+\n+  io::BufferReader empty_reader(empty);\n+  ASSERT_RAISES(Invalid, RecordBatchStreamReader::Open(&empty_reader, &batch_reader));\n+\n+  io::BufferReader garbage_reader(garbage);\n+  ASSERT_RAISES(Invalid, RecordBatchStreamReader::Open(&garbage_reader, &batch_reader));\n+}\n+\n }  // namespace ipc\n }  // namespace arrow\ndiff --git a/cpp/src/arrow/ipc/message.cc b/cpp/src/arrow/ipc/message.cc\nindex 1835cefde..fd747563a 100644\n--- a/cpp/src/arrow/ipc/message.cc\n+++ b/cpp/src/arrow/ipc/message.cc\n@@ -227,7 +227,10 @@ Status ReadMessage(io::InputStream* file, std::unique_ptr<Message>* message) {\n   std::shared_ptr<Buffer> metadata;\n   RETURN_NOT_OK(file->Read(message_length, &metadata));\n   if (metadata->size() != message_length) {\n-    return Status::IOError(\"Unexpected end of stream trying to read message\");\n+    std::stringstream ss;\n+    ss << \"Expected to read \" << message_length << \" metadata bytes, but \"\n+       << \"only read \" << metadata->size();\n+    return Status::Invalid(ss.str());\n   }\n \n   return Message::ReadFrom(metadata, file, message);\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-27T09:38:20.826+0000",
                    "updated": "2018-02-27T09:38:20.826+0000"
                }
            ],
            "maxResults": 5,
            "total": 5,
            "startAt": 0
        },
        "customfield_12311820": "0|i3pa9r:",
        "customfield_12314139": null
    }
}