{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13480085",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13480085",
    "key": "ARROW-17613",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12352360",
                "id": "12352360",
                "description": "",
                "name": "11.0.0",
                "archived": false,
                "released": false
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rtpsw",
            "name": "rtpsw",
            "key": "JIRAUSER284707",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=JIRAUSER284707&avatarId=49322",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=JIRAUSER284707&avatarId=49322",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=JIRAUSER284707&avatarId=49322",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=JIRAUSER284707&avatarId=49322"
            },
            "displayName": "Yaron Gvili",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rtpsw",
            "name": "rtpsw",
            "key": "JIRAUSER284707",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=JIRAUSER284707&avatarId=49322",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=JIRAUSER284707&avatarId=49322",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=JIRAUSER284707&avatarId=49322",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=JIRAUSER284707&avatarId=49322"
            },
            "displayName": "Yaron Gvili",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rtpsw",
            "name": "rtpsw",
            "key": "JIRAUSER284707",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=JIRAUSER284707&avatarId=49322",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=JIRAUSER284707&avatarId=49322",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=JIRAUSER284707&avatarId=49322",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=JIRAUSER284707&avatarId=49322"
            },
            "displayName": "Yaron Gvili",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 42600,
            "total": 42600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 42600,
            "total": 42600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-17613/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 71,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13480085/worklog/806146",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rtpsw opened a new pull request, #14043:\nURL: https://github.com/apache/arrow/pull/14043\n\n   See https://issues.apache.org/jira/browse/ARROW-17613\n\n\n",
                    "created": "2022-09-05T10:46:41.252+0000",
                    "updated": "2022-09-05T10:46:41.252+0000",
                    "started": "2022-09-05T10:46:41.251+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "806146",
                    "issueId": "13480085"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13480085/worklog/806147",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #14043:\nURL: https://github.com/apache/arrow/pull/14043#issuecomment-1236838637\n\n   https://issues.apache.org/jira/browse/ARROW-17613\n\n\n",
                    "created": "2022-09-05T10:47:03.750+0000",
                    "updated": "2022-09-05T10:47:03.750+0000",
                    "started": "2022-09-05T10:47:03.749+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "806147",
                    "issueId": "13480085"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13480085/worklog/806645",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rtpsw commented on PR #14043:\nURL: https://github.com/apache/arrow/pull/14043#issuecomment-1239203511\n\n   @lidavidm, are you a good person to review this? or can you suggest someone?\n\n\n",
                    "created": "2022-09-07T10:26:34.694+0000",
                    "updated": "2022-09-07T10:26:34.694+0000",
                    "started": "2022-09-07T10:26:34.694+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "806645",
                    "issueId": "13480085"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13480085/worklog/806811",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on code in PR #14043:\nURL: https://github.com/apache/arrow/pull/14043#discussion_r965240623\n\n\n##########\ncpp/src/arrow/compute/function.h:\n##########\n@@ -225,6 +233,15 @@ class ARROW_EXPORT Function {\n   /// required by the kernel.\n   virtual Result<const Kernel*> DispatchBest(std::vector<TypeHolder>* values) const;\n \n+  /// \\brief Get a function executor with a best-matching kernel\n+  virtual Result<std::shared_ptr<FunctionExecutor>> BestExecutor(\n+      const std::vector<Datum>& args, const FunctionOptions* options,\n+      ExecContext* ctx) const;\n\nReview Comment:\n   Without looking at the impl, only the description, the signatures here look weird: I'd expect them to take types, not datums, since that's what kernel resolution uses.\n\n\n\n##########\ncpp/src/arrow/compute/function.h:\n##########\n@@ -225,6 +233,15 @@ class ARROW_EXPORT Function {\n   /// required by the kernel.\n   virtual Result<const Kernel*> DispatchBest(std::vector<TypeHolder>* values) const;\n \n+  /// \\brief Get a function executor with a best-matching kernel\n+  virtual Result<std::shared_ptr<FunctionExecutor>> BestExecutor(\n+      const std::vector<Datum>& args, const FunctionOptions* options,\n+      ExecContext* ctx) const;\n\nReview Comment:\n   I can see having these as additional overloads for convenience, but from the Jira, it sounds like it'd be most useful to be able to create an executor from just types?\n\n\n\n##########\ncpp/src/arrow/compute/function.h:\n##########\n@@ -159,6 +159,14 @@ struct ARROW_EXPORT FunctionDoc {\n   static const FunctionDoc& Empty();\n };\n \n+/// \\brief An executor of a function with a preconfigured kernel\n+struct ARROW_EXPORT FunctionExecutor {\n+  virtual ~FunctionExecutor() {}\n\nReview Comment:\n   just `=default`?\n\n\n\n",
                    "created": "2022-09-07T20:31:23.247+0000",
                    "updated": "2022-09-07T20:31:23.247+0000",
                    "started": "2022-09-07T20:31:23.247+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "806811",
                    "issueId": "13480085"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13480085/worklog/806945",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rtpsw commented on PR #14043:\nURL: https://github.com/apache/arrow/pull/14043#issuecomment-1240462652\n\n   > The idea sounds reasonable to me. I'd like to see unit tests here.\r\n   \r\n   Will do.\r\n   \r\n   > Possibly expression evaluation can take advantage of this? Right now it manually resolves a kernel and evaluates it, being able to replace that would help prove out the API/implementation here\r\n   \r\n   Perhaps. My motivation for this change is related to UDFs, which would have their kernel bound once and executed multiple times over a stream of batches.\n\n\n",
                    "created": "2022-09-08T09:27:49.038+0000",
                    "updated": "2022-09-08T09:27:49.038+0000",
                    "started": "2022-09-08T09:27:49.038+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "806945",
                    "issueId": "13480085"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13480085/worklog/806948",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #14043:\nURL: https://github.com/apache/arrow/pull/14043#discussion_r965739413\n\n\n##########\ncpp/src/arrow/compute/function.h:\n##########\n@@ -225,6 +233,15 @@ class ARROW_EXPORT Function {\n   /// required by the kernel.\n   virtual Result<const Kernel*> DispatchBest(std::vector<TypeHolder>* values) const;\n \n+  /// \\brief Get a function executor with a best-matching kernel\n+  virtual Result<std::shared_ptr<FunctionExecutor>> BestExecutor(\n+      const std::vector<Datum>& args, const FunctionOptions* options,\n+      ExecContext* ctx) const;\n\nReview Comment:\n   Yes, I would expect a `const std::vector<TypeHolder>&` as well.\n\n\n\n",
                    "created": "2022-09-08T09:44:45.750+0000",
                    "updated": "2022-09-08T09:44:45.750+0000",
                    "started": "2022-09-08T09:44:45.749+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "806948",
                    "issueId": "13480085"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13480085/worklog/806949",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #14043:\nURL: https://github.com/apache/arrow/pull/14043#discussion_r965739871\n\n\n##########\ncpp/src/arrow/compute/exec.h:\n##########\n@@ -442,5 +443,44 @@ Result<Datum> CallFunction(const std::string& func_name, const ExecBatch& batch,\n \n /// @}\n \n+/// \\defgroup compute-function-executor One-shot calls to obtain function executors\n+///\n+/// @{\n+\n+/// \\brief One-shot executor provider for all types of functions.\n+///\n+/// Does kernel dispatch and argument checking, while iteration of ChunkedArray inputs\n+/// and wrapping of outputs are deferred to the executor.\n+ARROW_EXPORT\n+Result<std::shared_ptr<FunctionExecutor>> GetFunctionExecutor(\n+    const std::string& func_name, const std::vector<Datum>& args,\n\nReview Comment:\n   Same here, I would expect a `const std::vector<TypeHolder>&`.\n\n\n\n",
                    "created": "2022-09-08T09:45:15.801+0000",
                    "updated": "2022-09-08T09:45:15.801+0000",
                    "started": "2022-09-08T09:45:15.801+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "806949",
                    "issueId": "13480085"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13480085/worklog/806950",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #14043:\nURL: https://github.com/apache/arrow/pull/14043#discussion_r965741208\n\n\n##########\ncpp/src/arrow/compute/function.h:\n##########\n@@ -225,6 +233,15 @@ class ARROW_EXPORT Function {\n   /// required by the kernel.\n   virtual Result<const Kernel*> DispatchBest(std::vector<TypeHolder>* values) const;\n \n+  /// \\brief Get a function executor with a best-matching kernel\n+  virtual Result<std::shared_ptr<FunctionExecutor>> BestExecutor(\n\nReview Comment:\n   Naming-wise, a method which does something non-trivial (as opposed to a simple accessor) should probably be described with a verb, so e.g. `GetBestExecutor`.\n\n\n\n",
                    "created": "2022-09-08T09:46:36.138+0000",
                    "updated": "2022-09-08T09:46:36.138+0000",
                    "started": "2022-09-08T09:46:36.138+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "806950",
                    "issueId": "13480085"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13480085/worklog/806952",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #14043:\nURL: https://github.com/apache/arrow/pull/14043#discussion_r965741506\n\n\n##########\ncpp/src/arrow/compute/function.h:\n##########\n@@ -225,6 +233,15 @@ class ARROW_EXPORT Function {\n   /// required by the kernel.\n   virtual Result<const Kernel*> DispatchBest(std::vector<TypeHolder>* values) const;\n \n+  /// \\brief Get a function executor with a best-matching kernel\n+  virtual Result<std::shared_ptr<FunctionExecutor>> BestExecutor(\n+      const std::vector<Datum>& args, const FunctionOptions* options,\n+      ExecContext* ctx) const;\n\nReview Comment:\n   Also, why does a `ExecContext` need to be passed? Does it go into kernel resolution?\n\n\n\n",
                    "created": "2022-09-08T09:46:55.883+0000",
                    "updated": "2022-09-08T09:46:55.883+0000",
                    "started": "2022-09-08T09:46:55.883+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "806952",
                    "issueId": "13480085"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13480085/worklog/806953",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #14043:\nURL: https://github.com/apache/arrow/pull/14043#discussion_r965742884\n\n\n##########\ncpp/src/arrow/compute/function.h:\n##########\n@@ -159,6 +159,14 @@ struct ARROW_EXPORT FunctionDoc {\n   static const FunctionDoc& Empty();\n };\n \n+/// \\brief An executor of a function with a preconfigured kernel\n+struct ARROW_EXPORT FunctionExecutor {\n+  virtual ~FunctionExecutor() {}\n+  /// \\brief Execute the preconfigured kernel with arguments that must fit it\n+  virtual Result<Datum> Execute(const std::vector<Datum>& args,\n+                                int64_t passed_length = -1) = 0;\n\nReview Comment:\n   I would expect the `ExecContext` to be passed here, rather than on kernel resolution.\n\n\n\n",
                    "created": "2022-09-08T09:48:10.874+0000",
                    "updated": "2022-09-08T09:48:10.874+0000",
                    "started": "2022-09-08T09:48:10.873+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "806953",
                    "issueId": "13480085"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13480085/worklog/806954",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #14043:\nURL: https://github.com/apache/arrow/pull/14043#discussion_r965744065\n\n\n##########\ncpp/src/arrow/compute/exec.h:\n##########\n@@ -442,5 +443,44 @@ Result<Datum> CallFunction(const std::string& func_name, const ExecBatch& batch,\n \n /// @}\n \n+/// \\defgroup compute-function-executor One-shot calls to obtain function executors\n+///\n+/// @{\n+\n+/// \\brief One-shot executor provider for all types of functions.\n+///\n+/// Does kernel dispatch and argument checking, while iteration of ChunkedArray inputs\n+/// and wrapping of outputs are deferred to the executor.\n+ARROW_EXPORT\n+Result<std::shared_ptr<FunctionExecutor>> GetFunctionExecutor(\n+    const std::string& func_name, const std::vector<Datum>& args,\n+    const FunctionOptions* options, ExecContext* ctx = NULLPTR);\n+\n+/// \\brief Variant of GetFunctionExecutor which uses a function's default options.\n+///\n+/// NB: Some functions require FunctionOptions be provided.\n+ARROW_EXPORT\n+Result<std::shared_ptr<FunctionExecutor>> GetFunctionExecutor(\n+    const std::string& func_name, const std::vector<Datum>& args,\n+    ExecContext* ctx = NULLPTR);\n\nReview Comment:\n   Not sure it's worth having overloads without a `FunctionOptions` argument. \n\n\n\n",
                    "created": "2022-09-08T09:49:20.921+0000",
                    "updated": "2022-09-08T09:49:20.921+0000",
                    "started": "2022-09-08T09:49:20.920+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "806954",
                    "issueId": "13480085"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13480085/worklog/806972",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rtpsw commented on code in PR #14043:\nURL: https://github.com/apache/arrow/pull/14043#discussion_r965828630\n\n\n##########\ncpp/src/arrow/compute/function.h:\n##########\n@@ -225,6 +233,15 @@ class ARROW_EXPORT Function {\n   /// required by the kernel.\n   virtual Result<const Kernel*> DispatchBest(std::vector<TypeHolder>* values) const;\n \n+  /// \\brief Get a function executor with a best-matching kernel\n+  virtual Result<std::shared_ptr<FunctionExecutor>> BestExecutor(\n+      const std::vector<Datum>& args, const FunctionOptions* options,\n+      ExecContext* ctx) const;\n\nReview Comment:\n   Makes sense and I'll look into this. So far I just refractored in a simple way. \n\n\n\n",
                    "created": "2022-09-08T11:17:49.180+0000",
                    "updated": "2022-09-08T11:17:49.180+0000",
                    "started": "2022-09-08T11:17:49.180+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "806972",
                    "issueId": "13480085"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13480085/worklog/806973",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rtpsw commented on code in PR #14043:\nURL: https://github.com/apache/arrow/pull/14043#discussion_r965829320\n\n\n##########\ncpp/src/arrow/compute/function.h:\n##########\n@@ -225,6 +233,15 @@ class ARROW_EXPORT Function {\n   /// required by the kernel.\n   virtual Result<const Kernel*> DispatchBest(std::vector<TypeHolder>* values) const;\n \n+  /// \\brief Get a function executor with a best-matching kernel\n+  virtual Result<std::shared_ptr<FunctionExecutor>> BestExecutor(\n\nReview Comment:\n   Will fix \n\n\n\n",
                    "created": "2022-09-08T11:18:39.241+0000",
                    "updated": "2022-09-08T11:18:39.241+0000",
                    "started": "2022-09-08T11:18:39.240+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "806973",
                    "issueId": "13480085"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13480085/worklog/806982",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rtpsw commented on code in PR #14043:\nURL: https://github.com/apache/arrow/pull/14043#discussion_r965843255\n\n\n##########\ncpp/src/arrow/compute/function.h:\n##########\n@@ -159,6 +159,14 @@ struct ARROW_EXPORT FunctionDoc {\n   static const FunctionDoc& Empty();\n };\n \n+/// \\brief An executor of a function with a preconfigured kernel\n+struct ARROW_EXPORT FunctionExecutor {\n+  virtual ~FunctionExecutor() {}\n+  /// \\brief Execute the preconfigured kernel with arguments that must fit it\n+  virtual Result<Datum> Execute(const std::vector<Datum>& args,\n+                                int64_t passed_length = -1) = 0;\n\nReview Comment:\n   As code now, both the exec context and the function options are used in kernel initialization, in `FunctionExecutorImpl.Init`. If both are moved to kernel execution, then kernel initialization would be invoked on each execution, which IIRC is not good for my UDF purposes. I guess we could separate kernel resolution from kernel initialization, and allow a choice if which one would be reused across executions. \n\n\n\n",
                    "created": "2022-09-08T11:34:56.141+0000",
                    "updated": "2022-09-08T11:34:56.141+0000",
                    "started": "2022-09-08T11:34:56.140+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "806982",
                    "issueId": "13480085"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13480085/worklog/806983",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rtpsw commented on code in PR #14043:\nURL: https://github.com/apache/arrow/pull/14043#discussion_r965843255\n\n\n##########\ncpp/src/arrow/compute/function.h:\n##########\n@@ -159,6 +159,14 @@ struct ARROW_EXPORT FunctionDoc {\n   static const FunctionDoc& Empty();\n };\n \n+/// \\brief An executor of a function with a preconfigured kernel\n+struct ARROW_EXPORT FunctionExecutor {\n+  virtual ~FunctionExecutor() {}\n+  /// \\brief Execute the preconfigured kernel with arguments that must fit it\n+  virtual Result<Datum> Execute(const std::vector<Datum>& args,\n+                                int64_t passed_length = -1) = 0;\n\nReview Comment:\n   As code now, both the exec context and the function options are used in kernel initialization, in `FunctionExecutorImpl.Init`. If both are moved to kernel execution, then kernel initialization would be invoked on each execution, which IIRC is not good for my UDF purposes. I guess we could separate kernel resolution from kernel initialization, and allow a choice of which one would be reused across executions. \n\n\n\n",
                    "created": "2022-09-08T11:35:46.205+0000",
                    "updated": "2022-09-08T11:35:46.205+0000",
                    "started": "2022-09-08T11:35:46.205+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "806983",
                    "issueId": "13480085"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13480085/worklog/806984",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #14043:\nURL: https://github.com/apache/arrow/pull/14043#discussion_r965844374\n\n\n##########\ncpp/src/arrow/compute/function.h:\n##########\n@@ -159,6 +159,14 @@ struct ARROW_EXPORT FunctionDoc {\n   static const FunctionDoc& Empty();\n };\n \n+/// \\brief An executor of a function with a preconfigured kernel\n+struct ARROW_EXPORT FunctionExecutor {\n+  virtual ~FunctionExecutor() {}\n+  /// \\brief Execute the preconfigured kernel with arguments that must fit it\n+  virtual Result<Datum> Execute(const std::vector<Datum>& args,\n+                                int64_t passed_length = -1) = 0;\n\nReview Comment:\n   > I guess we could separate kernel resolution from kernel initialization\r\n   \r\n   We should.\r\n   \n\n\n\n",
                    "created": "2022-09-08T11:36:11.242+0000",
                    "updated": "2022-09-08T11:36:11.242+0000",
                    "started": "2022-09-08T11:36:11.241+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "806984",
                    "issueId": "13480085"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13480085/worklog/807052",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rtpsw commented on code in PR #14043:\nURL: https://github.com/apache/arrow/pull/14043#discussion_r966061589\n\n\n##########\ncpp/src/arrow/compute/exec.h:\n##########\n@@ -442,5 +443,44 @@ Result<Datum> CallFunction(const std::string& func_name, const ExecBatch& batch,\n \n /// @}\n \n+/// \\defgroup compute-function-executor One-shot calls to obtain function executors\n+///\n+/// @{\n+\n+/// \\brief One-shot executor provider for all types of functions.\n+///\n+/// Does kernel dispatch and argument checking, while iteration of ChunkedArray inputs\n+/// and wrapping of outputs are deferred to the executor.\n+ARROW_EXPORT\n+Result<std::shared_ptr<FunctionExecutor>> GetFunctionExecutor(\n+    const std::string& func_name, const std::vector<Datum>& args,\n+    const FunctionOptions* options, ExecContext* ctx = NULLPTR);\n+\n+/// \\brief Variant of GetFunctionExecutor which uses a function's default options.\n+///\n+/// NB: Some functions require FunctionOptions be provided.\n+ARROW_EXPORT\n+Result<std::shared_ptr<FunctionExecutor>> GetFunctionExecutor(\n+    const std::string& func_name, const std::vector<Datum>& args,\n+    ExecContext* ctx = NULLPTR);\n\nReview Comment:\n   The `FunctionOptions` are cached during kernel initialization, at `FunctionExecutor.Init`. I think we could only have a variant with a `FunctionOptions` argument only in case kernel resolution has occurred, but not in case kernel initialization has also occurred. So, it might be clearer to define two interfaces, `ResolvedKernelExecutor` and `InitedKernelExecutor`, to distinguish the two cases. WDYT?\n\n\n\n",
                    "created": "2022-09-08T14:43:52.679+0000",
                    "updated": "2022-09-08T14:43:52.679+0000",
                    "started": "2022-09-08T14:43:52.679+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "807052",
                    "issueId": "13480085"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13480085/worklog/807053",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rtpsw commented on code in PR #14043:\nURL: https://github.com/apache/arrow/pull/14043#discussion_r966061589\n\n\n##########\ncpp/src/arrow/compute/exec.h:\n##########\n@@ -442,5 +443,44 @@ Result<Datum> CallFunction(const std::string& func_name, const ExecBatch& batch,\n \n /// @}\n \n+/// \\defgroup compute-function-executor One-shot calls to obtain function executors\n+///\n+/// @{\n+\n+/// \\brief One-shot executor provider for all types of functions.\n+///\n+/// Does kernel dispatch and argument checking, while iteration of ChunkedArray inputs\n+/// and wrapping of outputs are deferred to the executor.\n+ARROW_EXPORT\n+Result<std::shared_ptr<FunctionExecutor>> GetFunctionExecutor(\n+    const std::string& func_name, const std::vector<Datum>& args,\n+    const FunctionOptions* options, ExecContext* ctx = NULLPTR);\n+\n+/// \\brief Variant of GetFunctionExecutor which uses a function's default options.\n+///\n+/// NB: Some functions require FunctionOptions be provided.\n+ARROW_EXPORT\n+Result<std::shared_ptr<FunctionExecutor>> GetFunctionExecutor(\n+    const std::string& func_name, const std::vector<Datum>& args,\n+    ExecContext* ctx = NULLPTR);\n\nReview Comment:\n   The `FunctionOptions` are cached during kernel initialization, at `FunctionExecutor.Init`. I think we could have a variant with a `FunctionOptions` argument only in case kernel resolution has occurred, but not in case kernel initialization has also occurred. So, it might be clearer to define two interfaces, `ResolvedKernelExecutor` and `InitedKernelExecutor`, to distinguish the two cases. WDYT?\n\n\n\n",
                    "created": "2022-09-08T14:48:23.185+0000",
                    "updated": "2022-09-08T14:48:23.185+0000",
                    "started": "2022-09-08T14:48:23.185+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "807053",
                    "issueId": "13480085"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13480085/worklog/807057",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #14043:\nURL: https://github.com/apache/arrow/pull/14043#discussion_r966070078\n\n\n##########\ncpp/src/arrow/compute/exec.h:\n##########\n@@ -442,5 +443,44 @@ Result<Datum> CallFunction(const std::string& func_name, const ExecBatch& batch,\n \n /// @}\n \n+/// \\defgroup compute-function-executor One-shot calls to obtain function executors\n+///\n+/// @{\n+\n+/// \\brief One-shot executor provider for all types of functions.\n+///\n+/// Does kernel dispatch and argument checking, while iteration of ChunkedArray inputs\n+/// and wrapping of outputs are deferred to the executor.\n+ARROW_EXPORT\n+Result<std::shared_ptr<FunctionExecutor>> GetFunctionExecutor(\n+    const std::string& func_name, const std::vector<Datum>& args,\n+    const FunctionOptions* options, ExecContext* ctx = NULLPTR);\n+\n+/// \\brief Variant of GetFunctionExecutor which uses a function's default options.\n+///\n+/// NB: Some functions require FunctionOptions be provided.\n+ARROW_EXPORT\n+Result<std::shared_ptr<FunctionExecutor>> GetFunctionExecutor(\n+    const std::string& func_name, const std::vector<Datum>& args,\n+    ExecContext* ctx = NULLPTR);\n\nReview Comment:\n   Is kernel initialization non-trivial enough to deserve being exposed?\n\n\n\n",
                    "created": "2022-09-08T14:51:08.415+0000",
                    "updated": "2022-09-08T14:51:08.415+0000",
                    "started": "2022-09-08T14:51:08.414+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "807057",
                    "issueId": "13480085"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13480085/worklog/807063",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rtpsw commented on code in PR #14043:\nURL: https://github.com/apache/arrow/pull/14043#discussion_r966094077\n\n\n##########\ncpp/src/arrow/compute/exec.h:\n##########\n@@ -442,5 +443,44 @@ Result<Datum> CallFunction(const std::string& func_name, const ExecBatch& batch,\n \n /// @}\n \n+/// \\defgroup compute-function-executor One-shot calls to obtain function executors\n+///\n+/// @{\n+\n+/// \\brief One-shot executor provider for all types of functions.\n+///\n+/// Does kernel dispatch and argument checking, while iteration of ChunkedArray inputs\n+/// and wrapping of outputs are deferred to the executor.\n+ARROW_EXPORT\n+Result<std::shared_ptr<FunctionExecutor>> GetFunctionExecutor(\n+    const std::string& func_name, const std::vector<Datum>& args,\n+    const FunctionOptions* options, ExecContext* ctx = NULLPTR);\n+\n+/// \\brief Variant of GetFunctionExecutor which uses a function's default options.\n+///\n+/// NB: Some functions require FunctionOptions be provided.\n+ARROW_EXPORT\n+Result<std::shared_ptr<FunctionExecutor>> GetFunctionExecutor(\n+    const std::string& func_name, const std::vector<Datum>& args,\n+    ExecContext* ctx = NULLPTR);\n\nReview Comment:\n   I'm not sure myself. What I can say is that for my UDF purposes I need to a reusable executor that is both resolved and initialized; in particular, the initialization involves invoking a UDF (which should not be repeatedly invoked on each execution). From your comments here, my understanding is you want a reusable executor that is just resolved. So, in my mind, both are useful. A possible solution for hiding the concepts of kernel resolution and initialization from the user is to have just one interface, `FunctionExecutor`, that can be obtained with (resp. without) a `FunctionOptions` argument that is valid for execution without (resp. with) a `FunctionOptions` argument.\n\n\n\n",
                    "created": "2022-09-08T15:11:20.265+0000",
                    "updated": "2022-09-08T15:11:20.265+0000",
                    "started": "2022-09-08T15:11:20.264+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "807063",
                    "issueId": "13480085"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 42600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@46ad7f56[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5490ef50[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2a13c1a8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@79aa41d5[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@48f0ab93[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@59a2c68[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3130a3f2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@1abfe8e8[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@57de741f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@373fbe0[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@37e8f74f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@52f5a1f2[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 42600,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Nov 10 14:58:08 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": [
            "C++"
        ],
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-11-10T14:58:08.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-17613/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2022-09-05T07:24:50.000+0000",
        "updated": "2022-11-11T01:06:36.000+0000",
        "timeoriginalestimate": null,
        "description": "Currently, the function execution API goes through kernel selection on each invocation. This issue will add a faster-path for executing a preconfigured kernel.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "11h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 42600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Add function execution API for a preconfigured kernel",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13480085/comment/17631684",
                    "id": "17631684",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 14043\n[https://github.com/apache/arrow/pull/14043]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2022-11-10T14:58:08.902+0000",
                    "updated": "2022-11-10T14:58:08.902+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z18bao:",
        "customfield_12314139": null
    }
}