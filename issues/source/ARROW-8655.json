{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13302140",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302140",
    "key": "ARROW-8655",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349983",
                "id": "12349983",
                "description": "",
                "name": "5.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-07-28"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "dataset",
            "dataset-dask-integration",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "aggregateprogress": {
            "progress": 13200,
            "total": 13200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 13200,
            "total": 13200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8655/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 22,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302140/worklog/456625",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche opened a new pull request #7691:\nURL: https://github.com/apache/arrow/pull/7691\n\n\n   Not an actual proper fix for ARROW-8655, but it can provide a workaround for now to retrieve the partition fields' name and value from the `partition_expression`\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-07-09T13:53:39.862+0000",
                    "updated": "2020-07-09T13:53:39.862+0000",
                    "started": "2020-07-09T13:53:39.861+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "456625",
                    "issueId": "13302140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302140/worklog/456626",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #7691:\nURL: https://github.com/apache/arrow/pull/7691#issuecomment-656143156\n\n\n   Not the cleanest solution, but could do this relatively quickly because it's based on what I did earlier in https://github.com/apache/arrow/pull/7523. But I think a more proper solution won't be possible before 1.0, and this at least gives a way to get the information needed.\r\n   \r\n   A few examples:\r\n   \r\n   ```python\r\n   In [1]: import pyarrow.dataset as ds                                                                                                                                                                               \r\n   \r\n   In [2]: dataset = ds.dataset(\"test_filter_fragments_pandas/\", format=\"parquet\", partitioning=\"hive\")                                                                                                               \r\n   In [4]: expr = list(dataset.get_fragments())[0].partition_expression                                                                                                                                               \r\n   \r\n   # single partition level with a string\r\n   In [5]: expr                                                                                                                                                                                                       \r\n   Out[5]: <pyarrow.dataset.Expression (part == A:string)>\r\n   \r\n   In [6]: ds._unwrap_partition_expression(expr)                                                                                                                                                                      \r\n   Out[6]: [('part', 'A')]\r\n   \r\n   \r\n   In [7]: dataset = ds.dataset(\"test_parquet_dask/\", format=\"parquet\", partitioning=\"hive\")                                                                                                                          \r\n   In [8]: expr = list(dataset.get_fragments())[0].partition_expression                                                                                                                                               \r\n   \r\n   # two partition levels with integers\r\n   In [9]: expr                                                                                                                                                                                                       \r\n   Out[9]: <pyarrow.dataset.Expression ((year == 2016:int32) and (month == 1:int32))>\r\n   \r\n   In [10]: ds._unwrap_partition_expression(expr)                                                                                                                                                                     \r\n   Out[10]: [('year', 2016), ('month', 1)]\r\n   \r\n   \r\n   In [11]: dataset = ds.dataset(\"test.parquet\", format=\"parquet\")                                                                                                                                                    \r\n   In [12]: expr = list(dataset.get_fragments())[0].partition_expression                                                                                                                                              \r\n   \r\n   # no partitioned dataset\r\n   In [13]: expr                                                                                                                                                                                                      \r\n   Out[13]: <pyarrow.dataset.Expression true:bool>\r\n   \r\n   In [14]: ds._unwrap_partition_expression(expr)                                                                                                                                                                     \r\n   Out[14]: []\r\n   ```\r\n   \r\n   cc @rjzamora \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-07-09T13:56:56.723+0000",
                    "updated": "2020-07-09T13:56:56.723+0000",
                    "started": "2020-07-09T13:56:56.723+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "456626",
                    "issueId": "13302140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302140/worklog/456631",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #7691:\nURL: https://github.com/apache/arrow/pull/7691#issuecomment-656147394\n\n\n   https://issues.apache.org/jira/browse/ARROW-8655\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-07-09T14:04:38.932+0000",
                    "updated": "2020-07-09T14:04:38.932+0000",
                    "started": "2020-07-09T14:04:38.931+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "456631",
                    "issueId": "13302140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302140/worklog/456785",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #7691:\nURL: https://github.com/apache/arrow/pull/7691#issuecomment-656312308\n\n\n   Thanks! I indeed basically reimplemented  `VisitKeys` in cython ..\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-07-09T19:35:37.285+0000",
                    "updated": "2020-07-09T19:35:37.285+0000",
                    "started": "2020-07-09T19:35:37.285+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "456785",
                    "issueId": "13302140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302140/worklog/456787",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche edited a comment on pull request #7691:\nURL: https://github.com/apache/arrow/pull/7691#issuecomment-656312308\n\n\n   @bkietz Thanks! I indeed basically reimplemented  `VisitKeys` in cython ..\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-07-09T19:35:53.754+0000",
                    "updated": "2020-07-09T19:35:53.754+0000",
                    "started": "2020-07-09T19:35:53.754+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "456787",
                    "issueId": "13302140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302140/worklog/456788",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #7691:\nURL: https://github.com/apache/arrow/pull/7691#discussion_r452446416\n\n\n\n##########\nFile path: python/pyarrow/includes/libarrow_dataset.pxd\n##########\n@@ -314,6 +314,10 @@ cdef extern from \"arrow/dataset/api.h\" namespace \"arrow::dataset\" nogil:\n             const CExpression& partition_expression,\n             CRecordBatchProjector* projector)\n \n+    cdef CResult[unordered_map[c_string, shared_ptr[CScalar]]] \\\n+        CGetPartitionKeys \"arrow::dataset::KeyValuePartitioning::GetKeys\"(\n\nReview comment:\n       One question for my education: `GetKeys` is a method on the `KeyValuePartitioning` class, but since that method doesn't use any of the initialized variabled of the object, you can just use it as a free function like this independent from a KeyValuePartitioning object in C++? (like a static/class method in Python, but then without needing to mark it as such)\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-07-09T19:38:27.955+0000",
                    "updated": "2020-07-09T19:38:27.955+0000",
                    "started": "2020-07-09T19:38:27.955+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "456788",
                    "issueId": "13302140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302140/worklog/456807",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #7691:\nURL: https://github.com/apache/arrow/pull/7691#discussion_r452456433\n\n\n\n##########\nFile path: python/pyarrow/includes/libarrow_dataset.pxd\n##########\n@@ -314,6 +314,10 @@ cdef extern from \"arrow/dataset/api.h\" namespace \"arrow::dataset\" nogil:\n             const CExpression& partition_expression,\n             CRecordBatchProjector* projector)\n \n+    cdef CResult[unordered_map[c_string, shared_ptr[CScalar]]] \\\n+        CGetPartitionKeys \"arrow::dataset::KeyValuePartitioning::GetKeys\"(\n\nReview comment:\n       Yes, as far as cython is concerned a static method can be treated as a free function. `CSetPartitionKeysInProjector` (decl above this one) is another example. I think it works the other way, too: a c++ free function can be exposed as a `@staticmethod` of a cppclass (but haven't got a standing example and I'm not sure why we'd ever need that)\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-07-09T19:58:16.787+0000",
                    "updated": "2020-07-09T19:58:16.787+0000",
                    "started": "2020-07-09T19:58:16.787+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "456807",
                    "issueId": "13302140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302140/worklog/456812",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz closed pull request #7691:\nURL: https://github.com/apache/arrow/pull/7691\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-07-09T20:15:54.217+0000",
                    "updated": "2020-07-09T20:15:54.217+0000",
                    "started": "2020-07-09T20:15:54.217+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "456812",
                    "issueId": "13302140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302140/worklog/619126",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #10661:\nURL: https://github.com/apache/arrow/pull/10661#issuecomment-874672918\n\n\n   See the JIRA for more details and motivating use cases, but a small demo of what this exposes:\r\n   \r\n   ```python\r\n   import pandas as pd\r\n   import pyarrow as pa\r\n   import pyarrow.parquet as pq\r\n   import pyarrow.dataset as ds\r\n   \r\n   df = pd.DataFrame({\"year\": [2020, 2020, 2021, 2021], \"month\":[1, 2, 1, 2], \"values\": [1, 2, 3, 4]})\r\n   df.to_parquet(\"test_partitioned\", partition_cols=[\"year\", \"month\"], engine=\"pyarrow\")\r\n   ```\r\n   \r\n   A discovered dataset now stores the Partitioning object that was created/discovered in the FileSystemDatasetFactory, so you can still access this information on the dataset:\r\n   \r\n   ```python\r\n   >>> dataset = ds.dataset(\"test_partitioned/\", partitioning=\"hive\")\r\n   >>> dataset\r\n   <pyarrow._dataset.FileSystemDataset at 0x7fe481b6e270>\r\n   >>> dataset.partitioning\r\n   <pyarrow._dataset.HivePartitioning at 0x7fe48162c7f0>\r\n   \r\n   # the schema (field names and types) of the partitioning\r\n   >>> dataset.partitioning.schema \r\n   year: int32\r\n   month: int32\r\n   >>> dataset.partitioning.schema.names\r\n   ['year', 'month']\r\n   # and all partition field values discovered during the factory\r\n   >>> dataset.partitioning.dictionaries\r\n   [<pyarrow.lib.Int32Array object at 0x7fe480fd9fa0>\r\n    [\r\n      2020,\r\n      2021\r\n    ],\r\n    <pyarrow.lib.Int32Array object at 0x7fe480fd9b80>\r\n    [\r\n      1,\r\n      2\r\n    ]]\r\n   ```\r\n   \r\n   With inferring a dictionary type for the partitioning, the schema of the partitioning object indeed has dictionary type:\r\n   \r\n   ```python\r\n   >>> dataset2 = ds.dataset(\"test_partitioned/\", partitioning=ds.HivePartitioning.discover(infer_dictionary=True))\r\n   >>> datatset2.partitioning.schema\r\n   year: dictionary<values=int32, indices=int32, ordered=0>\r\n   month: dictionary<values=int32, indices=int32, ordered=0>\r\n   -- schema metadata --\r\n   pandas: '{\"index_columns\": [], \"column_indexes\": [{\"name\": null, \"field_n' + 352\r\n   ```\r\n   \r\n   When the FileSystemDataset is not discovered with a partitioning or not created through a discovery, the `partitioning` attribute is None:\r\n   \r\n   ```python\r\n   >>> dataset3 = ds.dataset(\"test_partitioned/\")\r\n   # TODO this is still something to fix, right now this is a \"default\" partitioning (which isn't exposed in Python)\r\n   >>> dataset3.partitioning\r\n   ...\r\n   ~/scipy/repos/arrow/python/pyarrow/_dataset.pyx in pyarrow._dataset.Partitioning.wrap()\r\n   TypeError: default\r\n   \r\n   >>> dataset4 = ds.FileSystemDataset(list(dataset.get_fragments()), dataset.schema, dataset.format, dataset.filesystem)\r\n   >>> dataset4.partitioning is None\r\n   True\r\n   ```\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-06T11:21:06.837+0000",
                    "updated": "2021-07-06T11:21:06.837+0000",
                    "started": "2021-07-06T11:21:06.837+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "619126",
                    "issueId": "13302140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302140/worklog/619184",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10661:\nURL: https://github.com/apache/arrow/pull/10661#issuecomment-874665379\n\n\n   https://issues.apache.org/jira/browse/ARROW-8655\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-06T11:29:07.813+0000",
                    "updated": "2021-07-06T11:29:07.813+0000",
                    "started": "2021-07-06T11:29:07.813+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "619184",
                    "issueId": "13302140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302140/worklog/619293",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche opened a new pull request #10661:\nURL: https://github.com/apache/arrow/pull/10661\n\n\n   (this is a draft PR to see if this is a reasonable approach, still needs tests etc)\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-06T11:44:30.511+0000",
                    "updated": "2021-07-06T11:44:30.511+0000",
                    "started": "2021-07-06T11:44:30.511+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "619293",
                    "issueId": "13302140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302140/worklog/619598",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #10661:\nURL: https://github.com/apache/arrow/pull/10661#discussion_r664849553\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/partition.h\n##########\n@@ -172,6 +172,8 @@ class ARROW_DS_EXPORT KeyValuePartitioning : public Partitioning {\n \n   Result<std::string> Format(const compute::Expression& expr) const override;\n \n+  const ArrayVector dictionaries() const { return dictionaries_; }\n\nReview comment:\n       ```suggestion\r\n     const ArrayVector& dictionaries() const { return dictionaries_; }\r\n   ```\n\n##########\nFile path: cpp/src/arrow/dataset/discovery.cc\n##########\n@@ -274,7 +274,8 @@ Result<std::shared_ptr<Dataset>> FileSystemDatasetFactory::Finish(FinishOptions\n     fragments.push_back(fragment);\n   }\n \n-  return FileSystemDataset::Make(schema, root_partition_, format_, fs_, fragments);\n+  return FileSystemDataset::Make(schema, root_partition_, format_, fs_, fragments,\n+                                 partitioning);\n\nReview comment:\n       ```suggestion\r\n     return FileSystemDataset::Make(std::move(schema), root_partition_, format_, fs_,\r\n                                    std::move(fragments), std::move(partitioning));\r\n   ```\n\n##########\nFile path: cpp/src/arrow/dataset/file_base.h\n##########\n@@ -238,6 +238,12 @@ class ARROW_DS_EXPORT FileSystemDataset : public Dataset {\n       std::shared_ptr<FileFormat> format, std::shared_ptr<fs::FileSystem> filesystem,\n       std::vector<std::shared_ptr<FileFragment>> fragments);\n \n+  static Result<std::shared_ptr<FileSystemDataset>> Make(\n+      std::shared_ptr<Schema> schema, compute::Expression root_partition,\n+      std::shared_ptr<FileFormat> format, std::shared_ptr<fs::FileSystem> filesystem,\n+      std::vector<std::shared_ptr<FileFragment>> fragments,\n+      std::shared_ptr<Partitioning> partitioning);\n\nReview comment:\n       In the interest of limiting available constructors, please combine these overloads:\r\n   ```suggestion\r\n         std::vector<std::shared_ptr<FileFragment>> fragments,\r\n         std::shared_ptr<Partitioning> partitioning = NULLPTR);\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-06T20:18:12.398+0000",
                    "updated": "2021-07-06T20:18:12.398+0000",
                    "started": "2021-07-06T20:18:12.398+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "619598",
                    "issueId": "13302140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302140/worklog/619903",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #10661:\nURL: https://github.com/apache/arrow/pull/10661#discussion_r665260101\n\n\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -2214,6 +2230,15 @@ cdef class HivePartitioning(Partitioning):\n         return PartitioningFactory.wrap(\n             CHivePartitioning.MakeFactory(c_options))\n \n+    @property\n+    def dictionaries(self):\n\nReview comment:\n       Same comment here.\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -2083,6 +2090,15 @@ cdef class DirectoryPartitioning(Partitioning):\n         return PartitioningFactory.wrap(\n             CDirectoryPartitioning.MakeFactory(c_field_names, c_options))\n \n+    @property\n+    def dictionaries(self):\n\nReview comment:\n       Perhaps add a docstring / comment here explaining that this property might be empty or null if the partitioning was not created through some kind of discovery process?  For example:\r\n   \r\n   ```\r\n   # partitioning.dictionaries will be empty here\r\n   partitioning = HivePartitioning(pa.schema([(\"year\", pa.int16()), (\"month\", pa.int8())]))\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-07T10:51:47.376+0000",
                    "updated": "2021-07-07T10:51:47.376+0000",
                    "started": "2021-07-07T10:51:47.376+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "619903",
                    "issueId": "13302140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302140/worklog/619906",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on pull request #10661:\nURL: https://github.com/apache/arrow/pull/10661#issuecomment-875505735\n\n\n   I'll add my comment from the JIRA here as you suggested.  Another approach could be to expose the dictionaries as part of the partitioning factory output.  So the partitioning factory could have a `dictionaries()` property that is set after `Finish` has been called.  This puts a bit more complexity on python since it hides the partitioning factory from the user but it could track the dictionaries and expose them where needed.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-07T10:55:44.277+0000",
                    "updated": "2021-07-07T10:55:44.277+0000",
                    "started": "2021-07-07T10:55:44.276+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "619906",
                    "issueId": "13302140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302140/worklog/620460",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #10661:\nURL: https://github.com/apache/arrow/pull/10661#discussion_r666102851\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/file_base.h\n##########\n@@ -238,6 +238,12 @@ class ARROW_DS_EXPORT FileSystemDataset : public Dataset {\n       std::shared_ptr<FileFormat> format, std::shared_ptr<fs::FileSystem> filesystem,\n       std::vector<std::shared_ptr<FileFragment>> fragments);\n \n+  static Result<std::shared_ptr<FileSystemDataset>> Make(\n+      std::shared_ptr<Schema> schema, compute::Expression root_partition,\n+      std::shared_ptr<FileFormat> format, std::shared_ptr<fs::FileSystem> filesystem,\n+      std::vector<std::shared_ptr<FileFragment>> fragments,\n+      std::shared_ptr<Partitioning> partitioning);\n\nReview comment:\n       Yes, I still wanted to ask about that if I could use a default null argument ;) Will edit this\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-08T11:21:02.303+0000",
                    "updated": "2021-07-08T11:21:02.303+0000",
                    "started": "2021-07-08T11:21:02.302+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "620460",
                    "issueId": "13302140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302140/worklog/620472",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #10661:\nURL: https://github.com/apache/arrow/pull/10661#discussion_r666150986\n\n\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -2083,6 +2090,15 @@ cdef class DirectoryPartitioning(Partitioning):\n         return PartitioningFactory.wrap(\n             CDirectoryPartitioning.MakeFactory(c_field_names, c_options))\n \n+    @property\n+    def dictionaries(self):\n\nReview comment:\n       Yes, added some more docstrings now\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-08T12:35:31.719+0000",
                    "updated": "2021-07-08T12:35:31.719+0000",
                    "started": "2021-07-08T12:35:31.719+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "620472",
                    "issueId": "13302140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302140/worklog/620476",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #10661:\nURL: https://github.com/apache/arrow/pull/10661#discussion_r666166080\n\n\n\n##########\nFile path: python/pyarrow/tests/test_dataset.py\n##########\n@@ -1999,39 +2003,46 @@ def test_scan_iterator(use_threads, use_async):\n             scanner.to_table()\n \n \n-@pytest.mark.parquet\n-def test_open_dataset_partitioned_directory(tempdir, dataset_reader):\n+def _create_partitioned_dataset(basedir):\n     import pyarrow.parquet as pq\n     table = pa.table({'a': range(9), 'b': [0.] * 4 + [1.] * 5})\n \n-    path = tempdir / \"dataset\"\n+    path = basedir / \"dataset-partitioned\"\n     path.mkdir()\n \n-    for part in range(3):\n-        part = path / \"part={}\".format(part)\n+    for i in range(3):\n+        part = path / \"part={}\".format(i)\n         part.mkdir()\n-        pq.write_table(table, part / \"test.parquet\")\n+        pq.write_table(table.slice(3*i, 3), part / \"test.parquet\")\n+\n+    full_table = table.append_column(\n+        \"part\", pa.array(np.repeat([0, 1, 2], 3), type=pa.int32()))\n+\n+    return full_table, path\n+\n+\n+@pytest.mark.parquet\n+def test_open_dataset_partitioned_directory(tempdir, dataset_reader):\n+    full_table, path = _create_partitioned_dataset(tempdir)\n\nReview comment:\n       Those changes are unrelated, but edited the test a bit to factor out the test data creation in a `_create_partitioned_dataset` helper function to reuse.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-08T12:55:39.874+0000",
                    "updated": "2021-07-08T12:55:39.874+0000",
                    "started": "2021-07-08T12:55:39.874+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "620476",
                    "issueId": "13302140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302140/worklog/620479",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #10661:\nURL: https://github.com/apache/arrow/pull/10661#issuecomment-876422802\n\n\n   Updated the PR according to the comments + added tests and docstrings.\r\n   \r\n   >  Another approach could be to expose the dictionaries as part of the partitioning factory output. So the partitioning factory could have a `dictionaries()` property that is set after `Finish` has been called. This puts a bit more complexity on python since it hides the partitioning factory from the user but it could track the dictionaries and expose them where needed.\r\n   \r\n   In the end, I am fine either way *how* we achieve it, and I suppose this could also work (in the python factory functions, we pass the PartitioningFactory before calling `Finish` on the dataset factory, so we have access to this object, could extract dictionaries, and attach this to the Dataset class only at the cython level). \r\n   If this would be preferred, I can take a look at it. But, I think the changes on the C++ side in the current implementation are rather limited and not invasive, and this makes this easier at the Python side. I also don't know to what extent there would be interest in this on the R side (it could make a read CSV -> write parquet flow easier for the case where you want to preserve the exact partitioning).\r\n    \r\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-08T13:05:57.021+0000",
                    "updated": "2021-07-08T13:05:57.021+0000",
                    "started": "2021-07-08T13:05:57.021+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "620479",
                    "issueId": "13302140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302140/worklog/620582",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #10661:\nURL: https://github.com/apache/arrow/pull/10661#discussion_r666340416\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/file_base.h\n##########\n@@ -236,7 +236,8 @@ class ARROW_DS_EXPORT FileSystemDataset : public Dataset {\n   static Result<std::shared_ptr<FileSystemDataset>> Make(\n       std::shared_ptr<Schema> schema, compute::Expression root_partition,\n       std::shared_ptr<FileFormat> format, std::shared_ptr<fs::FileSystem> filesystem,\n-      std::vector<std::shared_ptr<FileFragment>> fragments);\n+      std::vector<std::shared_ptr<FileFragment>> fragments,\n+      std::shared_ptr<Partitioning> partitioning = NULLPTR);\n\nReview comment:\n       This parameter needs a doccomment https://github.com/apache/arrow/pull/10661/checks?check_run_id=3019338484#step:8:2650\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-08T16:19:14.151+0000",
                    "updated": "2021-07-08T16:19:14.151+0000",
                    "started": "2021-07-08T16:19:14.150+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "620582",
                    "issueId": "13302140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302140/worklog/621001",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #10661:\nURL: https://github.com/apache/arrow/pull/10661#discussion_r667002584\n\n\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -2083,6 +2102,27 @@ cdef class DirectoryPartitioning(Partitioning):\n         return PartitioningFactory.wrap(\n             CDirectoryPartitioning.MakeFactory(c_field_names, c_options))\n \n+    @property\n+    def dictionaries(self):\n+        \"\"\"\n+        The unique values for each partition field, if available.\n+\n+        Those values are only available if the Partitioning object was\n+        created through dataset discovery from a PartitioningFactory, or\n+        if the dictionaries were manually specified in the constructor.\n+        If not available, this returns None.\n+        \"\"\"\n+        cdef vector[shared_ptr[CArray]] c_arrays\n+        c_arrays = self.directory_partitioning.dictionaries()\n+        res = []\n+        for arr in c_arrays:\n+            if arr.get() == nullptr:\n+                # Partitioning object has not been created through\n+                # inspected Factory\n+                return None\n+            res.append(pyarrow_wrap_array(arr))\n\nReview comment:\n       Probably not worth worrying about here (will not occur in any KeyValuePartitioning constructed during discovery) but it *is* possible for a KeyValuePartitioning to have dictionaries for some fields and not others\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-09T14:44:54.340+0000",
                    "updated": "2021-07-09T14:44:54.340+0000",
                    "started": "2021-07-09T14:44:54.340+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "621001",
                    "issueId": "13302140"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 13200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@55eae020[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@14a28469[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@580527bb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5804611e[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3953e47d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@2bd3166[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@73f4e675[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@8036584[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2e5518f5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@45082a58[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@119babc2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@2a7c330[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 13200,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Jul 13 18:58:53 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-07-13T18:58:53.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8655/watchers",
            "watchCount": 4,
            "isWatching": false
        },
        "created": "2020-04-30T16:09:29.000+0000",
        "updated": "2021-07-15T10:28:45.000+0000",
        "timeoriginalestimate": null,
        "description": "Currently, we have the {{HivePartitioning}} and {{DirectoryPartitioning}} classes that describe a partitioning used in the discovery phase. But once a dataset object is created, it doesn't know any more about this, it just has partition expressions for the fragments. And the partition keys are added to the schema, but you can't directly know which columns of the schema originated from the partitions.\r\n\r\nHowever, there can be use cases where it would be useful that a dataset still \"knows\" from what kind of partitioning it was created:\r\n\r\n- The \"read CSV write back Parquet\" use case, where the CSV was already partitioned and you want to automatically preserve that partitioning for parquet (kind of roundtripping the partitioning on read/write)\r\n- To convert the dataset to other representation, eg conversion to pandas, it can be useful to know what columns were partition columns (eg for pandas, those columns might be good candidates to be set as the index of the pandas/dask DataFrame). I can imagine conversions to other systems can use similar information.\r\n",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 13200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Dataset][Python][R] Preserve partitioning information for a discovered Dataset",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302140/comment/17153663",
                    "id": "17153663",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=rjzamora",
                        "name": "rjzamora",
                        "key": "rjzamora",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
                        },
                        "displayName": "Rick Zamora",
                        "active": true,
                        "timeZone": "America/Chicago"
                    },
                    "body": "An additional use case here is in dask.dataframe/dask_cudf.\r\n\r\nFor dask.dataframe, we have used the list of partition names and the partition \"keys\" in the past, but can likely get by without the explicit information.\u00a0 For dask_cudf, it is a bit more critical to have access to the partition names (and keys), because we need to use libcudf for the actual I/O.\u00a0 That is, we use pyarrow for the \"planning/discovery\" stage of `read_parquet`, but want to use GPU-accelerated I/O (cannot convert fragments into arrow tables to translate the partitioning information).\r\n\r\nRef to what dask_cudf is currently doing with the partitioning information from ParquetDataset:\u00a0https://github.com/rapidsai/cudf/blob/754f292cce161ef46b077056342e3d263ca80be3/python/dask_cudf/dask_cudf/io/parquet.py#L75",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=rjzamora",
                        "name": "rjzamora",
                        "key": "rjzamora",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
                        },
                        "displayName": "Rick Zamora",
                        "active": true,
                        "timeZone": "America/Chicago"
                    },
                    "created": "2020-07-08T14:47:14.072+0000",
                    "updated": "2020-07-08T14:47:14.072+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302140/comment/17154550",
                    "id": "17154550",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "[~rjzamora] thanks for the additional context! (and indeed for dask_cudf it is more crucial)\r\n\r\nI don't think we will be able to fix this one \"properly\" before 1.0, but maybe at least we should provide a \"band-aid\" to get the information from the partition expression of a Fragment.\r\n\r\nThis typically looks like a combination of \"equality\" expressions:\r\n\r\n{code}\r\nIn [26]: list(dataset.get_fragments())[0].partition_expression                                                                                                                                                     \r\nOut[26]: <pyarrow.dataset.Expression (part == A:string)>\r\n{code}\r\n\r\nIf we provide a helper to get the {{(\"part\", \"A\")}} information from it, that might at least enable a temporary workaround in dask_cudf.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2020-07-09T13:14:39.819+0000",
                    "updated": "2020-07-09T13:14:39.819+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302140/comment/17154901",
                    "id": "17154901",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 7691\n[https://github.com/apache/arrow/pull/7691]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-07-09T20:15:46.811+0000",
                    "updated": "2020-07-09T20:15:46.811+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302140/comment/17247851",
                    "id": "17247851",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "While we added the \"band aid\" solution (private-ish helper function to get key/values from partition expression), I think we still should consider adding a more official and user friendly API for this.\r\n\r\n(eg also vaex started using the helper function -> https://github.com/vaexio/vaex/pull/1094)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2020-12-11T11:14:23.460+0000",
                    "updated": "2020-12-11T11:14:23.460+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302140/comment/17375352",
                    "id": "17375352",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "(this has come up again in https://github.com/dask/dask/pull/7557 (cc [~fjetter]), and I also wondered about while deprecating similar functionality in ParquetDataset in ARROW-13074 / https://github.com/apache/arrow/pull/10549, so trying to revive this issue)\r\n\r\nTrying to think through what information could be useful to expose, I think there are two levels to potentially expose information: the dataset and the fragment.\r\n\r\nFor the full Dataset:\r\n\r\n* The names of the partition fields (in correct order), and maybe full schema (i.e. including the type)\r\n* All possible values a specific partition field can take?\r\n\r\nFor the individual fragments:\r\n\r\n* The actual field values for each of the partition fields/keys, such as the mapping that is currently returned by {{ds._get_partition_keys(fragment.partition_expression}} (assuming this would preserve order, is there anything more needed here? Or \"just\" a more official (public) method to get this information?)\r\n\r\nFor the dataset-level, we could maybe simply expose the \"finished\" Partitioning object that is created while creating the FileSystemDataset through the factory method. Currently, this is Partitioning object is discarded, but we could pass it through to the FileSystemDataset to preserve the partitioning object from which it was created. ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2021-07-06T08:30:06.735+0000",
                    "updated": "2021-07-06T08:30:06.735+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302140/comment/17375477",
                    "id": "17375477",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "Looking at what information is available in the legacy ParquetDataset:\r\n\r\n{code:python}\r\nimport pandas as pd\r\nimport pyarrow as pa\r\nimport pyarrow.parquet as pq\r\nimport pyarrow.dataset as ds\r\n\r\ndf = pd.DataFrame({\"year\": [2020, 2020, 2021, 2021], \"month\":[1, 2, 1, 2], \"values\": [1, 2, 3, 4]})\r\ndf.to_parquet(\"test_partitioned\", partition_cols=[\"year\", \"month\"], engine=\"pyarrow\")\r\n{code}\r\n\r\n{code:python}\r\nIn [2]: d1 = pq.ParquetDataset(\"test_partitioned/\")\r\n\r\nIn [4]: piece = d1.pieces[0]\r\n\r\n# a single piece has information in \"partition_keys\"\r\nIn [5]: piece\r\nOut[5]: ParquetDatasetPiece('test_partitioned//year=2020/month=1/1b27b290ffdf4cccbf21d2d2feef79f4.parquet', row_group=None, partition_keys=[('year', 0), ('month', 0)])\r\n\r\n# note: the values are the *indices* into the unique values per partition field, not the actual value\r\nIn [6]: piece.partition_keys\r\nOut[6]: [('year', 0), ('month', 0)]\r\n\r\n# In addition, the dataset object has a \"partitions\" attribute\r\nIn [7]: d1.partitions\r\nOut[7]: <pyarrow.parquet.ParquetPartitions at 0x7fe4caea22e0>\r\n\r\n# the partition field names (note: also not ordered here)\r\nIn [8]: d1.partitions.partition_names\r\nOut[8]: {'month', 'year'}\r\n\r\n# more information about each partition field\r\nIn [9]: d1.partitions.levels\r\nOut[9]: \r\n[<pyarrow.parquet.PartitionSet at 0x7fe4c9ea8760>,\r\n <pyarrow.parquet.PartitionSet at 0x7fe4cae94e20>]\r\n\r\nIn [10]: d1.partitions.levels[0].dictionary\r\nOut[10]: \r\n<pyarrow.lib.Int64Array object at 0x7fe481dfafa0>\r\n[\r\n  2020,\r\n  2021\r\n]\r\n\r\nIn [11]: d1.partitions.levels[0].keys\r\nOut[11]: ['2020', '2021']\r\n\r\nIn [12]: d1.partitions.levels[0].key_indices\r\nOut[12]: {'2020': 0, '2021': 1}\r\n\r\nIn [13]: d1.partitions.levels[0].name\r\nOut[13]: 'year'\r\n{code}\r\n\r\nI am working on a draft PR to preserve the {{Partitioning}} object from which the {{FileSystemDataset}} was created in the new API. This could look like:\r\n\r\n{code:python}\r\nIn [16]: d2 = ds.dataset(\"test_partitioned/\", partitioning=\"hive\")\r\n\r\nIn [17]: d2\r\nOut[17]: <pyarrow._dataset.FileSystemDataset at 0x7fe481b6e270>\r\n\r\nIn [18]: d2.partitioning\r\nOut[18]: <pyarrow._dataset.HivePartitioning at 0x7fe48162c7f0>\r\n\r\nIn [19]: d2.partitioning.schema\r\nOut[19]: \r\nyear: int32\r\nmonth: int32\r\n\r\nIn [20]: d2.partitioning.schema.names\r\nOut[20]: ['year', 'month']\r\n\r\nIn [21]: d2.partitioning.dictionaries\r\nOut[21]: \r\n[<pyarrow.lib.Int32Array object at 0x7fe480fd9fa0>\r\n [\r\n   2020,\r\n   2021\r\n ],\r\n <pyarrow.lib.Int32Array object at 0x7fe480fd9b80>\r\n [\r\n   1,\r\n   2\r\n ]]\r\n{code}\r\n\r\nI think this should provide all necessary information?\r\n\r\nIn addition, in the new API, we have the {{Fragments}}, which currently already allow the following:\r\n\r\n{code:python}\r\nIn [22]: fragments = list(d2.get_fragments())\r\n\r\nIn [23]: fragments[0].partition_expression\r\nOut[23]: <pyarrow.dataset.Expression ((year == 2020) and (month == 1))>\r\n\r\nIn [24]: ds._get_partition_keys(fragments[0].partition_expression)\r\nOut[24]: {'month': 1, 'year': 2020}\r\n{code}\r\n\r\nWe could add a public property on the {{Fragment}} to expose this, for example a {{FileFragment.partition_values}} (or other name if there are suggestions).\r\n\r\nFeedback on whether this would be useful / sufficient for dask (or other use cases) would be very welcome!",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2021-07-06T10:56:56.097+0000",
                    "updated": "2021-07-06T10:56:56.097+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302140/comment/17375871",
                    "id": "17375871",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "I think the only thing tricky here is the unique values.\u00a0 In the general case a dataset may not know all possible values.\u00a0 The \"partition_expression\" of a fragment is not required to be an equality expression (or even several ANDed together).\u00a0 Technically there is nothing against creating a union dataset, perhaps composed of a CSV dataset (where all data has timestamp < 2020) and a parquet dataset (where all data has timestamp > 2020) because the company changed how they stored data at some point.\r\n\r\nScanning for all values currently used is something that happens in the factory->dataset part (which I suppose is kind of hidden in the current python implementation).\u00a0 Maybe there is something we can add to the dataset factory so that calling Finish (or perhaps adding a new property that can be accessed after calling Finish) could return dictionaries of everything it discovered.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-07-06T17:15:10.488+0000",
                    "updated": "2021-07-06T17:15:10.488+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302140/comment/17375905",
                    "id": "17375905",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "I should maybe have been more explicit, but I think this is fine if the above (eg the {{FileSystemDataset.partitioning}} attribute I proposed in the PR) only works for datasets that were created through the factory function, since that covers many typical use cases (and specifically the use case of dask) and is indeed also the only use case where this information can reliably be known. I think it is fine that this will not work (i.e. return None) for eg union datasets. \r\n\r\nSimilarly for the \"partition_expression\": if it's created through discovery with a Directory/HivePartitioning, we know that the partition expression will always only include equalities. \r\nIndeed in general this will not be true, but again I think that is fine (although that's maybe a reason to not make this an attribute on the FileFragment, but keep it as a function extracting the information from the partition expression).\r\n\r\nbq. Maybe there is something we can add to the dataset factory so that calling Finish (or perhaps adding a new property that can be accessed after calling Finish) could return dictionaries of everything it discovered.\r\n\r\nCurrently those dictionaries are accessible from the {{Partitioning}} object inside the {{Finish()}} call, but indeed after calling {{Finish()}} you can't access this because the {{Partitioning}} object is not stored in either the returned dataset or on the original factory object. \r\nMaking it available on the FileSystemDatasetFactory instead of attaching it to the returned FileSystemDataset (as I am doing in the PR -> https://github.com/apache/arrow/pull/10661) is an option as well, and then the Python layer could handle it (and attaching it to the cython Dataset class). [~westonpace] that's maybe something to comment on the PR if you prefer that way.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2021-07-06T17:44:57.935+0000",
                    "updated": "2021-07-06T17:45:19.369+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302140/comment/17380115",
                    "id": "17380115",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 10661\n[https://github.com/apache/arrow/pull/10661]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-07-13T18:58:53.149+0000",
                    "updated": "2021-07-13T18:58:53.149+0000"
                }
            ],
            "maxResults": 9,
            "total": 9,
            "startAt": 0
        },
        "customfield_12311820": "0|z0e9nk:",
        "customfield_12314139": null
    }
}