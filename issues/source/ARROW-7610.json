{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13280268",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13280268",
    "key": "ARROW-7610",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12347769",
                "id": "12347769",
                "description": "",
                "name": "1.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-07-24"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12581648",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12581648",
                "type": {
                    "id": "10032",
                    "name": "Blocker",
                    "inward": "is blocked by",
                    "outward": "blocks",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10032"
                },
                "outwardIssue": {
                    "id": "13287985",
                    "key": "ARROW-7955",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13287985",
                    "fields": {
                        "summary": "[Java] Support large buffer for file/stream IPC",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
            "name": "emkornfield@gmail.com",
            "key": "emkornfield@gmail.com",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Micah Kornfield",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
            "name": "emkornfield@gmail.com",
            "key": "emkornfield@gmail.com",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Micah Kornfield",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 31800,
            "total": 31800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 31800,
            "total": 31800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7610/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 54,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13280268/worklog/379229",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #6323: ARROW-7610: [Java] Finish support for 64 bit int allocations\nURL: https://github.com/apache/arrow/pull/6323\n \n \n   1.  Add an allocator capable of allocating larger then 2GB of data.\r\n   \r\n   2.  Do end-to-end round trip trip on a larger vector/record batch size.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-30T08:17:28.522+0000",
                    "updated": "2020-01-30T08:17:28.522+0000",
                    "started": "2020-01-30T08:17:28.522+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "379229",
                    "issueId": "13280268"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13280268/worklog/379231",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #6323: ARROW-7610: [Java] Finish support for 64 bit int allocations\nURL: https://github.com/apache/arrow/pull/6323#issuecomment-580137629\n \n \n   Some limitations of this PR:\r\n   1. We do not support large buffers in varchar and var binary vectors, as the offset width is fixed at 4. (I have noticed that ARROW-6111 has been opened to track this, and I would like to help if necessary).\r\n   2. We do not support E2E sending/receiving large buffers through IPC. This is because the current Flight implementation is relying on data structurs which are based on 32-bit integers (e.g. NettyArrowBuf#length and ByteArrayOutputStream#count are both based on int32). Fixing this may require non-trivial effort, and we may do it in another issue (if this is needed). \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-30T08:23:59.511+0000",
                    "updated": "2020-01-30T08:23:59.511+0000",
                    "started": "2020-01-30T08:23:59.510+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "379231",
                    "issueId": "13280268"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13280268/worklog/379236",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #6323: ARROW-7610: [Java] Finish support for 64 bit int allocations\nURL: https://github.com/apache/arrow/pull/6323#issuecomment-580140237\n \n \n   https://issues.apache.org/jira/browse/ARROW-7610\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-30T08:31:44.957+0000",
                    "updated": "2020-01-30T08:31:44.957+0000",
                    "started": "2020-01-30T08:31:44.957+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "379236",
                    "issueId": "13280268"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13280268/worklog/380667",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #6323: ARROW-7610: [Java] Finish support for 64 bit int allocations\nURL: https://github.com/apache/arrow/pull/6323#issuecomment-581229516\n \n \n   @liyafan82 I removed myself as assignee for ARROW-6111 feel free to pick it up if you have time.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-03T04:16:47.531+0000",
                    "updated": "2020-02-03T04:16:47.531+0000",
                    "started": "2020-02-03T04:16:47.530+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "380667",
                    "issueId": "13280268"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13280268/worklog/380671",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #6323: ARROW-7610: [Java] Finish support for 64 bit int allocations\nURL: https://github.com/apache/arrow/pull/6323#discussion_r373916815\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/UInt2Vector.java\n ##########\n @@ -80,7 +80,7 @@ public MinorType getMinorType() {\n    * @return value stored at the index.\n    */\n   public static char get(final ArrowBuf buffer, final int index) {\n-    return buffer.getChar(index * TYPE_WIDTH);\n+    return buffer.getChar((long) index * TYPE_WIDTH);\n \n Review comment:\n   would it be simpler to make TYPE_WIDTH long for here an other places?  Are there downsides to that?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-03T04:20:03.229+0000",
                    "updated": "2020-02-03T04:20:03.229+0000",
                    "started": "2020-02-03T04:20:03.228+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "380671",
                    "issueId": "13280268"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13280268/worklog/380672",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #6323: ARROW-7610: [Java] Finish support for 64 bit int allocations\nURL: https://github.com/apache/arrow/pull/6323#discussion_r373916853\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/TestLargeVector.java\n ##########\n @@ -0,0 +1,188 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+import static org.junit.Assert.assertArrayEquals;\n+import static org.junit.Assert.assertEquals;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.memory.DefaultAllocationManagerOption;\n+import org.apache.arrow.memory.RootAllocator;\n+\n+import io.netty.buffer.ArrowBuf;\n+\n+/**\n+ * Integration test for a vector with a large (more than 2GB) {@link io.netty.buffer.ArrowBuf} as\n+ * the data buffer..\n \n Review comment:\n   ```suggestion\r\n    * the data buffer.\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-03T04:20:24.317+0000",
                    "updated": "2020-02-03T04:20:24.317+0000",
                    "started": "2020-02-03T04:20:24.316+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "380672",
                    "issueId": "13280268"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13280268/worklog/380674",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #6323: ARROW-7610: [Java] Finish support for 64 bit int allocations\nURL: https://github.com/apache/arrow/pull/6323#discussion_r373917306\n \n \n\n ##########\n File path: java/memory/src/main/java/org/apache/arrow/memory/DefaultAllocationManagerOption.java\n ##########\n @@ -0,0 +1,98 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.memory;\n+\n+/**\n+ * A class for choosing the default allocation manager.\n+ */\n+public class DefaultAllocationManagerOption {\n+\n+  /**\n+   * The environmental variable to set the default allocation manager type.\n+   */\n+  public static final String ALLOCATION_MANAGER_TYPE_ENV_NAME = \"ARROW_ALLOCATION_MANAGER_TYPE\";\n+\n+  /**\n+   * The system property to set the default allocation manager type.\n+   */\n+  public static final String ALLOCATION_MANAGER_TYPE_PROPERTY_NAME = \"arrow.allocation.manager.type\";\n+\n+  static final org.slf4j.Logger logger = org.slf4j.LoggerFactory.getLogger(DefaultAllocationManagerOption.class);\n+\n+  /**\n+   * The default allocation manager factory.\n+   */\n+  public static final AllocationManager.Factory DEFAULT_ALLOCATION_MANAGER_FACTORY =\n+      getDefaultAllocationManagerFactory();\n+\n+  /**\n+   * The allocation manager type.\n+   */\n+  public enum AllocationManagerType {\n+    /**\n+     * Netty based allocation manager.\n+     */\n+    Netty,\n+\n+    /**\n+     * Unsafe based allocation manager.\n+     */\n+    Unsafe,\n+\n+    /**\n+     * Unknown type.\n+     */\n+    Unknown,\n+  }\n+\n+  private static AllocationManagerType getDefaultAllocationManagerType() {\n+    AllocationManagerType ret = AllocationManagerType.Unknown;\n+\n+    String envValue = System.getenv(ALLOCATION_MANAGER_TYPE_ENV_NAME);\n+    if (\"netty\".equals(envValue)) {\n+      ret = AllocationManagerType.Netty;\n+    } else if (\"unsafe\".equals(envValue)) {\n+      ret = AllocationManagerType.Unsafe;\n+    }\n+\n+    // system property takes precedence\n+    String propValue = System.getProperty(ALLOCATION_MANAGER_TYPE_PROPERTY_NAME);\n+    if (\"netty\".equals(propValue)) {\n+      ret = AllocationManagerType.Netty;\n+    } else if (\"unsafe\".equals(propValue)) {\n+      ret = AllocationManagerType.Unsafe;\n+    }\n+    return ret;\n+  }\n+\n+  private static AllocationManager.Factory getDefaultAllocationManagerFactory() {\n+    AllocationManagerType type = getDefaultAllocationManagerType();\n+\n+    switch (type) {\n+      case Netty:\n+        return NettyAllocationManager.FACTORY;\n+      case Unsafe:\n+        return UnsafeAllocationManager.FACTORY;\n+      case Unknown:\n+        logger.warn(\"allocation manager type not specified, using netty as the default type\");\n+        return NettyAllocationManager.FACTORY;\n \n Review comment:\n   @jacques-n thoughts on making the default Unsafe to avoid any dependencies on Netty?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-03T04:23:36.551+0000",
                    "updated": "2020-02-03T04:23:36.551+0000",
                    "started": "2020-02-03T04:23:36.550+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "380674",
                    "issueId": "13280268"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13280268/worklog/380676",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #6323: ARROW-7610: [Java] Finish support for 64 bit int allocations\nURL: https://github.com/apache/arrow/pull/6323#issuecomment-581230962\n \n \n   @liyafan82 can you elaborate on how flight impacts the normal IPC format? (perhaps a follow-up JIRA explaining it?)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-03T04:25:06.675+0000",
                    "updated": "2020-02-03T04:25:06.675+0000",
                    "started": "2020-02-03T04:25:06.675+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "380676",
                    "issueId": "13280268"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13280268/worklog/380733",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #6323: ARROW-7610: [Java] Finish support for 64 bit int allocations\nURL: https://github.com/apache/arrow/pull/6323#issuecomment-581266796\n \n \n   > @liyafan82 I removed myself as assignee for ARROW-6111 feel free to pick it up if you have time.\r\n   \r\n   Sure. I will try to proivide an implementation. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-03T06:58:24.732+0000",
                    "updated": "2020-02-03T06:58:24.732+0000",
                    "started": "2020-02-03T06:58:24.731+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "380733",
                    "issueId": "13280268"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13280268/worklog/380737",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #6323: ARROW-7610: [Java] Finish support for 64 bit int allocations\nURL: https://github.com/apache/arrow/pull/6323#discussion_r373945702\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/UInt2Vector.java\n ##########\n @@ -80,7 +80,7 @@ public MinorType getMinorType() {\n    * @return value stored at the index.\n    */\n   public static char get(final ArrowBuf buffer, final int index) {\n-    return buffer.getChar(index * TYPE_WIDTH);\n+    return buffer.getChar((long) index * TYPE_WIDTH);\n \n Review comment:\n   Making it a long is a reasonable choice. \r\n   I am not sure if is an overkill as TYPE_WIDTH is often a small number, and often used in scenarios where a small number is expected. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-03T07:01:10.008+0000",
                    "updated": "2020-02-03T07:01:10.008+0000",
                    "started": "2020-02-03T07:01:10.008+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "380737",
                    "issueId": "13280268"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13280268/worklog/380738",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #6323: ARROW-7610: [Java] Finish support for 64 bit int allocations\nURL: https://github.com/apache/arrow/pull/6323#discussion_r373945802\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/TestLargeVector.java\n ##########\n @@ -0,0 +1,188 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+import static org.junit.Assert.assertArrayEquals;\n+import static org.junit.Assert.assertEquals;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.memory.DefaultAllocationManagerOption;\n+import org.apache.arrow.memory.RootAllocator;\n+\n+import io.netty.buffer.ArrowBuf;\n+\n+/**\n+ * Integration test for a vector with a large (more than 2GB) {@link io.netty.buffer.ArrowBuf} as\n+ * the data buffer..\n \n Review comment:\n   Nice catch. Thank you.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-03T07:01:33.959+0000",
                    "updated": "2020-02-03T07:01:33.959+0000",
                    "started": "2020-02-03T07:01:33.958+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "380738",
                    "issueId": "13280268"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13280268/worklog/380744",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #6323: ARROW-7610: [Java] Finish support for 64 bit int allocations\nURL: https://github.com/apache/arrow/pull/6323#issuecomment-581267814\n \n \n   > @liyafan82 can you elaborate on how flight impacts the normal IPC format? (perhaps a follow-up JIRA explaining it?)\r\n   \r\n   Sure. I will open a JIRA tracking it. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-03T07:02:13.700+0000",
                    "updated": "2020-02-03T07:02:13.700+0000",
                    "started": "2020-02-03T07:02:13.700+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "380744",
                    "issueId": "13280268"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13280268/worklog/389940",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #6323: ARROW-7610: [Java] Finish support for 64 bit int allocations\nURL: https://github.com/apache/arrow/pull/6323#discussion_r382002632\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/UInt2Vector.java\n ##########\n @@ -80,7 +80,7 @@ public MinorType getMinorType() {\n    * @return value stored at the index.\n    */\n   public static char get(final ArrowBuf buffer, final int index) {\n-    return buffer.getChar(index * TYPE_WIDTH);\n+    return buffer.getChar((long) index * TYPE_WIDTH);\n \n Review comment:\n   @emkornfield After more thoughts, I kind of prefer leaving the offset width int32. This makes sure we promote the related operations to int64 only when necessary. \r\n   \r\n   That being said, I will follow your advice and make the offset width int 64, if you have a reason, or feel strong about it. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-20T13:38:55.767+0000",
                    "updated": "2020-02-20T13:38:55.767+0000",
                    "started": "2020-02-20T13:38:55.767+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "389940",
                    "issueId": "13280268"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13280268/worklog/391524",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #6323: ARROW-7610: [Java] Finish support for 64 bit int allocations\nURL: https://github.com/apache/arrow/pull/6323#discussion_r383094663\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/UInt2Vector.java\n ##########\n @@ -80,7 +80,7 @@ public MinorType getMinorType() {\n    * @return value stored at the index.\n    */\n   public static char get(final ArrowBuf buffer, final int index) {\n-    return buffer.getChar(index * TYPE_WIDTH);\n+    return buffer.getChar((long) index * TYPE_WIDTH);\n \n Review comment:\n   sounds ok to me.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-24T05:55:43.430+0000",
                    "updated": "2020-02-24T05:55:43.430+0000",
                    "started": "2020-02-24T05:55:43.429+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "391524",
                    "issueId": "13280268"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13280268/worklog/391525",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #6323: ARROW-7610: [Java] Finish support for 64 bit int allocations\nURL: https://github.com/apache/arrow/pull/6323#issuecomment-590177010\n \n \n   > > @liyafan82 can you elaborate on how flight impacts the normal IPC format? (perhaps a follow-up JIRA explaining it?)\r\n   \r\n   > \r\n   > Sure. I will open a JIRA tracking it.\r\n   \r\n   Did you get a chance, I'd like to understand what is left?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-24T05:57:36.204+0000",
                    "updated": "2020-02-24T05:57:36.204+0000",
                    "started": "2020-02-24T05:57:36.203+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "391525",
                    "issueId": "13280268"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13280268/worklog/391532",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #6323: ARROW-7610: [Java] Finish support for 64 bit int allocations\nURL: https://github.com/apache/arrow/pull/6323#issuecomment-590181865\n \n \n   > > > @liyafan82 can you elaborate on how flight impacts the normal IPC format? (perhaps a follow-up JIRA explaining it?)\r\n   > \r\n   > > Sure. I will open a JIRA tracking it.\r\n   > \r\n   > Did you get a chance, I'd like to understand what is left?\r\n   \r\n   Sure. I opened https://issues.apache.org/jira/browse/ARROW-7746 to track it. \r\n   If the description is not clear enough, please let me know, and I will revise it.\r\n   The general idea is that some internal data structures are based on int32, so if the buffer size exceeds 2GB, an integer overflow will happen.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-24T06:21:29.728+0000",
                    "updated": "2020-02-24T06:21:29.728+0000",
                    "started": "2020-02-24T06:21:29.726+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "391532",
                    "issueId": "13280268"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13280268/worklog/394070",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #6323: ARROW-7610: [Java] Finish support for 64 bit int allocations\nURL: https://github.com/apache/arrow/pull/6323#discussion_r385026615\n \n \n\n ##########\n File path: java/memory/src/main/java/org/apache/arrow/memory/DefaultAllocationManagerOption.java\n ##########\n @@ -0,0 +1,98 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.memory;\n+\n+/**\n+ * A class for choosing the default allocation manager.\n+ */\n+public class DefaultAllocationManagerOption {\n+\n+  /**\n+   * The environmental variable to set the default allocation manager type.\n+   */\n+  public static final String ALLOCATION_MANAGER_TYPE_ENV_NAME = \"ARROW_ALLOCATION_MANAGER_TYPE\";\n+\n+  /**\n+   * The system property to set the default allocation manager type.\n+   */\n+  public static final String ALLOCATION_MANAGER_TYPE_PROPERTY_NAME = \"arrow.allocation.manager.type\";\n+\n+  static final org.slf4j.Logger logger = org.slf4j.LoggerFactory.getLogger(DefaultAllocationManagerOption.class);\n+\n+  /**\n+   * The default allocation manager factory.\n+   */\n+  public static final AllocationManager.Factory DEFAULT_ALLOCATION_MANAGER_FACTORY =\n+      getDefaultAllocationManagerFactory();\n+\n+  /**\n+   * The allocation manager type.\n+   */\n+  public enum AllocationManagerType {\n+    /**\n+     * Netty based allocation manager.\n+     */\n+    Netty,\n+\n+    /**\n+     * Unsafe based allocation manager.\n+     */\n+    Unsafe,\n+\n+    /**\n+     * Unknown type.\n+     */\n+    Unknown,\n+  }\n+\n+  private static AllocationManagerType getDefaultAllocationManagerType() {\n+    AllocationManagerType ret = AllocationManagerType.Unknown;\n+\n+    String envValue = System.getenv(ALLOCATION_MANAGER_TYPE_ENV_NAME);\n+    if (\"netty\".equals(envValue)) {\n+      ret = AllocationManagerType.Netty;\n+    } else if (\"unsafe\".equals(envValue)) {\n+      ret = AllocationManagerType.Unsafe;\n+    }\n+\n+    // system property takes precedence\n+    String propValue = System.getProperty(ALLOCATION_MANAGER_TYPE_PROPERTY_NAME);\n+    if (\"netty\".equals(propValue)) {\n+      ret = AllocationManagerType.Netty;\n+    } else if (\"unsafe\".equals(propValue)) {\n+      ret = AllocationManagerType.Unsafe;\n+    }\n+    return ret;\n+  }\n+\n+  private static AllocationManager.Factory getDefaultAllocationManagerFactory() {\n+    AllocationManagerType type = getDefaultAllocationManagerType();\n+\n+    switch (type) {\n+      case Netty:\n+        return NettyAllocationManager.FACTORY;\n+      case Unsafe:\n+        return UnsafeAllocationManager.FACTORY;\n+      case Unknown:\n+        logger.warn(\"allocation manager type not specified, using netty as the default type\");\n+        return NettyAllocationManager.FACTORY;\n \n Review comment:\n   @emkornfield I have changed the code to make the default unsafe, so that we support large buffers by default. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-27T10:06:22.034+0000",
                    "updated": "2020-02-27T10:06:22.034+0000",
                    "started": "2020-02-27T10:06:22.033+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "394070",
                    "issueId": "13280268"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13280268/worklog/415282",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #6323: ARROW-7610: [Java] Finish support for 64 bit int allocations\nURL: https://github.com/apache/arrow/pull/6323#issuecomment-608192190\n \n \n   @emkornfield Could you please triage this PR to a committer, as it is blocking another issue (https://github.com/apache/arrow/pull/6782#issuecomment-606986823)?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-03T02:18:10.332+0000",
                    "updated": "2020-04-03T02:18:10.332+0000",
                    "started": "2020-04-03T02:18:10.332+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "415282",
                    "issueId": "13280268"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13280268/worklog/415905",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #6323: ARROW-7610: [Java] Finish support for 64 bit int allocations\nURL: https://github.com/apache/arrow/pull/6323#discussion_r403412765\n \n \n\n ##########\n File path: java/memory/src/main/java/org/apache/arrow/memory/DefaultAllocationManagerOption.java\n ##########\n @@ -0,0 +1,98 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.memory;\n+\n+/**\n+ * A class for choosing the default allocation manager.\n+ */\n+public class DefaultAllocationManagerOption {\n+\n+  /**\n+   * The environmental variable to set the default allocation manager type.\n+   */\n+  public static final String ALLOCATION_MANAGER_TYPE_ENV_NAME = \"ARROW_ALLOCATION_MANAGER_TYPE\";\n+\n+  /**\n+   * The system property to set the default allocation manager type.\n+   */\n+  public static final String ALLOCATION_MANAGER_TYPE_PROPERTY_NAME = \"arrow.allocation.manager.type\";\n+\n+  static final org.slf4j.Logger logger = org.slf4j.LoggerFactory.getLogger(DefaultAllocationManagerOption.class);\n+\n+  /**\n+   * The default allocation manager factory.\n+   */\n+  public static final AllocationManager.Factory DEFAULT_ALLOCATION_MANAGER_FACTORY =\n+      getDefaultAllocationManagerFactory();\n+\n+  /**\n+   * The allocation manager type.\n+   */\n+  public enum AllocationManagerType {\n+    /**\n+     * Netty based allocation manager.\n+     */\n+    Netty,\n+\n+    /**\n+     * Unsafe based allocation manager.\n+     */\n+    Unsafe,\n+\n+    /**\n+     * Unknown type.\n+     */\n+    Unknown,\n+  }\n+\n+  private static AllocationManagerType getDefaultAllocationManagerType() {\n+    AllocationManagerType ret = AllocationManagerType.Unknown;\n+\n+    String envValue = System.getenv(ALLOCATION_MANAGER_TYPE_ENV_NAME);\n+    if (\"netty\".equals(envValue)) {\n+      ret = AllocationManagerType.Netty;\n+    } else if (\"unsafe\".equals(envValue)) {\n+      ret = AllocationManagerType.Unsafe;\n+    }\n+\n+    // system property takes precedence\n+    String propValue = System.getProperty(ALLOCATION_MANAGER_TYPE_PROPERTY_NAME);\n+    if (\"netty\".equals(propValue)) {\n+      ret = AllocationManagerType.Netty;\n+    } else if (\"unsafe\".equals(propValue)) {\n+      ret = AllocationManagerType.Unsafe;\n+    }\n+    return ret;\n+  }\n+\n+  private static AllocationManager.Factory getDefaultAllocationManagerFactory() {\n+    AllocationManagerType type = getDefaultAllocationManagerType();\n+\n+    switch (type) {\n+      case Netty:\n+        return NettyAllocationManager.FACTORY;\n+      case Unsafe:\n+        return UnsafeAllocationManager.FACTORY;\n+      case Unknown:\n+        logger.warn(\"allocation manager type not specified, using netty as the default type\");\n \n Review comment:\n   Warn might be too hi, I think info is probably more appropriate.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-04T02:38:24.512+0000",
                    "updated": "2020-04-04T02:38:24.512+0000",
                    "started": "2020-04-04T02:38:24.512+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "415905",
                    "issueId": "13280268"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13280268/worklog/415906",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #6323: ARROW-7610: [Java] Finish support for 64 bit int allocations\nURL: https://github.com/apache/arrow/pull/6323#discussion_r403412765\n \n \n\n ##########\n File path: java/memory/src/main/java/org/apache/arrow/memory/DefaultAllocationManagerOption.java\n ##########\n @@ -0,0 +1,98 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.memory;\n+\n+/**\n+ * A class for choosing the default allocation manager.\n+ */\n+public class DefaultAllocationManagerOption {\n+\n+  /**\n+   * The environmental variable to set the default allocation manager type.\n+   */\n+  public static final String ALLOCATION_MANAGER_TYPE_ENV_NAME = \"ARROW_ALLOCATION_MANAGER_TYPE\";\n+\n+  /**\n+   * The system property to set the default allocation manager type.\n+   */\n+  public static final String ALLOCATION_MANAGER_TYPE_PROPERTY_NAME = \"arrow.allocation.manager.type\";\n+\n+  static final org.slf4j.Logger logger = org.slf4j.LoggerFactory.getLogger(DefaultAllocationManagerOption.class);\n+\n+  /**\n+   * The default allocation manager factory.\n+   */\n+  public static final AllocationManager.Factory DEFAULT_ALLOCATION_MANAGER_FACTORY =\n+      getDefaultAllocationManagerFactory();\n+\n+  /**\n+   * The allocation manager type.\n+   */\n+  public enum AllocationManagerType {\n+    /**\n+     * Netty based allocation manager.\n+     */\n+    Netty,\n+\n+    /**\n+     * Unsafe based allocation manager.\n+     */\n+    Unsafe,\n+\n+    /**\n+     * Unknown type.\n+     */\n+    Unknown,\n+  }\n+\n+  private static AllocationManagerType getDefaultAllocationManagerType() {\n+    AllocationManagerType ret = AllocationManagerType.Unknown;\n+\n+    String envValue = System.getenv(ALLOCATION_MANAGER_TYPE_ENV_NAME);\n+    if (\"netty\".equals(envValue)) {\n+      ret = AllocationManagerType.Netty;\n+    } else if (\"unsafe\".equals(envValue)) {\n+      ret = AllocationManagerType.Unsafe;\n+    }\n+\n+    // system property takes precedence\n+    String propValue = System.getProperty(ALLOCATION_MANAGER_TYPE_PROPERTY_NAME);\n+    if (\"netty\".equals(propValue)) {\n+      ret = AllocationManagerType.Netty;\n+    } else if (\"unsafe\".equals(propValue)) {\n+      ret = AllocationManagerType.Unsafe;\n+    }\n+    return ret;\n+  }\n+\n+  private static AllocationManager.Factory getDefaultAllocationManagerFactory() {\n+    AllocationManagerType type = getDefaultAllocationManagerType();\n+\n+    switch (type) {\n+      case Netty:\n+        return NettyAllocationManager.FACTORY;\n+      case Unsafe:\n+        return UnsafeAllocationManager.FACTORY;\n+      case Unknown:\n+        logger.warn(\"allocation manager type not specified, using netty as the default type\");\n \n Review comment:\n   Warn might be too high, I think info is probably more appropriate.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-04T02:45:05.460+0000",
                    "updated": "2020-04-04T02:45:05.460+0000",
                    "started": "2020-04-04T02:45:05.459+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "415906",
                    "issueId": "13280268"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 31800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@4ed47223[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5d86cae0[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@94da2d3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@6277b8d0[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@879a07d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@40dc6dd5[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@24e31427[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@7b0d8953[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3eb2a407[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1d23d4c1[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@21ddb96e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@360dfb17[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 31800,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Apr 27 19:04:33 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-04-27T19:04:33.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7610/watchers",
            "watchCount": 4,
            "isWatching": false
        },
        "created": "2020-01-18T04:31:49.000+0000",
        "updated": "2020-04-28T02:23:59.000+0000",
        "timeoriginalestimate": null,
        "description": "1.\u00a0 Add an allocator capable of allocating larger then 2GB of data.\r\n\r\n2.\u00a0 Do end-to-end round trip trip on a larger vector/record batch size.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "8h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 31800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] Finish support for 64 bit int allocations ",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13280268/comment/17018511",
                    "id": "17018511",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
                        "name": "fan_li_ya",
                        "key": "fan_li_ya",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Liya Fan",
                        "active": true,
                        "timeZone": "Asia/Shanghai"
                    },
                    "body": "may i try to resolve this issue\uff1f",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
                        "name": "fan_li_ya",
                        "key": "fan_li_ya",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Liya Fan",
                        "active": true,
                        "timeZone": "Asia/Shanghai"
                    },
                    "created": "2020-01-18T05:46:34.319+0000",
                    "updated": "2020-01-18T05:46:34.319+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13280268/comment/17018512",
                    "id": "17018512",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "[~fan_li_ya]\u00a0that would be great, I started a thread on the mailing list about possible options for an allocator.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2020-01-18T05:47:28.296+0000",
                    "updated": "2020-01-18T05:47:28.296+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13280268/comment/17018513",
                    "id": "17018513",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
                        "name": "fan_li_ya",
                        "key": "fan_li_ya",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Liya Fan",
                        "active": true,
                        "timeZone": "Asia/Shanghai"
                    },
                    "body": "i see. thanks.\nthis seems interesting, and i am working on another issue related to allocator",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
                        "name": "fan_li_ya",
                        "key": "fan_li_ya",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Liya Fan",
                        "active": true,
                        "timeZone": "Asia/Shanghai"
                    },
                    "created": "2020-01-18T05:54:31.694+0000",
                    "updated": "2020-01-18T05:54:31.694+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13280268/comment/17019056",
                    "id": "17019056",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jnadeau",
                        "name": "jnadeau",
                        "key": "jnadeau",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Jacques Nadeau",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Per comments on the mailing list, \r\n\r\nI think we should use the existing netty facades for this. \r\n\r\n[PlatformDependent.allocateMemory(long)|https://github.com/netty/netty/blob/4.1/common/src/main/java/io/netty/util/internal/PlatformDependent.java#L383]\r\n[PlatformDependent.freeMemory(long)|https://github.com/netty/netty/blob/4.1/common/src/main/java/io/netty/util/internal/PlatformDependent.java#L387]\r\n\r\nThese delegate to unsafe which also ensures that -XX:MaxDirectMemorySize is respected.\r\n\r\nI don't think we need a new allocator. We can simply check the size and use this path if beyond an int in size within the existing allocator.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jnadeau",
                        "name": "jnadeau",
                        "key": "jnadeau",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Jacques Nadeau",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2020-01-19T23:08:16.734+0000",
                    "updated": "2020-01-19T23:08:16.734+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13280268/comment/17093851",
                    "id": "17093851",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bryanc",
                        "name": "bryanc",
                        "key": "bryanc",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bryanc&avatarId=23479",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bryanc&avatarId=23479",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bryanc&avatarId=23479",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bryanc&avatarId=23479"
                        },
                        "displayName": "Bryan Cutler",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Issue resolved by pull request 6323\n[https://github.com/apache/arrow/pull/6323]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bryanc",
                        "name": "bryanc",
                        "key": "bryanc",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bryanc&avatarId=23479",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bryanc&avatarId=23479",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bryanc&avatarId=23479",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bryanc&avatarId=23479"
                        },
                        "displayName": "Bryan Cutler",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2020-04-27T19:04:33.675+0000",
                    "updated": "2020-04-27T19:04:33.675+0000"
                }
            ],
            "maxResults": 5,
            "total": 5,
            "startAt": 0
        },
        "customfield_12311820": "0|z0an3c:",
        "customfield_12314139": null
    }
}