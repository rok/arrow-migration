{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13450857",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13450857",
    "key": "ARROW-16857",
    "fields": {
        "parent": {
            "id": "13450853",
            "key": "ARROW-16854",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/13450853",
            "fields": {
                "summary": "[C++] Add RoundTrip to Relations",
                "status": {
                    "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                    "description": "The issue is open and ready for the assignee to start work on it.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                    "name": "Open",
                    "id": "1",
                    "statusCategory": {
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                        "id": 2,
                        "key": "new",
                        "colorName": "blue-gray",
                        "name": "To Do"
                    }
                },
                "priority": {
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                    "name": "Major",
                    "id": "3"
                },
                "issuetype": {
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                    "id": "4",
                    "description": "An improvement or enhancement to an existing feature or task.",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                    "name": "Improvement",
                    "subtask": false,
                    "avatarId": 21140
                }
            }
        },
        "fixVersions": [],
        "resolution": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available",
            "query-engine",
            "substrait",
            "substrait-roundtrip"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=vibhatha",
            "name": "vibhatha",
            "key": "vibhatha",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Vibhatha Lakmal Abeykoon",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/3",
            "description": "This issue is being actively worked on at the moment by the assignee.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/inprogress.png",
            "name": "In Progress",
            "id": "3",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/4",
                "id": 4,
                "key": "indeterminate",
                "colorName": "yellow",
                "name": "In Progress"
            }
        },
        "components": [],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=vibhatha",
            "name": "vibhatha",
            "key": "vibhatha",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Vibhatha Lakmal Abeykoon",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=vibhatha",
            "name": "vibhatha",
            "key": "vibhatha",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Vibhatha Lakmal Abeykoon",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 17400,
            "total": 17400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 17400,
            "total": 17400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-16857/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 29,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13450857/worklog/785535",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vibhatha opened a new pull request, #13448:\nURL: https://github.com/apache/arrow/pull/13448\n\n   ### **DO NOT REVIEW TILL ARROW-16855 IS MERGED**\r\n   This PR includes the Project relation `ToProto` functionality. But this PR depends on ARROW-16855 so please do not review until it is merged.\n\n\n",
                    "created": "2022-06-28T10:27:32.048+0000",
                    "updated": "2022-06-28T10:27:32.048+0000",
                    "started": "2022-06-28T10:27:32.048+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "785535",
                    "issueId": "13450857"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13450857/worklog/785538",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13448:\nURL: https://github.com/apache/arrow/pull/13448#issuecomment-1168540295\n\n   https://issues.apache.org/jira/browse/ARROW-16857\n\n\n",
                    "created": "2022-06-28T10:28:04.492+0000",
                    "updated": "2022-06-28T10:28:04.492+0000",
                    "started": "2022-06-28T10:28:04.492+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "785538",
                    "issueId": "13450857"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13450857/worklog/785539",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13448:\nURL: https://github.com/apache/arrow/pull/13448#issuecomment-1168540341\n\n   :warning: Ticket **has no components in JIRA**, make sure you assign one.\n\n\n",
                    "created": "2022-06-28T10:28:06.581+0000",
                    "updated": "2022-06-28T10:28:06.581+0000",
                    "started": "2022-06-28T10:28:06.581+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "785539",
                    "issueId": "13450857"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13450857/worklog/785540",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13448:\nURL: https://github.com/apache/arrow/pull/13448#issuecomment-1168540368\n\n   :warning: Ticket **has not been started in JIRA**, please click 'Start Progress'.\n\n\n",
                    "created": "2022-06-28T10:28:08.116+0000",
                    "updated": "2022-06-28T10:28:08.116+0000",
                    "started": "2022-06-28T10:28:08.115+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "785540",
                    "issueId": "13450857"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13450857/worklog/785628",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vibhatha commented on code in PR #13448:\nURL: https://github.com/apache/arrow/pull/13448#discussion_r908578398\n\n\n##########\ncpp/src/arrow/compute/exec/exec_plan.cc:\n##########\n@@ -85,11 +85,9 @@ struct ExecPlanImpl : public ExecPlan {\n #ifdef ARROW_WITH_OPENTELEMETRY\n     if (HasMetadata()) {\n       auto pairs = metadata().get()->sorted_pairs();\n-      opentelemetry::nostd::shared_ptr<opentelemetry::trace::Span> span =\n-          ::arrow::internal::tracing::UnwrapSpan(span_.details.get());\n       std::for_each(std::begin(pairs), std::end(pairs),\n-                    [span](std::pair<std::string, std::string> const& pair) {\n-                      span->SetAttribute(pair.first, pair.second);\n+                    [this](std::pair<std::string, std::string> const& pair) {\n+                      span_.Get().span->SetAttribute(pair.first, pair.second);\n                     });\n     }\n #endif\n\nReview Comment:\n   **TODO**: this is a typo fix this. \n\n\n\n",
                    "created": "2022-06-28T14:48:01.093+0000",
                    "updated": "2022-06-28T14:48:01.093+0000",
                    "started": "2022-06-28T14:48:01.092+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "785628",
                    "issueId": "13450857"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13450857/worklog/808630",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vibhatha opened a new pull request, #14118:\nURL: https://github.com/apache/arrow/pull/14118\n\n   This PR contains an extension to the roundtrip test support for Acero-Substrait. In this extension, the Project relation roundtrip integration and tests are added.\n\n\n",
                    "created": "2022-09-14T10:38:08.057+0000",
                    "updated": "2022-09-14T10:38:08.057+0000",
                    "started": "2022-09-14T10:38:08.056+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "808630",
                    "issueId": "13450857"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13450857/worklog/808631",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vibhatha commented on PR #13448:\nURL: https://github.com/apache/arrow/pull/13448#issuecomment-1246575913\n\n   Closing this as the work is replaced by https://github.com/apache/arrow/pull/14118\n\n\n",
                    "created": "2022-09-14T10:39:05.628+0000",
                    "updated": "2022-09-14T10:39:05.628+0000",
                    "started": "2022-09-14T10:39:05.627+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "808631",
                    "issueId": "13450857"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13450857/worklog/808632",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vibhatha closed pull request #13448: ARROW-16857: [C++] Adding Project Relation ToProto\nURL: https://github.com/apache/arrow/pull/13448\n\n\n",
                    "created": "2022-09-14T10:39:13.242+0000",
                    "updated": "2022-09-14T10:39:13.242+0000",
                    "started": "2022-09-14T10:39:13.241+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "808632",
                    "issueId": "13450857"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13450857/worklog/808633",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vibhatha commented on PR #14118:\nURL: https://github.com/apache/arrow/pull/14118#issuecomment-1246578711\n\n   This PR was opened after closing: https://github.com/apache/arrow/pull/13448\r\n   \r\n   \n\n\n",
                    "created": "2022-09-14T10:41:43.574+0000",
                    "updated": "2022-09-14T10:41:43.574+0000",
                    "started": "2022-09-14T10:41:43.574+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "808633",
                    "issueId": "13450857"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13450857/worklog/808634",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #14118:\nURL: https://github.com/apache/arrow/pull/14118#issuecomment-1246580259\n\n   https://issues.apache.org/jira/browse/ARROW-16857\n\n\n",
                    "created": "2022-09-14T10:43:05.534+0000",
                    "updated": "2022-09-14T10:43:05.534+0000",
                    "started": "2022-09-14T10:43:05.534+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "808634",
                    "issueId": "13450857"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13450857/worklog/808635",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #14118:\nURL: https://github.com/apache/arrow/pull/14118#issuecomment-1246580301\n\n   :warning: Ticket **has no components in JIRA**, make sure you assign one.\n\n\n",
                    "created": "2022-09-14T10:43:07.281+0000",
                    "updated": "2022-09-14T10:43:07.281+0000",
                    "started": "2022-09-14T10:43:07.280+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "808635",
                    "issueId": "13450857"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13450857/worklog/808639",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vibhatha commented on code in PR #14118:\nURL: https://github.com/apache/arrow/pull/14118#discussion_r970643663\n\n\n##########\ncpp/src/arrow/engine/substrait/serde_test.cc:\n##########\n@@ -97,6 +97,78 @@ Result<std::shared_ptr<Table>> GetTableFromPlan(\n   return arrow::Table::FromRecordBatchReader(sink_reader.get());\n }\n \n+void AssertScanRelation(const compute::Declaration& output_scan,\n+                        const std::shared_ptr<dataset::Dataset>& expected_dataset,\n+                        const std::shared_ptr<Schema> schema) {\n+  const auto& dataset_opts =\n+      checked_cast<const dataset::ScanNodeOptions&>(*(output_scan.options));\n+  const auto& output_ds = dataset_opts.dataset;\n+  ASSERT_TRUE(output_ds->schema()->Equals(*schema));\n+  ASSERT_OK_AND_ASSIGN(auto output_frgs, output_ds->GetFragments());\n+  ASSERT_OK_AND_ASSIGN(auto expected_frgs, expected_dataset->GetFragments());\n+\n+  auto output_frg_vec = IteratorToVector(std::move(output_frgs));\n+  auto expected_frg_vec = IteratorToVector(std::move(expected_frgs));\n+  ASSERT_EQ(expected_frg_vec.size(), output_frg_vec.size());\n+  int64_t idx = 0;\n+  for (auto fragment : expected_frg_vec) {\n+    const auto* l_frag = checked_cast<const dataset::FileFragment*>(fragment.get());\n+    const auto* r_frag =\n+        checked_cast<const dataset::FileFragment*>(output_frg_vec[idx++].get());\n+    ASSERT_TRUE(l_frag->Equals(*r_frag));\n+  }\n+}\n+\n+void AssertExpressionCall(const std::shared_ptr<Schema> schema,\n+                          const compute::Expression output_expr,\n+                          const compute::Expression& expected_expr) {\n+  if (auto* out_call = output_expr.call()) {\n+    if (auto* exp_call = expected_expr.call()) {\n+      ASSERT_EQ(out_call->function_name, exp_call->function_name);\n+      auto out_args = out_call->arguments;\n+      auto exp_args = exp_call->arguments;\n+      ASSERT_EQ(out_args.size(), exp_args.size());\n+      int exp_id = 0;\n+      for (const auto& arg : exp_args) {\n+        auto lhs = out_args[exp_id++].field_ref()->field_path()->indices()[0];\n\nReview Comment:\n   @westonpace should we make this part more generic?\n\n\n\n",
                    "created": "2022-09-14T10:46:30.269+0000",
                    "updated": "2022-09-14T10:46:30.269+0000",
                    "started": "2022-09-14T10:46:30.269+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "808639",
                    "issueId": "13450857"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13450857/worklog/808654",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vibhatha commented on code in PR #14118:\nURL: https://github.com/apache/arrow/pull/14118#discussion_r970682427\n\n\n##########\ncpp/src/arrow/engine/substrait/serde_test.cc:\n##########\n@@ -97,6 +97,78 @@ Result<std::shared_ptr<Table>> GetTableFromPlan(\n   return arrow::Table::FromRecordBatchReader(sink_reader.get());\n }\n \n+void AssertScanRelation(const compute::Declaration& output_scan,\n+                        const std::shared_ptr<dataset::Dataset>& expected_dataset,\n+                        const std::shared_ptr<Schema> schema) {\n+  const auto& dataset_opts =\n+      checked_cast<const dataset::ScanNodeOptions&>(*(output_scan.options));\n+  const auto& output_ds = dataset_opts.dataset;\n+  ASSERT_TRUE(output_ds->schema()->Equals(*schema));\n+  ASSERT_OK_AND_ASSIGN(auto output_frgs, output_ds->GetFragments());\n+  ASSERT_OK_AND_ASSIGN(auto expected_frgs, expected_dataset->GetFragments());\n+\n+  auto output_frg_vec = IteratorToVector(std::move(output_frgs));\n+  auto expected_frg_vec = IteratorToVector(std::move(expected_frgs));\n+  ASSERT_EQ(expected_frg_vec.size(), output_frg_vec.size());\n+  int64_t idx = 0;\n+  for (auto fragment : expected_frg_vec) {\n+    const auto* l_frag = checked_cast<const dataset::FileFragment*>(fragment.get());\n+    const auto* r_frag =\n+        checked_cast<const dataset::FileFragment*>(output_frg_vec[idx++].get());\n+    ASSERT_TRUE(l_frag->Equals(*r_frag));\n+  }\n+}\n+\n+void AssertExpressionCall(const std::shared_ptr<Schema> schema,\n+                          const compute::Expression output_expr,\n+                          const compute::Expression& expected_expr) {\n+  if (auto* out_call = output_expr.call()) {\n+    if (auto* exp_call = expected_expr.call()) {\n+      ASSERT_EQ(out_call->function_name, exp_call->function_name);\n+      auto out_args = out_call->arguments;\n+      auto exp_args = exp_call->arguments;\n+      ASSERT_EQ(out_args.size(), exp_args.size());\n+      int exp_id = 0;\n+      for (const auto& arg : exp_args) {\n+        auto lhs = out_args[exp_id++].field_ref()->field_path()->indices()[0];\n+        ASSERT_EQ(schema->field_names()[lhs], *(arg.field_ref()->name()));\n+      }\n+    }\n+  }\n+}\n+\n+void AssertFilterRelation(const compute::Declaration& output_filter,\n+                          const std::string& filter_func_name,\n+                          const compute::Expression& exp_filter_expr,\n+                          const std::shared_ptr<Schema>& schema) {\n+  const auto& filter_opts =\n+      checked_cast<const compute::FilterNodeOptions&>(*(output_filter.options));\n+  auto out_filter_expr = filter_opts.filter_expression;\n+  AssertExpressionCall(schema, out_filter_expr, exp_filter_expr);\n+}\n+\n+void AssertProjectRelation(const compute::Declaration& output_projection,\n+                           const std::vector<compute::Expression>& exp_expressions,\n+                           const std::shared_ptr<Schema>& schema) {\n+  const auto& project_opts =\n+      checked_cast<const compute::ProjectNodeOptions&>(*(output_projection.options));\n+  auto out_expressions = project_opts.expressions;\n+  int expr_id = 0;\n+  ASSERT_EQ(out_expressions.size(), exp_expressions.size());\n+  for (const auto& out_expr : out_expressions) {\n+    AssertExpressionCall(schema, out_expr, exp_expressions[expr_id++]);\n+  }\n+}\n+\n+void AssertPlanExecutionResult(const std::shared_ptr<Table> expected_table,\n\nReview Comment:\n   Should we keep this method or just copy and paste the following lines each test case? \r\n   Note: I created this one in case of adding additional options for asserting results.\n\n\n\n",
                    "created": "2022-09-14T11:28:58.276+0000",
                    "updated": "2022-09-14T11:28:58.276+0000",
                    "started": "2022-09-14T11:28:58.276+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "808654",
                    "issueId": "13450857"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13450857/worklog/808655",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vibhatha commented on PR #14118:\nURL: https://github.com/apache/arrow/pull/14118#issuecomment-1246628872\n\n   cc @westonpace please take a look. \n\n\n",
                    "created": "2022-09-14T11:29:24.586+0000",
                    "updated": "2022-09-14T11:29:24.586+0000",
                    "started": "2022-09-14T11:29:24.586+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "808655",
                    "issueId": "13450857"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13450857/worklog/808970",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on code in PR #14118:\nURL: https://github.com/apache/arrow/pull/14118#discussion_r971560947\n\n\n##########\ncpp/src/arrow/engine/substrait/serde_test.cc:\n##########\n@@ -97,6 +97,78 @@ Result<std::shared_ptr<Table>> GetTableFromPlan(\n   return arrow::Table::FromRecordBatchReader(sink_reader.get());\n }\n \n+void AssertScanRelation(const compute::Declaration& output_scan,\n+                        const std::shared_ptr<dataset::Dataset>& expected_dataset,\n+                        const std::shared_ptr<Schema> schema) {\n+  const auto& dataset_opts =\n+      checked_cast<const dataset::ScanNodeOptions&>(*(output_scan.options));\n+  const auto& output_ds = dataset_opts.dataset;\n+  ASSERT_TRUE(output_ds->schema()->Equals(*schema));\n+  ASSERT_OK_AND_ASSIGN(auto output_frgs, output_ds->GetFragments());\n+  ASSERT_OK_AND_ASSIGN(auto expected_frgs, expected_dataset->GetFragments());\n+\n+  auto output_frg_vec = IteratorToVector(std::move(output_frgs));\n+  auto expected_frg_vec = IteratorToVector(std::move(expected_frgs));\n+  ASSERT_EQ(expected_frg_vec.size(), output_frg_vec.size());\n+  int64_t idx = 0;\n+  for (auto fragment : expected_frg_vec) {\n+    const auto* l_frag = checked_cast<const dataset::FileFragment*>(fragment.get());\n+    const auto* r_frag =\n+        checked_cast<const dataset::FileFragment*>(output_frg_vec[idx++].get());\n+    ASSERT_TRUE(l_frag->Equals(*r_frag));\n+  }\n+}\n+\n+void AssertExpressionCall(const std::shared_ptr<Schema> schema,\n+                          const compute::Expression output_expr,\n+                          const compute::Expression& expected_expr) {\n+  if (auto* out_call = output_expr.call()) {\n+    if (auto* exp_call = expected_expr.call()) {\n+      ASSERT_EQ(out_call->function_name, exp_call->function_name);\n+      auto out_args = out_call->arguments;\n+      auto exp_args = exp_call->arguments;\n+      ASSERT_EQ(out_args.size(), exp_args.size());\n+      int exp_id = 0;\n+      for (const auto& arg : exp_args) {\n+        auto lhs = out_args[exp_id++].field_ref()->field_path()->indices()[0];\n\nReview Comment:\n   Why not use `Expression::Equals`?\n\n\n\n",
                    "created": "2022-09-15T06:06:55.690+0000",
                    "updated": "2022-09-15T06:06:55.690+0000",
                    "started": "2022-09-15T06:06:55.689+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "808970",
                    "issueId": "13450857"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13450857/worklog/808971",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on code in PR #14118:\nURL: https://github.com/apache/arrow/pull/14118#discussion_r971562107\n\n\n##########\ncpp/src/arrow/engine/substrait/serde_test.cc:\n##########\n@@ -97,6 +97,78 @@ Result<std::shared_ptr<Table>> GetTableFromPlan(\n   return arrow::Table::FromRecordBatchReader(sink_reader.get());\n }\n \n+void AssertScanRelation(const compute::Declaration& output_scan,\n+                        const std::shared_ptr<dataset::Dataset>& expected_dataset,\n+                        const std::shared_ptr<Schema> schema) {\n+  const auto& dataset_opts =\n+      checked_cast<const dataset::ScanNodeOptions&>(*(output_scan.options));\n+  const auto& output_ds = dataset_opts.dataset;\n+  ASSERT_TRUE(output_ds->schema()->Equals(*schema));\n+  ASSERT_OK_AND_ASSIGN(auto output_frgs, output_ds->GetFragments());\n+  ASSERT_OK_AND_ASSIGN(auto expected_frgs, expected_dataset->GetFragments());\n+\n+  auto output_frg_vec = IteratorToVector(std::move(output_frgs));\n+  auto expected_frg_vec = IteratorToVector(std::move(expected_frgs));\n+  ASSERT_EQ(expected_frg_vec.size(), output_frg_vec.size());\n+  int64_t idx = 0;\n+  for (auto fragment : expected_frg_vec) {\n+    const auto* l_frag = checked_cast<const dataset::FileFragment*>(fragment.get());\n+    const auto* r_frag =\n+        checked_cast<const dataset::FileFragment*>(output_frg_vec[idx++].get());\n+    ASSERT_TRUE(l_frag->Equals(*r_frag));\n+  }\n+}\n+\n+void AssertExpressionCall(const std::shared_ptr<Schema> schema,\n+                          const compute::Expression output_expr,\n+                          const compute::Expression& expected_expr) {\n+  if (auto* out_call = output_expr.call()) {\n+    if (auto* exp_call = expected_expr.call()) {\n+      ASSERT_EQ(out_call->function_name, exp_call->function_name);\n+      auto out_args = out_call->arguments;\n+      auto exp_args = exp_call->arguments;\n+      ASSERT_EQ(out_args.size(), exp_args.size());\n+      int exp_id = 0;\n+      for (const auto& arg : exp_args) {\n+        auto lhs = out_args[exp_id++].field_ref()->field_path()->indices()[0];\n+        ASSERT_EQ(schema->field_names()[lhs], *(arg.field_ref()->name()));\n+      }\n+    }\n+  }\n+}\n+\n+void AssertFilterRelation(const compute::Declaration& output_filter,\n+                          const std::string& filter_func_name,\n+                          const compute::Expression& exp_filter_expr,\n+                          const std::shared_ptr<Schema>& schema) {\n+  const auto& filter_opts =\n+      checked_cast<const compute::FilterNodeOptions&>(*(output_filter.options));\n+  auto out_filter_expr = filter_opts.filter_expression;\n+  AssertExpressionCall(schema, out_filter_expr, exp_filter_expr);\n+}\n+\n+void AssertProjectRelation(const compute::Declaration& output_projection,\n+                           const std::vector<compute::Expression>& exp_expressions,\n+                           const std::shared_ptr<Schema>& schema) {\n+  const auto& project_opts =\n+      checked_cast<const compute::ProjectNodeOptions&>(*(output_projection.options));\n+  auto out_expressions = project_opts.expressions;\n+  int expr_id = 0;\n+  ASSERT_EQ(out_expressions.size(), exp_expressions.size());\n+  for (const auto& out_expr : out_expressions) {\n+    AssertExpressionCall(schema, out_expr, exp_expressions[expr_id++]);\n+  }\n+}\n+\n+void AssertPlanExecutionResult(const std::shared_ptr<Table> expected_table,\n\nReview Comment:\n   I think the method is fine.  Is the concern just that it is a two-line method?\n\n\n\n",
                    "created": "2022-09-15T06:09:05.928+0000",
                    "updated": "2022-09-15T06:09:05.928+0000",
                    "started": "2022-09-15T06:09:05.927+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "808971",
                    "issueId": "13450857"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13450857/worklog/808972",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on code in PR #14118:\nURL: https://github.com/apache/arrow/pull/14118#discussion_r971562543\n\n\n##########\ncpp/src/arrow/engine/substrait/serde_test.cc:\n##########\n@@ -97,6 +97,78 @@ Result<std::shared_ptr<Table>> GetTableFromPlan(\n   return arrow::Table::FromRecordBatchReader(sink_reader.get());\n }\n \n+void AssertScanRelation(const compute::Declaration& output_scan,\n+                        const std::shared_ptr<dataset::Dataset>& expected_dataset,\n+                        const std::shared_ptr<Schema> schema) {\n+  const auto& dataset_opts =\n+      checked_cast<const dataset::ScanNodeOptions&>(*(output_scan.options));\n+  const auto& output_ds = dataset_opts.dataset;\n+  ASSERT_TRUE(output_ds->schema()->Equals(*schema));\n+  ASSERT_OK_AND_ASSIGN(auto output_frgs, output_ds->GetFragments());\n+  ASSERT_OK_AND_ASSIGN(auto expected_frgs, expected_dataset->GetFragments());\n+\n+  auto output_frg_vec = IteratorToVector(std::move(output_frgs));\n+  auto expected_frg_vec = IteratorToVector(std::move(expected_frgs));\n+  ASSERT_EQ(expected_frg_vec.size(), output_frg_vec.size());\n+  int64_t idx = 0;\n+  for (auto fragment : expected_frg_vec) {\n+    const auto* l_frag = checked_cast<const dataset::FileFragment*>(fragment.get());\n+    const auto* r_frag =\n+        checked_cast<const dataset::FileFragment*>(output_frg_vec[idx++].get());\n+    ASSERT_TRUE(l_frag->Equals(*r_frag));\n+  }\n+}\n+\n+void AssertExpressionCall(const std::shared_ptr<Schema> schema,\n+                          const compute::Expression output_expr,\n+                          const compute::Expression& expected_expr) {\n+  if (auto* out_call = output_expr.call()) {\n+    if (auto* exp_call = expected_expr.call()) {\n\nReview Comment:\n   These `if`'s have no else.  If you always expect this to be true then just do something like...\r\n   \r\n   ```\r\n   auto* out_call = output_expr.call();\r\n   ASSERT_NE(out_call, nullptr);\r\n   ```\r\n   \n\n\n\n",
                    "created": "2022-09-15T06:09:56.024+0000",
                    "updated": "2022-09-15T06:09:56.024+0000",
                    "started": "2022-09-15T06:09:56.024+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "808972",
                    "issueId": "13450857"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13450857/worklog/808973",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on code in PR #14118:\nURL: https://github.com/apache/arrow/pull/14118#discussion_r971563214\n\n\n##########\ncpp/src/arrow/engine/substrait/serde_test.cc:\n##########\n@@ -97,6 +97,78 @@ Result<std::shared_ptr<Table>> GetTableFromPlan(\n   return arrow::Table::FromRecordBatchReader(sink_reader.get());\n }\n \n+void AssertScanRelation(const compute::Declaration& output_scan,\n+                        const std::shared_ptr<dataset::Dataset>& expected_dataset,\n+                        const std::shared_ptr<Schema> schema) {\n+  const auto& dataset_opts =\n+      checked_cast<const dataset::ScanNodeOptions&>(*(output_scan.options));\n+  const auto& output_ds = dataset_opts.dataset;\n+  ASSERT_TRUE(output_ds->schema()->Equals(*schema));\n+  ASSERT_OK_AND_ASSIGN(auto output_frgs, output_ds->GetFragments());\n+  ASSERT_OK_AND_ASSIGN(auto expected_frgs, expected_dataset->GetFragments());\n+\n+  auto output_frg_vec = IteratorToVector(std::move(output_frgs));\n+  auto expected_frg_vec = IteratorToVector(std::move(expected_frgs));\n+  ASSERT_EQ(expected_frg_vec.size(), output_frg_vec.size());\n+  int64_t idx = 0;\n+  for (auto fragment : expected_frg_vec) {\n+    const auto* l_frag = checked_cast<const dataset::FileFragment*>(fragment.get());\n+    const auto* r_frag =\n+        checked_cast<const dataset::FileFragment*>(output_frg_vec[idx++].get());\n+    ASSERT_TRUE(l_frag->Equals(*r_frag));\n+  }\n+}\n+\n+void AssertExpressionCall(const std::shared_ptr<Schema> schema,\n+                          const compute::Expression output_expr,\n+                          const compute::Expression& expected_expr) {\n+  if (auto* out_call = output_expr.call()) {\n+    if (auto* exp_call = expected_expr.call()) {\n+      ASSERT_EQ(out_call->function_name, exp_call->function_name);\n+      auto out_args = out_call->arguments;\n+      auto exp_args = exp_call->arguments;\n+      ASSERT_EQ(out_args.size(), exp_args.size());\n+      int exp_id = 0;\n+      for (const auto& arg : exp_args) {\n+        auto lhs = out_args[exp_id++].field_ref()->field_path()->indices()[0];\n+        ASSERT_EQ(schema->field_names()[lhs], *(arg.field_ref()->name()));\n+      }\n+    }\n+  }\n+}\n+\n+void AssertFilterRelation(const compute::Declaration& output_filter,\n+                          const std::string& filter_func_name,\n+                          const compute::Expression& exp_filter_expr,\n+                          const std::shared_ptr<Schema>& schema) {\n+  const auto& filter_opts =\n+      checked_cast<const compute::FilterNodeOptions&>(*(output_filter.options));\n+  auto out_filter_expr = filter_opts.filter_expression;\n+  AssertExpressionCall(schema, out_filter_expr, exp_filter_expr);\n+}\n+\n+void AssertProjectRelation(const compute::Declaration& output_projection,\n+                           const std::vector<compute::Expression>& exp_expressions,\n+                           const std::shared_ptr<Schema>& schema) {\n+  const auto& project_opts =\n+      checked_cast<const compute::ProjectNodeOptions&>(*(output_projection.options));\n+  auto out_expressions = project_opts.expressions;\n+  int expr_id = 0;\n+  ASSERT_EQ(out_expressions.size(), exp_expressions.size());\n+  for (const auto& out_expr : out_expressions) {\n+    AssertExpressionCall(schema, out_expr, exp_expressions[expr_id++]);\n+  }\n+}\n+\n+void AssertPlanExecutionResult(const std::shared_ptr<Table> expected_table,\n+                               const compute::Declaration& source_declaration,\n+                               const std::shared_ptr<Schema>& schema,\n+                               compute::ExecContext& exec_context) {\n+  ASSERT_OK_AND_ASSIGN(auto output_table,\n+                       GetTableFromPlan(source_declaration, exec_context, schema));\n+  ASSERT_TRUE(expected_table->Equals(*output_table));\n\nReview Comment:\n   Better to use `AssertTablesEqual` as it will provide better debugging output when the tables are not equal.\n\n\n\n",
                    "created": "2022-09-15T06:11:01.195+0000",
                    "updated": "2022-09-15T06:11:01.195+0000",
                    "started": "2022-09-15T06:11:01.195+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "808973",
                    "issueId": "13450857"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13450857/worklog/808982",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vibhatha commented on code in PR #14118:\nURL: https://github.com/apache/arrow/pull/14118#discussion_r971621309\n\n\n##########\ncpp/src/arrow/engine/substrait/serde_test.cc:\n##########\n@@ -97,6 +97,78 @@ Result<std::shared_ptr<Table>> GetTableFromPlan(\n   return arrow::Table::FromRecordBatchReader(sink_reader.get());\n }\n \n+void AssertScanRelation(const compute::Declaration& output_scan,\n+                        const std::shared_ptr<dataset::Dataset>& expected_dataset,\n+                        const std::shared_ptr<Schema> schema) {\n+  const auto& dataset_opts =\n+      checked_cast<const dataset::ScanNodeOptions&>(*(output_scan.options));\n+  const auto& output_ds = dataset_opts.dataset;\n+  ASSERT_TRUE(output_ds->schema()->Equals(*schema));\n+  ASSERT_OK_AND_ASSIGN(auto output_frgs, output_ds->GetFragments());\n+  ASSERT_OK_AND_ASSIGN(auto expected_frgs, expected_dataset->GetFragments());\n+\n+  auto output_frg_vec = IteratorToVector(std::move(output_frgs));\n+  auto expected_frg_vec = IteratorToVector(std::move(expected_frgs));\n+  ASSERT_EQ(expected_frg_vec.size(), output_frg_vec.size());\n+  int64_t idx = 0;\n+  for (auto fragment : expected_frg_vec) {\n+    const auto* l_frag = checked_cast<const dataset::FileFragment*>(fragment.get());\n+    const auto* r_frag =\n+        checked_cast<const dataset::FileFragment*>(output_frg_vec[idx++].get());\n+    ASSERT_TRUE(l_frag->Equals(*r_frag));\n+  }\n+}\n+\n+void AssertExpressionCall(const std::shared_ptr<Schema> schema,\n+                          const compute::Expression output_expr,\n+                          const compute::Expression& expected_expr) {\n+  if (auto* out_call = output_expr.call()) {\n+    if (auto* exp_call = expected_expr.call()) {\n+      ASSERT_EQ(out_call->function_name, exp_call->function_name);\n+      auto out_args = out_call->arguments;\n+      auto exp_args = exp_call->arguments;\n+      ASSERT_EQ(out_args.size(), exp_args.size());\n+      int exp_id = 0;\n+      for (const auto& arg : exp_args) {\n+        auto lhs = out_args[exp_id++].field_ref()->field_path()->indices()[0];\n+        ASSERT_EQ(schema->field_names()[lhs], *(arg.field_ref()->name()));\n+      }\n+    }\n+  }\n+}\n+\n+void AssertFilterRelation(const compute::Declaration& output_filter,\n+                          const std::string& filter_func_name,\n+                          const compute::Expression& exp_filter_expr,\n+                          const std::shared_ptr<Schema>& schema) {\n+  const auto& filter_opts =\n+      checked_cast<const compute::FilterNodeOptions&>(*(output_filter.options));\n+  auto out_filter_expr = filter_opts.filter_expression;\n+  AssertExpressionCall(schema, out_filter_expr, exp_filter_expr);\n+}\n+\n+void AssertProjectRelation(const compute::Declaration& output_projection,\n+                           const std::vector<compute::Expression>& exp_expressions,\n+                           const std::shared_ptr<Schema>& schema) {\n+  const auto& project_opts =\n+      checked_cast<const compute::ProjectNodeOptions&>(*(output_projection.options));\n+  auto out_expressions = project_opts.expressions;\n+  int expr_id = 0;\n+  ASSERT_EQ(out_expressions.size(), exp_expressions.size());\n+  for (const auto& out_expr : out_expressions) {\n+    AssertExpressionCall(schema, out_expr, exp_expressions[expr_id++]);\n+  }\n+}\n+\n+void AssertPlanExecutionResult(const std::shared_ptr<Table> expected_table,\n\nReview Comment:\n   Yes, just two lines for now.\n\n\n\n",
                    "created": "2022-09-15T07:24:09.171+0000",
                    "updated": "2022-09-15T07:24:09.171+0000",
                    "started": "2022-09-15T07:24:09.170+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "808982",
                    "issueId": "13450857"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13450857/worklog/809144",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vibhatha commented on code in PR #14118:\nURL: https://github.com/apache/arrow/pull/14118#discussion_r972130907\n\n\n##########\ncpp/src/arrow/engine/substrait/serde_test.cc:\n##########\n@@ -97,6 +97,78 @@ Result<std::shared_ptr<Table>> GetTableFromPlan(\n   return arrow::Table::FromRecordBatchReader(sink_reader.get());\n }\n \n+void AssertScanRelation(const compute::Declaration& output_scan,\n+                        const std::shared_ptr<dataset::Dataset>& expected_dataset,\n+                        const std::shared_ptr<Schema> schema) {\n+  const auto& dataset_opts =\n+      checked_cast<const dataset::ScanNodeOptions&>(*(output_scan.options));\n+  const auto& output_ds = dataset_opts.dataset;\n+  ASSERT_TRUE(output_ds->schema()->Equals(*schema));\n+  ASSERT_OK_AND_ASSIGN(auto output_frgs, output_ds->GetFragments());\n+  ASSERT_OK_AND_ASSIGN(auto expected_frgs, expected_dataset->GetFragments());\n+\n+  auto output_frg_vec = IteratorToVector(std::move(output_frgs));\n+  auto expected_frg_vec = IteratorToVector(std::move(expected_frgs));\n+  ASSERT_EQ(expected_frg_vec.size(), output_frg_vec.size());\n+  int64_t idx = 0;\n+  for (auto fragment : expected_frg_vec) {\n+    const auto* l_frag = checked_cast<const dataset::FileFragment*>(fragment.get());\n+    const auto* r_frag =\n+        checked_cast<const dataset::FileFragment*>(output_frg_vec[idx++].get());\n+    ASSERT_TRUE(l_frag->Equals(*r_frag));\n+  }\n+}\n+\n+void AssertExpressionCall(const std::shared_ptr<Schema> schema,\n+                          const compute::Expression output_expr,\n+                          const compute::Expression& expected_expr) {\n+  if (auto* out_call = output_expr.call()) {\n+    if (auto* exp_call = expected_expr.call()) {\n+      ASSERT_EQ(out_call->function_name, exp_call->function_name);\n+      auto out_args = out_call->arguments;\n+      auto exp_args = exp_call->arguments;\n+      ASSERT_EQ(out_args.size(), exp_args.size());\n+      int exp_id = 0;\n+      for (const auto& arg : exp_args) {\n+        auto lhs = out_args[exp_id++].field_ref()->field_path()->indices()[0];\n\nReview Comment:\n   One is a FieldPath and the other is not. So not sure if it can be directly compared\n\n\n\n",
                    "created": "2022-09-15T15:24:28.361+0000",
                    "updated": "2022-09-15T15:24:28.361+0000",
                    "started": "2022-09-15T15:24:28.360+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "809144",
                    "issueId": "13450857"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
            "id": "7",
            "description": "The sub-task of the issue",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
            "name": "Sub-task",
            "subtask": true,
            "avatarId": 21146
        },
        "timespent": 17400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@3aad3a9f[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@c801123[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4cf533cd[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@40f03a79[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7d95270c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1ef26f06[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7b7c5c4e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3a9e92aa[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6e677fb2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@6360a727[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7ae70929[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@3422df1d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 17400,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Sep 14 10:40:25 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": null,
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-16857/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2022-06-20T01:08:20.000+0000",
        "updated": "2022-09-26T12:22:52.000+0000",
        "timeoriginalestimate": null,
        "description": "Adding `ToProto` functionality for Project operator in Substrait. The resultant component is re-creating a `project` operator in ACERO via the received Substrait-relation.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "4h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 17400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Adding Project Relation ToProto",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13450857/comment/17604013",
                    "id": "17604013",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=vibhatha",
                        "name": "vibhatha",
                        "key": "vibhatha",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Vibhatha Lakmal Abeykoon",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "This ticket's work is up-to-date with Pull-request: [GitHub Pull Request #14118|https://github.com/apache/arrow/pull/14118]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=vibhatha",
                        "name": "vibhatha",
                        "key": "vibhatha",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Vibhatha Lakmal Abeykoon",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-09-14T10:40:15.736+0000",
                    "updated": "2022-09-14T10:40:15.736+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13450857/comment/17604014",
                    "id": "17604014",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=vibhatha",
                        "name": "vibhatha",
                        "key": "vibhatha",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Vibhatha Lakmal Abeykoon",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cc [~westonpace]\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=vibhatha",
                        "name": "vibhatha",
                        "key": "vibhatha",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Vibhatha Lakmal Abeykoon",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-09-14T10:40:25.594+0000",
                    "updated": "2022-09-14T10:40:25.594+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|z13dc8:",
        "customfield_12314139": null
    }
}