{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13441736",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13441736",
    "key": "ARROW-16329",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351550",
                "id": "12351550",
                "name": "9.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-08-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=zhztheplayer",
            "name": "zhztheplayer",
            "key": "zhztheplayer",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Hongze Zhang",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "aggregateprogress": {
            "progress": 19800,
            "total": 19800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 19800,
            "total": 19800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-16329/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 33,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13441736/worklog/775316",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13246:\nURL: https://github.com/apache/arrow/pull/13246#issuecomment-1139229639\n\n   https://issues.apache.org/jira/browse/ARROW-16329\n\n\n",
                    "created": "2022-05-27T02:50:26.992+0000",
                    "updated": "2022-05-27T02:50:26.992+0000",
                    "started": "2022-05-27T02:50:26.992+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "775316",
                    "issueId": "13441736"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13441736/worklog/775317",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13246:\nURL: https://github.com/apache/arrow/pull/13246#issuecomment-1139229645\n\n   :warning: Ticket **has not been started in JIRA**, please click 'Start Progress'.\n\n\n",
                    "created": "2022-05-27T02:50:28.973+0000",
                    "updated": "2022-05-27T02:50:28.973+0000",
                    "started": "2022-05-27T02:50:28.972+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "775317",
                    "issueId": "13441736"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13441736/worklog/775980",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13246:\nURL: https://github.com/apache/arrow/pull/13246#discussion_r884967137\n\n\n##########\ncpp/src/jni/dataset/jni_util.cc:\n##########\n@@ -167,9 +167,16 @@ ReservationListenableMemoryPool::~ReservationListenableMemoryPool() {}\n \n Status CheckException(JNIEnv* env) {\n   if (env->ExceptionCheck()) {\n-    env->ExceptionDescribe();\n+    jthrowable t = env->ExceptionOccurred();\n     env->ExceptionClear();\n-    return Status::Invalid(\"Error during calling Java code from native code\");\n+    jclass describer_class =\n+        env->FindClass(\"org/apache/arrow/dataset/jni/JniExceptionDescriber\");\n+    jmethodID describe_method = env->GetStaticMethodID(\n+        describer_class, \"describe\", \"(Ljava/lang/Throwable;)Ljava/lang/String;\");\n+    std::string description = JStringToCString(\n+        env, (jstring)env->CallStaticObjectMethod(describer_class, describe_method, t));\n+    return Status::Invalid(\"Error during calling Java code from native code: \" +\n+                           description);\n\nReview Comment:\n   Hmm... I don't know what is possible exactly, but ideally we should:\r\n   1) map Java exception classes to specific C++ status codes (for example a `IOException` would map to `Status::IOError` while `InvalidTypeException` would map to `Status::TypeError`)\r\n   2) keep the Java exception object in a Java-specific `StatusDetail` subclass, just like we do [for Python exceptions](https://github.com/apache/arrow/blob/master/cpp/src/arrow/python/common.cc#L54-L139)\r\n   \r\n   cc @lwhite1 \n\n\n\n",
                    "created": "2022-05-30T16:12:38.277+0000",
                    "updated": "2022-05-30T16:12:38.277+0000",
                    "started": "2022-05-30T16:12:38.277+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "775980",
                    "issueId": "13441736"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13441736/worklog/775981",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13246:\nURL: https://github.com/apache/arrow/pull/13246#discussion_r884967137\n\n\n##########\ncpp/src/jni/dataset/jni_util.cc:\n##########\n@@ -167,9 +167,16 @@ ReservationListenableMemoryPool::~ReservationListenableMemoryPool() {}\n \n Status CheckException(JNIEnv* env) {\n   if (env->ExceptionCheck()) {\n-    env->ExceptionDescribe();\n+    jthrowable t = env->ExceptionOccurred();\n     env->ExceptionClear();\n-    return Status::Invalid(\"Error during calling Java code from native code\");\n+    jclass describer_class =\n+        env->FindClass(\"org/apache/arrow/dataset/jni/JniExceptionDescriber\");\n+    jmethodID describe_method = env->GetStaticMethodID(\n+        describer_class, \"describe\", \"(Ljava/lang/Throwable;)Ljava/lang/String;\");\n+    std::string description = JStringToCString(\n+        env, (jstring)env->CallStaticObjectMethod(describer_class, describe_method, t));\n+    return Status::Invalid(\"Error during calling Java code from native code: \" +\n+                           description);\n\nReview Comment:\n   Hmm... I don't know what is possible exactly, but ideally we should:\r\n   1) map Java exception classes to specific C++ status codes (for example a `IOException` would map to `Status::IOError` while `InvalidTypeException` would map to `Status::TypeError`)\r\n   2) keep the Java exception object in a Java-specific `StatusDetail` subclass, just like we do [for Python exceptions](https://github.com/apache/arrow/blob/01d8485d17adacbe75dac2a9b97c34dc28ca31f5/cpp/src/arrow/python/common.cc#L54-L139)\r\n   \r\n   cc @lwhite1 \n\n\n\n",
                    "created": "2022-05-30T16:13:03.294+0000",
                    "updated": "2022-05-30T16:13:03.294+0000",
                    "started": "2022-05-30T16:13:03.294+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "775981",
                    "issueId": "13441736"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13441736/worklog/775982",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13246:\nURL: https://github.com/apache/arrow/pull/13246#discussion_r884967137\n\n\n##########\ncpp/src/jni/dataset/jni_util.cc:\n##########\n@@ -167,9 +167,16 @@ ReservationListenableMemoryPool::~ReservationListenableMemoryPool() {}\n \n Status CheckException(JNIEnv* env) {\n   if (env->ExceptionCheck()) {\n-    env->ExceptionDescribe();\n+    jthrowable t = env->ExceptionOccurred();\n     env->ExceptionClear();\n-    return Status::Invalid(\"Error during calling Java code from native code\");\n+    jclass describer_class =\n+        env->FindClass(\"org/apache/arrow/dataset/jni/JniExceptionDescriber\");\n+    jmethodID describe_method = env->GetStaticMethodID(\n+        describer_class, \"describe\", \"(Ljava/lang/Throwable;)Ljava/lang/String;\");\n+    std::string description = JStringToCString(\n+        env, (jstring)env->CallStaticObjectMethod(describer_class, describe_method, t));\n+    return Status::Invalid(\"Error during calling Java code from native code: \" +\n+                           description);\n\nReview Comment:\n   Hmm... I don't know what is possible exactly, but ideally we should:\r\n   1) map Java exception classes to specific C++ status codes (for example `IOException` would map to `Status::IOError` while `InvalidTypeException` would map to `Status::TypeError`)\r\n   2) keep the Java exception object in a Java-specific `StatusDetail` subclass, just like we do [for Python exceptions](https://github.com/apache/arrow/blob/01d8485d17adacbe75dac2a9b97c34dc28ca31f5/cpp/src/arrow/python/common.cc#L54-L139)\r\n   \r\n   cc @lwhite1 \n\n\n\n",
                    "created": "2022-05-30T16:13:28.895+0000",
                    "updated": "2022-05-30T16:13:28.895+0000",
                    "started": "2022-05-30T16:13:28.895+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "775982",
                    "issueId": "13441736"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13441736/worklog/775983",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13246:\nURL: https://github.com/apache/arrow/pull/13246#discussion_r884967969\n\n\n##########\ncpp/src/jni/dataset/jni_util.cc:\n##########\n@@ -167,9 +167,16 @@ ReservationListenableMemoryPool::~ReservationListenableMemoryPool() {}\n \n Status CheckException(JNIEnv* env) {\n   if (env->ExceptionCheck()) {\n-    env->ExceptionDescribe();\n+    jthrowable t = env->ExceptionOccurred();\n     env->ExceptionClear();\n-    return Status::Invalid(\"Error during calling Java code from native code\");\n+    jclass describer_class =\n+        env->FindClass(\"org/apache/arrow/dataset/jni/JniExceptionDescriber\");\n+    jmethodID describe_method = env->GetStaticMethodID(\n+        describer_class, \"describe\", \"(Ljava/lang/Throwable;)Ljava/lang/String;\");\n+    std::string description = JStringToCString(\n+        env, (jstring)env->CallStaticObjectMethod(describer_class, describe_method, t));\n+    return Status::Invalid(\"Error during calling Java code from native code: \" +\n+                           description);\n\nReview Comment:\n   Also this helper function should be moved out of dataset-specific code to be reused generically in all JNI bindings.\n\n\n\n",
                    "created": "2022-05-30T16:14:13.348+0000",
                    "updated": "2022-05-30T16:14:13.348+0000",
                    "started": "2022-05-30T16:14:13.348+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "775983",
                    "issueId": "13441736"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13441736/worklog/776075",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zhztheplayer commented on code in PR #13246:\nURL: https://github.com/apache/arrow/pull/13246#discussion_r885151376\n\n\n##########\ncpp/src/jni/dataset/jni_util.cc:\n##########\n@@ -167,9 +167,16 @@ ReservationListenableMemoryPool::~ReservationListenableMemoryPool() {}\n \n Status CheckException(JNIEnv* env) {\n   if (env->ExceptionCheck()) {\n-    env->ExceptionDescribe();\n+    jthrowable t = env->ExceptionOccurred();\n     env->ExceptionClear();\n-    return Status::Invalid(\"Error during calling Java code from native code\");\n+    jclass describer_class =\n+        env->FindClass(\"org/apache/arrow/dataset/jni/JniExceptionDescriber\");\n+    jmethodID describe_method = env->GetStaticMethodID(\n+        describer_class, \"describe\", \"(Ljava/lang/Throwable;)Ljava/lang/String;\");\n+    std::string description = JStringToCString(\n+        env, (jstring)env->CallStaticObjectMethod(describer_class, describe_method, t));\n+    return Status::Invalid(\"Error during calling Java code from native code: \" +\n+                           description);\n\nReview Comment:\n   > Also this helper function should be moved out of dataset-specific code to be reused generically in all JNI bindings.\r\n   \r\n   Was considering doing the similar thing but maybe after we have a common code module for JNI stuffs? \n\n\n\n",
                    "created": "2022-05-31T02:16:34.769+0000",
                    "updated": "2022-05-31T02:16:34.769+0000",
                    "started": "2022-05-31T02:16:34.769+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "776075",
                    "issueId": "13441736"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13441736/worklog/776076",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zhztheplayer commented on code in PR #13246:\nURL: https://github.com/apache/arrow/pull/13246#discussion_r885151376\n\n\n##########\ncpp/src/jni/dataset/jni_util.cc:\n##########\n@@ -167,9 +167,16 @@ ReservationListenableMemoryPool::~ReservationListenableMemoryPool() {}\n \n Status CheckException(JNIEnv* env) {\n   if (env->ExceptionCheck()) {\n-    env->ExceptionDescribe();\n+    jthrowable t = env->ExceptionOccurred();\n     env->ExceptionClear();\n-    return Status::Invalid(\"Error during calling Java code from native code\");\n+    jclass describer_class =\n+        env->FindClass(\"org/apache/arrow/dataset/jni/JniExceptionDescriber\");\n+    jmethodID describe_method = env->GetStaticMethodID(\n+        describer_class, \"describe\", \"(Ljava/lang/Throwable;)Ljava/lang/String;\");\n+    std::string description = JStringToCString(\n+        env, (jstring)env->CallStaticObjectMethod(describer_class, describe_method, t));\n+    return Status::Invalid(\"Error during calling Java code from native code: \" +\n+                           description);\n\nReview Comment:\n   > Also this helper function should be moved out of dataset-specific code to be reused generically in all JNI bindings.\r\n   \r\n   Was considering doing the similar thing but maybe after we have a common code module for JNI stuffs? Which may require some redesign for other parts of JNI codes, orc, gandiva, plasma, etc.\n\n\n\n",
                    "created": "2022-05-31T02:21:50.349+0000",
                    "updated": "2022-05-31T02:21:50.349+0000",
                    "started": "2022-05-31T02:21:50.349+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "776076",
                    "issueId": "13441736"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13441736/worklog/776111",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13246:\nURL: https://github.com/apache/arrow/pull/13246#discussion_r885294891\n\n\n##########\ncpp/src/jni/dataset/jni_util.cc:\n##########\n@@ -167,9 +167,16 @@ ReservationListenableMemoryPool::~ReservationListenableMemoryPool() {}\n \n Status CheckException(JNIEnv* env) {\n   if (env->ExceptionCheck()) {\n-    env->ExceptionDescribe();\n+    jthrowable t = env->ExceptionOccurred();\n     env->ExceptionClear();\n-    return Status::Invalid(\"Error during calling Java code from native code\");\n+    jclass describer_class =\n+        env->FindClass(\"org/apache/arrow/dataset/jni/JniExceptionDescriber\");\n+    jmethodID describe_method = env->GetStaticMethodID(\n+        describer_class, \"describe\", \"(Ljava/lang/Throwable;)Ljava/lang/String;\");\n+    std::string description = JStringToCString(\n+        env, (jstring)env->CallStaticObjectMethod(describer_class, describe_method, t));\n+    return Status::Invalid(\"Error during calling Java code from native code: \" +\n+                           description);\n\nReview Comment:\n   If having a common module for JNI utilities is non-trivial, then can you open a JIRA for it?\r\n   \n\n\n\n",
                    "created": "2022-05-31T07:30:44.207+0000",
                    "updated": "2022-05-31T07:30:44.207+0000",
                    "started": "2022-05-31T07:30:44.207+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "776111",
                    "issueId": "13441736"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13441736/worklog/776185",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zhztheplayer commented on code in PR #13246:\nURL: https://github.com/apache/arrow/pull/13246#discussion_r885432355\n\n\n##########\ncpp/src/jni/dataset/jni_util.cc:\n##########\n@@ -167,9 +167,16 @@ ReservationListenableMemoryPool::~ReservationListenableMemoryPool() {}\n \n Status CheckException(JNIEnv* env) {\n   if (env->ExceptionCheck()) {\n-    env->ExceptionDescribe();\n+    jthrowable t = env->ExceptionOccurred();\n     env->ExceptionClear();\n-    return Status::Invalid(\"Error during calling Java code from native code\");\n+    jclass describer_class =\n+        env->FindClass(\"org/apache/arrow/dataset/jni/JniExceptionDescriber\");\n+    jmethodID describe_method = env->GetStaticMethodID(\n+        describer_class, \"describe\", \"(Ljava/lang/Throwable;)Ljava/lang/String;\");\n+    std::string description = JStringToCString(\n+        env, (jstring)env->CallStaticObjectMethod(describer_class, describe_method, t));\n+    return Status::Invalid(\"Error during calling Java code from native code: \" +\n+                           description);\n\nReview Comment:\n   @pitrou sure, I have opened a ticket\r\n   https://issues.apache.org/jira/browse/ARROW-16691\n\n\n\n",
                    "created": "2022-05-31T09:46:05.728+0000",
                    "updated": "2022-05-31T09:46:05.728+0000",
                    "started": "2022-05-31T09:46:05.727+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "776185",
                    "issueId": "13441736"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13441736/worklog/779012",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13246:\nURL: https://github.com/apache/arrow/pull/13246#discussion_r891115299\n\n\n##########\ncpp/src/jni/dataset/jni_util.cc:\n##########\n@@ -167,9 +167,16 @@ ReservationListenableMemoryPool::~ReservationListenableMemoryPool() {}\n \n Status CheckException(JNIEnv* env) {\n   if (env->ExceptionCheck()) {\n-    env->ExceptionDescribe();\n+    jthrowable t = env->ExceptionOccurred();\n     env->ExceptionClear();\n-    return Status::Invalid(\"Error during calling Java code from native code\");\n+    jclass describer_class =\n+        env->FindClass(\"org/apache/arrow/dataset/jni/JniExceptionDescriber\");\n+    jmethodID describe_method = env->GetStaticMethodID(\n+        describer_class, \"describe\", \"(Ljava/lang/Throwable;)Ljava/lang/String;\");\n+    std::string description = JStringToCString(\n+        env, (jstring)env->CallStaticObjectMethod(describer_class, describe_method, t));\n+    return Status::Invalid(\"Error during calling Java code from native code: \" +\n+                           description);\n\nReview Comment:\n   @zhztheplayer Do you want to address the other parts of the initial comment in this PR?\n\n\n\n",
                    "created": "2022-06-07T11:46:11.299+0000",
                    "updated": "2022-06-07T11:46:11.299+0000",
                    "started": "2022-06-07T11:46:11.299+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "779012",
                    "issueId": "13441736"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13441736/worklog/786548",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on PR #13246:\nURL: https://github.com/apache/arrow/pull/13246#issuecomment-1171155949\n\n   @lidavidm @lwhite1 Does either of you want to take this up?\n\n\n",
                    "created": "2022-06-30T12:26:16.377+0000",
                    "updated": "2022-06-30T12:26:16.377+0000",
                    "started": "2022-06-30T12:26:16.376+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "786548",
                    "issueId": "13441736"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13441736/worklog/787156",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on PR #13246:\nURL: https://github.com/apache/arrow/pull/13246#issuecomment-1172516358\n\n   I'm not going to have time. Since Larry is also working on reorganizing the JNI code anyways I'll leave it up to him whether/how to approach this\n\n\n",
                    "created": "2022-07-01T16:29:59.125+0000",
                    "updated": "2022-07-01T16:29:59.125+0000",
                    "started": "2022-07-01T16:29:59.125+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "787156",
                    "issueId": "13441736"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13441736/worklog/787326",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zhztheplayer commented on code in PR #13246:\nURL: https://github.com/apache/arrow/pull/13246#discussion_r912370357\n\n\n##########\ncpp/src/jni/dataset/jni_util.cc:\n##########\n@@ -167,9 +167,16 @@ ReservationListenableMemoryPool::~ReservationListenableMemoryPool() {}\n \n Status CheckException(JNIEnv* env) {\n   if (env->ExceptionCheck()) {\n-    env->ExceptionDescribe();\n+    jthrowable t = env->ExceptionOccurred();\n     env->ExceptionClear();\n-    return Status::Invalid(\"Error during calling Java code from native code\");\n+    jclass describer_class =\n+        env->FindClass(\"org/apache/arrow/dataset/jni/JniExceptionDescriber\");\n+    jmethodID describe_method = env->GetStaticMethodID(\n+        describer_class, \"describe\", \"(Ljava/lang/Throwable;)Ljava/lang/String;\");\n+    std::string description = JStringToCString(\n+        env, (jstring)env->CallStaticObjectMethod(describer_class, describe_method, t));\n+    return Status::Invalid(\"Error during calling Java code from native code: \" +\n+                           description);\n\nReview Comment:\n   Addressed. Thanks for suggestion.\n\n\n\n",
                    "created": "2022-07-02T14:53:42.026+0000",
                    "updated": "2022-07-02T14:53:42.026+0000",
                    "started": "2022-07-02T14:53:42.026+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "787326",
                    "issueId": "13441736"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13441736/worklog/787327",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zhztheplayer commented on code in PR #13246:\nURL: https://github.com/apache/arrow/pull/13246#discussion_r912370357\n\n\n##########\ncpp/src/jni/dataset/jni_util.cc:\n##########\n@@ -167,9 +167,16 @@ ReservationListenableMemoryPool::~ReservationListenableMemoryPool() {}\n \n Status CheckException(JNIEnv* env) {\n   if (env->ExceptionCheck()) {\n-    env->ExceptionDescribe();\n+    jthrowable t = env->ExceptionOccurred();\n     env->ExceptionClear();\n-    return Status::Invalid(\"Error during calling Java code from native code\");\n+    jclass describer_class =\n+        env->FindClass(\"org/apache/arrow/dataset/jni/JniExceptionDescriber\");\n+    jmethodID describe_method = env->GetStaticMethodID(\n+        describer_class, \"describe\", \"(Ljava/lang/Throwable;)Ljava/lang/String;\");\n+    std::string description = JStringToCString(\n+        env, (jstring)env->CallStaticObjectMethod(describer_class, describe_method, t));\n+    return Status::Invalid(\"Error during calling Java code from native code: \" +\n+                           description);\n\nReview Comment:\n   Addressed. Thanks for the suggestion.\n\n\n\n",
                    "created": "2022-07-02T14:54:01.823+0000",
                    "updated": "2022-07-02T14:54:01.823+0000",
                    "started": "2022-07-02T14:54:01.822+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "787327",
                    "issueId": "13441736"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13441736/worklog/787333",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zhztheplayer commented on PR #13246:\nURL: https://github.com/apache/arrow/pull/13246#issuecomment-1172923697\n\n   @pitrou @lidavidm I have updated the PR to address the early comments. Would you like to take a look again? Thanks.\n\n\n",
                    "created": "2022-07-02T16:24:59.559+0000",
                    "updated": "2022-07-02T16:24:59.559+0000",
                    "started": "2022-07-02T16:24:59.558+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "787333",
                    "issueId": "13441736"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13441736/worklog/787334",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zhztheplayer commented on code in PR #13246:\nURL: https://github.com/apache/arrow/pull/13246#discussion_r912370357\n\n\n##########\ncpp/src/jni/dataset/jni_util.cc:\n##########\n@@ -167,9 +167,16 @@ ReservationListenableMemoryPool::~ReservationListenableMemoryPool() {}\n \n Status CheckException(JNIEnv* env) {\n   if (env->ExceptionCheck()) {\n-    env->ExceptionDescribe();\n+    jthrowable t = env->ExceptionOccurred();\n     env->ExceptionClear();\n-    return Status::Invalid(\"Error during calling Java code from native code\");\n+    jclass describer_class =\n+        env->FindClass(\"org/apache/arrow/dataset/jni/JniExceptionDescriber\");\n+    jmethodID describe_method = env->GetStaticMethodID(\n+        describer_class, \"describe\", \"(Ljava/lang/Throwable;)Ljava/lang/String;\");\n+    std::string description = JStringToCString(\n+        env, (jstring)env->CallStaticObjectMethod(describer_class, describe_method, t));\n+    return Status::Invalid(\"Error during calling Java code from native code: \" +\n+                           description);\n\nReview Comment:\n   Addressed. Thanks for the suggestion.\n\n\n\n",
                    "created": "2022-07-02T16:25:30.229+0000",
                    "updated": "2022-07-02T16:25:30.229+0000",
                    "started": "2022-07-02T16:25:30.228+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "787334",
                    "issueId": "13441736"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13441736/worklog/787847",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on code in PR #13246:\nURL: https://github.com/apache/arrow/pull/13246#discussion_r913789581\n\n\n##########\njava/dataset/src/main/cpp/jni_util.cc:\n##########\n@@ -162,11 +165,104 @@ std::shared_ptr<ReservationListener> ReservationListenableMemoryPool::get_listen\n \n ReservationListenableMemoryPool::~ReservationListenableMemoryPool() {}\n \n+std::string Describe(JNIEnv* env, jthrowable t) {\n+  jclass describer_class =\n+      env->FindClass(\"org/apache/arrow/dataset/jni/JniExceptionDescriber\");\n+  jmethodID describe_method = env->GetStaticMethodID(\n+      describer_class, \"describe\", \"(Ljava/lang/Throwable;)Ljava/lang/String;\");\n+  std::string description = JStringToCString(\n+      env, (jstring)env->CallStaticObjectMethod(describer_class, describe_method, t));\n+  return description;\n+}\n+\n+arrow::Result<bool> IsErrorInstanceOf(JNIEnv* env, jthrowable t, std::string class_name) {\n+  jclass jclass = env->FindClass(class_name.c_str());\n+  if (jclass == nullptr) {\n+    return arrow::Status::Invalid(\"Class not found: \" + class_name);\n\nReview Comment:\n   Given the way this is used below, maybe this should be a `DCHECK(jclass) << ...;` or just return `false`?\n\n\n\n##########\njava/dataset/src/main/java/org/apache/arrow/dataset/jni/JniExceptionDescriber.java:\n##########\n@@ -0,0 +1,43 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.dataset.jni;\n+\n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n+\n+/**\n+ * For native code to invoke to convert a java/lang/Throwable to jstring.\n+ */\n+public class JniExceptionDescriber {\n\nReview Comment:\n   Does this need to be a public class?\n\n\n\n##########\njava/dataset/src/main/cpp/jni_util.cc:\n##########\n@@ -162,11 +165,104 @@ std::shared_ptr<ReservationListener> ReservationListenableMemoryPool::get_listen\n \n ReservationListenableMemoryPool::~ReservationListenableMemoryPool() {}\n \n+std::string Describe(JNIEnv* env, jthrowable t) {\n+  jclass describer_class =\n+      env->FindClass(\"org/apache/arrow/dataset/jni/JniExceptionDescriber\");\n+  jmethodID describe_method = env->GetStaticMethodID(\n+      describer_class, \"describe\", \"(Ljava/lang/Throwable;)Ljava/lang/String;\");\n+  std::string description = JStringToCString(\n+      env, (jstring)env->CallStaticObjectMethod(describer_class, describe_method, t));\n+  return description;\n+}\n+\n+arrow::Result<bool> IsErrorInstanceOf(JNIEnv* env, jthrowable t, std::string class_name) {\n+  jclass jclass = env->FindClass(class_name.c_str());\n+  if (jclass == nullptr) {\n+    return arrow::Status::Invalid(\"Class not found: \" + class_name);\n+  }\n+  return env->IsInstanceOf(t, jclass);\n+}\n+\n+arrow::StatusCode MapJavaError(JNIEnv* env, jthrowable t) {\n+  StatusCode code;\n+  if (IsErrorInstanceOf(env, t, \"org/apache/arrow/memory/OutOfMemoryException\") ==\n+      JNI_TRUE) {\n+    code = StatusCode::OutOfMemory;\n+  } else if (IsErrorInstanceOf(env, t, \"java/lang/UnsupportedOperationException\") ==\n+             JNI_TRUE) {\n+    code = StatusCode::NotImplemented;\n+  } else if (IsErrorInstanceOf(env, t, \"java/io/NotSerializableException\") == JNI_TRUE) {\n+    code = StatusCode::SerializationError;\n+  } else if (IsErrorInstanceOf(env, t, \"java/io/IOException\") == JNI_TRUE) {\n+    code = StatusCode::IOError;\n+  } else if (IsErrorInstanceOf(env, t, \"java/lang/IllegalArgumentException\") ==\n+             JNI_TRUE) {\n+    code = StatusCode::Invalid;\n+  } else if (IsErrorInstanceOf(env, t, \"java/lang/IllegalStateException\") == JNI_TRUE) {\n+    code = StatusCode::Invalid;\n+  } else {\n+    code = StatusCode::UnknownError;\n+  }\n+  return code;\n+}\n+\n+JNIEnv* GetEnvOrAttach(JavaVM* vm) {\n+  JNIEnv* env;\n+  int getEnvStat = vm->GetEnv(reinterpret_cast<void**>(&env), JNI_VERSION);\n+  if (getEnvStat == JNI_EDETACHED) {\n+    // Reattach current thread to JVM\n+    getEnvStat = vm->AttachCurrentThread(reinterpret_cast<void**>(&env), nullptr);\n+    if (getEnvStat != JNI_OK) {\n+      std::cout << \"Failed to attach current thread to JVM. \" << std::endl;\n\nReview Comment:\n   ARROW_LOG instead of std::cout?\n\n\n\n##########\njava/dataset/src/main/cpp/jni_util.cc:\n##########\n@@ -17,6 +17,7 @@\n \n #include \"./jni_util.h\"\n\nReview Comment:\n   ```suggestion\r\n   #include \"jni_util.h\"\r\n   ```\n\n\n\n##########\njava/dataset/src/main/cpp/jni_wrapper.cc:\n##########\n@@ -17,14 +17,14 @@\n \n #include <mutex>\n \n+#include \"./jni_util.h\"\n\nReview Comment:\n   ```suggestion\r\n   #include \"jni_util.h\"\r\n   ```\r\n   since Kou just fixed this\n\n\n\n",
                    "created": "2022-07-05T13:22:17.149+0000",
                    "updated": "2022-07-05T13:22:17.149+0000",
                    "started": "2022-07-05T13:22:17.149+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "787847",
                    "issueId": "13441736"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13441736/worklog/787860",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zhztheplayer commented on code in PR #13246:\nURL: https://github.com/apache/arrow/pull/13246#discussion_r913815989\n\n\n##########\njava/dataset/src/main/cpp/jni_wrapper.cc:\n##########\n@@ -17,14 +17,14 @@\n \n #include <mutex>\n \n+#include \"./jni_util.h\"\n\nReview Comment:\n   done\n\n\n\n##########\njava/dataset/src/main/cpp/jni_util.cc:\n##########\n@@ -17,6 +17,7 @@\n \n #include \"./jni_util.h\"\n\nReview Comment:\n   done\n\n\n\n",
                    "created": "2022-07-05T13:44:29.906+0000",
                    "updated": "2022-07-05T13:44:29.906+0000",
                    "started": "2022-07-05T13:44:29.906+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "787860",
                    "issueId": "13441736"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13441736/worklog/787862",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zhztheplayer commented on code in PR #13246:\nURL: https://github.com/apache/arrow/pull/13246#discussion_r913820749\n\n\n##########\njava/dataset/src/main/cpp/jni_util.cc:\n##########\n@@ -162,11 +165,104 @@ std::shared_ptr<ReservationListener> ReservationListenableMemoryPool::get_listen\n \n ReservationListenableMemoryPool::~ReservationListenableMemoryPool() {}\n \n+std::string Describe(JNIEnv* env, jthrowable t) {\n+  jclass describer_class =\n+      env->FindClass(\"org/apache/arrow/dataset/jni/JniExceptionDescriber\");\n+  jmethodID describe_method = env->GetStaticMethodID(\n+      describer_class, \"describe\", \"(Ljava/lang/Throwable;)Ljava/lang/String;\");\n+  std::string description = JStringToCString(\n+      env, (jstring)env->CallStaticObjectMethod(describer_class, describe_method, t));\n+  return description;\n+}\n+\n+arrow::Result<bool> IsErrorInstanceOf(JNIEnv* env, jthrowable t, std::string class_name) {\n+  jclass jclass = env->FindClass(class_name.c_str());\n+  if (jclass == nullptr) {\n+    return arrow::Status::Invalid(\"Class not found: \" + class_name);\n\nReview Comment:\n   Is `DCHECK` suitable for null-checking + returning? Anyway I have changed to return `false` in latest commit.\n\n\n\n##########\njava/dataset/src/main/cpp/jni_util.cc:\n##########\n@@ -162,11 +165,104 @@ std::shared_ptr<ReservationListener> ReservationListenableMemoryPool::get_listen\n \n ReservationListenableMemoryPool::~ReservationListenableMemoryPool() {}\n \n+std::string Describe(JNIEnv* env, jthrowable t) {\n+  jclass describer_class =\n+      env->FindClass(\"org/apache/arrow/dataset/jni/JniExceptionDescriber\");\n+  jmethodID describe_method = env->GetStaticMethodID(\n+      describer_class, \"describe\", \"(Ljava/lang/Throwable;)Ljava/lang/String;\");\n+  std::string description = JStringToCString(\n+      env, (jstring)env->CallStaticObjectMethod(describer_class, describe_method, t));\n+  return description;\n+}\n+\n+arrow::Result<bool> IsErrorInstanceOf(JNIEnv* env, jthrowable t, std::string class_name) {\n+  jclass jclass = env->FindClass(class_name.c_str());\n+  if (jclass == nullptr) {\n+    return arrow::Status::Invalid(\"Class not found: \" + class_name);\n+  }\n+  return env->IsInstanceOf(t, jclass);\n+}\n+\n+arrow::StatusCode MapJavaError(JNIEnv* env, jthrowable t) {\n+  StatusCode code;\n+  if (IsErrorInstanceOf(env, t, \"org/apache/arrow/memory/OutOfMemoryException\") ==\n+      JNI_TRUE) {\n+    code = StatusCode::OutOfMemory;\n+  } else if (IsErrorInstanceOf(env, t, \"java/lang/UnsupportedOperationException\") ==\n+             JNI_TRUE) {\n+    code = StatusCode::NotImplemented;\n+  } else if (IsErrorInstanceOf(env, t, \"java/io/NotSerializableException\") == JNI_TRUE) {\n+    code = StatusCode::SerializationError;\n+  } else if (IsErrorInstanceOf(env, t, \"java/io/IOException\") == JNI_TRUE) {\n+    code = StatusCode::IOError;\n+  } else if (IsErrorInstanceOf(env, t, \"java/lang/IllegalArgumentException\") ==\n+             JNI_TRUE) {\n+    code = StatusCode::Invalid;\n+  } else if (IsErrorInstanceOf(env, t, \"java/lang/IllegalStateException\") == JNI_TRUE) {\n+    code = StatusCode::Invalid;\n+  } else {\n+    code = StatusCode::UnknownError;\n+  }\n+  return code;\n+}\n+\n+JNIEnv* GetEnvOrAttach(JavaVM* vm) {\n+  JNIEnv* env;\n+  int getEnvStat = vm->GetEnv(reinterpret_cast<void**>(&env), JNI_VERSION);\n+  if (getEnvStat == JNI_EDETACHED) {\n+    // Reattach current thread to JVM\n+    getEnvStat = vm->AttachCurrentThread(reinterpret_cast<void**>(&env), nullptr);\n+    if (getEnvStat != JNI_OK) {\n+      std::cout << \"Failed to attach current thread to JVM. \" << std::endl;\n\nReview Comment:\n   done\n\n\n\n",
                    "created": "2022-07-05T13:48:50.971+0000",
                    "updated": "2022-07-05T13:48:50.971+0000",
                    "started": "2022-07-05T13:48:50.970+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "787862",
                    "issueId": "13441736"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 19800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@3052ab1b[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2b0b5de1[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3ffa4fad[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@4eeff9e6[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@280f6514[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1b4544c7[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@762fe725[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@47be10cf[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@14cafae9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@2598e7cb[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2c073a92[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@1b887fb5[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 19800,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Jul 06 11:56:56 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-07-06T11:56:56.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-16329/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2022-04-26T07:44:23.000+0000",
        "updated": "2022-07-06T11:56:56.000+0000",
        "timeoriginalestimate": null,
        "description": "When errors are propagated through the JNI barrier, two mechanisms are involved:\r\n\r\n* the {{Status CheckException(JNIEnv* env)}} function for Java-to-C++ error translation\r\n* the {{JniAssertOkOrThrow(arrow::Status status)}} and {{T JniGetOrThrow(arrow::Result<T> result)}} functions for C++-to-Java error translation\r\n\r\nCurrently, both mechanisms lose most context about the original error, such as its type and any additional state, such as the optional {{StatusDetail}} in C++ or any properties in Java (which I'm sure exist on some exception classes).\r\n\r\nWe should improve these mechanisms to retain as much context as possible. For example, in a hypothetical Java-to-C++-to-Java error propagation scenario, the original Java exception from inner code should ideally be re-thrown in the outer Java context (we already support this in Python btw).",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "5.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 19800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java][C++] Keep more context when marshalling errors through JNI",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13441736/comment/17527974",
                    "id": "17527974",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "cc [~lidavidm] [~ljw1001]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2022-04-26T07:44:58.847+0000",
                    "updated": "2022-04-26T07:45:06.293+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13441736/comment/17528125",
                    "id": "17528125",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "CC [~zhztheplayer]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2022-04-26T12:22:44.736+0000",
                    "updated": "2022-04-26T12:22:44.736+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13441736/comment/17563181",
                    "id": "17563181",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 13246\n[https://github.com/apache/arrow/pull/13246]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2022-07-06T11:56:56.849+0000",
                    "updated": "2022-07-06T11:56:56.849+0000"
                }
            ],
            "maxResults": 3,
            "total": 3,
            "startAt": 0
        },
        "customfield_12311820": "0|z11tc0:",
        "customfield_12314139": null
    }
}