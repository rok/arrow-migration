{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13170662",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170662",
    "key": "ARROW-2810",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342562",
                "id": "12342562",
                "description": "",
                "name": "0.10.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-08-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pcmoritz",
            "name": "pcmoritz",
            "key": "pcmoritz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Philipp Moritz",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332956",
                "id": "12332956",
                "name": "C++ - Plasma"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 3000,
            "total": 3000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 3000,
            "total": 3000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2810/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 5,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170662/worklog/124565",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2282: ARROW-2810: [Plasma] Remove flatbuffers from public API\nURL: https://github.com/apache/arrow/pull/2282#issuecomment-406047591\n \n \n   I'd already created one, just added\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-18T19:30:57.418+0000",
                    "updated": "2018-07-18T19:30:57.418+0000",
                    "started": "2018-07-18T19:30:57.417+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "124565",
                    "issueId": "13170662"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170662/worklog/124584",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2282: ARROW-2810: [Plasma] Remove flatbuffers from public API\nURL: https://github.com/apache/arrow/pull/2282#issuecomment-406060349\n \n \n   @pcmoritz there's another usage of the wire protocol in plasma.h; I removed the include in https://github.com/apache/arrow/pull/2282/commits/d6c149784514f6d8d920df5b4c5db1f9902ff1e4. I'll let you decide how to handle it\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-18T20:16:50.332+0000",
                    "updated": "2018-07-18T20:16:50.332+0000",
                    "started": "2018-07-18T20:16:50.332+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "124584",
                    "issueId": "13170662"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170662/worklog/124727",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz commented on issue #2282: ARROW-2810: [Plasma] Remove flatbuffers from public API\nURL: https://github.com/apache/arrow/pull/2282#issuecomment-406120626\n \n \n   Thanks for catching that. I'm fixing it now.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-19T01:01:12.423+0000",
                    "updated": "2018-07-19T01:01:12.423+0000",
                    "started": "2018-07-19T01:01:12.422+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "124727",
                    "issueId": "13170662"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170662/worklog/124783",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz commented on issue #2282: ARROW-2810: [Plasma] Remove flatbuffers from public API\nURL: https://github.com/apache/arrow/pull/2282#issuecomment-406147373\n \n \n   appveyor passed on my fork: https://ci.appveyor.com/project/pcmoritz/arrow/build/1.0.826, so feel free to merge\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-19T03:59:09.323+0000",
                    "updated": "2018-07-19T03:59:09.323+0000",
                    "started": "2018-07-19T03:59:09.323+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "124783",
                    "issueId": "13170662"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170662/worklog/124790",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm closed pull request #2282: ARROW-2810: [Plasma] Remove flatbuffers from public API\nURL: https://github.com/apache/arrow/pull/2282\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/plasma/CMakeLists.txt b/cpp/src/plasma/CMakeLists.txt\nindex aa4d2b002a..bb6e514861 100644\n--- a/cpp/src/plasma/CMakeLists.txt\n+++ b/cpp/src/plasma/CMakeLists.txt\n@@ -140,13 +140,9 @@ endif()\n # Headers: top level\n install(FILES\n   common.h\n-  \"${OUTPUT_DIR}/common_generated.h\"\n   compat.h\n   client.h\n   events.h\n-  plasma.h\n-  \"${OUTPUT_DIR}/plasma_generated.h\"\n-  protocol.h\n   DESTINATION \"${CMAKE_INSTALL_INCLUDEDIR}/plasma\")\n \n # Plasma store\ndiff --git a/cpp/src/plasma/client.cc b/cpp/src/plasma/client.cc\nindex f2b0b9780b..e7d9d448db 100644\n--- a/cpp/src/plasma/client.cc\n+++ b/cpp/src/plasma/client.cc\n@@ -982,7 +982,7 @@ Status PlasmaClient::Impl::Wait(int64_t num_object_requests,\n   *num_objects_ready = 0;\n   for (int i = 0; i < num_object_requests; ++i) {\n     ObjectRequestType type = object_requests[i].type;\n-    fb::ObjectStatus status = object_requests[i].status;\n+    auto status = static_cast<fb::ObjectStatus>(object_requests[i].location);\n     switch (type) {\n       case ObjectRequestType::PLASMA_QUERY_LOCAL:\n         if (status == fb::ObjectStatus::Local) {\ndiff --git a/cpp/src/plasma/common.cc b/cpp/src/plasma/common.cc\nindex f91b963da6..6e368d3b45 100644\n--- a/cpp/src/plasma/common.cc\n+++ b/cpp/src/plasma/common.cc\n@@ -125,22 +125,6 @@ bool UniqueID::operator==(const UniqueID& rhs) const {\n   return std::memcmp(data(), rhs.data(), kUniqueIDSize) == 0;\n }\n \n-Status PlasmaErrorStatus(fb::PlasmaError plasma_error) {\n-  switch (plasma_error) {\n-    case fb::PlasmaError::OK:\n-      return Status::OK();\n-    case fb::PlasmaError::ObjectExists:\n-      return Status::PlasmaObjectExists(\"object already exists in the plasma store\");\n-    case fb::PlasmaError::ObjectNonexistent:\n-      return Status::PlasmaObjectNonexistent(\"object does not exist in the plasma store\");\n-    case fb::PlasmaError::OutOfMemory:\n-      return Status::PlasmaStoreFull(\"object does not fit in the plasma store\");\n-    default:\n-      ARROW_LOG(FATAL) << \"unknown plasma error code \" << static_cast<int>(plasma_error);\n-  }\n-  return Status::OK();\n-}\n-\n ARROW_EXPORT fb::ObjectStatus ObjectStatusLocal = fb::ObjectStatus::Local;\n ARROW_EXPORT fb::ObjectStatus ObjectStatusRemote = fb::ObjectStatus::Remote;\n \ndiff --git a/cpp/src/plasma/common.h b/cpp/src/plasma/common.h\nindex 5e7c7d484e..a41bf727f7 100644\n--- a/cpp/src/plasma/common.h\n+++ b/cpp/src/plasma/common.h\n@@ -33,13 +33,7 @@\n \n namespace plasma {\n \n-namespace flatbuf {\n-\n-// Forward declaration outside the namespace, which is defined in plasma_generated.h.\n-enum class PlasmaError : int32_t;\n-enum class ObjectStatus : int32_t;\n-\n-}  // namespace flatbuf\n+enum class ObjectLocation : int32_t { Local, Remote, Nonexistent };\n \n constexpr int64_t kUniqueIDSize = 20;\n \n@@ -62,8 +56,6 @@ static_assert(std::is_pod<UniqueID>::value, \"UniqueID must be plain old data\");\n \n typedef UniqueID ObjectID;\n \n-arrow::Status PlasmaErrorStatus(flatbuf::PlasmaError plasma_error);\n-\n /// Size of object hash digests.\n constexpr int64_t kDigestSize = sizeof(uint64_t);\n \n@@ -84,19 +76,13 @@ struct ObjectRequest {\n   ///  - PLASMA_QUERY_ANYWHERE: return if or when the object is available in\n   ///    the system (i.e., either in the local or a remote Plasma Store).\n   ObjectRequestType type;\n-  /// Object status. Same as the status returned by plasma_status() function\n-  /// call. This is filled in by plasma_wait_for_objects1():\n-  ///  - ObjectStatus::Local: object is ready at the local Plasma Store.\n-  ///  - ObjectStatus::Remote: object is ready at a remote Plasma Store.\n-  ///  - ObjectStatus::Nonexistent: object does not exist in the system.\n-  ///  - PLASMA_CLIENT_IN_TRANSFER, if the object is currently being scheduled\n-  ///    for being transferred or it is transferring.\n-  flatbuf::ObjectStatus status;\n+  /// Object location. This can be\n+  ///  - ObjectLocation::Local: object is ready at the local Plasma Store.\n+  ///  - ObjectLocation::Remote: object is ready at a remote Plasma Store.\n+  ///  - ObjectLocation::Nonexistent: object does not exist in the system.\n+  ObjectLocation location;\n };\n \n-extern flatbuf::ObjectStatus ObjectStatusLocal;\n-extern flatbuf::ObjectStatus ObjectStatusRemote;\n-\n /// Globally accessible reference to plasma store configuration.\n /// TODO(pcm): This can be avoided with some refactoring of existing code\n /// by making it possible to pass a context object through dlmalloc.\ndiff --git a/cpp/src/plasma/lib/java/org_apache_arrow_plasma_PlasmaClientJNI.cc b/cpp/src/plasma/lib/java/org_apache_arrow_plasma_PlasmaClientJNI.cc\nindex 270e6968d0..4a3f6b244f 100644\n--- a/cpp/src/plasma/lib/java/org_apache_arrow_plasma_PlasmaClientJNI.cc\n+++ b/cpp/src/plasma/lib/java/org_apache_arrow_plasma_PlasmaClientJNI.cc\n@@ -271,8 +271,8 @@ JNIEXPORT jobjectArray JNICALL Java_org_apache_arrow_plasma_PlasmaClientJNI_wait\n       break;\n     }\n \n-    if (oreqs[i].status == plasma::ObjectStatusLocal ||\n-        oreqs[i].status == plasma::ObjectStatusRemote) {\n+    if (oreqs[i].location == plasma::ObjectLocation::Local ||\n+        oreqs[i].location == plasma::ObjectLocation::Remote) {\n       oid = env->NewByteArray(OBJECT_ID_SIZE);\n       object_id_to_jbyteArray(env, oid, &oreqs[i].object_id);\n       env->SetObjectArrayElement(ret, num_returned, oid);\ndiff --git a/cpp/src/plasma/protocol.cc b/cpp/src/plasma/protocol.cc\nindex f5ea42a018..5f761c494f 100644\n--- a/cpp/src/plasma/protocol.cc\n+++ b/cpp/src/plasma/protocol.cc\n@@ -37,6 +37,13 @@ using fb::PlasmaObjectSpec;\n \n using flatbuffers::uoffset_t;\n \n+#define PLASMA_CHECK_ENUM(x, y) \\\n+  static_assert(static_cast<int>(x) == static_cast<int>(y), \"protocol mismatch\")\n+\n+PLASMA_CHECK_ENUM(ObjectLocation::Local, fb::ObjectStatus::Local);\n+PLASMA_CHECK_ENUM(ObjectLocation::Remote, fb::ObjectStatus::Remote);\n+PLASMA_CHECK_ENUM(ObjectLocation::Nonexistent, fb::ObjectStatus::Nonexistent);\n+\n flatbuffers::Offset<flatbuffers::Vector<flatbuffers::Offset<flatbuffers::String>>>\n ToFlatbuffer(flatbuffers::FlatBufferBuilder* fbb, const ObjectID* object_ids,\n              int64_t num_objects) {\n@@ -75,6 +82,22 @@ Status PlasmaSend(int sock, MessageType message_type, flatbuffers::FlatBufferBui\n   return WriteMessage(sock, message_type, fbb->GetSize(), fbb->GetBufferPointer());\n }\n \n+Status PlasmaErrorStatus(fb::PlasmaError plasma_error) {\n+  switch (plasma_error) {\n+    case fb::PlasmaError::OK:\n+      return Status::OK();\n+    case fb::PlasmaError::ObjectExists:\n+      return Status::PlasmaObjectExists(\"object already exists in the plasma store\");\n+    case fb::PlasmaError::ObjectNonexistent:\n+      return Status::PlasmaObjectNonexistent(\"object does not exist in the plasma store\");\n+    case fb::PlasmaError::OutOfMemory:\n+      return Status::PlasmaStoreFull(\"object does not fit in the plasma store\");\n+    default:\n+      ARROW_LOG(FATAL) << \"unknown plasma error code \" << static_cast<int>(plasma_error);\n+  }\n+  return Status::OK();\n+}\n+\n // Create messages.\n \n Status SendCreateRequest(int sock, ObjectID object_id, int64_t data_size,\n@@ -579,7 +602,7 @@ Status ReadWaitRequest(uint8_t* data, size_t size, ObjectRequestMap& object_requ\n     ObjectRequest object_request(\n         {object_id,\n          static_cast<ObjectRequestType>(message->object_requests()->Get(i)->type()),\n-         fb::ObjectStatus::Nonexistent});\n+         ObjectLocation::Nonexistent});\n     object_requests[object_id] = object_request;\n   }\n   return Status::OK();\n@@ -592,8 +615,9 @@ Status SendWaitReply(int sock, const ObjectRequestMap& object_requests,\n   std::vector<flatbuffers::Offset<fb::ObjectReply>> object_replies;\n   for (const auto& entry : object_requests) {\n     const auto& object_request = entry.second;\n-    object_replies.push_back(fb::CreateObjectReply(\n-        fbb, fbb.CreateString(object_request.object_id.binary()), object_request.status));\n+    object_replies.push_back(\n+        fb::CreateObjectReply(fbb, fbb.CreateString(object_request.object_id.binary()),\n+                              static_cast<fb::ObjectStatus>(object_request.location)));\n   }\n \n   auto message = fb::CreatePlasmaWaitReply(\n@@ -611,7 +635,8 @@ Status ReadWaitReply(uint8_t* data, size_t size, ObjectRequest object_requests[]\n   for (int i = 0; i < *num_ready_objects; i++) {\n     object_requests[i].object_id =\n         ObjectID::from_binary(message->object_requests()->Get(i)->object_id()->str());\n-    object_requests[i].status = message->object_requests()->Get(i)->status();\n+    object_requests[i].location =\n+        static_cast<ObjectLocation>(message->object_requests()->Get(i)->status());\n   }\n   return Status::OK();\n }\ndiff --git a/cpp/src/plasma/test/serialization_tests.cc b/cpp/src/plasma/test/serialization_tests.cc\nindex 97eb15e762..15df7defdc 100644\n--- a/cpp/src/plasma/test/serialization_tests.cc\n+++ b/cpp/src/plasma/test/serialization_tests.cc\n@@ -332,9 +332,9 @@ TEST(PlasmaSerialization, WaitRequest) {\n   const int num_objects_in = 2;\n   ObjectRequest object_requests_in[num_objects_in] = {\n       ObjectRequest({ObjectID::from_random(), ObjectRequestType::PLASMA_QUERY_ANYWHERE,\n-                     fb::ObjectStatus::Local}),\n+                     ObjectLocation::Local}),\n       ObjectRequest({ObjectID::from_random(), ObjectRequestType::PLASMA_QUERY_LOCAL,\n-                     fb::ObjectStatus::Local})};\n+                     ObjectLocation::Local})};\n   const int num_ready_objects_in = 1;\n   int64_t timeout_ms = 1000;\n \n@@ -366,11 +366,11 @@ TEST(PlasmaSerialization, WaitReply) {\n   /* Create a map with two ObjectRequests in it. */\n   ObjectRequestMap objects_in(num_objects_in);\n   ObjectID id1 = ObjectID::from_random();\n-  objects_in[id1] = ObjectRequest(\n-      {id1, ObjectRequestType::PLASMA_QUERY_LOCAL, fb::ObjectStatus::Local});\n+  objects_in[id1] =\n+      ObjectRequest({id1, ObjectRequestType::PLASMA_QUERY_LOCAL, ObjectLocation::Local});\n   ObjectID id2 = ObjectID::from_random();\n   objects_in[id2] = ObjectRequest(\n-      {id2, ObjectRequestType::PLASMA_QUERY_LOCAL, fb::ObjectStatus::Nonexistent});\n+      {id2, ObjectRequestType::PLASMA_QUERY_LOCAL, ObjectLocation::Nonexistent});\n \n   ARROW_CHECK_OK(SendWaitReply(fd, objects_in, num_objects_in));\n   /* Read message back. */\n@@ -386,7 +386,7 @@ TEST(PlasmaSerialization, WaitReply) {\n     const auto& entry = objects_in.find(objects_out[i].object_id);\n     ASSERT_TRUE(entry != objects_in.end());\n     ASSERT_EQ(entry->second.object_id, objects_out[i].object_id);\n-    ASSERT_EQ(entry->second.status, objects_out[i].status);\n+    ASSERT_EQ(entry->second.location, objects_out[i].location);\n   }\n   close(fd);\n }\ndiff --git a/python/pyarrow/_plasma.pyx b/python/pyarrow/_plasma.pyx\nindex 1e2cb66816..ba528220ff 100644\n--- a/python/pyarrow/_plasma.pyx\n+++ b/python/pyarrow/_plasma.pyx\n@@ -56,7 +56,7 @@ cdef extern from \"plasma/common.h\" nogil:\n     cdef struct CObjectRequest\" plasma::ObjectRequest\":\n         CUniqueID object_id\n         int type\n-        int status\n+        int location\n \n \n cdef extern from \"plasma/common.h\":\n@@ -66,8 +66,9 @@ cdef extern from \"plasma/common.h\":\n         PLASMA_QUERY_LOCAL\"plasma::ObjectRequestType::PLASMA_QUERY_LOCAL\",\n         PLASMA_QUERY_ANYWHERE\"plasma::ObjectRequestType::PLASMA_QUERY_ANYWHERE\"\n \n-    cdef int ObjectStatusLocal\"plasma::ObjectStatusLocal\"\n-    cdef int ObjectStatusRemote\"plasma::ObjectStatusRemote\"\n+    cdef enum ObjectLocation:\n+        ObjectStatusLocal\"plasma::ObjectLocation::Local\"\n+        ObjectStatusRemote\"plasma::ObjectLocation::Remote\"\n \n cdef extern from \"plasma/client.h\" nogil:\n \n@@ -598,8 +599,8 @@ cdef class PlasmaClient:\n         for i in range(len(object_ids)):\n             if num_returned == num_to_return:\n                 break\n-            if (object_requests[i].status == ObjectStatusLocal or\n-                    object_requests[i].status == ObjectStatusRemote):\n+            if (object_requests[i].location == ObjectStatusLocal or\n+                    object_requests[i].location == ObjectStatusRemote):\n                 ready_ids.append(\n                     ObjectID(object_requests[i].object_id.binary()))\n                 waiting_ids.discard(\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-19T04:42:49.446+0000",
                    "updated": "2018-07-19T04:42:49.446+0000",
                    "started": "2018-07-19T04:42:49.445+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "124790",
                    "issueId": "13170662"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 3000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@469f4806[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6d9ffae2[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5a7853ac[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@48a2faeb[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4f6a6304[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@76085198[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6e7589c6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@31df4341[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2db1743d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@19016482[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5b78e5dd[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@107660b8[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 3000,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Jul 19 04:42:40 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-07-19T04:42:40.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2810/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-07-07T22:53:36.000+0000",
        "updated": "2018-07-19T04:42:49.000+0000",
        "timeoriginalestimate": null,
        "description": "In general, it is not a good idea to include your transitive dependencies if you can avoid it. I discovered this when working on ARROW-1722 so I'm opening an issue",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 3000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Plasma] Plasma public headers leak flatbuffers.h",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170662/comment/16548790",
                    "id": "16548790",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 2282\n[https://github.com/apache/arrow/pull/2282]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-07-19T04:42:40.702+0000",
                    "updated": "2018-07-19T04:42:40.702+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|i3vn5z:",
        "customfield_12314139": null
    }
}