{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13418040",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418040",
    "key": "ARROW-15136",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350591",
                "id": "12350591",
                "description": "",
                "name": "7.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-02-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "aggregateprogress": {
            "progress": 6000,
            "total": 6000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 6000,
            "total": 6000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15136/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 10,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418040/worklog/698905",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou opened a new pull request #12001:\nURL: https://github.com/apache/arrow/pull/12001\n\n\n   Manage a readhead queue of ready-to-use Minio servers to avoid waiting for process launch at the start of each test.\r\n   \r\n   Before (time for arrow-s3fs-test):\r\n   ```\r\n   real\t0m59,841s\r\n   user\t0m13,669s\r\n   sys\t0m2,851s\r\n   ```\r\n   \r\n   After:\r\n   ```\r\n   real\t0m6,415s\r\n   user\t0m17,433s\r\n   sys\t0m3,470s\r\n   ```\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-20T19:00:18.373+0000",
                    "updated": "2021-12-20T19:00:18.373+0000",
                    "started": "2021-12-20T19:00:18.373+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "698905",
                    "issueId": "13418040"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418040/worklog/698906",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #12001:\nURL: https://github.com/apache/arrow/pull/12001#issuecomment-998189914\n\n\n   https://issues.apache.org/jira/browse/ARROW-15136\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-20T19:00:42.176+0000",
                    "updated": "2021-12-20T19:00:42.176+0000",
                    "started": "2021-12-20T19:00:42.176+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "698906",
                    "issueId": "13418040"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418040/worklog/701971",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #12001:\nURL: https://github.com/apache/arrow/pull/12001#discussion_r776419557\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/s3_test_util.cc\n##########\n@@ -0,0 +1,174 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include <algorithm>  // Missing include in boost/process\n+#include <sstream>\n+\n+// This boost/asio/io_context.hpp include is needless for no MinGW\n+// build.\n+//\n+// This is for including boost/asio/detail/socket_types.hpp before any\n+// \"#include <windows.h>\". boost/asio/detail/socket_types.hpp doesn't\n+// work if windows.h is already included. boost/process.h ->\n+// boost/process/args.hpp -> boost/process/detail/basic_cmd.hpp\n+// includes windows.h. boost/process/args.hpp is included before\n+// boost/process/async.h that includes\n+// boost/asio/detail/socket_types.hpp implicitly is included.\n+#include <boost/asio/io_context.hpp>\n+// We need BOOST_USE_WINDOWS_H definition with MinGW when we use\n+// boost/process.hpp. See ARROW_BOOST_PROCESS_COMPILE_DEFINITIONS in\n+// cpp/cmake_modules/BuildUtils.cmake for details.\n+#include <boost/process.hpp>\n+\n+#include \"arrow/filesystem/s3_test_util.h\"\n+#include \"arrow/filesystem/s3fs.h\"\n+#include \"arrow/util/async_generator.h\"\n+#include \"arrow/util/future.h\"\n+#include \"arrow/util/io_util.h\"\n+#include \"arrow/util/thread_pool.h\"\n+\n+namespace arrow {\n+namespace fs {\n+\n+using ::arrow::internal::TemporaryDir;\n+\n+namespace bp = boost::process;\n+\n+namespace {\n+\n+const char* kMinioExecutableName = \"minio\";\n+const char* kMinioAccessKey = \"minio\";\n+const char* kMinioSecretKey = \"miniopass\";\n+\n+// Environment variables to configure another S3-compatible service\n+const char* kEnvConnectString = \"ARROW_TEST_S3_CONNECT_STRING\";\n+const char* kEnvAccessKey = \"ARROW_TEST_S3_ACCESS_KEY\";\n+const char* kEnvSecretKey = \"ARROW_TEST_S3_SECRET_KEY\";\n+\n+std::string GenerateConnectString() {\n+  std::stringstream ss;\n+  ss << \"127.0.0.1:\" << GetListenPort();\n+  return ss.str();\n+}\n+\n+}  // namespace\n+\n+struct MinioTestServer::Impl {\n+  std::unique_ptr<TemporaryDir> temp_dir_;\n+  std::string connect_string_;\n+  std::string access_key_ = kMinioAccessKey;\n+  std::string secret_key_ = kMinioSecretKey;\n+  std::shared_ptr<::boost::process::child> server_process_;\n+};\n+\n+MinioTestServer::MinioTestServer() : impl_(new Impl) {}\n+\n+MinioTestServer::~MinioTestServer() {\n+  auto st = Stop();\n+  ARROW_UNUSED(st);\n+}\n+\n+std::string MinioTestServer::connect_string() const { return impl_->connect_string_; }\n+\n+std::string MinioTestServer::access_key() const { return impl_->access_key_; }\n+\n+std::string MinioTestServer::secret_key() const { return impl_->secret_key_; }\n+\n+Status MinioTestServer::Start() {\n+  const char* connect_str = std::getenv(kEnvConnectString);\n+  const char* access_key = std::getenv(kEnvAccessKey);\n+  const char* secret_key = std::getenv(kEnvSecretKey);\n+  if (connect_str && access_key && secret_key) {\n+    // Use external instance\n+    impl_->connect_string_ = connect_str;\n+    impl_->access_key_ = access_key;\n+    impl_->secret_key_ = secret_key;\n+    return Status::OK();\n+  }\n+\n+  ARROW_ASSIGN_OR_RAISE(impl_->temp_dir_, TemporaryDir::Make(\"s3fs-test-\"));\n+\n+  // Get a copy of the current environment.\n+  // (NOTE: using \"auto\" would return a native_environment that mutates\n+  //  the current environment)\n+  bp::environment env = boost::this_process::environment();\n+  env[\"MINIO_ACCESS_KEY\"] = kMinioAccessKey;\n+  env[\"MINIO_SECRET_KEY\"] = kMinioSecretKey;\n+\n+  impl_->connect_string_ = GenerateConnectString();\n+\n+  auto exe_path = bp::search_path(kMinioExecutableName);\n+  if (exe_path.empty()) {\n+    return Status::IOError(\"Failed to find minio executable ('\", kMinioExecutableName,\n+                           \"') in PATH\");\n+  }\n+\n+  try {\n+    // NOTE: --quiet makes startup faster by suppressing remote version check\n+    impl_->server_process_ = std::make_shared<bp::child>(\n+        env, exe_path, \"server\", \"--quiet\", \"--compat\", \"--address\",\n+        impl_->connect_string_, impl_->temp_dir_->path().ToString());\n+  } catch (const std::exception& e) {\n+    return Status::IOError(\"Failed to launch Minio server: \", e.what());\n+  }\n+  return Status::OK();\n+}\n+\n+Status MinioTestServer::Stop() {\n+  if (impl_->server_process_ && impl_->server_process_->valid()) {\n+    // Brutal shutdown\n+    impl_->server_process_->terminate();\n+    impl_->server_process_->wait();\n+  }\n+  return Status::OK();\n+}\n+\n+struct MinioTestEnvironment::Impl {\n+  std::function<Future<std::shared_ptr<MinioTestServer>>()> server_generator_;\n+\n+  Result<std::shared_ptr<MinioTestServer>> LaunchOneServer() {\n+    auto server = std::make_shared<MinioTestServer>();\n+    RETURN_NOT_OK(server->Start());\n+    return server;\n+  }\n+};\n+\n+MinioTestEnvironment::MinioTestEnvironment() : impl_(new Impl) {}\n+\n+MinioTestEnvironment::~MinioTestEnvironment() = default;\n+\n+void MinioTestEnvironment::SetUp() {\n+  auto pool = ::arrow::internal::GetCpuThreadPool();\n+\n+  auto launch_one_server = []() -> Result<std::shared_ptr<MinioTestServer>> {\n+    auto server = std::make_shared<MinioTestServer>();\n+    RETURN_NOT_OK(server->Start());\n+    return server;\n+  };\n+  impl_->server_generator_ = [pool, launch_one_server]() {\n+    return DeferNotOk(pool->Submit(launch_one_server));\n+  };\n+  impl_->server_generator_ =\n+      MakeReadaheadGenerator(std::move(impl_->server_generator_), pool->GetCapacity());\n\nReview comment:\n       Would a fixed readahead level be better? On my system for instance I think this would instantly spawn 18 minio instances\u2026Though maybe that's fine since we need an instance per test.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-29T17:07:00.604+0000",
                    "updated": "2021-12-29T17:07:00.604+0000",
                    "started": "2021-12-29T17:07:00.604+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "701971",
                    "issueId": "13418040"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418040/worklog/701975",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #12001:\nURL: https://github.com/apache/arrow/pull/12001#discussion_r776426805\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/s3_test_util.cc\n##########\n@@ -0,0 +1,174 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include <algorithm>  // Missing include in boost/process\n+#include <sstream>\n+\n+// This boost/asio/io_context.hpp include is needless for no MinGW\n+// build.\n+//\n+// This is for including boost/asio/detail/socket_types.hpp before any\n+// \"#include <windows.h>\". boost/asio/detail/socket_types.hpp doesn't\n+// work if windows.h is already included. boost/process.h ->\n+// boost/process/args.hpp -> boost/process/detail/basic_cmd.hpp\n+// includes windows.h. boost/process/args.hpp is included before\n+// boost/process/async.h that includes\n+// boost/asio/detail/socket_types.hpp implicitly is included.\n+#include <boost/asio/io_context.hpp>\n+// We need BOOST_USE_WINDOWS_H definition with MinGW when we use\n+// boost/process.hpp. See ARROW_BOOST_PROCESS_COMPILE_DEFINITIONS in\n+// cpp/cmake_modules/BuildUtils.cmake for details.\n+#include <boost/process.hpp>\n+\n+#include \"arrow/filesystem/s3_test_util.h\"\n+#include \"arrow/filesystem/s3fs.h\"\n+#include \"arrow/util/async_generator.h\"\n+#include \"arrow/util/future.h\"\n+#include \"arrow/util/io_util.h\"\n+#include \"arrow/util/thread_pool.h\"\n+\n+namespace arrow {\n+namespace fs {\n+\n+using ::arrow::internal::TemporaryDir;\n+\n+namespace bp = boost::process;\n+\n+namespace {\n+\n+const char* kMinioExecutableName = \"minio\";\n+const char* kMinioAccessKey = \"minio\";\n+const char* kMinioSecretKey = \"miniopass\";\n+\n+// Environment variables to configure another S3-compatible service\n+const char* kEnvConnectString = \"ARROW_TEST_S3_CONNECT_STRING\";\n+const char* kEnvAccessKey = \"ARROW_TEST_S3_ACCESS_KEY\";\n+const char* kEnvSecretKey = \"ARROW_TEST_S3_SECRET_KEY\";\n+\n+std::string GenerateConnectString() {\n+  std::stringstream ss;\n+  ss << \"127.0.0.1:\" << GetListenPort();\n+  return ss.str();\n+}\n+\n+}  // namespace\n+\n+struct MinioTestServer::Impl {\n+  std::unique_ptr<TemporaryDir> temp_dir_;\n+  std::string connect_string_;\n+  std::string access_key_ = kMinioAccessKey;\n+  std::string secret_key_ = kMinioSecretKey;\n+  std::shared_ptr<::boost::process::child> server_process_;\n+};\n+\n+MinioTestServer::MinioTestServer() : impl_(new Impl) {}\n+\n+MinioTestServer::~MinioTestServer() {\n+  auto st = Stop();\n+  ARROW_UNUSED(st);\n+}\n+\n+std::string MinioTestServer::connect_string() const { return impl_->connect_string_; }\n+\n+std::string MinioTestServer::access_key() const { return impl_->access_key_; }\n+\n+std::string MinioTestServer::secret_key() const { return impl_->secret_key_; }\n+\n+Status MinioTestServer::Start() {\n+  const char* connect_str = std::getenv(kEnvConnectString);\n+  const char* access_key = std::getenv(kEnvAccessKey);\n+  const char* secret_key = std::getenv(kEnvSecretKey);\n+  if (connect_str && access_key && secret_key) {\n+    // Use external instance\n+    impl_->connect_string_ = connect_str;\n+    impl_->access_key_ = access_key;\n+    impl_->secret_key_ = secret_key;\n+    return Status::OK();\n+  }\n+\n+  ARROW_ASSIGN_OR_RAISE(impl_->temp_dir_, TemporaryDir::Make(\"s3fs-test-\"));\n+\n+  // Get a copy of the current environment.\n+  // (NOTE: using \"auto\" would return a native_environment that mutates\n+  //  the current environment)\n+  bp::environment env = boost::this_process::environment();\n+  env[\"MINIO_ACCESS_KEY\"] = kMinioAccessKey;\n+  env[\"MINIO_SECRET_KEY\"] = kMinioSecretKey;\n+\n+  impl_->connect_string_ = GenerateConnectString();\n+\n+  auto exe_path = bp::search_path(kMinioExecutableName);\n+  if (exe_path.empty()) {\n+    return Status::IOError(\"Failed to find minio executable ('\", kMinioExecutableName,\n+                           \"') in PATH\");\n+  }\n+\n+  try {\n+    // NOTE: --quiet makes startup faster by suppressing remote version check\n+    impl_->server_process_ = std::make_shared<bp::child>(\n+        env, exe_path, \"server\", \"--quiet\", \"--compat\", \"--address\",\n+        impl_->connect_string_, impl_->temp_dir_->path().ToString());\n+  } catch (const std::exception& e) {\n+    return Status::IOError(\"Failed to launch Minio server: \", e.what());\n+  }\n+  return Status::OK();\n+}\n+\n+Status MinioTestServer::Stop() {\n+  if (impl_->server_process_ && impl_->server_process_->valid()) {\n+    // Brutal shutdown\n+    impl_->server_process_->terminate();\n+    impl_->server_process_->wait();\n+  }\n+  return Status::OK();\n+}\n+\n+struct MinioTestEnvironment::Impl {\n+  std::function<Future<std::shared_ptr<MinioTestServer>>()> server_generator_;\n+\n+  Result<std::shared_ptr<MinioTestServer>> LaunchOneServer() {\n+    auto server = std::make_shared<MinioTestServer>();\n+    RETURN_NOT_OK(server->Start());\n+    return server;\n+  }\n+};\n+\n+MinioTestEnvironment::MinioTestEnvironment() : impl_(new Impl) {}\n+\n+MinioTestEnvironment::~MinioTestEnvironment() = default;\n+\n+void MinioTestEnvironment::SetUp() {\n+  auto pool = ::arrow::internal::GetCpuThreadPool();\n+\n+  auto launch_one_server = []() -> Result<std::shared_ptr<MinioTestServer>> {\n+    auto server = std::make_shared<MinioTestServer>();\n+    RETURN_NOT_OK(server->Start());\n+    return server;\n+  };\n+  impl_->server_generator_ = [pool, launch_one_server]() {\n+    return DeferNotOk(pool->Submit(launch_one_server));\n+  };\n+  impl_->server_generator_ =\n+      MakeReadaheadGenerator(std::move(impl_->server_generator_), pool->GetCapacity());\n\nReview comment:\n       On my system it spawns 24 of them :-)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-29T17:26:04.495+0000",
                    "updated": "2021-12-29T17:26:04.495+0000",
                    "started": "2021-12-29T17:26:04.495+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "701975",
                    "issueId": "13418040"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418040/worklog/701976",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #12001:\nURL: https://github.com/apache/arrow/pull/12001#discussion_r776427143\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/s3_test_util.cc\n##########\n@@ -0,0 +1,174 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include <algorithm>  // Missing include in boost/process\n+#include <sstream>\n+\n+// This boost/asio/io_context.hpp include is needless for no MinGW\n+// build.\n+//\n+// This is for including boost/asio/detail/socket_types.hpp before any\n+// \"#include <windows.h>\". boost/asio/detail/socket_types.hpp doesn't\n+// work if windows.h is already included. boost/process.h ->\n+// boost/process/args.hpp -> boost/process/detail/basic_cmd.hpp\n+// includes windows.h. boost/process/args.hpp is included before\n+// boost/process/async.h that includes\n+// boost/asio/detail/socket_types.hpp implicitly is included.\n+#include <boost/asio/io_context.hpp>\n+// We need BOOST_USE_WINDOWS_H definition with MinGW when we use\n+// boost/process.hpp. See ARROW_BOOST_PROCESS_COMPILE_DEFINITIONS in\n+// cpp/cmake_modules/BuildUtils.cmake for details.\n+#include <boost/process.hpp>\n+\n+#include \"arrow/filesystem/s3_test_util.h\"\n+#include \"arrow/filesystem/s3fs.h\"\n+#include \"arrow/util/async_generator.h\"\n+#include \"arrow/util/future.h\"\n+#include \"arrow/util/io_util.h\"\n+#include \"arrow/util/thread_pool.h\"\n+\n+namespace arrow {\n+namespace fs {\n+\n+using ::arrow::internal::TemporaryDir;\n+\n+namespace bp = boost::process;\n+\n+namespace {\n+\n+const char* kMinioExecutableName = \"minio\";\n+const char* kMinioAccessKey = \"minio\";\n+const char* kMinioSecretKey = \"miniopass\";\n+\n+// Environment variables to configure another S3-compatible service\n+const char* kEnvConnectString = \"ARROW_TEST_S3_CONNECT_STRING\";\n+const char* kEnvAccessKey = \"ARROW_TEST_S3_ACCESS_KEY\";\n+const char* kEnvSecretKey = \"ARROW_TEST_S3_SECRET_KEY\";\n+\n+std::string GenerateConnectString() {\n+  std::stringstream ss;\n+  ss << \"127.0.0.1:\" << GetListenPort();\n+  return ss.str();\n+}\n+\n+}  // namespace\n+\n+struct MinioTestServer::Impl {\n+  std::unique_ptr<TemporaryDir> temp_dir_;\n+  std::string connect_string_;\n+  std::string access_key_ = kMinioAccessKey;\n+  std::string secret_key_ = kMinioSecretKey;\n+  std::shared_ptr<::boost::process::child> server_process_;\n+};\n+\n+MinioTestServer::MinioTestServer() : impl_(new Impl) {}\n+\n+MinioTestServer::~MinioTestServer() {\n+  auto st = Stop();\n+  ARROW_UNUSED(st);\n+}\n+\n+std::string MinioTestServer::connect_string() const { return impl_->connect_string_; }\n+\n+std::string MinioTestServer::access_key() const { return impl_->access_key_; }\n+\n+std::string MinioTestServer::secret_key() const { return impl_->secret_key_; }\n+\n+Status MinioTestServer::Start() {\n+  const char* connect_str = std::getenv(kEnvConnectString);\n+  const char* access_key = std::getenv(kEnvAccessKey);\n+  const char* secret_key = std::getenv(kEnvSecretKey);\n+  if (connect_str && access_key && secret_key) {\n+    // Use external instance\n+    impl_->connect_string_ = connect_str;\n+    impl_->access_key_ = access_key;\n+    impl_->secret_key_ = secret_key;\n+    return Status::OK();\n+  }\n+\n+  ARROW_ASSIGN_OR_RAISE(impl_->temp_dir_, TemporaryDir::Make(\"s3fs-test-\"));\n+\n+  // Get a copy of the current environment.\n+  // (NOTE: using \"auto\" would return a native_environment that mutates\n+  //  the current environment)\n+  bp::environment env = boost::this_process::environment();\n+  env[\"MINIO_ACCESS_KEY\"] = kMinioAccessKey;\n+  env[\"MINIO_SECRET_KEY\"] = kMinioSecretKey;\n+\n+  impl_->connect_string_ = GenerateConnectString();\n+\n+  auto exe_path = bp::search_path(kMinioExecutableName);\n+  if (exe_path.empty()) {\n+    return Status::IOError(\"Failed to find minio executable ('\", kMinioExecutableName,\n+                           \"') in PATH\");\n+  }\n+\n+  try {\n+    // NOTE: --quiet makes startup faster by suppressing remote version check\n+    impl_->server_process_ = std::make_shared<bp::child>(\n+        env, exe_path, \"server\", \"--quiet\", \"--compat\", \"--address\",\n+        impl_->connect_string_, impl_->temp_dir_->path().ToString());\n+  } catch (const std::exception& e) {\n+    return Status::IOError(\"Failed to launch Minio server: \", e.what());\n+  }\n+  return Status::OK();\n+}\n+\n+Status MinioTestServer::Stop() {\n+  if (impl_->server_process_ && impl_->server_process_->valid()) {\n+    // Brutal shutdown\n+    impl_->server_process_->terminate();\n+    impl_->server_process_->wait();\n+  }\n+  return Status::OK();\n+}\n+\n+struct MinioTestEnvironment::Impl {\n+  std::function<Future<std::shared_ptr<MinioTestServer>>()> server_generator_;\n+\n+  Result<std::shared_ptr<MinioTestServer>> LaunchOneServer() {\n+    auto server = std::make_shared<MinioTestServer>();\n+    RETURN_NOT_OK(server->Start());\n+    return server;\n+  }\n+};\n+\n+MinioTestEnvironment::MinioTestEnvironment() : impl_(new Impl) {}\n+\n+MinioTestEnvironment::~MinioTestEnvironment() = default;\n+\n+void MinioTestEnvironment::SetUp() {\n+  auto pool = ::arrow::internal::GetCpuThreadPool();\n+\n+  auto launch_one_server = []() -> Result<std::shared_ptr<MinioTestServer>> {\n+    auto server = std::make_shared<MinioTestServer>();\n+    RETURN_NOT_OK(server->Start());\n+    return server;\n+  };\n+  impl_->server_generator_ = [pool, launch_one_server]() {\n+    return DeferNotOk(pool->Submit(launch_one_server));\n+  };\n+  impl_->server_generator_ =\n+      MakeReadaheadGenerator(std::move(impl_->server_generator_), pool->GetCapacity());\n\nReview comment:\n       So, yes, it's fine IMHO. They'll just sit waiting for requests.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-29T17:26:57.586+0000",
                    "updated": "2021-12-29T17:26:57.586+0000",
                    "started": "2021-12-29T17:26:57.586+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "701976",
                    "issueId": "13418040"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418040/worklog/702015",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm closed pull request #12001:\nURL: https://github.com/apache/arrow/pull/12001\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-29T18:28:27.697+0000",
                    "updated": "2021-12-29T18:28:27.697+0000",
                    "started": "2021-12-29T18:28:27.697+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "702015",
                    "issueId": "13418040"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418040/worklog/702028",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on pull request #12001:\nURL: https://github.com/apache/arrow/pull/12001#issuecomment-1002733635\n\n\n   Benchmark runs are scheduled for baseline = bf7636e1cbd35fdf4c638776366e113cf82f9081 and contender = f5ab8833867cb456190d656300cbbb2f7724563e. f5ab8833867cb456190d656300cbbb2f7724563e is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Scheduled] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/c33b656f038344828efb0aceceee5209...c08618e598874d00998fe6d9a8c30279/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/d8d159b81ba1498aa6e7c84c2148e5d9...309f2f3bd55e486f81ef67c191b6b8e3/)\n   [Scheduled] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/ec66f356df61461b801dba6872cd6d70...73a82fc54583447d8c5f325e6b87d3b6/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-29T18:53:02.431+0000",
                    "updated": "2021-12-29T18:53:02.431+0000",
                    "started": "2021-12-29T18:53:02.430+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "702028",
                    "issueId": "13418040"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418040/worklog/702037",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #12001:\nURL: https://github.com/apache/arrow/pull/12001#issuecomment-1002733635\n\n\n   Benchmark runs are scheduled for baseline = bf7636e1cbd35fdf4c638776366e113cf82f9081 and contender = f5ab8833867cb456190d656300cbbb2f7724563e. f5ab8833867cb456190d656300cbbb2f7724563e is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/c33b656f038344828efb0aceceee5209...c08618e598874d00998fe6d9a8c30279/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/d8d159b81ba1498aa6e7c84c2148e5d9...309f2f3bd55e486f81ef67c191b6b8e3/)\n   [Scheduled] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/ec66f356df61461b801dba6872cd6d70...73a82fc54583447d8c5f325e6b87d3b6/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-29T19:11:23.976+0000",
                    "updated": "2021-12-29T19:11:23.976+0000",
                    "started": "2021-12-29T19:11:23.976+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "702037",
                    "issueId": "13418040"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418040/worklog/702183",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #12001:\nURL: https://github.com/apache/arrow/pull/12001#issuecomment-1002733635\n\n\n   Benchmark runs are scheduled for baseline = bf7636e1cbd35fdf4c638776366e113cf82f9081 and contender = f5ab8833867cb456190d656300cbbb2f7724563e. f5ab8833867cb456190d656300cbbb2f7724563e is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/c33b656f038344828efb0aceceee5209...c08618e598874d00998fe6d9a8c30279/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/d8d159b81ba1498aa6e7c84c2148e5d9...309f2f3bd55e486f81ef67c191b6b8e3/)\n   [Failed :arrow_down:0.22% :arrow_up:0.04%] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/ec66f356df61461b801dba6872cd6d70...73a82fc54583447d8c5f325e6b87d3b6/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-30T03:31:24.970+0000",
                    "updated": "2021-12-30T03:31:24.970+0000",
                    "started": "2021-12-30T03:31:24.970+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "702183",
                    "issueId": "13418040"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418040/worklog/702260",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #12001:\nURL: https://github.com/apache/arrow/pull/12001#issuecomment-1002733635\n\n\n   Benchmark runs are scheduled for baseline = bf7636e1cbd35fdf4c638776366e113cf82f9081 and contender = f5ab8833867cb456190d656300cbbb2f7724563e. f5ab8833867cb456190d656300cbbb2f7724563e is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/c33b656f038344828efb0aceceee5209...c08618e598874d00998fe6d9a8c30279/)\n   [Failed :arrow_down:0.0% :arrow_up:0.0%] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/d8d159b81ba1498aa6e7c84c2148e5d9...309f2f3bd55e486f81ef67c191b6b8e3/)\n   [Failed :arrow_down:0.22% :arrow_up:0.04%] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/ec66f356df61461b801dba6872cd6d70...73a82fc54583447d8c5f325e6b87d3b6/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-30T09:41:34.018+0000",
                    "updated": "2021-12-30T09:41:34.018+0000",
                    "started": "2021-12-30T09:41:34.017+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "702260",
                    "issueId": "13418040"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/5",
            "id": "5",
            "description": "General wishlist item.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Wish",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 6000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@1e92196d[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@15d53c22[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6b231ecd[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@572b1ba7[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@10522e0a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@54b1492d[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2797f000[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@28ee2176[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@294d681f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@77ebb43a[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6f645d37[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@3658343c[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 6000,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Dec 29 18:28:21 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-12-29T18:28:21.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15136/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2021-12-16T16:48:12.000+0000",
        "updated": "2021-12-30T09:41:34.000+0000",
        "timeoriginalestimate": null,
        "description": "One thing that would make development more pleasant would be to speed up the s3fs tests. Currently, each test waits for the launch of a new Minio child process. Instead, we may launch several of them in advance (listening on different ports and targetting different temporary directories), so that most tests don't bear the launch cost.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 6000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Make S3FS tests faster",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418040/comment/17466559",
                    "id": "17466559",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 12001\n[https://github.com/apache/arrow/pull/12001]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-12-29T18:28:21.943+0000",
                    "updated": "2021-12-29T18:28:21.943+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0xsls:",
        "customfield_12314139": null
    }
}