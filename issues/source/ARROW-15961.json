{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13434418",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13434418",
    "key": "ARROW-15961",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12352360",
                "id": "12352360",
                "description": "",
                "name": "11.0.0",
                "archived": false,
                "released": false
            }
        ],
        "resolution": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "good-first-issue",
            "good-second-issue",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12635839",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12635839",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "outwardIssue": {
                    "id": "13433087",
                    "key": "ARROW-15899",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13433087",
                    "fields": {
                        "summary": "[C++] Parquet writes broken file or incorrect data when nullable=False",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                            "description": "The issue is open and ready for the assignee to start work on it.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                            "name": "Open",
                            "id": "1",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                                "id": 2,
                                "key": "new",
                                "colorName": "blue-gray",
                                "name": "To Do"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                            "id": "1",
                            "description": "A problem which impairs or prevents the functions of the product.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                            "name": "Bug",
                            "subtask": false,
                            "avatarId": 21133
                        }
                    }
                }
            },
            {
                "id": "12637144",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12637144",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "inwardIssue": {
                    "id": "13437718",
                    "key": "ARROW-16116",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437718",
                    "fields": {
                        "summary": "[C++] Properly handle non-nullable fields in Parquet reading",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                            "id": "1",
                            "description": "A problem which impairs or prevents the functions of the product.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                            "name": "Bug",
                            "subtask": false,
                            "avatarId": 21133
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kaoutherab",
            "name": "kaoutherab",
            "key": "JIRAUSER286638",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
            },
            "displayName": "Kaouther Abrougui",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
            "description": "The issue is open and ready for the assignee to start work on it.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
            "name": "Open",
            "id": "1",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                "id": 2,
                "key": "new",
                "colorName": "blue-gray",
                "name": "To Do"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "aggregateprogress": {
            "progress": 16200,
            "total": 16200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 16200,
            "total": 16200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15961/votes",
            "votes": 2,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 27,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13434418/worklog/747249",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #12706:\nURL: https://github.com/apache/arrow/pull/12706#issuecomment-1077677052\n\n\n   https://issues.apache.org/jira/browse/ARROW-15961\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-24T14:16:49.638+0000",
                    "updated": "2022-03-24T14:16:49.638+0000",
                    "started": "2022-03-24T14:16:49.638+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "747249",
                    "issueId": "13434418"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13434418/worklog/747288",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #12706:\nURL: https://github.com/apache/arrow/pull/12706#discussion_r834439910\n\n\n\n##########\nFile path: cpp/src/arrow/table_test.cc\n##########\n@@ -56,6 +56,22 @@ class TestTable : public ::testing::Test {\n                 std::make_shared<ChunkedArray>(arrays_[2])};\n   }\n \n+  void MakeExample3(int length) {\n+    auto f0 = field(\"f0\", int32(), false);\n+    auto f1 = field(\"f1\", uint8());\n+    auto f2 = field(\"f2\", int16());\n+\n+    std::vector<std::shared_ptr<Field>> fields = {f0, f1, f2};\n+    schema_ = std::make_shared<Schema>(fields);\n+\n+    arrays_ = {gen_.ArrayOf(int32(), length, true), gen_.ArrayOf(uint8(), length),\n\nReview comment:\n       The third parameter here `null_probability` is a `double`, so maybe use `1.0` instead of `true`?\n\n##########\nFile path: cpp/src/arrow/table.cc\n##########\n@@ -200,6 +200,9 @@ class SimpleTable : public Table {\n         ss << \"Column \" << i << \": \" << st.message();\n         return st.WithMessage(ss.str());\n       }\n+      if (!schema_->field(i)->nullable() && col->null_count() > 0){\n+        return Status::Invalid(\"In column \", i, \": Null found but expected non nullable \");\n\nReview comment:\n       ```suggestion\r\n           return Status::Invalid(\"In column \", i, \": Null found but field is not nullable\");\r\n   ```\n\n##########\nFile path: cpp/src/arrow/record_batch_test.cc\n##########\n@@ -89,6 +89,7 @@ TEST_F(TestRecordBatch, Validate) {\n   auto a1 = gen.ArrayOf(uint8(), length);\n   auto a2 = gen.ArrayOf(int16(), length);\n   auto a3 = gen.ArrayOf(int16(), 5);\n+  auto a4 = gen.ArrayOf(int32(), length, true);\n\nReview comment:\n       ```suggestion\r\n     auto a4 = gen.ArrayOf(int32(), length, /*null_probability=*/1.0);\r\n   ```\n\n##########\nFile path: cpp/src/arrow/table_test.cc\n##########\n@@ -65,6 +81,13 @@ class TestTable : public ::testing::Test {\n   std::vector<std::shared_ptr<ChunkedArray>> columns_;\n };\n \n+TEST_F(TestTable, ValidateNullable) {\n+  const int length = 10;\n+  MakeExample3(length);\n+  table_ = Table::Make(schema_, columns_);\n+  ASSERT_RAISES(Invalid, table_->ValidateFull());\n\nReview comment:\n       We can be more precise:\n\n##########\nFile path: cpp/src/arrow/table_test.cc\n##########\n@@ -56,6 +56,22 @@ class TestTable : public ::testing::Test {\n                 std::make_shared<ChunkedArray>(arrays_[2])};\n   }\n \n+  void MakeExample3(int length) {\n+    auto f0 = field(\"f0\", int32(), false);\n+    auto f1 = field(\"f1\", uint8());\n+    auto f2 = field(\"f2\", int16());\n+\n+    std::vector<std::shared_ptr<Field>> fields = {f0, f1, f2};\n+    schema_ = std::make_shared<Schema>(fields);\n+\n+    arrays_ = {gen_.ArrayOf(int32(), length, true), gen_.ArrayOf(uint8(), length),\n\nReview comment:\n       ```suggestion\r\n       arrays_ = {gen_.ArrayOf(int32(), length, /*null_probability=*/1.0), gen_.ArrayOf(uint8(), length),\r\n   ```\n\n##########\nFile path: cpp/src/arrow/record_batch_test.cc\n##########\n@@ -89,6 +89,7 @@ TEST_F(TestRecordBatch, Validate) {\n   auto a1 = gen.ArrayOf(uint8(), length);\n   auto a2 = gen.ArrayOf(int16(), length);\n   auto a3 = gen.ArrayOf(int16(), 5);\n+  auto a4 = gen.ArrayOf(int32(), length, true);\n\nReview comment:\n       Same here\n\n##########\nFile path: cpp/src/arrow/record_batch.cc\n##########\n@@ -313,6 +313,9 @@ Status ValidateBatch(const RecordBatch& batch, bool full_validation) {\n     if (!st.ok()) {\n       return Status::Invalid(\"In column \", i, \": \", st.ToString());\n     }\n+    if (full_validation && !batch.schema()->field(i)->nullable() && array.null_count() > 0) {\n+      return Status::Invalid(\"In column \", i, \": Null found but expected non nullable \");\n\nReview comment:\n       ```suggestion\r\n         return Status::Invalid(\"In column \", i, \": Null found but field is not nullable\");\r\n   ```\n\n##########\nFile path: cpp/src/arrow/table_test.cc\n##########\n@@ -65,6 +81,13 @@ class TestTable : public ::testing::Test {\n   std::vector<std::shared_ptr<ChunkedArray>> columns_;\n };\n \n+TEST_F(TestTable, ValidateNullable) {\n+  const int length = 10;\n+  MakeExample3(length);\n+  table_ = Table::Make(schema_, columns_);\n+  ASSERT_RAISES(Invalid, table_->ValidateFull());\n\nReview comment:\n       (and ditto above)\n\n##########\nFile path: cpp/src/arrow/table_test.cc\n##########\n@@ -65,6 +81,13 @@ class TestTable : public ::testing::Test {\n   std::vector<std::shared_ptr<ChunkedArray>> columns_;\n };\n \n+TEST_F(TestTable, ValidateNullable) {\n+  const int length = 10;\n+  MakeExample3(length);\n+  table_ = Table::Make(schema_, columns_);\n+  ASSERT_RAISES(Invalid, table_->ValidateFull());\n\nReview comment:\n       ```suggestion\r\n     EXPECT_RAISES_WITH_MESSAGE_THAT(Invalid, ::testing::HasSubstr(\"In column 0: Null found but field is not nullable\"), table_->ValidateFull());\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-24T15:34:48.806+0000",
                    "updated": "2022-03-24T15:34:48.806+0000",
                    "started": "2022-03-24T15:34:48.805+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "747288",
                    "issueId": "13434418"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13434418/worklog/748594",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #12706:\nURL: https://github.com/apache/arrow/pull/12706#issuecomment-1080629586\n\n\n   Indeed, need to handle any kind of nested array.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-28T13:10:02.862+0000",
                    "updated": "2022-03-28T13:10:02.862+0000",
                    "started": "2022-03-28T13:10:02.861+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "748594",
                    "issueId": "13434418"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13434418/worklog/750475",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #12706:\nURL: https://github.com/apache/arrow/pull/12706#discussion_r838951164\n\n\n\n##########\nFile path: cpp/src/arrow/array/validate.cc\n##########\n@@ -285,7 +286,7 @@ struct ValidateArrayImpl {\n       const auto& field_data = *data.child_data[i];\n\nReview comment:\n       Line 275 above (FixedSizeListType) could also use validation (in the `RecurseInto` call)\n\n##########\nFile path: cpp/src/arrow/array/array_struct_test.cc\n##########\n@@ -196,6 +196,22 @@ TEST(StructArray, Validate) {\n   ASSERT_RAISES(Invalid, arr->ValidateFull());\n }\n \n+TEST(StructArray, ValidateFullNullable) {\n+  auto type = struct_({field(\"a\", int32(), /*nullable =*/false),\n+                       field(\"b\", utf8(), /*nullable =*/false),\n+                       field(\"c\", list(boolean()), /*nullable =*/false)});\n+\n+  auto struct_arr = std::static_pointer_cast<StructArray>(ArrayFromJSON(\n+      type, R\"([[1, \"a\", [null, false]], [null, \"bc\", []], [2, null, null]])\"));\n+\n+  auto struct_arr_nonull = std::static_pointer_cast<StructArray>(ArrayFromJSON(\n+      type, R\"([[1, \"a\", [true, false]], [6, \"bc\", []], [2, \"bcj\", [true, true]]])\"));\n\nReview comment:\n       Note that there's no need to cast the result, since ValidateFull is a method of the base class.\n\n##########\nFile path: cpp/src/arrow/array/validate.cc\n##########\n@@ -509,22 +510,23 @@ struct ValidateArrayImpl {\n     }\n \n     if (full_validation) {\n-      if (data.null_count != kUnknownNullCount) {\n-        int64_t actual_null_count;\n-        if (HasValidityBitmap(data.type->id()) && data.buffers[0]) {\n-          // Do not call GetNullCount() as it would also set the `null_count` member\n-          actual_null_count = data.length - CountSetBits(data.buffers[0]->data(),\n-                                                         data.offset, data.length);\n-        } else if (data.type->storage_id() == Type::NA) {\n-          actual_null_count = data.length;\n-        } else {\n-          actual_null_count = 0;\n-        }\n-        if (actual_null_count != data.null_count) {\n-          return Status::Invalid(\"null_count value (\", data.null_count,\n-                                 \") doesn't match actual number of nulls in array (\",\n-                                 actual_null_count, \")\");\n-        }\n+      int64_t actual_null_count;\n+      if (HasValidityBitmap(data.type->id()) && data.buffers[0]) {\n+        // Do not call GetNullCount() as it would also set the `null_count` member\n+        actual_null_count =\n+            data.length - CountSetBits(data.buffers[0]->data(), data.offset, data.length);\n+      } else if (data.type->storage_id() == Type::NA) {\n+        actual_null_count = data.length;\n+      } else {\n+        actual_null_count = 0;\n+      }\n+      if (data.null_count != kUnknownNullCount && actual_null_count != data.null_count) {\n+        return Status::Invalid(\"null_count value (\", data.null_count,\n+                               \") doesn't match actual number of nulls in array (\",\n+                               actual_null_count, \")\");\n+      }\n+      if (!nullable && actual_null_count > 0) {\n+        return Status::Invalid(\"Null found but field is not nullable\");\n       }\n     }\n     return Status::OK();\n\nReview comment:\n       Also, line 585 below (in ValidateListLike) has a RecurseInto call that should be updated\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-30T20:56:46.110+0000",
                    "updated": "2022-03-30T20:56:46.110+0000",
                    "started": "2022-03-30T20:56:46.109+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "750475",
                    "issueId": "13434418"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13434418/worklog/751067",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kaoutherab commented on a change in pull request #12706:\nURL: https://github.com/apache/arrow/pull/12706#discussion_r839816527\n\n\n\n##########\nFile path: cpp/src/arrow/array/validate.cc\n##########\n@@ -509,22 +510,23 @@ struct ValidateArrayImpl {\n     }\n \n     if (full_validation) {\n-      if (data.null_count != kUnknownNullCount) {\n-        int64_t actual_null_count;\n-        if (HasValidityBitmap(data.type->id()) && data.buffers[0]) {\n-          // Do not call GetNullCount() as it would also set the `null_count` member\n-          actual_null_count = data.length - CountSetBits(data.buffers[0]->data(),\n-                                                         data.offset, data.length);\n-        } else if (data.type->storage_id() == Type::NA) {\n-          actual_null_count = data.length;\n-        } else {\n-          actual_null_count = 0;\n-        }\n-        if (actual_null_count != data.null_count) {\n-          return Status::Invalid(\"null_count value (\", data.null_count,\n-                                 \") doesn't match actual number of nulls in array (\",\n-                                 actual_null_count, \")\");\n-        }\n+      int64_t actual_null_count;\n+      if (HasValidityBitmap(data.type->id()) && data.buffers[0]) {\n+        // Do not call GetNullCount() as it would also set the `null_count` member\n+        actual_null_count =\n+            data.length - CountSetBits(data.buffers[0]->data(), data.offset, data.length);\n+      } else if (data.type->storage_id() == Type::NA) {\n+        actual_null_count = data.length;\n+      } else {\n+        actual_null_count = 0;\n+      }\n+      if (data.null_count != kUnknownNullCount && actual_null_count != data.null_count) {\n+        return Status::Invalid(\"null_count value (\", data.null_count,\n+                               \") doesn't match actual number of nulls in array (\",\n+                               actual_null_count, \")\");\n+      }\n+      if (!nullable && actual_null_count > 0) {\n+        return Status::Invalid(\"Null found but field is not nullable\");\n       }\n     }\n     return Status::OK();\n\nReview comment:\n       This is already covered in this PR (for \"ValidateListLike\").\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-31T16:40:01.887+0000",
                    "updated": "2022-03-31T16:40:01.887+0000",
                    "started": "2022-03-31T16:40:01.886+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "751067",
                    "issueId": "13434418"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13434418/worklog/751068",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #12706:\nURL: https://github.com/apache/arrow/pull/12706#discussion_r839817636\n\n\n\n##########\nFile path: cpp/src/arrow/array/validate.cc\n##########\n@@ -509,22 +510,23 @@ struct ValidateArrayImpl {\n     }\n \n     if (full_validation) {\n-      if (data.null_count != kUnknownNullCount) {\n-        int64_t actual_null_count;\n-        if (HasValidityBitmap(data.type->id()) && data.buffers[0]) {\n-          // Do not call GetNullCount() as it would also set the `null_count` member\n-          actual_null_count = data.length - CountSetBits(data.buffers[0]->data(),\n-                                                         data.offset, data.length);\n-        } else if (data.type->storage_id() == Type::NA) {\n-          actual_null_count = data.length;\n-        } else {\n-          actual_null_count = 0;\n-        }\n-        if (actual_null_count != data.null_count) {\n-          return Status::Invalid(\"null_count value (\", data.null_count,\n-                                 \") doesn't match actual number of nulls in array (\",\n-                                 actual_null_count, \")\");\n-        }\n+      int64_t actual_null_count;\n+      if (HasValidityBitmap(data.type->id()) && data.buffers[0]) {\n+        // Do not call GetNullCount() as it would also set the `null_count` member\n+        actual_null_count =\n+            data.length - CountSetBits(data.buffers[0]->data(), data.offset, data.length);\n+      } else if (data.type->storage_id() == Type::NA) {\n+        actual_null_count = data.length;\n+      } else {\n+        actual_null_count = 0;\n+      }\n+      if (data.null_count != kUnknownNullCount && actual_null_count != data.null_count) {\n+        return Status::Invalid(\"null_count value (\", data.null_count,\n+                               \") doesn't match actual number of nulls in array (\",\n+                               actual_null_count, \")\");\n+      }\n+      if (!nullable && actual_null_count > 0) {\n+        return Status::Invalid(\"Null found but field is not nullable\");\n       }\n     }\n     return Status::OK();\n\nReview comment:\n       Ah, sorry, somehow I missed that. Thanks\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-31T16:40:54.781+0000",
                    "updated": "2022-03-31T16:40:54.781+0000",
                    "started": "2022-03-31T16:40:54.781+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "751068",
                    "issueId": "13434418"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13434418/worklog/751069",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #12706:\nURL: https://github.com/apache/arrow/pull/12706#discussion_r839818210\n\n\n\n##########\nFile path: cpp/src/arrow/array/array_test.cc\n##########\n@@ -78,6 +78,14 @@ class TestArray : public ::testing::Test {\n   MemoryPool* pool_;\n };\n \n+\n+TEST_F(TestArray, ValidateFullNullable) {\n+  auto f1 = field(\"f1\", int32(), /*nullable=*/false);\n+  auto type1 = std::make_shared<ListType>(f1);\n\nReview comment:\n       nit: just use `auto ty = list(f1);`\n\n##########\nFile path: cpp/src/arrow/array/validate.cc\n##########\n@@ -580,7 +582,7 @@ struct ValidateArrayImpl {\n   template <typename ListType>\n   Status ValidateListLike(const ListType& type) {\n     const ArrayData& values = *data.child_data[0];\n-    const Status child_valid = RecurseInto(values);\n+    const Status child_valid = RecurseInto(values, /**/type.value_field()->nullable());\n\nReview comment:\n       ```suggestion\r\n       const Status child_valid = RecurseInto(values, type.value_field()->nullable());\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-31T16:42:17.686+0000",
                    "updated": "2022-03-31T16:42:17.686+0000",
                    "started": "2022-03-31T16:42:17.686+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "751069",
                    "issueId": "13434418"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13434418/worklog/751646",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #12706:\nURL: https://github.com/apache/arrow/pull/12706#discussion_r840730671\n\n\n\n##########\nFile path: cpp/src/arrow/array/array_test.cc\n##########\n@@ -78,6 +78,25 @@ class TestArray : public ::testing::Test {\n   MemoryPool* pool_;\n };\n \n+TEST_F(TestArray, ValidateFullNullableList) {\n+  auto f1 = field(\"f1\", int32(), /*nullable=*/false);\n+  auto type1 = std::make_shared<ListType>(f1);\n\nReview comment:\n       ```suggestion\r\n   ```\n\n##########\nFile path: cpp/src/arrow/array/array_test.cc\n##########\n@@ -78,6 +78,25 @@ class TestArray : public ::testing::Test {\n   MemoryPool* pool_;\n };\n \n+TEST_F(TestArray, ValidateFullNullableList) {\n+  auto f1 = field(\"f1\", int32(), /*nullable=*/false);\n+  auto type1 = std::make_shared<ListType>(f1);\n+  auto ty = list(f1);\n+  auto array = ArrayFromJSON(ty, \"[[0, 1, 2, null], null, [4, 5]]\");\n+  ASSERT_RAISES(Invalid, array->ValidateFull());\n+}\n+\n+TEST_F(TestArray, ValidateFullNullableFixedSizeList) {\n+  auto f0 = field(\"f0\", int32(), /*nullable=*/false);\n+  auto type = std::make_shared<FixedSizeListType>(f0, 2);\n\nReview comment:\n       ```suggestion\r\n     auto type = fixed_size_list(f0, 2);\r\n   ```\n\n##########\nFile path: cpp/src/arrow/array/array_test.cc\n##########\n@@ -78,6 +78,25 @@ class TestArray : public ::testing::Test {\n   MemoryPool* pool_;\n };\n \n+TEST_F(TestArray, ValidateFullNullableList) {\n+  auto f1 = field(\"f1\", int32(), /*nullable=*/false);\n+  auto type1 = std::make_shared<ListType>(f1);\n\nReview comment:\n       This line looks redundant?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-04-01T16:10:55.911+0000",
                    "updated": "2022-04-01T16:10:55.911+0000",
                    "started": "2022-04-01T16:10:55.910+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "751646",
                    "issueId": "13434418"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13434418/worklog/751647",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #12706:\nURL: https://github.com/apache/arrow/pull/12706#issuecomment-1086098769\n\n\n   We do have to decide what to do about the Parquet tests, though\u2026\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-04-01T16:11:09.351+0000",
                    "updated": "2022-04-01T16:11:09.351+0000",
                    "started": "2022-04-01T16:11:09.351+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "751647",
                    "issueId": "13434418"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13434418/worklog/751662",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kaoutherab commented on a change in pull request #12706:\nURL: https://github.com/apache/arrow/pull/12706#discussion_r840740501\n\n\n\n##########\nFile path: cpp/src/arrow/array/array_test.cc\n##########\n@@ -78,6 +78,25 @@ class TestArray : public ::testing::Test {\n   MemoryPool* pool_;\n };\n \n+TEST_F(TestArray, ValidateFullNullableList) {\n+  auto f1 = field(\"f1\", int32(), /*nullable=*/false);\n+  auto type1 = std::make_shared<ListType>(f1);\n\nReview comment:\n       yup, type1 is not used anymore.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-04-01T16:21:09.304+0000",
                    "updated": "2022-04-01T16:21:09.304+0000",
                    "started": "2022-04-01T16:21:09.304+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "751662",
                    "issueId": "13434418"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13434418/worklog/751806",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #12706:\nURL: https://github.com/apache/arrow/pull/12706#issuecomment-1086345959\n\n\n   So the Parquet tests are now failing, example: https://github.com/apache/arrow/blob/623a15e7f7a45578733956714c8dddcc9f66f015/cpp/src/parquet/arrow/arrow_reader_writer_test.cc#L2816-L2830\r\n   \r\n   It seems we (understandably) ignore the child array slots corresponding to top-level nulls, either on writing or on reading Parquet, but of course if the child field is marked non-nullable this becomes a problem now that we're validating this fact. \r\n   \r\n   Example in Python:\r\n   \r\n   ```python\r\n   >>> import pyarrow as pa\r\n   >>> import pyarrow.parquet as pq\r\n   >>> ints = pa.array([1,2,3,4,5,6,7,8])\r\n   >>> struct = pa.StructArray.from_arrays([ints], fields=[pa.field(\"ints\", pa.int64(), nullable=False)], mask=pa.array([True, True, False, False, True, True, True, True]))\r\n   >>> struct\r\n   <pyarrow.lib.StructArray object at 0x7fe5bc16a440>\r\n   -- is_valid:\r\n     [\r\n       false,\r\n       false,\r\n       true,\r\n       true,\r\n       false,\r\n       false,\r\n       false,\r\n       false\r\n     ]\r\n   -- child 0 type: int64\r\n     [\r\n       1,\r\n       2,\r\n       3,\r\n       4,\r\n       5,\r\n       6,\r\n       7,\r\n       8\r\n     ]\r\n   >>> table = pa.table([struct], names=[\"struct\"])\r\n   >>> pq.write_table(table, \"test.parquet\")\r\n   >>> pq.read_table(\"test.parquet\")\r\n   pyarrow.Table\r\n   struct: struct<ints: int64 not null>\r\n     child 0, ints: int64 not null\r\n   ----\r\n   struct: [  -- is_valid:      [\r\n         false,\r\n         false,\r\n         true,\r\n         true,\r\n         false,\r\n         false,\r\n         false,\r\n         false\r\n       ]  -- child 0 type: int64\r\n       [\r\n         null,\r\n         null,\r\n         3,\r\n         4,\r\n         null,\r\n         null,\r\n         null,\r\n         null\r\n       ]]\r\n   >>> table\r\n   pyarrow.Table\r\n   struct: struct<ints: int64 not null>\r\n     child 0, ints: int64 not null\r\n   ----\r\n   struct: [  -- is_valid:      [\r\n         false,\r\n         false,\r\n         true,\r\n         true,\r\n         false,\r\n         false,\r\n         false,\r\n         false\r\n       ]  -- child 0 type: int64\r\n       [\r\n         1,\r\n         2,\r\n         3,\r\n         4,\r\n         5,\r\n         6,\r\n         7,\r\n         8\r\n       ]]\r\n   ```\r\n   \r\n   It _seems_ this is done on write, looking at the underlying column:\r\n   \r\n   ```python\r\n   >>> pq.read_metadata(\"test.parquet\").row_group(0).column(0).statistics\r\n   <pyarrow._parquet.Statistics object at 0x7fe5bc1d74c0>\r\n     has_min_max: True\r\n     min: 3\r\n     max: 4\r\n     null_count: 6\r\n     distinct_count: 0\r\n     num_values: 2\r\n     physical_type: INT64\r\n     logical_type: None\r\n     converted_type (legacy): NONE\r\n   ```\r\n   \r\n   @pitrou @emkornfield am I understanding this right? It seems we either need to write out the values of child arrays behind null slots, or fill in some value on read?\r\n   \r\n   Just for fun, Feather appears to handle this correctly:\r\n   \r\n   ```python\r\n   >>> import pyarrow as pa\r\n   >>> import pyarrow.feather as pf\r\n   >>> ints = pa.array([1,2,3,4,5,6,7,8])\r\n   >>> struct = pa.StructArray.from_arrays([ints], fields=[pa.field(\"ints\", pa.int64(), nullable=False)], mask=pa.array([True, True, False, False, True, True, True, True]))\r\n   >>> table = pa.table([struct], names=[\"struct\"])\r\n   >>> pf.write_feather(table, \"test.feather\")\r\n   >>> pf.read_table(\"test.feather\")\r\n   pyarrow.Table\r\n   struct: struct<ints: int64 not null>\r\n     child 0, ints: int64 not null\r\n   ----\r\n   struct: [  -- is_valid:      [\r\n         false,\r\n         false,\r\n         true,\r\n         true,\r\n         false,\r\n         false,\r\n         false,\r\n         false\r\n       ]  -- child 0 type: int64\r\n       [\r\n         1,\r\n         2,\r\n         3,\r\n         4,\r\n         5,\r\n         6,\r\n         7,\r\n         8\r\n       ]]\r\n   ```\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-04-01T21:34:18.555+0000",
                    "updated": "2022-04-01T21:34:18.555+0000",
                    "started": "2022-04-01T21:34:18.555+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "751806",
                    "issueId": "13434418"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13434418/worklog/751811",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #12706:\nURL: https://github.com/apache/arrow/pull/12706#issuecomment-1086357554\n\n\n   > @pitrou @emkornfield am I understanding this right? It seems we either need to write out the values of child arrays behind null slots, or fill in some value on read?\r\n   \r\n   Yes, if it required will need to make sure the children are not null.  I'm not surprised feather works because that is just serialized the record batch in place.  Parquet only stores non-null values.  Probably the element of least surprise here would be to only fill values for non-nullable columns (and leave existing behavior in for nullable).\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-04-01T21:50:50.731+0000",
                    "updated": "2022-04-01T21:50:50.731+0000",
                    "started": "2022-04-01T21:50:50.731+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "751811",
                    "issueId": "13434418"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13434418/worklog/752216",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on PR #12706:\nURL: https://github.com/apache/arrow/pull/12706#issuecomment-1087474588\n\n   See https://github.com/kaoutherab/arrow/pull/1 for an attempt at this, though I think we're going to want to go and test each type specifically for this case.\n\n\n",
                    "created": "2022-04-04T12:08:49.576+0000",
                    "updated": "2022-04-04T12:08:49.576+0000",
                    "started": "2022-04-04T12:08:49.575+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "752216",
                    "issueId": "13434418"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13434418/worklog/752391",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on PR #12706:\nURL: https://github.com/apache/arrow/pull/12706#issuecomment-1087820606\n\n   Thinking about this I don't think we should merge this right before the release, unless we can fix the underlying issue for parquet.\n\n\n",
                    "created": "2022-04-04T17:26:17.352+0000",
                    "updated": "2022-04-04T17:26:17.352+0000",
                    "started": "2022-04-04T17:26:17.351+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "752391",
                    "issueId": "13434418"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13434418/worklog/752512",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on PR #12706:\nURL: https://github.com/apache/arrow/pull/12706#issuecomment-1088024210\n\n   Hmm, fair. I filed ARROW-16116\n\n\n",
                    "created": "2022-04-04T21:20:14.584+0000",
                    "updated": "2022-04-04T21:20:14.584+0000",
                    "started": "2022-04-04T21:20:14.584+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "752512",
                    "issueId": "13434418"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13434418/worklog/754261",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on PR #12706:\nURL: https://github.com/apache/arrow/pull/12706#issuecomment-1092020432\n\n   See #12829 for an attempt at fixing the Parquet issue properly\n\n\n",
                    "created": "2022-04-07T17:41:57.830+0000",
                    "updated": "2022-04-07T17:41:57.830+0000",
                    "started": "2022-04-07T17:41:57.830+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "754261",
                    "issueId": "13434418"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13434418/worklog/765975",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on PR #12706:\nURL: https://github.com/apache/arrow/pull/12706#issuecomment-1117305934\n\n   @kaoutherab try rebasing this PR now (but omitting the last commit to avoid conflicts)\n\n\n",
                    "created": "2022-05-04T13:20:23.694+0000",
                    "updated": "2022-05-04T13:20:23.694+0000",
                    "started": "2022-05-04T13:20:23.694+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "765975",
                    "issueId": "13434418"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13434418/worklog/779159",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on PR #12706:\nURL: https://github.com/apache/arrow/pull/12706#issuecomment-1148854709\n\n   Rebased.\n\n\n",
                    "created": "2022-06-07T15:51:44.984+0000",
                    "updated": "2022-06-07T15:51:44.984+0000",
                    "started": "2022-06-07T15:51:44.983+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "779159",
                    "issueId": "13434418"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13434418/worklog/779164",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #12706:\nURL: https://github.com/apache/arrow/pull/12706#discussion_r891411396\n\n\n##########\ncpp/src/arrow/array/array_test.cc:\n##########\n@@ -78,6 +78,24 @@ class TestArray : public ::testing::Test {\n   MemoryPool* pool_;\n };\n \n+TEST_F(TestArray, ValidateFullNullableList) {\n+  auto f1 = field(\"f1\", int32(), /*nullable=*/false);\n+  auto ty = list(f1);\n+  auto array = ArrayFromJSON(ty, \"[[0, 1, 2, null], null, [4, 5]]\");\n+  ASSERT_RAISES(Invalid, array->ValidateFull());\n+}\n+\n+TEST_F(TestArray, ValidateFullNullableFixedSizeList) {\n+  auto f0 = field(\"f0\", int32(), /*nullable=*/false);\n+  auto type = fixed_size_list(f0, 2);\n+  auto array_nonull = ArrayFromJSON(type, \"[[0, 1], [3,4], [2, 3]]\");\n+  auto array = ArrayFromJSON(type, \"[[0, 1], null, [2, 5]]\");\n\nReview Comment:\n   Hmm... the fact that this doesn't validate is more due to an implementation detail of `ArrayFromJSON`, I think.\n\n\n\n",
                    "created": "2022-06-07T15:55:47.953+0000",
                    "updated": "2022-06-07T15:55:47.953+0000",
                    "started": "2022-06-07T15:55:47.952+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "779164",
                    "issueId": "13434418"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13434418/worklog/779165",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #12706:\nURL: https://github.com/apache/arrow/pull/12706#discussion_r891411779\n\n\n##########\ncpp/src/arrow/array/array_test.cc:\n##########\n@@ -78,6 +78,24 @@ class TestArray : public ::testing::Test {\n   MemoryPool* pool_;\n };\n \n+TEST_F(TestArray, ValidateFullNullableList) {\n+  auto f1 = field(\"f1\", int32(), /*nullable=*/false);\n+  auto ty = list(f1);\n+  auto array = ArrayFromJSON(ty, \"[[0, 1, 2, null], null, [4, 5]]\");\n+  ASSERT_RAISES(Invalid, array->ValidateFull());\n\nReview Comment:\n   Can we split the checks between nested nulls and toplevel nulls just like below?\n\n\n\n",
                    "created": "2022-06-07T15:56:07.815+0000",
                    "updated": "2022-06-07T15:56:07.815+0000",
                    "started": "2022-06-07T15:56:07.814+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "779165",
                    "issueId": "13434418"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 16200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@7e97d1af[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3b966e6d[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1599eadb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@1df41b03[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@a0e30b6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@45991279[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1f0ce723[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@229dcbc2[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@596dd4a7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@54ea1f29[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2ca7df68[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@6028c2e5[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 16200,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Jul 25 08:03:58 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": null,
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15961/watchers",
            "watchCount": 4,
            "isWatching": false
        },
        "created": "2022-03-17T17:02:34.000+0000",
        "updated": "2022-10-06T09:22:45.000+0000",
        "timeoriginalestimate": null,
        "description": "According to ARROW-15899, it is possible to declare a field non-nullable, associate with data that has nulls, and still pass validation.\r\n\r\nValidation should instead fail in such a situation (at least full validation, since computing the null count can be O\\(n\\)).",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "4.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 16200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Check nullability when validating fields on batches or struct arrays",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13434418/comment/17508301",
                    "id": "17508301",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "cc [~alvinj15]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2022-03-17T17:03:20.621+0000",
                    "updated": "2022-03-17T17:03:20.621+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13434418/comment/17525949",
                    "id": "17525949",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "body": "Postponing to 9.0 based on the PR comments.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "created": "2022-04-21T18:28:01.944+0000",
                    "updated": "2022-04-21T18:28:01.944+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13434418/comment/17570759",
                    "id": "17570759",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "body": "Moving to 10.0 since the PR is in progress.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "created": "2022-07-25T08:03:58.686+0000",
                    "updated": "2022-07-25T08:03:58.686+0000"
                }
            ],
            "maxResults": 3,
            "total": 3,
            "startAt": 0
        },
        "customfield_12311820": "0|z10l8g:",
        "customfield_12314139": null
    }
}