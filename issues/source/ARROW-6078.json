{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13247993",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247993",
    "key": "ARROW-6078",
    "fields": {
        "parent": {
            "id": "13084069",
            "key": "ARROW-1175",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/13084069",
            "fields": {
                "summary": "[Java] Implement/test dictionary-encoded subfields",
                "status": {
                    "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                    "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                    "name": "Resolved",
                    "id": "5",
                    "statusCategory": {
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                        "id": 3,
                        "key": "done",
                        "colorName": "green",
                        "name": "Done"
                    }
                },
                "priority": {
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                    "name": "Major",
                    "id": "3"
                },
                "issuetype": {
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                    "id": "4",
                    "description": "An improvement or enhancement to an existing feature or task.",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                    "name": "Improvement",
                    "subtask": false,
                    "avatarId": 21140
                }
            }
        },
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
            "name": "tianchen92",
            "key": "tianchen92",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
            },
            "displayName": "Ji Liu",
            "active": true,
            "timeZone": "Asia/Gaza"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
            "name": "tianchen92",
            "key": "tianchen92",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
            },
            "displayName": "Ji Liu",
            "active": true,
            "timeZone": "Asia/Gaza"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
            "name": "tianchen92",
            "key": "tianchen92",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
            },
            "displayName": "Ji Liu",
            "active": true,
            "timeZone": "Asia/Gaza"
        },
        "aggregateprogress": {
            "progress": 37800,
            "total": 37800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 37800,
            "total": 37800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6078/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 64,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247993/worklog/285503",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4972: ARROW-6078: [Java] Implement dictionary-encoded subfields for List type\nURL: https://github.com/apache/arrow/pull/4972\n \n \n   Related to [ARROW-6078](https://issues.apache.org/jira/browse/ARROW-6078).\r\n   For example, int type List (valueCount = 5) has data like below:\r\n   10, 20\r\n   10, 20\r\n   30, 40, 50\r\n   30, 40, 50\r\n   10, 20\r\n   could be encoded to:\r\n   0, 1\r\n   0, 1\r\n   2, 3, 4\r\n   2, 3, 4\r\n   0, 1\r\n   with list type dictionary\r\n   10, 20, 30, 40, 50\r\n   or\r\n   10,\r\n   20,\r\n   30,\r\n   40,\r\n   50\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-31T04:41:29.987+0000",
                    "updated": "2019-07-31T04:41:29.987+0000",
                    "started": "2019-07-31T04:41:29.986+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "285503",
                    "issueId": "13247993"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247993/worklog/285559",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4972: ARROW-6078: [Java] Implement dictionary-encoded subfields for List type\nURL: https://github.com/apache/arrow/pull/4972#issuecomment-516735984\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4972?src=pr&el=h1) Report\n   > Merging [#4972](https://codecov.io/gh/apache/arrow/pull/4972?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/803dd89463cb6cfdeffb8ae4bb1555b75ca1b544?src=pr&el=desc) will **increase** coverage by `2.14%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4972/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4972?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4972      +/-   ##\n   ==========================================\n   + Coverage   87.55%   89.69%   +2.14%     \n   ==========================================\n     Files        1000      665     -335     \n     Lines      142303    97936   -44367     \n     Branches     1418        0    -1418     \n   ==========================================\n   - Hits       124589    87843   -36746     \n   + Misses      17352    10093    -7259     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4972?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [r/src/recordbatch.cpp](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-ci9zcmMvcmVjb3JkYmF0Y2guY3Bw) | | |\n   | [r/R/Table.R](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-ci9SL1RhYmxlLlI=) | | |\n   | [js/src/util/fn.ts](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-anMvc3JjL3V0aWwvZm4udHM=) | | |\n   | [go/arrow/array/bufferbuilder.go](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYnVmZmVyYnVpbGRlci5nbw==) | | |\n   | [r/src/symbols.cpp](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-ci9zcmMvc3ltYm9scy5jcHA=) | | |\n   | [rust/datafusion/src/execution/projection.rs](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vcHJvamVjdGlvbi5ycw==) | | |\n   | [rust/datafusion/src/execution/filter.rs](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vZmlsdGVyLnJz) | | |\n   | [rust/arrow/src/csv/writer.rs](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvY3N2L3dyaXRlci5ycw==) | | |\n   | [rust/datafusion/src/bin/main.rs](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9iaW4vbWFpbi5ycw==) | | |\n   | [go/arrow/ipc/file\\_reader.go](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaXBjL2ZpbGVfcmVhZGVyLmdv) | | |\n   | ... and [325 more](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4972?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4972?src=pr&el=footer). Last update [803dd89...6bfc43f](https://codecov.io/gh/apache/arrow/pull/4972?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-31T07:41:36.347+0000",
                    "updated": "2019-07-31T07:41:36.347+0000",
                    "started": "2019-07-31T07:41:36.347+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "285559",
                    "issueId": "13247993"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247993/worklog/291766",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4972: ARROW-6078: [Java] Implement dictionary-encoded subfields for List type\nURL: https://github.com/apache/arrow/pull/4972#discussion_r312319823\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/TestDictionaryVector.java\n ##########\n @@ -576,6 +577,125 @@ public void testUnionEquals() {\n     }\n   }\n \n+  @Test\n+  public void testEncodeListSubField() {\n+    // Create a new value vector\n+    try (final ListVector vector = ListVector.empty(\"vector\", allocator);\n+        final ListVector dictionaryVector = ListVector.empty(\"dict\", allocator);) {\n+\n+      UnionListWriter writer = vector.getWriter();\n+      writer.allocate();\n+\n+      //set some values\n+      writeListVector(writer, new int[]{10, 20});\n+      writeListVector(writer, new int[]{10, 20});\n+      writeListVector(writer, new int[]{10, 20});\n+      writeListVector(writer, new int[]{30, 40, 50});\n+      writeListVector(writer, new int[]{30, 40, 50});\n+      writeListVector(writer, new int[]{10, 20});\n+      writer.setValueCount(6);\n+\n+      UnionListWriter dictWriter = dictionaryVector.getWriter();\n+      dictWriter.allocate();\n+      writeListVector(dictWriter, new int[]{10, 20, 30, 40, 50});\n+      dictionaryVector.setValueCount(1);\n+\n+      Dictionary dictionary = new Dictionary(dictionaryVector, new DictionaryEncoding(1L, false, null));\n+\n+      try (final ListVector encoded =\n+          (ListVector) DictionaryEncoder.encodeSubField(vector, dictionary)) {\n+        // verify indices\n+        assertEquals(ListVector.class, encoded.getClass());\n+\n+        assertEquals(6, encoded.getValueCount());\n+        assertEquals(\"[0,1]\", encoded.getObject(0).toString());\n \n Review comment:\n   this seems fragile can you compare lists instead?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T03:42:45.315+0000",
                    "updated": "2019-08-09T03:42:45.315+0000",
                    "started": "2019-08-09T03:42:45.314+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291766",
                    "issueId": "13247993"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247993/worklog/291768",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4972: ARROW-6078: [Java] Implement dictionary-encoded subfields for List type\nURL: https://github.com/apache/arrow/pull/4972#discussion_r312320851\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/dictionary/ListSubfieldEncoder.java\n ##########\n @@ -0,0 +1,184 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.dictionary;\n+\n+import org.apache.arrow.vector.BaseIntVector;\n+import org.apache.arrow.vector.BitVectorHelper;\n+import org.apache.arrow.vector.ValueVector;\n+import org.apache.arrow.vector.complex.BaseRepeatedValueVector;\n+import org.apache.arrow.vector.complex.FixedSizeListVector;\n+import org.apache.arrow.vector.complex.ListVector;\n+import org.apache.arrow.vector.types.pojo.Field;\n+import org.apache.arrow.vector.types.pojo.FieldType;\n+import org.apache.arrow.vector.util.TransferPair;\n+\n+/**\n+ * Sub fields encoder/decoder for Dictionary encoded {@link ListVector} and {@link FixedSizeListVector}.\n+ */\n+public class ListSubfieldEncoder {\n+\n+  static ValueVector encodeFixedSizeListSubField(ValueVector v, Dictionary dictionary) {\n+    FixedSizeListVector vector = (FixedSizeListVector) v;\n+    FixedSizeListVector dictVector = (FixedSizeListVector) dictionary.getVector();\n+    final int listSize = vector.getListSize();\n+\n+    DictionaryHashTable hashTable = new DictionaryHashTable(dictVector.getDataVector());\n+    for (int i = 0; i < dictVector.getDataVector().getValueCount(); i++) {\n+      hashTable.put(i);\n+    }\n+\n+    Field valueField = vector.getField();\n+    FieldType indexFieldType = new FieldType(valueField.isNullable(), dictionary.getEncoding().getIndexType(),\n+        dictionary.getEncoding(), valueField.getMetadata());\n+\n+    FixedSizeListVector encoded = FixedSizeListVector.empty(vector.getName(), listSize, vector.getAllocator());\n+    encoded.allocateNewSafe();\n+    encoded.setValueCount(vector.getValueCount());\n+    BaseIntVector indices = (BaseIntVector) encoded.addOrGetVector(indexFieldType).getVector();\n+\n+\n+    for (int i = 0; i < v.getValueCount(); i++) {\n+      if (!vector.isNull(i)) {\n+        int start = i * listSize;\n+        int end = (i + 1) * listSize;\n+        ValueVector dataVector = vector.getDataVector();\n+\n+        BitVectorHelper.setValidityBitToOne(encoded.getValidityBuffer(), i);\n \n Review comment:\n   can you just copy the buffer directly?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T03:51:04.356+0000",
                    "updated": "2019-08-09T03:51:04.356+0000",
                    "started": "2019-08-09T03:51:04.355+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291768",
                    "issueId": "13247993"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247993/worklog/291769",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4972: ARROW-6078: [Java] Implement dictionary-encoded subfields for List type\nURL: https://github.com/apache/arrow/pull/4972#discussion_r312320901\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/dictionary/ListSubfieldEncoder.java\n ##########\n @@ -0,0 +1,184 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.dictionary;\n+\n+import org.apache.arrow.vector.BaseIntVector;\n+import org.apache.arrow.vector.BitVectorHelper;\n+import org.apache.arrow.vector.ValueVector;\n+import org.apache.arrow.vector.complex.BaseRepeatedValueVector;\n+import org.apache.arrow.vector.complex.FixedSizeListVector;\n+import org.apache.arrow.vector.complex.ListVector;\n+import org.apache.arrow.vector.types.pojo.Field;\n+import org.apache.arrow.vector.types.pojo.FieldType;\n+import org.apache.arrow.vector.util.TransferPair;\n+\n+/**\n+ * Sub fields encoder/decoder for Dictionary encoded {@link ListVector} and {@link FixedSizeListVector}.\n+ */\n+public class ListSubfieldEncoder {\n+\n+  static ValueVector encodeFixedSizeListSubField(ValueVector v, Dictionary dictionary) {\n+    FixedSizeListVector vector = (FixedSizeListVector) v;\n+    FixedSizeListVector dictVector = (FixedSizeListVector) dictionary.getVector();\n+    final int listSize = vector.getListSize();\n+\n+    DictionaryHashTable hashTable = new DictionaryHashTable(dictVector.getDataVector());\n+    for (int i = 0; i < dictVector.getDataVector().getValueCount(); i++) {\n+      hashTable.put(i);\n+    }\n+\n+    Field valueField = vector.getField();\n+    FieldType indexFieldType = new FieldType(valueField.isNullable(), dictionary.getEncoding().getIndexType(),\n+        dictionary.getEncoding(), valueField.getMetadata());\n+\n+    FixedSizeListVector encoded = FixedSizeListVector.empty(vector.getName(), listSize, vector.getAllocator());\n+    encoded.allocateNewSafe();\n+    encoded.setValueCount(vector.getValueCount());\n+    BaseIntVector indices = (BaseIntVector) encoded.addOrGetVector(indexFieldType).getVector();\n+\n+\n+    for (int i = 0; i < v.getValueCount(); i++) {\n+      if (!vector.isNull(i)) {\n+        int start = i * listSize;\n+        int end = (i + 1) * listSize;\n+        ValueVector dataVector = vector.getDataVector();\n+\n+        BitVectorHelper.setValidityBitToOne(encoded.getValidityBuffer(), i);\n+        for (int k = start; k < end; k++) {\n \n Review comment:\n   doesn't this duplicate logic from the normal encode?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T03:51:25.028+0000",
                    "updated": "2019-08-09T03:51:25.028+0000",
                    "started": "2019-08-09T03:51:25.028+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291769",
                    "issueId": "13247993"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247993/worklog/291770",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4972: ARROW-6078: [Java] Implement dictionary-encoded subfields for List type\nURL: https://github.com/apache/arrow/pull/4972#discussion_r312321014\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/dictionary/ListSubfieldEncoder.java\n ##########\n @@ -0,0 +1,184 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.dictionary;\n+\n+import org.apache.arrow.vector.BaseIntVector;\n+import org.apache.arrow.vector.BitVectorHelper;\n+import org.apache.arrow.vector.ValueVector;\n+import org.apache.arrow.vector.complex.BaseRepeatedValueVector;\n+import org.apache.arrow.vector.complex.FixedSizeListVector;\n+import org.apache.arrow.vector.complex.ListVector;\n+import org.apache.arrow.vector.types.pojo.Field;\n+import org.apache.arrow.vector.types.pojo.FieldType;\n+import org.apache.arrow.vector.util.TransferPair;\n+\n+/**\n+ * Sub fields encoder/decoder for Dictionary encoded {@link ListVector} and {@link FixedSizeListVector}.\n+ */\n+public class ListSubfieldEncoder {\n+\n+  static ValueVector encodeFixedSizeListSubField(ValueVector v, Dictionary dictionary) {\n \n Review comment:\n   is it possible to make FixedSizeList and BaseRepeatedField inherit from a common interface to the logic can be made more generic?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T03:52:18.711+0000",
                    "updated": "2019-08-09T03:52:18.711+0000",
                    "started": "2019-08-09T03:52:18.709+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291770",
                    "issueId": "13247993"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247993/worklog/292172",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4972: ARROW-6078: [Java] Implement dictionary-encoded subfields for List type\nURL: https://github.com/apache/arrow/pull/4972#discussion_r312568465\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/dictionary/ListSubfieldEncoder.java\n ##########\n @@ -0,0 +1,184 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.dictionary;\n+\n+import org.apache.arrow.vector.BaseIntVector;\n+import org.apache.arrow.vector.BitVectorHelper;\n+import org.apache.arrow.vector.ValueVector;\n+import org.apache.arrow.vector.complex.BaseRepeatedValueVector;\n+import org.apache.arrow.vector.complex.FixedSizeListVector;\n+import org.apache.arrow.vector.complex.ListVector;\n+import org.apache.arrow.vector.types.pojo.Field;\n+import org.apache.arrow.vector.types.pojo.FieldType;\n+import org.apache.arrow.vector.util.TransferPair;\n+\n+/**\n+ * Sub fields encoder/decoder for Dictionary encoded {@link ListVector} and {@link FixedSizeListVector}.\n+ */\n+public class ListSubfieldEncoder {\n+\n+  static ValueVector encodeFixedSizeListSubField(ValueVector v, Dictionary dictionary) {\n \n Review comment:\n   Now BaseRepeatedValueVector only extended by ListVector, I think may be we could make FixedSizeList inherit from this class without adding a new one? I'll think about this tomorrow\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T17:05:15.309+0000",
                    "updated": "2019-08-09T17:05:15.309+0000",
                    "started": "2019-08-09T17:05:15.309+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "292172",
                    "issueId": "13247993"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247993/worklog/292171",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4972: ARROW-6078: [Java] Implement dictionary-encoded subfields for List type\nURL: https://github.com/apache/arrow/pull/4972#discussion_r312569544\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/dictionary/ListSubfieldEncoder.java\n ##########\n @@ -0,0 +1,184 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.dictionary;\n+\n+import org.apache.arrow.vector.BaseIntVector;\n+import org.apache.arrow.vector.BitVectorHelper;\n+import org.apache.arrow.vector.ValueVector;\n+import org.apache.arrow.vector.complex.BaseRepeatedValueVector;\n+import org.apache.arrow.vector.complex.FixedSizeListVector;\n+import org.apache.arrow.vector.complex.ListVector;\n+import org.apache.arrow.vector.types.pojo.Field;\n+import org.apache.arrow.vector.types.pojo.FieldType;\n+import org.apache.arrow.vector.util.TransferPair;\n+\n+/**\n+ * Sub fields encoder/decoder for Dictionary encoded {@link ListVector} and {@link FixedSizeListVector}.\n+ */\n+public class ListSubfieldEncoder {\n+\n+  static ValueVector encodeFixedSizeListSubField(ValueVector v, Dictionary dictionary) {\n+    FixedSizeListVector vector = (FixedSizeListVector) v;\n+    FixedSizeListVector dictVector = (FixedSizeListVector) dictionary.getVector();\n+    final int listSize = vector.getListSize();\n+\n+    DictionaryHashTable hashTable = new DictionaryHashTable(dictVector.getDataVector());\n+    for (int i = 0; i < dictVector.getDataVector().getValueCount(); i++) {\n+      hashTable.put(i);\n+    }\n+\n+    Field valueField = vector.getField();\n+    FieldType indexFieldType = new FieldType(valueField.isNullable(), dictionary.getEncoding().getIndexType(),\n+        dictionary.getEncoding(), valueField.getMetadata());\n+\n+    FixedSizeListVector encoded = FixedSizeListVector.empty(vector.getName(), listSize, vector.getAllocator());\n+    encoded.allocateNewSafe();\n+    encoded.setValueCount(vector.getValueCount());\n+    BaseIntVector indices = (BaseIntVector) encoded.addOrGetVector(indexFieldType).getVector();\n+\n+\n+    for (int i = 0; i < v.getValueCount(); i++) {\n+      if (!vector.isNull(i)) {\n+        int start = i * listSize;\n+        int end = (i + 1) * listSize;\n+        ValueVector dataVector = vector.getDataVector();\n+\n+        BitVectorHelper.setValidityBitToOne(encoded.getValidityBuffer(), i);\n+        for (int k = start; k < end; k++) {\n \n Review comment:\n   Yes, I think could extra a method for reuse here\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T17:05:15.309+0000",
                    "updated": "2019-08-09T17:05:15.309+0000",
                    "started": "2019-08-09T17:05:15.308+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "292171",
                    "issueId": "13247993"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247993/worklog/292538",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4972: ARROW-6078: [Java] Implement dictionary-encoded subfields for List type\nURL: https://github.com/apache/arrow/pull/4972#discussion_r312707661\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/dictionary/ListSubfieldEncoder.java\n ##########\n @@ -0,0 +1,184 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.dictionary;\n+\n+import org.apache.arrow.vector.BaseIntVector;\n+import org.apache.arrow.vector.BitVectorHelper;\n+import org.apache.arrow.vector.ValueVector;\n+import org.apache.arrow.vector.complex.BaseRepeatedValueVector;\n+import org.apache.arrow.vector.complex.FixedSizeListVector;\n+import org.apache.arrow.vector.complex.ListVector;\n+import org.apache.arrow.vector.types.pojo.Field;\n+import org.apache.arrow.vector.types.pojo.FieldType;\n+import org.apache.arrow.vector.util.TransferPair;\n+\n+/**\n+ * Sub fields encoder/decoder for Dictionary encoded {@link ListVector} and {@link FixedSizeListVector}.\n+ */\n+public class ListSubfieldEncoder {\n+\n+  static ValueVector encodeFixedSizeListSubField(ValueVector v, Dictionary dictionary) {\n+    FixedSizeListVector vector = (FixedSizeListVector) v;\n+    FixedSizeListVector dictVector = (FixedSizeListVector) dictionary.getVector();\n+    final int listSize = vector.getListSize();\n+\n+    DictionaryHashTable hashTable = new DictionaryHashTable(dictVector.getDataVector());\n+    for (int i = 0; i < dictVector.getDataVector().getValueCount(); i++) {\n+      hashTable.put(i);\n+    }\n+\n+    Field valueField = vector.getField();\n+    FieldType indexFieldType = new FieldType(valueField.isNullable(), dictionary.getEncoding().getIndexType(),\n+        dictionary.getEncoding(), valueField.getMetadata());\n+\n+    FixedSizeListVector encoded = FixedSizeListVector.empty(vector.getName(), listSize, vector.getAllocator());\n+    encoded.allocateNewSafe();\n+    encoded.setValueCount(vector.getValueCount());\n+    BaseIntVector indices = (BaseIntVector) encoded.addOrGetVector(indexFieldType).getVector();\n+\n+\n+    for (int i = 0; i < v.getValueCount(); i++) {\n+      if (!vector.isNull(i)) {\n+        int start = i * listSize;\n+        int end = (i + 1) * listSize;\n+        ValueVector dataVector = vector.getDataVector();\n+\n+        BitVectorHelper.setValidityBitToOne(encoded.getValidityBuffer(), i);\n \n Review comment:\n   fixed.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-10T16:03:49.370+0000",
                    "updated": "2019-08-10T16:03:49.370+0000",
                    "started": "2019-08-10T16:03:49.370+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "292538",
                    "issueId": "13247993"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247993/worklog/292539",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on issue #4972: ARROW-6078: [Java] Implement dictionary-encoded subfields for List type\nURL: https://github.com/apache/arrow/pull/4972#issuecomment-520161574\n \n \n   @emkornfield Since FixedListSizeVector is a specific case of ListVector(don't know why not inherit from ListVector before), I did some refactor:\r\n   1. make FixedListSizeVector extends ListVector, UnionFixedListWriter extends UnionListWriter, UnionFixedListReader extends UnionListReader to remove plenty duplicated logic.\r\n   2. Make ListSubfieldEncoder non static to avoid some problems in DictionaryEncoder mentioned in another thread(i.e. dictionary reuse etc)\r\n   \r\n   Please help take a look, thanks!\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-10T16:20:27.143+0000",
                    "updated": "2019-08-10T16:20:27.143+0000",
                    "started": "2019-08-10T16:20:27.143+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "292539",
                    "issueId": "13247993"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247993/worklog/292541",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4972: ARROW-6078: [Java] Implement dictionary-encoded subfields for List type\nURL: https://github.com/apache/arrow/pull/4972#issuecomment-516735984\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4972?src=pr&el=h1) Report\n   > Merging [#4972](https://codecov.io/gh/apache/arrow/pull/4972?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/167cea0a6247475e3bfda044cc2278e06a7efbb9?src=pr&el=desc) will **increase** coverage by `17.35%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4972/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4972?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master   #4972       +/-   ##\n   ==========================================\n   + Coverage   72.34%   89.7%   +17.35%     \n   ==========================================\n     Files         831     670      -161     \n     Lines      110383   99383    -11000     \n     Branches     1418       0     -1418     \n   ==========================================\n   + Hits        79853   89147     +9294     \n   + Misses      30168   10236    -19932     \n   + Partials      362       0      -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4972?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/testing/gtest\\_util.h](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90ZXN0aW5nL2d0ZXN0X3V0aWwuaA==) | `97.36% <0%> (-2.64%)` | :arrow_down: |\n   | [cpp/src/arrow/compute/kernel.h](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jb21wdXRlL2tlcm5lbC5o) | `61.16% <0%> (-1.53%)` | :arrow_down: |\n   | [cpp/src/plasma/thirdparty/ae/ae.c](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGhpcmRwYXJ0eS9hZS9hZS5j) | `70.75% <0%> (-0.95%)` | :arrow_down: |\n   | [cpp/src/arrow/result.h](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9yZXN1bHQuaA==) | `91.3% <0%> (-0.37%)` | :arrow_down: |\n   | [python/pyarrow/tests/test\\_parquet.py](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9wYXJxdWV0LnB5) | `96.33% <0%> (-0.07%)` | :arrow_down: |\n   | [cpp/src/arrow/table.h](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90YWJsZS5o) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/flight/server.h](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9mbGlnaHQvc2VydmVyLmg=) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/csv/column-builder.h](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jc3YvY29sdW1uLWJ1aWxkZXIuaA==) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/table\\_builder.h](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90YWJsZV9idWlsZGVyLmg=) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/plasma.h](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvcGxhc21hLmg=) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | ... and [761 more](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4972?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4972?src=pr&el=footer). Last update [167cea0...2360ebb](https://codecov.io/gh/apache/arrow/pull/4972?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-10T16:45:53.574+0000",
                    "updated": "2019-08-10T16:45:53.574+0000",
                    "started": "2019-08-10T16:45:53.574+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "292541",
                    "issueId": "13247993"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247993/worklog/292547",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4972: ARROW-6078: [Java] Implement dictionary-encoded subfields for List type\nURL: https://github.com/apache/arrow/pull/4972#issuecomment-516735984\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4972?src=pr&el=h1) Report\n   > Merging [#4972](https://codecov.io/gh/apache/arrow/pull/4972?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/167cea0a6247475e3bfda044cc2278e06a7efbb9?src=pr&el=desc) will **increase** coverage by `17.35%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4972/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4972?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master   #4972       +/-   ##\n   ==========================================\n   + Coverage   72.34%   89.7%   +17.35%     \n   ==========================================\n     Files         831     670      -161     \n     Lines      110383   99383    -11000     \n     Branches     1418       0     -1418     \n   ==========================================\n   + Hits        79853   89148     +9295     \n   + Misses      30168   10235    -19933     \n   + Partials      362       0      -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4972?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/testing/gtest\\_util.h](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90ZXN0aW5nL2d0ZXN0X3V0aWwuaA==) | `97.36% <0%> (-2.64%)` | :arrow_down: |\n   | [cpp/src/arrow/compute/kernel.h](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jb21wdXRlL2tlcm5lbC5o) | `61.16% <0%> (-1.53%)` | :arrow_down: |\n   | [cpp/src/plasma/thirdparty/ae/ae.c](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGhpcmRwYXJ0eS9hZS9hZS5j) | `70.75% <0%> (-0.95%)` | :arrow_down: |\n   | [cpp/src/arrow/result.h](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9yZXN1bHQuaA==) | `91.3% <0%> (-0.37%)` | :arrow_down: |\n   | [cpp/src/arrow/table.h](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90YWJsZS5o) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/flight/server.h](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9mbGlnaHQvc2VydmVyLmg=) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/csv/column-builder.h](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jc3YvY29sdW1uLWJ1aWxkZXIuaA==) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/table\\_builder.h](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90YWJsZV9idWlsZGVyLmg=) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/plasma.h](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvcGxhc21hLmg=) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/gandiva/configuration.h](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2NvbmZpZ3VyYXRpb24uaA==) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | ... and [760 more](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4972?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4972?src=pr&el=footer). Last update [167cea0...2360ebb](https://codecov.io/gh/apache/arrow/pull/4972?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-10T17:20:00.043+0000",
                    "updated": "2019-08-10T17:20:00.043+0000",
                    "started": "2019-08-10T17:20:00.043+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "292547",
                    "issueId": "13247993"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247993/worklog/292716",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4972: ARROW-6078: [Java] Implement dictionary-encoded subfields for List type\nURL: https://github.com/apache/arrow/pull/4972#issuecomment-516735984\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4972?src=pr&el=h1) Report\n   > Merging [#4972](https://codecov.io/gh/apache/arrow/pull/4972?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/167cea0a6247475e3bfda044cc2278e06a7efbb9?src=pr&el=desc) will **increase** coverage by `2.1%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4972/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4972?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff            @@\n   ##           master   #4972      +/-   ##\n   =========================================\n   + Coverage   87.59%   89.7%    +2.1%     \n   =========================================\n     Files        1009     670     -339     \n     Lines      143898   99383   -44515     \n     Branches     1418       0    -1418     \n   =========================================\n   - Hits       126049   89149   -36900     \n   + Misses      17487   10234    -7253     \n   + Partials      362       0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4972?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/plasma/thirdparty/ae/ae.c](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGhpcmRwYXJ0eS9hZS9hZS5j) | `70.75% <0%> (-0.95%)` | :arrow_down: |\n   | [python/pyarrow/tests/test\\_parquet.py](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9wYXJxdWV0LnB5) | `96.33% <0%> (-0.07%)` | :arrow_down: |\n   | [r/src/recordbatch.cpp](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-ci9zcmMvcmVjb3JkYmF0Y2guY3Bw) | | |\n   | [r/R/Table.R](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-ci9SL1RhYmxlLlI=) | | |\n   | [js/src/util/fn.ts](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-anMvc3JjL3V0aWwvZm4udHM=) | | |\n   | [go/arrow/array/bufferbuilder.go](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYnVmZmVyYnVpbGRlci5nbw==) | | |\n   | [r/src/symbols.cpp](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-ci9zcmMvc3ltYm9scy5jcHA=) | | |\n   | [rust/datafusion/src/execution/projection.rs](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vcHJvamVjdGlvbi5ycw==) | | |\n   | [rust/datafusion/src/execution/filter.rs](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vZmlsdGVyLnJz) | | |\n   | [rust/arrow/src/csv/writer.rs](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvY3N2L3dyaXRlci5ycw==) | | |\n   | ... and [331 more](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4972?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4972?src=pr&el=footer). Last update [167cea0...2080cc2](https://codecov.io/gh/apache/arrow/pull/4972?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-11T15:32:52.581+0000",
                    "updated": "2019-08-11T15:32:52.581+0000",
                    "started": "2019-08-11T15:32:52.580+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "292716",
                    "issueId": "13247993"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247993/worklog/293195",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4972: ARROW-6078: [Java] Implement dictionary-encoded subfields for List type\nURL: https://github.com/apache/arrow/pull/4972#discussion_r312979465\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/TestDictionaryVector.java\n ##########\n @@ -576,6 +577,125 @@ public void testUnionEquals() {\n     }\n   }\n \n+  @Test\n+  public void testEncodeListSubField() {\n+    // Create a new value vector\n+    try (final ListVector vector = ListVector.empty(\"vector\", allocator);\n+        final ListVector dictionaryVector = ListVector.empty(\"dict\", allocator);) {\n+\n+      UnionListWriter writer = vector.getWriter();\n+      writer.allocate();\n+\n+      //set some values\n+      writeListVector(writer, new int[]{10, 20});\n+      writeListVector(writer, new int[]{10, 20});\n+      writeListVector(writer, new int[]{10, 20});\n+      writeListVector(writer, new int[]{30, 40, 50});\n+      writeListVector(writer, new int[]{30, 40, 50});\n+      writeListVector(writer, new int[]{10, 20});\n+      writer.setValueCount(6);\n+\n+      UnionListWriter dictWriter = dictionaryVector.getWriter();\n+      dictWriter.allocate();\n+      writeListVector(dictWriter, new int[]{10, 20, 30, 40, 50});\n+      dictionaryVector.setValueCount(1);\n+\n+      Dictionary dictionary = new Dictionary(dictionaryVector, new DictionaryEncoding(1L, false, null));\n+\n+      try (final ListVector encoded =\n+          (ListVector) DictionaryEncoder.encodeSubField(vector, dictionary)) {\n+        // verify indices\n+        assertEquals(ListVector.class, encoded.getClass());\n+\n+        assertEquals(6, encoded.getValueCount());\n+        assertEquals(\"[0,1]\", encoded.getObject(0).toString());\n \n Review comment:\n   fixed.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-12T15:18:03.507+0000",
                    "updated": "2019-08-12T15:18:03.507+0000",
                    "started": "2019-08-12T15:18:03.506+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "293195",
                    "issueId": "13247993"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247993/worklog/294533",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4972: ARROW-6078: [Java] Implement dictionary-encoded subfields for List type\nURL: https://github.com/apache/arrow/pull/4972#discussion_r313729029\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/complex/FixedSizeListVector.java\n ##########\n @@ -17,61 +17,44 @@\n \n package org.apache.arrow.vector.complex;\n \n-import static java.util.Collections.singletonList;\n-import static org.apache.arrow.vector.complex.BaseRepeatedValueVector.DATA_VECTOR_NAME;\n-\n import java.util.ArrayList;\n import java.util.Arrays;\n-import java.util.Collections;\n-import java.util.Iterator;\n import java.util.List;\n-import java.util.Objects;\n \n-import org.apache.arrow.memory.BaseAllocator;\n import org.apache.arrow.memory.BufferAllocator;\n import org.apache.arrow.memory.OutOfMemoryException;\n import org.apache.arrow.memory.util.ByteFunctionHelpers;\n import org.apache.arrow.util.Preconditions;\n-import org.apache.arrow.vector.AddOrGetResult;\n import org.apache.arrow.vector.BaseValueVector;\n import org.apache.arrow.vector.BitVectorHelper;\n-import org.apache.arrow.vector.BufferBacked;\n import org.apache.arrow.vector.FieldVector;\n import org.apache.arrow.vector.ValueVector;\n import org.apache.arrow.vector.ZeroVector;\n import org.apache.arrow.vector.complex.impl.UnionFixedSizeListReader;\n import org.apache.arrow.vector.complex.impl.UnionFixedSizeListWriter;\n+import org.apache.arrow.vector.complex.impl.UnionListWriter;\n import org.apache.arrow.vector.ipc.message.ArrowFieldNode;\n import org.apache.arrow.vector.types.Types.MinorType;\n import org.apache.arrow.vector.types.pojo.ArrowType;\n import org.apache.arrow.vector.types.pojo.DictionaryEncoding;\n-import org.apache.arrow.vector.types.pojo.Field;\n import org.apache.arrow.vector.types.pojo.FieldType;\n import org.apache.arrow.vector.util.CallBack;\n import org.apache.arrow.vector.util.JsonStringArrayList;\n-import org.apache.arrow.vector.util.OversizedAllocationException;\n-import org.apache.arrow.vector.util.SchemaChangeRuntimeException;\n import org.apache.arrow.vector.util.TransferPair;\n \n import io.netty.buffer.ArrowBuf;\n \n /** A ListVector where every list value is of the same size. */\n-public class FixedSizeListVector extends BaseValueVector implements FieldVector, PromotableVector {\n+public class FixedSizeListVector extends ListVector implements FieldVector, PromotableVector {\n \n Review comment:\n   I don't think this is correct.  BaseRepeatedValueVector, the parent of ListVector contains an offsetBuffer member.  We don't want to include that in FixedSizeListVector.  I think we should create an interface  that both BaseRepeatedVector/ListVector and FixedSizeListVector both inherit from sow they can be used interchangeably in dictionary encoding.\r\n   \r\n   I also responded on the ML thread to see if other people have opinions.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-14T07:11:18.079+0000",
                    "updated": "2019-08-14T07:11:18.079+0000",
                    "started": "2019-08-14T07:11:18.079+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "294533",
                    "issueId": "13247993"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247993/worklog/294546",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4972: ARROW-6078: [Java] Implement dictionary-encoded subfields for List type\nURL: https://github.com/apache/arrow/pull/4972#discussion_r313736925\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/complex/FixedSizeListVector.java\n ##########\n @@ -17,61 +17,44 @@\n \n package org.apache.arrow.vector.complex;\n \n-import static java.util.Collections.singletonList;\n-import static org.apache.arrow.vector.complex.BaseRepeatedValueVector.DATA_VECTOR_NAME;\n-\n import java.util.ArrayList;\n import java.util.Arrays;\n-import java.util.Collections;\n-import java.util.Iterator;\n import java.util.List;\n-import java.util.Objects;\n \n-import org.apache.arrow.memory.BaseAllocator;\n import org.apache.arrow.memory.BufferAllocator;\n import org.apache.arrow.memory.OutOfMemoryException;\n import org.apache.arrow.memory.util.ByteFunctionHelpers;\n import org.apache.arrow.util.Preconditions;\n-import org.apache.arrow.vector.AddOrGetResult;\n import org.apache.arrow.vector.BaseValueVector;\n import org.apache.arrow.vector.BitVectorHelper;\n-import org.apache.arrow.vector.BufferBacked;\n import org.apache.arrow.vector.FieldVector;\n import org.apache.arrow.vector.ValueVector;\n import org.apache.arrow.vector.ZeroVector;\n import org.apache.arrow.vector.complex.impl.UnionFixedSizeListReader;\n import org.apache.arrow.vector.complex.impl.UnionFixedSizeListWriter;\n+import org.apache.arrow.vector.complex.impl.UnionListWriter;\n import org.apache.arrow.vector.ipc.message.ArrowFieldNode;\n import org.apache.arrow.vector.types.Types.MinorType;\n import org.apache.arrow.vector.types.pojo.ArrowType;\n import org.apache.arrow.vector.types.pojo.DictionaryEncoding;\n-import org.apache.arrow.vector.types.pojo.Field;\n import org.apache.arrow.vector.types.pojo.FieldType;\n import org.apache.arrow.vector.util.CallBack;\n import org.apache.arrow.vector.util.JsonStringArrayList;\n-import org.apache.arrow.vector.util.OversizedAllocationException;\n-import org.apache.arrow.vector.util.SchemaChangeRuntimeException;\n import org.apache.arrow.vector.util.TransferPair;\n \n import io.netty.buffer.ArrowBuf;\n \n /** A ListVector where every list value is of the same size. */\n-public class FixedSizeListVector extends BaseValueVector implements FieldVector, PromotableVector {\n+public class FixedSizeListVector extends ListVector implements FieldVector, PromotableVector {\n \n Review comment:\n   Sure, I just thought introduced an new interface makes the hierarchy a little confused. Let's hold up and see if there has other opinions, otherwise I will refactor as you suggested. Thanks!\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-14T07:26:25.713+0000",
                    "updated": "2019-08-14T07:26:25.713+0000",
                    "started": "2019-08-14T07:26:25.713+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "294546",
                    "issueId": "13247993"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247993/worklog/296180",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on issue #4972: ARROW-6078: [Java] Implement dictionary-encoded subfields for List type\nURL: https://github.com/apache/arrow/pull/4972#issuecomment-521948328\n \n \n   @emkornfield I did a refactor for this as you suggested:\r\n   1. Add BaseListVector for BaseRepeatedVector/FixedSizeListVector\r\n   2. extract loop logic in DictionaryEncoder for reuse purpose.\r\n   \r\n   Please help take a look again, thanks a lot!\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-16T09:27:50.258+0000",
                    "updated": "2019-08-16T09:27:50.258+0000",
                    "started": "2019-08-16T09:27:50.258+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "296180",
                    "issueId": "13247993"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247993/worklog/296748",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4972: ARROW-6078: [Java] Implement dictionary-encoded subfields for List type\nURL: https://github.com/apache/arrow/pull/4972#issuecomment-516735984\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4972?src=pr&el=h1) Report\n   > Merging [#4972](https://codecov.io/gh/apache/arrow/pull/4972?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/2ba0566b29312e84fafc987fd8dc9664748be96a?src=pr&el=desc) will **increase** coverage by `2.08%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4972/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4972?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4972      +/-   ##\n   ==========================================\n   + Coverage   87.64%   89.72%   +2.08%     \n   ==========================================\n     Files        1014      674     -340     \n     Lines      145922   101357   -44565     \n     Branches     1437        0    -1437     \n   ==========================================\n   - Hits       127887    90943   -36944     \n   + Misses      17673    10414    -7259     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4972?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/util/thread-pool-test.cc](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL3RocmVhZC1wb29sLXRlc3QuY2M=) | `97.66% <0%> (-0.94%)` | :arrow_down: |\n   | [python/pyarrow/tests/test\\_parquet.py](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9wYXJxdWV0LnB5) | `96.38% <0%> (-0.07%)` | :arrow_down: |\n   | [r/src/recordbatch.cpp](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-ci9zcmMvcmVjb3JkYmF0Y2guY3Bw) | | |\n   | [r/R/Table.R](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-ci9SL1RhYmxlLlI=) | | |\n   | [js/src/util/fn.ts](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-anMvc3JjL3V0aWwvZm4udHM=) | | |\n   | [go/arrow/array/bufferbuilder.go](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYnVmZmVyYnVpbGRlci5nbw==) | | |\n   | [r/src/symbols.cpp](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-ci9zcmMvc3ltYm9scy5jcHA=) | | |\n   | [rust/datafusion/src/execution/projection.rs](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vcHJvamVjdGlvbi5ycw==) | | |\n   | [rust/datafusion/src/execution/filter.rs](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vZmlsdGVyLnJz) | | |\n   | [rust/arrow/src/csv/writer.rs](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvY3N2L3dyaXRlci5ycw==) | | |\n   | ... and [332 more](https://codecov.io/gh/apache/arrow/pull/4972/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4972?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4972?src=pr&el=footer). Last update [2ba0566...1ceb3cd](https://codecov.io/gh/apache/arrow/pull/4972?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-17T07:33:04.456+0000",
                    "updated": "2019-08-17T07:33:04.456+0000",
                    "started": "2019-08-17T07:33:04.455+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "296748",
                    "issueId": "13247993"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247993/worklog/297566",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4972: ARROW-6078: [Java] Implement dictionary-encoded subfields for List type\nURL: https://github.com/apache/arrow/pull/4972#discussion_r315488718\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/dictionary/ListSubfieldEncoder.java\n ##########\n @@ -0,0 +1,121 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.dictionary;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.vector.BaseIntVector;\n+import org.apache.arrow.vector.BitVectorHelper;\n+import org.apache.arrow.vector.ValueVector;\n+import org.apache.arrow.vector.complex.BaseListVector;\n+import org.apache.arrow.vector.complex.FixedSizeListVector;\n+import org.apache.arrow.vector.complex.ListVector;\n+import org.apache.arrow.vector.types.pojo.Field;\n+import org.apache.arrow.vector.types.pojo.FieldType;\n+import org.apache.arrow.vector.util.TransferPair;\n+\n+/**\n+ * Sub fields encoder/decoder for Dictionary encoded {@link ListVector} and {@link FixedSizeListVector}.\n \n Review comment:\n   this should be updated?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-20T02:56:35.294+0000",
                    "updated": "2019-08-20T02:56:35.294+0000",
                    "started": "2019-08-20T02:56:35.294+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "297566",
                    "issueId": "13247993"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247993/worklog/297568",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4972: ARROW-6078: [Java] Implement dictionary-encoded subfields for List type\nURL: https://github.com/apache/arrow/pull/4972#discussion_r315489246\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/complex/BaseListVector.java\n ##########\n @@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.complex;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.vector.BaseValueVector;\n+import org.apache.arrow.vector.FieldVector;\n+\n+/**\n+ * Abstraction for all list type vectors.\n+ */\n+public abstract class BaseListVector extends BaseValueVector implements PromotableVector {\n \n Review comment:\n   can this be an interface instead of base class?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-20T03:00:22.158+0000",
                    "updated": "2019-08-20T03:00:22.158+0000",
                    "started": "2019-08-20T03:00:22.158+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "297568",
                    "issueId": "13247993"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
            "id": "7",
            "description": "The sub-task of the issue",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
            "name": "Sub-task",
            "subtask": true,
            "avatarId": 21146
        },
        "timespent": 37800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@7494e570[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4170a544[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@70b0519a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@342e804d[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@79a0b857[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@3ec4aba8[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4c0a116b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@ce6cc4f[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@70f8af84[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@6b7ad3d8[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@77671695[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@4dd93882[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 37800,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Aug 31 02:55:15 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-08-31T02:55:15.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6078/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-07-31T03:33:14.000+0000",
        "updated": "2019-08-31T02:55:15.000+0000",
        "timeoriginalestimate": null,
        "description": "For example, int type List (valueCount = 5) has data like below:\r\n\r\n10, 20\r\n\r\n10, 20\r\n\r\n30, 40, 50\r\n\r\n30, 40, 50\r\n\r\n10, 20\r\n\r\ncould be encoded to:\r\n\r\n0, 1\r\n\r\n0, 1\r\n\r\n2, 3, 4\r\n\r\n2, 3, 4\r\n\r\n0, 1\r\n\r\nwith list type dictionary\r\n\r\n10, 20, 30, 40, 50\r\n\r\nor\r\n\r\n10,\r\n\r\n20,\r\n\r\n30,\r\n\r\n40,\r\n\r\n50\r\n\r\n\u00a0",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "10.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 37800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] Implement dictionary-encoded subfields for List type",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247993/comment/16919996",
                    "id": "16919996",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 4972\n[https://github.com/apache/arrow/pull/4972]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-08-31T02:55:15.724+0000",
                    "updated": "2019-08-31T02:55:15.724+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z056k8:",
        "customfield_12314139": null
    }
}