{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13293888",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293888",
    "key": "ARROW-8218",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12346687",
                "id": "12346687",
                "description": "",
                "name": "0.17.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-04-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 9600,
            "total": 9600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 9600,
            "total": 9600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8218/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 17,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293888/worklog/412860",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6777: ARROW-8218: [C++] Decompress record batch messages in parallel at field level. Only allow LZ4_FRAME, ZSTD compression\nURL: https://github.com/apache/arrow/pull/6777\n \n \n   I also changed the metadata key to \"ARROW:experimental_compression\", if anyone has opinions.\r\n   \r\n   Haven't run benchmarks but will do so tomorrow. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-31T05:42:53.199+0000",
                    "updated": "2020-03-31T05:42:53.199+0000",
                    "started": "2020-03-31T05:42:53.198+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "412860",
                    "issueId": "13293888"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293888/worklog/412861",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #6777: ARROW-8218: [C++] Decompress record batch messages in parallel at field level. Only allow LZ4_FRAME, ZSTD compression\nURL: https://github.com/apache/arrow/pull/6777#issuecomment-606413581\n \n \n   https://issues.apache.org/jira/browse/ARROW-8218\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-31T05:46:31.859+0000",
                    "updated": "2020-03-31T05:46:31.859+0000",
                    "started": "2020-03-31T05:46:31.859+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "412861",
                    "issueId": "13293888"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293888/worklog/412979",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #6777: ARROW-8218: [C++] Decompress record batch messages in parallel at field level. Only allow LZ4_FRAME, ZSTD compression\nURL: https://github.com/apache/arrow/pull/6777#discussion_r400769552\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/reader.cc\n ##########\n @@ -391,12 +342,59 @@ class ArrayLoader {\n   ArrayData* out_;\n };\n \n+Status DecompressBuffers(const std::vector<std::shared_ptr<ArrayData>>& fields,\n+                         Compression::type compression, const IpcReadOptions& options) {\n+  std::unique_ptr<util::Codec> codec;\n+  ARROW_ASSIGN_OR_RAISE(codec, util::Codec::Create(compression));\n+\n+  auto DecompressOne = [&](int i) {\n+    ArrayData* arr = fields[i].get();\n+    for (size_t i = 0; i < arr->buffers.size(); ++i) {\n+      if (arr->buffers[i] == nullptr) {\n+        continue;\n+      }\n+      if (arr->buffers[i]->size() == 0) {\n+        continue;\n+      }\n+      const uint8_t* data = arr->buffers[i]->data();\n+      int64_t compressed_size = arr->buffers[i]->size() - sizeof(int64_t);\n \n Review comment:\n   Should check that buffer size is at least 8 here.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-31T09:31:57.434+0000",
                    "updated": "2020-03-31T09:31:57.434+0000",
                    "started": "2020-03-31T09:31:57.434+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "412979",
                    "issueId": "13293888"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293888/worklog/412980",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #6777: ARROW-8218: [C++] Decompress record batch messages in parallel at field level. Only allow LZ4_FRAME, ZSTD compression\nURL: https://github.com/apache/arrow/pull/6777#discussion_r400770040\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/reader.cc\n ##########\n @@ -391,12 +342,59 @@ class ArrayLoader {\n   ArrayData* out_;\n };\n \n+Status DecompressBuffers(const std::vector<std::shared_ptr<ArrayData>>& fields,\n+                         Compression::type compression, const IpcReadOptions& options) {\n+  std::unique_ptr<util::Codec> codec;\n+  ARROW_ASSIGN_OR_RAISE(codec, util::Codec::Create(compression));\n+\n+  auto DecompressOne = [&](int i) {\n+    ArrayData* arr = fields[i].get();\n+    for (size_t i = 0; i < arr->buffers.size(); ++i) {\n+      if (arr->buffers[i] == nullptr) {\n+        continue;\n+      }\n+      if (arr->buffers[i]->size() == 0) {\n+        continue;\n+      }\n+      const uint8_t* data = arr->buffers[i]->data();\n+      int64_t compressed_size = arr->buffers[i]->size() - sizeof(int64_t);\n+      int64_t uncompressed_size = util::SafeLoadAs<int64_t>(data);\n \n Review comment:\n   Question: what about endianness? Should we call `FromLittleEndian` here?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-31T09:31:57.446+0000",
                    "updated": "2020-03-31T09:31:57.446+0000",
                    "started": "2020-03-31T09:31:57.446+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "412980",
                    "issueId": "13293888"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293888/worklog/412981",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #6777: ARROW-8218: [C++] Decompress record batch messages in parallel at field level. Only allow LZ4_FRAME, ZSTD compression\nURL: https://github.com/apache/arrow/pull/6777#discussion_r400771267\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/options.h\n ##########\n @@ -79,6 +80,10 @@ struct ARROW_EXPORT IpcReadOptions {\n   /// deserializing RecordBatch. If null, return all deserialized fields\n   util::optional<std::vector<int>> included_fields;\n \n+  /// \\brief Use global CPU thread pool to parallelize any computational tasks\n+  /// like decompression\n+  bool use_threads = true;\n \n Review comment:\n   Should the dataset IPC adapter be changed to disable this (because of nested parallelism)? @fsaintjacques \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-31T09:31:57.481+0000",
                    "updated": "2020-03-31T09:31:57.481+0000",
                    "started": "2020-03-31T09:31:57.481+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "412981",
                    "issueId": "13293888"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293888/worklog/412983",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #6777: ARROW-8218: [C++] Decompress record batch messages in parallel at field level. Only allow LZ4_FRAME, ZSTD compression\nURL: https://github.com/apache/arrow/pull/6777#discussion_r400773270\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/reader.cc\n ##########\n @@ -454,7 +459,7 @@ Status GetCompression(const flatbuf::Message* message, Compression::type* out) {\n     // TODO: Ensure this deserialization only ever happens once\n     std::shared_ptr<const KeyValueMetadata> metadata;\n     RETURN_NOT_OK(internal::GetKeyValueMetadata(message->custom_metadata(), &metadata));\n-    int index = metadata->FindKey(\"ARROW:body_compression\");\n+    int index = metadata->FindKey(\"ARROW:experimental_compression\");\n     if (index != -1) {\n       ARROW_ASSIGN_OR_RAISE(*out,\n                             util::Codec::GetCompressionType(metadata->value(index)));\n \n Review comment:\n   Also, shouldn't you check for allowed compression types here?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-31T09:34:35.056+0000",
                    "updated": "2020-03-31T09:34:35.056+0000",
                    "started": "2020-03-31T09:34:35.056+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "412983",
                    "issueId": "13293888"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293888/worklog/413224",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6777: ARROW-8218: [C++] Decompress record batch messages in parallel at field level. Only allow LZ4_FRAME, ZSTD compression\nURL: https://github.com/apache/arrow/pull/6777#discussion_r400984538\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/options.h\n ##########\n @@ -79,6 +80,10 @@ struct ARROW_EXPORT IpcReadOptions {\n   /// deserializing RecordBatch. If null, return all deserialized fields\n   util::optional<std::vector<int>> included_fields;\n \n+  /// \\brief Use global CPU thread pool to parallelize any computational tasks\n+  /// like decompression\n+  bool use_threads = true;\n \n Review comment:\n   Yes. Re threading discussion: Ideally `Read()` could yield the per-field decompression tasks so that `dataset::IpcFileFormat` could take advantage of parallelism even when scanning a single file\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-31T15:00:54.688+0000",
                    "updated": "2020-03-31T15:00:54.688+0000",
                    "started": "2020-03-31T15:00:54.687+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "413224",
                    "issueId": "13293888"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293888/worklog/413388",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6777: ARROW-8218: [C++] Decompress record batch messages in parallel at field level. Only allow LZ4_FRAME, ZSTD compression\nURL: https://github.com/apache/arrow/pull/6777#discussion_r401076965\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/reader.cc\n ##########\n @@ -391,12 +342,59 @@ class ArrayLoader {\n   ArrayData* out_;\n };\n \n+Status DecompressBuffers(const std::vector<std::shared_ptr<ArrayData>>& fields,\n+                         Compression::type compression, const IpcReadOptions& options) {\n+  std::unique_ptr<util::Codec> codec;\n+  ARROW_ASSIGN_OR_RAISE(codec, util::Codec::Create(compression));\n+\n+  auto DecompressOne = [&](int i) {\n+    ArrayData* arr = fields[i].get();\n+    for (size_t i = 0; i < arr->buffers.size(); ++i) {\n+      if (arr->buffers[i] == nullptr) {\n+        continue;\n+      }\n+      if (arr->buffers[i]->size() == 0) {\n+        continue;\n+      }\n+      const uint8_t* data = arr->buffers[i]->data();\n+      int64_t compressed_size = arr->buffers[i]->size() - sizeof(int64_t);\n+      int64_t uncompressed_size = util::SafeLoadAs<int64_t>(data);\n \n Review comment:\n   I would guess this project is currently would break in many other places on big endian platforms (how does one even test big endian nowadays? On IBM Z mainframes?). I'll add this though\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-31T17:10:16.958+0000",
                    "updated": "2020-03-31T17:10:16.958+0000",
                    "started": "2020-03-31T17:10:16.958+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "413388",
                    "issueId": "13293888"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293888/worklog/413391",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6777: ARROW-8218: [C++] Decompress record batch messages in parallel at field level. Only allow LZ4_FRAME, ZSTD compression\nURL: https://github.com/apache/arrow/pull/6777#discussion_r401077967\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/reader.cc\n ##########\n @@ -391,12 +342,59 @@ class ArrayLoader {\n   ArrayData* out_;\n };\n \n+Status DecompressBuffers(const std::vector<std::shared_ptr<ArrayData>>& fields,\n+                         Compression::type compression, const IpcReadOptions& options) {\n+  std::unique_ptr<util::Codec> codec;\n+  ARROW_ASSIGN_OR_RAISE(codec, util::Codec::Create(compression));\n+\n+  auto DecompressOne = [&](int i) {\n+    ArrayData* arr = fields[i].get();\n+    for (size_t i = 0; i < arr->buffers.size(); ++i) {\n+      if (arr->buffers[i] == nullptr) {\n+        continue;\n+      }\n+      if (arr->buffers[i]->size() == 0) {\n+        continue;\n+      }\n+      const uint8_t* data = arr->buffers[i]->data();\n+      int64_t compressed_size = arr->buffers[i]->size() - sizeof(int64_t);\n+      int64_t uncompressed_size = util::SafeLoadAs<int64_t>(data);\n \n Review comment:\n   Apparently QEMU can emulate big endian, when we have _lots_ of free time we should look into this\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-31T17:11:55.599+0000",
                    "updated": "2020-03-31T17:11:55.599+0000",
                    "started": "2020-03-31T17:11:55.598+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "413391",
                    "issueId": "13293888"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293888/worklog/413415",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #6777: ARROW-8218: [C++] Decompress record batch messages in parallel at field level. Only allow LZ4_FRAME, ZSTD compression\nURL: https://github.com/apache/arrow/pull/6777#issuecomment-606782994\n \n \n   I addressed the comments and also parallelized the compression path. Would someone take another look at these new changes?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-31T18:00:33.048+0000",
                    "updated": "2020-03-31T18:00:33.048+0000",
                    "started": "2020-03-31T18:00:33.048+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "413415",
                    "issueId": "13293888"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293888/worklog/413416",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6777: ARROW-8218: [C++] Decompress record batch messages in parallel at field level. Only allow LZ4_FRAME, ZSTD compression\nURL: https://github.com/apache/arrow/pull/6777#discussion_r401111093\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/writer.cc\n ##########\n @@ -182,25 +183,32 @@ class RecordBatchSerializer {\n   Status CompressBodyBuffers() {\n     std::unique_ptr<util::Codec> codec;\n \n-    if (!(options_.compression == Compression::LZ4_FRAME ||\n-          options_.compression == Compression::ZSTD)) {\n-      return Status::Invalid(\"Only LZ4_FRAME and ZSTD compression allowed\");\n-    }\n+    RETURN_NOT_OK(internal::CheckCompressionSupported(options_.compression));\n \n     // TODO check allowed values for compression?\n     AppendCustomMetadata(\"ARROW:experimental_compression\",\n                          util::Codec::GetCodecAsString(options_.compression));\n \n     ARROW_ASSIGN_OR_RAISE(\n         codec, util::Codec::Create(options_.compression, options_.compression_level));\n-    // TODO: Parallelize buffer compression\n-    for (size_t i = 0; i < out_->body_buffers.size(); ++i) {\n+\n+    auto CompressOne = [&](size_t i) {\n       if (out_->body_buffers[i]->size() > 0) {\n         RETURN_NOT_OK(\n             CompressBuffer(*out_->body_buffers[i], codec.get(), &out_->body_buffers[i]));\n       }\n+      return Status::OK();\n+    };\n+\n+    if (options_.use_threads) {\n+      return ::arrow::internal::ParallelFor(static_cast<int>(out_->body_buffers.size()),\n+                                            CompressOne);\n+    } else {\n+      for (size_t i = 0; i < out_->body_buffers.size(); ++i) {\n+        RETURN_NOT_OK(CompressOne(i));\n+      }\n+      return Status::OK();\n \n Review comment:\n   This \"optional parallelism\" pattern occurs frequently, I'll open a JIRA about factoring it out into a helper function. \r\n   \r\n   https://issues.apache.org/jira/browse/ARROW-8299\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-31T18:05:16.364+0000",
                    "updated": "2020-03-31T18:05:16.364+0000",
                    "started": "2020-03-31T18:05:16.364+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "413416",
                    "issueId": "13293888"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293888/worklog/413429",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6777: ARROW-8218: [C++] Decompress record batch messages in parallel at field level. Only allow LZ4_FRAME, ZSTD compression\nURL: https://github.com/apache/arrow/pull/6777#discussion_r401115223\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/reader.cc\n ##########\n @@ -391,12 +342,65 @@ class ArrayLoader {\n   ArrayData* out_;\n };\n \n+Status DecompressBuffers(const std::vector<std::shared_ptr<ArrayData>>& fields,\n+                         Compression::type compression, const IpcReadOptions& options) {\n \n Review comment:\n   since you're mutating the contents of fields, should this be\r\n   ```suggestion\r\n   Status DecompressBuffers(Compression::type compression, const IpcReadOptions& options,\r\n                            std::vector<std::shared_ptr<ArrayData>>* fields) {\r\n   ```\r\n   ?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-31T18:17:06.187+0000",
                    "updated": "2020-03-31T18:17:06.187+0000",
                    "started": "2020-03-31T18:17:06.187+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "413429",
                    "issueId": "13293888"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293888/worklog/413436",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6777: ARROW-8218: [C++] Decompress record batch messages in parallel at field level. Only allow LZ4_FRAME, ZSTD compression\nURL: https://github.com/apache/arrow/pull/6777#discussion_r401119856\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/reader.cc\n ##########\n @@ -391,12 +342,65 @@ class ArrayLoader {\n   ArrayData* out_;\n };\n \n+Status DecompressBuffers(const std::vector<std::shared_ptr<ArrayData>>& fields,\n+                         Compression::type compression, const IpcReadOptions& options) {\n \n Review comment:\n   Sort of a weird case not often seen, since the vector itself is not mutated. When I see `std::vector<T>*` in a function signature that suggests that the vector is modified. Thoughts?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-31T18:20:15.325+0000",
                    "updated": "2020-03-31T18:20:15.325+0000",
                    "started": "2020-03-31T18:20:15.324+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "413436",
                    "issueId": "13293888"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293888/worklog/413485",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6777: ARROW-8218: [C++] Decompress record batch messages in parallel at field level. Only allow LZ4_FRAME, ZSTD compression\nURL: https://github.com/apache/arrow/pull/6777#discussion_r401176186\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/reader.cc\n ##########\n @@ -391,12 +342,65 @@ class ArrayLoader {\n   ArrayData* out_;\n };\n \n+Status DecompressBuffers(const std::vector<std::shared_ptr<ArrayData>>& fields,\n+                         Compression::type compression, const IpcReadOptions& options) {\n \n Review comment:\n   It's true; the vector itself isn't mutated and const correctness isn't broken here. I was only thinking of trying to communicate mutation to a future reader. Unfortunately all we have is the ampersand and comments, neither of which is ideal here (... unless we start tossing `std::vector<const T>` around everywhere we want to be clear that the elements are immutable)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-31T19:56:28.156+0000",
                    "updated": "2020-03-31T19:56:28.156+0000",
                    "started": "2020-03-31T19:56:28.156+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "413485",
                    "issueId": "13293888"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293888/worklog/413543",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #6777: ARROW-8218: [C++] Decompress record batch messages in parallel at field level. Only allow LZ4_FRAME, ZSTD compression\nURL: https://github.com/apache/arrow/pull/6777#issuecomment-606898267\n \n \n   Flaky Thrift download again\r\n   \r\n   ```\r\n   FAILED: thrift_ep-prefix/src/thrift_ep-stamp/thrift_ep-download \r\n   cd /build/cpp/thrift_ep-prefix/src && /usr/bin/cmake -P /build/cpp/thrift_ep-prefix/src/thrift_ep-stamp/thrift_ep-download-DEBUG.cmake && /usr/bin/cmake -E touch /build/cpp/thrift_ep-prefix/src/thrift_ep-stamp/thrift_ep-download\r\n   CMake Error at thrift_ep-stamp/thrift_ep-download-DEBUG.cmake:49 (message):\r\n     Command failed: 1\r\n   \r\n      '/usr/bin/cmake' '-Dmake=' '-Dconfig=' '-P' '/build/cpp/thrift_ep-prefix/src/thrift_ep-stamp/thrift_ep-download-DEBUG-impl.cmake'\r\n   \r\n     See also\r\n   \r\n       /build/cpp/thrift_ep-prefix/src/thrift_ep-stamp/thrift_ep-download-*.log\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-31T21:56:38.915+0000",
                    "updated": "2020-03-31T21:56:38.915+0000",
                    "started": "2020-03-31T21:56:38.914+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "413543",
                    "issueId": "13293888"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293888/worklog/413544",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #6777: ARROW-8218: [C++] Decompress record batch messages in parallel at field level. Only allow LZ4_FRAME, ZSTD compression\nURL: https://github.com/apache/arrow/pull/6777#issuecomment-606898766\n \n \n   Googletest download flaked in Appveyor:\r\n   \r\n   ```\r\n   FAILED: googletest_ep-prefix/src/googletest_ep-stamp/googletest_ep-download \r\n   cmd.exe /C \"cd /D C:\\projects\\arrow\\cpp\\build\\googletest_ep-prefix\\src && C:\\Miniconda37-x64\\envs\\arrow\\Library\\bin\\cmake.exe -P C:/projects/arrow/cpp/build/googletest_ep-prefix/src/googletest_ep-stamp/googletest_ep-download-RELEASE.cmake && C:\\Miniconda37-x64\\envs\\arrow\\Library\\bin\\cmake.exe -E touch C:/projects/arrow/cpp/build/googletest_ep-prefix/src/googletest_ep-stamp/googletest_ep-download\"\r\n   CMake Error at googletest_ep-stamp/googletest_ep-download-RELEASE.cmake:49 (message):\r\n     Command failed: 1\r\n      'C:/Miniconda37-x64/envs/arrow/Library/bin/cmake.exe' '-Dmake=' '-Dconfig=' '-P' 'C:/projects/arrow/cpp/build/googletest_ep-prefix/src/googletest_ep-stamp/googletest_ep-download-RELEASE-impl.cmake'\r\n     See also\r\n       C:/projects/arrow/cpp/build/googletest_ep-prefix/src/googletest_ep-stamp/googletest_ep-download-*.log\r\n   [10/269] Performing configure step for 'mimalloc_ep'\r\n   ```\r\n   \r\n   It passed on my fork though.\r\n   \r\n   +1. Merging this\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-31T21:57:51.669+0000",
                    "updated": "2020-03-31T21:57:51.669+0000",
                    "started": "2020-03-31T21:57:51.668+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "413544",
                    "issueId": "13293888"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293888/worklog/413545",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6777: ARROW-8218: [C++] Decompress record batch messages in parallel at field level. Only allow LZ4_FRAME, ZSTD compression\nURL: https://github.com/apache/arrow/pull/6777\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-31T21:58:20.386+0000",
                    "updated": "2020-03-31T21:58:20.386+0000",
                    "started": "2020-03-31T21:58:20.386+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "413545",
                    "issueId": "13293888"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 9600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5378aa3c[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@360181d7[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7f8634ae[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@45b31db0[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@183d1130[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@3b704e6a[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@759d2eee[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@289ef370[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@585ac3c2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@61e0c5bd[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7d167d31[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@224c0490[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 9600,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Mar 31 21:59:08 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-03-31T21:59:08.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8218/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-03-25T17:39:29.000+0000",
        "updated": "2020-03-31T21:59:08.000+0000",
        "timeoriginalestimate": null,
        "description": "This is follow up work to ARROW-7979, a minor amount of refactoring will be required to move the decompression step out of {{ArrayLoader}}",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 9600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Parallelize decompression at field level in experimental IPC compression code",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293888/comment/17072198",
                    "id": "17072198",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 6777\n[https://github.com/apache/arrow/pull/6777]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-03-31T21:59:08.982+0000",
                    "updated": "2020-03-31T21:59:08.982+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0cwiw:",
        "customfield_12314139": null
    }
}