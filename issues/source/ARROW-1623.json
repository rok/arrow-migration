{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13106077",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106077",
    "key": "ARROW-1623",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341707",
                "id": "12341707",
                "description": "",
                "name": "0.9.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-03-19"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=1xuepanchen1",
            "name": "1xuepanchen1",
            "key": "1xuepanchen1",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10445",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10445",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10445",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10445"
            },
            "displayName": "Panchen Xue",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1623/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@4560dd4c[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@b7897bd[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7e2a542e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@3120e129[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@976c5dd[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@2f9078ec[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@337d214[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@35a852f2[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@a4f31b7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@26b47f0a[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1baebeba[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@6c6640ff[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Feb 01 17:14:58 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-02-01T17:14:54.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1623/watchers",
            "watchCount": 4,
            "isWatching": false
        },
        "created": "2017-09-29T15:56:40.000+0000",
        "updated": "2018-02-01T17:14:58.000+0000",
        "timeoriginalestimate": null,
        "description": "The memory would need to be allocated from a memory pool / buffer allocator",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Add convenience method to construct Buffer from a string that owns its memory",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106077/comment/16334660",
                    "id": "16334660",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=1xuepanchen1",
                        "name": "1xuepanchen1",
                        "key": "1xuepanchen1",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10445",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10445",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10445",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10445"
                        },
                        "displayName": "Panchen Xue",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Is this for base class Buffer or derived PoolBuffer?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=1xuepanchen1",
                        "name": "1xuepanchen1",
                        "key": "1xuepanchen1",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10445",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10445",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10445",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10445"
                        },
                        "displayName": "Panchen Xue",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-22T18:13:17.587+0000",
                    "updated": "2018-01-22T18:13:17.587+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106077/comment/16334674",
                    "id": "16334674",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "body": "This is for the base class {{Buffer}}. {{PoolBuffer}} owns it's memory directly where the method to be implemented here will use memory that is owned by a {{string}} instance.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "created": "2018-01-22T18:19:06.216+0000",
                    "updated": "2018-01-22T18:19:06.216+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106077/comment/16334705",
                    "id": "16334705",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "The API would be something like\r\n\r\n{{Status Buffer::FromString(const std::string& value, MemoryPool* pool, std::shared_ptr<Buffer>* out)}}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-01-22T18:33:13.268+0000",
                    "updated": "2018-01-22T18:33:13.268+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106077/comment/16336553",
                    "id": "16336553",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=1xuepanchen1",
                        "name": "1xuepanchen1",
                        "key": "1xuepanchen1",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10445",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10445",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10445",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10445"
                        },
                        "displayName": "Panchen Xue",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "My understanding is:\r\n{code}\r\nStatus Buffer::FromString(const std::string& data, MemoryPool* pool, std::shared_ptr<Buffer>* out) const {\r\n\u00a0 auto new_buffer = std::make_shared<PoolBuffer>(pool);\r\n\u00a0 auto size = static_cast<int64_t>(data.size());\r\n\u00a0 auto str = reinterpret_cast<const uint8_t*>(data.c_str());\r\n\r\n\u00a0 RETURN_NOT_OK(new_buffer->Resize(size));\r\n\u00a0 std::memcpy(new_buffer->mutable_data(), str, size);\r\n\r\n\u00a0 *out = new_buffer;\r\n\u00a0 return Status::OK();\r\n}\r\n{code}\r\nIs it correct? Or shall we change the calling object?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=1xuepanchen1",
                        "name": "1xuepanchen1",
                        "key": "1xuepanchen1",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10445",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10445",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10445",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10445"
                        },
                        "displayName": "Panchen Xue",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-23T23:37:35.752+0000",
                    "updated": "2018-01-23T23:37:35.752+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106077/comment/16336578",
                    "id": "16336578",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Yes, a static member function would be fine. You can use {{AllocateBuffer}} to save a line of code",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-01-23T23:51:50.693+0000",
                    "updated": "2018-01-23T23:51:50.693+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106077/comment/16340151",
                    "id": "16340151",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xuepanchen opened a new pull request #1518: ARROW-1623: [C++] Add convenience method to construct Buffer from a string that owns its memory\nURL: https://github.com/apache/arrow/pull/1518\n \n \n   Add static member function Buffer::FromString to create a new buffer that owns its memory from given std::string. The memory is allocated from a given memory pool or the default one if not specified.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-25T21:59:21.024+0000",
                    "updated": "2018-01-25T21:59:21.024+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106077/comment/16345747",
                    "id": "16345747",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on a change in pull request #1518: ARROW-1623: [C++] Add convenience method to construct Buffer from a string that owns its memory\nURL: https://github.com/apache/arrow/pull/1518#discussion_r164868200\n \n \n\n ##########\n File path: cpp/src/arrow/buffer.cc\n ##########\n @@ -58,6 +58,17 @@ bool Buffer::Equals(const Buffer& other) const {\n                              !memcmp(data_, other.data_, static_cast<size_t>(size_))));\n }\n \n+Status Buffer::FromString(const std::string& data, MemoryPool* pool,\n+                          std::shared_ptr<Buffer>* out) {\n+  auto str = reinterpret_cast<const uint8_t*>(data.c_str());\n+  auto size = static_cast<int64_t>(data.size());\n+\n+  RETURN_NOT_OK(AllocateBuffer(pool, size, out));\n+  std::memcpy((*out)->mutable_data(), str, size);\n \n Review comment:\n   Should use `std::copy` here. This will lower to `memcpy` if possible on both gcc and clang.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-30T20:28:43.100+0000",
                    "updated": "2018-01-30T20:28:43.100+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106077/comment/16345748",
                    "id": "16345748",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on a change in pull request #1518: ARROW-1623: [C++] Add convenience method to construct Buffer from a string that owns its memory\nURL: https://github.com/apache/arrow/pull/1518#discussion_r164868701\n \n \n\n ##########\n File path: cpp/src/arrow/buffer-test.cc\n ##########\n @@ -52,6 +52,22 @@ TEST(TestBuffer, FromStdString) {\n   ASSERT_EQ(static_cast<int64_t>(val.size()), buf.size());\n }\n \n+TEST(TestBuffer, FromStdStringWithMemory) {\n+  std::string* val = new std::string(\"hello, world\");\n \n Review comment:\n   Use a stack allocated variable here: `std::string val = \"hello, world\";`. This will leak memory if one of the assertions fails.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-30T20:28:43.102+0000",
                    "updated": "2018-01-30T20:28:43.102+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106077/comment/16345749",
                    "id": "16345749",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on a change in pull request #1518: ARROW-1623: [C++] Add convenience method to construct Buffer from a string that owns its memory\nURL: https://github.com/apache/arrow/pull/1518#discussion_r164869016\n \n \n\n ##########\n File path: cpp/src/arrow/buffer.h\n ##########\n @@ -97,6 +97,16 @@ class ARROW_EXPORT Buffer {\n   Status Copy(const int64_t start, const int64_t nbytes,\n               std::shared_ptr<Buffer>* out) const;\n \n+  /// \\brief Construct a new buffer that owns its memory from a std::string\n+  ///\n+  /// \\param[in] data a std::string object\n+  /// \\param[in] pool a memory pool\n+  /// \\param[out] the created buffer\n+  ///\n+  /// \\return Status message\n+  static Status FromString(const std::string& data, MemoryPool* pool,\n+                           std::shared_ptr<Buffer>* out);\n \n Review comment:\n   Probably want to add one more signature that doesn't require `MemoryPool*`.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-30T20:28:43.107+0000",
                    "updated": "2018-01-30T20:28:43.107+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106077/comment/16345805",
                    "id": "16345805",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1518: ARROW-1623: [C++] Add convenience method to construct Buffer from a string that owns its memory\nURL: https://github.com/apache/arrow/pull/1518#discussion_r164877191\n \n \n\n ##########\n File path: cpp/src/arrow/buffer.cc\n ##########\n @@ -58,6 +58,17 @@ bool Buffer::Equals(const Buffer& other) const {\n                              !memcmp(data_, other.data_, static_cast<size_t>(size_))));\n }\n \n+Status Buffer::FromString(const std::string& data, MemoryPool* pool,\n+                          std::shared_ptr<Buffer>* out) {\n+  auto str = reinterpret_cast<const uint8_t*>(data.c_str());\n+  auto size = static_cast<int64_t>(data.size());\n+\n+  RETURN_NOT_OK(AllocateBuffer(pool, size, out));\n+  std::memcpy((*out)->mutable_data(), str, size);\n \n Review comment:\n   We use `memcpy` in lots of other places, but don't have a strong opinion\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-30T21:02:38.891+0000",
                    "updated": "2018-01-30T21:02:38.891+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106077/comment/16345814",
                    "id": "16345814",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1518: ARROW-1623: [C++] Add convenience method to construct Buffer from a string that owns its memory\nURL: https://github.com/apache/arrow/pull/1518#discussion_r164878557\n \n \n\n ##########\n File path: cpp/src/arrow/buffer-test.cc\n ##########\n @@ -52,6 +52,22 @@ TEST(TestBuffer, FromStdString) {\n   ASSERT_EQ(static_cast<int64_t>(val.size()), buf.size());\n }\n \n+TEST(TestBuffer, FromStdStringWithMemory) {\n+  std::string* val = new std::string(\"hello, world\");\n+  std::shared_ptr<Buffer> buf;\n+  std::string expected(\"hello, world\");\n+\n+  ASSERT_OK(Buffer::FromString(*val, default_memory_pool(), &buf));\n+\n+  ASSERT_EQ(0, memcmp(buf->data(), val->c_str(), val->size()));\n+  ASSERT_EQ(static_cast<int64_t>(val->size()), buf->size());\n+\n+  delete val;\n \n Review comment:\n   Note we do not use `new` and `delete` in this codebase except in rare situations (we have to use `new` to initialize `std::unique_ptr` because we do not yet have `std::make_unique`). \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-30T21:08:20.127+0000",
                    "updated": "2018-01-30T21:08:20.127+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106077/comment/16345815",
                    "id": "16345815",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1518: ARROW-1623: [C++] Add convenience method to construct Buffer from a string that owns its memory\nURL: https://github.com/apache/arrow/pull/1518#discussion_r164877485\n \n \n\n ##########\n File path: cpp/src/arrow/buffer.cc\n ##########\n @@ -58,6 +58,17 @@ bool Buffer::Equals(const Buffer& other) const {\n                              !memcmp(data_, other.data_, static_cast<size_t>(size_))));\n }\n \n+Status Buffer::FromString(const std::string& data, MemoryPool* pool,\n+                          std::shared_ptr<Buffer>* out) {\n+  auto str = reinterpret_cast<const uint8_t*>(data.c_str());\n \n Review comment:\n   This `str` variable is not needed, just pass `data.c_str()` in the memcpy call\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-30T21:08:20.155+0000",
                    "updated": "2018-01-30T21:08:20.155+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106077/comment/16345816",
                    "id": "16345816",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1518: ARROW-1623: [C++] Add convenience method to construct Buffer from a string that owns its memory\nURL: https://github.com/apache/arrow/pull/1518#issuecomment-361734748\n \n \n   Can you also rebase on upstream master so the build will pass? \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-30T21:08:44.875+0000",
                    "updated": "2018-01-30T21:08:44.875+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106077/comment/16345930",
                    "id": "16345930",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xuepanchen commented on a change in pull request #1518: ARROW-1623: [C++] Add convenience method to construct Buffer from a string that owns its memory\nURL: https://github.com/apache/arrow/pull/1518#discussion_r164900900\n \n \n\n ##########\n File path: cpp/src/arrow/buffer-test.cc\n ##########\n @@ -52,6 +52,22 @@ TEST(TestBuffer, FromStdString) {\n   ASSERT_EQ(static_cast<int64_t>(val.size()), buf.size());\n }\n \n+TEST(TestBuffer, FromStdStringWithMemory) {\n+  std::string* val = new std::string(\"hello, world\");\n \n Review comment:\n   The reason I use \"new\" here is to check after the original string is gone the created buffer is still valid, which can verify if it actually owns its memory. So I need a way to deallocate the original string.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-30T22:36:13.110+0000",
                    "updated": "2018-01-30T22:36:13.110+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106077/comment/16346213",
                    "id": "16346213",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1518: ARROW-1623: [C++] Add convenience method to construct Buffer from a string that owns its memory\nURL: https://github.com/apache/arrow/pull/1518#discussion_r164946850\n \n \n\n ##########\n File path: cpp/src/arrow/buffer-test.cc\n ##########\n @@ -52,6 +52,22 @@ TEST(TestBuffer, FromStdString) {\n   ASSERT_EQ(static_cast<int64_t>(val.size()), buf.size());\n }\n \n+TEST(TestBuffer, FromStdStringWithMemory) {\n+  std::string* val = new std::string(\"hello, world\");\n \n Review comment:\n   Got it, I would say either leave a comment to that effect (so \"new\" haters won't undo the work later) or stack allocate in an ephemeral scope\r\n   \r\n   ```\r\n   {\r\n     std::string whatever = \"hello, world\";\r\n     RETURN_NOT_OK(Buffer::FromString(whatever, pool, &buf));\r\n   }\r\n   ```\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-31T03:40:41.387+0000",
                    "updated": "2018-01-31T03:40:41.387+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106077/comment/16348932",
                    "id": "16348932",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1518: ARROW-1623: [C++] Add convenience method to construct Buffer from a string that owns its memory\nURL: https://github.com/apache/arrow/pull/1518#issuecomment-362336699\n \n \n   +1\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-01T17:14:34.104+0000",
                    "updated": "2018-02-01T17:14:34.104+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106077/comment/16348933",
                    "id": "16348933",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 1518\n[https://github.com/apache/arrow/pull/1518]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-02-01T17:14:54.196+0000",
                    "updated": "2018-02-01T17:14:54.196+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106077/comment/16348934",
                    "id": "16348934",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm closed pull request #1518: ARROW-1623: [C++] Add convenience method to construct Buffer from a string that owns its memory\nURL: https://github.com/apache/arrow/pull/1518\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/buffer-test.cc b/cpp/src/arrow/buffer-test.cc\nindex 398cc0636..a24384a38 100644\n--- a/cpp/src/arrow/buffer-test.cc\n+++ b/cpp/src/arrow/buffer-test.cc\n@@ -52,6 +52,23 @@ TEST(TestBuffer, FromStdString) {\n   ASSERT_EQ(static_cast<int64_t>(val.size()), buf.size());\n }\n \n+TEST(TestBuffer, FromStdStringWithMemory) {\n+  std::string expected = \"hello, world\";\n+  std::shared_ptr<Buffer> buf;\n+\n+  {\n+    std::string temp = \"hello, world\";\n+    ASSERT_OK(Buffer::FromString(temp, &buf));\n+    ASSERT_EQ(0, memcmp(buf->data(), temp.c_str(), temp.size()));\n+    ASSERT_EQ(static_cast<int64_t>(temp.size()), buf->size());\n+  }\n+\n+  // Now temp goes out of scope and we check if created buffer\n+  // is still valid to make sure it actually owns its space\n+  ASSERT_EQ(0, memcmp(buf->data(), expected.c_str(), expected.size()));\n+  ASSERT_EQ(static_cast<int64_t>(expected.size()), buf->size());\n+}\n+\n TEST(TestBuffer, Resize) {\n   PoolBuffer buf;\n \ndiff --git a/cpp/src/arrow/buffer.cc b/cpp/src/arrow/buffer.cc\nindex 1b8e43754..29e2c242a 100644\n--- a/cpp/src/arrow/buffer.cc\n+++ b/cpp/src/arrow/buffer.cc\n@@ -58,6 +58,18 @@ bool Buffer::Equals(const Buffer& other) const {\n                              !memcmp(data_, other.data_, static_cast<size_t>(size_))));\n }\n \n+Status Buffer::FromString(const std::string& data, MemoryPool* pool,\n+                          std::shared_ptr<Buffer>* out) {\n+  auto size = static_cast<int64_t>(data.size());\n+  RETURN_NOT_OK(AllocateBuffer(pool, size, out));\n+  std::copy(data.c_str(), data.c_str() + size, (*out)->mutable_data());\n+  return Status::OK();\n+}\n+\n+Status Buffer::FromString(const std::string& data, std::shared_ptr<Buffer>* out) {\n+  return FromString(data, default_memory_pool(), out);\n+}\n+\n PoolBuffer::PoolBuffer(MemoryPool* pool) : ResizableBuffer(nullptr, 0) {\n   if (pool == nullptr) {\n     pool = default_memory_pool();\ndiff --git a/cpp/src/arrow/buffer.h b/cpp/src/arrow/buffer.h\nindex 44c352a93..d12eeb4df 100644\n--- a/cpp/src/arrow/buffer.h\n+++ b/cpp/src/arrow/buffer.h\n@@ -97,6 +97,20 @@ class ARROW_EXPORT Buffer {\n   Status Copy(const int64_t start, const int64_t nbytes,\n               std::shared_ptr<Buffer>* out) const;\n \n+  /// \\brief Construct a new buffer that owns its memory from a std::string\n+  ///\n+  /// \\param[in] data a std::string object\n+  /// \\param[in] pool a memory pool\n+  /// \\param[out] out the created buffer\n+  ///\n+  /// \\return Status message\n+  static Status FromString(const std::string& data, MemoryPool* pool,\n+                           std::shared_ptr<Buffer>* out);\n+\n+  /// \\brief Construct a new buffer that owns its memory from a std::string\n+  /// using the default memory pool\n+  static Status FromString(const std::string& data, std::shared_ptr<Buffer>* out);\n+\n   int64_t capacity() const { return capacity_; }\n   const uint8_t* data() const { return data_; }\n   uint8_t* mutable_data() { return mutable_data_; }\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-01T17:14:58.749+0000",
                    "updated": "2018-02-01T17:14:58.749+0000"
                }
            ],
            "maxResults": 18,
            "total": 18,
            "startAt": 0
        },
        "customfield_12311820": "0|i3kpxb:",
        "customfield_12314139": null
    }
}