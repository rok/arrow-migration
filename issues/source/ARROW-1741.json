{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13112420",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112420",
    "key": "ARROW-1741",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
            "name": "bkietz",
            "key": "bkietz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
            },
            "displayName": "Ben Kietzman",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 9000,
            "total": 9000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 9000,
            "total": 9000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1741/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 16,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112420/worklog/309794",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5342: ARROW-1741: [C++] Add DictionaryType::ComparableWithoutUnification\nURL: https://github.com/apache/arrow/pull/5342\n \n \n   Tests whether arrays' dictionaries are prefixes of other arrays' dictionaries, which allows them to be compared without unification since the indices refer to identical values.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-10T13:13:16.928+0000",
                    "updated": "2019-09-10T13:13:16.928+0000",
                    "started": "2019-09-10T13:13:16.928+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "309794",
                    "issueId": "13112420"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112420/worklog/309866",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #5342: ARROW-1741: [C++] Add DictionaryType::ComparableWithoutUnification\nURL: https://github.com/apache/arrow/pull/5342#discussion_r322790158\n \n \n\n ##########\n File path: cpp/src/arrow/type.cc\n ##########\n @@ -478,6 +479,47 @@ std::string DictionaryType::ToString() const {\n   return ss.str();\n }\n \n+Result<bool> DictionaryType::ComparableWithoutUnification(\n+    std::vector<const Array*> arrays) {\n+  if (arrays.size() == 0) {\n+    return Status::Invalid(\"need at least one input array\");\n+  }\n+\n+  for (auto a : arrays) {\n+    if (a->type_id() != Type::DICTIONARY) {\n+      return Status::TypeError(\"input arrays must be dictionary arrays\");\n+    }\n+  }\n+\n+  for (auto a : arrays) {\n+    // XXX should this be a false return instead of an error? Unification can\n+    // reconcile differing index types, for example\n+    if (!a->type()->Equals(arrays[0]->type())) {\n+      return Status::TypeError(\"array types not all consistent \", *arrays[0]->type(),\n+                               \" vs \", *a->type());\n+    }\n+  }\n \n Review comment:\n   I think returning false is better. This is doing too much in one function IMHO\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-10T14:51:41.746+0000",
                    "updated": "2019-09-10T14:51:41.746+0000",
                    "started": "2019-09-10T14:51:41.746+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "309866",
                    "issueId": "13112420"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112420/worklog/309867",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #5342: ARROW-1741: [C++] Add DictionaryType::ComparableWithoutUnification\nURL: https://github.com/apache/arrow/pull/5342#discussion_r322790387\n \n \n\n ##########\n File path: cpp/src/arrow/type.cc\n ##########\n @@ -478,6 +479,47 @@ std::string DictionaryType::ToString() const {\n   return ss.str();\n }\n \n+Result<bool> DictionaryType::ComparableWithoutUnification(\n+    std::vector<const Array*> arrays) {\n+  if (arrays.size() == 0) {\n+    return Status::Invalid(\"need at least one input array\");\n+  }\n+\n+  for (auto a : arrays) {\n+    if (a->type_id() != Type::DICTIONARY) {\n+      return Status::TypeError(\"input arrays must be dictionary arrays\");\n+    }\n+  }\n \n Review comment:\n   If this is written as a two-argument function where the inputs are DictionaryArray then these checks aren't needed\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-10T14:51:41.751+0000",
                    "updated": "2019-09-10T14:51:41.751+0000",
                    "started": "2019-09-10T14:51:41.750+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "309867",
                    "issueId": "13112420"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112420/worklog/309868",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #5342: ARROW-1741: [C++] Add DictionaryType::ComparableWithoutUnification\nURL: https://github.com/apache/arrow/pull/5342#discussion_r322787677\n \n \n\n ##########\n File path: cpp/src/arrow/type.h\n ##########\n @@ -1256,6 +1257,10 @@ class ARROW_EXPORT DictionaryType : public FixedWidthType {\n \n   bool ordered() const { return ordered_; }\n \n+  /// \\brief Determine whether dictionary arrays may be compared without unification\n+  /// (smaller dictionaries are prefixes of larger dictionaries)\n+  static Result<bool> ComparableWithoutUnification(std::vector<const Array*> arrays);\n \n Review comment:\n   It may be a nitpick but I would prefer to put this function into `arrow/array/dictionary_util.h` or `arrow/array/array_dict.h` (since splitting up `array.h` is going to happen eventually)\r\n   \r\n   I might prefer a two-argument version of this. \r\n   \r\n   ```\r\n   namespace dictionary {\r\n   \r\n   bool CanCompareIndices(const DictionaryArray& left, const DictionaryArray& right);\r\n   \r\n   }\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-10T14:51:41.776+0000",
                    "updated": "2019-09-10T14:51:41.776+0000",
                    "started": "2019-09-10T14:51:41.775+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "309868",
                    "issueId": "13112420"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112420/worklog/309871",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #5342: ARROW-1741: [C++] Add DictionaryType::ComparableWithoutUnification\nURL: https://github.com/apache/arrow/pull/5342#discussion_r322791014\n \n \n\n ##########\n File path: cpp/src/arrow/type.h\n ##########\n @@ -1256,6 +1257,10 @@ class ARROW_EXPORT DictionaryType : public FixedWidthType {\n \n   bool ordered() const { return ordered_; }\n \n+  /// \\brief Determine whether dictionary arrays may be compared without unification\n+  /// (smaller dictionaries are prefixes of larger dictionaries)\n+  static Result<bool> ComparableWithoutUnification(std::vector<const Array*> arrays);\n \n Review comment:\n   ```\r\n   DictionaryArray::CanCompareIndices\r\n   ```\r\n   \r\n   would be OK too\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-10T14:52:21.895+0000",
                    "updated": "2019-09-10T14:52:21.895+0000",
                    "started": "2019-09-10T14:52:21.894+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "309871",
                    "issueId": "13112420"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112420/worklog/309881",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5342: ARROW-1741: [C++] Add DictionaryType::ComparableWithoutUnification\nURL: https://github.com/apache/arrow/pull/5342#discussion_r322795671\n \n \n\n ##########\n File path: cpp/src/arrow/type.cc\n ##########\n @@ -478,6 +479,47 @@ std::string DictionaryType::ToString() const {\n   return ss.str();\n }\n \n+Result<bool> DictionaryType::ComparableWithoutUnification(\n+    std::vector<const Array*> arrays) {\n+  if (arrays.size() == 0) {\n+    return Status::Invalid(\"need at least one input array\");\n+  }\n+\n+  for (auto a : arrays) {\n+    if (a->type_id() != Type::DICTIONARY) {\n+      return Status::TypeError(\"input arrays must be dictionary arrays\");\n+    }\n+  }\n+\n+  for (auto a : arrays) {\n+    // XXX should this be a false return instead of an error? Unification can\n \n Review comment:\n   @wesm \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-10T14:59:30.028+0000",
                    "updated": "2019-09-10T14:59:30.028+0000",
                    "started": "2019-09-10T14:59:30.028+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "309881",
                    "issueId": "13112420"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112420/worklog/309882",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5342: ARROW-1741: [C++] Add DictionaryType::ComparableWithoutUnification\nURL: https://github.com/apache/arrow/pull/5342#discussion_r322795671\n \n \n\n ##########\n File path: cpp/src/arrow/type.cc\n ##########\n @@ -478,6 +479,47 @@ std::string DictionaryType::ToString() const {\n   return ss.str();\n }\n \n+Result<bool> DictionaryType::ComparableWithoutUnification(\n+    std::vector<const Array*> arrays) {\n+  if (arrays.size() == 0) {\n+    return Status::Invalid(\"need at least one input array\");\n+  }\n+\n+  for (auto a : arrays) {\n+    if (a->type_id() != Type::DICTIONARY) {\n+      return Status::TypeError(\"input arrays must be dictionary arrays\");\n+    }\n+  }\n+\n+  for (auto a : arrays) {\n+    // XXX should this be a false return instead of an error? Unification can\n \n Review comment:\n   @wesm \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-10T14:59:42.532+0000",
                    "updated": "2019-09-10T14:59:42.532+0000",
                    "started": "2019-09-10T14:59:42.531+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "309882",
                    "issueId": "13112420"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112420/worklog/309884",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5342: ARROW-1741: [C++] Add DictionaryType::ComparableWithoutUnification\nURL: https://github.com/apache/arrow/pull/5342#discussion_r322796688\n \n \n\n ##########\n File path: cpp/src/arrow/type.cc\n ##########\n @@ -478,6 +479,47 @@ std::string DictionaryType::ToString() const {\n   return ss.str();\n }\n \n+Result<bool> DictionaryType::ComparableWithoutUnification(\n+    std::vector<const Array*> arrays) {\n+  if (arrays.size() == 0) {\n+    return Status::Invalid(\"need at least one input array\");\n+  }\n+\n+  for (auto a : arrays) {\n+    if (a->type_id() != Type::DICTIONARY) {\n+      return Status::TypeError(\"input arrays must be dictionary arrays\");\n+    }\n+  }\n \n Review comment:\n   I was following the signature of `DictionaryType::Unify()`. Would you prefer the signature `DictionaryArray::CanCompareIndices(const DictionaryArray&)` or so?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-10T15:01:14.605+0000",
                    "updated": "2019-09-10T15:01:14.605+0000",
                    "started": "2019-09-10T15:01:14.605+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "309884",
                    "issueId": "13112420"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112420/worklog/309885",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5342: ARROW-1741: [C++] Add DictionaryType::ComparableWithoutUnification\nURL: https://github.com/apache/arrow/pull/5342#discussion_r322796688\n \n \n\n ##########\n File path: cpp/src/arrow/type.cc\n ##########\n @@ -478,6 +479,47 @@ std::string DictionaryType::ToString() const {\n   return ss.str();\n }\n \n+Result<bool> DictionaryType::ComparableWithoutUnification(\n+    std::vector<const Array*> arrays) {\n+  if (arrays.size() == 0) {\n+    return Status::Invalid(\"need at least one input array\");\n+  }\n+\n+  for (auto a : arrays) {\n+    if (a->type_id() != Type::DICTIONARY) {\n+      return Status::TypeError(\"input arrays must be dictionary arrays\");\n+    }\n+  }\n \n Review comment:\n   I was following the signature of `DictionaryType::Unify()`. Would you prefer the signature `DictionaryArray::CanCompareIndices(const DictionaryArray&)` or so?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-10T15:01:59.464+0000",
                    "updated": "2019-09-10T15:01:59.464+0000",
                    "started": "2019-09-10T15:01:59.464+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "309885",
                    "issueId": "13112420"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112420/worklog/309886",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5342: ARROW-1741: [C++] Add DictionaryType::ComparableWithoutUnification\nURL: https://github.com/apache/arrow/pull/5342#discussion_r322797741\n \n \n\n ##########\n File path: cpp/src/arrow/type.cc\n ##########\n @@ -478,6 +479,47 @@ std::string DictionaryType::ToString() const {\n   return ss.str();\n }\n \n+Result<bool> DictionaryType::ComparableWithoutUnification(\n+    std::vector<const Array*> arrays) {\n+  if (arrays.size() == 0) {\n+    return Status::Invalid(\"need at least one input array\");\n+  }\n+\n+  for (auto a : arrays) {\n+    if (a->type_id() != Type::DICTIONARY) {\n+      return Status::TypeError(\"input arrays must be dictionary arrays\");\n+    }\n+  }\n+\n+  for (auto a : arrays) {\n+    // XXX should this be a false return instead of an error? Unification can\n+    // reconcile differing index types, for example\n+    if (!a->type()->Equals(arrays[0]->type())) {\n+      return Status::TypeError(\"array types not all consistent \", *arrays[0]->type(),\n+                               \" vs \", *a->type());\n+    }\n+  }\n \n Review comment:\n   Not sure what you mean; what is doing too much? Checking for type agreement seems necessary\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-10T15:03:00.833+0000",
                    "updated": "2019-09-10T15:03:00.833+0000",
                    "started": "2019-09-10T15:03:00.833+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "309886",
                    "issueId": "13112420"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112420/worklog/309887",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5342: ARROW-1741: [C++] Add DictionaryType::ComparableWithoutUnification\nURL: https://github.com/apache/arrow/pull/5342#discussion_r322798038\n \n \n\n ##########\n File path: cpp/src/arrow/type.h\n ##########\n @@ -1256,6 +1257,10 @@ class ARROW_EXPORT DictionaryType : public FixedWidthType {\n \n   bool ordered() const { return ordered_; }\n \n+  /// \\brief Determine whether dictionary arrays may be compared without unification\n+  /// (smaller dictionaries are prefixes of larger dictionaries)\n+  static Result<bool> ComparableWithoutUnification(std::vector<const Array*> arrays);\n \n Review comment:\n   I'll refactor to that\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-10T15:03:30.579+0000",
                    "updated": "2019-09-10T15:03:30.579+0000",
                    "started": "2019-09-10T15:03:30.579+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "309887",
                    "issueId": "13112420"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112420/worklog/309895",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #5342: ARROW-1741: [C++] Add DictionaryType::ComparableWithoutUnification\nURL: https://github.com/apache/arrow/pull/5342#discussion_r322806170\n \n \n\n ##########\n File path: cpp/src/arrow/type.cc\n ##########\n @@ -478,6 +479,47 @@ std::string DictionaryType::ToString() const {\n   return ss.str();\n }\n \n+Result<bool> DictionaryType::ComparableWithoutUnification(\n+    std::vector<const Array*> arrays) {\n+  if (arrays.size() == 0) {\n+    return Status::Invalid(\"need at least one input array\");\n+  }\n+\n+  for (auto a : arrays) {\n+    if (a->type_id() != Type::DICTIONARY) {\n+      return Status::TypeError(\"input arrays must be dictionary arrays\");\n+    }\n+  }\n+\n+  for (auto a : arrays) {\n+    // XXX should this be a false return instead of an error? Unification can\n+    // reconcile differing index types, for example\n+    if (!a->type()->Equals(arrays[0]->type())) {\n+      return Status::TypeError(\"array types not all consistent \", *arrays[0]->type(),\n+                               \" vs \", *a->type());\n+    }\n+  }\n \n Review comment:\n   I mean that returning an error is going too far\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-10T15:18:04.778+0000",
                    "updated": "2019-09-10T15:18:04.778+0000",
                    "started": "2019-09-10T15:18:04.777+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "309895",
                    "issueId": "13112420"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112420/worklog/309896",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #5342: ARROW-1741: [C++] Add DictionaryType::ComparableWithoutUnification\nURL: https://github.com/apache/arrow/pull/5342#discussion_r322806170\n \n \n\n ##########\n File path: cpp/src/arrow/type.cc\n ##########\n @@ -478,6 +479,47 @@ std::string DictionaryType::ToString() const {\n   return ss.str();\n }\n \n+Result<bool> DictionaryType::ComparableWithoutUnification(\n+    std::vector<const Array*> arrays) {\n+  if (arrays.size() == 0) {\n+    return Status::Invalid(\"need at least one input array\");\n+  }\n+\n+  for (auto a : arrays) {\n+    if (a->type_id() != Type::DICTIONARY) {\n+      return Status::TypeError(\"input arrays must be dictionary arrays\");\n+    }\n+  }\n+\n+  for (auto a : arrays) {\n+    // XXX should this be a false return instead of an error? Unification can\n+    // reconcile differing index types, for example\n+    if (!a->type()->Equals(arrays[0]->type())) {\n+      return Status::TypeError(\"array types not all consistent \", *arrays[0]->type(),\n+                               \" vs \", *a->type());\n+    }\n+  }\n \n Review comment:\n   I mean that returning an error is going too far. Error Status should not be used for routine argument validation\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-10T15:18:17.369+0000",
                    "updated": "2019-09-10T15:18:17.369+0000",
                    "started": "2019-09-10T15:18:17.368+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "309896",
                    "issueId": "13112420"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112420/worklog/309915",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5342: ARROW-1741: [C++] Add DictionaryType::ComparableWithoutUnification\nURL: https://github.com/apache/arrow/pull/5342#discussion_r322821007\n \n \n\n ##########\n File path: cpp/src/arrow/type.cc\n ##########\n @@ -478,6 +479,47 @@ std::string DictionaryType::ToString() const {\n   return ss.str();\n }\n \n+Result<bool> DictionaryType::ComparableWithoutUnification(\n+    std::vector<const Array*> arrays) {\n+  if (arrays.size() == 0) {\n+    return Status::Invalid(\"need at least one input array\");\n+  }\n+\n+  for (auto a : arrays) {\n+    if (a->type_id() != Type::DICTIONARY) {\n+      return Status::TypeError(\"input arrays must be dictionary arrays\");\n+    }\n+  }\n+\n+  for (auto a : arrays) {\n+    // XXX should this be a false return instead of an error? Unification can\n+    // reconcile differing index types, for example\n+    if (!a->type()->Equals(arrays[0]->type())) {\n+      return Status::TypeError(\"array types not all consistent \", *arrays[0]->type(),\n+                               \" vs \", *a->type());\n+    }\n+  }\n \n Review comment:\n   I was following `DictionaryType::Unify` which returns Error status under this condition\r\n   https://github.com/apache/arrow/blob/2ba0566/cpp/src/arrow/array/builder_dict.cc#L130-L133\r\n   I can change this to a DCHECK\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-10T15:43:56.813+0000",
                    "updated": "2019-09-10T15:43:56.813+0000",
                    "started": "2019-09-10T15:43:56.813+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "309915",
                    "issueId": "13112420"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112420/worklog/311428",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on issue #5342: ARROW-1741: [C++] Add DictionaryArray::CanCompareIndices\nURL: https://github.com/apache/arrow/pull/5342#issuecomment-530844663\n \n \n   @wesm how's this?\r\n   The Travis failure is https://issues.apache.org/jira/browse/ARROW-6509\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-12T14:11:48.775+0000",
                    "updated": "2019-09-12T14:11:48.775+0000",
                    "started": "2019-09-12T14:11:48.774+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "311428",
                    "issueId": "13112420"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112420/worklog/312613",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #5342: ARROW-1741: [C++] Add DictionaryArray::CanCompareIndices\nURL: https://github.com/apache/arrow/pull/5342\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-14T22:34:54.610+0000",
                    "updated": "2019-09-14T22:34:54.610+0000",
                    "started": "2019-09-14T22:34:54.609+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "312613",
                    "issueId": "13112420"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 9000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@520210ff[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@240a0691[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@15777ad7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@613dc866[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6a4db292[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@3dc35b40[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@13cc3fed[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@1c3dab0a[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1b63533d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3c5d024a[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4e9c717b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@3f08e659[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 9000,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Sep 14 22:34:54 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-09-14T22:34:54.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1741/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2017-10-26T22:37:35.000+0000",
        "updated": "2019-09-14T22:34:54.000+0000",
        "timeoriginalestimate": null,
        "description": "For example, if one array's dictionary is larger than the other, but the overlapping beginning portion is the same, then the respective dictionary indices correspond to the same values. Therefore, in analytics, one may choose to drop the smaller dictionary in favor of the larger dictionary, and this need not incur any computational overhead (beyond comparing the dictionary prefixes -- there may be some way to engineer \"dictionary lineage\" to make this comparison even cheaper)",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 9000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Comparison function for DictionaryArray to determine if indices are \"compatible\"",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112420/comment/16340320",
                    "id": "16340320",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=1xuepanchen1",
                        "name": "1xuepanchen1",
                        "key": "1xuepanchen1",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10445",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10445",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10445",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10445"
                        },
                        "displayName": "Panchen Xue",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Is the following pseudocode correct?\r\n{code:java}\r\nstd::shared_ptr<DictionaryArray> small;\r\nstd::shared_ptr<DictionaryArray> large;\r\n/* \r\n   bool RangeEquals(int64_t start_idx,\r\n                    int64_t end_idx,\r\n                    int64_t other_start_idx, \r\n                    const std::shared_ptr<Array>& other) const;\r\n*/\r\nif (small->RangeEquals(0, small->size() , 0, large)) {\r\n  // SetDictionary() to be implemented\r\n  small->SetDictionary(large->dictionary());\r\n}\r\n{code}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=1xuepanchen1",
                        "name": "1xuepanchen1",
                        "key": "1xuepanchen1",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10445",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10445",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10445",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10445"
                        },
                        "displayName": "Panchen Xue",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-25T23:57:55.292+0000",
                    "updated": "2018-01-25T23:57:55.292+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112420/comment/16340458",
                    "id": "16340458",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I'm not sure about the right API for this yet, since this feature is not yet\u00a0needed for anything right now (I have not set a\u00a0\"Fix Version\" yet). When we implement array vector comparisons (e.g. {{a == b}}) this will be useful to enable dictionary-encoded arrays to be compared if one dictionary is contained in another.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-01-26T02:12:08.185+0000",
                    "updated": "2018-01-26T02:12:08.185+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112420/comment/16845961",
                    "id": "16845961",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Now that we have variable dictionaries in C++, having a function to determine if two DictionaryArrays can be compared without a unification step would be useful. ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-05-22T15:02:40.169+0000",
                    "updated": "2019-05-22T15:02:40.169+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112420/comment/16912491",
                    "id": "16912491",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I think it's straightforward to add a method to check whether two DictionaryArray objects have dictionaries that are the same or one is a subset of the other (slice to min of lengths, then use Array::Equals)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-08-21T16:37:00.268+0000",
                    "updated": "2019-08-21T16:37:00.268+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112420/comment/16929834",
                    "id": "16929834",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 5342\n[https://github.com/apache/arrow/pull/5342]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-09-14T22:34:54.479+0000",
                    "updated": "2019-09-14T22:34:54.479+0000"
                }
            ],
            "maxResults": 5,
            "total": 5,
            "startAt": 0
        },
        "customfield_12311820": "0|i3lrhr:",
        "customfield_12314139": null
    }
}