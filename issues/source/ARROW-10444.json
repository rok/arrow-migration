{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13338171",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13338171",
    "key": "ARROW-10444",
    "fields": {
        "fixVersions": [],
        "resolution": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": 3600,
        "timeestimate": 3600,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345977",
                "id": "12345977",
                "description": "",
                "name": "2.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-10-19"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": null,
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
            "description": "The issue is open and ready for the assignee to start work on it.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
            "name": "Open",
            "id": "1",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                "id": 2,
                "key": "new",
                "colorName": "blue-gray",
                "name": "To Do"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 3600,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=stevesimmons",
            "name": "stevesimmons",
            "key": "stevesimmons",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Stephen Simmons",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=stevesimmons",
            "name": "stevesimmons",
            "key": "stevesimmons",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Stephen Simmons",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 3600,
            "percent": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 3600,
            "percent": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-10444/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@602b7af3[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2e423cc2[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@e1c8a13[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@3107033e[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@22db9911[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@4b7c89a9[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@21dacec7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@284d2731[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@56a03038[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@79beca84[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@ee59f82[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@4f5055c0[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Nov 02 22:23:59 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": null,
        "workratio": 0,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-10444/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2020-10-31T02:23:12.000+0000",
        "updated": "2020-11-02T22:27:21.000+0000",
        "timeoriginalestimate": 3600,
        "description": "I am working with Parquet files produced by AWS Redshift's UNLOAD command. The schema has several timestamp columns stored as INT96. I have noticed their min/max values are omitted from the PyArrow's metadata\u00a0\r\n\r\ne.g. For this column in my table schema: {{dv_startdateutc: timestamp[ns]}}, the statistics section of the column metadata is None, i.e. not filled in with the min/max values present in the other non-timestamp columns:\r\n{code:python}\r\n<pyarrow._parquet.ColumnChunkMetaData object at 0x7ff5000d1a10>\r\n file_offset: 1342723\r\n file_path: \r\n physical_type: INT96\r\n num_values: 150144\r\n path_in_schema: dv_startdateutc\r\n is_stats_set: False\r\n statistics: None\r\n compression: SNAPPY\r\n encodings: ('PLAIN_DICTIONARY', 'PLAIN', 'RLE')\r\n has_dictionary_page: True\r\n dictionary_page_offset: 1342659\r\n data_page_offset: 1342687\r\n total_compressed_size: 64\r\n total_uncompressed_size: 60\r\n{code}\r\nThis means PyArrow cannot use metadata to filter dataset reads by date/time.\r\n \u00a0\r\n I suspect this bug arises in {{_cast_statistic_raw_min()}}\u00a0and {{_cast_statistic_raw_max()}}\u00a0in {{/python/pyarrow/_parquet.pyx}} at L180. The code extracts below show there are casts for {{ParquetType_INT32}} and\u00a0{{ParquetType_INT64}}, but not for {{ParquetType_INT96}}.\r\n\r\nCan a case be added for {{ParquetType_INT96}} in both of these?\r\n\r\nNote that those raw {{ParquetType_INT96}} will be converted to the appropriate timestamp type in {{_box_logical_type_value(raw, statistics.descr())}}\r\n\r\n\u00a0\r\n\r\nThanks\r\n Stephen\r\n{code:python}\r\n cdef\u00a0_cast_statistic_raw_min(CStatistics*\u00a0statistics):\r\n \u00a0\u00a0\u00a0\u00a0cdef\u00a0ParquetType\u00a0physical_type\u00a0=\u00a0statistics.physical_type()\r\n \u00a0\u00a0\u00a0\u00a0cdef\u00a0uint32_t\u00a0type_length\u00a0=\u00a0statistics.descr().type_length()\r\n \u00a0\u00a0\u00a0\u00a0if\u00a0physical_type\u00a0==\u00a0ParquetType_BOOLEAN:\r\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return\u00a0(<CBoolStatistics*>\u00a0statistics).min()\r\n \u00a0\u00a0\u00a0\u00a0elif\u00a0physical_type\u00a0==\u00a0ParquetType_INT32:\r\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return\u00a0(<CInt32Statistics*>\u00a0statistics).min()\r\n \u00a0\u00a0\u00a0\u00a0elif\u00a0physical_type\u00a0==\u00a0ParquetType_INT64:\r\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return\u00a0(<CInt64Statistics*>\u00a0statistics).min()\r\n \u00a0\u00a0\u00a0\u00a0# ADD ParquetType_INT96 here!!! \u00a0\u00a0\u00a0\u00a0\r\n     elif\u00a0physical_type\u00a0==\u00a0ParquetType_FLOAT:\r\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return\u00a0(<CFloatStatistics*>\u00a0statistics).min()\r\n \u00a0\u00a0\u00a0\u00a0elif\u00a0physical_type\u00a0==\u00a0ParquetType_DOUBLE:\r\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return\u00a0(<CDoubleStatistics*>\u00a0statistics).min()\r\n \u00a0\u00a0\u00a0\u00a0elif\u00a0physical_type\u00a0==\u00a0ParquetType_BYTE_ARRAY:\r\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return\u00a0_box_byte_array((<CByteArrayStatistics*>\u00a0statistics).min())\r\n \u00a0\u00a0\u00a0\u00a0elif\u00a0physical_type\u00a0==\u00a0ParquetType_FIXED_LEN_BYTE_ARRAY:\r\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return\u00a0_box_flba((<CFLBAStatistics*>\u00a0statistics).min(),\u00a0type_length)\r\n\r\ncdef\u00a0_cast_statistic_raw_max(CStatistics*\u00a0statistics):\r\n \u00a0\u00a0\u00a0\u00a0cdef\u00a0ParquetType\u00a0physical_type\u00a0=\u00a0statistics.physical_type()\r\n \u00a0\u00a0\u00a0\u00a0cdef\u00a0uint32_t\u00a0type_length\u00a0=\u00a0statistics.descr().type_length()\r\n \u00a0\u00a0\u00a0\u00a0if\u00a0physical_type\u00a0==\u00a0ParquetType_BOOLEAN:\r\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return\u00a0(<CBoolStatistics*>\u00a0statistics).max()\r\n \u00a0\u00a0\u00a0\u00a0elif\u00a0physical_type\u00a0==\u00a0ParquetType_INT32:\r\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return\u00a0(<CInt32Statistics*>\u00a0statistics).max()\r\n \u00a0\u00a0\u00a0\u00a0elif\u00a0physical_type\u00a0==\u00a0ParquetType_INT64:\r\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return\u00a0(<CInt64Statistics*>\u00a0statistics).max()\r\n     # ADD ParquetType_INT96 here!!!\r\n \u00a0\u00a0\u00a0\u00a0elif\u00a0physical_type\u00a0==\u00a0ParquetType_FLOAT:\r\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return\u00a0(<CFloatStatistics*>\u00a0statistics).max()\r\n \u00a0\u00a0\u00a0\u00a0elif\u00a0physical_type\u00a0==\u00a0ParquetType_DOUBLE:\r\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return\u00a0(<CDoubleStatistics*>\u00a0statistics).max()\r\n \u00a0\u00a0\u00a0\u00a0elif\u00a0physical_type\u00a0==\u00a0ParquetType_BYTE_ARRAY:\r\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return\u00a0_box_byte_array((<CByteArrayStatistics*>\u00a0statistics).max())\r\n \u00a0\u00a0\u00a0\u00a0elif\u00a0physical_type\u00a0==\u00a0ParquetType_FIXED_LEN_BYTE_ARRAY:\r\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return\u00a0_box_flba((<CFLBAStatistics*>\u00a0statistics).max(),\u00a0type_length)\r\n{code}",
        "customfield_10010": null,
        "timetracking": {
            "originalEstimate": "1h",
            "remainingEstimate": "1h",
            "originalEstimateSeconds": 3600,
            "remainingEstimateSeconds": 3600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Timestamp metadata min/max stored as INT96 cannot be read in",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13338171/comment/17223998",
                    "id": "17223998",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield",
                        "name": "emkornfield",
                        "key": "emkornfield",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "I think if you want to try to make a pull request, we can add it.\u00a0 I would guess the reason why it hasn't been added is int96 is considered deprecated (it might be bits are missing elsewhere to properly filter on int96 types as well).",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield",
                        "name": "emkornfield",
                        "key": "emkornfield",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2020-10-31T04:34:44.763+0000",
                    "updated": "2020-10-31T04:34:44.763+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13338171/comment/17224073",
                    "id": "17224073",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=stevesimmons",
                        "name": "stevesimmons",
                        "key": "stevesimmons",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Stephen Simmons",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Deprecated is fine for writing, but when you're reading, you have the parquet files you're given!\r\n\r\nLooks like I'll also need to define a CInt96Statistics or maybe CTimestampStatistics class in {{_parquet.pxd}}.\r\n\r\nFor reference, the conversion from Int96 Impala timestamp to int64[ns] in {{/parquet-cpp/parquet/arrow/reader.h}}\u00a0has:\r\n{code:java}\r\nconstexpr int64_t kJulianToUnixEpochDays = 2440588LL;\r\nconstexpr int64_t kMillisecondsInADay = 86400000LL;\r\nconstexpr int64_t kNanosecondsInADay = kMillisecondsInADay * 1000LL * 1000LL;\r\n\r\nstatic inline int64_t impala_timestamp_to_nanoseconds(const Int96& impala_timestamp) {\r\n  int64_t days_since_epoch = impala_timestamp.value[2] - kJulianToUnixEpochDays;\r\n  int64_t nanoseconds = *(reinterpret_cast<const int64_t*>(&(impala_timestamp.value)));\r\n  return days_since_epoch * kNanosecondsInADay + nanoseconds;\r\n} {code}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=stevesimmons",
                        "name": "stevesimmons",
                        "key": "stevesimmons",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Stephen Simmons",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2020-10-31T13:20:58.006+0000",
                    "updated": "2020-10-31T13:29:31.493+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13338171/comment/17224782",
                    "id": "17224782",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "Do you have a small reproducer / parquet file with statistics included for int96 columns? \r\nBecause it seems the Arrow parquet writer does not write statistics for int96 columns. Not fully sure here, though, but a small test like this gives {{is_stats_set=False}}:\r\n\r\n{code}\r\nIn [8]: import pyarrow.parquet as pq\r\n\r\nIn [11]: table = pa.table({\"timestamp\": pa.array([\"2020-01-01\", \"2020-01-02\"]).cast(pa.timestamp(\"us\"))})\r\n\r\nIn [13]: pq.write_table(table, \"test.parquet\", use_deprecated_int96_timestamps=True)\r\n\r\nIn [16]: meta = pq.read_metadata(\"test.parquet\")\r\n\r\nIn [17]: meta.schema\r\nOut[17]: \r\n<pyarrow._parquet.ParquetSchema object at 0x7f597248cac8>\r\nrequired group field_id=0 schema {\r\n  optional int96 field_id=1 timestamp;\r\n}\r\n\r\nIn [18]: meta.schema.to_arrow_schema()\r\nOut[18]: \r\ntimestamp: timestamp[ns]\r\n  -- field metadata --\r\n  PARQUET:field_id: '1'\r\n\r\nIn [19]: meta.row_group(0).column(0)\r\nOut[19]: \r\n<pyarrow._parquet.ColumnChunkMetaData object at 0x7f5970706548>\r\n  file_offset: 70\r\n  file_path: \r\n  physical_type: INT96\r\n  num_values: 2\r\n  path_in_schema: timestamp\r\n  is_stats_set: False\r\n  statistics:\r\n    None\r\n  compression: SNAPPY\r\n  encodings: ('PLAIN_DICTIONARY', 'PLAIN', 'RLE')\r\n  has_dictionary_page: True\r\n  dictionary_page_offset: 4\r\n  data_page_offset: 40\r\n  total_compressed_size: 66\r\n  total_uncompressed_size: 66\r\n\r\n{code}\r\n\r\nSuch a reproducer will be needed to add a test for it.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2020-11-02T16:19:18.802+0000",
                    "updated": "2020-11-02T16:19:18.802+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13338171/comment/17224991",
                    "id": "17224991",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=stevesimmons",
                        "name": "stevesimmons",
                        "key": "stevesimmons",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Stephen Simmons",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Hi Joris. I thought about investigating what's actually written in that field's metadata. My original parquet files are are dataset made up of 800 6GB files written by an AWS Redshift database that I don't have access to, saved into S3 buckets that are tightly permissioned, and which I can only access via a secure JupyterHub session. So it will take me some time to dig into whether Redshift writes INT96 min/max values or not.\r\n\r\nThanks for your example. I had traced though that code path in PyArrow earlier. The underlying reason why PyArrow does not write max/min statistics for timestamps as INT96 is because INT96 is defined as SORTORDER::UNSIGNED in cpp\\src\\parquet\\statistics.h|.cpp.\r\n\r\nSo assuming Redshift writes the INT96 statistics, it will need some more involved work on the arrow side to read it.\u00a0 \u00a0 \u00a0 \u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=stevesimmons",
                        "name": "stevesimmons",
                        "key": "stevesimmons",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Stephen Simmons",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2020-11-02T22:23:59.459+0000",
                    "updated": "2020-11-02T22:27:21.324+0000"
                }
            ],
            "maxResults": 4,
            "total": 4,
            "startAt": 0
        },
        "customfield_12311820": "0|z0k64w:",
        "customfield_12314139": null
    }
}