{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13071352",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071352",
    "key": "ARROW-1012",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12344925",
                "id": "12344925",
                "description": "",
                "name": "0.14.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-07-04"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "parquet",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12564519",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12564519",
                "type": {
                    "id": "12310000",
                    "name": "Duplicate",
                    "inward": "is duplicated by",
                    "outward": "duplicates",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310000"
                },
                "inwardIssue": {
                    "id": "13148524",
                    "key": "ARROW-3771",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13148524",
                    "fields": {
                        "summary": "[C++] GetRecordBatchReader in parquet/arrow/reader.h should be able to specify chunksize",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                            "name": "Closed",
                            "id": "6",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
                            "name": "Minor",
                            "id": "4"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=hatem",
            "name": "hatem",
            "key": "hatem",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Hatem Helal",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 10800,
            "total": 10800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 10800,
            "total": 10800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1012/votes",
            "votes": 2,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 18,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071352/worklog/241170",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "hatemhelal commented on pull request #4304: ARROW-1012: [C++] Configurable batch size for parquet RecordBatchReader\nURL: https://github.com/apache/arrow/pull/4304\n \n \n   This patch adds support for configuring the record batch size when reading a parquet file by adding a  `batch_size` to `ArrowReaderProperties`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-13T17:02:11.581+0000",
                    "updated": "2019-05-13T17:02:11.581+0000",
                    "started": "2019-05-13T17:02:11.580+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "241170",
                    "issueId": "13071352"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071352/worklog/241171",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "hatemhelal commented on issue #4304: ARROW-1012: [C++] Configurable batch size for parquet RecordBatchReader\nURL: https://github.com/apache/arrow/pull/4304#issuecomment-491907315\n \n \n   This still needs some proper tests but wanted to get some early feedback on the API change and any suggestions for a good default batch size would be welcome.  I'd also like to refactor `RowGroupRecordBatchReader::ReadNext` to share logic along the lines with [this todo](https://github.com/apache/arrow/blob/master/cpp/src/parquet/arrow/reader.cc#L568).  \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-13T17:08:29.799+0000",
                    "updated": "2019-05-13T17:08:29.799+0000",
                    "started": "2019-05-13T17:08:29.798+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "241171",
                    "issueId": "13071352"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071352/worklog/258031",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #4304: ARROW-1012: [C++] Configurable batch size for parquet RecordBatchReader\nURL: https://github.com/apache/arrow/pull/4304#issuecomment-500977615\n \n \n   Sorry for the delayed feedback. I'm waffling a little bit on the API for this. I think putting the parameter in ArrowReaderProperties is the right move -- we also need a configurable batch size for the forthcoming Datasets API (for scanning files in batches). Can you add a simple unit test for this, and we can merge it? I think there will continue to need to be some refactoring around this as we push forward with the Datasets work (which we also expect you to be able to make use of eventually in MATLAB, BTW)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-11T18:57:53.405+0000",
                    "updated": "2019-06-11T18:57:53.405+0000",
                    "started": "2019-06-11T18:57:53.404+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "258031",
                    "issueId": "13071352"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071352/worklog/258032",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #4304: ARROW-1012: [C++] Configurable batch size for parquet RecordBatchReader\nURL: https://github.com/apache/arrow/pull/4304#issuecomment-500977758\n \n \n   cc @pitrou \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-11T18:58:13.406+0000",
                    "updated": "2019-06-11T18:58:13.406+0000",
                    "started": "2019-06-11T18:58:13.405+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "258032",
                    "issueId": "13071352"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071352/worklog/258047",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4304: ARROW-1012: [C++] Configurable batch size for parquet RecordBatchReader\nURL: https://github.com/apache/arrow/pull/4304#discussion_r292623591\n \n \n\n ##########\n File path: cpp/src/parquet/arrow/reader.cc\n ##########\n @@ -134,103 +159,64 @@ class FileColumnIterator {\n   int column_index_;\n   ParquetFileReader* reader_;\n   const SchemaDescriptor* schema_;\n-};\n-\n-class AllRowGroupsIterator : public FileColumnIterator {\n- public:\n-  explicit AllRowGroupsIterator(int column_index, ParquetFileReader* reader)\n-      : FileColumnIterator(column_index, reader), next_row_group_(0) {}\n-\n-  std::unique_ptr<::parquet::PageReader> NextChunk() override {\n-    std::unique_ptr<::parquet::PageReader> result;\n-    if (next_row_group_ < reader_->metadata()->num_row_groups()) {\n-      result = reader_->RowGroup(next_row_group_)->GetColumnPageReader(column_index_);\n-      next_row_group_++;\n-    } else {\n-      result = nullptr;\n-    }\n-    return result;\n-  }\n-\n- private:\n-  int next_row_group_;\n-};\n-\n-class SingleRowGroupIterator : public FileColumnIterator {\n- public:\n-  explicit SingleRowGroupIterator(int column_index, int row_group_number,\n-                                  ParquetFileReader* reader)\n-      : FileColumnIterator(column_index, reader),\n-        row_group_number_(row_group_number),\n-        done_(false) {}\n-\n-  std::unique_ptr<::parquet::PageReader> NextChunk() override {\n-    if (done_) {\n-      return nullptr;\n-    }\n-\n-    auto result =\n-        reader_->RowGroup(row_group_number_)->GetColumnPageReader(column_index_);\n-    done_ = true;\n-    return result;\n-  }\n-\n- private:\n-  int row_group_number_;\n-  bool done_;\n+  std::list<int> row_groups_;\n \n Review comment:\n   `std::list` is not recommended unless you need stable iterators. `std::deque` is much better performance-wise.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-11T19:30:11.173+0000",
                    "updated": "2019-06-11T19:30:11.173+0000",
                    "started": "2019-06-11T19:30:11.172+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "258047",
                    "issueId": "13071352"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071352/worklog/258048",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4304: ARROW-1012: [C++] Configurable batch size for parquet RecordBatchReader\nURL: https://github.com/apache/arrow/pull/4304#discussion_r292623953\n \n \n\n ##########\n File path: cpp/src/parquet/arrow/reader.cc\n ##########\n @@ -113,14 +115,37 @@ ArrowReaderProperties default_arrow_reader_properties() {\n // so we can read only a single row group if we want\n class FileColumnIterator {\n  public:\n-  explicit FileColumnIterator(int column_index, ParquetFileReader* reader)\n+  explicit FileColumnIterator(int column_index, ParquetFileReader* reader,\n+                              std::vector<int> row_groups)\n       : column_index_(column_index),\n         reader_(reader),\n-        schema_(reader->metadata()->schema()) {}\n+        schema_(reader->metadata()->schema()),\n+        row_groups_(row_groups.begin(), row_groups.end()) {}\n \n   virtual ~FileColumnIterator() {}\n \n-  virtual std::unique_ptr<::parquet::PageReader> NextChunk() = 0;\n+  std::unique_ptr<::parquet::PageReader> NextChunk() {\n+    if (row_groups_.empty()) {\n+      return nullptr;\n+    }\n+\n+    auto row_group_reader = reader_->RowGroup(row_groups_.front());\n+    row_groups_.pop_front();\n+    return row_group_reader->GetColumnPageReader(column_index_);\n+  }\n+\n+  static FileColumnIterator* MakeAllRowGroupsIterator(int column_index,\n+                                                      ParquetFileReader* reader) {\n+    std::vector<int> row_groups(reader->metadata()->num_row_groups());\n+    std::iota(row_groups.begin(), row_groups.end(), 0);\n \n Review comment:\n   We should celebrate: this seems to be the first occurrence of `std::iota` in our codebase :-)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-11T19:30:14.222+0000",
                    "updated": "2019-06-11T19:30:14.222+0000",
                    "started": "2019-06-11T19:30:14.221+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "258048",
                    "issueId": "13071352"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071352/worklog/258049",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4304: ARROW-1012: [C++] Configurable batch size for parquet RecordBatchReader\nURL: https://github.com/apache/arrow/pull/4304#discussion_r292622358\n \n \n\n ##########\n File path: cpp/src/parquet/arrow/reader.h\n ##########\n @@ -53,12 +53,15 @@ class ColumnReader;\n class RowGroupReader;\n \n static constexpr bool DEFAULT_USE_THREADS = false;\n+static constexpr int64_t DEFAULT_BATCH_SIZE = 64 * 1024 * 1024;\n \n Review comment:\n   Is it a number of rows or a number of bytes?  Perhaps mention in a comment.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-11T19:30:15.576+0000",
                    "updated": "2019-06-11T19:30:15.576+0000",
                    "started": "2019-06-11T19:30:15.575+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "258049",
                    "issueId": "13071352"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071352/worklog/261390",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "hatemhelal commented on pull request #4304: ARROW-1012: [C++] Configurable batch size for parquet RecordBatchReader\nURL: https://github.com/apache/arrow/pull/4304#discussion_r294325550\n \n \n\n ##########\n File path: cpp/src/parquet/arrow/reader.cc\n ##########\n @@ -113,14 +115,37 @@ ArrowReaderProperties default_arrow_reader_properties() {\n // so we can read only a single row group if we want\n class FileColumnIterator {\n  public:\n-  explicit FileColumnIterator(int column_index, ParquetFileReader* reader)\n+  explicit FileColumnIterator(int column_index, ParquetFileReader* reader,\n+                              std::vector<int> row_groups)\n       : column_index_(column_index),\n         reader_(reader),\n-        schema_(reader->metadata()->schema()) {}\n+        schema_(reader->metadata()->schema()),\n+        row_groups_(row_groups.begin(), row_groups.end()) {}\n \n   virtual ~FileColumnIterator() {}\n \n-  virtual std::unique_ptr<::parquet::PageReader> NextChunk() = 0;\n+  std::unique_ptr<::parquet::PageReader> NextChunk() {\n+    if (row_groups_.empty()) {\n+      return nullptr;\n+    }\n+\n+    auto row_group_reader = reader_->RowGroup(row_groups_.front());\n+    row_groups_.pop_front();\n+    return row_group_reader->GetColumnPageReader(column_index_);\n+  }\n+\n+  static FileColumnIterator* MakeAllRowGroupsIterator(int column_index,\n+                                                      ParquetFileReader* reader) {\n+    std::vector<int> row_groups(reader->metadata()->num_row_groups());\n+    std::iota(row_groups.begin(), row_groups.end(), 0);\n \n Review comment:\n   I recall thinking that maybe `std::iota` is an acronym and ended up on [this amazing SO post](https://stackoverflow.com/questions/9244879/what-does-iota-of-stdiota-stand-for).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-17T14:27:59.154+0000",
                    "updated": "2019-06-17T14:27:59.154+0000",
                    "started": "2019-06-17T14:27:59.153+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "261390",
                    "issueId": "13071352"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071352/worklog/261392",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "hatemhelal commented on issue #4304: ARROW-1012: [C++] Configurable batch size for parquet RecordBatchReader\nURL: https://github.com/apache/arrow/pull/4304#issuecomment-502707628\n \n \n   @wesm & @pitrou, thanks for reviewing these changes.  I got side-tracked trying to add tests which eventually resulted in [ARROW-5608](https://github.com/apache/arrow/pull/4574).  Hopefully have some time this week to finish this one out.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-17T14:31:25.025+0000",
                    "updated": "2019-06-17T14:31:25.025+0000",
                    "started": "2019-06-17T14:31:25.024+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "261392",
                    "issueId": "13071352"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071352/worklog/261393",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "hatemhelal commented on pull request #4304: ARROW-1012: [C++] Configurable batch size for parquet RecordBatchReader\nURL: https://github.com/apache/arrow/pull/4304#discussion_r294328050\n \n \n\n ##########\n File path: cpp/src/parquet/arrow/reader.h\n ##########\n @@ -53,12 +53,15 @@ class ColumnReader;\n class RowGroupReader;\n \n static constexpr bool DEFAULT_USE_THREADS = false;\n+static constexpr int64_t DEFAULT_BATCH_SIZE = 64 * 1024 * 1024;\n \n Review comment:\n   Should be the number of rows, I'll add a comment.  Any thoughts on what a good default should be?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-17T14:32:46.265+0000",
                    "updated": "2019-06-17T14:32:46.265+0000",
                    "started": "2019-06-17T14:32:46.264+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "261393",
                    "issueId": "13071352"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071352/worklog/261394",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "hatemhelal commented on pull request #4304: ARROW-1012: [C++] Configurable batch size for parquet RecordBatchReader\nURL: https://github.com/apache/arrow/pull/4304#discussion_r294328194\n \n \n\n ##########\n File path: cpp/src/parquet/arrow/reader.cc\n ##########\n @@ -134,103 +159,64 @@ class FileColumnIterator {\n   int column_index_;\n   ParquetFileReader* reader_;\n   const SchemaDescriptor* schema_;\n-};\n-\n-class AllRowGroupsIterator : public FileColumnIterator {\n- public:\n-  explicit AllRowGroupsIterator(int column_index, ParquetFileReader* reader)\n-      : FileColumnIterator(column_index, reader), next_row_group_(0) {}\n-\n-  std::unique_ptr<::parquet::PageReader> NextChunk() override {\n-    std::unique_ptr<::parquet::PageReader> result;\n-    if (next_row_group_ < reader_->metadata()->num_row_groups()) {\n-      result = reader_->RowGroup(next_row_group_)->GetColumnPageReader(column_index_);\n-      next_row_group_++;\n-    } else {\n-      result = nullptr;\n-    }\n-    return result;\n-  }\n-\n- private:\n-  int next_row_group_;\n-};\n-\n-class SingleRowGroupIterator : public FileColumnIterator {\n- public:\n-  explicit SingleRowGroupIterator(int column_index, int row_group_number,\n-                                  ParquetFileReader* reader)\n-      : FileColumnIterator(column_index, reader),\n-        row_group_number_(row_group_number),\n-        done_(false) {}\n-\n-  std::unique_ptr<::parquet::PageReader> NextChunk() override {\n-    if (done_) {\n-      return nullptr;\n-    }\n-\n-    auto result =\n-        reader_->RowGroup(row_group_number_)->GetColumnPageReader(column_index_);\n-    done_ = true;\n-    return result;\n-  }\n-\n- private:\n-  int row_group_number_;\n-  bool done_;\n+  std::list<int> row_groups_;\n \n Review comment:\n   Ah, good catch! \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-17T14:33:03.965+0000",
                    "updated": "2019-06-17T14:33:03.965+0000",
                    "started": "2019-06-17T14:33:03.965+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "261394",
                    "issueId": "13071352"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071352/worklog/261402",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4304: ARROW-1012: [C++] Configurable batch size for parquet RecordBatchReader\nURL: https://github.com/apache/arrow/pull/4304#discussion_r294331297\n \n \n\n ##########\n File path: cpp/src/parquet/arrow/reader.h\n ##########\n @@ -53,12 +53,15 @@ class ColumnReader;\n class RowGroupReader;\n \n static constexpr bool DEFAULT_USE_THREADS = false;\n+static constexpr int64_t DEFAULT_BATCH_SIZE = 64 * 1024 * 1024;\n \n Review comment:\n   I don't know. Perhaps 64k rows? 64M rows sounds huge. @wesm \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-17T14:38:55.437+0000",
                    "updated": "2019-06-17T14:38:55.437+0000",
                    "started": "2019-06-17T14:38:55.436+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "261402",
                    "issueId": "13071352"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071352/worklog/261413",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #4304: ARROW-1012: [C++] Configurable batch size for parquet RecordBatchReader\nURL: https://github.com/apache/arrow/pull/4304#discussion_r294339602\n \n \n\n ##########\n File path: cpp/src/parquet/arrow/reader.h\n ##########\n @@ -53,12 +53,15 @@ class ColumnReader;\n class RowGroupReader;\n \n static constexpr bool DEFAULT_USE_THREADS = false;\n+static constexpr int64_t DEFAULT_BATCH_SIZE = 64 * 1024 * 1024;\n \n Review comment:\n   64K seems reasonable\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-17T14:55:26.799+0000",
                    "updated": "2019-06-17T14:55:26.799+0000",
                    "started": "2019-06-17T14:55:26.798+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "261413",
                    "issueId": "13071352"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071352/worklog/262287",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #4304: ARROW-1012: [C++] Configurable batch size for parquet RecordBatchReader\nURL: https://github.com/apache/arrow/pull/4304#discussion_r294806149\n \n \n\n ##########\n File path: cpp/src/parquet/arrow/reader.h\n ##########\n @@ -53,12 +53,15 @@ class ColumnReader;\n class RowGroupReader;\n \n static constexpr bool DEFAULT_USE_THREADS = false;\n+static constexpr int64_t DEFAULT_BATCH_SIZE = 64 * 1024 * 1024;\n \n Review comment:\n   between 1k - 64k, see section 4.3 of https://pdfs.semanticscholar.org/ca7d/d279274916062a981c544da730e0e84abb87.pdf\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-18T12:55:46.796+0000",
                    "updated": "2019-06-18T12:55:46.796+0000",
                    "started": "2019-06-18T12:55:46.796+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "262287",
                    "issueId": "13071352"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071352/worklog/264558",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "hatemhelal commented on pull request #4304: ARROW-1012: [C++] Configurable batch size for parquet RecordBatchReader\nURL: https://github.com/apache/arrow/pull/4304#discussion_r296201244\n \n \n\n ##########\n File path: cpp/src/parquet/arrow/reader.h\n ##########\n @@ -53,12 +53,15 @@ class ColumnReader;\n class RowGroupReader;\n \n static constexpr bool DEFAULT_USE_THREADS = false;\n+static constexpr int64_t DEFAULT_BATCH_SIZE = 64 * 1024 * 1024;\n \n Review comment:\n   Thanks @fsaintjacques for the interesting paper, really useful to have some experimental data to refer to.  I'll press ahead with 64K as that was suggested in this thread and seems like fig 5 backs that up as a good choice.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-21T11:38:59.271+0000",
                    "updated": "2019-06-21T11:38:59.271+0000",
                    "started": "2019-06-21T11:38:59.271+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "264558",
                    "issueId": "13071352"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071352/worklog/264601",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "hatemhelal commented on issue #4304: ARROW-1012: [C++] Configurable batch size for parquet RecordBatchReader\nURL: https://github.com/apache/arrow/pull/4304#issuecomment-504417220\n \n \n   Sorry about the long delay.  I've rebased and tried to address open feedback, but haven't had the chance to attempt the refactoring mentioned in [this todo](https://github.com/apache/arrow/pull/4304/files#diff-d444d8f80289040c3cf6ab7cfede4715R191).  \r\n   \r\n   The primary use-cases for this API that I have come across are:\r\n   \r\n   1. Iterative reading `N` rows a a time from a Parquet file.  This might be necessary if the deserialized row group would be too large to fit in memory \r\n   2. Cheap-preview: with this change we can efficiently read the first `N` rows of a Parquet file.\r\n   \r\n   @wesm, let me know how you want to proceed.  It would be nice to get this into the next release but also understand if I've missed the boat.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-21T13:01:51.735+0000",
                    "updated": "2019-06-21T13:01:51.735+0000",
                    "started": "2019-06-21T13:01:51.734+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "264601",
                    "issueId": "13071352"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071352/worklog/264842",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #4304: ARROW-1012: [C++] Configurable batch size for parquet RecordBatchReader\nURL: https://github.com/apache/arrow/pull/4304#issuecomment-504511573\n \n \n   I can review this again, moved it to the 0.14.0 milestone so I don't forget\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-21T17:43:32.478+0000",
                    "updated": "2019-06-21T17:43:32.478+0000",
                    "started": "2019-06-21T17:43:32.477+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "264842",
                    "issueId": "13071352"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071352/worklog/265467",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #4304: ARROW-1012: [C++] Configurable batch size for parquet RecordBatchReader\nURL: https://github.com/apache/arrow/pull/4304\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-24T01:34:09.571+0000",
                    "updated": "2019-06-24T01:34:09.571+0000",
                    "started": "2019-06-24T01:34:09.570+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "265467",
                    "issueId": "13071352"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 10800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@1c8c4977[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@188efd38[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5f0570a8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@300d314d[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1ba19015[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@58ce35e2[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2cba9e63[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@75e445e0[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@62524271[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@4b9a0afc[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@332bdc6a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@643754aa[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 10800,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Jun 24 01:33:58 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-06-24T01:33:58.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1012/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2017-05-11T21:50:12.000+0000",
        "updated": "2019-07-02T09:53:12.000+0000",
        "timeoriginalestimate": null,
        "description": "This will be enabled by -ARROW-1008.-\r\n\r\nA preliminary implementation\u00a0of an\u00a0{{arrow::RecordBatchReader}} was added in PARQUET-1166 but does not support configuring the batch size.\u00a0\u00a0",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 10800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Create a configurable implementation of RecordBatchReader that reads from Apache Parquet files",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071352/comment/16834835",
                    "id": "16834835",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=hatem",
                        "name": "hatem",
                        "key": "hatem",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Hatem Helal",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "It looks like\u00a0PARQUET-1166 added a basic implementation of an {{arrow::RecordBatchReader}}\u00a0that\u00a0can be used to read from Parquet.\u00a0 ARROW-3771 is a follow-up issue that I was looking into.\r\n\r\n[~wesmckinn] was there\u00a0some additional functionality that you had in mind for this issue?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=hatem",
                        "name": "hatem",
                        "key": "hatem",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Hatem Helal",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-05-07T14:56:12.451+0000",
                    "updated": "2019-05-07T14:57:51.393+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071352/comment/16834881",
                    "id": "16834881",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "[~hatem] yes -- the objective is to be able to configure a maximum record batch length (e.g. 64K, as an example) that obtain a stream of record batches no larger than that size. The {{GetRecordBatchReader}} returns an object that performs entire-row-group reads without configuration. This should be clarified in the JIRA description",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-05-07T15:30:42.259+0000",
                    "updated": "2019-05-07T15:32:09.909+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071352/comment/16869040",
                    "id": "16869040",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Moving this to the next release. I'd like to have at least a use case to drive this (the Datasets API should be that thing)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-06-21T00:02:12.729+0000",
                    "updated": "2019-06-21T00:02:12.729+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071352/comment/16869452",
                    "id": "16869452",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=hatem",
                        "name": "hatem",
                        "key": "hatem",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Hatem Helal",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "I added my use cases to the PR here:\r\n\r\n[https://github.com/apache/arrow/pull/4304#issuecomment-504417220]\r\n\r\n\u00a0\r\n\r\nThe primary use-cases for this API that I have come across are:\r\n # Iterative reading\u00a0{{N}}\u00a0rows a a time from a Parquet file. This might be necessary if the deserialized row group would be too large to fit in memory\r\n # Cheap-preview: with this change we can efficiently read the first\u00a0{{N}}\u00a0rows of a Parquet file.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=hatem",
                        "name": "hatem",
                        "key": "hatem",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Hatem Helal",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-06-21T13:03:03.541+0000",
                    "updated": "2019-06-21T13:03:03.541+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071352/comment/16870736",
                    "id": "16870736",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 4304\n[https://github.com/apache/arrow/pull/4304]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-06-24T01:33:58.297+0000",
                    "updated": "2019-06-24T01:33:58.297+0000"
                }
            ],
            "maxResults": 5,
            "total": 5,
            "startAt": 0
        },
        "customfield_12311820": "0|i3ev8f:",
        "customfield_12314139": null
    }
}