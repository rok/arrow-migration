{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13248486",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248486",
    "key": "ARROW-6113",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12567868",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12567868",
                "type": {
                    "id": "10032",
                    "name": "Blocker",
                    "inward": "is blocked by",
                    "outward": "blocks",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10032"
                },
                "inwardIssue": {
                    "id": "13251172",
                    "key": "ARROW-6266",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13251172",
                    "fields": {
                        "summary": "[Java] Resolve the ambiguous method overload in RangeEqualsVisitor",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/1",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/blocker.svg",
                            "name": "Blocker",
                            "id": "1"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                            "id": "1",
                            "description": "A problem which impairs or prevents the functions of the product.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                            "name": "Bug",
                            "subtask": false,
                            "avatarId": 21133
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "aggregateprogress": {
            "progress": 26400,
            "total": 26400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 26400,
            "total": 26400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6113/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 44,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248486/worklog/287466",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4993: ARROW-6113: [Java] Support vector deduplicate function\nURL: https://github.com/apache/arrow/pull/4993\n \n \n   Remove adjacent deduplicated elements from a vector. This function can be used, for example, in finding distinct values, or in compressing the vector data.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-02T04:31:40.763+0000",
                    "updated": "2019-08-02T04:31:40.763+0000",
                    "started": "2019-08-02T04:31:40.763+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "287466",
                    "issueId": "13248486"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248486/worklog/291807",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4993: ARROW-6113: [Java] Support vector deduplicate function\nURL: https://github.com/apache/arrow/pull/4993#discussion_r312327520\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/deduplicate/VectorDeduplicator.java\n ##########\n @@ -0,0 +1,130 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.deduplicate;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.util.DataSizeRoundingUtil;\n+import org.apache.arrow.util.Preconditions;\n+import org.apache.arrow.vector.BitVectorHelper;\n+import org.apache.arrow.vector.IntVector;\n+import org.apache.arrow.vector.ValueVector;\n+\n+import io.netty.buffer.ArrowBuf;\n+\n+/**\n+ * Remove adjacent equal elements from a vector.\n+ * If the vector is sorted, it removes all duplicated values in the vector.\n+ * @param <V> vector type.\n+ */\n+public class VectorDeduplicator<V extends ValueVector> implements AutoCloseable {\n \n Review comment:\n   @liyafan82 this is useful functionality, but I'm not sure about the interface.  At least for me the functionality seems like it is intended for some form of RLE. It seems like it might pay to make a utility class with static methods of something like (I name the methods assuming RLE):\r\n   ```\r\n   static void populateRunStartIndicators(ValueVector inputVector, BitVector runStarts);\r\n   void populateRunLengths(BitVector runStarts,  IntVector runLengths );\r\n   // This might belong in a separate class, or there might be some existing funtionality in the code base\r\n   void selectValues(BitVector indicators, ValueVector inputVector, ValueVector outputVector);\r\n   ```\r\n   At least to me its not clear from the documentation how this class class is supposed to be used.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T04:46:07.772+0000",
                    "updated": "2019-08-09T04:46:07.772+0000",
                    "started": "2019-08-09T04:46:07.771+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291807",
                    "issueId": "13248486"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248486/worklog/291875",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4993: ARROW-6113: [Java] Support vector deduplicate function\nURL: https://github.com/apache/arrow/pull/4993#discussion_r312364942\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/deduplicate/VectorDeduplicator.java\n ##########\n @@ -0,0 +1,130 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.deduplicate;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.util.DataSizeRoundingUtil;\n+import org.apache.arrow.util.Preconditions;\n+import org.apache.arrow.vector.BitVectorHelper;\n+import org.apache.arrow.vector.IntVector;\n+import org.apache.arrow.vector.ValueVector;\n+\n+import io.netty.buffer.ArrowBuf;\n+\n+/**\n+ * Remove adjacent equal elements from a vector.\n+ * If the vector is sorted, it removes all duplicated values in the vector.\n+ * @param <V> vector type.\n+ */\n+public class VectorDeduplicator<V extends ValueVector> implements AutoCloseable {\n \n Review comment:\n   @emkornfield \r\n   I try to make this API general, and RLE is an important application of it.\r\n   In addition, deduplication is also intensively used in SQL runtime.\r\n   \r\n   I implemented it as an class object, instead of using static methods, because the bit set to hold start positions is an internal state, so IMO, it should not be exposed to the outside.\r\n   \r\n   However, I have also provided a utility class with utility methods as you suggested, to support more flexible scenarios.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T07:50:05.859+0000",
                    "updated": "2019-08-09T07:50:05.859+0000",
                    "started": "2019-08-09T07:50:05.859+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291875",
                    "issueId": "13248486"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248486/worklog/293626",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4993: ARROW-6113: [Java] Support vector deduplicate function\nURL: https://github.com/apache/arrow/pull/4993#discussion_r313223592\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/deduplicate/VectorDeduplicator.java\n ##########\n @@ -0,0 +1,104 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.deduplicate;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.util.DataSizeRoundingUtil;\n+import org.apache.arrow.util.Preconditions;\n+import org.apache.arrow.vector.BitVectorHelper;\n+import org.apache.arrow.vector.IntVector;\n+import org.apache.arrow.vector.ValueVector;\n+\n+import io.netty.buffer.ArrowBuf;\n+\n+/**\n+ * Remove adjacent equal elements from a vector.\n+ * If the vector is sorted, it removes all duplicated values in the vector.\n+ * @param <V> vector type.\n+ */\n+public class VectorDeduplicator<V extends ValueVector> implements AutoCloseable {\n+\n+  /**\n+   * Bit set for distinct values.\n+   * If the value at some index is not equal to the previous value,\n+   * its bit is set to 1, otherwise its bit is set to 0.\n+   */\n+  private ArrowBuf distinctValueBuffer;\n+\n+  /**\n+   * The vector to deduplicate.\n+   */\n+  private final V vector;\n+\n+  private final BufferAllocator allocator;\n+\n+  public VectorDeduplicator(V vector, BufferAllocator allocator) {\n+    this.vector = vector;\n+    this.allocator = allocator;\n+  }\n+\n+  private void createDistinctValueBuffer() {\n+    Preconditions.checkArgument(distinctValueBuffer == null);\n+    int bufSize = DataSizeRoundingUtil.divideBy8Ceil(vector.getValueCount());\n+    distinctValueBuffer = allocator.buffer(bufSize);\n+    DeduplicationUtils.populateRunStartIndicators(vector, distinctValueBuffer);\n+  }\n+\n+  /**\n+   * Gets the number of values which are different from their precedence.\n+   * @return the number of values different from their precedence.\n+   */\n+  public int getDistinctValueCount() {\n+    if (distinctValueBuffer == null) {\n+      createDistinctValueBuffer();\n+    }\n+    return vector.getValueCount() - BitVectorHelper.getNullCount(distinctValueBuffer, vector.getValueCount());\n+  }\n+\n+  /**\n+   * Gets the vector with deduplicated adjacent valued removed.\n+   * @param outVector the output vector.\n+   */\n+  public void getDeduplicatedVector(V outVector) {\n+    if (distinctValueBuffer == null) {\n+      createDistinctValueBuffer();\n+    }\n+\n+    DeduplicationUtils.distinctValues(distinctValueBuffer, vector, outVector);\n+  }\n+\n+  /**\n+   * Gets the length of each distinct value.\n+   * @param lengthVector the vector for holding length values.\n+   */\n+  public void getValueLength(IntVector lengthVector) {\n \n Review comment:\n   this really is run leghts?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-13T05:23:08.719+0000",
                    "updated": "2019-08-13T05:23:08.719+0000",
                    "started": "2019-08-13T05:23:08.719+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "293626",
                    "issueId": "13248486"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248486/worklog/293628",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4993: ARROW-6113: [Java] Support vector deduplicate function\nURL: https://github.com/apache/arrow/pull/4993#discussion_r313224227\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/deduplicate/VectorDeduplicator.java\n ##########\n @@ -0,0 +1,104 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.deduplicate;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.util.DataSizeRoundingUtil;\n+import org.apache.arrow.util.Preconditions;\n+import org.apache.arrow.vector.BitVectorHelper;\n+import org.apache.arrow.vector.IntVector;\n+import org.apache.arrow.vector.ValueVector;\n+\n+import io.netty.buffer.ArrowBuf;\n+\n+/**\n+ * Remove adjacent equal elements from a vector.\n+ * If the vector is sorted, it removes all duplicated values in the vector.\n+ * @param <V> vector type.\n+ */\n+public class VectorDeduplicator<V extends ValueVector> implements AutoCloseable {\n \n Review comment:\n   ```suggestion\r\n   public class VectorRunDeduplicator<V extends ValueVector> implements AutoCloseable {\r\n   ```\r\n   Deduplication is ambiguous, since dictionary building is another form of deduplication.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-13T05:27:04.214+0000",
                    "updated": "2019-08-13T05:27:04.214+0000",
                    "started": "2019-08-13T05:27:04.213+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "293628",
                    "issueId": "13248486"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248486/worklog/293629",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4993: ARROW-6113: [Java] Support vector deduplicate function\nURL: https://github.com/apache/arrow/pull/4993#discussion_r313225004\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/deduplicate/VectorDeduplicator.java\n ##########\n @@ -0,0 +1,104 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.deduplicate;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.util.DataSizeRoundingUtil;\n+import org.apache.arrow.util.Preconditions;\n+import org.apache.arrow.vector.BitVectorHelper;\n+import org.apache.arrow.vector.IntVector;\n+import org.apache.arrow.vector.ValueVector;\n+\n+import io.netty.buffer.ArrowBuf;\n+\n+/**\n+ * Remove adjacent equal elements from a vector.\n+ * If the vector is sorted, it removes all duplicated values in the vector.\n+ * @param <V> vector type.\n+ */\n+public class VectorDeduplicator<V extends ValueVector> implements AutoCloseable {\n+\n+  /**\n+   * Bit set for distinct values.\n+   * If the value at some index is not equal to the previous value,\n+   * its bit is set to 1, otherwise its bit is set to 0.\n+   */\n \n Review comment:\n   this makes a speed-memory tradeoff, it seems like for all the operations defined on the method they would be much more efficient using a representation that stores the actual indices of the run starts.\r\n   \r\n   Another possible option is to use a RoaringBitmap.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-13T05:32:06.783+0000",
                    "updated": "2019-08-13T05:32:06.783+0000",
                    "started": "2019-08-13T05:32:06.782+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "293629",
                    "issueId": "13248486"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248486/worklog/293631",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4993: ARROW-6113: [Java] Support vector deduplicate function\nURL: https://github.com/apache/arrow/pull/4993#discussion_r313225058\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/deduplicate/VectorDeduplicator.java\n ##########\n @@ -0,0 +1,104 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.deduplicate;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.util.DataSizeRoundingUtil;\n+import org.apache.arrow.util.Preconditions;\n+import org.apache.arrow.vector.BitVectorHelper;\n+import org.apache.arrow.vector.IntVector;\n+import org.apache.arrow.vector.ValueVector;\n+\n+import io.netty.buffer.ArrowBuf;\n+\n+/**\n+ * Remove adjacent equal elements from a vector.\n+ * If the vector is sorted, it removes all duplicated values in the vector.\n+ * @param <V> vector type.\n+ */\n+public class VectorDeduplicator<V extends ValueVector> implements AutoCloseable {\n+\n+  /**\n+   * Bit set for distinct values.\n+   * If the value at some index is not equal to the previous value,\n+   * its bit is set to 1, otherwise its bit is set to 0.\n+   */\n+  private ArrowBuf distinctValueBuffer;\n+\n+  /**\n+   * The vector to deduplicate.\n+   */\n+  private final V vector;\n+\n+  private final BufferAllocator allocator;\n+\n+  public VectorDeduplicator(V vector, BufferAllocator allocator) {\n \n Review comment:\n   javadoc.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-13T05:32:28.709+0000",
                    "updated": "2019-08-13T05:32:28.709+0000",
                    "started": "2019-08-13T05:32:28.709+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "293631",
                    "issueId": "13248486"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248486/worklog/293632",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4993: ARROW-6113: [Java] Support vector deduplicate function\nURL: https://github.com/apache/arrow/pull/4993#discussion_r313225297\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/deduplicate/VectorDeduplicator.java\n ##########\n @@ -0,0 +1,104 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.deduplicate;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.util.DataSizeRoundingUtil;\n+import org.apache.arrow.util.Preconditions;\n+import org.apache.arrow.vector.BitVectorHelper;\n+import org.apache.arrow.vector.IntVector;\n+import org.apache.arrow.vector.ValueVector;\n+\n+import io.netty.buffer.ArrowBuf;\n+\n+/**\n+ * Remove adjacent equal elements from a vector.\n+ * If the vector is sorted, it removes all duplicated values in the vector.\n+ * @param <V> vector type.\n+ */\n+public class VectorDeduplicator<V extends ValueVector> implements AutoCloseable {\n+\n+  /**\n+   * Bit set for distinct values.\n+   * If the value at some index is not equal to the previous value,\n+   * its bit is set to 1, otherwise its bit is set to 0.\n+   */\n+  private ArrowBuf distinctValueBuffer;\n+\n+  /**\n+   * The vector to deduplicate.\n+   */\n+  private final V vector;\n+\n+  private final BufferAllocator allocator;\n+\n+  public VectorDeduplicator(V vector, BufferAllocator allocator) {\n+    this.vector = vector;\n+    this.allocator = allocator;\n+  }\n+\n+  private void createDistinctValueBuffer() {\n+    Preconditions.checkArgument(distinctValueBuffer == null);\n+    int bufSize = DataSizeRoundingUtil.divideBy8Ceil(vector.getValueCount());\n+    distinctValueBuffer = allocator.buffer(bufSize);\n+    DeduplicationUtils.populateRunStartIndicators(vector, distinctValueBuffer);\n+  }\n+\n+  /**\n+   * Gets the number of values which are different from their precedence.\n+   * @return the number of values different from their precedence.\n+   */\n+  public int getDistinctValueCount() {\n+    if (distinctValueBuffer == null) {\n+      createDistinctValueBuffer();\n+    }\n+    return vector.getValueCount() - BitVectorHelper.getNullCount(distinctValueBuffer, vector.getValueCount());\n+  }\n+\n+  /**\n+   * Gets the vector with deduplicated adjacent valued removed.\n+   * @param outVector the output vector.\n+   */\n+  public void getDeduplicatedVector(V outVector) {\n \n Review comment:\n   populuteDecuplicatedValues.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-13T05:33:49.183+0000",
                    "updated": "2019-08-13T05:33:49.183+0000",
                    "started": "2019-08-13T05:33:49.182+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "293632",
                    "issueId": "13248486"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248486/worklog/293633",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4993: ARROW-6113: [Java] Support vector deduplicate function\nURL: https://github.com/apache/arrow/pull/4993#discussion_r313225477\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/deduplicate/VectorDeduplicator.java\n ##########\n @@ -0,0 +1,104 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.deduplicate;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.util.DataSizeRoundingUtil;\n+import org.apache.arrow.util.Preconditions;\n+import org.apache.arrow.vector.BitVectorHelper;\n+import org.apache.arrow.vector.IntVector;\n+import org.apache.arrow.vector.ValueVector;\n+\n+import io.netty.buffer.ArrowBuf;\n+\n+/**\n+ * Remove adjacent equal elements from a vector.\n+ * If the vector is sorted, it removes all duplicated values in the vector.\n+ * @param <V> vector type.\n+ */\n+public class VectorDeduplicator<V extends ValueVector> implements AutoCloseable {\n+\n+  /**\n+   * Bit set for distinct values.\n+   * If the value at some index is not equal to the previous value,\n+   * its bit is set to 1, otherwise its bit is set to 0.\n+   */\n+  private ArrowBuf distinctValueBuffer;\n+\n+  /**\n+   * The vector to deduplicate.\n+   */\n+  private final V vector;\n+\n+  private final BufferAllocator allocator;\n+\n+  public VectorDeduplicator(V vector, BufferAllocator allocator) {\n+    this.vector = vector;\n+    this.allocator = allocator;\n+  }\n+\n+  private void createDistinctValueBuffer() {\n+    Preconditions.checkArgument(distinctValueBuffer == null);\n+    int bufSize = DataSizeRoundingUtil.divideBy8Ceil(vector.getValueCount());\n+    distinctValueBuffer = allocator.buffer(bufSize);\n+    DeduplicationUtils.populateRunStartIndicators(vector, distinctValueBuffer);\n+  }\n+\n+  /**\n+   * Gets the number of values which are different from their precedence.\n+   * @return the number of values different from their precedence.\n+   */\n+  public int getDistinctValueCount() {\n+    if (distinctValueBuffer == null) {\n+      createDistinctValueBuffer();\n+    }\n+    return vector.getValueCount() - BitVectorHelper.getNullCount(distinctValueBuffer, vector.getValueCount());\n+  }\n+\n+  /**\n+   * Gets the vector with deduplicated adjacent valued removed.\n+   * @param outVector the output vector.\n+   */\n+  public void getDeduplicatedVector(V outVector) {\n+    if (distinctValueBuffer == null) {\n+      createDistinctValueBuffer();\n+    }\n+\n+    DeduplicationUtils.distinctValues(distinctValueBuffer, vector, outVector);\n+  }\n+\n+  /**\n+   * Gets the length of each distinct value.\n+   * @param lengthVector the vector for holding length values.\n+   */\n+  public void getValueLength(IntVector lengthVector) {\n \n Review comment:\n   ```suggestion\r\n     public void populateRunLengths(IntVector lengthVector) {\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-13T05:34:49.877+0000",
                    "updated": "2019-08-13T05:34:49.877+0000",
                    "started": "2019-08-13T05:34:49.877+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "293633",
                    "issueId": "13248486"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248486/worklog/293634",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4993: ARROW-6113: [Java] Support vector deduplicate function\nURL: https://github.com/apache/arrow/pull/4993#discussion_r313225702\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/deduplicate/VectorDeduplicator.java\n ##########\n @@ -0,0 +1,104 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.deduplicate;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.util.DataSizeRoundingUtil;\n+import org.apache.arrow.util.Preconditions;\n+import org.apache.arrow.vector.BitVectorHelper;\n+import org.apache.arrow.vector.IntVector;\n+import org.apache.arrow.vector.ValueVector;\n+\n+import io.netty.buffer.ArrowBuf;\n+\n+/**\n+ * Remove adjacent equal elements from a vector.\n+ * If the vector is sorted, it removes all duplicated values in the vector.\n+ * @param <V> vector type.\n+ */\n+public class VectorDeduplicator<V extends ValueVector> implements AutoCloseable {\n+\n+  /**\n+   * Bit set for distinct values.\n+   * If the value at some index is not equal to the previous value,\n+   * its bit is set to 1, otherwise its bit is set to 0.\n+   */\n+  private ArrowBuf distinctValueBuffer;\n+\n+  /**\n+   * The vector to deduplicate.\n+   */\n+  private final V vector;\n+\n+  private final BufferAllocator allocator;\n+\n+  public VectorDeduplicator(V vector, BufferAllocator allocator) {\n+    this.vector = vector;\n+    this.allocator = allocator;\n+  }\n+\n+  private void createDistinctValueBuffer() {\n+    Preconditions.checkArgument(distinctValueBuffer == null);\n+    int bufSize = DataSizeRoundingUtil.divideBy8Ceil(vector.getValueCount());\n+    distinctValueBuffer = allocator.buffer(bufSize);\n+    DeduplicationUtils.populateRunStartIndicators(vector, distinctValueBuffer);\n+  }\n+\n+  /**\n+   * Gets the number of values which are different from their precedence.\n+   * @return the number of values different from their precedence.\n+   */\n+  public int getDistinctValueCount() {\n \n Review comment:\n   ```suggestion\r\n     public int getRunCount() {\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-13T05:36:18.007+0000",
                    "updated": "2019-08-13T05:36:18.007+0000",
                    "started": "2019-08-13T05:36:18.007+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "293634",
                    "issueId": "13248486"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248486/worklog/293635",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4993: ARROW-6113: [Java] Support vector deduplicate function\nURL: https://github.com/apache/arrow/pull/4993#discussion_r313225739\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/deduplicate/VectorDeduplicator.java\n ##########\n @@ -0,0 +1,104 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.deduplicate;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.util.DataSizeRoundingUtil;\n+import org.apache.arrow.util.Preconditions;\n+import org.apache.arrow.vector.BitVectorHelper;\n+import org.apache.arrow.vector.IntVector;\n+import org.apache.arrow.vector.ValueVector;\n+\n+import io.netty.buffer.ArrowBuf;\n+\n+/**\n+ * Remove adjacent equal elements from a vector.\n+ * If the vector is sorted, it removes all duplicated values in the vector.\n+ * @param <V> vector type.\n+ */\n+public class VectorDeduplicator<V extends ValueVector> implements AutoCloseable {\n+\n+  /**\n+   * Bit set for distinct values.\n+   * If the value at some index is not equal to the previous value,\n+   * its bit is set to 1, otherwise its bit is set to 0.\n+   */\n+  private ArrowBuf distinctValueBuffer;\n+\n+  /**\n+   * The vector to deduplicate.\n+   */\n+  private final V vector;\n+\n+  private final BufferAllocator allocator;\n+\n+  public VectorDeduplicator(V vector, BufferAllocator allocator) {\n+    this.vector = vector;\n+    this.allocator = allocator;\n+  }\n+\n+  private void createDistinctValueBuffer() {\n+    Preconditions.checkArgument(distinctValueBuffer == null);\n+    int bufSize = DataSizeRoundingUtil.divideBy8Ceil(vector.getValueCount());\n+    distinctValueBuffer = allocator.buffer(bufSize);\n+    DeduplicationUtils.populateRunStartIndicators(vector, distinctValueBuffer);\n+  }\n+\n+  /**\n+   * Gets the number of values which are different from their precedence.\n+   * @return the number of values different from their precedence.\n \n Review comment:\n   this is redundant with the description.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-13T05:36:31.992+0000",
                    "updated": "2019-08-13T05:36:31.992+0000",
                    "started": "2019-08-13T05:36:31.992+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "293635",
                    "issueId": "13248486"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248486/worklog/293636",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4993: ARROW-6113: [Java] Support vector deduplicate function\nURL: https://github.com/apache/arrow/pull/4993#discussion_r313226052\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/deduplicate/DeduplicationUtils.java\n ##########\n @@ -0,0 +1,93 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.deduplicate;\n+\n+import org.apache.arrow.util.DataSizeRoundingUtil;\n+import org.apache.arrow.util.Preconditions;\n+import org.apache.arrow.vector.BitVectorHelper;\n+import org.apache.arrow.vector.IntVector;\n+import org.apache.arrow.vector.ValueVector;\n+\n+import io.netty.buffer.ArrowBuf;\n+\n+/**\n+ * Utilities for vector deduplication.\n+ */\n+public class DeduplicationUtils {\n \n Review comment:\n   If you prefer the object API, lets make this package private for the time being.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-13T05:38:32.136+0000",
                    "updated": "2019-08-13T05:38:32.136+0000",
                    "started": "2019-08-13T05:38:32.135+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "293636",
                    "issueId": "13248486"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248486/worklog/294385",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4993: ARROW-6113: [Java] Support vector deduplicate function\nURL: https://github.com/apache/arrow/pull/4993#discussion_r313691247\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/deduplicate/VectorDeduplicator.java\n ##########\n @@ -0,0 +1,104 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.deduplicate;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.util.DataSizeRoundingUtil;\n+import org.apache.arrow.util.Preconditions;\n+import org.apache.arrow.vector.BitVectorHelper;\n+import org.apache.arrow.vector.IntVector;\n+import org.apache.arrow.vector.ValueVector;\n+\n+import io.netty.buffer.ArrowBuf;\n+\n+/**\n+ * Remove adjacent equal elements from a vector.\n+ * If the vector is sorted, it removes all duplicated values in the vector.\n+ * @param <V> vector type.\n+ */\n+public class VectorDeduplicator<V extends ValueVector> implements AutoCloseable {\n+\n+  /**\n+   * Bit set for distinct values.\n+   * If the value at some index is not equal to the previous value,\n+   * its bit is set to 1, otherwise its bit is set to 0.\n+   */\n+  private ArrowBuf distinctValueBuffer;\n+\n+  /**\n+   * The vector to deduplicate.\n+   */\n+  private final V vector;\n+\n+  private final BufferAllocator allocator;\n+\n+  public VectorDeduplicator(V vector, BufferAllocator allocator) {\n+    this.vector = vector;\n+    this.allocator = allocator;\n+  }\n+\n+  private void createDistinctValueBuffer() {\n+    Preconditions.checkArgument(distinctValueBuffer == null);\n+    int bufSize = DataSizeRoundingUtil.divideBy8Ceil(vector.getValueCount());\n+    distinctValueBuffer = allocator.buffer(bufSize);\n+    DeduplicationUtils.populateRunStartIndicators(vector, distinctValueBuffer);\n+  }\n+\n+  /**\n+   * Gets the number of values which are different from their precedence.\n+   * @return the number of values different from their precedence.\n+   */\n+  public int getDistinctValueCount() {\n+    if (distinctValueBuffer == null) {\n+      createDistinctValueBuffer();\n+    }\n+    return vector.getValueCount() - BitVectorHelper.getNullCount(distinctValueBuffer, vector.getValueCount());\n+  }\n+\n+  /**\n+   * Gets the vector with deduplicated adjacent valued removed.\n+   * @param outVector the output vector.\n+   */\n+  public void getDeduplicatedVector(V outVector) {\n+    if (distinctValueBuffer == null) {\n+      createDistinctValueBuffer();\n+    }\n+\n+    DeduplicationUtils.distinctValues(distinctValueBuffer, vector, outVector);\n+  }\n+\n+  /**\n+   * Gets the length of each distinct value.\n+   * @param lengthVector the vector for holding length values.\n+   */\n+  public void getValueLength(IntVector lengthVector) {\n \n Review comment:\n   Yes. They are just run lengths. The method name has been revised.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-14T03:22:30.783+0000",
                    "updated": "2019-08-14T03:22:30.783+0000",
                    "started": "2019-08-14T03:22:30.783+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "294385",
                    "issueId": "13248486"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248486/worklog/294386",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4993: ARROW-6113: [Java] Support vector deduplicate function\nURL: https://github.com/apache/arrow/pull/4993#discussion_r313691298\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/deduplicate/VectorDeduplicator.java\n ##########\n @@ -0,0 +1,104 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.deduplicate;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.util.DataSizeRoundingUtil;\n+import org.apache.arrow.util.Preconditions;\n+import org.apache.arrow.vector.BitVectorHelper;\n+import org.apache.arrow.vector.IntVector;\n+import org.apache.arrow.vector.ValueVector;\n+\n+import io.netty.buffer.ArrowBuf;\n+\n+/**\n+ * Remove adjacent equal elements from a vector.\n+ * If the vector is sorted, it removes all duplicated values in the vector.\n+ * @param <V> vector type.\n+ */\n+public class VectorDeduplicator<V extends ValueVector> implements AutoCloseable {\n \n Review comment:\n   Sounds reasonable. Thank you.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-14T03:22:53.123+0000",
                    "updated": "2019-08-14T03:22:53.123+0000",
                    "started": "2019-08-14T03:22:53.122+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "294386",
                    "issueId": "13248486"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248486/worklog/294397",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4993: ARROW-6113: [Java] Support vector deduplicate function\nURL: https://github.com/apache/arrow/pull/4993#discussion_r313692438\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/deduplicate/VectorDeduplicator.java\n ##########\n @@ -0,0 +1,104 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.deduplicate;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.util.DataSizeRoundingUtil;\n+import org.apache.arrow.util.Preconditions;\n+import org.apache.arrow.vector.BitVectorHelper;\n+import org.apache.arrow.vector.IntVector;\n+import org.apache.arrow.vector.ValueVector;\n+\n+import io.netty.buffer.ArrowBuf;\n+\n+/**\n+ * Remove adjacent equal elements from a vector.\n+ * If the vector is sorted, it removes all duplicated values in the vector.\n+ * @param <V> vector type.\n+ */\n+public class VectorDeduplicator<V extends ValueVector> implements AutoCloseable {\n+\n+  /**\n+   * Bit set for distinct values.\n+   * If the value at some index is not equal to the previous value,\n+   * its bit is set to 1, otherwise its bit is set to 0.\n+   */\n \n Review comment:\n   This is a general problem. In the design, we have considered 3 different representations:\r\n   \r\n   1. start indices represented as a bit set.\r\n   2. start indices represented as an byte vector.\r\n   3. an integer vector storing the start indices.\r\n   \r\n   Generally speaking, 1 is cpu intensive, while 2 and 3 are memory intensive. \r\n   \r\n   We finally selected option 1, because in the extreme case (where each element is distinct from its previous one), the memory requirement of 1 is modest (in practice, the input vector can be large), while the start indices for 3 can be larger than the original vector (e.g. the original vector is a TinyIntVector).\r\n   \r\n   Would you please give some suggestions?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-14T03:31:52.098+0000",
                    "updated": "2019-08-14T03:31:52.098+0000",
                    "started": "2019-08-14T03:31:52.097+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "294397",
                    "issueId": "13248486"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248486/worklog/294398",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4993: ARROW-6113: [Java] Support vector deduplicate function\nURL: https://github.com/apache/arrow/pull/4993#discussion_r313692664\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/deduplicate/VectorDeduplicator.java\n ##########\n @@ -0,0 +1,104 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.deduplicate;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.util.DataSizeRoundingUtil;\n+import org.apache.arrow.util.Preconditions;\n+import org.apache.arrow.vector.BitVectorHelper;\n+import org.apache.arrow.vector.IntVector;\n+import org.apache.arrow.vector.ValueVector;\n+\n+import io.netty.buffer.ArrowBuf;\n+\n+/**\n+ * Remove adjacent equal elements from a vector.\n+ * If the vector is sorted, it removes all duplicated values in the vector.\n+ * @param <V> vector type.\n+ */\n+public class VectorDeduplicator<V extends ValueVector> implements AutoCloseable {\n+\n+  /**\n+   * Bit set for distinct values.\n+   * If the value at some index is not equal to the previous value,\n+   * its bit is set to 1, otherwise its bit is set to 0.\n+   */\n+  private ArrowBuf distinctValueBuffer;\n+\n+  /**\n+   * The vector to deduplicate.\n+   */\n+  private final V vector;\n+\n+  private final BufferAllocator allocator;\n+\n+  public VectorDeduplicator(V vector, BufferAllocator allocator) {\n \n Review comment:\n   Thanks for the kind reminder.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-14T03:33:27.161+0000",
                    "updated": "2019-08-14T03:33:27.161+0000",
                    "started": "2019-08-14T03:33:27.161+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "294398",
                    "issueId": "13248486"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248486/worklog/294399",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4993: ARROW-6113: [Java] Support vector deduplicate function\nURL: https://github.com/apache/arrow/pull/4993#discussion_r313692730\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/deduplicate/VectorDeduplicator.java\n ##########\n @@ -0,0 +1,104 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.deduplicate;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.util.DataSizeRoundingUtil;\n+import org.apache.arrow.util.Preconditions;\n+import org.apache.arrow.vector.BitVectorHelper;\n+import org.apache.arrow.vector.IntVector;\n+import org.apache.arrow.vector.ValueVector;\n+\n+import io.netty.buffer.ArrowBuf;\n+\n+/**\n+ * Remove adjacent equal elements from a vector.\n+ * If the vector is sorted, it removes all duplicated values in the vector.\n+ * @param <V> vector type.\n+ */\n+public class VectorDeduplicator<V extends ValueVector> implements AutoCloseable {\n+\n+  /**\n+   * Bit set for distinct values.\n+   * If the value at some index is not equal to the previous value,\n+   * its bit is set to 1, otherwise its bit is set to 0.\n+   */\n+  private ArrowBuf distinctValueBuffer;\n+\n+  /**\n+   * The vector to deduplicate.\n+   */\n+  private final V vector;\n+\n+  private final BufferAllocator allocator;\n+\n+  public VectorDeduplicator(V vector, BufferAllocator allocator) {\n+    this.vector = vector;\n+    this.allocator = allocator;\n+  }\n+\n+  private void createDistinctValueBuffer() {\n+    Preconditions.checkArgument(distinctValueBuffer == null);\n+    int bufSize = DataSizeRoundingUtil.divideBy8Ceil(vector.getValueCount());\n+    distinctValueBuffer = allocator.buffer(bufSize);\n+    DeduplicationUtils.populateRunStartIndicators(vector, distinctValueBuffer);\n+  }\n+\n+  /**\n+   * Gets the number of values which are different from their precedence.\n+   * @return the number of values different from their precedence.\n+   */\n+  public int getDistinctValueCount() {\n+    if (distinctValueBuffer == null) {\n+      createDistinctValueBuffer();\n+    }\n+    return vector.getValueCount() - BitVectorHelper.getNullCount(distinctValueBuffer, vector.getValueCount());\n+  }\n+\n+  /**\n+   * Gets the vector with deduplicated adjacent valued removed.\n+   * @param outVector the output vector.\n+   */\n+  public void getDeduplicatedVector(V outVector) {\n \n Review comment:\n   Sounds good. Thanks.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-14T03:34:05.850+0000",
                    "updated": "2019-08-14T03:34:05.850+0000",
                    "started": "2019-08-14T03:34:05.850+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "294399",
                    "issueId": "13248486"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248486/worklog/294400",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4993: ARROW-6113: [Java] Support vector deduplicate function\nURL: https://github.com/apache/arrow/pull/4993#discussion_r313692824\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/deduplicate/VectorDeduplicator.java\n ##########\n @@ -0,0 +1,104 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.deduplicate;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.util.DataSizeRoundingUtil;\n+import org.apache.arrow.util.Preconditions;\n+import org.apache.arrow.vector.BitVectorHelper;\n+import org.apache.arrow.vector.IntVector;\n+import org.apache.arrow.vector.ValueVector;\n+\n+import io.netty.buffer.ArrowBuf;\n+\n+/**\n+ * Remove adjacent equal elements from a vector.\n+ * If the vector is sorted, it removes all duplicated values in the vector.\n+ * @param <V> vector type.\n+ */\n+public class VectorDeduplicator<V extends ValueVector> implements AutoCloseable {\n+\n+  /**\n+   * Bit set for distinct values.\n+   * If the value at some index is not equal to the previous value,\n+   * its bit is set to 1, otherwise its bit is set to 0.\n+   */\n+  private ArrowBuf distinctValueBuffer;\n+\n+  /**\n+   * The vector to deduplicate.\n+   */\n+  private final V vector;\n+\n+  private final BufferAllocator allocator;\n+\n+  public VectorDeduplicator(V vector, BufferAllocator allocator) {\n+    this.vector = vector;\n+    this.allocator = allocator;\n+  }\n+\n+  private void createDistinctValueBuffer() {\n+    Preconditions.checkArgument(distinctValueBuffer == null);\n+    int bufSize = DataSizeRoundingUtil.divideBy8Ceil(vector.getValueCount());\n+    distinctValueBuffer = allocator.buffer(bufSize);\n+    DeduplicationUtils.populateRunStartIndicators(vector, distinctValueBuffer);\n+  }\n+\n+  /**\n+   * Gets the number of values which are different from their precedence.\n+   * @return the number of values different from their precedence.\n+   */\n+  public int getDistinctValueCount() {\n+    if (distinctValueBuffer == null) {\n+      createDistinctValueBuffer();\n+    }\n+    return vector.getValueCount() - BitVectorHelper.getNullCount(distinctValueBuffer, vector.getValueCount());\n+  }\n+\n+  /**\n+   * Gets the vector with deduplicated adjacent valued removed.\n+   * @param outVector the output vector.\n+   */\n+  public void getDeduplicatedVector(V outVector) {\n+    if (distinctValueBuffer == null) {\n+      createDistinctValueBuffer();\n+    }\n+\n+    DeduplicationUtils.distinctValues(distinctValueBuffer, vector, outVector);\n+  }\n+\n+  /**\n+   * Gets the length of each distinct value.\n+   * @param lengthVector the vector for holding length values.\n+   */\n+  public void getValueLength(IntVector lengthVector) {\n \n Review comment:\n   Revised. Thanks.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-14T03:34:59.455+0000",
                    "updated": "2019-08-14T03:34:59.455+0000",
                    "started": "2019-08-14T03:34:59.455+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "294400",
                    "issueId": "13248486"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248486/worklog/294401",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4993: ARROW-6113: [Java] Support vector deduplicate function\nURL: https://github.com/apache/arrow/pull/4993#discussion_r313692902\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/deduplicate/VectorDeduplicator.java\n ##########\n @@ -0,0 +1,104 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.deduplicate;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.util.DataSizeRoundingUtil;\n+import org.apache.arrow.util.Preconditions;\n+import org.apache.arrow.vector.BitVectorHelper;\n+import org.apache.arrow.vector.IntVector;\n+import org.apache.arrow.vector.ValueVector;\n+\n+import io.netty.buffer.ArrowBuf;\n+\n+/**\n+ * Remove adjacent equal elements from a vector.\n+ * If the vector is sorted, it removes all duplicated values in the vector.\n+ * @param <V> vector type.\n+ */\n+public class VectorDeduplicator<V extends ValueVector> implements AutoCloseable {\n+\n+  /**\n+   * Bit set for distinct values.\n+   * If the value at some index is not equal to the previous value,\n+   * its bit is set to 1, otherwise its bit is set to 0.\n+   */\n+  private ArrowBuf distinctValueBuffer;\n+\n+  /**\n+   * The vector to deduplicate.\n+   */\n+  private final V vector;\n+\n+  private final BufferAllocator allocator;\n+\n+  public VectorDeduplicator(V vector, BufferAllocator allocator) {\n+    this.vector = vector;\n+    this.allocator = allocator;\n+  }\n+\n+  private void createDistinctValueBuffer() {\n+    Preconditions.checkArgument(distinctValueBuffer == null);\n+    int bufSize = DataSizeRoundingUtil.divideBy8Ceil(vector.getValueCount());\n+    distinctValueBuffer = allocator.buffer(bufSize);\n+    DeduplicationUtils.populateRunStartIndicators(vector, distinctValueBuffer);\n+  }\n+\n+  /**\n+   * Gets the number of values which are different from their precedence.\n+   * @return the number of values different from their precedence.\n+   */\n+  public int getDistinctValueCount() {\n \n Review comment:\n   Revised. Thanks.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-14T03:35:39.909+0000",
                    "updated": "2019-08-14T03:35:39.909+0000",
                    "started": "2019-08-14T03:35:39.909+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "294401",
                    "issueId": "13248486"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248486/worklog/294404",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4993: ARROW-6113: [Java] Support vector deduplicate function\nURL: https://github.com/apache/arrow/pull/4993#discussion_r313693033\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/deduplicate/VectorDeduplicator.java\n ##########\n @@ -0,0 +1,104 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.deduplicate;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.util.DataSizeRoundingUtil;\n+import org.apache.arrow.util.Preconditions;\n+import org.apache.arrow.vector.BitVectorHelper;\n+import org.apache.arrow.vector.IntVector;\n+import org.apache.arrow.vector.ValueVector;\n+\n+import io.netty.buffer.ArrowBuf;\n+\n+/**\n+ * Remove adjacent equal elements from a vector.\n+ * If the vector is sorted, it removes all duplicated values in the vector.\n+ * @param <V> vector type.\n+ */\n+public class VectorDeduplicator<V extends ValueVector> implements AutoCloseable {\n+\n+  /**\n+   * Bit set for distinct values.\n+   * If the value at some index is not equal to the previous value,\n+   * its bit is set to 1, otherwise its bit is set to 0.\n+   */\n+  private ArrowBuf distinctValueBuffer;\n+\n+  /**\n+   * The vector to deduplicate.\n+   */\n+  private final V vector;\n+\n+  private final BufferAllocator allocator;\n+\n+  public VectorDeduplicator(V vector, BufferAllocator allocator) {\n+    this.vector = vector;\n+    this.allocator = allocator;\n+  }\n+\n+  private void createDistinctValueBuffer() {\n+    Preconditions.checkArgument(distinctValueBuffer == null);\n+    int bufSize = DataSizeRoundingUtil.divideBy8Ceil(vector.getValueCount());\n+    distinctValueBuffer = allocator.buffer(bufSize);\n+    DeduplicationUtils.populateRunStartIndicators(vector, distinctValueBuffer);\n+  }\n+\n+  /**\n+   * Gets the number of values which are different from their precedence.\n+   * @return the number of values different from their precedence.\n \n Review comment:\n   Revised. Thank you.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-14T03:36:40.579+0000",
                    "updated": "2019-08-14T03:36:40.579+0000",
                    "started": "2019-08-14T03:36:40.579+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "294404",
                    "issueId": "13248486"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 26400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@53caea2d[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@79c95e45[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@505208ab[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@63da5f92[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@386c51cc[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@44134bf[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@441673cc[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@75819213[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2fb95f5e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@225072da[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@552fed4f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@2cc7ecf3[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 26400,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Aug 28 06:16:52 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-08-28T06:16:52.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6113/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-08-02T04:23:38.000+0000",
        "updated": "2019-08-28T06:16:52.000+0000",
        "timeoriginalestimate": null,
        "description": "Remove\u00a0adjacent deduplicated elements from a vector. This function can be used, for example, in\u00a0finding distinct values, or in compressing the vector data.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "7h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 26400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] Support vector deduplicate function",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248486/comment/16917457",
                    "id": "16917457",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 4993\n[https://github.com/apache/arrow/pull/4993]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-08-28T06:16:52.410+0000",
                    "updated": "2019-08-28T06:16:52.410+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z059lk:",
        "customfield_12314139": null
    }
}