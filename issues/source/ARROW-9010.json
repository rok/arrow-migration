{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13308924",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308924",
    "key": "ARROW-9010",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345977",
                "id": "12345977",
                "description": "",
                "name": "2.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-10-19"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12590053",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12590053",
                "type": {
                    "id": "12310460",
                    "name": "Child-Issue",
                    "inward": "is a child of",
                    "outward": "is a parent of",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310460"
                },
                "inwardIssue": {
                    "id": "13302466",
                    "key": "ARROW-8672",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302466",
                    "fields": {
                        "summary": "[Java] Implement RecordBatch IPC buffer compression from ARROW-300",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
                            "id": "7",
                            "description": "The sub-task of the issue",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
                            "name": "Sub-task",
                            "subtask": true,
                            "avatarId": 21146
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "aggregateprogress": {
            "progress": 31800,
            "total": 31800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 31800,
            "total": 31800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9010/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 53,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308924/worklog/440030",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 opened a new pull request #7326:\nURL: https://github.com/apache/arrow/pull/7326\n\n\n   This is the first sub-work item of ARROW-8672 (\r\n   [Java] Implement RecordBatch IPC buffer compression from ARROW-300). However, it does not involve any concrete compression algorithms. The purpose of this PR is to establish basic interfaces for data compression, and make changes to the IPC framework so that different compression algorithms can be plug-in smoothly.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-02T09:54:34.691+0000",
                    "updated": "2020-06-02T09:54:34.691+0000",
                    "started": "2020-06-02T09:54:34.691+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "440030",
                    "issueId": "13308924"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308924/worklog/440031",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #7326:\nURL: https://github.com/apache/arrow/pull/7326#issuecomment-637434482\n\n\n   https://issues.apache.org/jira/browse/ARROW-9010\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-02T10:03:22.946+0000",
                    "updated": "2020-06-02T10:03:22.946+0000",
                    "started": "2020-06-02T10:03:22.945+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "440031",
                    "issueId": "13308924"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308924/worklog/441766",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rymurr commented on a change in pull request #7326:\nURL: https://github.com/apache/arrow/pull/7326#discussion_r435803219\n\n\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/compression/CompressionCodec.java\n##########\n@@ -0,0 +1,68 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.compression;\n+\n+import org.apache.arrow.memory.ArrowBuf;\n+\n+/**\n+ * The codec for compression/decompression.\n+ */\n+public interface CompressionCodec {\n+\n+  /**\n+   * Given a buffer, estimate the compressed size.\n+   * Please note this operation is optional, and some compression methods may not support it.\n+   *\n+   * @param input the input buffer to be estimated.\n+   * @return the estimated size of the compressed data.\n+   */\n+  long estimateCompressedSize(ArrowBuf input);\n\nReview comment:\n       In the vector loader/unloader the estimated size is only needed by the compress/decompress methods. Is there a further use case where this would need to be externalised? Would simply compress/decompress be ok?\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/compression/CompressionUtility.java\n##########\n@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.compression;\n+\n+import org.apache.arrow.flatbuf.BodyCompressionMethod;\n+import org.apache.arrow.flatbuf.CompressionType;\n+import org.apache.arrow.vector.ipc.message.ArrowBodyCompression;\n+\n+/**\n+ * Utilities for data compression/decompression.\n+ */\n+public class CompressionUtility {\n+\n+  private CompressionUtility() {\n+  }\n+\n+  /**\n+   * Creates the {@link ArrowBodyCompression} object, given the {@link CompressionCodec}.\n+   */\n+  public static ArrowBodyCompression createBodyCompression(CompressionCodec codec) {\n+    if (codec == null) {\n+      return null;\n+    }\n+    for (int i = 0; i < CompressionType.names.length; i++) {\n+      if (CompressionType.names[i].equals(codec.getCodecName())) {\n\nReview comment:\n       I feel like a switch statement and/or enum (similar to Type/ArrowType conversions would be better here than a tight loop of string comparisons. Not a huge deal as its a small array but I think its a bit easier to read.\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/ipc/message/MessageSerializer.java\n##########\n@@ -300,6 +307,20 @@ public static long writeBatchBuffers(WriteChannel out, ArrowRecordBatch batch) t\n     return out.getCurrentPosition() - bufferStart;\n   }\n \n+  /**\n+   * Serialize the compression body.\n+   */\n+  public static long writeCompressionBody(\n+      WriteChannel out, ArrowBodyCompression bodyCompression) throws IOException {\n+    long bufferStart = out.getCurrentPosition();\n+    ByteBuffer buf = ByteBuffer.allocate(2);\n\nReview comment:\n       I wonder if rather than allocating a new ByteBuffer it might be easier to just use a byte[] and the `write(byte[])` method. Potentially you could then use a byte[] to store the data in `ArrowBodyCompression` so that you don't have to allocate anything while writing the message.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-05T09:56:26.379+0000",
                    "updated": "2020-06-05T09:56:26.379+0000",
                    "started": "2020-06-05T09:56:26.379+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "441766",
                    "issueId": "13308924"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308924/worklog/442863",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #7326:\nURL: https://github.com/apache/arrow/pull/7326#issuecomment-640584596\n\n\n   Thanks a lot for your good comments. Please see my reply in line. \r\n   \r\n   > Looks good, few minor comments. It would be good to see this in a test (if that is reasonable/possible) w/ a NoOp compressor or something as its hard for me to envisoin how the compression actually will function.\r\n   \r\n   Sounds good. In fact, I have added some tests for NoOp compressor when preparing the PR. However, the changes are reverted before submitting the PR, because it would involve changes to the Message.fbs file. IMO, we should be careful when changing this file, as it involves protocol changes, and may break the code for other languages. \r\n   \r\n   > \r\n   > Also, excuse my ignorance of the compression scheme but is there any negotiation of the compresson scheme or an opt-out for older clients? A client recieving a compressed buffer without taking it into account will likely crash hard.\r\n   \r\n   I agree with you that compression scheme negotiation is a useful and widely used feature. Maybe we will support it in the futrue, but not this this PR. According to the discussion in the ML, this issue only deals with some standard compression schemes, and these schemes are encoded in the protocol and should be supported universally. \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-09T16:06:31.412+0000",
                    "updated": "2020-06-09T16:06:31.412+0000",
                    "started": "2020-06-09T16:06:31.412+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "442863",
                    "issueId": "13308924"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308924/worklog/443005",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on a change in pull request #7326:\nURL: https://github.com/apache/arrow/pull/7326#discussion_r436654884\n\n\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/compression/CompressionUtility.java\n##########\n@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.compression;\n+\n+import org.apache.arrow.flatbuf.BodyCompressionMethod;\n+import org.apache.arrow.flatbuf.CompressionType;\n+import org.apache.arrow.vector.ipc.message.ArrowBodyCompression;\n+\n+/**\n+ * Utilities for data compression/decompression.\n+ */\n+public class CompressionUtility {\n+\n+  private CompressionUtility() {\n+  }\n+\n+  /**\n+   * Creates the {@link ArrowBodyCompression} object, given the {@link CompressionCodec}.\n+   */\n+  public static ArrowBodyCompression createBodyCompression(CompressionCodec codec) {\n+    if (codec == null) {\n+      return null;\n+    }\n+    for (int i = 0; i < CompressionType.names.length; i++) {\n+      if (CompressionType.names[i].equals(codec.getCodecName())) {\n\nReview comment:\n       Thanks for your comment. I agree with you. \r\n   The problem is that class `org.apache.arrow.flatbuf.CompressionType` is automatically generated by flatbuf, and it is not implemented by an enum. Instead, it has separate fields for ordinals and names. In addition, it only provides function to convert ordinals to names, but not vice versa. \n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/compression/CompressionCodec.java\n##########\n@@ -0,0 +1,68 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.compression;\n+\n+import org.apache.arrow.memory.ArrowBuf;\n+\n+/**\n+ * The codec for compression/decompression.\n+ */\n+public interface CompressionCodec {\n+\n+  /**\n+   * Given a buffer, estimate the compressed size.\n+   * Please note this operation is optional, and some compression methods may not support it.\n+   *\n+   * @param input the input buffer to be estimated.\n+   * @return the estimated size of the compressed data.\n+   */\n+  long estimateCompressedSize(ArrowBuf input);\n\nReview comment:\n       Simply compress/decompress would be OK, of course. \r\n   \r\n   The estimateCompressedSize/estimateDecompressedSize APIs are mainly provided for performance benefits. In particular, if we can estimate the sizes with accuracy, we will\r\n   1. Avoid allocating memory spaces larger than necessary.\r\n   2. Avoid reallocating memory space during compression/decompression\r\n   3. Avoid data copy caused by reallocations. \r\n   \r\n   Due to the above benefits, I would prefer to add the APIs to the interface, but I am open to others' opinons and willing to change my mind if necessary. \n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/ipc/message/MessageSerializer.java\n##########\n@@ -300,6 +307,20 @@ public static long writeBatchBuffers(WriteChannel out, ArrowRecordBatch batch) t\n     return out.getCurrentPosition() - bufferStart;\n   }\n \n+  /**\n+   * Serialize the compression body.\n+   */\n+  public static long writeCompressionBody(\n+      WriteChannel out, ArrowBodyCompression bodyCompression) throws IOException {\n+    long bufferStart = out.getCurrentPosition();\n+    ByteBuffer buf = ByteBuffer.allocate(2);\n\nReview comment:\n       I have revised the implementation of `ArrowBodyCompression ` so that it is based on byte[]. Thanks a lot for the good suggestion. \n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/compression/CompressionCodec.java\n##########\n@@ -0,0 +1,68 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.compression;\n+\n+import org.apache.arrow.memory.ArrowBuf;\n+\n+/**\n+ * The codec for compression/decompression.\n+ */\n+public interface CompressionCodec {\n+\n+  /**\n+   * Given a buffer, estimate the compressed size.\n+   * Please note this operation is optional, and some compression methods may not support it.\n+   *\n+   * @param input the input buffer to be estimated.\n+   * @return the estimated size of the compressed data.\n+   */\n+  long estimateCompressedSize(ArrowBuf input);\n\nReview comment:\n       Maybe you mean we should remove the estimateCompressedSize/estimateDecompressedSize APIs from the CompressionCodec interface, so that the sizes will be estimated internally when calling the compress/decompress APIs. \r\n   \r\n   The problem is that for some scenarios, the size should be enforced from the outside, rather than being computed internally. For example, in the decompression phase, if we know the buffer type (e.g. validity buffer) and the vector length, we can estimate the decompressed buffer size with absolute certainty. \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-09T16:21:12.541+0000",
                    "updated": "2020-06-09T16:21:12.541+0000",
                    "started": "2020-06-09T16:21:12.541+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "443005",
                    "issueId": "13308924"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308924/worklog/446292",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rongma1997 commented on pull request #7326:\nURL: https://github.com/apache/arrow/pull/7326#issuecomment-644536052\n\n\n   Hi, I have a question... probably not related to what this PR focus on. \r\n   What if the compressor / decompressor for the codec will have JNI call for compression / decomperssion? If so, it will have JNI call on each buffer. Can we support a JNI bridge to the RecordBatch level depending on the codec?\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-16T05:17:06.929+0000",
                    "updated": "2020-06-16T05:17:06.929+0000",
                    "started": "2020-06-16T05:17:06.929+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "446292",
                    "issueId": "13308924"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308924/worklog/446320",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #7326:\nURL: https://github.com/apache/arrow/pull/7326#issuecomment-644563536\n\n\n   > Hi, I have a question... probably not related to what this PR focus on.\r\n   > What if the compressor / decompressor for the codec will have JNI call for compression / decomperssion? If so, it will have JNI call on each buffer. Can we support a JNI bridge to the RecordBatch level depending on the codec?\r\n   \r\n   @rongma1997 I am not sure, as some implementation issues are not determined yet. It seems there are some Java libraries for basic compression algorithms (e.g. zstd-jni and lz4-java), and we may prefer them. If feel strong about the RecordBatch level JNI bridge, maybe you can open an issue/discussion for it. \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-16T06:38:54.473+0000",
                    "updated": "2020-06-16T06:38:54.473+0000",
                    "started": "2020-06-16T06:38:54.473+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "446320",
                    "issueId": "13308924"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308924/worklog/446556",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rymurr commented on a change in pull request #7326:\nURL: https://github.com/apache/arrow/pull/7326#discussion_r440909024\n\n\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/compression/CompressionUtility.java\n##########\n@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.compression;\n+\n+import org.apache.arrow.flatbuf.BodyCompressionMethod;\n+import org.apache.arrow.flatbuf.CompressionType;\n+import org.apache.arrow.vector.ipc.message.ArrowBodyCompression;\n+\n+/**\n+ * Utilities for data compression/decompression.\n+ */\n+public class CompressionUtility {\n+\n+  private CompressionUtility() {\n+  }\n+\n+  /**\n+   * Creates the {@link ArrowBodyCompression} object, given the {@link CompressionCodec}.\n+   */\n+  public static ArrowBodyCompression createBodyCompression(CompressionCodec codec) {\n+    if (codec == null) {\n+      return null;\n+    }\n+    for (int i = 0; i < CompressionType.names.length; i++) {\n+      if (CompressionType.names[i].equals(codec.getCodecName())) {\n\nReview comment:\n       Agreed, I thought a pattern similar to `Types.java` (and an added enum) or a switch statement on the byte value might be more clear. Not a blocker for me though\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-16T14:46:56.132+0000",
                    "updated": "2020-06-16T14:46:56.132+0000",
                    "started": "2020-06-16T14:46:56.132+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "446556",
                    "issueId": "13308924"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308924/worklog/446560",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rymurr commented on a change in pull request #7326:\nURL: https://github.com/apache/arrow/pull/7326#discussion_r440915137\n\n\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/compression/CompressionCodec.java\n##########\n@@ -0,0 +1,68 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.compression;\n+\n+import org.apache.arrow.memory.ArrowBuf;\n+\n+/**\n+ * The codec for compression/decompression.\n+ */\n+public interface CompressionCodec {\n+\n+  /**\n+   * Given a buffer, estimate the compressed size.\n+   * Please note this operation is optional, and some compression methods may not support it.\n+   *\n+   * @param input the input buffer to be estimated.\n+   * @return the estimated size of the compressed data.\n+   */\n+  long estimateCompressedSize(ArrowBuf input);\n\nReview comment:\n       Yeah my thinking was that estimation could be done internally. I am not sure where the estimated value is useful externally. I *think* that the compression codec will be allocating its own buffers so should know exact/estimated sizes and be able to enforce/validate those numbers. In what scenario does the external world need to be informed of sizes?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-16T14:54:36.476+0000",
                    "updated": "2020-06-16T14:54:36.476+0000",
                    "started": "2020-06-16T14:54:36.476+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "446560",
                    "issueId": "13308924"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308924/worklog/452819",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on a change in pull request #7326:\nURL: https://github.com/apache/arrow/pull/7326#discussion_r447441667\n\n\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/compression/CompressionUtility.java\n##########\n@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.compression;\n+\n+import org.apache.arrow.flatbuf.BodyCompressionMethod;\n+import org.apache.arrow.flatbuf.CompressionType;\n+import org.apache.arrow.vector.ipc.message.ArrowBodyCompression;\n+\n+/**\n+ * Utilities for data compression/decompression.\n+ */\n+public class CompressionUtility {\n+\n+  private CompressionUtility() {\n+  }\n+\n+  /**\n+   * Creates the {@link ArrowBodyCompression} object, given the {@link CompressionCodec}.\n+   */\n+  public static ArrowBodyCompression createBodyCompression(CompressionCodec codec) {\n+    if (codec == null) {\n+      return null;\n+    }\n+    for (int i = 0; i < CompressionType.names.length; i++) {\n+      if (CompressionType.names[i].equals(codec.getCodecName())) {\n\nReview comment:\n       Thanks for the suggestion. I have revised the code to implement it through a switch statement. Please check if it looks good.\r\n   \r\n   It looks clearer. However, we may need to change the code whenever we support a new compression method. \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-30T06:33:52.192+0000",
                    "updated": "2020-06-30T06:33:52.192+0000",
                    "started": "2020-06-30T06:33:52.192+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "452819",
                    "issueId": "13308924"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308924/worklog/452820",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on a change in pull request #7326:\nURL: https://github.com/apache/arrow/pull/7326#discussion_r447442441\n\n\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/compression/CompressionCodec.java\n##########\n@@ -0,0 +1,68 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.compression;\n+\n+import org.apache.arrow.memory.ArrowBuf;\n+\n+/**\n+ * The codec for compression/decompression.\n+ */\n+public interface CompressionCodec {\n+\n+  /**\n+   * Given a buffer, estimate the compressed size.\n+   * Please note this operation is optional, and some compression methods may not support it.\n+   *\n+   * @param input the input buffer to be estimated.\n+   * @return the estimated size of the compressed data.\n+   */\n+  long estimateCompressedSize(ArrowBuf input);\n\nReview comment:\n       Sounds reasonable. Thank you.\r\n   I have revised the code to simplify the interface. Maybe we can add the optimization in the future, if we belive it is necessary. \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-30T06:35:35.597+0000",
                    "updated": "2020-06-30T06:35:35.597+0000",
                    "started": "2020-06-30T06:35:35.597+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "452820",
                    "issueId": "13308924"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308924/worklog/465339",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #7326:\nURL: https://github.com/apache/arrow/pull/7326#discussion_r464024560\n\n\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/compression/CompressionCodec.java\n##########\n@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.compression;\n+\n+import org.apache.arrow.memory.ArrowBuf;\n+\n+/**\n+ * The codec for compression/decompression.\n+ */\n+public interface CompressionCodec {\n+\n+  /**\n+   * Compress a buffer.\n+   * @param input the buffer to compress.\n+   * @return the compressed buffer.\n+   */\n+  ArrowBuf compress(ArrowBuf input);\n\nReview comment:\n       Should allocator be part of this interface?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-02T03:07:30.766+0000",
                    "updated": "2020-08-02T03:07:30.766+0000",
                    "started": "2020-08-02T03:07:30.766+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "465339",
                    "issueId": "13308924"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308924/worklog/465340",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #7326:\nURL: https://github.com/apache/arrow/pull/7326#discussion_r464024594\n\n\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/compression/CompressionUtility.java\n##########\n@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.compression;\n+\n+import org.apache.arrow.flatbuf.BodyCompressionMethod;\n+import org.apache.arrow.flatbuf.CompressionType;\n+import org.apache.arrow.vector.ipc.message.ArrowBodyCompression;\n+\n+/**\n+ * Utilities for data compression/decompression.\n+ */\n+public class CompressionUtility {\n\nReview comment:\n       I don't think Utility matches naming conventions that is used elsewhere in the code base for util classes?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-02T03:08:04.046+0000",
                    "updated": "2020-08-02T03:08:04.046+0000",
                    "started": "2020-08-02T03:08:04.046+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "465340",
                    "issueId": "13308924"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308924/worklog/465341",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #7326:\nURL: https://github.com/apache/arrow/pull/7326#discussion_r464024951\n\n\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/ipc/message/ArrowRecordBatch.java\n##########\n@@ -232,6 +252,12 @@ public long computeBodyLength() {\n       // round up size to the next multiple of 8\n       size = DataSizeRoundingUtil.roundUpTo8Multiple(size);\n     }\n+\n+    if (bodyCompression != null) {\n\nReview comment:\n       Did you consider making bodyCompression never null (have a static instance that represents zero compression) and making a instance method on it like 'updateMetadataSize(long size)` instead of putting this check here?  Also I'm not familiar with this code but its strange to have to perform this calculation outside of serializing flatbuffers?  Is there something analogous in the C++ code?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-02T03:13:43.392+0000",
                    "updated": "2020-08-02T03:13:43.392+0000",
                    "started": "2020-08-02T03:13:43.392+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "465341",
                    "issueId": "13308924"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308924/worklog/465342",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #7326:\nURL: https://github.com/apache/arrow/pull/7326#discussion_r464025134\n\n\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/ipc/message/MessageSerializer.java\n##########\n@@ -266,8 +266,15 @@ public static ArrowBlock serialize(WriteChannel out, ArrowRecordBatch batch, Ipc\n     long bufferLength = writeBatchBuffers(out, batch);\n     Preconditions.checkArgument(bufferLength % 8 == 0, \"out is not aligned\");\n \n+    long compLength = 0L;\n+    if (batch.getBodyCompression() != null) {\n+      compLength = writeCompressionBody(out, batch.getBodyCompression());\n+      Preconditions.checkArgument(compLength == ArrowBodyCompression.BODY_COMPRESSION_LENGTH,\n\nReview comment:\n       Could you add a comment here on why we need to verify this value here?.  Also, it looks like align() is called in this method, so couldn't that cause these values to be unequal\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/ipc/message/MessageSerializer.java\n##########\n@@ -266,8 +266,15 @@ public static ArrowBlock serialize(WriteChannel out, ArrowRecordBatch batch, Ipc\n     long bufferLength = writeBatchBuffers(out, batch);\n     Preconditions.checkArgument(bufferLength % 8 == 0, \"out is not aligned\");\n \n+    long compLength = 0L;\n+    if (batch.getBodyCompression() != null) {\n+      compLength = writeCompressionBody(out, batch.getBodyCompression());\n+      Preconditions.checkArgument(compLength == ArrowBodyCompression.BODY_COMPRESSION_LENGTH,\n+          \"deserialized compression body length not equal to ArrowBodyCompression#BODY_COMPRESSION_LENGTH\");\n\nReview comment:\n       included sizes here would be useful.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-02T03:15:46.751+0000",
                    "updated": "2020-08-02T03:15:46.751+0000",
                    "started": "2020-08-02T03:15:46.750+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "465342",
                    "issueId": "13308924"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308924/worklog/465343",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #7326:\nURL: https://github.com/apache/arrow/pull/7326#discussion_r464025600\n\n\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/ipc/message/MessageSerializer.java\n##########\n@@ -403,16 +421,29 @@ public static ArrowRecordBatch deserializeRecordBatch(RecordBatch recordBatchFB,\n       nodes.add(new ArrowFieldNode(node.length(), node.nullCount()));\n     }\n     List<ArrowBuf> buffers = new ArrayList<>();\n+    long curOffset = 0L;\n     for (int i = 0; i < recordBatchFB.buffersLength(); ++i) {\n       Buffer bufferFB = recordBatchFB.buffers(i);\n       ArrowBuf vectorBuffer = body.slice(bufferFB.offset(), bufferFB.length());\n+      curOffset = bufferFB.offset() + bufferFB.length();\n       buffers.add(vectorBuffer);\n     }\n+\n+    if (curOffset % 8 != 0) {\n+      curOffset += 8 - curOffset % 8;\n+    }\n+    ArrowBodyCompression bodyCompression = null;\n\nReview comment:\n       It looks like this is manually parsing the buffer stream?  I would have expected to directly reference A body compression object directly\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-02T03:22:02.791+0000",
                    "updated": "2020-08-02T03:22:02.791+0000",
                    "started": "2020-08-02T03:22:02.791+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "465343",
                    "issueId": "13308924"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308924/worklog/465344",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #7326:\nURL: https://github.com/apache/arrow/pull/7326#discussion_r464025676\n\n\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/compression/CompressionCodec.java\n##########\n@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.compression;\n+\n+import org.apache.arrow.memory.ArrowBuf;\n+\n+/**\n+ * The codec for compression/decompression.\n+ */\n+public interface CompressionCodec {\n+\n+  /**\n+   * Compress a buffer.\n+   * @param input the buffer to compress.\n+   * @return the compressed buffer.\n+   */\n+  ArrowBuf compress(ArrowBuf input);\n\nReview comment:\n       would uncompressedBuffer be a better name for the parameter?  Similar question for the one below?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-02T03:23:42.453+0000",
                    "updated": "2020-08-02T03:23:42.453+0000",
                    "started": "2020-08-02T03:23:42.453+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "465344",
                    "issueId": "13308924"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308924/worklog/465345",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #7326:\nURL: https://github.com/apache/arrow/pull/7326#discussion_r464025727\n\n\n\n##########\nFile path: java/flight/flight-core/src/main/java/org/apache/arrow/flight/ArrowMessage.java\n##########\n@@ -353,6 +361,23 @@ private InputStream asInputStream(BufferAllocator allocator) {\n         // the reference count\n         b.getReferenceManager().retain();\n       }\n+\n+      // add compression info, if any\n+      if (bodyCompression != null) {\n+        ArrowBuf compBuf = allocator.buffer(ArrowBodyCompression.BODY_COMPRESSION_LENGTH);\n+        compBuf.setByte(0, bodyCompression.getCodec());\n\nReview comment:\n       it looks like this is manually serializing the table, shouldn't this be delegated to flatbuffers?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-02T03:24:46.026+0000",
                    "updated": "2020-08-02T03:24:46.026+0000",
                    "started": "2020-08-02T03:24:46.026+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "465345",
                    "issueId": "13308924"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308924/worklog/465346",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #7326:\nURL: https://github.com/apache/arrow/pull/7326#discussion_r464025839\n\n\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/ipc/message/ArrowBodyCompression.java\n##########\n@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.ipc.message;\n+\n+import org.apache.arrow.flatbuf.BodyCompression;\n+\n+import com.google.flatbuffers.FlatBufferBuilder;\n+\n+/**\n+ * Compression information about data written to a channel.\n+ */\n+public class ArrowBodyCompression implements FBSerializable {\n+\n+  /**\n+   * Length of the serialized object.\n+   */\n+  public static final long BODY_COMPRESSION_LENGTH = 2L;\n+\n+  final byte[] data = new byte[(int) BODY_COMPRESSION_LENGTH];\n\nReview comment:\n       Is there a reason to not have separately named variables here?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-02T03:26:11.276+0000",
                    "updated": "2020-08-02T03:26:11.276+0000",
                    "started": "2020-08-02T03:26:11.276+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "465346",
                    "issueId": "13308924"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308924/worklog/465347",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #7326:\nURL: https://github.com/apache/arrow/pull/7326#discussion_r464025855\n\n\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/ipc/message/ArrowBodyCompression.java\n##########\n@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.ipc.message;\n+\n+import org.apache.arrow.flatbuf.BodyCompression;\n+\n+import com.google.flatbuffers.FlatBufferBuilder;\n+\n+/**\n+ * Compression information about data written to a channel.\n+ */\n+public class ArrowBodyCompression implements FBSerializable {\n+\n+  /**\n+   * Length of the serialized object.\n+   */\n+  public static final long BODY_COMPRESSION_LENGTH = 2L;\n\nReview comment:\n       this seems like it would break if a field as ever added to the table?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-02T03:26:24.522+0000",
                    "updated": "2020-08-02T03:26:24.522+0000",
                    "started": "2020-08-02T03:26:24.522+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "465347",
                    "issueId": "13308924"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 31800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@7467c07b[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@294b6582[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@607d51f6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@12685f0e[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@544a18cf[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@67ec4759[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6d1458b3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3d54ea30[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@39dc1135[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3c0f5fd8[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7311592a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@690e3812[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 31800,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Sep 23 04:20:25 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-09-23T04:20:25.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9010/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2020-06-02T09:49:08.000+0000",
        "updated": "2020-09-23T04:54:40.000+0000",
        "timeoriginalestimate": null,
        "description": "This is the first sub-work item of ARROW-8672 (\r\n[Java] Implement RecordBatch IPC buffer compression from ARROW-300). However, it does not involve any concrete compression algorithms. The purpose of this PR is to establish basic interfaces for data compression, and make changes to the IPC framework so that different compression algorithms can be plug-in smoothly. ",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "8h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 31800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] Framework and interface changes for RecordBatch IPC buffer compression",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308924/comment/17200512",
                    "id": "17200512",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield",
                        "name": "emkornfield",
                        "key": "emkornfield",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 7326\n[https://github.com/apache/arrow/pull/7326]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield",
                        "name": "emkornfield",
                        "key": "emkornfield",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2020-09-23T04:20:25.269+0000",
                    "updated": "2020-09-23T04:20:25.269+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0ff4g:",
        "customfield_12314139": null
    }
}