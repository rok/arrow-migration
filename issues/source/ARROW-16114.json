{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13437665",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437665",
    "key": "ARROW-16114",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351051",
                "id": "12351051",
                "description": "",
                "name": "8.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-05-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350591",
                "id": "12350591",
                "description": "",
                "name": "7.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-02-03"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=willjones127",
            "name": "willjones127",
            "key": "willjones127",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
            },
            "displayName": "Will Jones",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332532",
                "id": "12332532",
                "name": "Documentation"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=willjones127",
            "name": "willjones127",
            "key": "willjones127",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
            },
            "displayName": "Will Jones",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=willjones127",
            "name": "willjones127",
            "key": "willjones127",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
            },
            "displayName": "Will Jones",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 10200,
            "total": 10200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 10200,
            "total": 10200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-16114/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 17,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437665/worklog/757487",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 opened a new pull request, #12901:\nURL: https://github.com/apache/arrow/pull/12901\n\n   Recently was using this class in a third-party library and had a hard time finding information about these classes.\n\n\n",
                    "created": "2022-04-15T19:46:44.376+0000",
                    "updated": "2022-04-15T19:46:44.376+0000",
                    "started": "2022-04-15T19:46:44.376+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "757487",
                    "issueId": "13437665"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437665/worklog/757488",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #12901:\nURL: https://github.com/apache/arrow/pull/12901#issuecomment-1100326003\n\n   https://issues.apache.org/jira/browse/ARROW-16114\n\n\n",
                    "created": "2022-04-15T19:47:05.552+0000",
                    "updated": "2022-04-15T19:47:05.552+0000",
                    "started": "2022-04-15T19:47:05.552+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "757488",
                    "issueId": "13437665"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437665/worklog/757489",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #12901:\nURL: https://github.com/apache/arrow/pull/12901#issuecomment-1100326062\n\n   :warning: Ticket **has not been started in JIRA**, please click 'Start Progress'.\n\n\n",
                    "created": "2022-04-15T19:47:07.500+0000",
                    "updated": "2022-04-15T19:47:07.500+0000",
                    "started": "2022-04-15T19:47:07.500+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "757489",
                    "issueId": "13437665"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437665/worklog/758714",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on code in PR #12901:\nURL: https://github.com/apache/arrow/pull/12901#discussion_r853360716\n\n\n##########\npython/pyarrow/_parquet.pyx:\n##########\n@@ -49,6 +49,8 @@ cimport cpython as cp\n \n \n cdef class Statistics(_Weakrefable):\n+    \"\"\"Statistics for a single column in a single row group\"\"\"\n\nReview Comment:\n   ```suggestion\r\n       \"\"\"Statistics for a single column in a single row group.\"\"\"\r\n   ```\n\n\n\n##########\npython/pyarrow/_parquet.pyx:\n##########\n@@ -96,72 +98,87 @@ cdef class Statistics(_Weakrefable):\n \n     @property\n     def has_min_max(self):\n+        \"\"\"bool: whether min and max are present\"\"\"\n         return self.statistics.get().HasMinMax()\n \n     @property\n     def has_null_count(self):\n+        \"\"\"bool: whether null count is present\"\"\"\n         return self.statistics.get().HasNullCount()\n \n     @property\n     def has_distinct_count(self):\n+        \"\"\"bool: whether distinct count is preset\"\"\"\n         return self.statistics.get().HasDistinctCount()\n \n     @property\n     def min_raw(self):\n+        \"\"\"bool, int, float, or bytes: min value as physical type\"\"\"\n         if self.has_min_max:\n             return _cast_statistic_raw_min(self.statistics.get())\n         else:\n             return None\n \n     @property\n     def max_raw(self):\n+        \"\"\"bool, int, float, or bytes: max value as physical type\"\"\"\n         if self.has_min_max:\n             return _cast_statistic_raw_max(self.statistics.get())\n         else:\n             return None\n \n     @property\n     def min(self):\n+        \"\"\"min value as logical type\"\"\"\n         if self.has_min_max:\n             return _cast_statistic_min(self.statistics.get())\n         else:\n             return None\n \n     @property\n     def max(self):\n+        \"\"\"max value as logical type\"\"\"\n         if self.has_min_max:\n             return _cast_statistic_max(self.statistics.get())\n         else:\n             return None\n \n     @property\n     def null_count(self):\n+        \"\"\"int: number of null values in chunk\"\"\"\n         return self.statistics.get().null_count()\n \n     @property\n     def distinct_count(self):\n+        \"\"\"int: distinct number of values in chunk\"\"\"\n+        # TODO: Why is this always zero? ARROW-11793\n         return self.statistics.get().distinct_count()\n \n     @property\n     def num_values(self):\n+        \"\"\"int: number of non-null values\"\"\"\n         return self.statistics.get().num_values()\n \n     @property\n     def physical_type(self):\n+        \"\"\"str: physical type of column\"\"\"\n         raw_physical_type = self.statistics.get().physical_type()\n         return physical_type_name_from_enum(raw_physical_type)\n \n     @property\n     def logical_type(self):\n+        \"\"\":class:`ParquetLogicalType`: logical type of column\"\"\"\n         return wrap_logical_type(self.statistics.get().descr().logical_type())\n \n     @property\n     def converted_type(self):\n+        \"\"\"str or None: legacy converted type\"\"\"\n         raw_converted_type = self.statistics.get().descr().converted_type()\n         return converted_type_name_from_enum(raw_converted_type)\n \n \n cdef class ParquetLogicalType(_Weakrefable):\n+    \"\"\"Logical type of parquet type\"\"\"\n\nReview Comment:\n   ```suggestion\r\n       \"\"\"Logical type of Parquet type.\"\"\"\r\n   ```\n\n\n\n##########\npython/pyarrow/_parquet.pyx:\n##########\n@@ -392,45 +418,62 @@ cdef class ColumnChunkMetaData(_Weakrefable):\n \n     @property\n     def compression(self):\n+        \"\"\"str: type of compression used for column.\n+\n+        One of 'UNCOMPRESSED', 'SNAPPY', 'GZIP', 'LZO', 'BROTLI', 'LZ4', 'ZSTD', \n+        or 'UNKNOWN'.\"\"\"\n         return compression_name_from_enum(self.metadata.compression())\n \n     @property\n     def encodings(self):\n+        \"\"\"tuple of str: encodings used for column\n+\n+        One of 'PLAIN', 'BIT_PACKED', 'RLE', 'BYTE_STREAM_SPLIT', 'DELTA_BINARY_PACKED',\n+        'DELTA_BYTE_ARRAY'.\"\"\"\n         return tuple(map(encoding_name_from_enum, self.metadata.encodings()))\n \n     @property\n     def has_dictionary_page(self):\n+        \"\"\"bool: whether there is dictionary data present in the column chunk\"\"\"\n         return bool(self.metadata.has_dictionary_page())\n \n     @property\n     def dictionary_page_offset(self):\n+        \"\"\"int: offset of dictionary page reglative to column chunk offset\"\"\"\n         if self.has_dictionary_page:\n             return self.metadata.dictionary_page_offset()\n         else:\n             return None\n \n     @property\n     def data_page_offset(self):\n+        \"\"\"int: offset of data page reglative to column chunk offset\"\"\"\n         return self.metadata.data_page_offset()\n \n     @property\n     def has_index_page(self):\n+        \"\"\"Not yet supported\"\"\"\n         raise NotImplementedError('not supported in parquet-cpp')\n \n     @property\n     def index_page_offset(self):\n+        \"\"\"Not yet supported\"\"\"\n         raise NotImplementedError(\"parquet-cpp doesn't return valid values\")\n \n     @property\n     def total_compressed_size(self):\n+        \"\"\"int: compresssed size in bytes\"\"\"\n         return self.metadata.total_compressed_size()\n \n     @property\n     def total_uncompressed_size(self):\n+        \"\"\"int: uncompressed size in bytes\"\"\"\n         return self.metadata.total_uncompressed_size()\n \n \n cdef class RowGroupMetaData(_Weakrefable):\n+    \"\"\"Metadata for a single row group\"\"\"\n\nReview Comment:\n   ```suggestion\r\n       \"\"\"Metadata for a single row group.\"\"\"\r\n   ```\n\n\n\n##########\npython/pyarrow/_parquet.pyx:\n##########\n@@ -732,13 +809,25 @@ cdef class ParquetSchema(_Weakrefable):\n         return self.schema.Equals(deref(other.schema))\n \n     def column(self, i):\n+        \"\"\"Return the schema for a single column\n+\n+        Parameters\n+        ----------\n+        i : int\n+            index of column in schema\n+\n+        Returns\n+        -------\n+        column_schema : ColumnSchema\n+        \"\"\"\n         if i < 0 or i >= len(self):\n             raise IndexError('{0} out of bounds'.format(i))\n \n         return ColumnSchema(self, i)\n \n \n cdef class ColumnSchema(_Weakrefable):\n+    \"\"\"Schema for a single column\"\"\"\n\nReview Comment:\n   ```suggestion\r\n       \"\"\"Schema for a single column.\"\"\"\r\n   ```\n\n\n\n##########\npython/pyarrow/_parquet.pyx:\n##########\n@@ -96,72 +98,87 @@ cdef class Statistics(_Weakrefable):\n \n     @property\n     def has_min_max(self):\n+        \"\"\"bool: whether min and max are present\"\"\"\n\nReview Comment:\n   Huh, did not realize numpydoc recommended this style for property docstrings. It looks like the sentences should still end in a period, though?\n\n\n\n##########\npython/pyarrow/_parquet.pyx:\n##########\n@@ -609,6 +672,17 @@ cdef class FileMetaData(_Weakrefable):\n             return None\n \n     def row_group(self, int i):\n+        \"\"\"Get metadata for row group at index i\n\nReview Comment:\n   ```suggestion\r\n           \"\"\"Get metadata for row group at index i.\r\n   ```\n\n\n\n##########\npython/pyarrow/_parquet.pyx:\n##########\n@@ -670,6 +744,8 @@ cdef class FileMetaData(_Weakrefable):\n \n \n cdef class ParquetSchema(_Weakrefable):\n+    \"\"\"A Parquet schema\"\"\"\n\nReview Comment:\n   ```suggestion\r\n       \"\"\"A Parquet schema.\"\"\"\r\n   ```\n\n\n\n##########\npython/pyarrow/_parquet.pyx:\n##########\n@@ -481,14 +524,17 @@ cdef class RowGroupMetaData(_Weakrefable):\n \n\nReview Comment:\n   There are some other methods above that aren't documented, should we document those?\n\n\n\n##########\npython/pyarrow/_parquet.pyx:\n##########\n@@ -504,6 +550,8 @@ def _reconstruct_filemetadata(Buffer serialized):\n \n \n cdef class FileMetaData(_Weakrefable):\n+    \"\"\"Parquet metadata for a single file\"\"\"\n\nReview Comment:\n   ```suggestion\r\n       \"\"\"Parquet metadata for a single file.\"\"\"\r\n   ```\n\n\n\n##########\npython/pyarrow/_parquet.pyx:\n##########\n@@ -292,6 +309,8 @@ cdef _box_flba(ParquetFLBA val, uint32_t len):\n \n \n cdef class ColumnChunkMetaData(_Weakrefable):\n+    \"\"\"Column metadata for a single row group\"\"\"\n\nReview Comment:\n   ```suggestion\r\n       \"\"\"Column metadata for a single row group.\"\"\"\r\n   ```\n\n\n\n",
                    "created": "2022-04-19T18:20:31.430+0000",
                    "updated": "2022-04-19T18:20:31.430+0000",
                    "started": "2022-04-19T18:20:31.429+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "758714",
                    "issueId": "13437665"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437665/worklog/758738",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 commented on code in PR #12901:\nURL: https://github.com/apache/arrow/pull/12901#discussion_r853368102\n\n\n##########\npython/pyarrow/_parquet.pyx:\n##########\n@@ -96,72 +98,87 @@ cdef class Statistics(_Weakrefable):\n \n     @property\n     def has_min_max(self):\n+        \"\"\"bool: whether min and max are present\"\"\"\n\nReview Comment:\n   Yeah I don't think it's adopted anywhere else in Arrow, but it seemed like the best way to do it to me. Using a Return section felt verbose and IIRC doesn't show the type in the attribute summary table.\n\n\n\n",
                    "created": "2022-04-19T18:26:21.717+0000",
                    "updated": "2022-04-19T18:26:21.717+0000",
                    "started": "2022-04-19T18:26:21.717+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "758738",
                    "issueId": "13437665"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437665/worklog/758895",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 commented on PR #12901:\nURL: https://github.com/apache/arrow/pull/12901#issuecomment-1103277401\n\n   I've documented the remaining methods and fixed capitalization and missing periods.\n\n\n",
                    "created": "2022-04-20T00:04:40.611+0000",
                    "updated": "2022-04-20T00:04:40.611+0000",
                    "started": "2022-04-20T00:04:40.611+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "758895",
                    "issueId": "13437665"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437665/worklog/758986",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on code in PR #12901:\nURL: https://github.com/apache/arrow/pull/12901#discussion_r853760054\n\n\n##########\npython/pyarrow/_parquet.pyx:\n##########\n@@ -96,72 +98,87 @@ cdef class Statistics(_Weakrefable):\n \n     @property\n     def has_min_max(self):\n+        \"\"\"bool: whether min and max are present\"\"\"\n\nReview Comment:\n   Maybe doing something like `Whether min and max are present (bool).` is also an option? \r\n   \r\n   (I wanted to add the same comment about this style not being consistent with numpydoc)\n\n\n\n",
                    "created": "2022-04-20T06:13:42.465+0000",
                    "updated": "2022-04-20T06:13:42.465+0000",
                    "started": "2022-04-20T06:13:42.465+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "758986",
                    "issueId": "13437665"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437665/worklog/758987",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on code in PR #12901:\nURL: https://github.com/apache/arrow/pull/12901#discussion_r853762049\n\n\n##########\npython/pyarrow/_parquet.pyx:\n##########\n@@ -75,6 +77,13 @@ cdef class Statistics(_Weakrefable):\n                                         self.converted_type)\n \n     def to_dict(self):\n+        \"\"\"Get dictionary represenation of statistics.\n\nReview Comment:\n   ```suggestion\r\n           \"\"\"\r\n           Get dictionary represenation of statistics.\r\n   ```\r\n   \r\n   Another style nit .., but let's maybe try to do this consistently. I think we mostly start on the next line for multi-line docstring, and below in this diff it's a mix of both.\n\n\n\n",
                    "created": "2022-04-20T06:17:27.617+0000",
                    "updated": "2022-04-20T06:17:27.617+0000",
                    "started": "2022-04-20T06:17:27.617+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "758987",
                    "issueId": "13437665"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437665/worklog/759159",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on code in PR #12901:\nURL: https://github.com/apache/arrow/pull/12901#discussion_r854063455\n\n\n##########\npython/pyarrow/_parquet.pyx:\n##########\n@@ -96,72 +98,87 @@ cdef class Statistics(_Weakrefable):\n \n     @property\n     def has_min_max(self):\n+        \"\"\"bool: whether min and max are present\"\"\"\n\nReview Comment:\n   I actually mean that as-is, this seems to be the recommended numpydoc style, at least as parsed by Napoleon: https://github.com/sphinx-contrib/napoleon/blob/dce30797b7a229ccebda4030f65482d501427794/docs/source/example_numpy.py#L280-L282\r\n   \r\n   It just looks quite different from the rest of numpydoc style.\n\n\n\n",
                    "created": "2022-04-20T12:15:22.363+0000",
                    "updated": "2022-04-20T12:15:22.363+0000",
                    "started": "2022-04-20T12:15:22.363+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "759159",
                    "issueId": "13437665"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437665/worklog/759443",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 commented on code in PR #12901:\nURL: https://github.com/apache/arrow/pull/12901#discussion_r854385525\n\n\n##########\npython/pyarrow/_parquet.pyx:\n##########\n@@ -96,72 +98,87 @@ cdef class Statistics(_Weakrefable):\n \n     @property\n     def has_min_max(self):\n+        \"\"\"bool: whether min and max are present\"\"\"\n\nReview Comment:\n   What Joris suggested is also used by some projects: https://developer.lsst.io/python/numpydoc.html#documenting-class-properties\r\n   \r\n   I'm good with either way. Do we prefer putting the type at the end?\n\n\n\n",
                    "created": "2022-04-20T17:28:24.695+0000",
                    "updated": "2022-04-20T17:28:24.695+0000",
                    "started": "2022-04-20T17:28:24.694+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "759443",
                    "issueId": "13437665"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437665/worklog/759444",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on code in PR #12901:\nURL: https://github.com/apache/arrow/pull/12901#discussion_r854386330\n\n\n##########\npython/pyarrow/_parquet.pyx:\n##########\n@@ -96,72 +98,87 @@ cdef class Statistics(_Weakrefable):\n \n     @property\n     def has_min_max(self):\n+        \"\"\"bool: whether min and max are present\"\"\"\n\nReview Comment:\n   Oh huh.\r\n   \r\n   I think what Joris suggests looks a bit better, but does numpydoc/napoleon parse it properly? If not I'd rather stick with how it is.\n\n\n\n",
                    "created": "2022-04-20T17:29:24.802+0000",
                    "updated": "2022-04-20T17:29:24.802+0000",
                    "started": "2022-04-20T17:29:24.802+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "759444",
                    "issueId": "13437665"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437665/worklog/759514",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 commented on code in PR #12901:\nURL: https://github.com/apache/arrow/pull/12901#discussion_r854486926\n\n\n##########\npython/pyarrow/_parquet.pyx:\n##########\n@@ -96,72 +98,87 @@ cdef class Statistics(_Weakrefable):\n \n     @property\n     def has_min_max(self):\n+        \"\"\"bool: whether min and max are present\"\"\"\n\nReview Comment:\n   > does numpydoc/napoleon parse it properly?\r\n   \r\n   Either version isn't really parsed into anything special. Hence why I have to have the `` :class:`XXX` `` to get cross references.\n\n\n\n",
                    "created": "2022-04-20T19:32:40.936+0000",
                    "updated": "2022-04-20T19:32:40.936+0000",
                    "started": "2022-04-20T19:32:40.935+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "759514",
                    "issueId": "13437665"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437665/worklog/759519",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on code in PR #12901:\nURL: https://github.com/apache/arrow/pull/12901#discussion_r854488812\n\n\n##########\npython/pyarrow/_parquet.pyx:\n##########\n@@ -96,72 +98,87 @@ cdef class Statistics(_Weakrefable):\n \n     @property\n     def has_min_max(self):\n+        \"\"\"bool: whether min and max are present\"\"\"\n\nReview Comment:\n   In that case I slightly prefer what Joris has but how it is is also fine (so long as it's punctuated)\n\n\n\n",
                    "created": "2022-04-20T19:35:36.329+0000",
                    "updated": "2022-04-20T19:35:36.329+0000",
                    "started": "2022-04-20T19:35:36.329+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "759519",
                    "issueId": "13437665"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437665/worklog/759522",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on code in PR #12901:\nURL: https://github.com/apache/arrow/pull/12901#discussion_r854492797\n\n\n##########\npython/pyarrow/_parquet.pyx:\n##########\n@@ -174,14 +218,27 @@ cdef class ParquetLogicalType(_Weakrefable):\n     cdef init(self, const shared_ptr[const CParquetLogicalType]& type):\n         self.type = type\n \n+    def __repr__(self):\n+        return \"{}\\n  {}\".format(object.__repr__(self), str(self))\n+\n     def __str__(self):\n         return frombytes(self.type.get().ToString(), safe=True)\n \n     def to_json(self):\n+        \"\"\"Get a JSON string containing type and type parameters\n\nReview Comment:\n   ```suggestion\r\n           \"\"\"Get a JSON string containing type and type parameters.\r\n   ```\n\n\n\n",
                    "created": "2022-04-20T19:42:17.274+0000",
                    "updated": "2022-04-20T19:42:17.274+0000",
                    "started": "2022-04-20T19:42:17.273+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "759522",
                    "issueId": "13437665"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437665/worklog/759988",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm closed pull request #12901: ARROW-16114: [Docs][Python] Document Parquet FileMetaData\nURL: https://github.com/apache/arrow/pull/12901\n\n\n",
                    "created": "2022-04-21T12:40:38.518+0000",
                    "updated": "2022-04-21T12:40:38.518+0000",
                    "started": "2022-04-21T12:40:38.518+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "759988",
                    "issueId": "13437665"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437665/worklog/761339",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on PR #12901:\nURL: https://github.com/apache/arrow/pull/12901#issuecomment-1107654694\n\n   Benchmark runs are scheduled for baseline = 3b7c0e29582c8d7cb5180633569eb274fe9e42a0 and contender = 2e7acabf7ba9c4df8621918e82fe795a227a3b31. 2e7acabf7ba9c4df8621918e82fe795a227a3b31 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/8ef3eee637aa4beeb2f0a903c48d572f...16fe70ac5c264e499cce56c24b8e5ccd/)\n   [Failed] [test-mac-arm](https://conbench.ursa.dev/compare/runs/4fe22fcee72b4b80a49d110d47310e96...5ff4b178d30142488a895bb82ba01e39/)\n   [Failed :arrow_down:0.75% :arrow_up:0.0%] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/459f4204294c41b9a2c874f61bf68161...e9b14301584c4d9d9ec5bd7df77c46a0/)\n   [Finished :arrow_down:0.29% :arrow_up:0.0%] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/3fb720450e40435e93d3c9901bc30bc3...6c0d2641c4894670857226310bd264c3/)\n   Buildkite builds:\n   [Finished] <https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ec2-t3-xlarge-us-east-2/builds/570| `2e7acabf` ec2-t3-xlarge-us-east-2>\n   [Failed] <https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-test-mac-arm/builds/558| `2e7acabf` test-mac-arm>\n   [Failed] <https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-i9-9960x/builds/556| `2e7acabf` ursa-i9-9960x>\n   [Finished] <https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-thinkcentre-m75q/builds/568| `2e7acabf` ursa-thinkcentre-m75q>\n   [Finished] <https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ec2-t3-xlarge-us-east-2/builds/569| `3b7c0e29` ec2-t3-xlarge-us-east-2>\n   [Failed] <https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-test-mac-arm/builds/557| `3b7c0e29` test-mac-arm>\n   [Failed] <https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-i9-9960x/builds/555| `3b7c0e29` ursa-i9-9960x>\n   [Finished] <https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-thinkcentre-m75q/builds/567| `3b7c0e29` ursa-thinkcentre-m75q>\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python, R. Runs only benchmarks with cloud = True\n   test-mac-arm: Supported benchmark langs: C++, Python, R\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n",
                    "created": "2022-04-23T21:50:54.378+0000",
                    "updated": "2022-04-23T21:50:54.378+0000",
                    "started": "2022-04-23T21:50:54.378+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "761339",
                    "issueId": "13437665"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437665/worklog/762594",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on PR #12901:\nURL: https://github.com/apache/arrow/pull/12901#issuecomment-1110309115\n\n   ['Python', 'R'] benchmarks have high level of regressions.\n   [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/459f4204294c41b9a2c874f61bf68161...e9b14301584c4d9d9ec5bd7df77c46a0/)\n   \n\n\n",
                    "created": "2022-04-26T22:24:11.252+0000",
                    "updated": "2022-04-26T22:24:11.252+0000",
                    "started": "2022-04-26T22:24:11.251+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "762594",
                    "issueId": "13437665"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 10200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@62f58aec[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6f74c5a6[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@502f2c94[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@193f8ac2[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@253992d9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@20c55803[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@9a79b03[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@6c2b696f[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@56d8169[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@f62c487[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3a2839eb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@dff4fd0[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 10200,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Apr 21 12:41:00 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": [
            "Python"
        ],
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-04-21T12:41:00.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-16114/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2022-04-04T16:06:00.000+0000",
        "updated": "2022-04-26T22:24:11.000+0000",
        "timeoriginalestimate": null,
        "description": "{{FileMetaData}} in parquet module (returned by {{ParquetFile.metadata}}) isn't in the API docs. We should add to the API docs so users can know what fields are available.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 10200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Document parquet.FileMetadata and statistics",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437665/comment/17525674",
                    "id": "17525674",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Resolved by https://github.com/apache/arrow/pull/12901",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2022-04-21T12:41:00.398+0000",
                    "updated": "2022-04-21T12:41:00.398+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z114s0:",
        "customfield_12314139": null
    }
}