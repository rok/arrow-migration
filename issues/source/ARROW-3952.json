{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13203022",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203022",
    "key": "ARROW-3952",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343858",
                "id": "12343858",
                "description": "",
                "name": "0.12.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-01-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12344316",
                "id": "12344316",
                "name": "0.11.1",
                "archived": false,
                "released": true,
                "releaseDate": "2018-10-23"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12549645",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12549645",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "outwardIssue": {
                    "id": "13203191",
                    "key": "ARROW-3960",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203191",
                    "fields": {
                        "summary": "[Rust] remove extern crate for Rust 2018",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/5",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/trivial.svg",
                            "name": "Trivial",
                            "id": "5"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
            "name": "andygrove",
            "key": "andygrove",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
            },
            "displayName": "Andy Grove",
            "active": true,
            "timeZone": "America/Denver"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
            "name": "andygrove",
            "key": "andygrove",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
            },
            "displayName": "Andy Grove",
            "active": true,
            "timeZone": "America/Denver"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
            "name": "andygrove",
            "key": "andygrove",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
            },
            "displayName": "Andy Grove",
            "active": true,
            "timeZone": "America/Denver"
        },
        "aggregateprogress": {
            "progress": 1200,
            "total": 1200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 1200,
            "total": 1200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3952/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 2,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203022/worklog/172973",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove opened a new pull request #3119: ARROW-3952: [Rust] Upgrade to Rust 2018 Edition\nURL: https://github.com/apache/arrow/pull/3119\n \n \n   See https://hacks.mozilla.org/2018/12/rust-2018-is-here/ for more info.\r\n   \r\n   Changes:\r\n   \r\n   - Add `edition = \"2018\"` to Cargo.toml\r\n   - Change lots of import statements due to changes in module system in Rust 2018\r\n   - Remove `mut` from one variable assignment\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-07T12:16:06.123+0000",
                    "updated": "2018-12-07T12:16:06.123+0000",
                    "started": "2018-12-07T12:16:06.123+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "172973",
                    "issueId": "13203022"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203022/worklog/173124",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou closed pull request #3119: ARROW-3952: [Rust] Upgrade to Rust 2018 Edition\nURL: https://github.com/apache/arrow/pull/3119\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/rust/Cargo.toml b/rust/Cargo.toml\nindex b8750945fb..b56cd6fb30 100644\n--- a/rust/Cargo.toml\n+++ b/rust/Cargo.toml\n@@ -28,6 +28,7 @@ include = [\n     \"src/**/*.rs\",\n     \"Cargo.toml\",\n ]\n+edition = \"2018\"\n \n [lib]\n name = \"arrow\"\ndiff --git a/rust/src/array.rs b/rust/src/array.rs\nindex 264aa50121..ca1d2a5cdb 100644\n--- a/rust/src/array.rs\n+++ b/rust/src/array.rs\n@@ -22,12 +22,12 @@ use std::io::Write;\n use std::mem;\n use std::sync::Arc;\n \n-use array_data::{ArrayData, ArrayDataRef};\n-use buffer::{Buffer, MutableBuffer};\n-use builder::*;\n-use datatypes::*;\n-use memory;\n-use util::bit_util;\n+use crate::array_data::{ArrayData, ArrayDataRef};\n+use crate::buffer::{Buffer, MutableBuffer};\n+use crate::builder::*;\n+use crate::datatypes::*;\n+use crate::memory;\n+use crate::util::bit_util;\n \n /// Trait for dealing with different types of array at runtime when the type of the\n /// array is not known in advance\n@@ -692,14 +692,13 @@ impl From<Vec<(Field, ArrayRef)>> for StructArray {\n \n #[cfg(test)]\n mod tests {\n-    use std::thread;\n-\n     use super::*;\n-    use array_data::ArrayData;\n-    use buffer::Buffer;\n-    use datatypes::{DataType, Field, ToByteSlice};\n-    use memory;\n+    use crate::array_data::ArrayData;\n+    use crate::buffer::Buffer;\n+    use crate::datatypes::{DataType, Field, ToByteSlice};\n+    use crate::memory;\n     use std::sync::Arc;\n+    use std::thread;\n \n     #[test]\n     fn test_primitive_array_from_vec() {\ndiff --git a/rust/src/array_data.rs b/rust/src/array_data.rs\nindex 055c8d91e7..b288d4a804 100644\n--- a/rust/src/array_data.rs\n+++ b/rust/src/array_data.rs\n@@ -17,10 +17,10 @@\n \n use std::sync::Arc;\n \n-use bitmap::Bitmap;\n-use buffer::Buffer;\n-use datatypes::DataType;\n-use util::bit_util;\n+use crate::bitmap::Bitmap;\n+use crate::buffer::Buffer;\n+use crate::datatypes::DataType;\n+use crate::util::bit_util;\n \n /// An generic representation of Arrow array data which encapsulates common attributes and\n /// operations for Arrow array. Specific operations for different arrays types (e.g.,\n@@ -225,8 +225,8 @@ mod tests {\n     use std::sync::Arc;\n \n     use super::{ArrayData, DataType};\n-    use buffer::Buffer;\n-    use util::bit_util;\n+    use crate::buffer::Buffer;\n+    use crate::util::bit_util;\n \n     #[test]\n     fn test_new() {\ndiff --git a/rust/src/bitmap.rs b/rust/src/bitmap.rs\nindex 6cec4d51bb..742fac5587 100644\n--- a/rust/src/bitmap.rs\n+++ b/rust/src/bitmap.rs\n@@ -16,7 +16,7 @@\n // under the License.\n \n use super::buffer::Buffer;\n-use util::bit_util;\n+use crate::util::bit_util;\n \n #[derive(PartialEq, Debug)]\n pub struct Bitmap {\ndiff --git a/rust/src/buffer.rs b/rust/src/buffer.rs\nindex 67d2896b33..4b7d2a0d3c 100644\n--- a/rust/src/buffer.rs\n+++ b/rust/src/buffer.rs\n@@ -20,9 +20,9 @@ use std::io::{Error as IoError, ErrorKind, Result as IoResult, Write};\n use std::mem;\n use std::sync::Arc;\n \n-use error::Result;\n-use memory;\n-use util::bit_util;\n+use crate::error::Result;\n+use crate::memory;\n+use crate::util::bit_util;\n \n /// Buffer is a contiguous memory region of fixed size and is aligned at a 64-byte\n /// boundary. Buffer is immutable.\n@@ -314,9 +314,9 @@ unsafe impl Send for MutableBuffer {}\n \n #[cfg(test)]\n mod tests {\n+    use crate::util::bit_util;\n     use std::ptr::null_mut;\n     use std::thread;\n-    use util::bit_util;\n \n     use super::*;\n \ndiff --git a/rust/src/builder.rs b/rust/src/builder.rs\nindex 3a9253799f..2cbdce0c85 100644\n--- a/rust/src/builder.rs\n+++ b/rust/src/builder.rs\n@@ -23,12 +23,12 @@ use std::io::Write;\n use std::marker::PhantomData;\n use std::mem;\n \n-use array::*;\n-use array_data::ArrayData;\n-use buffer::{Buffer, MutableBuffer};\n-use datatypes::*;\n-use error::{ArrowError, Result};\n-use util::bit_util;\n+use crate::array::*;\n+use crate::array_data::ArrayData;\n+use crate::buffer::{Buffer, MutableBuffer};\n+use crate::datatypes::*;\n+use crate::error::{ArrowError, Result};\n+use crate::util::bit_util;\n \n /// Buffer builder with zero-copy build method\n pub struct BufferBuilder<T: ArrowPrimitiveType> {\n@@ -456,7 +456,7 @@ impl BinaryArrayBuilder {\n \n #[cfg(test)]\n mod tests {\n-    use array::Array;\n+    use crate::array::Array;\n \n     use super::*;\n \n@@ -825,7 +825,7 @@ mod tests {\n \n     #[test]\n     fn test_binary_array_builder() {\n-        use array::BinaryArray;\n+        use crate::array::BinaryArray;\n         let mut builder = BinaryArrayBuilder::new(20);\n \n         builder.push(b'h').unwrap();\n@@ -860,7 +860,7 @@ mod tests {\n \n     #[test]\n     fn test_binary_array_builder_push_string() {\n-        use array::BinaryArray;\n+        use crate::array::BinaryArray;\n         let mut builder = BinaryArrayBuilder::new(20);\n \n         let var = \"hello\".to_owned();\ndiff --git a/rust/src/csv/reader.rs b/rust/src/csv/reader.rs\nindex dcb35958c5..697ace653b 100644\n--- a/rust/src/csv/reader.rs\n+++ b/rust/src/csv/reader.rs\n@@ -44,11 +44,11 @@ use std::fs::File;\n use std::io::BufReader;\n use std::sync::Arc;\n \n-use array::{ArrayRef, BinaryArray};\n-use builder::*;\n-use datatypes::*;\n-use error::{ArrowError, Result};\n-use record_batch::RecordBatch;\n+use crate::array::{ArrayRef, BinaryArray};\n+use crate::builder::*;\n+use crate::datatypes::*;\n+use crate::error::{ArrowError, Result};\n+use crate::record_batch::RecordBatch;\n \n use csv_crate::{StringRecord, StringRecordsIntoIter};\n \n@@ -161,7 +161,7 @@ impl Reader {\n                     &DataType::Float32 => build_primitive_array::<Float32Type>(rows, i),\n                     &DataType::Float64 => build_primitive_array::<Float64Type>(rows, i),\n                     &DataType::Utf8 => {\n-                        let mut values_builder: UInt8Builder = UInt8Builder::new(rows.len() as i64);\n+                        let values_builder: UInt8Builder = UInt8Builder::new(rows.len() as i64);\n                         let mut list_builder = ListArrayBuilder::new(values_builder);\n                         for row_index in 0..rows.len() {\n                             match rows[row_index].get(*i) {\n@@ -195,8 +195,8 @@ impl Reader {\n mod tests {\n \n     use super::*;\n-    use array::*;\n-    use datatypes::Field;\n+    use crate::array::*;\n+    use crate::datatypes::Field;\n \n     #[test]\n     fn test_csv() {\ndiff --git a/rust/src/datatypes.rs b/rust/src/datatypes.rs\nindex 1eeb71f71a..f91c75d7bd 100644\n--- a/rust/src/datatypes.rs\n+++ b/rust/src/datatypes.rs\n@@ -26,7 +26,7 @@ use std::mem::size_of;\n use std::slice::from_raw_parts;\n use std::str::FromStr;\n \n-use error::{ArrowError, Result};\n+use crate::error::{ArrowError, Result};\n use serde_json::Value;\n \n /// The possible relative types that are supported.\ndiff --git a/rust/src/lib.rs b/rust/src/lib.rs\nindex b2db090cf7..e1670ff055 100644\n--- a/rust/src/lib.rs\n+++ b/rust/src/lib.rs\n@@ -17,9 +17,7 @@\n \n #![feature(specialization)]\n \n-extern crate bytes;\n extern crate csv as csv_crate;\n-extern crate libc;\n \n #[macro_use]\n extern crate serde_derive;\n@@ -27,10 +25,6 @@ extern crate serde_derive;\n #[macro_use]\n extern crate serde_json;\n \n-extern crate serde;\n-\n-extern crate rand;\n-\n pub mod array;\n pub mod array_data;\n pub mod bitmap;\ndiff --git a/rust/src/memory.rs b/rust/src/memory.rs\nindex 376499e9c2..193eff12d6 100644\n--- a/rust/src/memory.rs\n+++ b/rust/src/memory.rs\n@@ -19,7 +19,7 @@ use libc;\n use std::cmp;\n use std::mem;\n \n-use super::error::{ArrowError, Result};\n+use crate::error::{ArrowError, Result};\n \n const ALIGNMENT: usize = 64;\n \ndiff --git a/rust/src/record_batch.rs b/rust/src/record_batch.rs\nindex cde1122aad..4cb5c8e7db 100644\n--- a/rust/src/record_batch.rs\n+++ b/rust/src/record_batch.rs\n@@ -15,8 +15,8 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-use super::array::*;\n-use super::datatypes::*;\n+use crate::array::*;\n+use crate::datatypes::*;\n use std::sync::Arc;\n \n /// A batch of column-oriented data\n@@ -67,8 +67,8 @@ unsafe impl Sync for RecordBatch {}\n #[cfg(test)]\n mod tests {\n     use super::*;\n-    use array_data::*;\n-    use buffer::*;\n+    use crate::array_data::*;\n+    use crate::buffer::*;\n \n     #[test]\n     fn create_record_batch() {\ndiff --git a/rust/src/tensor.rs b/rust/src/tensor.rs\nindex e50a3136d2..ec56aeb4cc 100644\n--- a/rust/src/tensor.rs\n+++ b/rust/src/tensor.rs\n@@ -19,8 +19,8 @@\n use std::marker::PhantomData;\n use std::mem;\n \n-use buffer::Buffer;\n-use datatypes::*;\n+use crate::buffer::Buffer;\n+use crate::datatypes::*;\n \n /// Computes the strides required assuming a row major memory layout\n fn compute_row_major_strides<T: ArrowPrimitiveType>(shape: &Vec<i64>) -> Vec<i64> {\n@@ -216,8 +216,8 @@ impl<'a, T: ArrowPrimitiveType> Tensor<'a, T> {\n #[cfg(test)]\n mod tests {\n     use super::*;\n-    use buffer::Buffer;\n-    use builder::*;\n+    use crate::buffer::Buffer;\n+    use crate::builder::*;\n \n     #[test]\n     fn test_compute_row_major_strides() {\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-08T00:35:13.792+0000",
                    "updated": "2018-12-08T00:35:13.792+0000",
                    "started": "2018-12-08T00:35:13.790+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "173124",
                    "issueId": "13203022"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 1200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@424e0728[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5f7b8740[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@434ec375[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@400c1ddb[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1f197e27[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@31d53aca[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@43502ee[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@24773576[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@70cb9f99[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@6850f820[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@445eb5b6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@591ff4ce[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 1200,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Dec 08 00:38:22 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-12-08T00:38:22.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3952/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-12-07T12:00:03.000+0000",
        "updated": "2018-12-08T07:32:11.000+0000",
        "timeoriginalestimate": null,
        "description": "This is a trivial change to update Cargo.toml to specify the use of Rust 2018 edition. See this blog post for more information:\r\n\r\nhttps://hacks.mozilla.org/2018/12/rust-2018-is-here/",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 1200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] Specify edition=\"2018\" in Cargo.toml",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203022/comment/16713444",
                    "id": "16713444",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "body": "Issue resolved by pull request 3119\n[https://github.com/apache/arrow/pull/3119]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "created": "2018-12-08T00:38:22.981+0000",
                    "updated": "2018-12-08T00:38:22.981+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|s01a2g:",
        "customfield_12314139": null
    }
}