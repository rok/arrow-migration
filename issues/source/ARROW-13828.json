{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13398601",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398601",
    "key": "ARROW-13828",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350591",
                "id": "12350591",
                "description": "",
                "name": "7.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-02-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jpedroantunes",
            "name": "jpedroantunes",
            "key": "jpedroantunes",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34060",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34060",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34060",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34060"
            },
            "displayName": "Jo\u00e3o Pedro Antunes Ferreira",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334626",
                "id": "12334626",
                "name": "C++ - Gandiva"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jpedroantunes",
            "name": "jpedroantunes",
            "key": "jpedroantunes",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34060",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34060",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34060",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34060"
            },
            "displayName": "Jo\u00e3o Pedro Antunes Ferreira",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jpedroantunes",
            "name": "jpedroantunes",
            "key": "jpedroantunes",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34060",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34060",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34060",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34060"
            },
            "displayName": "Jo\u00e3o Pedro Antunes Ferreira",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 10200,
            "total": 10200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 10200,
            "total": 10200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13828/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 17,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398601/worklog/644801",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11052:\nURL: https://github.com/apache/arrow/pull/11052#issuecomment-910026125\n\n\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-01T07:43:40.588+0000",
                    "updated": "2021-09-01T07:43:40.588+0000",
                    "started": "2021-09-01T07:43:40.588+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "644801",
                    "issueId": "13398601"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398601/worklog/645170",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11052:\nURL: https://github.com/apache/arrow/pull/11052#issuecomment-910026125\n\n\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-01T09:46:06.696+0000",
                    "updated": "2021-09-01T09:46:06.696+0000",
                    "started": "2021-09-01T09:46:06.695+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "645170",
                    "issueId": "13398601"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398601/worklog/646986",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "projjal commented on a change in pull request #11052:\nURL: https://github.com/apache/arrow/pull/11052#discussion_r702913544\n\n\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -606,6 +606,53 @@ const char* gdv_fn_upper_utf8(int64_t context, const char* data, int32_t data_le\n   return out;\n }\n \n+\n+// Returns the soundex code for a given string\n+const char* gdv_fn_soundex_utf8(gdv_int64 ctx, const char* in, gdv_int32 in_len,\n+                                int32_t* out_len) {\n+  if (in_len <= 0) {\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  // The soundex code is composed by one letter and three numbers\n+  char* ret = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(ctx, 4));\n+  if (ret == nullptr) {\n+    gdv_fn_context_set_error_msg(ctx, \"Could not allocate memory for output string\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+  // Mapping    ->   ABCDEFGHIJKLMNOPQRSTUVWXYZ\n+  auto mappings = std::string(\"01230120022455012623010202\");\n\nReview comment:\n       not a good idea to allocate this string for every function call. add a static array outside.\r\n   Also add this function in the precompiled directory..\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -606,6 +606,53 @@ const char* gdv_fn_upper_utf8(int64_t context, const char* data, int32_t data_le\n   return out;\n }\n \n+\n+// Returns the soundex code for a given string\n\nReview comment:\n       Can you write a comment detailing the algorithm\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-06T13:45:42.203+0000",
                    "updated": "2021-09-06T13:45:42.203+0000",
                    "started": "2021-09-06T13:45:42.203+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "646986",
                    "issueId": "13398601"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398601/worklog/648913",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva commented on a change in pull request #11052:\nURL: https://github.com/apache/arrow/pull/11052#discussion_r705780316\n\n\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -606,6 +606,53 @@ const char* gdv_fn_upper_utf8(int64_t context, const char* data, int32_t data_le\n   return out;\n }\n \n+\n+// Returns the soundex code for a given string\n\nReview comment:\n       I wrote a detailed comment on how the algorithm work.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-09T23:07:58.245+0000",
                    "updated": "2021-09-09T23:07:58.245+0000",
                    "started": "2021-09-09T23:07:58.245+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "648913",
                    "issueId": "13398601"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398601/worklog/648914",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva commented on a change in pull request #11052:\nURL: https://github.com/apache/arrow/pull/11052#discussion_r705780612\n\n\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -606,6 +606,53 @@ const char* gdv_fn_upper_utf8(int64_t context, const char* data, int32_t data_le\n   return out;\n }\n \n+\n+// Returns the soundex code for a given string\n+const char* gdv_fn_soundex_utf8(gdv_int64 ctx, const char* in, gdv_int32 in_len,\n+                                int32_t* out_len) {\n+  if (in_len <= 0) {\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  // The soundex code is composed by one letter and three numbers\n+  char* ret = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(ctx, 4));\n+  if (ret == nullptr) {\n+    gdv_fn_context_set_error_msg(ctx, \"Could not allocate memory for output string\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+  // Mapping    ->   ABCDEFGHIJKLMNOPQRSTUVWXYZ\n+  auto mappings = std::string(\"01230120022455012623010202\");\n\nReview comment:\n       I created a static char array for the mappings and also moved the function to the precompiled directory.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-09T23:08:21.381+0000",
                    "updated": "2021-09-09T23:08:21.381+0000",
                    "started": "2021-09-09T23:08:21.380+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "648914",
                    "issueId": "13398601"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398601/worklog/676869",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rkavanap commented on a change in pull request #11052:\nURL: https://github.com/apache/arrow/pull/11052#discussion_r740730066\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/string_ops.cc\n##########\n@@ -2195,4 +2195,74 @@ const char* byte_substr_binary_int32_int32(gdv_int64 context, const char* text,\n   memcpy(ret, text + startPos, *out_len);\n   return ret;\n }\n+\n+// Array that maps each letter from the alphabet to its corresponding number for the soundex algorithm.\n+// ABCDEFGHIJKLMNOPQRSTUVWXYZ -> 01230120022455012623010202\n+static char mappings[] = {'0','1','2','3','0','1','2','0','0','2','2','4','5','5','0','1','2','6','2','3','0','1','0','2','0','2'};\n+\n+// Returns the soundex code for a given string\n+//\n+// The soundex function evaluates expression and returns the most significant letter in\n+// the input string followed by a phonetic code. Characters that are not alphabetic are\n+// ignored. If expression evaluates to the null value, null is returned.\n+//\n+// The soundex algorith works with the following steps:\n+//    1. Retain the first letter of the string and drop all other occurrences of a, e, i, o, u, y, h, w.\n+//    2. Replace consonants with digits as follows (after the first letter):\n+//        b, f, p, v \u2192 1\n+//        c, g, j, k, q, s, x, z \u2192 2\n+//        d, t \u2192 3\n+//        l \u2192 4\n+//        m, n \u2192 5\n+//        r \u2192 6\n+//    3. If two or more letters with the same number are adjacent in the original name\n+//    (before step 1), only retain the first letter; also two letters with the same number\n+//    separated by 'h' or 'w' are coded as a single number, whereas such letters separated\n+//    by a vowel are coded twice. This rule also applies to the first letter.\n+//    4. If the string have too few letters in the word that you can't assign three numbers,\n+//    append with zeros until there are three numbers. If you have four or more numbers,\n+//    retain only the first three.\n+FORCE_INLINE\n+const char* soundex_utf8(gdv_int64 ctx, const char* in, gdv_int32 in_len,\n+                                int32_t* out_len) {\n+  if (in_len <= 0) {\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  // The soundex code is composed by one letter and three numbers\n+  char* ret = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(ctx, 4));\n+  if (ret == nullptr) {\n+    gdv_fn_context_set_error_msg(ctx, \"Could not allocate memory for output string\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  int si = 1;\n+  unsigned char c;\n+  ret[0] = toupper(in[0]);\n\nReview comment:\n       what if the first character is not a letter?. Shouldn't we skip it to run the algorithm? e.g \"1SMITH\" or \"123SMYTHE\"\n\n##########\nFile path: cpp/src/gandiva/precompiled/string_ops.cc\n##########\n@@ -2195,4 +2195,74 @@ const char* byte_substr_binary_int32_int32(gdv_int64 context, const char* text,\n   memcpy(ret, text + startPos, *out_len);\n   return ret;\n }\n+\n+// Array that maps each letter from the alphabet to its corresponding number for the soundex algorithm.\n+// ABCDEFGHIJKLMNOPQRSTUVWXYZ -> 01230120022455012623010202\n+static char mappings[] = {'0','1','2','3','0','1','2','0','0','2','2','4','5','5','0','1','2','6','2','3','0','1','0','2','0','2'};\n+\n+// Returns the soundex code for a given string\n+//\n+// The soundex function evaluates expression and returns the most significant letter in\n+// the input string followed by a phonetic code. Characters that are not alphabetic are\n+// ignored. If expression evaluates to the null value, null is returned.\n+//\n+// The soundex algorith works with the following steps:\n+//    1. Retain the first letter of the string and drop all other occurrences of a, e, i, o, u, y, h, w.\n+//    2. Replace consonants with digits as follows (after the first letter):\n+//        b, f, p, v \u2192 1\n+//        c, g, j, k, q, s, x, z \u2192 2\n+//        d, t \u2192 3\n+//        l \u2192 4\n+//        m, n \u2192 5\n+//        r \u2192 6\n+//    3. If two or more letters with the same number are adjacent in the original name\n+//    (before step 1), only retain the first letter; also two letters with the same number\n+//    separated by 'h' or 'w' are coded as a single number, whereas such letters separated\n+//    by a vowel are coded twice. This rule also applies to the first letter.\n+//    4. If the string have too few letters in the word that you can't assign three numbers,\n+//    append with zeros until there are three numbers. If you have four or more numbers,\n+//    retain only the first three.\n+FORCE_INLINE\n+const char* soundex_utf8(gdv_int64 ctx, const char* in, gdv_int32 in_len,\n+                                int32_t* out_len) {\n+  if (in_len <= 0) {\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  // The soundex code is composed by one letter and three numbers\n+  char* ret = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(ctx, 4));\n+  if (ret == nullptr) {\n+    gdv_fn_context_set_error_msg(ctx, \"Could not allocate memory for output string\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  int si = 1;\n+  unsigned char c;\n+  ret[0] = toupper(in[0]);\n+  for(int i = 1, l = in_len; i < l; i++) {\n+    c = toupper(in[i]) - 65;\n\nReview comment:\n       just wondering if it is faster to check isAlpha (basically remove if in 2247 and do lines 2245 to 2256 only if it is a letter)\n\n##########\nFile path: cpp/src/gandiva/precompiled/string_ops_test.cc\n##########\n@@ -1755,4 +1755,23 @@ TEST(TestStringOps, TestConvertToBigEndian) {\n #endif\n }\n \n+TEST(TestStringOps, TestSoundex) {\n+  gandiva::ExecutionContext ctx;\n+  auto ctx_ptr = reinterpret_cast<int64_t>(&ctx);\n+  int32_t out_len = 0;\n+  const char* out;\n+\n+  out = soundex_utf8(ctx_ptr, \"Miller\", 6, &out_len);\n+  EXPECT_EQ(std::string(out, out_len), \"M460\");\n+\n+  out = soundex_utf8(ctx_ptr, \"abc\", 3, &out_len);\n+  EXPECT_EQ(std::string(out, out_len), \"A120\");\n+\n+  out = soundex_utf8(ctx_ptr, \"test\", 4, &out_len);\n+  EXPECT_EQ(std::string(out, out_len), \"T230\");\n\nReview comment:\n       A test case having non letter at the beginning and vowels in the beginning..?\r\n      \"3Miller\", \"Elvis\", \"waterloo\" ,\"eowolf\"\r\n   also a test case that compares the output of 2 similar sounding values. e.g Smith and Smythe are similar sounding and probably should return same value?.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-05T03:35:01.777+0000",
                    "updated": "2021-11-05T03:35:01.777+0000",
                    "started": "2021-11-05T03:35:01.777+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "676869",
                    "issueId": "13398601"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398601/worklog/677464",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rkavanap commented on a change in pull request #11052:\nURL: https://github.com/apache/arrow/pull/11052#discussion_r740730066\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/string_ops.cc\n##########\n@@ -2195,4 +2195,74 @@ const char* byte_substr_binary_int32_int32(gdv_int64 context, const char* text,\n   memcpy(ret, text + startPos, *out_len);\n   return ret;\n }\n+\n+// Array that maps each letter from the alphabet to its corresponding number for the soundex algorithm.\n+// ABCDEFGHIJKLMNOPQRSTUVWXYZ -> 01230120022455012623010202\n+static char mappings[] = {'0','1','2','3','0','1','2','0','0','2','2','4','5','5','0','1','2','6','2','3','0','1','0','2','0','2'};\n+\n+// Returns the soundex code for a given string\n+//\n+// The soundex function evaluates expression and returns the most significant letter in\n+// the input string followed by a phonetic code. Characters that are not alphabetic are\n+// ignored. If expression evaluates to the null value, null is returned.\n+//\n+// The soundex algorith works with the following steps:\n+//    1. Retain the first letter of the string and drop all other occurrences of a, e, i, o, u, y, h, w.\n+//    2. Replace consonants with digits as follows (after the first letter):\n+//        b, f, p, v \u2192 1\n+//        c, g, j, k, q, s, x, z \u2192 2\n+//        d, t \u2192 3\n+//        l \u2192 4\n+//        m, n \u2192 5\n+//        r \u2192 6\n+//    3. If two or more letters with the same number are adjacent in the original name\n+//    (before step 1), only retain the first letter; also two letters with the same number\n+//    separated by 'h' or 'w' are coded as a single number, whereas such letters separated\n+//    by a vowel are coded twice. This rule also applies to the first letter.\n+//    4. If the string have too few letters in the word that you can't assign three numbers,\n+//    append with zeros until there are three numbers. If you have four or more numbers,\n+//    retain only the first three.\n+FORCE_INLINE\n+const char* soundex_utf8(gdv_int64 ctx, const char* in, gdv_int32 in_len,\n+                                int32_t* out_len) {\n+  if (in_len <= 0) {\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  // The soundex code is composed by one letter and three numbers\n+  char* ret = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(ctx, 4));\n+  if (ret == nullptr) {\n+    gdv_fn_context_set_error_msg(ctx, \"Could not allocate memory for output string\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  int si = 1;\n+  unsigned char c;\n+  ret[0] = toupper(in[0]);\n\nReview comment:\n       what if the first character is not a letter?. Shouldn't we skip it to run the algorithm? e.g \"1SMITH\" or \"123SMYTHE\"\n\n##########\nFile path: cpp/src/gandiva/precompiled/string_ops.cc\n##########\n@@ -2195,4 +2195,74 @@ const char* byte_substr_binary_int32_int32(gdv_int64 context, const char* text,\n   memcpy(ret, text + startPos, *out_len);\n   return ret;\n }\n+\n+// Array that maps each letter from the alphabet to its corresponding number for the soundex algorithm.\n+// ABCDEFGHIJKLMNOPQRSTUVWXYZ -> 01230120022455012623010202\n+static char mappings[] = {'0','1','2','3','0','1','2','0','0','2','2','4','5','5','0','1','2','6','2','3','0','1','0','2','0','2'};\n+\n+// Returns the soundex code for a given string\n+//\n+// The soundex function evaluates expression and returns the most significant letter in\n+// the input string followed by a phonetic code. Characters that are not alphabetic are\n+// ignored. If expression evaluates to the null value, null is returned.\n+//\n+// The soundex algorith works with the following steps:\n+//    1. Retain the first letter of the string and drop all other occurrences of a, e, i, o, u, y, h, w.\n+//    2. Replace consonants with digits as follows (after the first letter):\n+//        b, f, p, v \u2192 1\n+//        c, g, j, k, q, s, x, z \u2192 2\n+//        d, t \u2192 3\n+//        l \u2192 4\n+//        m, n \u2192 5\n+//        r \u2192 6\n+//    3. If two or more letters with the same number are adjacent in the original name\n+//    (before step 1), only retain the first letter; also two letters with the same number\n+//    separated by 'h' or 'w' are coded as a single number, whereas such letters separated\n+//    by a vowel are coded twice. This rule also applies to the first letter.\n+//    4. If the string have too few letters in the word that you can't assign three numbers,\n+//    append with zeros until there are three numbers. If you have four or more numbers,\n+//    retain only the first three.\n+FORCE_INLINE\n+const char* soundex_utf8(gdv_int64 ctx, const char* in, gdv_int32 in_len,\n+                                int32_t* out_len) {\n+  if (in_len <= 0) {\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  // The soundex code is composed by one letter and three numbers\n+  char* ret = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(ctx, 4));\n+  if (ret == nullptr) {\n+    gdv_fn_context_set_error_msg(ctx, \"Could not allocate memory for output string\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  int si = 1;\n+  unsigned char c;\n+  ret[0] = toupper(in[0]);\n+  for(int i = 1, l = in_len; i < l; i++) {\n+    c = toupper(in[i]) - 65;\n\nReview comment:\n       just wondering if it is faster to check isAlpha (basically remove if in 2247 and do lines 2245 to 2256 only if it is a letter)\n\n##########\nFile path: cpp/src/gandiva/precompiled/string_ops_test.cc\n##########\n@@ -1755,4 +1755,23 @@ TEST(TestStringOps, TestConvertToBigEndian) {\n #endif\n }\n \n+TEST(TestStringOps, TestSoundex) {\n+  gandiva::ExecutionContext ctx;\n+  auto ctx_ptr = reinterpret_cast<int64_t>(&ctx);\n+  int32_t out_len = 0;\n+  const char* out;\n+\n+  out = soundex_utf8(ctx_ptr, \"Miller\", 6, &out_len);\n+  EXPECT_EQ(std::string(out, out_len), \"M460\");\n+\n+  out = soundex_utf8(ctx_ptr, \"abc\", 3, &out_len);\n+  EXPECT_EQ(std::string(out, out_len), \"A120\");\n+\n+  out = soundex_utf8(ctx_ptr, \"test\", 4, &out_len);\n+  EXPECT_EQ(std::string(out, out_len), \"T230\");\n\nReview comment:\n       A test case having non letter at the beginning and vowels in the beginning..?\r\n      \"3Miller\", \"Elvis\", \"waterloo\" ,\"eowolf\"\r\n   also a test case that compares the output of 2 similar sounding values. e.g Smith and Smythe are similar sounding and probably should return same value?.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-05T19:57:28.513+0000",
                    "updated": "2021-11-05T19:57:28.513+0000",
                    "started": "2021-11-05T19:57:28.512+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "677464",
                    "issueId": "13398601"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398601/worklog/677869",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rkavanap commented on a change in pull request #11052:\nURL: https://github.com/apache/arrow/pull/11052#discussion_r740730066\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/string_ops.cc\n##########\n@@ -2195,4 +2195,74 @@ const char* byte_substr_binary_int32_int32(gdv_int64 context, const char* text,\n   memcpy(ret, text + startPos, *out_len);\n   return ret;\n }\n+\n+// Array that maps each letter from the alphabet to its corresponding number for the soundex algorithm.\n+// ABCDEFGHIJKLMNOPQRSTUVWXYZ -> 01230120022455012623010202\n+static char mappings[] = {'0','1','2','3','0','1','2','0','0','2','2','4','5','5','0','1','2','6','2','3','0','1','0','2','0','2'};\n+\n+// Returns the soundex code for a given string\n+//\n+// The soundex function evaluates expression and returns the most significant letter in\n+// the input string followed by a phonetic code. Characters that are not alphabetic are\n+// ignored. If expression evaluates to the null value, null is returned.\n+//\n+// The soundex algorith works with the following steps:\n+//    1. Retain the first letter of the string and drop all other occurrences of a, e, i, o, u, y, h, w.\n+//    2. Replace consonants with digits as follows (after the first letter):\n+//        b, f, p, v \u2192 1\n+//        c, g, j, k, q, s, x, z \u2192 2\n+//        d, t \u2192 3\n+//        l \u2192 4\n+//        m, n \u2192 5\n+//        r \u2192 6\n+//    3. If two or more letters with the same number are adjacent in the original name\n+//    (before step 1), only retain the first letter; also two letters with the same number\n+//    separated by 'h' or 'w' are coded as a single number, whereas such letters separated\n+//    by a vowel are coded twice. This rule also applies to the first letter.\n+//    4. If the string have too few letters in the word that you can't assign three numbers,\n+//    append with zeros until there are three numbers. If you have four or more numbers,\n+//    retain only the first three.\n+FORCE_INLINE\n+const char* soundex_utf8(gdv_int64 ctx, const char* in, gdv_int32 in_len,\n+                                int32_t* out_len) {\n+  if (in_len <= 0) {\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  // The soundex code is composed by one letter and three numbers\n+  char* ret = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(ctx, 4));\n+  if (ret == nullptr) {\n+    gdv_fn_context_set_error_msg(ctx, \"Could not allocate memory for output string\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  int si = 1;\n+  unsigned char c;\n+  ret[0] = toupper(in[0]);\n\nReview comment:\n       what if the first character is not a letter?. Shouldn't we skip it to run the algorithm? e.g \"1SMITH\" or \"123SMYTHE\"\n\n##########\nFile path: cpp/src/gandiva/precompiled/string_ops.cc\n##########\n@@ -2195,4 +2195,74 @@ const char* byte_substr_binary_int32_int32(gdv_int64 context, const char* text,\n   memcpy(ret, text + startPos, *out_len);\n   return ret;\n }\n+\n+// Array that maps each letter from the alphabet to its corresponding number for the soundex algorithm.\n+// ABCDEFGHIJKLMNOPQRSTUVWXYZ -> 01230120022455012623010202\n+static char mappings[] = {'0','1','2','3','0','1','2','0','0','2','2','4','5','5','0','1','2','6','2','3','0','1','0','2','0','2'};\n+\n+// Returns the soundex code for a given string\n+//\n+// The soundex function evaluates expression and returns the most significant letter in\n+// the input string followed by a phonetic code. Characters that are not alphabetic are\n+// ignored. If expression evaluates to the null value, null is returned.\n+//\n+// The soundex algorith works with the following steps:\n+//    1. Retain the first letter of the string and drop all other occurrences of a, e, i, o, u, y, h, w.\n+//    2. Replace consonants with digits as follows (after the first letter):\n+//        b, f, p, v \u2192 1\n+//        c, g, j, k, q, s, x, z \u2192 2\n+//        d, t \u2192 3\n+//        l \u2192 4\n+//        m, n \u2192 5\n+//        r \u2192 6\n+//    3. If two or more letters with the same number are adjacent in the original name\n+//    (before step 1), only retain the first letter; also two letters with the same number\n+//    separated by 'h' or 'w' are coded as a single number, whereas such letters separated\n+//    by a vowel are coded twice. This rule also applies to the first letter.\n+//    4. If the string have too few letters in the word that you can't assign three numbers,\n+//    append with zeros until there are three numbers. If you have four or more numbers,\n+//    retain only the first three.\n+FORCE_INLINE\n+const char* soundex_utf8(gdv_int64 ctx, const char* in, gdv_int32 in_len,\n+                                int32_t* out_len) {\n+  if (in_len <= 0) {\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  // The soundex code is composed by one letter and three numbers\n+  char* ret = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(ctx, 4));\n+  if (ret == nullptr) {\n+    gdv_fn_context_set_error_msg(ctx, \"Could not allocate memory for output string\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  int si = 1;\n+  unsigned char c;\n+  ret[0] = toupper(in[0]);\n+  for(int i = 1, l = in_len; i < l; i++) {\n+    c = toupper(in[i]) - 65;\n\nReview comment:\n       just wondering if it is faster to check isAlpha (basically remove if in 2247 and do lines 2245 to 2256 only if it is a letter)\n\n##########\nFile path: cpp/src/gandiva/precompiled/string_ops_test.cc\n##########\n@@ -1755,4 +1755,23 @@ TEST(TestStringOps, TestConvertToBigEndian) {\n #endif\n }\n \n+TEST(TestStringOps, TestSoundex) {\n+  gandiva::ExecutionContext ctx;\n+  auto ctx_ptr = reinterpret_cast<int64_t>(&ctx);\n+  int32_t out_len = 0;\n+  const char* out;\n+\n+  out = soundex_utf8(ctx_ptr, \"Miller\", 6, &out_len);\n+  EXPECT_EQ(std::string(out, out_len), \"M460\");\n+\n+  out = soundex_utf8(ctx_ptr, \"abc\", 3, &out_len);\n+  EXPECT_EQ(std::string(out, out_len), \"A120\");\n+\n+  out = soundex_utf8(ctx_ptr, \"test\", 4, &out_len);\n+  EXPECT_EQ(std::string(out, out_len), \"T230\");\n\nReview comment:\n       A test case having non letter at the beginning and vowels in the beginning..?\r\n      \"3Miller\", \"Elvis\", \"waterloo\" ,\"eowolf\"\r\n   also a test case that compares the output of 2 similar sounding values. e.g Smith and Smythe are similar sounding and probably should return same value?.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-05T20:47:19.021+0000",
                    "updated": "2021-11-05T20:47:19.021+0000",
                    "started": "2021-11-05T20:47:19.020+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "677869",
                    "issueId": "13398601"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398601/worklog/680779",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva commented on a change in pull request #11052:\nURL: https://github.com/apache/arrow/pull/11052#discussion_r748208115\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/string_ops.cc\n##########\n@@ -2195,4 +2195,74 @@ const char* byte_substr_binary_int32_int32(gdv_int64 context, const char* text,\n   memcpy(ret, text + startPos, *out_len);\n   return ret;\n }\n+\n+// Array that maps each letter from the alphabet to its corresponding number for the soundex algorithm.\n+// ABCDEFGHIJKLMNOPQRSTUVWXYZ -> 01230120022455012623010202\n+static char mappings[] = {'0','1','2','3','0','1','2','0','0','2','2','4','5','5','0','1','2','6','2','3','0','1','0','2','0','2'};\n+\n+// Returns the soundex code for a given string\n+//\n+// The soundex function evaluates expression and returns the most significant letter in\n+// the input string followed by a phonetic code. Characters that are not alphabetic are\n+// ignored. If expression evaluates to the null value, null is returned.\n+//\n+// The soundex algorith works with the following steps:\n+//    1. Retain the first letter of the string and drop all other occurrences of a, e, i, o, u, y, h, w.\n+//    2. Replace consonants with digits as follows (after the first letter):\n+//        b, f, p, v \u2192 1\n+//        c, g, j, k, q, s, x, z \u2192 2\n+//        d, t \u2192 3\n+//        l \u2192 4\n+//        m, n \u2192 5\n+//        r \u2192 6\n+//    3. If two or more letters with the same number are adjacent in the original name\n+//    (before step 1), only retain the first letter; also two letters with the same number\n+//    separated by 'h' or 'w' are coded as a single number, whereas such letters separated\n+//    by a vowel are coded twice. This rule also applies to the first letter.\n+//    4. If the string have too few letters in the word that you can't assign three numbers,\n+//    append with zeros until there are three numbers. If you have four or more numbers,\n+//    retain only the first three.\n+FORCE_INLINE\n+const char* soundex_utf8(gdv_int64 ctx, const char* in, gdv_int32 in_len,\n+                                int32_t* out_len) {\n+  if (in_len <= 0) {\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  // The soundex code is composed by one letter and three numbers\n+  char* ret = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(ctx, 4));\n+  if (ret == nullptr) {\n+    gdv_fn_context_set_error_msg(ctx, \"Could not allocate memory for output string\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  int si = 1;\n+  unsigned char c;\n+  ret[0] = toupper(in[0]);\n\nReview comment:\n       Yes, it should skip it\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-12T11:49:44.729+0000",
                    "updated": "2021-11-12T11:49:44.729+0000",
                    "started": "2021-11-12T11:49:44.729+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "680779",
                    "issueId": "13398601"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398601/worklog/680789",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva commented on a change in pull request #11052:\nURL: https://github.com/apache/arrow/pull/11052#discussion_r748208115\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/string_ops.cc\n##########\n@@ -2195,4 +2195,74 @@ const char* byte_substr_binary_int32_int32(gdv_int64 context, const char* text,\n   memcpy(ret, text + startPos, *out_len);\n   return ret;\n }\n+\n+// Array that maps each letter from the alphabet to its corresponding number for the soundex algorithm.\n+// ABCDEFGHIJKLMNOPQRSTUVWXYZ -> 01230120022455012623010202\n+static char mappings[] = {'0','1','2','3','0','1','2','0','0','2','2','4','5','5','0','1','2','6','2','3','0','1','0','2','0','2'};\n+\n+// Returns the soundex code for a given string\n+//\n+// The soundex function evaluates expression and returns the most significant letter in\n+// the input string followed by a phonetic code. Characters that are not alphabetic are\n+// ignored. If expression evaluates to the null value, null is returned.\n+//\n+// The soundex algorith works with the following steps:\n+//    1. Retain the first letter of the string and drop all other occurrences of a, e, i, o, u, y, h, w.\n+//    2. Replace consonants with digits as follows (after the first letter):\n+//        b, f, p, v \u2192 1\n+//        c, g, j, k, q, s, x, z \u2192 2\n+//        d, t \u2192 3\n+//        l \u2192 4\n+//        m, n \u2192 5\n+//        r \u2192 6\n+//    3. If two or more letters with the same number are adjacent in the original name\n+//    (before step 1), only retain the first letter; also two letters with the same number\n+//    separated by 'h' or 'w' are coded as a single number, whereas such letters separated\n+//    by a vowel are coded twice. This rule also applies to the first letter.\n+//    4. If the string have too few letters in the word that you can't assign three numbers,\n+//    append with zeros until there are three numbers. If you have four or more numbers,\n+//    retain only the first three.\n+FORCE_INLINE\n+const char* soundex_utf8(gdv_int64 ctx, const char* in, gdv_int32 in_len,\n+                                int32_t* out_len) {\n+  if (in_len <= 0) {\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  // The soundex code is composed by one letter and three numbers\n+  char* ret = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(ctx, 4));\n+  if (ret == nullptr) {\n+    gdv_fn_context_set_error_msg(ctx, \"Could not allocate memory for output string\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  int si = 1;\n+  unsigned char c;\n+  ret[0] = toupper(in[0]);\n\nReview comment:\n       Yes, it should skip it, so for that I added a new loop to remove any non-alphabetic from the start of the string\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-12T12:15:43.741+0000",
                    "updated": "2021-11-12T12:15:43.741+0000",
                    "started": "2021-11-12T12:15:43.741+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "680789",
                    "issueId": "13398601"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398601/worklog/680790",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva commented on a change in pull request #11052:\nURL: https://github.com/apache/arrow/pull/11052#discussion_r748231861\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/string_ops.cc\n##########\n@@ -2195,4 +2195,74 @@ const char* byte_substr_binary_int32_int32(gdv_int64 context, const char* text,\n   memcpy(ret, text + startPos, *out_len);\n   return ret;\n }\n+\n+// Array that maps each letter from the alphabet to its corresponding number for the soundex algorithm.\n+// ABCDEFGHIJKLMNOPQRSTUVWXYZ -> 01230120022455012623010202\n+static char mappings[] = {'0','1','2','3','0','1','2','0','0','2','2','4','5','5','0','1','2','6','2','3','0','1','0','2','0','2'};\n+\n+// Returns the soundex code for a given string\n+//\n+// The soundex function evaluates expression and returns the most significant letter in\n+// the input string followed by a phonetic code. Characters that are not alphabetic are\n+// ignored. If expression evaluates to the null value, null is returned.\n+//\n+// The soundex algorith works with the following steps:\n+//    1. Retain the first letter of the string and drop all other occurrences of a, e, i, o, u, y, h, w.\n+//    2. Replace consonants with digits as follows (after the first letter):\n+//        b, f, p, v \u2192 1\n+//        c, g, j, k, q, s, x, z \u2192 2\n+//        d, t \u2192 3\n+//        l \u2192 4\n+//        m, n \u2192 5\n+//        r \u2192 6\n+//    3. If two or more letters with the same number are adjacent in the original name\n+//    (before step 1), only retain the first letter; also two letters with the same number\n+//    separated by 'h' or 'w' are coded as a single number, whereas such letters separated\n+//    by a vowel are coded twice. This rule also applies to the first letter.\n+//    4. If the string have too few letters in the word that you can't assign three numbers,\n+//    append with zeros until there are three numbers. If you have four or more numbers,\n+//    retain only the first three.\n+FORCE_INLINE\n+const char* soundex_utf8(gdv_int64 ctx, const char* in, gdv_int32 in_len,\n+                                int32_t* out_len) {\n+  if (in_len <= 0) {\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  // The soundex code is composed by one letter and three numbers\n+  char* ret = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(ctx, 4));\n+  if (ret == nullptr) {\n+    gdv_fn_context_set_error_msg(ctx, \"Could not allocate memory for output string\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  int si = 1;\n+  unsigned char c;\n+  ret[0] = toupper(in[0]);\n+  for(int i = 1, l = in_len; i < l; i++) {\n+    c = toupper(in[i]) - 65;\n\nReview comment:\n       It should be, now it will verify for each char if isAlpha()\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-12T12:16:18.204+0000",
                    "updated": "2021-11-12T12:16:18.204+0000",
                    "started": "2021-11-12T12:16:18.204+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "680790",
                    "issueId": "13398601"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398601/worklog/680791",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva commented on a change in pull request #11052:\nURL: https://github.com/apache/arrow/pull/11052#discussion_r748232432\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/string_ops_test.cc\n##########\n@@ -1755,4 +1755,23 @@ TEST(TestStringOps, TestConvertToBigEndian) {\n #endif\n }\n \n+TEST(TestStringOps, TestSoundex) {\n+  gandiva::ExecutionContext ctx;\n+  auto ctx_ptr = reinterpret_cast<int64_t>(&ctx);\n+  int32_t out_len = 0;\n+  const char* out;\n+\n+  out = soundex_utf8(ctx_ptr, \"Miller\", 6, &out_len);\n+  EXPECT_EQ(std::string(out, out_len), \"M460\");\n+\n+  out = soundex_utf8(ctx_ptr, \"abc\", 3, &out_len);\n+  EXPECT_EQ(std::string(out, out_len), \"A120\");\n+\n+  out = soundex_utf8(ctx_ptr, \"test\", 4, &out_len);\n+  EXPECT_EQ(std::string(out, out_len), \"T230\");\n\nReview comment:\n       Added this test cases and one more where a digit is int the middle of the name, eg.: Mill3r\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-12T12:17:00.958+0000",
                    "updated": "2021-11-12T12:17:00.958+0000",
                    "started": "2021-11-12T12:17:00.956+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "680791",
                    "issueId": "13398601"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398601/worklog/686377",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra closed pull request #11052:\nURL: https://github.com/apache/arrow/pull/11052\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-25T11:39:19.516+0000",
                    "updated": "2021-11-25T11:39:19.516+0000",
                    "started": "2021-11-25T11:39:19.516+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "686377",
                    "issueId": "13398601"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398601/worklog/686378",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on pull request #11052:\nURL: https://github.com/apache/arrow/pull/11052#issuecomment-979131036\n\n\n   Benchmark runs are scheduled for baseline = 1013b0ced32cf1984b606257c0794485bc70c730 and contender = fed01edeb93af6643b368ae34694daa4411f972a. fed01edeb93af6643b368ae34694daa4411f972a is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Scheduled] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/fd23ac5b20e1426e9cdab5ae73c1acce...d8af6674a3d14ec2a08cb757b6ec630f/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/0bf68599542e4fefabe03fda5decc111...3768da3ad0a64745b9774c56b001aba7/)\n   [Scheduled] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/25129a06a6e14a8db38aa96af8d8e1d0...4ebd88e0dc44485bb6f545a05bb2f6f7/)\n   Supported benchmarks:\n   ursa-i9-9960x: langs = Python, R, JavaScript\n   ursa-thinkcentre-m75q: langs = C++, Java\n   ec2-t3-xlarge-us-east-2: cloud = True\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-25T11:39:32.838+0000",
                    "updated": "2021-11-25T11:39:32.838+0000",
                    "started": "2021-11-25T11:39:32.838+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "686378",
                    "issueId": "13398601"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398601/worklog/686391",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #11052:\nURL: https://github.com/apache/arrow/pull/11052#issuecomment-979131036\n\n\n   Benchmark runs are scheduled for baseline = 1013b0ced32cf1984b606257c0794485bc70c730 and contender = fed01edeb93af6643b368ae34694daa4411f972a. fed01edeb93af6643b368ae34694daa4411f972a is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/fd23ac5b20e1426e9cdab5ae73c1acce...d8af6674a3d14ec2a08cb757b6ec630f/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/0bf68599542e4fefabe03fda5decc111...3768da3ad0a64745b9774c56b001aba7/)\n   [Scheduled] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/25129a06a6e14a8db38aa96af8d8e1d0...4ebd88e0dc44485bb6f545a05bb2f6f7/)\n   Supported benchmarks:\n   ursa-i9-9960x: langs = Python, R, JavaScript\n   ursa-thinkcentre-m75q: langs = C++, Java\n   ec2-t3-xlarge-us-east-2: cloud = True\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-25T12:04:27.972+0000",
                    "updated": "2021-11-25T12:04:27.972+0000",
                    "started": "2021-11-25T12:04:27.972+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "686391",
                    "issueId": "13398601"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398601/worklog/686665",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #11052:\nURL: https://github.com/apache/arrow/pull/11052#issuecomment-979131036\n\n\n   Benchmark runs are scheduled for baseline = 1013b0ced32cf1984b606257c0794485bc70c730 and contender = fed01edeb93af6643b368ae34694daa4411f972a. fed01edeb93af6643b368ae34694daa4411f972a is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/fd23ac5b20e1426e9cdab5ae73c1acce...d8af6674a3d14ec2a08cb757b6ec630f/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/0bf68599542e4fefabe03fda5decc111...3768da3ad0a64745b9774c56b001aba7/)\n   [Finished :arrow_down:0.31% :arrow_up:0.13%] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/25129a06a6e14a8db38aa96af8d8e1d0...4ebd88e0dc44485bb6f545a05bb2f6f7/)\n   Supported benchmarks:\n   ursa-i9-9960x: langs = Python, R, JavaScript\n   ursa-thinkcentre-m75q: langs = C++, Java\n   ec2-t3-xlarge-us-east-2: cloud = True\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-26T01:45:26.531+0000",
                    "updated": "2021-11-26T01:45:26.531+0000",
                    "started": "2021-11-26T01:45:26.530+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "686665",
                    "issueId": "13398601"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398601/worklog/687007",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #11052:\nURL: https://github.com/apache/arrow/pull/11052#issuecomment-979131036\n\n\n   Benchmark runs are scheduled for baseline = 1013b0ced32cf1984b606257c0794485bc70c730 and contender = fed01edeb93af6643b368ae34694daa4411f972a. fed01edeb93af6643b368ae34694daa4411f972a is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/fd23ac5b20e1426e9cdab5ae73c1acce...d8af6674a3d14ec2a08cb757b6ec630f/)\n   [Failed :arrow_down:0.0% :arrow_up:0.0%] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/0bf68599542e4fefabe03fda5decc111...3768da3ad0a64745b9774c56b001aba7/)\n   [Finished :arrow_down:0.31% :arrow_up:0.13%] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/25129a06a6e14a8db38aa96af8d8e1d0...4ebd88e0dc44485bb6f545a05bb2f6f7/)\n   Supported benchmarks:\n   ursa-i9-9960x: langs = Python, R, JavaScript\n   ursa-thinkcentre-m75q: langs = C++, Java\n   ec2-t3-xlarge-us-east-2: cloud = True\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-27T13:55:31.749+0000",
                    "updated": "2021-11-27T13:55:31.749+0000",
                    "started": "2021-11-27T13:55:31.749+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "687007",
                    "issueId": "13398601"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/3",
            "id": "3",
            "description": "A task that needs to be done.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21148&avatarType=issuetype",
            "name": "Task",
            "subtask": false,
            "avatarId": 21148
        },
        "timespent": 10200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5d3d74bb[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@34733cf4[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4117e1cd[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@6c2ef187[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6b445134[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@529d0fd2[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2cfa85c5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3743fb14[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7e47d139[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@449ea2bc[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3c32d347[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@1401148e[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 10200,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Nov 25 11:39:09 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-11-25T11:39:09.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13828/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2021-09-01T07:40:50.000+0000",
        "updated": "2021-11-27T13:55:32.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 10200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Gandiva] Implement SOUNDEX Hive function on Gandiva",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398601/comment/17449150",
                    "id": "17449150",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
                        "name": "pravindra",
                        "key": "pravindra",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
                        },
                        "displayName": "Pindikura Ravindra",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "body": "Issue resolved by pull request 11052\n[https://github.com/apache/arrow/pull/11052]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
                        "name": "pravindra",
                        "key": "pravindra",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
                        },
                        "displayName": "Pindikura Ravindra",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "created": "2021-11-25T11:39:09.773+0000",
                    "updated": "2021-11-25T11:39:09.773+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0uhd4:",
        "customfield_12314139": null
    }
}