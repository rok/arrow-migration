{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13146649",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13146649",
    "key": "ARROW-2331",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342562",
                "id": "12342562",
                "description": "",
                "name": "0.10.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-08-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341707",
                "id": "12341707",
                "description": "",
                "name": "0.9.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-03-19"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2331/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@644841ec[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7c454b45[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@a167d31[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5c5f0055[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5915abc5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@4d853a9b[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@74c339ef[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@503ad28a[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@248510cb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@40b0b722[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2d51e29a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@2b79cb38[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Mar 23 16:04:30 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-03-23T16:04:30.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2331/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2018-03-20T19:37:50.000+0000",
        "updated": "2018-03-23T16:04:30.000+0000",
        "timeoriginalestimate": null,
        "description": "A number of {{\\_\\_getitem\\_\\_}} implementations handle negative or out-of-bounds indices improperly, for example:\r\n\r\n{code:python}\r\n>>> a = pa.array([11,12,13])\r\n>>> a[-6]\r\n11\r\n>>> a[-15]\r\n11\r\n>>> a[4]\r\nNA\r\n>>> a[3]\r\nNA\r\n>>> a[1111]\r\nNA\r\n{code}",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Fix indexing implementations",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13146649/comment/16406912",
                    "id": "16406912",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou opened a new pull request #1770: ARROW-2331: [Python] Fix indexing for negative or out-of-bounds indices\nURL: https://github.com/apache/arrow/pull/1770\n \n \n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-20T19:41:09.720+0000",
                    "updated": "2018-03-20T19:41:09.720+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13146649/comment/16410296",
                    "id": "16410296",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1770: ARROW-2331: [Python] Fix indexing for negative or out-of-bounds indices\nURL: https://github.com/apache/arrow/pull/1770#issuecomment-375455237\n \n \n   Looks like we have a Windows int64->int cast issue. I can take a look if that would help\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-22T20:58:07.695+0000",
                    "updated": "2018-03-22T20:58:07.695+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13146649/comment/16411117",
                    "id": "16411117",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on issue #1770: ARROW-2331: [Python] Fix indexing for negative or out-of-bounds indices\nURL: https://github.com/apache/arrow/pull/1770#issuecomment-375600609\n \n \n   Ok, the downcasting error should be fixed now. It's a pity these warnings don't appear on Linux (passing `-Wconversion` unfortunately enables other warnings).\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-23T09:58:25.982+0000",
                    "updated": "2018-03-23T09:58:25.982+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13146649/comment/16411623",
                    "id": "16411623",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy closed pull request #1770: ARROW-2331: [Python] Fix indexing for negative or out-of-bounds indices\nURL: https://github.com/apache/arrow/pull/1770\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/python/pyarrow/array.pxi b/python/pyarrow/array.pxi\nindex afb68a2fb..c40d7b554 100644\n--- a/python/pyarrow/array.pxi\n+++ b/python/pyarrow/array.pxi\n@@ -232,6 +232,17 @@ def _normalize_slice(object arrow_obj, slice key):\n         return arrow_obj.slice(start, stop - start)\n \n \n+cdef Py_ssize_t _normalize_index(Py_ssize_t index,\n+                                 Py_ssize_t length) except -1:\n+    if index < 0:\n+        index += length\n+        if index < 0:\n+            raise IndexError(\"index out of bounds\")\n+    elif index >= length:\n+        raise IndexError(\"index out of bounds\")\n+    return index\n+\n+\n cdef class _FunctionContext:\n     cdef:\n         unique_ptr[CFunctionContext] ctx\n@@ -427,6 +438,9 @@ cdef class Array:\n         return self.ap.Equals(deref(other.ap))\n \n     def __len__(self):\n+        return self.length()\n+\n+    cdef int64_t length(self):\n         if self.sp_array.get():\n             return self.sp_array.get().length()\n         else:\n@@ -441,10 +455,7 @@ cdef class Array:\n         if PySlice_Check(key):\n             return _normalize_slice(self, key)\n \n-        while key < 0:\n-            key += len(self)\n-\n-        return self.getitem(key)\n+        return self.getitem(_normalize_index(key, self.length()))\n \n     cdef getitem(self, int64_t i):\n         return box_scalar(self.type, self.sp_array, i)\ndiff --git a/python/pyarrow/lib.pxd b/python/pyarrow/lib.pxd\nindex be103b354..7a1b221db 100644\n--- a/python/pyarrow/lib.pxd\n+++ b/python/pyarrow/lib.pxd\n@@ -137,6 +137,7 @@ cdef class ListValue(ArrayValue):\n         CListArray* ap\n \n     cdef getitem(self, int64_t i)\n+    cdef int64_t length(self)\n \n \n cdef class UnionValue(ArrayValue):\n@@ -164,6 +165,7 @@ cdef class Array:\n \n     cdef void init(self, const shared_ptr[CArray]& sp_array)\n     cdef getitem(self, int64_t i)\n+    cdef int64_t length(self)\n \n \n cdef class Tensor:\ndiff --git a/python/pyarrow/scalar.pxi b/python/pyarrow/scalar.pxi\nindex a0f8480db..e9c2c7c84 100644\n--- a/python/pyarrow/scalar.pxi\n+++ b/python/pyarrow/scalar.pxi\n@@ -294,10 +294,10 @@ cdef class BinaryValue(ArrayValue):\n cdef class ListValue(ArrayValue):\n \n     def __len__(self):\n-        return self.ap.value_length(self.index)\n+        return self.length()\n \n     def __getitem__(self, i):\n-        return self.getitem(i)\n+        return self.getitem(_normalize_index(i, self.length()))\n \n     def __iter__(self):\n         for i in range(len(self)):\n@@ -313,6 +313,9 @@ cdef class ListValue(ArrayValue):\n         cdef int64_t j = self.ap.value_offset(self.index) + i\n         return box_scalar(self.value_type, self.ap.values(), j)\n \n+    cdef int64_t length(self):\n+        return self.ap.value_length(self.index)\n+\n     def as_py(self):\n         cdef:\n             int64_t j\ndiff --git a/python/pyarrow/table.pxi b/python/pyarrow/table.pxi\nindex 6cfa9873b..672b9fb7d 100644\n--- a/python/pyarrow/table.pxi\n+++ b/python/pyarrow/table.pxi\n@@ -84,14 +84,12 @@ cdef class ChunkedArray:\n         if isinstance(key, slice):\n             return _normalize_slice(self, key)\n         elif isinstance(key, six.integer_types):\n-            item = key\n-            if item >= self.chunked_array.length() or item < 0:\n-                return IndexError(\"ChunkedArray selection out of bounds\")\n+            index = _normalize_index(key, self.chunked_array.length())\n             for i in range(self.num_chunks):\n-                if item < self.chunked_array.chunk(i).get().length():\n-                    return self.chunk(i)[item]\n+                if index < self.chunked_array.chunk(i).get().length():\n+                    return self.chunk(i)[index]\n                 else:\n-                    item -= self.chunked_array.chunk(i).get().length()\n+                    index -= self.chunked_array.chunk(i).get().length()\n         else:\n             raise TypeError(\"key must either be a slice or integer\")\n \n@@ -630,12 +628,10 @@ cdef class RecordBatch:\n         return pyarrow_wrap_array(self.batch.column(i))\n \n     def __getitem__(self, key):\n-        cdef:\n-            Py_ssize_t start, stop\n         if isinstance(key, slice):\n             return _normalize_slice(self, key)\n         else:\n-            return self.column(key)\n+            return self.column(_normalize_index(key, self.num_columns))\n \n     def serialize(self, memory_pool=None):\n         \"\"\"\n@@ -1183,8 +1179,9 @@ cdef class Table:\n         column.init(self.table.column(index))\n         return column\n \n-    def __getitem__(self, int64_t i):\n-        return self.column(i)\n+    def __getitem__(self, key):\n+        cdef int index = <int> _normalize_index(key, self.num_columns)\n+        return self.column(index)\n \n     def itercolumns(self):\n         \"\"\"\ndiff --git a/python/pyarrow/tests/test_array.py b/python/pyarrow/tests/test_array.py\nindex d126db373..4a441fb97 100644\n--- a/python/pyarrow/tests/test_array.py\n+++ b/python/pyarrow/tests/test_array.py\n@@ -110,6 +110,20 @@ def test_to_pandas_zero_copy():\n         np_arr.sum()\n \n \n+def test_array_getitem():\n+    arr = pa.array(range(10, 15))\n+    lst = arr.to_pylist()\n+\n+    for idx in range(-len(arr), len(arr)):\n+        assert arr[idx].as_py() == lst[idx]\n+    for idx in range(-2 * len(arr), -len(arr)):\n+        with pytest.raises(IndexError):\n+            arr[idx]\n+    for idx in range(len(arr), 2 * len(arr)):\n+        with pytest.raises(IndexError):\n+            arr[idx]\n+\n+\n def test_array_slice():\n     arr = pa.array(range(10))\n \ndiff --git a/python/pyarrow/tests/test_scalars.py b/python/pyarrow/tests/test_scalars.py\nindex 7061a0d3a..c63be0203 100644\n--- a/python/pyarrow/tests/test_scalars.py\n+++ b/python/pyarrow/tests/test_scalars.py\n@@ -131,6 +131,12 @@ def test_list(self):\n         assert v.as_py() == ['foo', None]\n         assert v[0].as_py() == 'foo'\n         assert v[1] is pa.NA\n+        assert v[-1] == v[1]\n+        assert v[-2] == v[0]\n+        with pytest.raises(IndexError):\n+            v[-3]\n+        with pytest.raises(IndexError):\n+            v[2]\n \n         assert arr[1] is pa.NA\n \ndiff --git a/python/pyarrow/tests/test_table.py b/python/pyarrow/tests/test_table.py\nindex 356ecb7e0..81564352b 100644\n--- a/python/pyarrow/tests/test_table.py\n+++ b/python/pyarrow/tests/test_table.py\n@@ -31,6 +31,12 @@ def test_chunked_array_getitem():\n     ]\n     data = pa.chunked_array(data)\n     assert data[1].as_py() == 2\n+    assert data[-1].as_py() == 6\n+    assert data[-6].as_py() == 1\n+    with pytest.raises(IndexError):\n+        data[6]\n+    with pytest.raises(IndexError):\n+        data[-7]\n \n     data_slice = data[2:4]\n     assert data_slice.to_pylist() == [3, 4]\ndiff --git a/python/pyarrow/types.pxi b/python/pyarrow/types.pxi\nindex a4391c7f9..b0557eb57 100644\n--- a/python/pyarrow/types.pxi\n+++ b/python/pyarrow/types.pxi\n@@ -166,10 +166,8 @@ cdef class StructType(DataType):\n         DataType.init(self, type)\n \n     def __getitem__(self, i):\n-        if i < 0 or i >= self.num_children:\n-            raise IndexError(i)\n-\n-        return pyarrow_wrap_field(self.type.child(i))\n+        cdef int index = <int> _normalize_index(i, self.num_children)\n+        return pyarrow_wrap_field(self.type.child(index))\n \n     property num_children:\n \n@@ -207,7 +205,8 @@ cdef class UnionType(DataType):\n             assert 0\n \n     def __getitem__(self, i):\n-        return pyarrow_wrap_field(self.type.child(i))\n+        cdef int index = <int> _normalize_index(i, self.num_children)\n+        return pyarrow_wrap_field(self.type.child(index))\n \n     def __getstate__(self):\n         children = [self[i] for i in range(self.num_children)]\n@@ -440,24 +439,9 @@ cdef class Schema:\n     def __len__(self):\n         return self.schema.num_fields()\n \n-    def __getitem__(self, int i):\n-        cdef:\n-            Field result = Field()\n-            int num_fields = self.schema.num_fields()\n-            int index\n-\n-        if not -num_fields <= i < num_fields:\n-            raise IndexError(\n-                'Schema field index {:d} is out of range'.format(i)\n-            )\n-\n-        index = i if i >= 0 else num_fields + i\n-        assert index >= 0\n-\n-        result.init(self.schema.field(index))\n-        result.type = pyarrow_wrap_data_type(result.field.type())\n-\n-        return result\n+    def __getitem__(self, key):\n+        cdef int index = <int> _normalize_index(key, self.schema.num_fields())\n+        return pyarrow_wrap_field(self.schema.field(index))\n \n     def __iter__(self):\n         for i in range(len(self)):\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-23T16:03:42.010+0000",
                    "updated": "2018-03-23T16:03:42.010+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13146649/comment/16411624",
                    "id": "16411624",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "body": "Issue resolved by pull request 1770\n[https://github.com/apache/arrow/pull/1770]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "created": "2018-03-23T16:04:30.301+0000",
                    "updated": "2018-03-23T16:04:30.301+0000"
                }
            ],
            "maxResults": 5,
            "total": 5,
            "startAt": 0
        },
        "customfield_12311820": "0|i3rkan:",
        "customfield_12314139": null
    }
}