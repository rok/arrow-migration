{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13165686",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165686",
    "key": "ARROW-2704",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342562",
                "id": "12342562",
                "description": "",
                "name": "0.10.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-08-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/2",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/critical.svg",
            "name": "Critical",
            "id": "2"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bryanc",
            "name": "bryanc",
            "key": "bryanc",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bryanc&avatarId=23479",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bryanc&avatarId=23479",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bryanc&avatarId=23479",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bryanc&avatarId=23479"
            },
            "displayName": "Bryan Cutler",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bryanc",
            "name": "bryanc",
            "key": "bryanc",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bryanc&avatarId=23479",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bryanc&avatarId=23479",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bryanc&avatarId=23479",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bryanc&avatarId=23479"
            },
            "displayName": "Bryan Cutler",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bryanc",
            "name": "bryanc",
            "key": "bryanc",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bryanc&avatarId=23479",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bryanc&avatarId=23479",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bryanc&avatarId=23479",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bryanc&avatarId=23479"
            },
            "displayName": "Bryan Cutler",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 69600,
            "total": 69600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 69600,
            "total": 69600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2704/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 120,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165686/worklog/111721",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler opened a new pull request #2139: ARROW-2704: [Java] Made stream processing more friendly for low-level message handling\nURL: https://github.com/apache/arrow/pull/2139\n \n \n   Made a number of improvements to make stream processing for messages easier without having to load Arrow record and dictionary batches\r\n   \r\n   - Added MessageChannelReader.loadMessage so that a subclass can handle the message along with the underlying buffer.  Also ReadChannel was changed from private to protected.\r\n   \r\n   - Added static function in ArrowStreamWriter to write the EOS identifier\r\n   \r\n   - Moved intToBytes to MessageSerializer (where bytesToInt is), and now works with an existing byte array\r\n   \r\n   Also removed the abstract identifier in beginInternal and endInternal so that subclasses are not forced to implement if they are not needed.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-13T23:49:57.142+0000",
                    "updated": "2018-06-13T23:49:57.142+0000",
                    "started": "2018-06-13T23:49:57.142+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "111721",
                    "issueId": "13165686"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165686/worklog/111722",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on issue #2139: ARROW-2704: [Java] Made stream processing more friendly for low-level message handling\nURL: https://github.com/apache/arrow/pull/2139#issuecomment-397123518\n \n \n   These changes were pretty useful when working on https://github.com/apache/spark/pull/20725\r\n   @icexelloss @siddharthteotia please take a look if you can, thanks!\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-13T23:52:20.176+0000",
                    "updated": "2018-06-13T23:52:20.176+0000",
                    "started": "2018-06-13T23:52:20.175+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "111722",
                    "issueId": "13165686"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165686/worklog/112370",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "icexelloss commented on a change in pull request #2139: ARROW-2704: [Java] Made stream processing more friendly for low-level message handling\nURL: https://github.com/apache/arrow/pull/2139#discussion_r195783683\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/ipc/message/MessageChannelReader.java\n ##########\n @@ -61,13 +61,18 @@ public Message readNextMessage() throws IOException {\n       return null;\n     }\n \n-    buffer = ByteBuffer.allocate(messageLength);\n+    return loadMessage(messageLength, ByteBuffer.allocate(messageLength));\n+  }\n+\n+  /**\n+   * Read a Message of the given length into the existing buffer and return the loaded Message.\n+   */\n+  protected Message loadMessage(int messageLength, ByteBuffer buffer) throws IOException {\n \n Review comment:\n   Bryan, can you give a bit context why do you want to provide your own buffer when reading the message?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-15T15:50:56.573+0000",
                    "updated": "2018-06-15T15:50:56.573+0000",
                    "started": "2018-06-15T15:50:56.573+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "112370",
                    "issueId": "13165686"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165686/worklog/112380",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on a change in pull request #2139: ARROW-2704: [Java] Made stream processing more friendly for low-level message handling\nURL: https://github.com/apache/arrow/pull/2139#discussion_r195797302\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/ipc/message/MessageChannelReader.java\n ##########\n @@ -61,13 +61,18 @@ public Message readNextMessage() throws IOException {\n       return null;\n     }\n \n-    buffer = ByteBuffer.allocate(messageLength);\n+    return loadMessage(messageLength, ByteBuffer.allocate(messageLength));\n+  }\n+\n+  /**\n+   * Read a Message of the given length into the existing buffer and return the loaded Message.\n+   */\n+  protected Message loadMessage(int messageLength, ByteBuffer buffer) throws IOException {\n \n Review comment:\n   So `loadMessage` here will create an Arrow `Message` of the given `messageLength` from the `buffer`.  What I would like to be able to do is override this method to then have access to the message buffer.  This way I can examine the message contents and then copy it to another buffer without having to serialize it again.  For example (in Scala):\r\n   \r\n   ```scala\r\n   override protected def loadMessage(messageLength: Int, buffer: ByteBuffer): Message = {\r\n           val msg = super.loadMessage(messageLength, buffer)\r\n           val bodyLength = msg.bodyLength().asInstanceOf[Int]\r\n   \r\n           if (msg.headerType() == MessageHeader.RecordBatch) {\r\n             val allbuf = ByteBuffer.allocate(4 + messageLength + bodyLength)\r\n             allbuf.put(WriteChannel.intToBytes(messageLength))\r\n             allbuf.put(buffer)\r\n             in.readFully(allbuf)\r\n             lastBatch = allbuf.array()\r\n           } else {...}\r\n   \r\n           msg\r\n   ```\r\n   \r\n   this allows me to create a new buffer with the existing message and then read the record batch body directly into the new buffer.  So I end up with a single buffer containing the message + body with minimal processing/copying.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-15T16:30:19.750+0000",
                    "updated": "2018-06-15T16:30:19.750+0000",
                    "started": "2018-06-15T16:30:19.750+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "112380",
                    "issueId": "13165686"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165686/worklog/112381",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on a change in pull request #2139: ARROW-2704: [Java] Made stream processing more friendly for low-level message handling\nURL: https://github.com/apache/arrow/pull/2139#discussion_r195797302\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/ipc/message/MessageChannelReader.java\n ##########\n @@ -61,13 +61,18 @@ public Message readNextMessage() throws IOException {\n       return null;\n     }\n \n-    buffer = ByteBuffer.allocate(messageLength);\n+    return loadMessage(messageLength, ByteBuffer.allocate(messageLength));\n+  }\n+\n+  /**\n+   * Read a Message of the given length into the existing buffer and return the loaded Message.\n+   */\n+  protected Message loadMessage(int messageLength, ByteBuffer buffer) throws IOException {\n \n Review comment:\n   So `loadMessage` here will create an Arrow `Message` of the given `messageLength` from the `buffer`.  What I would like to be able to do is override this method to then have access to the message buffer.  This way I can examine the message contents and then copy it to another buffer without having to serialize it again.  For example (in Scala):\r\n   \r\n   ```scala\r\n   override protected def loadMessage(messageLength: Int, buffer: ByteBuffer): Message = {\r\n           val msg = super.loadMessage(messageLength, buffer)\r\n           val bodyLength = msg.bodyLength().asInstanceOf[Int]\r\n   \r\n           if (msg.headerType() == MessageHeader.RecordBatch) {\r\n             val allbuf = ByteBuffer.allocate(4 + messageLength + bodyLength)\r\n             allbuf.put(WriteChannel.intToBytes(messageLength))\r\n             allbuf.put(buffer)\r\n             in.readFully(allbuf)\r\n             lastBatch = allbuf.array()\r\n           } else {...}\r\n   \r\n           msg\r\n   }\r\n   ```\r\n   \r\n   this allows me to create a new buffer with the existing message and then read the record batch body directly into the new buffer.  So I end up with a single buffer containing the message + body with minimal processing/copying.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-15T16:30:49.505+0000",
                    "updated": "2018-06-15T16:30:49.505+0000",
                    "started": "2018-06-15T16:30:49.504+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "112381",
                    "issueId": "13165686"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165686/worklog/112406",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "icexelloss commented on a change in pull request #2139: ARROW-2704: [Java] Made stream processing more friendly for low-level message handling\nURL: https://github.com/apache/arrow/pull/2139#discussion_r195818506\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/ipc/message/MessageChannelReader.java\n ##########\n @@ -61,13 +61,18 @@ public Message readNextMessage() throws IOException {\n       return null;\n     }\n \n-    buffer = ByteBuffer.allocate(messageLength);\n+    return loadMessage(messageLength, ByteBuffer.allocate(messageLength));\n+  }\n+\n+  /**\n+   * Read a Message of the given length into the existing buffer and return the loaded Message.\n+   */\n+  protected Message loadMessage(int messageLength, ByteBuffer buffer) throws IOException {\n \n Review comment:\n   I see, you want to serialize an arrow record batch message (metadata + body) into a Java on-heap memory rather than Arrow off-heap memory?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-15T17:52:57.894+0000",
                    "updated": "2018-06-15T17:52:57.894+0000",
                    "started": "2018-06-15T17:52:57.893+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "112406",
                    "issueId": "13165686"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165686/worklog/112407",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "icexelloss commented on a change in pull request #2139: ARROW-2704: [Java] Made stream processing more friendly for low-level message handling\nURL: https://github.com/apache/arrow/pull/2139#discussion_r195819424\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/ipc/message/MessageChannelReader.java\n ##########\n @@ -61,13 +61,18 @@ public Message readNextMessage() throws IOException {\n       return null;\n     }\n \n-    buffer = ByteBuffer.allocate(messageLength);\n+    return loadMessage(messageLength, ByteBuffer.allocate(messageLength));\n+  }\n+\n+  /**\n+   * Read a Message of the given length into the existing buffer and return the loaded Message.\n+   */\n+  protected Message loadMessage(int messageLength, ByteBuffer buffer) throws IOException {\n \n Review comment:\n   I think your loadMessage message also changes the semantics of the function from \"reading metadata\" to \"reading metadata and body\" in the subclass...\r\n   \r\n   I am not sure it's a good idea from an OOP perspective..\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-15T17:56:17.191+0000",
                    "updated": "2018-06-15T17:56:17.191+0000",
                    "started": "2018-06-15T17:56:17.190+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "112407",
                    "issueId": "13165686"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165686/worklog/112472",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on a change in pull request #2139: ARROW-2704: [Java] Made stream processing more friendly for low-level message handling\nURL: https://github.com/apache/arrow/pull/2139#discussion_r195874371\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/ipc/message/MessageChannelReader.java\n ##########\n @@ -61,13 +61,18 @@ public Message readNextMessage() throws IOException {\n       return null;\n     }\n \n-    buffer = ByteBuffer.allocate(messageLength);\n+    return loadMessage(messageLength, ByteBuffer.allocate(messageLength));\n+  }\n+\n+  /**\n+   * Read a Message of the given length into the existing buffer and return the loaded Message.\n+   */\n+  protected Message loadMessage(int messageLength, ByteBuffer buffer) throws IOException {\n \n Review comment:\n   >I see, you want to serialize an arrow record batch message (metadata + body) into a Java on-heap memory rather than Arrow off-heap memory?\r\n   \r\n   Sort of.. I need to read a Arrow record batch message from an input stream to a byte array.  I do not need to look at the data and must pass on ownership of the memory,  so I want to avoid loading to Arrow buffers or making unneeded copies.\r\n   \r\n   > I think your loadMessage message also changes the semantics of the function from \"reading metadata\" to \"reading metadata and body\" in the subclass...\r\n   I am not sure it's a good idea from an OOP perspective..\r\n   \r\n   Nothing changes in `MessageChannelReader`, and the details of a subclass to it aren't really relevant here.  From an Arrow perspective, these classes should provide utility to process streams in a flexible way.  I'm up for any changes if you have a suggestion that is just as efficient and can continue to work with ArrowStreamReader.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-15T22:17:00.565+0000",
                    "updated": "2018-06-15T22:17:00.565+0000",
                    "started": "2018-06-15T22:17:00.565+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "112472",
                    "issueId": "13165686"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165686/worklog/112771",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "icexelloss commented on a change in pull request #2139: ARROW-2704: [Java] Made stream processing more friendly for low-level message handling\nURL: https://github.com/apache/arrow/pull/2139#discussion_r196111206\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/ipc/message/MessageChannelReader.java\n ##########\n @@ -61,13 +61,18 @@ public Message readNextMessage() throws IOException {\n       return null;\n     }\n \n-    buffer = ByteBuffer.allocate(messageLength);\n+    return loadMessage(messageLength, ByteBuffer.allocate(messageLength));\n+  }\n+\n+  /**\n+   * Read a Message of the given length into the existing buffer and return the loaded Message.\n+   */\n+  protected Message loadMessage(int messageLength, ByteBuffer buffer) throws IOException {\n \n Review comment:\n   @BryanCutler how about we discuss on https://github.com/apache/spark/pull/21546/files/a5a1fbe7121c5b0dd93876a56c29ad17dcd9b168#r194898793 first and then decide what to do here?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-18T15:00:44.784+0000",
                    "updated": "2018-06-18T15:00:44.784+0000",
                    "started": "2018-06-18T15:00:44.783+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "112771",
                    "issueId": "13165686"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165686/worklog/118517",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on issue #2139: ARROW-2704: [Java] Made stream processing more friendly for low-level message handling\nURL: https://github.com/apache/arrow/pull/2139#issuecomment-401980987\n \n \n   **Update**\r\n   \r\n   I made some changes to `MessageReader` that will solve the issues I've been dealing with.  I'll do a better write up later, but here is the gist of the latest changes:  `MessageReader` is now an abstract class with a single public method `readNext`. This can be called repeatably and return false when no more messages in the stream. It takes in a `MessageReadHolder` class that will have variables populated with all data used in the reading of a message, like length, the raw buffer and `Message`.  There are 2 abstract methods `readMessage` and `readBody` that are invoked by `readNext`.\r\n   \r\n   There is one concrete implementation of `MessageReader` that is `MessageChannelReader` that implements the above methods with input from a `ReadChannel` and loads message body data into an `ArrowBuf`.  This reader is used by `ArrowStreamReader` to read messages/data and deserialize into Schema and Record/DictionaryBatches.\r\n   \r\n   When making a custom `MessageReader` you can extend the `MessageReadHolder` as needed and implement the `readMessage` and `readMessageBody` methods to populate it.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-03T00:59:15.389+0000",
                    "updated": "2018-07-03T00:59:15.389+0000",
                    "started": "2018-07-03T00:59:15.389+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "118517",
                    "issueId": "13165686"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165686/worklog/118518",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on issue #2139: ARROW-2704: [Java] Made stream processing more friendly for low-level message handling\nURL: https://github.com/apache/arrow/pull/2139#issuecomment-401981390\n \n \n   @icexelloss I'll do a more thorough writeup and probably add some tests later, but if you could take a look and let me know your thoughts on this approach, I'd appreciate it.  Thanks!\r\n   \r\n   Also, since there are some API changes, maybe best to send out to the dev list to get feedback..\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-03T01:01:44.956+0000",
                    "updated": "2018-07-03T01:01:44.956+0000",
                    "started": "2018-07-03T01:01:44.955+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "118518",
                    "issueId": "13165686"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165686/worklog/118802",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "icexelloss commented on issue #2139: ARROW-2704: [Java] Made stream processing more friendly for low-level message handling\nURL: https://github.com/apache/arrow/pull/2139#issuecomment-402264490\n \n \n   @BryanCutler Could you please sum up the purpose of the API change?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-03T19:14:51.789+0000",
                    "updated": "2018-07-03T19:14:51.789+0000",
                    "started": "2018-07-03T19:14:51.788+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "118802",
                    "issueId": "13165686"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165686/worklog/118831",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on issue #2139: ARROW-2704: [Java] Made stream processing more friendly for low-level message handling\nURL: https://github.com/apache/arrow/pull/2139#issuecomment-402289807\n \n \n   Thanks @elahrvivaz !  @icexelloss I'll add a summary of the API change in the description\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-03T20:57:43.659+0000",
                    "updated": "2018-07-03T20:57:43.659+0000",
                    "started": "2018-07-03T20:57:43.659+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "118831",
                    "issueId": "13165686"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165686/worklog/118890",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "icexelloss commented on issue #2139: ARROW-2704: [Java] Change MessageReader API to improve custom message handling for streams\nURL: https://github.com/apache/arrow/pull/2139#issuecomment-402316266\n \n \n   @BryanCutler Thanks! There seems to be fair amount of API changes in the MessageSerializer class. It would be good to understand better the rational behind the API changes.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-03T23:05:03.568+0000",
                    "updated": "2018-07-03T23:05:03.568+0000",
                    "started": "2018-07-03T23:05:03.567+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "118890",
                    "issueId": "13165686"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165686/worklog/118891",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "icexelloss edited a comment on issue #2139: ARROW-2704: [Java] Change MessageReader API to improve custom message handling for streams\nURL: https://github.com/apache/arrow/pull/2139#issuecomment-402316266\n \n \n   @BryanCutler Thanks! There seems to be fair amount of API changes in the MessageSerializer class as well in addition to the MessageReader classes. It would be good to understand better the rational behind the API changes.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-03T23:05:31.651+0000",
                    "updated": "2018-07-03T23:05:31.651+0000",
                    "started": "2018-07-03T23:05:31.650+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "118891",
                    "issueId": "13165686"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165686/worklog/118896",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2139: ARROW-2704: [Java] Change MessageReader API to improve custom message handling for streams\nURL: https://github.com/apache/arrow/pull/2139#issuecomment-402318589\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2139?src=pr&el=h1) Report\n   > Merging [#2139](https://codecov.io/gh/apache/arrow/pull/2139?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/c9ce215b9d22021268a1c2c3a70df99cb4f311c1?src=pr&el=desc) will **decrease** coverage by `2.39%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2139/graphs/tree.svg?src=pr&token=LpTCFbqVT1&width=650&height=150)](https://codecov.io/gh/apache/arrow/pull/2139?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff            @@\n   ##           master    #2139     +/-   ##\n   =========================================\n   - Coverage   86.47%   84.08%   -2.4%     \n   =========================================\n     Files         244      288     +44     \n     Lines       41808    43749   +1941     \n   =========================================\n   + Hits        36155    36785    +630     \n   - Misses       5653     6933   +1280     \n   - Partials        0       31     +31\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2139?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/python/helpers.cc](https://codecov.io/gh/apache/arrow/pull/2139/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vaGVscGVycy5jYw==) | `79.87% <0%> (-3.23%)` | :arrow_down: |\n   | [python/pyarrow/parquet.py](https://codecov.io/gh/apache/arrow/pull/2139/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvcGFycXVldC5weQ==) | `90.46% <0%> (-0.08%)` | :arrow_down: |\n   | [python/pyarrow/tests/test\\_types.py](https://codecov.io/gh/apache/arrow/pull/2139/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF90eXBlcy5weQ==) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/python/common.h](https://codecov.io/gh/apache/arrow/pull/2139/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vY29tbW9uLmg=) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/tests/test\\_schema.py](https://codecov.io/gh/apache/arrow/pull/2139/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9zY2hlbWEucHk=) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [go/arrow/type\\_traits\\_numeric.gen.go](https://codecov.io/gh/apache/arrow/pull/2139/diff?src=pr&el=tree#diff-Z28vYXJyb3cvdHlwZV90cmFpdHNfbnVtZXJpYy5nZW4uZ28=) | `4.09% <0%> (\u00f8)` | |\n   | [go/arrow/math/int64\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2139/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9pbnQ2NF9hdngyX2FtZDY0Lmdv) | `0% <0%> (\u00f8)` | |\n   | [go/arrow/type\\_traits\\_boolean.go](https://codecov.io/gh/apache/arrow/pull/2139/diff?src=pr&el=tree#diff-Z28vYXJyb3cvdHlwZV90cmFpdHNfYm9vbGVhbi5nbw==) | `0% <0%> (\u00f8)` | |\n   | [go/arrow/array/array.go](https://codecov.io/gh/apache/arrow/pull/2139/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYXJyYXkuZ28=) | `58.97% <0%> (\u00f8)` | |\n   | [go/arrow/memory/buffer.go](https://codecov.io/gh/apache/arrow/pull/2139/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L2J1ZmZlci5nbw==) | `58.53% <0%> (\u00f8)` | |\n   | ... and [46 more](https://codecov.io/gh/apache/arrow/pull/2139/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2139?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2139?src=pr&el=footer). Last update [c9ce215...bb41284](https://codecov.io/gh/apache/arrow/pull/2139?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-03T23:19:44.402+0000",
                    "updated": "2018-07-03T23:19:44.402+0000",
                    "started": "2018-07-03T23:19:44.401+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "118896",
                    "issueId": "13165686"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165686/worklog/118915",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on issue #2139: ARROW-2704: [Java] Change MessageReader API to improve custom message handling for streams\nURL: https://github.com/apache/arrow/pull/2139#issuecomment-402318589\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2139?src=pr&el=h1) Report\n   > Merging [#2139](https://codecov.io/gh/apache/arrow/pull/2139?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/c9ce215b9d22021268a1c2c3a70df99cb4f311c1?src=pr&el=desc) will **decrease** coverage by `2.39%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2139/graphs/tree.svg?token=LpTCFbqVT1&src=pr&height=150&width=650)](https://codecov.io/gh/apache/arrow/pull/2139?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff            @@\n   ##           master    #2139     +/-   ##\n   =========================================\n   - Coverage   86.47%   84.07%   -2.4%     \n   =========================================\n     Files         244      288     +44     \n     Lines       41808    43749   +1941     \n   =========================================\n   + Hits        36155    36784    +629     \n   - Misses       5653     6934   +1281     \n   - Partials        0       31     +31\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2139?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/python/helpers.cc](https://codecov.io/gh/apache/arrow/pull/2139/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vaGVscGVycy5jYw==) | `79.87% <0%> (-3.23%)` | :arrow_down: |\n   | [python/pyarrow/parquet.py](https://codecov.io/gh/apache/arrow/pull/2139/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvcGFycXVldC5weQ==) | `90.46% <0%> (-0.08%)` | :arrow_down: |\n   | [cpp/src/arrow/python/common.h](https://codecov.io/gh/apache/arrow/pull/2139/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vY29tbW9uLmg=) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/tests/test\\_types.py](https://codecov.io/gh/apache/arrow/pull/2139/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF90eXBlcy5weQ==) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/tests/test\\_schema.py](https://codecov.io/gh/apache/arrow/pull/2139/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9zY2hlbWEucHk=) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [go/arrow/type\\_traits\\_numeric.gen.go](https://codecov.io/gh/apache/arrow/pull/2139/diff?src=pr&el=tree#diff-Z28vYXJyb3cvdHlwZV90cmFpdHNfbnVtZXJpYy5nZW4uZ28=) | `4.09% <0%> (\u00f8)` | |\n   | [go/arrow/math/uint64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2139/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYW1kNjQuZ28=) | `33.33% <0%> (\u00f8)` | |\n   | [go/arrow/array/bufferbuilder\\_numeric.gen.go](https://codecov.io/gh/apache/arrow/pull/2139/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYnVmZmVyYnVpbGRlcl9udW1lcmljLmdlbi5nbw==) | `91.66% <0%> (\u00f8)` | |\n   | [go/arrow/type\\_traits\\_boolean.go](https://codecov.io/gh/apache/arrow/pull/2139/diff?src=pr&el=tree#diff-Z28vYXJyb3cvdHlwZV90cmFpdHNfYm9vbGVhbi5nbw==) | `0% <0%> (\u00f8)` | |\n   | [go/arrow/array/boolean.go](https://codecov.io/gh/apache/arrow/pull/2139/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYm9vbGVhbi5nbw==) | `84.61% <0%> (\u00f8)` | |\n   | ... and [45 more](https://codecov.io/gh/apache/arrow/pull/2139/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2139?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2139?src=pr&el=footer). Last update [c9ce215...8b7db9d](https://codecov.io/gh/apache/arrow/pull/2139?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-04T00:18:07.634+0000",
                    "updated": "2018-07-04T00:18:07.634+0000",
                    "started": "2018-07-04T00:18:07.633+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "118915",
                    "issueId": "13165686"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165686/worklog/118928",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on a change in pull request #2139: ARROW-2704: [Java] Change MessageReader API to improve custom message handling for streams\nURL: https://github.com/apache/arrow/pull/2139#discussion_r199984529\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/ipc/message/MessageSerializer.java\n ##########\n @@ -56,19 +56,76 @@\n  */\n public class MessageSerializer {\n \n+  /**\n+   * Convert an array of 4 bytes to a little endian i32 value.\n+   *\n+   * @param bytes byte array with minimum length of 4\n+   * @return converted little endian 32-bit integer\n+   */\n   public static int bytesToInt(byte[] bytes) {\n     return ((bytes[3] & 255) << 24) +\n         ((bytes[2] & 255) << 16) +\n         ((bytes[1] & 255) << 8) +\n         ((bytes[0] & 255) << 0);\n   }\n \n+  /**\n+   * Convert an integer to a 4 byte array.\n+   *\n+   * @param value integer value input\n+   * @param bytes existing byte array with minimum length of 4 to contain the conversion output\n+   */\n+  public static void intToBytes(int value, byte[] bytes) {\n+    bytes[3] = (byte) (value >>> 24);\n+    bytes[2] = (byte) (value >>> 16);\n+    bytes[1] = (byte) (value >>> 8);\n+    bytes[0] = (byte) (value >>> 0);\n+  }\n+\n+  /**\n+   * Writes the message length prefix and message buffer to the Channel.\n+   *\n+   * @param out Output Channel\n+   * @param messageLength Number of bytes in the message buffer, written as little Endian prefix\n+   * @param messageBuffer Message buffer to be written\n+   * @return Number of bytes written\n+   * @throws IOException\n+   */\n+  public static int writeMessageBuffer(WriteChannel out, int messageLength, ByteBuffer messageBuffer) throws IOException {\n+    out.writeIntLittleEndian(messageLength);\n+    out.write(messageBuffer);\n+    return messageLength + 4;\n+  }\n+\n+  /**\n+   * Aligns the message to 8 byte boundary and adjusts messageLength accordingly, then writes\n+   * the message length prefix and message buffer to the Channel.\n+   *\n+   * @param out Output Channel\n+   * @param messageLength Number of bytes in the message buffer, written as little Endian prefix\n+   * @param messageBuffer Message buffer to be written\n+   * @return Number of bytes written\n+   * @return\n+   * @throws IOException\n+   */\n+  public static int writeMessageBufferAligned(WriteChannel out, int messageLength, ByteBuffer messageBuffer) throws IOException {\n \n Review comment:\n   TODO: need tests\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-04T00:47:06.640+0000",
                    "updated": "2018-07-04T00:47:06.640+0000",
                    "started": "2018-07-04T00:47:06.640+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "118928",
                    "issueId": "13165686"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165686/worklog/119503",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on a change in pull request #2139: ARROW-2704: [Java] Change MessageReader API to improve custom message handling for streams\nURL: https://github.com/apache/arrow/pull/2139#discussion_r200439129\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/ipc/message/MessageSerializer.java\n ##########\n @@ -56,19 +56,76 @@\n  */\n public class MessageSerializer {\n \n+  /**\n+   * Convert an array of 4 bytes to a little endian i32 value.\n+   *\n+   * @param bytes byte array with minimum length of 4\n+   * @return converted little endian 32-bit integer\n+   */\n   public static int bytesToInt(byte[] bytes) {\n     return ((bytes[3] & 255) << 24) +\n         ((bytes[2] & 255) << 16) +\n         ((bytes[1] & 255) << 8) +\n         ((bytes[0] & 255) << 0);\n   }\n \n+  /**\n+   * Convert an integer to a 4 byte array.\n+   *\n+   * @param value integer value input\n+   * @param bytes existing byte array with minimum length of 4 to contain the conversion output\n+   */\n+  public static void intToBytes(int value, byte[] bytes) {\n+    bytes[3] = (byte) (value >>> 24);\n+    bytes[2] = (byte) (value >>> 16);\n+    bytes[1] = (byte) (value >>> 8);\n+    bytes[0] = (byte) (value >>> 0);\n+  }\n+\n+  /**\n+   * Writes the message length prefix and message buffer to the Channel.\n+   *\n+   * @param out Output Channel\n+   * @param messageLength Number of bytes in the message buffer, written as little Endian prefix\n+   * @param messageBuffer Message buffer to be written\n+   * @return Number of bytes written\n+   * @throws IOException\n+   */\n+  public static int writeMessageBuffer(WriteChannel out, int messageLength, ByteBuffer messageBuffer) throws IOException {\n+    out.writeIntLittleEndian(messageLength);\n+    out.write(messageBuffer);\n+    return messageLength + 4;\n+  }\n+\n+  /**\n+   * Aligns the message to 8 byte boundary and adjusts messageLength accordingly, then writes\n+   * the message length prefix and message buffer to the Channel.\n+   *\n+   * @param out Output Channel\n+   * @param messageLength Number of bytes in the message buffer, written as little Endian prefix\n+   * @param messageBuffer Message buffer to be written\n+   * @return Number of bytes written\n+   * @return\n+   * @throws IOException\n+   */\n+  public static int writeMessageBufferAligned(WriteChannel out, int messageLength, ByteBuffer messageBuffer) throws IOException {\n \n Review comment:\n   done\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-05T17:58:41.253+0000",
                    "updated": "2018-07-05T17:58:41.253+0000",
                    "started": "2018-07-05T17:58:41.252+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "119503",
                    "issueId": "13165686"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165686/worklog/119508",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler edited a comment on issue #2139: ARROW-2704: [Java] Change MessageReader API to improve custom message handling for streams\nURL: https://github.com/apache/arrow/pull/2139#issuecomment-401980987\n \n \n   **Update**\r\n   \r\n   I made some changes to `MessageReader` that will solve the issues I've been dealing with.  I'll do a better write up later, but here is the gist of the latest changes:  `MessageReader` is now an abstract class with a single public method `readNext`. This can be called repeatably and return false when no more messages in the stream. It takes in a `MessageReadHolder` class that will have variables populated with all data used in the reading of a message, like length, the raw buffer and `Message`.  There are 2 abstract methods `readMessage` and `readBody` that are invoked by `readNext`.\r\n   \r\n   There is one concrete implementation of `MessageReader` that is `MessageChannelReader` that implements the above methods with input from a `ReadChannel` and loads message body data into an `ArrowBuf`.  This reader is used by `ArrowStreamReader` to read messages/data and deserialize into Schema and Record/DictionaryBatches.\r\n   \r\n   When making a custom `MessageReader` you can extend the `MessageReadHolder` as needed and implement the `readMessage` and `readMessageBody` methods to populate it.\r\n   \r\n   The issues I was having with the previous API was that reading a message and body were 2 independent calls and there was no way to get the raw message buffer already read.  Because of this, to make a custom reader required some specific Arrow stream format logic, such as reading the size prefix and checking if there is a message body.  Using the above abstract methods and holder class, a custom reader can be implemented without necessarily reimplementing Arrow stream format specifics.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-05T18:09:26.250+0000",
                    "updated": "2018-07-05T18:09:26.250+0000",
                    "started": "2018-07-05T18:09:26.250+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "119508",
                    "issueId": "13165686"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 69600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@26b0daad[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7bae697c[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@413901f8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@4954652a[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@733e74fb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@7493ca4e[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7d2c23e5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@173b645f[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@17a253ef[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@7d092aef[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@61261da0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@2df39447[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 69600,
        "customfield_12312520": null,
        "customfield_12312521": "Sun Jul 29 18:15:49 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-07-29T18:15:49.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2704/watchers",
            "watchCount": 4,
            "isWatching": false
        },
        "created": "2018-06-12T22:08:42.000+0000",
        "updated": "2018-07-30T00:32:35.000+0000",
        "timeoriginalestimate": null,
        "description": "With some minor adjustments, the Java IPC stream reader could be more friendly to allow for low level message processing.  By that I mean reading a stream and examining messages without necessarily having to load the Record Batch data.  These include \r\n\r\n* Separate MessageChannelReader.readNextMessage to allow access to the buffer containing the message.\r\n* MessageChannelReader input channel should be protected\r\n* ArrowStreamWriter should make the message to end a stream static\r\n* WriteChannel intToBytes could write to existing bytes or byte buffer instead of creating new array",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "19h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 69600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] IPC stream handling should be more friendly to low level processing",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165686/comment/16561219",
                    "id": "16561219",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 2139\n[https://github.com/apache/arrow/pull/2139]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-07-29T18:15:49.761+0000",
                    "updated": "2018-07-29T18:15:49.761+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|i3ush3:",
        "customfield_12314139": null
    }
}