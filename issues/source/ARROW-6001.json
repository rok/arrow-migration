{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13246374",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246374",
    "key": "ARROW-6001",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350591",
                "id": "12350591",
                "description": "",
                "name": "7.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-02-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12566744",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12566744",
                "type": {
                    "id": "12310000",
                    "name": "Duplicate",
                    "inward": "is duplicated by",
                    "outward": "duplicates",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310000"
                },
                "outwardIssue": {
                    "id": "13204560",
                    "key": "ARROW-4032",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204560",
                    "fields": {
                        "summary": "[Python] New pyarrow.Table functions: from_pydict(), from_pylist() and to_pylist()",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                            "name": "Closed",
                            "id": "6",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
                            "name": "Minor",
                            "id": "4"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/3",
                            "id": "3",
                            "description": "A task that needs to be done.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21148&avatarType=issuetype",
                            "name": "Task",
                            "subtask": false,
                            "avatarId": 21148
                        }
                    }
                }
            },
            {
                "id": "12566114",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12566114",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "outwardIssue": {
                    "id": "13228642",
                    "key": "ARROW-5178",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13228642",
                    "fields": {
                        "summary": "[Python] Allow creating Table from Python dict",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=alenka",
            "name": "alenka",
            "key": "alenkaf",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
            },
            "displayName": "Alenka Frim",
            "active": true,
            "timeZone": "Europe/Ljubljana"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=davlee1972%40yahoo.com",
            "name": "davlee1972@yahoo.com",
            "key": "davlee1972@yahoo.com",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Lee",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=davlee1972%40yahoo.com",
            "name": "davlee1972@yahoo.com",
            "key": "davlee1972@yahoo.com",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Lee",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 17400,
            "total": 17400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 17400,
            "total": 17400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6001/votes",
            "votes": 0,
            "hasVoted": false
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 17400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@3fd142bf[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@23a1f5bf[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@405da912[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@6cfda0ab[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5b2a9148[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@48d8a2c6[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@656097f6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@64999b09[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6b36e603[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@66f5b731[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@74b433e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@2fa2d10d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 17400,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Jan 11 13:35:41 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-01-11T13:35:41.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6001/watchers",
            "watchCount": 5,
            "isWatching": false
        },
        "created": "2019-07-22T17:39:11.000+0000",
        "updated": "2022-01-12T20:51:58.000+0000",
        "timeoriginalestimate": null,
        "description": "I noticed that pyarrow.Table.to_pydict() exists, but pyarrow.Table.from_pydict() doesn't exist. There is a proposed ticket to create one, but it doesn't take into account\u00a0potential mismatches between column order and number of columns.\r\n\r\nI'm\u00a0including some code I've written which I've been using to handle arrow conversions to ordered dictionaries and\u00a0lists of dictionaries.. I've also included an example where this can be used to speed up pandas.to_dict() by a factor of 6x.\r\n\r\n\u00a0\r\n{code:java}\r\ndef from_pylist(pylist, names=None, schema=None, safe=True):\r\n\u00a0\u00a0\u00a0 \"\"\"\r\n\u00a0\u00a0\u00a0 Converts a python list of dictionaries to a pyarrow table\r\n\u00a0\u00a0\u00a0 :param pylist: pylist list of dictionaries\r\n\u00a0\u00a0\u00a0 :param names: list of column names\r\n\u00a0\u00a0\u00a0 :param schema: pyarrow schema\r\n\u00a0\u00a0\u00a0 :param safe: True or False\r\n\u00a0\u00a0\u00a0 :return: arrow table\r\n\u00a0\u00a0\u00a0 \"\"\"\r\n\u00a0\u00a0\u00a0 arrow_columns = list()\r\n\u00a0\u00a0\u00a0 if schema:\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for column in schema.names:\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 arrow_columns.append(pa.array([v[column] if column in v else None for v in pylist], safe=safe, type=schema.types[schema.get_field_index(column)]))\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 arrow_table = pa.Table.from_arrays(arrow_columns, schema.names)\r\n\u00a0\u00a0\u00a0 else:\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for column in names:\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 arrow_columns.append(pa.array([v[column] if column in v else None for v in pylist], safe=safe))\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 arrow_table = pa.Table.from_arrays(arrow_columns, names)\r\n\u00a0\u00a0\u00a0 return arrow_table\r\n\r\ndef to_pylist(arrow_table, index_columns=None):\r\n\u00a0\u00a0\u00a0 \"\"\"\r\n\u00a0\u00a0\u00a0 Converts a pyarrow table to a python list of dictionaries\r\n\u00a0\u00a0\u00a0 :param arrow_table: arrow table\r\n\u00a0\u00a0\u00a0 :param index_columns: columns to index\r\n\u00a0\u00a0\u00a0 :return: python list of dictionaries\r\n\u00a0\u00a0\u00a0 \"\"\"\r\n\u00a0\u00a0\u00a0 pydict = arrow_table.to_pydict()\r\n\u00a0\u00a0\u00a0 if index_columns:\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 columns = arrow_table.schema.names\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 columns.append(\"_index\")\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 pylist = [{column: tuple([pydict[index_column][row] for index_column in index_columns]) if column == '_index' else pydict[column][row] for column in columns} for row in range(arrow_table.num_rows)]\r\n\u00a0\u00a0\u00a0 else:\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 pylist = [{column: pydict[column][row] for column in arrow_table.schema.names} for row in range(arrow_table.num_rows)]\r\n\u00a0\u00a0\u00a0 return pylist\r\n\r\ndef from_pydict(pydict, names=None, schema=None, safe=True):\r\n\u00a0\u00a0\u00a0 \"\"\"\r\n\u00a0\u00a0\u00a0 Converts a pyarrow table to a python ordered dictionary\r\n\u00a0\u00a0\u00a0 :param pydict: ordered dictionary\r\n\u00a0\u00a0\u00a0 :param names: list of column names\r\n\u00a0\u00a0\u00a0 :param schema: pyarrow schema\r\n\u00a0\u00a0\u00a0 :param safe: True or False\r\n\u00a0\u00a0\u00a0 :return: arrow table\r\n\u00a0\u00a0\u00a0 \"\"\"\r\n\u00a0\u00a0\u00a0 arrow_columns = list()\r\n\u00a0\u00a0\u00a0 dict_columns = list(pydict.keys())\r\n\u00a0\u00a0\u00a0 if schema:\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for column in schema.names:\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if column in pydict:\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 arrow_columns.append(pa.array(pydict[column], safe=safe, type=schema.types[schema.get_field_index(column)]))\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 else:\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 arrow_columns.append(pa.array([None] * len(pydict[dict_columns[0]]), safe=safe, type=schema.types[schema.get_field_index(column)]))\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 arrow_table = pa.Table.from_arrays(arrow_columns, schema.names)\r\n\u00a0\u00a0\u00a0 else:\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if not names:\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 names = dict_columns\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for column in names:\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if column in dict_columns:\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 arrow_columns.append(pa.array(pydict[column], safe=safe))\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 else:\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 arrow_columns.append(pa.array([None] * len(pydict[dict_columns[0]]), safe=safe))\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 arrow_table = pa.Table.from_arrays(arrow_columns, names)\r\n\u00a0\u00a0\u00a0 return arrow_table\r\n\r\ndef get_indexed_values(arrow_table, index_columns):\r\n\u00a0\u00a0\u00a0 \"\"\"\r\n\u00a0\u00a0\u00a0 returns back a set of unique values for a list of columns.\r\n\u00a0\u00a0\u00a0 :param arrow_table: arrow_table\r\n\u00a0\u00a0\u00a0 :param index_columns: list of column names\r\n\u00a0\u00a0\u00a0 :return: set of tuples\r\n\u00a0\u00a0\u00a0 \"\"\"\r\n\u00a0\u00a0\u00a0 pydict = arrow_table.to_pydict()\r\n\u00a0\u00a0\u00a0 index_set = set([tuple([pydict[index_column][row] for index_column in index_columns]) for row in range(arrow_table.num_rows)])\r\n\u00a0\u00a0\u00a0 return index_set\r\n{code}\r\nHere are my benchmarks using pandas to arrow to python vs of pandas.to_dict()\r\n\r\n\u00a0\r\n{code:java}\r\n# benchmark panda conversion to python objects\r\nprint('**benchmark 1 million rows**')\r\nstart_time = time.time()\r\npython_df1 = panda_df1.to_dict(orient='records')\r\ntotal_time = time.time() - start_time\r\nprint(\"pandas to python: \" + str(total_time))\r\n\r\nstart_time = time.time()\r\narrow_df1 = pa.Table.from_pandas(panda_df1)\r\npydict = arrow_df1.to_pydict()\r\npython_df1 = [{column: pydict[column][row] for column in arrow_df1.schema.names} for row in range(arrow_df1.num_rows)]\r\ntotal_time = time.time() - start_time\r\nprint(\"pandas to arrow to python: \" + str(total_time))\r\n\r\nprint('**benchmark 4 million rows**')\r\nstart_time = time.time()\r\npython_df4 = panda_df4.to_dict(orient='records')\r\ntotal_time = time.time() - start_time\r\nprint(\"pandas to python:: \" + str(total_time))\r\n\r\nstart_time = time.time()\r\narrow_df4 = pa.Table.from_pandas(panda_df4)\r\npydict = arrow_df4.to_pydict()\r\npython_df4 = [{column: pydict[column][row] for column in arrow_df4.schema.names} for row in range(arrow_df4.num_rows)]\r\ntotal_time = time.time() - start_time\r\nprint(\"pandas to arrow to python: \" + str(total_time))\r\n{code}\r\n\u00a0\u00a0\r\n{code:java}\r\n**benchmark 1 million rows**\r\npandas to python: 13.204811334609985\r\npandas to arrow to python: 2.00173282623291\r\n**benchmark 4 million rows**\r\npandas to python:: 51.655067682266235\r\npandas to arrow to python: 8.562284231185913\r\n{code}",
        "customfield_10010": null,
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Add from_pylist() and to_pylist() to pyarrow.Table to convert list of records",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "customfield_12311820": "0|z04wl4:",
        "customfield_12314139": null
    }
}