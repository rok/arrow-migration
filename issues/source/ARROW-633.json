{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13056314",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056314",
    "key": "ARROW-633",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341707",
                "id": "12341707",
                "description": "",
                "name": "0.9.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-03-19"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12498050",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12498050",
                "type": {
                    "id": "10032",
                    "name": "Blocker",
                    "inward": "is blocked by",
                    "outward": "blocks",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10032"
                },
                "outwardIssue": {
                    "id": "13056315",
                    "key": "ARROW-634",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056315",
                    "fields": {
                        "summary": "Add integration tests for FixedSizeBinary",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                            "id": "2",
                            "description": "A new feature of the product, which has yet to be developed.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                            "name": "New Feature",
                            "subtask": false,
                            "avatarId": 21141
                        }
                    }
                }
            },
            {
                "id": "12514016",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12514016",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "outwardIssue": {
                    "id": "13099860",
                    "key": "ARROW-1463",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13099860",
                    "fields": {
                        "summary": "[JAVA] Restructure ValueVector hierarchy to minimize compile-time generated code",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=alphalfalfa",
            "name": "alphalfalfa",
            "key": "alphalfalfa",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Jingyuan Wang",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-633/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6b328dc1[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@16766d35[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@489c48e8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@6d268b0b[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5df137cf[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@163fe675[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3cce3752[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@65e99d13[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3172912e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@5897c53b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@15ae1ddc[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@3c861b7f[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Feb 07 22:35:31 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-02-07T22:35:31.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-633/watchers",
            "watchCount": 4,
            "isWatching": false
        },
        "created": "2017-03-15T15:19:55.000+0000",
        "updated": "2018-02-07T22:55:38.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] Add support for FixedSizeBinary type",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056314/comment/16140529",
                    "id": "16140529",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alphalfalfa",
                        "name": "alphalfalfa",
                        "key": "alphalfalfa",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Jingyuan Wang",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Hi [~julienledem], have started on this one? If not, i'll take a stab at it and Arrow-634",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alphalfalfa",
                        "name": "alphalfalfa",
                        "key": "alphalfalfa",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Jingyuan Wang",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-08-24T19:06:52.774+0000",
                    "updated": "2017-08-24T19:06:52.774+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056314/comment/16156369",
                    "id": "16156369",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Moving off the 0.7.0 milestone since this is related to ARROW-1463",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-09-07T02:57:13.685+0000",
                    "updated": "2017-09-07T02:57:13.685+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056314/comment/16330742",
                    "id": "16330742",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "alphalfalfa opened a new pull request #1492: ARROW-633/634: Add FixedSizeBinary support in Java and integration tests (Updated)\nURL: https://github.com/apache/arrow/pull/1492\n \n \n   The original PR is at https://github.com/apache/arrow/pull/1012. Due to the major refactoring last year, changes are big. So I created this separate PR for easier to review and will cancel the other one later.\r\n   \r\n   Changes include:\r\n   * Arrow-633: [Java] Add support for FixedWidthBinary type\r\n   * Arrow-634: Add integration tests for FixedSizeBinary\r\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-18T16:37:20.380+0000",
                    "updated": "2018-01-18T16:37:20.380+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056314/comment/16330744",
                    "id": "16330744",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "alphalfalfa commented on a change in pull request #1492: ARROW-633/634: Add FixedSizeBinary support in Java and integration tests (Updated)\nURL: https://github.com/apache/arrow/pull/1492#discussion_r162399355\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BaseFixedWidthVector.java\n ##########\n @@ -42,7 +42,7 @@\n  */\n public abstract class BaseFixedWidthVector extends BaseValueVector\n         implements FixedWidthVector, FieldVector, VectorDefinitionSetter {\n-  private final byte typeWidth;\n+  private final int typeWidth;\n \n Review comment:\n   I have not changed the derived vector classes to use integer type. Should I?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-18T16:38:57.615+0000",
                    "updated": "2018-01-18T16:38:57.615+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056314/comment/16330754",
                    "id": "16330754",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "alphalfalfa commented on issue #1492: ARROW-633/634: Add FixedSizeBinary support in Java and integration tests (Updated)\nURL: https://github.com/apache/arrow/pull/1492#issuecomment-358705336\n \n \n   @wesm @icexelloss \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-18T16:41:57.050+0000",
                    "updated": "2018-01-18T16:41:57.050+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056314/comment/16331277",
                    "id": "16331277",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on a change in pull request #1492: ARROW-633/634: Add FixedSizeBinary support in Java and integration tests (Updated)\nURL: https://github.com/apache/arrow/pull/1492#discussion_r162478060\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/FixedSizeBinaryVector.java\n ##########\n @@ -0,0 +1,401 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+import io.netty.buffer.ArrowBuf;\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.vector.complex.impl.FixedSizeBinaryReaderImpl;\n+import org.apache.arrow.vector.complex.reader.FieldReader;\n+import org.apache.arrow.vector.holders.FixedSizeBinaryHolder;\n+import org.apache.arrow.vector.holders.NullableFixedSizeBinaryHolder;\n+import org.apache.arrow.vector.types.Types;\n+import org.apache.arrow.vector.types.pojo.ArrowType.FixedSizeBinary;\n+import org.apache.arrow.vector.types.pojo.FieldType;\n+import org.apache.arrow.vector.util.TransferPair;\n+\n+\n+/**\n+ * FixedSizeBinaryVector implements a fixed width vector of\n+ * binary values which could be null. A validity buffer (bit vector) is\n+ * maintained to track which elements in the vector are null.\n+ */\n+public class FixedSizeBinaryVector extends BaseFixedWidthVector {\n+  private final int byteWidth;\n+  private final FieldReader reader;\n+\n+  /**\n+   * Instantiate a FixedSizeBinaryVector. This doesn't allocate any memory for\n+   * the data in vector.\n+   *\n+   * @param name      name of the vector\n+   * @param allocator allocator for memory management.\n+   * @param byteWidth byte width of the binary values\n+   */\n+  public FixedSizeBinaryVector(String name, BufferAllocator allocator, int byteWidth) {\n+    this(name, FieldType.nullable(new FixedSizeBinary(byteWidth)), allocator);\n+  }\n+\n+  /**\n+   * Instantiate a FixedSizeBinaryVector. This doesn't allocate any memory for\n+   * the data in vector.\n+   *\n+   * @param name      name of the vector\n+   * @param fieldType type of Field materialized by this vector\n+   * @param allocator allocator for memory management.\n+   */\n+  public FixedSizeBinaryVector(String name, FieldType fieldType, BufferAllocator allocator) {\n+    super(name, allocator, fieldType, ((FixedSizeBinary) fieldType.getType()).getByteWidth());\n+    reader = new FixedSizeBinaryReaderImpl(FixedSizeBinaryVector.this);\n+    byteWidth = ((FixedSizeBinary) fieldType.getType()).getByteWidth();\n+  }\n+\n+  /**\n+   * Get a reader that supports reading values from this vector\n+   *\n+   * @return Field Reader for this vector\n+   */\n+  @Override\n+  public FieldReader getReader() {\n+    return reader;\n+  }\n+\n+  /**\n+   * Get minor type for this vector. The vector holds values belonging\n+   * to a particular type.\n+   *\n+   * @return {@link org.apache.arrow.vector.types.Types.MinorType}\n+   */\n+  @Override\n+  public Types.MinorType getMinorType() {\n+    return Types.MinorType.FIXEDSIZEBINARY;\n+  }\n+\n+\n+  /******************************************************************\n+   *                                                                *\n+   *          vector value retrieval methods                        *\n+   *                                                                *\n+   ******************************************************************/\n+\n+\n+  /**\n+   * Get the element at the given index from the vector.\n+   *\n+   * @param index position of element\n+   * @return element at given index\n+   */\n+  public byte[] get(int index) {\n+    if (isSet(index) == 0) {\n+      throw new IllegalStateException(\"Value at index is null\");\n+    }\n+    assert index >= 0;\n+    final byte[] dst = new byte[byteWidth];\n+    valueBuffer.getBytes(index * byteWidth, dst, 0, byteWidth);\n+    return dst;\n+  }\n+\n+  /**\n+   * Get the element at the given index from the vector and\n+   * sets the state in holder. If element at given index\n+   * is null, holder.isSet will be zero.\n+   *\n+   * @param index position of element\n+   * @param holder nullable holder to carry the buffer\n+   */\n+  public void get(int index, NullableFixedSizeBinaryHolder holder) {\n+    if (isSet(index) == 0) {\n+      holder.isSet = 0;\n+      return;\n+    }\n+    holder.isSet = 1;\n+    holder.buffer = valueBuffer.slice(index * byteWidth, byteWidth);\n+  }\n+\n+  /**\n+   * Same as {@link #get(int)}.\n+   *\n+   * @param index position of element\n+   * @return element at given index\n+   */\n+  @Override\n+  public byte[] getObject(int index) {\n+    if (isSet(index) == 0) {\n+      return null;\n+    } else {\n+      return get(index);\n \n Review comment:\n   Unroll this function to avoid duplicate check?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-18T21:42:03.219+0000",
                    "updated": "2018-01-18T21:42:03.219+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056314/comment/16331278",
                    "id": "16331278",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on a change in pull request #1492: ARROW-633/634: Add FixedSizeBinary support in Java and integration tests (Updated)\nURL: https://github.com/apache/arrow/pull/1492#discussion_r162478060\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/FixedSizeBinaryVector.java\n ##########\n @@ -0,0 +1,401 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+import io.netty.buffer.ArrowBuf;\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.vector.complex.impl.FixedSizeBinaryReaderImpl;\n+import org.apache.arrow.vector.complex.reader.FieldReader;\n+import org.apache.arrow.vector.holders.FixedSizeBinaryHolder;\n+import org.apache.arrow.vector.holders.NullableFixedSizeBinaryHolder;\n+import org.apache.arrow.vector.types.Types;\n+import org.apache.arrow.vector.types.pojo.ArrowType.FixedSizeBinary;\n+import org.apache.arrow.vector.types.pojo.FieldType;\n+import org.apache.arrow.vector.util.TransferPair;\n+\n+\n+/**\n+ * FixedSizeBinaryVector implements a fixed width vector of\n+ * binary values which could be null. A validity buffer (bit vector) is\n+ * maintained to track which elements in the vector are null.\n+ */\n+public class FixedSizeBinaryVector extends BaseFixedWidthVector {\n+  private final int byteWidth;\n+  private final FieldReader reader;\n+\n+  /**\n+   * Instantiate a FixedSizeBinaryVector. This doesn't allocate any memory for\n+   * the data in vector.\n+   *\n+   * @param name      name of the vector\n+   * @param allocator allocator for memory management.\n+   * @param byteWidth byte width of the binary values\n+   */\n+  public FixedSizeBinaryVector(String name, BufferAllocator allocator, int byteWidth) {\n+    this(name, FieldType.nullable(new FixedSizeBinary(byteWidth)), allocator);\n+  }\n+\n+  /**\n+   * Instantiate a FixedSizeBinaryVector. This doesn't allocate any memory for\n+   * the data in vector.\n+   *\n+   * @param name      name of the vector\n+   * @param fieldType type of Field materialized by this vector\n+   * @param allocator allocator for memory management.\n+   */\n+  public FixedSizeBinaryVector(String name, FieldType fieldType, BufferAllocator allocator) {\n+    super(name, allocator, fieldType, ((FixedSizeBinary) fieldType.getType()).getByteWidth());\n+    reader = new FixedSizeBinaryReaderImpl(FixedSizeBinaryVector.this);\n+    byteWidth = ((FixedSizeBinary) fieldType.getType()).getByteWidth();\n+  }\n+\n+  /**\n+   * Get a reader that supports reading values from this vector\n+   *\n+   * @return Field Reader for this vector\n+   */\n+  @Override\n+  public FieldReader getReader() {\n+    return reader;\n+  }\n+\n+  /**\n+   * Get minor type for this vector. The vector holds values belonging\n+   * to a particular type.\n+   *\n+   * @return {@link org.apache.arrow.vector.types.Types.MinorType}\n+   */\n+  @Override\n+  public Types.MinorType getMinorType() {\n+    return Types.MinorType.FIXEDSIZEBINARY;\n+  }\n+\n+\n+  /******************************************************************\n+   *                                                                *\n+   *          vector value retrieval methods                        *\n+   *                                                                *\n+   ******************************************************************/\n+\n+\n+  /**\n+   * Get the element at the given index from the vector.\n+   *\n+   * @param index position of element\n+   * @return element at given index\n+   */\n+  public byte[] get(int index) {\n+    if (isSet(index) == 0) {\n+      throw new IllegalStateException(\"Value at index is null\");\n+    }\n+    assert index >= 0;\n+    final byte[] dst = new byte[byteWidth];\n+    valueBuffer.getBytes(index * byteWidth, dst, 0, byteWidth);\n+    return dst;\n+  }\n+\n+  /**\n+   * Get the element at the given index from the vector and\n+   * sets the state in holder. If element at given index\n+   * is null, holder.isSet will be zero.\n+   *\n+   * @param index position of element\n+   * @param holder nullable holder to carry the buffer\n+   */\n+  public void get(int index, NullableFixedSizeBinaryHolder holder) {\n+    if (isSet(index) == 0) {\n+      holder.isSet = 0;\n+      return;\n+    }\n+    holder.isSet = 1;\n+    holder.buffer = valueBuffer.slice(index * byteWidth, byteWidth);\n+  }\n+\n+  /**\n+   * Same as {@link #get(int)}.\n+   *\n+   * @param index position of element\n+   * @return element at given index\n+   */\n+  @Override\n+  public byte[] getObject(int index) {\n+    if (isSet(index) == 0) {\n+      return null;\n+    } else {\n+      return get(index);\n \n Review comment:\n   Expand this function to avoid duplicate check?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-18T21:42:15.326+0000",
                    "updated": "2018-01-18T21:42:15.326+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056314/comment/16331291",
                    "id": "16331291",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on a change in pull request #1492: ARROW-633/634: Add FixedSizeBinary support in Java and integration tests (Updated)\nURL: https://github.com/apache/arrow/pull/1492#discussion_r162480086\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/ipc/JsonFileReader.java\n ##########\n @@ -329,6 +329,36 @@ protected ArrowBuf read(BufferAllocator allocator, int count) throws IOException\n       }\n     };\n \n+    BufferReader FIXEDSIZEBINARY = new BufferReader() {\n+      @Override\n+      protected ArrowBuf read(BufferAllocator allocator, int count) throws IOException {\n+        ArrayList<byte[]> values = Lists.newArrayList();\n+        int byteWidth = 0;\n+        for (int i = 0; i < count; i++) {\n+          parser.nextToken();\n+          final byte[] value = decodeHexSafe(parser.readValueAs(String.class));\n+          values.add(value);\n+          if (value.length > 0) {\n+            if (byteWidth == 0) {\n+              byteWidth = value.length;\n+            } else if (byteWidth != value.length) {\n+              throw new IOException(\"mismatch byte width (\" + value.length + \") at index \" + i + \", expecting \" + byteWidth);\n \n Review comment:\n   Does this mean the input is malformatted? If this is, then it probably shouldn't be IOException..\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-18T21:50:46.423+0000",
                    "updated": "2018-01-18T21:50:46.423+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056314/comment/16331292",
                    "id": "16331292",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on a change in pull request #1492: ARROW-633/634: Add FixedSizeBinary support in Java and integration tests (Updated)\nURL: https://github.com/apache/arrow/pull/1492#discussion_r162480138\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/ipc/JsonFileReader.java\n ##########\n @@ -329,6 +329,36 @@ protected ArrowBuf read(BufferAllocator allocator, int count) throws IOException\n       }\n     };\n \n+    BufferReader FIXEDSIZEBINARY = new BufferReader() {\n+      @Override\n+      protected ArrowBuf read(BufferAllocator allocator, int count) throws IOException {\n+        ArrayList<byte[]> values = Lists.newArrayList();\n+        int byteWidth = 0;\n+        for (int i = 0; i < count; i++) {\n+          parser.nextToken();\n+          final byte[] value = decodeHexSafe(parser.readValueAs(String.class));\n+          values.add(value);\n+          if (value.length > 0) {\n+            if (byteWidth == 0) {\n+              byteWidth = value.length;\n+            } else if (byteWidth != value.length) {\n+              throw new IOException(\"mismatch byte width (\" + value.length + \") at index \" + i + \", expecting \" + byteWidth);\n+            }\n+          }\n+        }\n+        if (count > 0 && byteWidth == 0) {\n+          throw new IOException(\"could not determine the byte width of the vector because all elements are null\");\n \n Review comment:\n   ditto\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-18T21:50:59.447+0000",
                    "updated": "2018-01-18T21:50:59.447+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056314/comment/16331295",
                    "id": "16331295",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on a change in pull request #1492: ARROW-633/634: Add FixedSizeBinary support in Java and integration tests (Updated)\nURL: https://github.com/apache/arrow/pull/1492#discussion_r162480470\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/ipc/JsonFileReader.java\n ##########\n @@ -329,6 +329,36 @@ protected ArrowBuf read(BufferAllocator allocator, int count) throws IOException\n       }\n     };\n \n+    BufferReader FIXEDSIZEBINARY = new BufferReader() {\n+      @Override\n+      protected ArrowBuf read(BufferAllocator allocator, int count) throws IOException {\n+        ArrayList<byte[]> values = Lists.newArrayList();\n+        int byteWidth = 0;\n+        for (int i = 0; i < count; i++) {\n+          parser.nextToken();\n+          final byte[] value = decodeHexSafe(parser.readValueAs(String.class));\n+          values.add(value);\n+          if (value.length > 0) {\n+            if (byteWidth == 0) {\n+              byteWidth = value.length;\n \n Review comment:\n   Can you read the byteWidth from the schema rather than interpret it here?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-18T21:52:22.726+0000",
                    "updated": "2018-01-18T21:52:22.726+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056314/comment/16331298",
                    "id": "16331298",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on a change in pull request #1492: ARROW-633/634: Add FixedSizeBinary support in Java and integration tests (Updated)\nURL: https://github.com/apache/arrow/pull/1492#discussion_r162480803\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/ipc/JsonFileReader.java\n ##########\n @@ -329,6 +329,36 @@ protected ArrowBuf read(BufferAllocator allocator, int count) throws IOException\n       }\n     };\n \n+    BufferReader FIXEDSIZEBINARY = new BufferReader() {\n+      @Override\n+      protected ArrowBuf read(BufferAllocator allocator, int count) throws IOException {\n+        ArrayList<byte[]> values = Lists.newArrayList();\n+        int byteWidth = 0;\n+        for (int i = 0; i < count; i++) {\n+          parser.nextToken();\n+          final byte[] value = decodeHexSafe(parser.readValueAs(String.class));\n+          values.add(value);\n+          if (value.length > 0) {\n+            if (byteWidth == 0) {\n+              byteWidth = value.length;\n+            } else if (byteWidth != value.length) {\n+              throw new IOException(\"mismatch byte width (\" + value.length + \") at index \" + i + \", expecting \" + byteWidth);\n+            }\n+          }\n+        }\n+        if (count > 0 && byteWidth == 0) {\n+          throw new IOException(\"could not determine the byte width of the vector because all elements are null\");\n+        }\n+\n+        ArrowBuf buf = allocator.buffer(byteWidth * count);\n+        for (byte[] value : values) {\n+          buf.writeBytes(value.length == 0? new byte[byteWidth] : value);\n \n Review comment:\n   Why is there an empty value?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-18T21:53:40.618+0000",
                    "updated": "2018-01-18T21:53:40.618+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056314/comment/16331299",
                    "id": "16331299",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on a change in pull request #1492: ARROW-633/634: Add FixedSizeBinary support in Java and integration tests (Updated)\nURL: https://github.com/apache/arrow/pull/1492#discussion_r162480803\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/ipc/JsonFileReader.java\n ##########\n @@ -329,6 +329,36 @@ protected ArrowBuf read(BufferAllocator allocator, int count) throws IOException\n       }\n     };\n \n+    BufferReader FIXEDSIZEBINARY = new BufferReader() {\n+      @Override\n+      protected ArrowBuf read(BufferAllocator allocator, int count) throws IOException {\n+        ArrayList<byte[]> values = Lists.newArrayList();\n+        int byteWidth = 0;\n+        for (int i = 0; i < count; i++) {\n+          parser.nextToken();\n+          final byte[] value = decodeHexSafe(parser.readValueAs(String.class));\n+          values.add(value);\n+          if (value.length > 0) {\n+            if (byteWidth == 0) {\n+              byteWidth = value.length;\n+            } else if (byteWidth != value.length) {\n+              throw new IOException(\"mismatch byte width (\" + value.length + \") at index \" + i + \", expecting \" + byteWidth);\n+            }\n+          }\n+        }\n+        if (count > 0 && byteWidth == 0) {\n+          throw new IOException(\"could not determine the byte width of the vector because all elements are null\");\n+        }\n+\n+        ArrowBuf buf = allocator.buffer(byteWidth * count);\n+        for (byte[] value : values) {\n+          buf.writeBytes(value.length == 0? new byte[byteWidth] : value);\n \n Review comment:\n   Why can there be empty values?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-18T21:53:54.812+0000",
                    "updated": "2018-01-18T21:53:54.812+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056314/comment/16331301",
                    "id": "16331301",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on a change in pull request #1492: ARROW-633/634: Add FixedSizeBinary support in Java and integration tests (Updated)\nURL: https://github.com/apache/arrow/pull/1492#discussion_r162481511\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/FixedSizeBinaryVector.java\n ##########\n @@ -0,0 +1,401 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+import io.netty.buffer.ArrowBuf;\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.vector.complex.impl.FixedSizeBinaryReaderImpl;\n+import org.apache.arrow.vector.complex.reader.FieldReader;\n+import org.apache.arrow.vector.holders.FixedSizeBinaryHolder;\n+import org.apache.arrow.vector.holders.NullableFixedSizeBinaryHolder;\n+import org.apache.arrow.vector.types.Types;\n+import org.apache.arrow.vector.types.pojo.ArrowType.FixedSizeBinary;\n+import org.apache.arrow.vector.types.pojo.FieldType;\n+import org.apache.arrow.vector.util.TransferPair;\n+\n+\n+/**\n+ * FixedSizeBinaryVector implements a fixed width vector of\n+ * binary values which could be null. A validity buffer (bit vector) is\n+ * maintained to track which elements in the vector are null.\n+ */\n+public class FixedSizeBinaryVector extends BaseFixedWidthVector {\n+  private final int byteWidth;\n+  private final FieldReader reader;\n+\n+  /**\n+   * Instantiate a FixedSizeBinaryVector. This doesn't allocate any memory for\n+   * the data in vector.\n+   *\n+   * @param name      name of the vector\n+   * @param allocator allocator for memory management.\n+   * @param byteWidth byte width of the binary values\n+   */\n+  public FixedSizeBinaryVector(String name, BufferAllocator allocator, int byteWidth) {\n+    this(name, FieldType.nullable(new FixedSizeBinary(byteWidth)), allocator);\n+  }\n+\n+  /**\n+   * Instantiate a FixedSizeBinaryVector. This doesn't allocate any memory for\n+   * the data in vector.\n+   *\n+   * @param name      name of the vector\n+   * @param fieldType type of Field materialized by this vector\n+   * @param allocator allocator for memory management.\n+   */\n+  public FixedSizeBinaryVector(String name, FieldType fieldType, BufferAllocator allocator) {\n+    super(name, allocator, fieldType, ((FixedSizeBinary) fieldType.getType()).getByteWidth());\n+    reader = new FixedSizeBinaryReaderImpl(FixedSizeBinaryVector.this);\n+    byteWidth = ((FixedSizeBinary) fieldType.getType()).getByteWidth();\n+  }\n+\n+  /**\n+   * Get a reader that supports reading values from this vector\n+   *\n+   * @return Field Reader for this vector\n+   */\n+  @Override\n+  public FieldReader getReader() {\n+    return reader;\n+  }\n+\n+  /**\n+   * Get minor type for this vector. The vector holds values belonging\n+   * to a particular type.\n+   *\n+   * @return {@link org.apache.arrow.vector.types.Types.MinorType}\n+   */\n+  @Override\n+  public Types.MinorType getMinorType() {\n+    return Types.MinorType.FIXEDSIZEBINARY;\n+  }\n+\n+\n+  /******************************************************************\n+   *                                                                *\n+   *          vector value retrieval methods                        *\n+   *                                                                *\n+   ******************************************************************/\n+\n+\n+  /**\n+   * Get the element at the given index from the vector.\n+   *\n+   * @param index position of element\n+   * @return element at given index\n+   */\n+  public byte[] get(int index) {\n+    if (isSet(index) == 0) {\n+      throw new IllegalStateException(\"Value at index is null\");\n+    }\n+    assert index >= 0;\n+    final byte[] dst = new byte[byteWidth];\n+    valueBuffer.getBytes(index * byteWidth, dst, 0, byteWidth);\n+    return dst;\n+  }\n+\n+  /**\n+   * Get the element at the given index from the vector and\n+   * sets the state in holder. If element at given index\n+   * is null, holder.isSet will be zero.\n+   *\n+   * @param index position of element\n+   * @param holder nullable holder to carry the buffer\n+   */\n+  public void get(int index, NullableFixedSizeBinaryHolder holder) {\n+    if (isSet(index) == 0) {\n+      holder.isSet = 0;\n+      return;\n+    }\n+    holder.isSet = 1;\n+    holder.buffer = valueBuffer.slice(index * byteWidth, byteWidth);\n+  }\n+\n+  /**\n+   * Same as {@link #get(int)}.\n+   *\n+   * @param index position of element\n+   * @return element at given index\n+   */\n+  @Override\n+  public byte[] getObject(int index) {\n+    if (isSet(index) == 0) {\n+      return null;\n+    } else {\n+      return get(index);\n+    }\n+  }\n+\n+  /**\n+   * Copy a cell value from a particular index in source vector to a particular\n+   * position in this vector\n+   *\n+   * @param fromIndex position to copy from in source vector\n+   * @param thisIndex position to copy to in this vector\n+   * @param from      source vector\n+   */\n+  public void copyFrom(int fromIndex, int thisIndex, FixedSizeBinaryVector from) {\n+    BitVectorHelper.setValidityBit(validityBuffer, thisIndex, from.isSet(fromIndex));\n+    from.valueBuffer.getBytes(fromIndex * byteWidth, valueBuffer,\n+        thisIndex * byteWidth, byteWidth);\n+  }\n+\n+  /**\n+   * Same as {@link #copyFrom(int, int, FixedSizeBinaryVector)} except that\n+   * it handles the case when the capacity of the vector needs to be expanded\n+   * before copy.\n+   *\n+   * @param fromIndex position to copy from in source vector\n+   * @param thisIndex position to copy to in this vector\n+   * @param from      source vector\n+   */\n+  public void copyFromSafe(int fromIndex, int thisIndex, FixedSizeBinaryVector from) {\n+    handleSafe(thisIndex);\n+    copyFrom(fromIndex, thisIndex, from);\n+  }\n+\n+  public int getByteWidth() {\n+    return byteWidth;\n+  }\n+\n+\n+  /******************************************************************\n+   *                                                                *\n+   *          vector value setter methods                           *\n+   *                                                                *\n+   ******************************************************************/\n+\n+  public void set(int index, byte[] value) {\n+    assert index >= 0;\n+    assert byteWidth <= value.length;\n+    BitVectorHelper.setValidityBitToOne(validityBuffer, index);\n+    valueBuffer.setBytes(index * byteWidth, value, 0, byteWidth);\n+  }\n+\n+  public void setSafe(int index, byte[] value) {\n+    handleSafe(index);\n+    set(index, value);\n+  }\n+\n+  public void set(int index, int isSet, byte[] value) {\n+    if (isSet > 0) {\n+      set(index, value);\n+    } else {\n+      BitVectorHelper.setValidityBit(validityBuffer, index, 0);\n+    }\n+  }\n+\n+  public void setSafe(int index, int isSet, byte[] value) {\n+    handleSafe(index);\n+    set(index, isSet, value);\n+  }\n+\n+  /**\n+   * Set the element at the given index to the given value.\n+   *\n+   * @param index  position of element\n+   * @param buffer ArrowBuf containing binary value.\n+   */\n+  public void set(int index, ArrowBuf buffer) {\n+    assert index >= 0;\n+    assert byteWidth <= buffer.capacity();\n+    BitVectorHelper.setValidityBitToOne(validityBuffer, index);\n+    valueBuffer.setBytes(index * byteWidth, buffer, 0, byteWidth);\n+  }\n+\n+  /**\n+   * Same as {@link #set(int, ArrowBuf)} except that it handles the\n+   * case when index is greater than or equal to existing\n+   * value capacity {@link #getValueCapacity()}.\n+   *\n+   * @param index  position of element\n+   * @param buffer ArrowBuf containing binary value.\n+   */\n+  public void setSafe(int index, ArrowBuf buffer) {\n+    handleSafe(index);\n+    set(index, buffer);\n+  }\n+\n+  /**\n+   * Set the element at the given index to the given value.\n+   *\n+   * @param index  position of element\n+   * @param buffer ArrowBuf containing binary value.\n+   */\n+  public void set(int index, int isSet, ArrowBuf buffer) {\n+    if (isSet > 0) {\n+      set(index, buffer);\n+    } else {\n+      BitVectorHelper.setValidityBit(validityBuffer, index, 0);\n+    }\n+  }\n+\n+  /**\n+   * Same as {@link #set(int, ArrowBuf)} except that it handles the\n+   * case when index is greater than or equal to existing\n+   * value capacity {@link #getValueCapacity()}.\n+   *\n+   * @param index  position of element\n+   * @param buffer ArrowBuf containing binary value.\n+   */\n+  public void setSafe(int index, int isSet, ArrowBuf buffer) {\n+    handleSafe(index);\n+    set(index, isSet, buffer);\n+  }\n+\n+  /**\n+   * Set the variable length element at the specified index to the data\n+   * buffer supplied in the holder\n+   *\n+   * @param index   position of the element to set\n+   * @param holder  holder that carries data buffer.\n+   */\n+  public void set(int index, FixedSizeBinaryHolder holder) {\n+    assert holder.byteWidth == byteWidth;\n+    set(index, holder.buffer);\n+  }\n+\n+  /**\n+   * Same as {@link #set(int, FixedSizeBinaryHolder)} except that it handles the\n+   * case where index and length of new element are beyond the existing\n+   * capacity of the vector.\n+   *\n+   * @param index   position of the element to set\n+   * @param holder  holder that carries data buffer.\n+   */\n+  public void setSafe(int index, FixedSizeBinaryHolder holder) {\n+    handleSafe(index);\n+    set(index, holder);\n+  }\n+\n+  /**\n+   * Set the variable length element at the specified index to the data\n+   * buffer supplied in the holder\n+   *\n+   * @param index   position of the element to set\n+   * @param holder  holder that carries data buffer.\n+   */\n+  public void set(int index, NullableFixedSizeBinaryHolder holder) {\n \n Review comment:\n   Should we call this `FixedSizeBinaryHolder` instead?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-18T21:56:20.652+0000",
                    "updated": "2018-01-18T21:56:20.652+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056314/comment/16331302",
                    "id": "16331302",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on a change in pull request #1492: ARROW-633/634: Add FixedSizeBinary support in Java and integration tests (Updated)\nURL: https://github.com/apache/arrow/pull/1492#discussion_r162481613\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/FixedSizeBinaryVector.java\n ##########\n @@ -0,0 +1,401 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+import io.netty.buffer.ArrowBuf;\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.vector.complex.impl.FixedSizeBinaryReaderImpl;\n+import org.apache.arrow.vector.complex.reader.FieldReader;\n+import org.apache.arrow.vector.holders.FixedSizeBinaryHolder;\n+import org.apache.arrow.vector.holders.NullableFixedSizeBinaryHolder;\n+import org.apache.arrow.vector.types.Types;\n+import org.apache.arrow.vector.types.pojo.ArrowType.FixedSizeBinary;\n+import org.apache.arrow.vector.types.pojo.FieldType;\n+import org.apache.arrow.vector.util.TransferPair;\n+\n+\n+/**\n+ * FixedSizeBinaryVector implements a fixed width vector of\n+ * binary values which could be null. A validity buffer (bit vector) is\n+ * maintained to track which elements in the vector are null.\n+ */\n+public class FixedSizeBinaryVector extends BaseFixedWidthVector {\n+  private final int byteWidth;\n+  private final FieldReader reader;\n+\n+  /**\n+   * Instantiate a FixedSizeBinaryVector. This doesn't allocate any memory for\n+   * the data in vector.\n+   *\n+   * @param name      name of the vector\n+   * @param allocator allocator for memory management.\n+   * @param byteWidth byte width of the binary values\n+   */\n+  public FixedSizeBinaryVector(String name, BufferAllocator allocator, int byteWidth) {\n+    this(name, FieldType.nullable(new FixedSizeBinary(byteWidth)), allocator);\n+  }\n+\n+  /**\n+   * Instantiate a FixedSizeBinaryVector. This doesn't allocate any memory for\n+   * the data in vector.\n+   *\n+   * @param name      name of the vector\n+   * @param fieldType type of Field materialized by this vector\n+   * @param allocator allocator for memory management.\n+   */\n+  public FixedSizeBinaryVector(String name, FieldType fieldType, BufferAllocator allocator) {\n+    super(name, allocator, fieldType, ((FixedSizeBinary) fieldType.getType()).getByteWidth());\n+    reader = new FixedSizeBinaryReaderImpl(FixedSizeBinaryVector.this);\n+    byteWidth = ((FixedSizeBinary) fieldType.getType()).getByteWidth();\n+  }\n+\n+  /**\n+   * Get a reader that supports reading values from this vector\n+   *\n+   * @return Field Reader for this vector\n+   */\n+  @Override\n+  public FieldReader getReader() {\n+    return reader;\n+  }\n+\n+  /**\n+   * Get minor type for this vector. The vector holds values belonging\n+   * to a particular type.\n+   *\n+   * @return {@link org.apache.arrow.vector.types.Types.MinorType}\n+   */\n+  @Override\n+  public Types.MinorType getMinorType() {\n+    return Types.MinorType.FIXEDSIZEBINARY;\n+  }\n+\n+\n+  /******************************************************************\n+   *                                                                *\n+   *          vector value retrieval methods                        *\n+   *                                                                *\n+   ******************************************************************/\n+\n+\n+  /**\n+   * Get the element at the given index from the vector.\n+   *\n+   * @param index position of element\n+   * @return element at given index\n+   */\n+  public byte[] get(int index) {\n+    if (isSet(index) == 0) {\n+      throw new IllegalStateException(\"Value at index is null\");\n+    }\n+    assert index >= 0;\n+    final byte[] dst = new byte[byteWidth];\n+    valueBuffer.getBytes(index * byteWidth, dst, 0, byteWidth);\n+    return dst;\n+  }\n+\n+  /**\n+   * Get the element at the given index from the vector and\n+   * sets the state in holder. If element at given index\n+   * is null, holder.isSet will be zero.\n+   *\n+   * @param index position of element\n+   * @param holder nullable holder to carry the buffer\n+   */\n+  public void get(int index, NullableFixedSizeBinaryHolder holder) {\n+    if (isSet(index) == 0) {\n+      holder.isSet = 0;\n+      return;\n+    }\n+    holder.isSet = 1;\n+    holder.buffer = valueBuffer.slice(index * byteWidth, byteWidth);\n+  }\n+\n+  /**\n+   * Same as {@link #get(int)}.\n+   *\n+   * @param index position of element\n+   * @return element at given index\n+   */\n+  @Override\n+  public byte[] getObject(int index) {\n+    if (isSet(index) == 0) {\n+      return null;\n+    } else {\n+      return get(index);\n+    }\n+  }\n+\n+  /**\n+   * Copy a cell value from a particular index in source vector to a particular\n+   * position in this vector\n+   *\n+   * @param fromIndex position to copy from in source vector\n+   * @param thisIndex position to copy to in this vector\n+   * @param from      source vector\n+   */\n+  public void copyFrom(int fromIndex, int thisIndex, FixedSizeBinaryVector from) {\n+    BitVectorHelper.setValidityBit(validityBuffer, thisIndex, from.isSet(fromIndex));\n+    from.valueBuffer.getBytes(fromIndex * byteWidth, valueBuffer,\n+        thisIndex * byteWidth, byteWidth);\n+  }\n+\n+  /**\n+   * Same as {@link #copyFrom(int, int, FixedSizeBinaryVector)} except that\n+   * it handles the case when the capacity of the vector needs to be expanded\n+   * before copy.\n+   *\n+   * @param fromIndex position to copy from in source vector\n+   * @param thisIndex position to copy to in this vector\n+   * @param from      source vector\n+   */\n+  public void copyFromSafe(int fromIndex, int thisIndex, FixedSizeBinaryVector from) {\n+    handleSafe(thisIndex);\n+    copyFrom(fromIndex, thisIndex, from);\n+  }\n+\n+  public int getByteWidth() {\n+    return byteWidth;\n+  }\n+\n+\n+  /******************************************************************\n+   *                                                                *\n+   *          vector value setter methods                           *\n+   *                                                                *\n+   ******************************************************************/\n+\n+  public void set(int index, byte[] value) {\n+    assert index >= 0;\n+    assert byteWidth <= value.length;\n+    BitVectorHelper.setValidityBitToOne(validityBuffer, index);\n+    valueBuffer.setBytes(index * byteWidth, value, 0, byteWidth);\n+  }\n+\n+  public void setSafe(int index, byte[] value) {\n+    handleSafe(index);\n+    set(index, value);\n+  }\n+\n+  public void set(int index, int isSet, byte[] value) {\n+    if (isSet > 0) {\n+      set(index, value);\n+    } else {\n+      BitVectorHelper.setValidityBit(validityBuffer, index, 0);\n+    }\n+  }\n+\n+  public void setSafe(int index, int isSet, byte[] value) {\n+    handleSafe(index);\n+    set(index, isSet, value);\n+  }\n+\n+  /**\n+   * Set the element at the given index to the given value.\n+   *\n+   * @param index  position of element\n+   * @param buffer ArrowBuf containing binary value.\n+   */\n+  public void set(int index, ArrowBuf buffer) {\n+    assert index >= 0;\n+    assert byteWidth <= buffer.capacity();\n+    BitVectorHelper.setValidityBitToOne(validityBuffer, index);\n+    valueBuffer.setBytes(index * byteWidth, buffer, 0, byteWidth);\n+  }\n+\n+  /**\n+   * Same as {@link #set(int, ArrowBuf)} except that it handles the\n+   * case when index is greater than or equal to existing\n+   * value capacity {@link #getValueCapacity()}.\n+   *\n+   * @param index  position of element\n+   * @param buffer ArrowBuf containing binary value.\n+   */\n+  public void setSafe(int index, ArrowBuf buffer) {\n+    handleSafe(index);\n+    set(index, buffer);\n+  }\n+\n+  /**\n+   * Set the element at the given index to the given value.\n+   *\n+   * @param index  position of element\n+   * @param buffer ArrowBuf containing binary value.\n+   */\n+  public void set(int index, int isSet, ArrowBuf buffer) {\n+    if (isSet > 0) {\n+      set(index, buffer);\n+    } else {\n+      BitVectorHelper.setValidityBit(validityBuffer, index, 0);\n+    }\n+  }\n+\n+  /**\n+   * Same as {@link #set(int, ArrowBuf)} except that it handles the\n+   * case when index is greater than or equal to existing\n+   * value capacity {@link #getValueCapacity()}.\n+   *\n+   * @param index  position of element\n+   * @param buffer ArrowBuf containing binary value.\n+   */\n+  public void setSafe(int index, int isSet, ArrowBuf buffer) {\n+    handleSafe(index);\n+    set(index, isSet, buffer);\n+  }\n+\n+  /**\n+   * Set the variable length element at the specified index to the data\n+   * buffer supplied in the holder\n+   *\n+   * @param index   position of the element to set\n+   * @param holder  holder that carries data buffer.\n+   */\n+  public void set(int index, FixedSizeBinaryHolder holder) {\n+    assert holder.byteWidth == byteWidth;\n+    set(index, holder.buffer);\n+  }\n+\n+  /**\n+   * Same as {@link #set(int, FixedSizeBinaryHolder)} except that it handles the\n+   * case where index and length of new element are beyond the existing\n+   * capacity of the vector.\n+   *\n+   * @param index   position of the element to set\n+   * @param holder  holder that carries data buffer.\n+   */\n+  public void setSafe(int index, FixedSizeBinaryHolder holder) {\n+    handleSafe(index);\n+    set(index, holder);\n+  }\n+\n+  /**\n+   * Set the variable length element at the specified index to the data\n+   * buffer supplied in the holder\n+   *\n+   * @param index   position of the element to set\n+   * @param holder  holder that carries data buffer.\n+   */\n+  public void set(int index, NullableFixedSizeBinaryHolder holder) {\n+    assert holder.byteWidth == byteWidth;\n+    if (holder.isSet < 0) {\n+      throw new IllegalArgumentException(\"holder has a negative isSet value\");\n+    } else if (holder.isSet > 0) {\n+      set(index, holder.buffer);\n+    } else {\n+      BitVectorHelper.setValidityBit(validityBuffer, index, 0);\n+    }\n+  }\n+\n+  /**\n+   * Same as {@link #set(int, NullableFixedSizeBinaryHolder)} except that it handles the\n+   * case where index and length of new element are beyond the existing\n+   * capacity of the vector.\n+   *\n+   * @param index   position of the element to set\n+   * @param holder  holder that carries data buffer.\n+   */\n+  public void setSafe(int index, NullableFixedSizeBinaryHolder holder) {\n+    handleSafe(index);\n+    set(index, holder);\n+  }\n+\n+  public void setNull(int index) {\n+    handleSafe(index);\n+    BitVectorHelper.setValidityBit(validityBuffer, index, 0);\n+  }\n+\n+  /**\n+   * Given a data buffer, get the value stored at a particular position\n+   * in the vector.\n+   *\n+   * This method should not be used externally.\n+   *\n+   * @param buffer data buffer\n+   * @param index position of the element.\n+   * @return value stored at the index.\n+   */\n+  public static byte[] get(final ArrowBuf buffer, final int index, final int byteWidth) {\n+    final byte[] dst = new byte[byteWidth];\n+    buffer.getBytes(index * byteWidth, dst, 0, byteWidth);\n+    return dst;\n+  }\n+\n+  /******************************************************************\n+   *                                                                *\n+   *                      vector transfer                           *\n+   *                                                                *\n+   ******************************************************************/\n+\n+\n+  /**\n+   * Construct a TransferPair comprising of this and and a target vector of\n+   * the same type.\n+   *\n+   * @param ref       name of the target vector\n+   * @param allocator allocator for the target vector\n+   * @return {@link TransferPair}\n+   */\n+  @Override\n+  public TransferPair getTransferPair(String ref, BufferAllocator allocator) {\n+    return new TransferImpl(ref, allocator);\n+  }\n+\n+  /**\n+   * Construct a TransferPair with a desired target vector of the same type.\n+   *\n+   * @param to target vector\n+   * @return {@link TransferPair}\n+   */\n+  @Override\n+  public TransferPair makeTransferPair(ValueVector to) {\n+    return new TransferImpl((FixedSizeBinaryVector) to);\n+  }\n+\n+  private class TransferImpl implements TransferPair {\n+    FixedSizeBinaryVector to;\n+\n+    public TransferImpl(String ref, BufferAllocator allocator) {\n+      to = new FixedSizeBinaryVector(ref, allocator, FixedSizeBinaryVector.this.byteWidth);\n+    }\n+\n+    public TransferImpl(FixedSizeBinaryVector to) {\n+      this.to = to;\n+    }\n+\n+    @Override\n+    public FixedSizeBinaryVector getTo() {\n+      return to;\n+    }\n+\n+    @Override\n+    public void transfer() {\n+      transferTo(to);\n+    }\n+\n+    @Override\n+    public void splitAndTransfer(int startIndex, int length) {\n+      splitAndTransferTo(startIndex, length, to);\n+    }\n+\n+    @Override\n+    public void copyValueSafe(int fromIndex, int toIndex) {\n+      to.copyFromSafe(fromIndex, toIndex, FixedSizeBinaryVector.this);\n+    }\n+  }\n+}\n \n Review comment:\n   Need a newline\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-18T21:56:45.555+0000",
                    "updated": "2018-01-18T21:56:45.555+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056314/comment/16331331",
                    "id": "16331331",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on issue #1492: ARROW-633/634: Add FixedSizeBinary support in Java and integration tests (Updated)\nURL: https://github.com/apache/arrow/pull/1492#issuecomment-358799254\n \n \n   High level looks good to me. Need to come back and look in more detail.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-18T22:13:18.306+0000",
                    "updated": "2018-01-18T22:13:18.306+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056314/comment/16332833",
                    "id": "16332833",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "alphalfalfa commented on a change in pull request #1492: ARROW-633/634: Add FixedSizeBinary support in Java and integration tests (Updated)\nURL: https://github.com/apache/arrow/pull/1492#discussion_r162717961\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/FixedSizeBinaryVector.java\n ##########\n @@ -0,0 +1,401 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+import io.netty.buffer.ArrowBuf;\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.vector.complex.impl.FixedSizeBinaryReaderImpl;\n+import org.apache.arrow.vector.complex.reader.FieldReader;\n+import org.apache.arrow.vector.holders.FixedSizeBinaryHolder;\n+import org.apache.arrow.vector.holders.NullableFixedSizeBinaryHolder;\n+import org.apache.arrow.vector.types.Types;\n+import org.apache.arrow.vector.types.pojo.ArrowType.FixedSizeBinary;\n+import org.apache.arrow.vector.types.pojo.FieldType;\n+import org.apache.arrow.vector.util.TransferPair;\n+\n+\n+/**\n+ * FixedSizeBinaryVector implements a fixed width vector of\n+ * binary values which could be null. A validity buffer (bit vector) is\n+ * maintained to track which elements in the vector are null.\n+ */\n+public class FixedSizeBinaryVector extends BaseFixedWidthVector {\n+  private final int byteWidth;\n+  private final FieldReader reader;\n+\n+  /**\n+   * Instantiate a FixedSizeBinaryVector. This doesn't allocate any memory for\n+   * the data in vector.\n+   *\n+   * @param name      name of the vector\n+   * @param allocator allocator for memory management.\n+   * @param byteWidth byte width of the binary values\n+   */\n+  public FixedSizeBinaryVector(String name, BufferAllocator allocator, int byteWidth) {\n+    this(name, FieldType.nullable(new FixedSizeBinary(byteWidth)), allocator);\n+  }\n+\n+  /**\n+   * Instantiate a FixedSizeBinaryVector. This doesn't allocate any memory for\n+   * the data in vector.\n+   *\n+   * @param name      name of the vector\n+   * @param fieldType type of Field materialized by this vector\n+   * @param allocator allocator for memory management.\n+   */\n+  public FixedSizeBinaryVector(String name, FieldType fieldType, BufferAllocator allocator) {\n+    super(name, allocator, fieldType, ((FixedSizeBinary) fieldType.getType()).getByteWidth());\n+    reader = new FixedSizeBinaryReaderImpl(FixedSizeBinaryVector.this);\n+    byteWidth = ((FixedSizeBinary) fieldType.getType()).getByteWidth();\n+  }\n+\n+  /**\n+   * Get a reader that supports reading values from this vector\n+   *\n+   * @return Field Reader for this vector\n+   */\n+  @Override\n+  public FieldReader getReader() {\n+    return reader;\n+  }\n+\n+  /**\n+   * Get minor type for this vector. The vector holds values belonging\n+   * to a particular type.\n+   *\n+   * @return {@link org.apache.arrow.vector.types.Types.MinorType}\n+   */\n+  @Override\n+  public Types.MinorType getMinorType() {\n+    return Types.MinorType.FIXEDSIZEBINARY;\n+  }\n+\n+\n+  /******************************************************************\n+   *                                                                *\n+   *          vector value retrieval methods                        *\n+   *                                                                *\n+   ******************************************************************/\n+\n+\n+  /**\n+   * Get the element at the given index from the vector.\n+   *\n+   * @param index position of element\n+   * @return element at given index\n+   */\n+  public byte[] get(int index) {\n+    if (isSet(index) == 0) {\n+      throw new IllegalStateException(\"Value at index is null\");\n+    }\n+    assert index >= 0;\n+    final byte[] dst = new byte[byteWidth];\n+    valueBuffer.getBytes(index * byteWidth, dst, 0, byteWidth);\n+    return dst;\n+  }\n+\n+  /**\n+   * Get the element at the given index from the vector and\n+   * sets the state in holder. If element at given index\n+   * is null, holder.isSet will be zero.\n+   *\n+   * @param index position of element\n+   * @param holder nullable holder to carry the buffer\n+   */\n+  public void get(int index, NullableFixedSizeBinaryHolder holder) {\n+    if (isSet(index) == 0) {\n+      holder.isSet = 0;\n+      return;\n+    }\n+    holder.isSet = 1;\n+    holder.buffer = valueBuffer.slice(index * byteWidth, byteWidth);\n+  }\n+\n+  /**\n+   * Same as {@link #get(int)}.\n+   *\n+   * @param index position of element\n+   * @return element at given index\n+   */\n+  @Override\n+  public byte[] getObject(int index) {\n+    if (isSet(index) == 0) {\n+      return null;\n+    } else {\n+      return get(index);\n \n Review comment:\n   expanded\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-19T19:57:01.649+0000",
                    "updated": "2018-01-19T19:57:01.649+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056314/comment/16332835",
                    "id": "16332835",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "alphalfalfa commented on a change in pull request #1492: ARROW-633/634: Add FixedSizeBinary support in Java and integration tests (Updated)\nURL: https://github.com/apache/arrow/pull/1492#discussion_r162718122\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/ipc/JsonFileReader.java\n ##########\n @@ -329,6 +329,36 @@ protected ArrowBuf read(BufferAllocator allocator, int count) throws IOException\n       }\n     };\n \n+    BufferReader FIXEDSIZEBINARY = new BufferReader() {\n+      @Override\n+      protected ArrowBuf read(BufferAllocator allocator, int count) throws IOException {\n+        ArrayList<byte[]> values = Lists.newArrayList();\n+        int byteWidth = 0;\n+        for (int i = 0; i < count; i++) {\n+          parser.nextToken();\n+          final byte[] value = decodeHexSafe(parser.readValueAs(String.class));\n+          values.add(value);\n+          if (value.length > 0) {\n+            if (byteWidth == 0) {\n+              byteWidth = value.length;\n+            } else if (byteWidth != value.length) {\n+              throw new IOException(\"mismatch byte width (\" + value.length + \") at index \" + i + \", expecting \" + byteWidth);\n \n Review comment:\n   Changed to RuntimeException\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-19T19:57:40.273+0000",
                    "updated": "2018-01-19T19:57:40.273+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056314/comment/16332836",
                    "id": "16332836",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "alphalfalfa commented on a change in pull request #1492: ARROW-633/634: Add FixedSizeBinary support in Java and integration tests (Updated)\nURL: https://github.com/apache/arrow/pull/1492#discussion_r162718154\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/ipc/JsonFileReader.java\n ##########\n @@ -329,6 +329,36 @@ protected ArrowBuf read(BufferAllocator allocator, int count) throws IOException\n       }\n     };\n \n+    BufferReader FIXEDSIZEBINARY = new BufferReader() {\n+      @Override\n+      protected ArrowBuf read(BufferAllocator allocator, int count) throws IOException {\n+        ArrayList<byte[]> values = Lists.newArrayList();\n+        int byteWidth = 0;\n+        for (int i = 0; i < count; i++) {\n+          parser.nextToken();\n+          final byte[] value = decodeHexSafe(parser.readValueAs(String.class));\n+          values.add(value);\n+          if (value.length > 0) {\n+            if (byteWidth == 0) {\n+              byteWidth = value.length;\n+            } else if (byteWidth != value.length) {\n+              throw new IOException(\"mismatch byte width (\" + value.length + \") at index \" + i + \", expecting \" + byteWidth);\n+            }\n+          }\n+        }\n+        if (count > 0 && byteWidth == 0) {\n+          throw new IOException(\"could not determine the byte width of the vector because all elements are null\");\n \n Review comment:\n   changed to RuntimeException\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-19T19:57:49.845+0000",
                    "updated": "2018-01-19T19:57:49.845+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056314/comment/16332838",
                    "id": "16332838",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "alphalfalfa commented on a change in pull request #1492: ARROW-633/634: Add FixedSizeBinary support in Java and integration tests (Updated)\nURL: https://github.com/apache/arrow/pull/1492#discussion_r162718337\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/ipc/JsonFileReader.java\n ##########\n @@ -329,6 +329,36 @@ protected ArrowBuf read(BufferAllocator allocator, int count) throws IOException\n       }\n     };\n \n+    BufferReader FIXEDSIZEBINARY = new BufferReader() {\n+      @Override\n+      protected ArrowBuf read(BufferAllocator allocator, int count) throws IOException {\n+        ArrayList<byte[]> values = Lists.newArrayList();\n+        int byteWidth = 0;\n+        for (int i = 0; i < count; i++) {\n+          parser.nextToken();\n+          final byte[] value = decodeHexSafe(parser.readValueAs(String.class));\n+          values.add(value);\n+          if (value.length > 0) {\n+            if (byteWidth == 0) {\n+              byteWidth = value.length;\n \n Review comment:\n   byteWidth info is now collected from the vector and passed in\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-19T19:58:39.574+0000",
                    "updated": "2018-01-19T19:58:39.574+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056314/comment/16332839",
                    "id": "16332839",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "alphalfalfa commented on a change in pull request #1492: ARROW-633/634: Add FixedSizeBinary support in Java and integration tests (Updated)\nURL: https://github.com/apache/arrow/pull/1492#discussion_r162718558\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/ipc/JsonFileReader.java\n ##########\n @@ -329,6 +329,36 @@ protected ArrowBuf read(BufferAllocator allocator, int count) throws IOException\n       }\n     };\n \n+    BufferReader FIXEDSIZEBINARY = new BufferReader() {\n+      @Override\n+      protected ArrowBuf read(BufferAllocator allocator, int count) throws IOException {\n+        ArrayList<byte[]> values = Lists.newArrayList();\n+        int byteWidth = 0;\n+        for (int i = 0; i < count; i++) {\n+          parser.nextToken();\n+          final byte[] value = decodeHexSafe(parser.readValueAs(String.class));\n+          values.add(value);\n+          if (value.length > 0) {\n+            if (byteWidth == 0) {\n+              byteWidth = value.length;\n+            } else if (byteWidth != value.length) {\n+              throw new IOException(\"mismatch byte width (\" + value.length + \") at index \" + i + \", expecting \" + byteWidth);\n+            }\n+          }\n+        }\n+        if (count > 0 && byteWidth == 0) {\n+          throw new IOException(\"could not determine the byte width of the vector because all elements are null\");\n+        }\n+\n+        ArrowBuf buf = allocator.buffer(byteWidth * count);\n+        for (byte[] value : values) {\n+          buf.writeBytes(value.length == 0? new byte[byteWidth] : value);\n \n Review comment:\n   For nullable vectors, when the value is null, the corresponding JSON field is empty.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-19T19:59:31.981+0000",
                    "updated": "2018-01-19T19:59:31.981+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056314/comment/16336443",
                    "id": "16336443",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "alphalfalfa commented on a change in pull request #1492: ARROW-633/634: Add FixedSizeBinary support in Java and integration tests (Updated)\nURL: https://github.com/apache/arrow/pull/1492#discussion_r163391479\n \n \n\n ##########\n File path: integration/integration_test.py\n ##########\n @@ -525,6 +568,22 @@ def _get_buffers(self):\n         ]\n \n \n+class FixedSizeBinaryColumn(PrimitiveColumn):\n+\n+    def _encode_value(self, x):\n+        return ''.join('{:02x}'.format(c).upper() for c in x)\n+\n+    def _get_buffers(self):\n+        data = []\n+        for i, v in enumerate(self.values):\n+            data.append(self._encode_value(v if self.is_valid[i] else \"\"))\n \n Review comment:\n   made the changes and simplified the logic inside JsonFileReader\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-23T22:02:38.335+0000",
                    "updated": "2018-01-23T22:02:38.335+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056314/comment/16338021",
                    "id": "16338021",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on a change in pull request #1492: ARROW-633/634: Add FixedSizeBinary support in Java and integration tests (Updated)\nURL: https://github.com/apache/arrow/pull/1492#discussion_r163633215\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/ipc/JsonFileWriter.java\n ##########\n @@ -173,9 +176,9 @@ private void writeFromVectorIntoJson(Field field, FieldVector vector) throws IOE\n         for (int i = 0; i < bufferValueCount; i++) {\n           if (bufferType.equals(DATA) && (vector.getMinorType() == Types.MinorType.VARCHAR ||\n                   vector.getMinorType() == Types.MinorType.VARBINARY)) {\n-            writeValueToGenerator(bufferType, vectorBuffer, vectorBuffers.get(v-1), vector, i, scale);\n+            writeValueToGenerator(bufferType, vectorBuffer, vectorBuffers.get(v-1), vector, i, scale, byteWidth);\n \n Review comment:\n   This method doesn't need to take `scale` and `byteWidth`. It can figure this out from `vector`.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-24T18:19:49.122+0000",
                    "updated": "2018-01-24T18:19:49.122+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056314/comment/16338149",
                    "id": "16338149",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "alphalfalfa commented on a change in pull request #1492: ARROW-633/634: Add FixedSizeBinary support in Java and integration tests (Updated)\nURL: https://github.com/apache/arrow/pull/1492#discussion_r163662582\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/ipc/JsonFileWriter.java\n ##########\n @@ -173,9 +176,9 @@ private void writeFromVectorIntoJson(Field field, FieldVector vector) throws IOE\n         for (int i = 0; i < bufferValueCount; i++) {\n           if (bufferType.equals(DATA) && (vector.getMinorType() == Types.MinorType.VARCHAR ||\n                   vector.getMinorType() == Types.MinorType.VARBINARY)) {\n-            writeValueToGenerator(bufferType, vectorBuffer, vectorBuffers.get(v-1), vector, i, scale);\n+            writeValueToGenerator(bufferType, vectorBuffer, vectorBuffers.get(v-1), vector, i, scale, byteWidth);\n \n Review comment:\n   good catch, modified.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-24T20:03:44.993+0000",
                    "updated": "2018-01-24T20:03:44.993+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056314/comment/16344126",
                    "id": "16344126",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1492: ARROW-633/634: Add FixedSizeBinary support in Java and integration tests (Updated)\nURL: https://github.com/apache/arrow/pull/1492#issuecomment-361410327\n \n \n   @siddharthteotia @jacques-n could we get some more eyes on this? Thanks!\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-29T22:34:00.431+0000",
                    "updated": "2018-01-29T22:34:00.431+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056314/comment/16346013",
                    "id": "16346013",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "BryanCutler commented on a change in pull request #1492: ARROW-633/634: Add FixedSizeBinary support in Java and integration tests (Updated)\nURL: https://github.com/apache/arrow/pull/1492#discussion_r164912910\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/TypeLayout.java\n ##########\n @@ -136,6 +137,11 @@ public TypeLayout visit(Decimal type) {\n         return newFixedWidthTypeLayout(BufferLayout.dataBuffer(128));\n       }\n \n+      @Override\n+      public TypeLayout visit(FixedSizeBinary type) {\n+        return newFixedWidthTypeLayout(BufferLayout.dataBuffer(type.getByteWidth() * 8));\n \n Review comment:\n   could you just do?\r\n   ```\r\n   return newFixedWidthTypeLayout(new BufferLayout(BufferType.DATA, type.getByteWidth() * 8)\r\n   ```\r\n   \r\n   Then you don't need to `BufferLayout dataBuffer(int typeBitWidth)`\r\n   and then keep the \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-31T00:02:28.116+0000",
                    "updated": "2018-01-31T00:02:28.116+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056314/comment/16346014",
                    "id": "16346014",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "BryanCutler commented on a change in pull request #1492: ARROW-633/634: Add FixedSizeBinary support in Java and integration tests (Updated)\nURL: https://github.com/apache/arrow/pull/1492#discussion_r164915458\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/ipc/JsonFileReader.java\n ##########\n @@ -329,6 +329,26 @@ protected ArrowBuf read(BufferAllocator allocator, int count) throws IOException\n       }\n     };\n \n+    BufferReader FIXEDSIZEBINARY = new BufferReader() {\n+      @Override\n+      protected ArrowBuf read(BufferAllocator allocator, int count) throws IOException {\n+        ArrayList<byte[]> values = Lists.newArrayList();\n+        for (int i = 0; i < count; i++) {\n+          parser.nextToken();\n+          final byte[] value = decodeHexSafe(parser.readValueAs(String.class));\n+          values.add(value);\n+        }\n+\n+        int byteWidth = count > 0? values.get(0).length : 0;\n \n Review comment:\n   nit: add space before `?`\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-31T00:02:28.137+0000",
                    "updated": "2018-01-31T00:02:28.137+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056314/comment/16346015",
                    "id": "16346015",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "BryanCutler commented on a change in pull request #1492: ARROW-633/634: Add FixedSizeBinary support in Java and integration tests (Updated)\nURL: https://github.com/apache/arrow/pull/1492#discussion_r164915043\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BufferLayout.java\n ##########\n @@ -70,7 +70,7 @@ public static BufferLayout dataBuffer(int typeBitWidth) {\n       case 128:\n         return VALUES_128;\n       default:\n-        throw new IllegalArgumentException(\"only 8, 16, 32, or 64 bits supported\");\n+        return new BufferLayout(BufferType.DATA, typeBitWidth);\n \n Review comment:\n   I think function is really \"get data buffer layout for types that support certain bit widths\" - so it might be beneficial to keep the exception, although it looks like it should be updated to include 128.  I'm not sure how exactly the exception would be thrown, but if somehow a buffer layout for an `Int` with 30 bit width was created, this would catch it.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-31T00:02:28.138+0000",
                    "updated": "2018-01-31T00:02:28.138+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056314/comment/16346016",
                    "id": "16346016",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "BryanCutler commented on a change in pull request #1492: ARROW-633/634: Add FixedSizeBinary support in Java and integration tests (Updated)\nURL: https://github.com/apache/arrow/pull/1492#discussion_r164907758\n \n \n\n ##########\n File path: integration/integration_test.py\n ##########\n @@ -463,6 +463,46 @@ def generate_column(self, size, name=None):\n         return self.column_class(name, size, is_valid, values)\n \n \n+class FixedSizeBinaryType(PrimitiveType):\n+\n+    def __init__(self, name, byte_width, nullable=True):\n+        PrimitiveType.__init__(self, name, nullable)\n \n Review comment:\n   minor: I think `super(..).__init__(..)` is a little better\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-31T00:02:28.140+0000",
                    "updated": "2018-01-31T00:02:28.140+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056314/comment/16346017",
                    "id": "16346017",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "BryanCutler commented on a change in pull request #1492: ARROW-633/634: Add FixedSizeBinary support in Java and integration tests (Updated)\nURL: https://github.com/apache/arrow/pull/1492#discussion_r164910348\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BaseFixedWidthVector.java\n ##########\n @@ -42,7 +42,7 @@\n  */\n public abstract class BaseFixedWidthVector extends BaseValueVector\n         implements FixedWidthVector, FieldVector, VectorDefinitionSetter {\n-  private final byte typeWidth;\n+  private final int typeWidth;\n \n Review comment:\n   Maybe if you can update `BitVector` since it currently casts down to a byte\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-31T00:02:28.145+0000",
                    "updated": "2018-01-31T00:02:28.145+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056314/comment/16347272",
                    "id": "16347272",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "alphalfalfa commented on a change in pull request #1492: ARROW-633/634: Add FixedSizeBinary support in Java and integration tests (Updated)\nURL: https://github.com/apache/arrow/pull/1492#discussion_r165134381\n \n \n\n ##########\n File path: integration/integration_test.py\n ##########\n @@ -463,6 +463,46 @@ def generate_column(self, size, name=None):\n         return self.column_class(name, size, is_valid, values)\n \n \n+class FixedSizeBinaryType(PrimitiveType):\n+\n+    def __init__(self, name, byte_width, nullable=True):\n+        PrimitiveType.__init__(self, name, nullable)\n \n Review comment:\n   fixed\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-31T17:54:50.422+0000",
                    "updated": "2018-01-31T17:54:50.422+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056314/comment/16347273",
                    "id": "16347273",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "alphalfalfa commented on a change in pull request #1492: ARROW-633/634: Add FixedSizeBinary support in Java and integration tests (Updated)\nURL: https://github.com/apache/arrow/pull/1492#discussion_r165134571\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BufferLayout.java\n ##########\n @@ -70,7 +70,7 @@ public static BufferLayout dataBuffer(int typeBitWidth) {\n       case 128:\n         return VALUES_128;\n       default:\n-        throw new IllegalArgumentException(\"only 8, 16, 32, or 64 bits supported\");\n+        return new BufferLayout(BufferType.DATA, typeBitWidth);\n \n Review comment:\n   reverted and added 128 bits to the exception message\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-31T17:55:27.522+0000",
                    "updated": "2018-01-31T17:55:27.522+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056314/comment/16347275",
                    "id": "16347275",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "alphalfalfa commented on a change in pull request #1492: ARROW-633/634: Add FixedSizeBinary support in Java and integration tests (Updated)\nURL: https://github.com/apache/arrow/pull/1492#discussion_r165134636\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/TypeLayout.java\n ##########\n @@ -136,6 +137,11 @@ public TypeLayout visit(Decimal type) {\n         return newFixedWidthTypeLayout(BufferLayout.dataBuffer(128));\n       }\n \n+      @Override\n+      public TypeLayout visit(FixedSizeBinary type) {\n+        return newFixedWidthTypeLayout(BufferLayout.dataBuffer(type.getByteWidth() * 8));\n \n Review comment:\n   fixed\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-31T17:55:41.203+0000",
                    "updated": "2018-01-31T17:55:41.203+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056314/comment/16347276",
                    "id": "16347276",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "alphalfalfa commented on a change in pull request #1492: ARROW-633/634: Add FixedSizeBinary support in Java and integration tests (Updated)\nURL: https://github.com/apache/arrow/pull/1492#discussion_r165134681\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/ipc/JsonFileReader.java\n ##########\n @@ -329,6 +329,26 @@ protected ArrowBuf read(BufferAllocator allocator, int count) throws IOException\n       }\n     };\n \n+    BufferReader FIXEDSIZEBINARY = new BufferReader() {\n+      @Override\n+      protected ArrowBuf read(BufferAllocator allocator, int count) throws IOException {\n+        ArrayList<byte[]> values = Lists.newArrayList();\n+        for (int i = 0; i < count; i++) {\n+          parser.nextToken();\n+          final byte[] value = decodeHexSafe(parser.readValueAs(String.class));\n+          values.add(value);\n+        }\n+\n+        int byteWidth = count > 0? values.get(0).length : 0;\n \n Review comment:\n   fixed\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-31T17:55:52.159+0000",
                    "updated": "2018-01-31T17:55:52.159+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056314/comment/16350612",
                    "id": "16350612",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on issue #1492: ARROW-633/634: Add FixedSizeBinary support in Java and integration tests (Updated)\nURL: https://github.com/apache/arrow/pull/1492#issuecomment-362634964\n \n \n   @siddharthteotia Do you think we can merge this? LGTM but want to double check with you.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-02T16:30:55.154+0000",
                    "updated": "2018-02-02T16:30:55.154+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056314/comment/16355633",
                    "id": "16355633",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "jacques-n commented on issue #1492: ARROW-633/634: [Java] Add FixedSizeBinary support in Java and integration tests (Updated)\nURL: https://github.com/apache/arrow/pull/1492#issuecomment-363815734\n \n \n   It seems like we are missing support in the ComplexWriter and FieldReader interfaces. I think that should be included in introduction of these things. The patch here looks fine but I think we should include that before releasing this feature (either in this patch or a follow-up).\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-07T15:59:53.141+0000",
                    "updated": "2018-02-07T15:59:53.141+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056314/comment/16355636",
                    "id": "16355636",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "jacques-n commented on issue #1492: ARROW-633/634: [Java] Add FixedSizeBinary support in Java and integration tests (Updated)\nURL: https://github.com/apache/arrow/pull/1492#issuecomment-363816473\n \n \n   Per my comment, I'm +1 on the spirit on these changes but think the patch (or feature) is somewhat incomplete\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-07T16:01:46.866+0000",
                    "updated": "2018-02-07T16:01:46.866+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056314/comment/16355983",
                    "id": "16355983",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "alphalfalfa commented on issue #1492: ARROW-633/634: [Java] Add FixedSizeBinary support in Java and integration tests (Updated)\nURL: https://github.com/apache/arrow/pull/1492#issuecomment-363893785\n \n \n   @jacques-n, to make sure that I understand the question properly, do you mean there should be proper interfaces defined for FixedSizeBinary type inside AbstractFieldWriter and AbstractFieldReader? \r\n   Currently, AbstractFieldWriter has:\r\n     `public void writeFixedSizeBinary(ArrowBuf buffer)`\r\n   AbstractFieldReaderWriter has:\r\n     `public byte[] readByteArray()`\r\n   What would be the desired interfaces to add?\r\n   \r\n   I would prefer to add the necessary fix in a separate PR as this one has grown too big if it is OK. \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-07T20:05:49.831+0000",
                    "updated": "2018-02-07T20:05:49.831+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056314/comment/16356172",
                    "id": "16356172",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "jacques-n commented on issue #1492: ARROW-633/634: [Java] Add FixedSizeBinary support in Java and integration tests (Updated)\nURL: https://github.com/apache/arrow/pull/1492#issuecomment-363932089\n \n \n   You're right. I forgot that the code is autogenerated and was looking for it here. I'm +1 on this PR. \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-07T22:25:43.749+0000",
                    "updated": "2018-02-07T22:25:43.749+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056314/comment/16356177",
                    "id": "16356177",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1492: ARROW-633/634: [Java] Add FixedSizeBinary support in Java and integration tests (Updated)\nURL: https://github.com/apache/arrow/pull/1492#issuecomment-363934376\n \n \n   thanks all, please open any follow-up JIRAs\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-07T22:34:29.421+0000",
                    "updated": "2018-02-07T22:34:29.421+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13056314/comment/16356179",
                    "id": "16356179",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 1492\n[https://github.com/apache/arrow/pull/1492]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-02-07T22:35:31.069+0000",
                    "updated": "2018-02-07T22:35:31.069+0000"
                }
            ],
            "maxResults": 40,
            "total": 40,
            "startAt": 0
        },
        "customfield_12311820": "0|i3cb3b:",
        "customfield_12314139": null
    }
}