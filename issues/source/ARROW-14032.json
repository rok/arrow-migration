{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13401934",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401934",
    "key": "ARROW-14032",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350591",
                "id": "12350591",
                "description": "",
                "name": "7.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-02-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": null,
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
            "name": "Closed",
            "id": "6",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334626",
                "id": "12334626",
                "name": "C++ - Gandiva"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=augustoasilva",
            "name": "augustoasilva",
            "key": "augustoasilva",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Augusto Alves Silva",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=augustoasilva",
            "name": "augustoasilva",
            "key": "augustoasilva",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Augusto Alves Silva",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 18000,
            "total": 18000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 18000,
            "total": 18000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14032/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 30,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401934/worklog/652489",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva opened a new pull request #11180:\nURL: https://github.com/apache/arrow/pull/11180\n\n\n   Returns the string resulting from concatenating the stringses passed in as parameters in order with a custom separator.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-17T22:24:49.212+0000",
                    "updated": "2021-09-17T22:24:49.212+0000",
                    "started": "2021-09-17T22:24:49.212+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "652489",
                    "issueId": "13401934"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401934/worklog/652490",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11180:\nURL: https://github.com/apache/arrow/pull/11180#issuecomment-922113698\n\n\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-17T22:25:02.549+0000",
                    "updated": "2021-09-17T22:25:02.549+0000",
                    "started": "2021-09-17T22:25:02.549+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "652490",
                    "issueId": "13401934"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401934/worklog/674400",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vvellanki commented on a change in pull request #11180:\nURL: https://github.com/apache/arrow/pull/11180#discussion_r741641131\n\n\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,56 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8(int64_t context, const char* separator,\n+                                  int32_t separator_len, const char* data,\n+                                  int32_t data_len, int32_t* out_len) {\n+  if (data_len <= 0) {\n+    gdv_fn_context_set_error_msg(context, \"Data can not be null.\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  std::string concat = \"\";\n+  std::string data_str(data, data_len);\n+  std::string sep(separator, separator_len);\n+\n+  size_t pos_str = 0;\n+  std::string token;\n+  while ((pos_str = data_str.find(',')) != std::string::npos) {\n\nReview comment:\n       The Hive function documentation has nothing about splitting the input by ','. Why are we doing this?\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,56 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8(int64_t context, const char* separator,\n\nReview comment:\n       This function should take at least 2 const char* as input and concat those. This is taking only one input (data)\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,56 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8(int64_t context, const char* separator,\n+                                  int32_t separator_len, const char* data,\n+                                  int32_t data_len, int32_t* out_len) {\n+  if (data_len <= 0) {\n+    gdv_fn_context_set_error_msg(context, \"Data can not be null.\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  std::string concat = \"\";\n+  std::string data_str(data, data_len);\n\nReview comment:\n       Please do not use this pattern - this does a memcpy and allocates memory\r\n   \r\n   We should allocate memory for the output and then iterate over all the input buffers and copy them/separator to the output buffer\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-03T06:16:58.907+0000",
                    "updated": "2021-11-03T06:16:58.907+0000",
                    "started": "2021-11-03T06:16:58.907+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "674400",
                    "issueId": "13401934"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401934/worklog/675017",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva commented on a change in pull request #11180:\nURL: https://github.com/apache/arrow/pull/11180#discussion_r742407407\n\n\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,56 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8(int64_t context, const char* separator,\n\nReview comment:\n       Should I do functions that take upt to 5 inputs, like the elt function?\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,56 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8(int64_t context, const char* separator,\n+                                  int32_t separator_len, const char* data,\n+                                  int32_t data_len, int32_t* out_len) {\n+  if (data_len <= 0) {\n+    gdv_fn_context_set_error_msg(context, \"Data can not be null.\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  std::string concat = \"\";\n+  std::string data_str(data, data_len);\n\nReview comment:\n       Fixed.\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,56 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8(int64_t context, const char* separator,\n+                                  int32_t separator_len, const char* data,\n+                                  int32_t data_len, int32_t* out_len) {\n+  if (data_len <= 0) {\n+    gdv_fn_context_set_error_msg(context, \"Data can not be null.\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  std::string concat = \"\";\n+  std::string data_str(data, data_len);\n+  std::string sep(separator, separator_len);\n+\n+  size_t pos_str = 0;\n+  std::string token;\n+  while ((pos_str = data_str.find(',')) != std::string::npos) {\n\nReview comment:\n       It was to simulate a variadic function with an undefined number of arguments, but I corrected it to have a fixed number of parameters\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-03T22:59:25.415+0000",
                    "updated": "2021-11-03T22:59:25.415+0000",
                    "started": "2021-11-03T22:59:25.415+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "675017",
                    "issueId": "13401934"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401934/worklog/675151",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vvellanki commented on a change in pull request #11180:\nURL: https://github.com/apache/arrow/pull/11180#discussion_r741641131\n\n\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,56 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8(int64_t context, const char* separator,\n+                                  int32_t separator_len, const char* data,\n+                                  int32_t data_len, int32_t* out_len) {\n+  if (data_len <= 0) {\n+    gdv_fn_context_set_error_msg(context, \"Data can not be null.\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  std::string concat = \"\";\n+  std::string data_str(data, data_len);\n+  std::string sep(separator, separator_len);\n+\n+  size_t pos_str = 0;\n+  std::string token;\n+  while ((pos_str = data_str.find(',')) != std::string::npos) {\n\nReview comment:\n       The Hive function documentation has nothing about splitting the input by ','. Why are we doing this?\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,56 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8(int64_t context, const char* separator,\n\nReview comment:\n       This function should take at least 2 const char* as input and concat those. This is taking only one input (data)\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,56 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8(int64_t context, const char* separator,\n+                                  int32_t separator_len, const char* data,\n+                                  int32_t data_len, int32_t* out_len) {\n+  if (data_len <= 0) {\n+    gdv_fn_context_set_error_msg(context, \"Data can not be null.\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  std::string concat = \"\";\n+  std::string data_str(data, data_len);\n\nReview comment:\n       Please do not use this pattern - this does a memcpy and allocates memory\r\n   \r\n   We should allocate memory for the output and then iterate over all the input buffers and copy them/separator to the output buffer\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-04T00:17:13.483+0000",
                    "updated": "2021-11-04T00:17:13.483+0000",
                    "started": "2021-11-04T00:17:13.482+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "675151",
                    "issueId": "13401934"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401934/worklog/675364",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva commented on a change in pull request #11180:\nURL: https://github.com/apache/arrow/pull/11180#discussion_r742407407\n\n\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,56 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8(int64_t context, const char* separator,\n\nReview comment:\n       Should I do functions that take upt to 5 inputs, like the elt function?\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,56 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8(int64_t context, const char* separator,\n+                                  int32_t separator_len, const char* data,\n+                                  int32_t data_len, int32_t* out_len) {\n+  if (data_len <= 0) {\n+    gdv_fn_context_set_error_msg(context, \"Data can not be null.\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  std::string concat = \"\";\n+  std::string data_str(data, data_len);\n\nReview comment:\n       Fixed.\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,56 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8(int64_t context, const char* separator,\n+                                  int32_t separator_len, const char* data,\n+                                  int32_t data_len, int32_t* out_len) {\n+  if (data_len <= 0) {\n+    gdv_fn_context_set_error_msg(context, \"Data can not be null.\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  std::string concat = \"\";\n+  std::string data_str(data, data_len);\n+  std::string sep(separator, separator_len);\n+\n+  size_t pos_str = 0;\n+  std::string token;\n+  while ((pos_str = data_str.find(',')) != std::string::npos) {\n\nReview comment:\n       It was to simulate a variadic function with an undefined number of arguments, but I corrected it to have a fixed number of parameters\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,56 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8(int64_t context, const char* separator,\n\nReview comment:\n       Should I do functions that take upt to 5 inputs, like the elt function?\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,56 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8(int64_t context, const char* separator,\n+                                  int32_t separator_len, const char* data,\n+                                  int32_t data_len, int32_t* out_len) {\n+  if (data_len <= 0) {\n+    gdv_fn_context_set_error_msg(context, \"Data can not be null.\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  std::string concat = \"\";\n+  std::string data_str(data, data_len);\n\nReview comment:\n       Fixed.\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,56 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8(int64_t context, const char* separator,\n+                                  int32_t separator_len, const char* data,\n+                                  int32_t data_len, int32_t* out_len) {\n+  if (data_len <= 0) {\n+    gdv_fn_context_set_error_msg(context, \"Data can not be null.\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  std::string concat = \"\";\n+  std::string data_str(data, data_len);\n+  std::string sep(separator, separator_len);\n+\n+  size_t pos_str = 0;\n+  std::string token;\n+  while ((pos_str = data_str.find(',')) != std::string::npos) {\n\nReview comment:\n       It was to simulate a variadic function with an undefined number of arguments, but I corrected it to have a fixed number of parameters\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-04T00:43:16.571+0000",
                    "updated": "2021-11-04T00:43:16.571+0000",
                    "started": "2021-11-04T00:43:16.571+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "675364",
                    "issueId": "13401934"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401934/worklog/675581",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vvellanki commented on a change in pull request #11180:\nURL: https://github.com/apache/arrow/pull/11180#discussion_r741641131\n\n\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,56 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8(int64_t context, const char* separator,\n+                                  int32_t separator_len, const char* data,\n+                                  int32_t data_len, int32_t* out_len) {\n+  if (data_len <= 0) {\n+    gdv_fn_context_set_error_msg(context, \"Data can not be null.\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  std::string concat = \"\";\n+  std::string data_str(data, data_len);\n+  std::string sep(separator, separator_len);\n+\n+  size_t pos_str = 0;\n+  std::string token;\n+  while ((pos_str = data_str.find(',')) != std::string::npos) {\n\nReview comment:\n       The Hive function documentation has nothing about splitting the input by ','. Why are we doing this?\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,56 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8(int64_t context, const char* separator,\n\nReview comment:\n       This function should take at least 2 const char* as input and concat those. This is taking only one input (data)\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,56 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8(int64_t context, const char* separator,\n+                                  int32_t separator_len, const char* data,\n+                                  int32_t data_len, int32_t* out_len) {\n+  if (data_len <= 0) {\n+    gdv_fn_context_set_error_msg(context, \"Data can not be null.\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  std::string concat = \"\";\n+  std::string data_str(data, data_len);\n\nReview comment:\n       Please do not use this pattern - this does a memcpy and allocates memory\r\n   \r\n   We should allocate memory for the output and then iterate over all the input buffers and copy them/separator to the output buffer\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-04T01:04:30.917+0000",
                    "updated": "2021-11-04T01:04:30.917+0000",
                    "started": "2021-11-04T01:04:30.917+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "675581",
                    "issueId": "13401934"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401934/worklog/675873",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vvellanki commented on a change in pull request #11180:\nURL: https://github.com/apache/arrow/pull/11180#discussion_r741641131\n\n\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,56 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8(int64_t context, const char* separator,\n+                                  int32_t separator_len, const char* data,\n+                                  int32_t data_len, int32_t* out_len) {\n+  if (data_len <= 0) {\n+    gdv_fn_context_set_error_msg(context, \"Data can not be null.\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  std::string concat = \"\";\n+  std::string data_str(data, data_len);\n+  std::string sep(separator, separator_len);\n+\n+  size_t pos_str = 0;\n+  std::string token;\n+  while ((pos_str = data_str.find(',')) != std::string::npos) {\n\nReview comment:\n       The Hive function documentation has nothing about splitting the input by ','. Why are we doing this?\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,56 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8(int64_t context, const char* separator,\n\nReview comment:\n       This function should take at least 2 const char* as input and concat those. This is taking only one input (data)\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,56 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8(int64_t context, const char* separator,\n+                                  int32_t separator_len, const char* data,\n+                                  int32_t data_len, int32_t* out_len) {\n+  if (data_len <= 0) {\n+    gdv_fn_context_set_error_msg(context, \"Data can not be null.\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  std::string concat = \"\";\n+  std::string data_str(data, data_len);\n\nReview comment:\n       Please do not use this pattern - this does a memcpy and allocates memory\r\n   \r\n   We should allocate memory for the output and then iterate over all the input buffers and copy them/separator to the output buffer\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-04T01:36:55.163+0000",
                    "updated": "2021-11-04T01:36:55.163+0000",
                    "started": "2021-11-04T01:36:55.163+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "675873",
                    "issueId": "13401934"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401934/worklog/676118",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva commented on a change in pull request #11180:\nURL: https://github.com/apache/arrow/pull/11180#discussion_r742407407\n\n\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,56 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8(int64_t context, const char* separator,\n\nReview comment:\n       Should I do functions that take upt to 5 inputs, like the elt function?\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,56 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8(int64_t context, const char* separator,\n+                                  int32_t separator_len, const char* data,\n+                                  int32_t data_len, int32_t* out_len) {\n+  if (data_len <= 0) {\n+    gdv_fn_context_set_error_msg(context, \"Data can not be null.\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  std::string concat = \"\";\n+  std::string data_str(data, data_len);\n\nReview comment:\n       Fixed.\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,56 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8(int64_t context, const char* separator,\n+                                  int32_t separator_len, const char* data,\n+                                  int32_t data_len, int32_t* out_len) {\n+  if (data_len <= 0) {\n+    gdv_fn_context_set_error_msg(context, \"Data can not be null.\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  std::string concat = \"\";\n+  std::string data_str(data, data_len);\n+  std::string sep(separator, separator_len);\n+\n+  size_t pos_str = 0;\n+  std::string token;\n+  while ((pos_str = data_str.find(',')) != std::string::npos) {\n\nReview comment:\n       It was to simulate a variadic function with an undefined number of arguments, but I corrected it to have a fixed number of parameters\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-04T02:00:34.390+0000",
                    "updated": "2021-11-04T02:00:34.390+0000",
                    "started": "2021-11-04T02:00:34.389+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "676118",
                    "issueId": "13401934"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401934/worklog/676886",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vvellanki commented on a change in pull request #11180:\nURL: https://github.com/apache/arrow/pull/11180#discussion_r743387907\n\n\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,56 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8(int64_t context, const char* separator,\n\nReview comment:\n       yes, that's what you should do\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-05T04:46:15.909+0000",
                    "updated": "2021-11-05T04:46:15.909+0000",
                    "started": "2021-11-05T04:46:15.909+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "676886",
                    "issueId": "13401934"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401934/worklog/676890",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vvellanki commented on a change in pull request #11180:\nURL: https://github.com/apache/arrow/pull/11180#discussion_r743392283\n\n\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,132 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8_utf8(int64_t context, const char* separator,\n+                                       int32_t separator_len, const char* word1,\n+                                       int32_t word1_len, const char* word2,\n+                                       int32_t word2_len, int32_t* out_len) {\n+  if (word1_len <= 0 && word2_len <= 0) {\n+    gdv_fn_context_set_error_msg(context, \"All words can not be null.\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  *out_len = word1_len + separator_len + word2_len;\n+  char* out = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(context, *out_len));\n+  if (out == nullptr) {\n+    gdv_fn_context_set_error_msg(context, \"Could not allocate memory for output string\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  strncpy(out, word1, word1_len);\n\nReview comment:\n       The input can include \\0. You cannot use strncpy. Please use memcpy instead\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,132 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8_utf8(int64_t context, const char* separator,\n+                                       int32_t separator_len, const char* word1,\n+                                       int32_t word1_len, const char* word2,\n+                                       int32_t word2_len, int32_t* out_len) {\n+  if (word1_len <= 0 && word2_len <= 0) {\n\nReview comment:\n       Arrow has validity bits and data values - if a value is null, the validity bit will be false\r\n   \r\n   0 length strings are valid inputs... none of the inputs can have negative lengths. You should check for that\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,132 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8_utf8(int64_t context, const char* separator,\n+                                       int32_t separator_len, const char* word1,\n+                                       int32_t word1_len, const char* word2,\n+                                       int32_t word2_len, int32_t* out_len) {\n+  if (word1_len <= 0 && word2_len <= 0) {\n+    gdv_fn_context_set_error_msg(context, \"All words can not be null.\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  *out_len = word1_len + separator_len + word2_len;\n+  char* out = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(context, *out_len));\n+  if (out == nullptr) {\n+    gdv_fn_context_set_error_msg(context, \"Could not allocate memory for output string\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  strncpy(out, word1, word1_len);\n+  out[word1_len] = '\\0';\n+  strncat(out, separator, separator_len);\n+  strncat(out, word2, word2_len);\n\nReview comment:\n       Same here\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,132 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8_utf8(int64_t context, const char* separator,\n+                                       int32_t separator_len, const char* word1,\n+                                       int32_t word1_len, const char* word2,\n+                                       int32_t word2_len, int32_t* out_len) {\n+  if (word1_len <= 0 && word2_len <= 0) {\n+    gdv_fn_context_set_error_msg(context, \"All words can not be null.\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  *out_len = word1_len + separator_len + word2_len;\n+  char* out = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(context, *out_len));\n+  if (out == nullptr) {\n+    gdv_fn_context_set_error_msg(context, \"Could not allocate memory for output string\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  strncpy(out, word1, word1_len);\n+  out[word1_len] = '\\0';\n\nReview comment:\n       This is not required. There is no need to add a '\\0'\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,132 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8_utf8(int64_t context, const char* separator,\n+                                       int32_t separator_len, const char* word1,\n+                                       int32_t word1_len, const char* word2,\n+                                       int32_t word2_len, int32_t* out_len) {\n+  if (word1_len <= 0 && word2_len <= 0) {\n+    gdv_fn_context_set_error_msg(context, \"All words can not be null.\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  *out_len = word1_len + separator_len + word2_len;\n+  char* out = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(context, *out_len));\n+  if (out == nullptr) {\n+    gdv_fn_context_set_error_msg(context, \"Could not allocate memory for output string\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  strncpy(out, word1, word1_len);\n+  out[word1_len] = '\\0';\n+  strncat(out, separator, separator_len);\n\nReview comment:\n       This will not work. It has to be memcpy(out + word1_len, separator, separator_len);\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-05T05:06:30.293+0000",
                    "updated": "2021-11-05T05:06:30.293+0000",
                    "started": "2021-11-05T05:06:30.292+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "676890",
                    "issueId": "13401934"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401934/worklog/677002",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva commented on a change in pull request #11180:\nURL: https://github.com/apache/arrow/pull/11180#discussion_r743608724\n\n\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,56 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8(int64_t context, const char* separator,\n\nReview comment:\n       Ok, I antecipated myself and already did it\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-05T12:09:46.520+0000",
                    "updated": "2021-11-05T12:09:46.520+0000",
                    "started": "2021-11-05T12:09:46.519+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "677002",
                    "issueId": "13401934"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401934/worklog/677312",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva commented on a change in pull request #11180:\nURL: https://github.com/apache/arrow/pull/11180#discussion_r743608724\n\n\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,56 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8(int64_t context, const char* separator,\n\nReview comment:\n       Ok, I antecipated myself and already did it\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-05T19:36:37.181+0000",
                    "updated": "2021-11-05T19:36:37.181+0000",
                    "started": "2021-11-05T19:36:37.180+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "677312",
                    "issueId": "13401934"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401934/worklog/677406",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vvellanki commented on a change in pull request #11180:\nURL: https://github.com/apache/arrow/pull/11180#discussion_r743387907\n\n\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,56 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8(int64_t context, const char* separator,\n\nReview comment:\n       yes, that's what you should do\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,132 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8_utf8(int64_t context, const char* separator,\n+                                       int32_t separator_len, const char* word1,\n+                                       int32_t word1_len, const char* word2,\n+                                       int32_t word2_len, int32_t* out_len) {\n+  if (word1_len <= 0 && word2_len <= 0) {\n+    gdv_fn_context_set_error_msg(context, \"All words can not be null.\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  *out_len = word1_len + separator_len + word2_len;\n+  char* out = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(context, *out_len));\n+  if (out == nullptr) {\n+    gdv_fn_context_set_error_msg(context, \"Could not allocate memory for output string\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  strncpy(out, word1, word1_len);\n\nReview comment:\n       The input can include \\0. You cannot use strncpy. Please use memcpy instead\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,132 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8_utf8(int64_t context, const char* separator,\n+                                       int32_t separator_len, const char* word1,\n+                                       int32_t word1_len, const char* word2,\n+                                       int32_t word2_len, int32_t* out_len) {\n+  if (word1_len <= 0 && word2_len <= 0) {\n\nReview comment:\n       Arrow has validity bits and data values - if a value is null, the validity bit will be false\r\n   \r\n   0 length strings are valid inputs... none of the inputs can have negative lengths. You should check for that\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,132 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8_utf8(int64_t context, const char* separator,\n+                                       int32_t separator_len, const char* word1,\n+                                       int32_t word1_len, const char* word2,\n+                                       int32_t word2_len, int32_t* out_len) {\n+  if (word1_len <= 0 && word2_len <= 0) {\n+    gdv_fn_context_set_error_msg(context, \"All words can not be null.\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  *out_len = word1_len + separator_len + word2_len;\n+  char* out = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(context, *out_len));\n+  if (out == nullptr) {\n+    gdv_fn_context_set_error_msg(context, \"Could not allocate memory for output string\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  strncpy(out, word1, word1_len);\n+  out[word1_len] = '\\0';\n+  strncat(out, separator, separator_len);\n+  strncat(out, word2, word2_len);\n\nReview comment:\n       Same here\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,132 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8_utf8(int64_t context, const char* separator,\n+                                       int32_t separator_len, const char* word1,\n+                                       int32_t word1_len, const char* word2,\n+                                       int32_t word2_len, int32_t* out_len) {\n+  if (word1_len <= 0 && word2_len <= 0) {\n+    gdv_fn_context_set_error_msg(context, \"All words can not be null.\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  *out_len = word1_len + separator_len + word2_len;\n+  char* out = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(context, *out_len));\n+  if (out == nullptr) {\n+    gdv_fn_context_set_error_msg(context, \"Could not allocate memory for output string\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  strncpy(out, word1, word1_len);\n+  out[word1_len] = '\\0';\n\nReview comment:\n       This is not required. There is no need to add a '\\0'\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,132 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8_utf8(int64_t context, const char* separator,\n+                                       int32_t separator_len, const char* word1,\n+                                       int32_t word1_len, const char* word2,\n+                                       int32_t word2_len, int32_t* out_len) {\n+  if (word1_len <= 0 && word2_len <= 0) {\n+    gdv_fn_context_set_error_msg(context, \"All words can not be null.\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  *out_len = word1_len + separator_len + word2_len;\n+  char* out = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(context, *out_len));\n+  if (out == nullptr) {\n+    gdv_fn_context_set_error_msg(context, \"Could not allocate memory for output string\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  strncpy(out, word1, word1_len);\n+  out[word1_len] = '\\0';\n+  strncat(out, separator, separator_len);\n\nReview comment:\n       This will not work. It has to be memcpy(out + word1_len, separator, separator_len);\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-05T19:48:50.514+0000",
                    "updated": "2021-11-05T19:48:50.514+0000",
                    "started": "2021-11-05T19:48:50.513+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "677406",
                    "issueId": "13401934"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401934/worklog/677782",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vvellanki commented on a change in pull request #11180:\nURL: https://github.com/apache/arrow/pull/11180#discussion_r743387907\n\n\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,56 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8(int64_t context, const char* separator,\n\nReview comment:\n       yes, that's what you should do\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,132 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8_utf8(int64_t context, const char* separator,\n+                                       int32_t separator_len, const char* word1,\n+                                       int32_t word1_len, const char* word2,\n+                                       int32_t word2_len, int32_t* out_len) {\n+  if (word1_len <= 0 && word2_len <= 0) {\n+    gdv_fn_context_set_error_msg(context, \"All words can not be null.\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  *out_len = word1_len + separator_len + word2_len;\n+  char* out = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(context, *out_len));\n+  if (out == nullptr) {\n+    gdv_fn_context_set_error_msg(context, \"Could not allocate memory for output string\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  strncpy(out, word1, word1_len);\n\nReview comment:\n       The input can include \\0. You cannot use strncpy. Please use memcpy instead\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,132 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8_utf8(int64_t context, const char* separator,\n+                                       int32_t separator_len, const char* word1,\n+                                       int32_t word1_len, const char* word2,\n+                                       int32_t word2_len, int32_t* out_len) {\n+  if (word1_len <= 0 && word2_len <= 0) {\n\nReview comment:\n       Arrow has validity bits and data values - if a value is null, the validity bit will be false\r\n   \r\n   0 length strings are valid inputs... none of the inputs can have negative lengths. You should check for that\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,132 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8_utf8(int64_t context, const char* separator,\n+                                       int32_t separator_len, const char* word1,\n+                                       int32_t word1_len, const char* word2,\n+                                       int32_t word2_len, int32_t* out_len) {\n+  if (word1_len <= 0 && word2_len <= 0) {\n+    gdv_fn_context_set_error_msg(context, \"All words can not be null.\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  *out_len = word1_len + separator_len + word2_len;\n+  char* out = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(context, *out_len));\n+  if (out == nullptr) {\n+    gdv_fn_context_set_error_msg(context, \"Could not allocate memory for output string\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  strncpy(out, word1, word1_len);\n+  out[word1_len] = '\\0';\n+  strncat(out, separator, separator_len);\n+  strncat(out, word2, word2_len);\n\nReview comment:\n       Same here\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,132 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8_utf8(int64_t context, const char* separator,\n+                                       int32_t separator_len, const char* word1,\n+                                       int32_t word1_len, const char* word2,\n+                                       int32_t word2_len, int32_t* out_len) {\n+  if (word1_len <= 0 && word2_len <= 0) {\n+    gdv_fn_context_set_error_msg(context, \"All words can not be null.\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  *out_len = word1_len + separator_len + word2_len;\n+  char* out = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(context, *out_len));\n+  if (out == nullptr) {\n+    gdv_fn_context_set_error_msg(context, \"Could not allocate memory for output string\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  strncpy(out, word1, word1_len);\n+  out[word1_len] = '\\0';\n\nReview comment:\n       This is not required. There is no need to add a '\\0'\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,132 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8_utf8(int64_t context, const char* separator,\n+                                       int32_t separator_len, const char* word1,\n+                                       int32_t word1_len, const char* word2,\n+                                       int32_t word2_len, int32_t* out_len) {\n+  if (word1_len <= 0 && word2_len <= 0) {\n+    gdv_fn_context_set_error_msg(context, \"All words can not be null.\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  *out_len = word1_len + separator_len + word2_len;\n+  char* out = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(context, *out_len));\n+  if (out == nullptr) {\n+    gdv_fn_context_set_error_msg(context, \"Could not allocate memory for output string\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  strncpy(out, word1, word1_len);\n+  out[word1_len] = '\\0';\n+  strncat(out, separator, separator_len);\n\nReview comment:\n       This will not work. It has to be memcpy(out + word1_len, separator, separator_len);\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-05T20:37:25.587+0000",
                    "updated": "2021-11-05T20:37:25.587+0000",
                    "started": "2021-11-05T20:37:25.587+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "677782",
                    "issueId": "13401934"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401934/worklog/677876",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva commented on a change in pull request #11180:\nURL: https://github.com/apache/arrow/pull/11180#discussion_r743608724\n\n\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,56 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8(int64_t context, const char* separator,\n\nReview comment:\n       Ok, I antecipated myself and already did it\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-05T20:47:56.525+0000",
                    "updated": "2021-11-05T20:47:56.525+0000",
                    "started": "2021-11-05T20:47:56.525+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "677876",
                    "issueId": "13401934"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401934/worklog/677951",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva commented on a change in pull request #11180:\nURL: https://github.com/apache/arrow/pull/11180#discussion_r744025748\n\n\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,132 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8_utf8(int64_t context, const char* separator,\n+                                       int32_t separator_len, const char* word1,\n+                                       int32_t word1_len, const char* word2,\n+                                       int32_t word2_len, int32_t* out_len) {\n+  if (word1_len <= 0 && word2_len <= 0) {\n+    gdv_fn_context_set_error_msg(context, \"All words can not be null.\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  *out_len = word1_len + separator_len + word2_len;\n+  char* out = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(context, *out_len));\n+  if (out == nullptr) {\n+    gdv_fn_context_set_error_msg(context, \"Could not allocate memory for output string\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  strncpy(out, word1, word1_len);\n+  out[word1_len] = '\\0';\n\nReview comment:\n       Removed it\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-05T23:36:36.875+0000",
                    "updated": "2021-11-05T23:36:36.875+0000",
                    "started": "2021-11-05T23:36:36.874+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "677951",
                    "issueId": "13401934"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401934/worklog/677952",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva commented on a change in pull request #11180:\nURL: https://github.com/apache/arrow/pull/11180#discussion_r744025790\n\n\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,132 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8_utf8(int64_t context, const char* separator,\n+                                       int32_t separator_len, const char* word1,\n+                                       int32_t word1_len, const char* word2,\n+                                       int32_t word2_len, int32_t* out_len) {\n+  if (word1_len <= 0 && word2_len <= 0) {\n+    gdv_fn_context_set_error_msg(context, \"All words can not be null.\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  *out_len = word1_len + separator_len + word2_len;\n+  char* out = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(context, *out_len));\n+  if (out == nullptr) {\n+    gdv_fn_context_set_error_msg(context, \"Could not allocate memory for output string\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  strncpy(out, word1, word1_len);\n+  out[word1_len] = '\\0';\n+  strncat(out, separator, separator_len);\n+  strncat(out, word2, word2_len);\n\nReview comment:\n       Changed strncat to memcpy\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-05T23:36:50.161+0000",
                    "updated": "2021-11-05T23:36:50.161+0000",
                    "started": "2021-11-05T23:36:50.160+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "677952",
                    "issueId": "13401934"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401934/worklog/677953",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva commented on a change in pull request #11180:\nURL: https://github.com/apache/arrow/pull/11180#discussion_r744025809\n\n\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,132 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8_utf8(int64_t context, const char* separator,\n+                                       int32_t separator_len, const char* word1,\n+                                       int32_t word1_len, const char* word2,\n+                                       int32_t word2_len, int32_t* out_len) {\n+  if (word1_len <= 0 && word2_len <= 0) {\n+    gdv_fn_context_set_error_msg(context, \"All words can not be null.\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  *out_len = word1_len + separator_len + word2_len;\n+  char* out = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(context, *out_len));\n+  if (out == nullptr) {\n+    gdv_fn_context_set_error_msg(context, \"Could not allocate memory for output string\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  strncpy(out, word1, word1_len);\n+  out[word1_len] = '\\0';\n+  strncat(out, separator, separator_len);\n\nReview comment:\n       Changed strncat to memcpy\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,132 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8_utf8(int64_t context, const char* separator,\n+                                       int32_t separator_len, const char* word1,\n+                                       int32_t word1_len, const char* word2,\n+                                       int32_t word2_len, int32_t* out_len) {\n+  if (word1_len <= 0 && word2_len <= 0) {\n+    gdv_fn_context_set_error_msg(context, \"All words can not be null.\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  *out_len = word1_len + separator_len + word2_len;\n+  char* out = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(context, *out_len));\n+  if (out == nullptr) {\n+    gdv_fn_context_set_error_msg(context, \"Could not allocate memory for output string\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  strncpy(out, word1, word1_len);\n\nReview comment:\n       Changed strncat to memcpy\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-05T23:37:03.432+0000",
                    "updated": "2021-11-05T23:37:03.432+0000",
                    "started": "2021-11-05T23:37:03.431+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "677953",
                    "issueId": "13401934"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401934/worklog/677954",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva commented on a change in pull request #11180:\nURL: https://github.com/apache/arrow/pull/11180#discussion_r744026218\n\n\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +794,132 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_concat_ws_utf8_utf8(int64_t context, const char* separator,\n+                                       int32_t separator_len, const char* word1,\n+                                       int32_t word1_len, const char* word2,\n+                                       int32_t word2_len, int32_t* out_len) {\n+  if (word1_len <= 0 && word2_len <= 0) {\n\nReview comment:\n       Done\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-05T23:38:57.039+0000",
                    "updated": "2021-11-05T23:38:57.039+0000",
                    "started": "2021-11-05T23:38:57.039+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "677954",
                    "issueId": "13401934"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 18000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6958f700[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@11b69eb5[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2e32128d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@bd462c8[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2ee287ec[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@4e55f8f8[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@704d3dc5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@58a7d326[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@62c0e239[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@33354a1[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1a89f217[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7cd13c83[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 18000,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Nov 18 08:06:58 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-11-18T08:06:58.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14032/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2021-09-17T22:22:37.000+0000",
        "updated": "2021-12-14T23:41:30.000+0000",
        "timeoriginalestimate": null,
        "description": "Returns the string resulting from concatenating the stringses passed in as parameters in order with a custom separator.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 18000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Gandiva] Add concat_ws hive function to gandiva",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401934/comment/17445718",
                    "id": "17445718",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
                        "name": "pravindra",
                        "key": "pravindra",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
                        },
                        "displayName": "Pindikura Ravindra",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "body": "Issue resolved by pull request 11180\n[https://github.com/apache/arrow/pull/11180]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
                        "name": "pravindra",
                        "key": "pravindra",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
                        },
                        "displayName": "Pindikura Ravindra",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "created": "2021-11-18T08:06:58.869+0000",
                    "updated": "2021-11-18T08:06:58.869+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0v1xc:",
        "customfield_12314139": null
    }
}