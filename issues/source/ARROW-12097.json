{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13367847",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13367847",
    "key": "ARROW-12097",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349493",
                "id": "12349493",
                "description": "",
                "name": "4.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-04-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
            "name": "westonpace",
            "key": "westonpace",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Weston Pace",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
            "name": "westonpace",
            "key": "westonpace",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Weston Pace",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
            "name": "westonpace",
            "key": "westonpace",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Weston Pace",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 6600,
            "total": 6600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 6600,
            "total": 6600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12097/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 11,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13367847/worklog/572647",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace opened a new pull request #9808:\nURL: https://github.com/apache/arrow/pull/9808\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-26T13:09:36.450+0000",
                    "updated": "2021-03-26T13:09:36.450+0000",
                    "started": "2021-03-26T13:09:36.450+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "572647",
                    "issueId": "13367847"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13367847/worklog/572648",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #9808:\nURL: https://github.com/apache/arrow/pull/9808#issuecomment-808202698\n\n\n   https://issues.apache.org/jira/browse/ARROW-12097\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-26T13:09:59.821+0000",
                    "updated": "2021-03-26T13:09:59.821+0000",
                    "started": "2021-03-26T13:09:59.821+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "572648",
                    "issueId": "13367847"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13367847/worklog/573666",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #9808:\nURL: https://github.com/apache/arrow/pull/9808#discussion_r603536350\n\n\n\n##########\nFile path: cpp/src/arrow/util/async_generator.h\n##########\n@@ -947,65 +947,134 @@ AsyncGenerator<T> MakeIteratorGenerator(Iterator<T> it) {\n template <typename T>\n class BackgroundGenerator {\n  public:\n-  explicit BackgroundGenerator(Iterator<T> it, internal::Executor* io_executor)\n-      : io_executor_(io_executor) {\n-    task_ = Task{std::make_shared<Iterator<T>>(std::move(it)),\n-                 std::make_shared<std::atomic<bool>>(false)};\n-  }\n-\n-  ~BackgroundGenerator() {\n-    // The thread pool will be disposed of automatically.  By default it will not wait\n-    // so the background thread may outlive this object.  That should be ok.  Any task\n-    // objects in the thread pool are copies of task_ and have their own shared_ptr to\n-    // the iterator.\n-  }\n+  explicit BackgroundGenerator(Iterator<T> it, internal::Executor* io_executor, int max_q,\n+                               int q_restart)\n+      : state_(std::make_shared<State>(io_executor, std::move(it), max_q, q_restart)) {}\n \n-  ARROW_DEFAULT_MOVE_AND_ASSIGN(BackgroundGenerator);\n-  ARROW_DISALLOW_COPY_AND_ASSIGN(BackgroundGenerator);\n+  ~BackgroundGenerator() {}\n \n   Future<T> operator()() {\n-    auto submitted_future = io_executor_->Submit(task_);\n-    if (!submitted_future.ok()) {\n-      return Future<T>::MakeFinished(submitted_future.status());\n+    auto guard = state_->mutex.Lock();\n+    if (state_->queue.empty()) {\n+      if (state_->finished) {\n+        return AsyncGeneratorEnd<T>();\n+      } else {\n+        state_->waiting_future = Future<T>::Make();\n+      }\n+    } else {\n+      auto next = Future<T>::MakeFinished(std::move(state_->queue.front()));\n+      state_->queue.pop();\n+      if (!state_->running &&\n+          static_cast<int>(state_->queue.size()) <= state_->q_restart) {\n+        state_->RestartTask(state_);\n+      }\n+      return next;\n     }\n-    return std::move(*submitted_future);\n+    if (!state_->running) {\n+      // This branch should only be needed to start the background thread on the first\n+      // call\n+      state_->RestartTask(state_);\n+    }\n+    return state_->waiting_future;\n   }\n \n  protected:\n-  struct Task {\n-    Result<T> operator()() {\n-      if (*done_) {\n-        return IterationTraits<T>::End();\n+  struct State {\n+    State(internal::Executor* io_executor, Iterator<T> it, int max_q, int q_restart)\n+        : io_executor(io_executor),\n+          it(std::move(it)),\n+          running(false),\n+          finished(false),\n+          max_q(max_q),\n+          q_restart(q_restart) {}\n+\n+    void RestartTask(std::shared_ptr<State> state) {\n+      if (!finished) {\n+        running = true;\n+        io_executor->Spawn([state]() { Task()(std::move(state)); });\n\nReview comment:\n       Spawn() returns a Status so we should check it\n\n##########\nFile path: cpp/src/arrow/util/async_generator.h\n##########\n@@ -947,65 +947,134 @@ AsyncGenerator<T> MakeIteratorGenerator(Iterator<T> it) {\n template <typename T>\n class BackgroundGenerator {\n  public:\n-  explicit BackgroundGenerator(Iterator<T> it, internal::Executor* io_executor)\n-      : io_executor_(io_executor) {\n-    task_ = Task{std::make_shared<Iterator<T>>(std::move(it)),\n-                 std::make_shared<std::atomic<bool>>(false)};\n-  }\n-\n-  ~BackgroundGenerator() {\n-    // The thread pool will be disposed of automatically.  By default it will not wait\n-    // so the background thread may outlive this object.  That should be ok.  Any task\n-    // objects in the thread pool are copies of task_ and have their own shared_ptr to\n-    // the iterator.\n-  }\n+  explicit BackgroundGenerator(Iterator<T> it, internal::Executor* io_executor, int max_q,\n+                               int q_restart)\n+      : state_(std::make_shared<State>(io_executor, std::move(it), max_q, q_restart)) {}\n \n-  ARROW_DEFAULT_MOVE_AND_ASSIGN(BackgroundGenerator);\n-  ARROW_DISALLOW_COPY_AND_ASSIGN(BackgroundGenerator);\n+  ~BackgroundGenerator() {}\n \n   Future<T> operator()() {\n-    auto submitted_future = io_executor_->Submit(task_);\n-    if (!submitted_future.ok()) {\n-      return Future<T>::MakeFinished(submitted_future.status());\n+    auto guard = state_->mutex.Lock();\n+    if (state_->queue.empty()) {\n+      if (state_->finished) {\n+        return AsyncGeneratorEnd<T>();\n+      } else {\n+        state_->waiting_future = Future<T>::Make();\n+      }\n+    } else {\n+      auto next = Future<T>::MakeFinished(std::move(state_->queue.front()));\n+      state_->queue.pop();\n+      if (!state_->running &&\n+          static_cast<int>(state_->queue.size()) <= state_->q_restart) {\n+        state_->RestartTask(state_);\n+      }\n+      return next;\n     }\n-    return std::move(*submitted_future);\n+    if (!state_->running) {\n+      // This branch should only be needed to start the background thread on the first\n+      // call\n+      state_->RestartTask(state_);\n+    }\n\nReview comment:\n       You could consolidate the above branch into this one, since on the first call, the queue size should be <= q_restart\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-29T19:10:39.598+0000",
                    "updated": "2021-03-29T19:10:39.598+0000",
                    "started": "2021-03-29T19:10:39.598+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "573666",
                    "issueId": "13367847"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13367847/worklog/573675",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #9808:\nURL: https://github.com/apache/arrow/pull/9808#discussion_r603557564\n\n\n\n##########\nFile path: cpp/src/arrow/util/async_generator.h\n##########\n@@ -947,65 +947,134 @@ AsyncGenerator<T> MakeIteratorGenerator(Iterator<T> it) {\n template <typename T>\n class BackgroundGenerator {\n  public:\n-  explicit BackgroundGenerator(Iterator<T> it, internal::Executor* io_executor)\n-      : io_executor_(io_executor) {\n-    task_ = Task{std::make_shared<Iterator<T>>(std::move(it)),\n-                 std::make_shared<std::atomic<bool>>(false)};\n-  }\n-\n-  ~BackgroundGenerator() {\n-    // The thread pool will be disposed of automatically.  By default it will not wait\n-    // so the background thread may outlive this object.  That should be ok.  Any task\n-    // objects in the thread pool are copies of task_ and have their own shared_ptr to\n-    // the iterator.\n-  }\n+  explicit BackgroundGenerator(Iterator<T> it, internal::Executor* io_executor, int max_q,\n+                               int q_restart)\n+      : state_(std::make_shared<State>(io_executor, std::move(it), max_q, q_restart)) {}\n \n-  ARROW_DEFAULT_MOVE_AND_ASSIGN(BackgroundGenerator);\n-  ARROW_DISALLOW_COPY_AND_ASSIGN(BackgroundGenerator);\n+  ~BackgroundGenerator() {}\n \n   Future<T> operator()() {\n-    auto submitted_future = io_executor_->Submit(task_);\n-    if (!submitted_future.ok()) {\n-      return Future<T>::MakeFinished(submitted_future.status());\n+    auto guard = state_->mutex.Lock();\n+    if (state_->queue.empty()) {\n+      if (state_->finished) {\n+        return AsyncGeneratorEnd<T>();\n+      } else {\n+        state_->waiting_future = Future<T>::Make();\n+      }\n+    } else {\n+      auto next = Future<T>::MakeFinished(std::move(state_->queue.front()));\n+      state_->queue.pop();\n+      if (!state_->running &&\n+          static_cast<int>(state_->queue.size()) <= state_->q_restart) {\n+        state_->RestartTask(state_);\n+      }\n+      return next;\n     }\n-    return std::move(*submitted_future);\n+    if (!state_->running) {\n+      // This branch should only be needed to start the background thread on the first\n+      // call\n+      state_->RestartTask(state_);\n+    }\n\nReview comment:\n       True, but the queue will be empty so it will create a waiting_future instead of popping from the queue and it won't enter that part.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-29T19:30:57.414+0000",
                    "updated": "2021-03-29T19:30:57.414+0000",
                    "started": "2021-03-29T19:30:57.413+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "573675",
                    "issueId": "13367847"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13367847/worklog/573691",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #9808:\nURL: https://github.com/apache/arrow/pull/9808#discussion_r603574136\n\n\n\n##########\nFile path: cpp/src/arrow/util/async_generator.h\n##########\n@@ -947,65 +947,134 @@ AsyncGenerator<T> MakeIteratorGenerator(Iterator<T> it) {\n template <typename T>\n class BackgroundGenerator {\n  public:\n-  explicit BackgroundGenerator(Iterator<T> it, internal::Executor* io_executor)\n-      : io_executor_(io_executor) {\n-    task_ = Task{std::make_shared<Iterator<T>>(std::move(it)),\n-                 std::make_shared<std::atomic<bool>>(false)};\n-  }\n-\n-  ~BackgroundGenerator() {\n-    // The thread pool will be disposed of automatically.  By default it will not wait\n-    // so the background thread may outlive this object.  That should be ok.  Any task\n-    // objects in the thread pool are copies of task_ and have their own shared_ptr to\n-    // the iterator.\n-  }\n+  explicit BackgroundGenerator(Iterator<T> it, internal::Executor* io_executor, int max_q,\n+                               int q_restart)\n+      : state_(std::make_shared<State>(io_executor, std::move(it), max_q, q_restart)) {}\n \n-  ARROW_DEFAULT_MOVE_AND_ASSIGN(BackgroundGenerator);\n-  ARROW_DISALLOW_COPY_AND_ASSIGN(BackgroundGenerator);\n+  ~BackgroundGenerator() {}\n \n   Future<T> operator()() {\n-    auto submitted_future = io_executor_->Submit(task_);\n-    if (!submitted_future.ok()) {\n-      return Future<T>::MakeFinished(submitted_future.status());\n+    auto guard = state_->mutex.Lock();\n+    if (state_->queue.empty()) {\n+      if (state_->finished) {\n+        return AsyncGeneratorEnd<T>();\n+      } else {\n+        state_->waiting_future = Future<T>::Make();\n+      }\n+    } else {\n+      auto next = Future<T>::MakeFinished(std::move(state_->queue.front()));\n+      state_->queue.pop();\n+      if (!state_->running &&\n+          static_cast<int>(state_->queue.size()) <= state_->q_restart) {\n+        state_->RestartTask(state_);\n+      }\n+      return next;\n     }\n-    return std::move(*submitted_future);\n+    if (!state_->running) {\n+      // This branch should only be needed to start the background thread on the first\n+      // call\n+      state_->RestartTask(state_);\n+    }\n\nReview comment:\n       I'm not quite following - I meant you could eliminate the upper call to RestartTask in favor of this one but then you'd have to juggle next/waiting_future so not really much of a difference anyways.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-29T19:59:17.159+0000",
                    "updated": "2021-03-29T19:59:17.159+0000",
                    "started": "2021-03-29T19:59:17.159+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "573691",
                    "issueId": "13367847"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13367847/worklog/574172",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #9808:\nURL: https://github.com/apache/arrow/pull/9808#discussion_r604137772\n\n\n\n##########\nFile path: cpp/src/arrow/util/async_generator_test.cc\n##########\n@@ -79,20 +79,14 @@ class TrackingGenerator {\n   std::shared_ptr<State> state_;\n };\n \n+// Iterator<TestInt> VectorIt(std::vector<TestInt> v)\n\nReview comment:\n       nit: did you mean to place this here?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-30T14:19:50.534+0000",
                    "updated": "2021-03-30T14:19:50.534+0000",
                    "started": "2021-03-30T14:19:50.533+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "574172",
                    "issueId": "13367847"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13367847/worklog/574555",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #9808:\nURL: https://github.com/apache/arrow/pull/9808#discussion_r604572405\n\n\n\n##########\nFile path: cpp/src/arrow/util/async_generator_test.cc\n##########\n@@ -79,20 +79,14 @@ class TrackingGenerator {\n   std::shared_ptr<State> state_;\n };\n \n+// Iterator<TestInt> VectorIt(std::vector<TestInt> v)\n\nReview comment:\n       Whoops, that's embarrassing.  Thanks for catching it.  I've removed the comment.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-31T03:41:52.244+0000",
                    "updated": "2021-03-31T03:41:52.244+0000",
                    "started": "2021-03-31T03:41:52.244+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "574555",
                    "issueId": "13367847"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13367847/worklog/574887",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #9808:\nURL: https://github.com/apache/arrow/pull/9808#discussion_r604951143\n\n\n\n##########\nFile path: cpp/src/arrow/util/async_generator_test.cc\n##########\n@@ -570,14 +659,134 @@ TEST(TestAsyncUtil, StackOverflow) {\n \n #endif\n \n-TEST(TestAsyncUtil, Background) {\n+class BackgroundGeneratorTestFixture : public GeneratorTestFixture {\n+ protected:\n+  AsyncGenerator<TestInt> Make(const std::vector<TestInt>& it,\n+                               int max_q = kDefaultBackgroundMaxQ,\n+                               int q_restart = kDefaultBackgroundQRestart) {\n+    bool slow = GetParam();\n+    return BackgroundAsyncVectorIt(it, slow, max_q, q_restart);\n+  }\n+};\n+\n+TEST_P(BackgroundGeneratorTestFixture, Empty) {\n+  auto background = Make({});\n+  AssertGeneratorExhausted(background);\n+}\n+\n+TEST_P(BackgroundGeneratorTestFixture, Basic) {\n   std::vector<TestInt> expected = {1, 2, 3};\n-  auto background = BackgroundAsyncVectorIt(expected);\n+  auto background = Make(expected);\n   auto future = CollectAsyncGenerator(background);\n   ASSERT_FINISHES_OK_AND_ASSIGN(auto collected, future);\n   ASSERT_EQ(expected, collected);\n }\n \n+TEST_P(BackgroundGeneratorTestFixture, BadResult) {\n+  std::shared_ptr<ManualIteratorControl<TestInt>> iterator_control;\n+  auto iterator = MakePushIterator<TestInt>(&iterator_control);\n+  // Enough valid items to fill the queue and then some\n+  for (int i = 0; i < 5; i++) {\n+    iterator_control->Push(i);\n+  }\n+  // Next fail\n+  iterator_control->Push(Status::Invalid(\"XYZ\"));\n+  ASSERT_OK_AND_ASSIGN(\n+      auto generator,\n+      MakeBackgroundGenerator(std::move(iterator), internal::GetCpuThreadPool(), 4, 2));\n+\n+  ASSERT_FINISHES_OK_AND_EQ(TestInt(0), generator());\n+  // Have not yet restarted so next results should always be valid\n+  ASSERT_FINISHES_OK_AND_EQ(TestInt(1), generator());\n+  ASSERT_FINISHES_OK_AND_EQ(TestInt(2), generator());\n\nReview comment:\n       It looks like this sometimes fails on Windows. \r\n   \r\n   ```\r\n   [ RUN      ] BackgroundGeneratorTests/BackgroundGeneratorTestFixture.BadResult/1\r\n   C:/projects/arrow/cpp/src/arrow/util/async_generator_test.cc(701): error: Failed\r\n   '_error_or_value70.status()' failed with Invalid: XYZ\r\n   [  FAILED  ] BackgroundGeneratorTests/BackgroundGeneratorTestFixture.BadResult/1, where GetParam() = true (0 ms)\r\n   ```\r\n   \r\n   The previous call does restart the background thread, so it's possible it'll get to the failing value in this call.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-31T14:44:42.652+0000",
                    "updated": "2021-03-31T14:44:42.652+0000",
                    "started": "2021-03-31T14:44:42.652+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "574887",
                    "issueId": "13367847"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13367847/worklog/575053",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #9808:\nURL: https://github.com/apache/arrow/pull/9808#discussion_r605143617\n\n\n\n##########\nFile path: cpp/src/arrow/util/async_generator_test.cc\n##########\n@@ -570,14 +659,134 @@ TEST(TestAsyncUtil, StackOverflow) {\n \n #endif\n \n-TEST(TestAsyncUtil, Background) {\n+class BackgroundGeneratorTestFixture : public GeneratorTestFixture {\n+ protected:\n+  AsyncGenerator<TestInt> Make(const std::vector<TestInt>& it,\n+                               int max_q = kDefaultBackgroundMaxQ,\n+                               int q_restart = kDefaultBackgroundQRestart) {\n+    bool slow = GetParam();\n+    return BackgroundAsyncVectorIt(it, slow, max_q, q_restart);\n+  }\n+};\n+\n+TEST_P(BackgroundGeneratorTestFixture, Empty) {\n+  auto background = Make({});\n+  AssertGeneratorExhausted(background);\n+}\n+\n+TEST_P(BackgroundGeneratorTestFixture, Basic) {\n   std::vector<TestInt> expected = {1, 2, 3};\n-  auto background = BackgroundAsyncVectorIt(expected);\n+  auto background = Make(expected);\n   auto future = CollectAsyncGenerator(background);\n   ASSERT_FINISHES_OK_AND_ASSIGN(auto collected, future);\n   ASSERT_EQ(expected, collected);\n }\n \n+TEST_P(BackgroundGeneratorTestFixture, BadResult) {\n+  std::shared_ptr<ManualIteratorControl<TestInt>> iterator_control;\n+  auto iterator = MakePushIterator<TestInt>(&iterator_control);\n+  // Enough valid items to fill the queue and then some\n+  for (int i = 0; i < 5; i++) {\n+    iterator_control->Push(i);\n+  }\n+  // Next fail\n+  iterator_control->Push(Status::Invalid(\"XYZ\"));\n+  ASSERT_OK_AND_ASSIGN(\n+      auto generator,\n+      MakeBackgroundGenerator(std::move(iterator), internal::GetCpuThreadPool(), 4, 2));\n+\n+  ASSERT_FINISHES_OK_AND_EQ(TestInt(0), generator());\n+  // Have not yet restarted so next results should always be valid\n+  ASSERT_FINISHES_OK_AND_EQ(TestInt(1), generator());\n+  ASSERT_FINISHES_OK_AND_EQ(TestInt(2), generator());\n\nReview comment:\n       If it restarts it will restart on the call for 2 and the call that restarts can never fail in this test (because it doesn't restart until after it's grabbed a result from the queue).\r\n   \r\n   I think what is happening is things are slowing down in just the right way so the background reader never actually fills the queue and so 5 is able to sneak in before 2 is asked for.\r\n   \r\n   Either way, the fix is the same, I now allow the call for 2 to fail.  Thanks for catching this.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-31T18:54:51.927+0000",
                    "updated": "2021-03-31T18:54:51.927+0000",
                    "started": "2021-03-31T18:54:51.927+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "575053",
                    "issueId": "13367847"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13367847/worklog/575487",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #9808:\nURL: https://github.com/apache/arrow/pull/9808#issuecomment-811868742\n\n\n   The integration job looks like a flake. I restarted the Travis job.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-01T12:21:54.337+0000",
                    "updated": "2021-04-01T12:21:54.337+0000",
                    "started": "2021-04-01T12:21:54.337+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "575487",
                    "issueId": "13367847"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13367847/worklog/575503",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm closed pull request #9808:\nURL: https://github.com/apache/arrow/pull/9808\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-01T13:27:26.197+0000",
                    "updated": "2021-04-01T13:27:26.197+0000",
                    "started": "2021-04-01T13:27:26.197+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "575503",
                    "issueId": "13367847"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 6600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@58ce3f22[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@b7ee1c3[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2d1e2bf1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5192b768[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@461da96a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@4303f996[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1f1e03a4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@5bf3ced8[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@708e6a35[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@2c9de2fb[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@43f1d7ef[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@6b14447[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 6600,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Apr 01 13:27:21 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-04-01T13:27:21.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12097/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2021-03-26T13:05:28.000+0000",
        "updated": "2021-04-01T13:27:27.000+0000",
        "timeoriginalestimate": null,
        "description": "The current implementation creates a thread per block and in the CSV reader this hurts performance just a bit.\u00a0 However, in the IPC reader this hurts performance even more.\r\n\r\nInstead the readahead can move inside the background generator and the background generator task can keep running until the queue fills up and then restart when the queue has drained enough for a substantial amount of work to be done.\r\n\r\nIn my test CSV case this dropped the # of thread tasks created from ~2.5k to ~100.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 6600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Modify BackgroundGenerator so it creates fewer threads",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13367847/comment/17313174",
                    "id": "17313174",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 9808\n[https://github.com/apache/arrow/pull/9808]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-04-01T13:27:21.576+0000",
                    "updated": "2021-04-01T13:27:21.576+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0p8js:",
        "customfield_12314139": null
    }
}