{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13444305",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13444305",
    "key": "ARROW-16525",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351550",
                "id": "12351550",
                "name": "9.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-08-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
            "name": "westonpace",
            "key": "westonpace",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Weston Pace",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
            "name": "westonpace",
            "key": "westonpace",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Weston Pace",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
            "name": "westonpace",
            "key": "westonpace",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Weston Pace",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 11400,
            "total": 11400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 11400,
            "total": 11400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-16525/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 19,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13444305/worklog/768836",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13117:\nURL: https://github.com/apache/arrow/pull/13117#issuecomment-1123184311\n\n   https://issues.apache.org/jira/browse/ARROW-16525\n\n\n",
                    "created": "2022-05-11T04:52:12.439+0000",
                    "updated": "2022-05-11T04:52:12.439+0000",
                    "started": "2022-05-11T04:52:12.438+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "768836",
                    "issueId": "13444305"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13444305/worklog/768837",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13117:\nURL: https://github.com/apache/arrow/pull/13117#issuecomment-1123184322\n\n   :warning: Ticket **has not been started in JIRA**, please click 'Start Progress'.\n\n\n",
                    "created": "2022-05-11T04:52:14.479+0000",
                    "updated": "2022-05-11T04:52:14.479+0000",
                    "started": "2022-05-11T04:52:14.479+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "768837",
                    "issueId": "13444305"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13444305/worklog/768838",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on PR #13117:\nURL: https://github.com/apache/arrow/pull/13117#issuecomment-1123184412\n\n   CC @rtpsw please take a look\n\n\n",
                    "created": "2022-05-11T04:52:28.597+0000",
                    "updated": "2022-05-11T04:52:28.597+0000",
                    "started": "2022-05-11T04:52:28.597+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "768838",
                    "issueId": "13444305"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13444305/worklog/768843",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rtpsw commented on PR #13117:\nURL: https://github.com/apache/arrow/pull/13117#issuecomment-1123210591\n\n   Thanks for doing this, @westonpace !\n\n\n",
                    "created": "2022-05-11T05:46:03.906+0000",
                    "updated": "2022-05-11T05:46:03.906+0000",
                    "started": "2022-05-11T05:46:03.905+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "768843",
                    "issueId": "13444305"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13444305/worklog/768844",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rtpsw commented on code in PR #13117:\nURL: https://github.com/apache/arrow/pull/13117#discussion_r869894805\n\n\n##########\ncpp/src/arrow/dataset/file_base.cc:\n##########\n@@ -460,6 +460,23 @@ class TeeNode : public compute::MapNode {\n \n   const char* kind_name() const override { return \"TeeNode\"; }\n \n+  void Finish(Status finish_st) override {\n+    dataset_writer_->Finish().AddCallback([this, finish_st](const Status& dw_status) {\n+      // Need to wait for the task group to complete regardless of dw_status\n+      task_group_.End().AddCallback(\n+          [this, dw_status, finish_st](const Status& tg_status) {\n+            // Prefer dw_status then finish_st and then tg_status\n+            if (!dw_status.ok()) {\n+              finished_.MarkFinished(dw_status);\n+            }\n+            if (!finish_st.ok()) {\n+              finished_.MarkFinished(finish_st);\n+            }\n+            finished_.MarkFinished(tg_status);\n\nReview Comment:\n   It would be nice if Arrow supported succinct code like `finished_.MarkFinished(dw_status && finish_st && tg_status);` here, where `status1 && status2` evaluates to `status1.ok() ? status2 : status1`, and perhaps there are other places in Arrow where this code pattern occurs. If you agree, no need to make it part of this PR; it can go on a separate issue.\n\n\n\n##########\ncpp/src/arrow/dataset/file_test.cc:\n##########\n@@ -342,5 +347,118 @@ TEST_F(TestFileSystemDataset, WriteProjected) {\n     }\n   }\n }\n+\n+class FileSystemWriteTest : public testing::TestWithParam<std::tuple<bool, bool>> {\n+ protected:\n+  bool IsParallel() { return std::get<0>(GetParam()); }\n+  bool IsSlow() { return std::get<1>(GetParam()); }\n+\n+  FileSystemWriteTest() { dataset::internal::Initialize(); }\n+\n+  void TestDatasetWriteRoundTrip(\n+      std::function<Result<std::shared_ptr<cp::ExecPlan>>(\n+          const cp::BatchesWithSchema& source_data, const FileSystemDatasetWriteOptions&,\n+          std::function<Future<util::optional<cp::ExecBatch>>()>*)>\n+          plan_factory,\n+      bool has_output) {\n+    // Runs in-memory data through the plan and then scans out the written\n+    // data to ensure it matches the source data\n+    auto format = std::make_shared<IpcFileFormat>();\n+    auto fs = std::make_shared<fs::internal::MockFileSystem>(fs::kNoTime);\n+    FileSystemDatasetWriteOptions write_options;\n+    write_options.file_write_options = format->DefaultWriteOptions();\n+    write_options.filesystem = fs;\n+    write_options.base_dir = \"root\";\n+    write_options.partitioning = std::make_shared<HivePartitioning>(schema({}));\n+    write_options.basename_template = \"{i}.feather\";\n+\n+    cp::BatchesWithSchema source_data;\n+    source_data.batches = {\n+        cp::ExecBatchFromJSON({int32(), boolean()}, \"[[null, true], [4, false]]\"),\n+        cp::ExecBatchFromJSON({int32(), boolean()},\n+                              \"[[5, null], [6, false], [7, false]]\")};\n+    source_data.schema = schema({field(\"i32\", int32()), field(\"bool\", boolean())});\n+\n+    AsyncGenerator<util::optional<cp::ExecBatch>> sink_gen;\n+    ASSERT_OK_AND_ASSIGN(auto plan, plan_factory(source_data, write_options, &sink_gen));\n+\n+    if (has_output) {\n+      ASSERT_FINISHES_OK_AND_ASSIGN(auto out_batches,\n+                                    cp::StartAndCollect(plan.get(), sink_gen));\n+      cp::AssertExecBatchesEqual(source_data.schema, source_data.batches, out_batches);\n+    } else {\n+      ASSERT_FINISHES_OK(cp::StartAndFinish(plan.get()));\n+    }\n+\n+    // Read written dataset and make sure it matches\n+    ASSERT_OK_AND_ASSIGN(auto dataset_factory, FileSystemDatasetFactory::Make(\n+                                                   fs, {\"root/0.feather\"}, format, {}));\n\nReview Comment:\n   ```suggestion\r\n                                                      fs, {out_filename}, format, {}));\r\n   ```\n\n\n\n##########\ncpp/src/arrow/dataset/file_test.cc:\n##########\n@@ -342,5 +347,118 @@ TEST_F(TestFileSystemDataset, WriteProjected) {\n     }\n   }\n }\n+\n+class FileSystemWriteTest : public testing::TestWithParam<std::tuple<bool, bool>> {\n+ protected:\n+  bool IsParallel() { return std::get<0>(GetParam()); }\n+  bool IsSlow() { return std::get<1>(GetParam()); }\n+\n+  FileSystemWriteTest() { dataset::internal::Initialize(); }\n+\n+  void TestDatasetWriteRoundTrip(\n+      std::function<Result<std::shared_ptr<cp::ExecPlan>>(\n+          const cp::BatchesWithSchema& source_data, const FileSystemDatasetWriteOptions&,\n+          std::function<Future<util::optional<cp::ExecBatch>>()>*)>\n+          plan_factory,\n\nReview Comment:\n   Consider taking here a `cp::Declaration` (instead of a plan) factory that accepts the `write_options,sink_gen` arguments and creates the nodes after `source_data`, then make the plan (including `source_data`) within the current function instead of within the test cases' code. This should simplify and avoid some repeating code.\n\n\n\n##########\ncpp/src/arrow/dataset/file_test.cc:\n##########\n@@ -342,5 +347,118 @@ TEST_F(TestFileSystemDataset, WriteProjected) {\n     }\n   }\n }\n+\n+class FileSystemWriteTest : public testing::TestWithParam<std::tuple<bool, bool>> {\n+ protected:\n+  bool IsParallel() { return std::get<0>(GetParam()); }\n+  bool IsSlow() { return std::get<1>(GetParam()); }\n+\n+  FileSystemWriteTest() { dataset::internal::Initialize(); }\n+\n+  void TestDatasetWriteRoundTrip(\n+      std::function<Result<std::shared_ptr<cp::ExecPlan>>(\n+          const cp::BatchesWithSchema& source_data, const FileSystemDatasetWriteOptions&,\n+          std::function<Future<util::optional<cp::ExecBatch>>()>*)>\n+          plan_factory,\n+      bool has_output) {\n+    // Runs in-memory data through the plan and then scans out the written\n+    // data to ensure it matches the source data\n+    auto format = std::make_shared<IpcFileFormat>();\n+    auto fs = std::make_shared<fs::internal::MockFileSystem>(fs::kNoTime);\n+    FileSystemDatasetWriteOptions write_options;\n+    write_options.file_write_options = format->DefaultWriteOptions();\n+    write_options.filesystem = fs;\n+    write_options.base_dir = \"root\";\n+    write_options.partitioning = std::make_shared<HivePartitioning>(schema({}));\n+    write_options.basename_template = \"{i}.feather\";\n+\n\nReview Comment:\n   ```suggestion\r\n       const std::string out_filename = \"root/0.feather\";\r\n   ```\n\n\n\n",
                    "created": "2022-05-11T06:21:53.897+0000",
                    "updated": "2022-05-11T06:21:53.897+0000",
                    "started": "2022-05-11T06:21:53.897+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "768844",
                    "issueId": "13444305"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13444305/worklog/768946",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rtpsw commented on PR #13117:\nURL: https://github.com/apache/arrow/pull/13117#issuecomment-1123461116\n\n   LGTM. Just a few small suggestions.\n\n\n",
                    "created": "2022-05-11T09:47:28.848+0000",
                    "updated": "2022-05-11T09:47:28.848+0000",
                    "started": "2022-05-11T09:47:28.847+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "768946",
                    "issueId": "13444305"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13444305/worklog/769295",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on code in PR #13117:\nURL: https://github.com/apache/arrow/pull/13117#discussion_r870745521\n\n\n##########\ncpp/src/arrow/dataset/file_base.cc:\n##########\n@@ -460,6 +460,23 @@ class TeeNode : public compute::MapNode {\n \n   const char* kind_name() const override { return \"TeeNode\"; }\n \n+  void Finish(Status finish_st) override {\n+    dataset_writer_->Finish().AddCallback([this, finish_st](const Status& dw_status) {\n+      // Need to wait for the task group to complete regardless of dw_status\n+      task_group_.End().AddCallback(\n+          [this, dw_status, finish_st](const Status& tg_status) {\n+            // Prefer dw_status then finish_st and then tg_status\n+            if (!dw_status.ok()) {\n+              finished_.MarkFinished(dw_status);\n+            }\n+            if (!finish_st.ok()) {\n+              finished_.MarkFinished(finish_st);\n+            }\n+            finished_.MarkFinished(tg_status);\n\nReview Comment:\n   Good idea.  We do support `dw_status & finish_st & tg_status` so I changed to that.\n\n\n\n##########\ncpp/src/arrow/dataset/file_test.cc:\n##########\n@@ -342,5 +347,118 @@ TEST_F(TestFileSystemDataset, WriteProjected) {\n     }\n   }\n }\n+\n+class FileSystemWriteTest : public testing::TestWithParam<std::tuple<bool, bool>> {\n+ protected:\n+  bool IsParallel() { return std::get<0>(GetParam()); }\n+  bool IsSlow() { return std::get<1>(GetParam()); }\n+\n+  FileSystemWriteTest() { dataset::internal::Initialize(); }\n+\n+  void TestDatasetWriteRoundTrip(\n+      std::function<Result<std::shared_ptr<cp::ExecPlan>>(\n+          const cp::BatchesWithSchema& source_data, const FileSystemDatasetWriteOptions&,\n+          std::function<Future<util::optional<cp::ExecBatch>>()>*)>\n+          plan_factory,\n+      bool has_output) {\n+    // Runs in-memory data through the plan and then scans out the written\n+    // data to ensure it matches the source data\n+    auto format = std::make_shared<IpcFileFormat>();\n+    auto fs = std::make_shared<fs::internal::MockFileSystem>(fs::kNoTime);\n+    FileSystemDatasetWriteOptions write_options;\n+    write_options.file_write_options = format->DefaultWriteOptions();\n+    write_options.filesystem = fs;\n+    write_options.base_dir = \"root\";\n+    write_options.partitioning = std::make_shared<HivePartitioning>(schema({}));\n+    write_options.basename_template = \"{i}.feather\";\n+\n\nReview Comment:\n   Done.\n\n\n\n",
                    "created": "2022-05-11T20:52:24.196+0000",
                    "updated": "2022-05-11T20:52:24.196+0000",
                    "started": "2022-05-11T20:52:24.196+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "769295",
                    "issueId": "13444305"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13444305/worklog/769296",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on code in PR #13117:\nURL: https://github.com/apache/arrow/pull/13117#discussion_r870745687\n\n\n##########\ncpp/src/arrow/dataset/file_test.cc:\n##########\n@@ -342,5 +347,118 @@ TEST_F(TestFileSystemDataset, WriteProjected) {\n     }\n   }\n }\n+\n+class FileSystemWriteTest : public testing::TestWithParam<std::tuple<bool, bool>> {\n+ protected:\n+  bool IsParallel() { return std::get<0>(GetParam()); }\n+  bool IsSlow() { return std::get<1>(GetParam()); }\n+\n+  FileSystemWriteTest() { dataset::internal::Initialize(); }\n+\n+  void TestDatasetWriteRoundTrip(\n+      std::function<Result<std::shared_ptr<cp::ExecPlan>>(\n+          const cp::BatchesWithSchema& source_data, const FileSystemDatasetWriteOptions&,\n+          std::function<Future<util::optional<cp::ExecBatch>>()>*)>\n+          plan_factory,\n+      bool has_output) {\n+    // Runs in-memory data through the plan and then scans out the written\n+    // data to ensure it matches the source data\n+    auto format = std::make_shared<IpcFileFormat>();\n+    auto fs = std::make_shared<fs::internal::MockFileSystem>(fs::kNoTime);\n+    FileSystemDatasetWriteOptions write_options;\n+    write_options.file_write_options = format->DefaultWriteOptions();\n+    write_options.filesystem = fs;\n+    write_options.base_dir = \"root\";\n+    write_options.partitioning = std::make_shared<HivePartitioning>(schema({}));\n+    write_options.basename_template = \"{i}.feather\";\n+\n+    cp::BatchesWithSchema source_data;\n+    source_data.batches = {\n+        cp::ExecBatchFromJSON({int32(), boolean()}, \"[[null, true], [4, false]]\"),\n+        cp::ExecBatchFromJSON({int32(), boolean()},\n+                              \"[[5, null], [6, false], [7, false]]\")};\n+    source_data.schema = schema({field(\"i32\", int32()), field(\"bool\", boolean())});\n+\n+    AsyncGenerator<util::optional<cp::ExecBatch>> sink_gen;\n+    ASSERT_OK_AND_ASSIGN(auto plan, plan_factory(source_data, write_options, &sink_gen));\n+\n+    if (has_output) {\n+      ASSERT_FINISHES_OK_AND_ASSIGN(auto out_batches,\n+                                    cp::StartAndCollect(plan.get(), sink_gen));\n+      cp::AssertExecBatchesEqual(source_data.schema, source_data.batches, out_batches);\n+    } else {\n+      ASSERT_FINISHES_OK(cp::StartAndFinish(plan.get()));\n+    }\n+\n+    // Read written dataset and make sure it matches\n+    ASSERT_OK_AND_ASSIGN(auto dataset_factory, FileSystemDatasetFactory::Make(\n+                                                   fs, {\"root/0.feather\"}, format, {}));\n\nReview Comment:\n   Done.\n\n\n\n##########\ncpp/src/arrow/dataset/file_test.cc:\n##########\n@@ -342,5 +347,118 @@ TEST_F(TestFileSystemDataset, WriteProjected) {\n     }\n   }\n }\n+\n+class FileSystemWriteTest : public testing::TestWithParam<std::tuple<bool, bool>> {\n+ protected:\n+  bool IsParallel() { return std::get<0>(GetParam()); }\n+  bool IsSlow() { return std::get<1>(GetParam()); }\n+\n+  FileSystemWriteTest() { dataset::internal::Initialize(); }\n+\n+  void TestDatasetWriteRoundTrip(\n+      std::function<Result<std::shared_ptr<cp::ExecPlan>>(\n+          const cp::BatchesWithSchema& source_data, const FileSystemDatasetWriteOptions&,\n+          std::function<Future<util::optional<cp::ExecBatch>>()>*)>\n+          plan_factory,\n\nReview Comment:\n   Thanks, this is much cleaner.\n\n\n\n",
                    "created": "2022-05-11T20:52:39.257+0000",
                    "updated": "2022-05-11T20:52:39.257+0000",
                    "started": "2022-05-11T20:52:39.257+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "769296",
                    "issueId": "13444305"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13444305/worklog/769312",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rtpsw commented on code in PR #13117:\nURL: https://github.com/apache/arrow/pull/13117#discussion_r870764027\n\n\n##########\ncpp/src/arrow/dataset/file_base.cc:\n##########\n@@ -465,14 +465,7 @@ class TeeNode : public compute::MapNode {\n       // Need to wait for the task group to complete regardless of dw_status\n       task_group_.End().AddCallback(\n           [this, dw_status, finish_st](const Status& tg_status) {\n-            // Prefer dw_status then finish_st and then tg_status\n-            if (!dw_status.ok()) {\n-              finished_.MarkFinished(dw_status);\n-            }\n-            if (!finish_st.ok()) {\n-              finished_.MarkFinished(finish_st);\n-            }\n-            finished_.MarkFinished(tg_status);\n+            finished_.MarkFinished(dw_status & finish_st & tg_status);\n\nReview Comment:\n   Nothing to change, just a side comment: I think it is non-standard that `Status::operator&` is short-circuiting, as this is normally the semantics of `operator&&`.\n\n\n\n##########\ncpp/src/arrow/dataset/file_test.cc:\n##########\n@@ -349,18 +349,17 @@ TEST_F(TestFileSystemDataset, WriteProjected) {\n }\n \n class FileSystemWriteTest : public testing::TestWithParam<std::tuple<bool, bool>> {\n+  using PlanFactory = std::function<cp::Declaration(\n+      const FileSystemDatasetWriteOptions&,\n+      std::function<Future<util::optional<cp::ExecBatch>>()>*)>;\n+\n\nReview Comment:\n   I believe the concatenation code in this particular test could be even simpler if `PlanFactory` had a return-type of `std::vector<Declaration>`, because `Sequence` would do the checking-and-wiring work when passed the concatenated vector. OTOH, the `Root` and `Concat` functions you added to `Declaration` seem generally useful, so this test code is good for covering it. I'll let you choose the alternative you prefer.\n\n\n\n",
                    "created": "2022-05-11T21:19:41.322+0000",
                    "updated": "2022-05-11T21:19:41.322+0000",
                    "started": "2022-05-11T21:19:41.321+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "769312",
                    "issueId": "13444305"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13444305/worklog/769314",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rtpsw commented on code in PR #13117:\nURL: https://github.com/apache/arrow/pull/13117#discussion_r870767102\n\n\n##########\ncpp/src/arrow/dataset/file_test.cc:\n##########\n@@ -349,18 +349,17 @@ TEST_F(TestFileSystemDataset, WriteProjected) {\n }\n \n class FileSystemWriteTest : public testing::TestWithParam<std::tuple<bool, bool>> {\n+  using PlanFactory = std::function<cp::Declaration(\n+      const FileSystemDatasetWriteOptions&,\n+      std::function<Future<util::optional<cp::ExecBatch>>()>*)>;\n+\n\nReview Comment:\n   Given the [\"No clear root\" test error](https://github.com/apache/arrow/runs/6395740926?check_suite_focus=true), maybe the easiest fix would be the former alternative.\n\n\n\n",
                    "created": "2022-05-11T21:24:16.667+0000",
                    "updated": "2022-05-11T21:24:16.667+0000",
                    "started": "2022-05-11T21:24:16.667+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "769314",
                    "issueId": "13444305"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13444305/worklog/769530",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rtpsw commented on PR #13117:\nURL: https://github.com/apache/arrow/pull/13117#issuecomment-1124833249\n\n   Current failures don't look relevant to this PR. \n\n\n",
                    "created": "2022-05-12T10:36:46.219+0000",
                    "updated": "2022-05-12T10:36:46.219+0000",
                    "started": "2022-05-12T10:36:46.218+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "769530",
                    "issueId": "13444305"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13444305/worklog/769668",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on code in PR #13117:\nURL: https://github.com/apache/arrow/pull/13117#discussion_r871418326\n\n\n##########\ncpp/src/arrow/compute/exec/exec_plan.cc:\n##########\n@@ -506,22 +506,49 @@ Result<ExecNode*> Declaration::AddToPlan(ExecPlan* plan,\n   return node;\n }\n \n+Declaration* Declaration::Root() {\n+  Declaration* current = this;\n+  while (!current->inputs.empty()) {\n+    DCHECK_LE(current->inputs.size(), 1)\n+        << \"No clear root when a declaration has multiple inputs\";\n+    auto& input = current->inputs[0];\n+    Declaration* maybe_next = input.get<Declaration>();\n+    DCHECK(maybe_next) << \"Attempt to get root when part of declaration is already built\";\n+    current = maybe_next;\n+  }\n+  return current;\n+}\n+\n Declaration Declaration::Sequence(std::vector<Declaration> decls) {\n   DCHECK(!decls.empty());\n \n   Declaration out = std::move(decls.back());\n   decls.pop_back();\n-  auto receiver = &out;\n+  auto receiver = out.Root();\n\nReview Comment:\n   FWIW, the original intent of Sequence() wrt multiple inputs was:\r\n   ```c++\r\n   Declaration join = Declaration::Sequence({left_nodes...});\r\n   join = Declaration::Sequence({right_nodes..., join});\r\n   // appends the sequence right_nodes... as the second input of join\r\n   ```\r\n   it seems less than ideal to always resolve the root node.\r\n   \r\n   In cases where one does need the root node to be resolved that'd be easy enough with\r\n   ```diff\r\n   -Declaration decl = Declaration::Sequence({prefix..., has_root});\r\n   +Declaration* root = has_root.Root();\r\n   +*root = Declaration::Sequence({prefix..., std::move(*root)});\r\n   ```\n\n\n\n##########\ncpp/src/arrow/compute/exec/exec_plan.cc:\n##########\n@@ -506,22 +506,49 @@ Result<ExecNode*> Declaration::AddToPlan(ExecPlan* plan,\n   return node;\n }\n \n+Declaration* Declaration::Root() {\n+  Declaration* current = this;\n+  while (!current->inputs.empty()) {\n+    DCHECK_LE(current->inputs.size(), 1)\n+        << \"No clear root when a declaration has multiple inputs\";\n\nReview Comment:\n   DCHECKing here seems overly aggressive since we don't have anything like `bool has_root()`. Instead could we have\r\n   - Root() returns nullptr when no root can be found\r\n   - Roots() returns a vector of all decls with no inputs\n\n\n\n",
                    "created": "2022-05-12T14:09:10.457+0000",
                    "updated": "2022-05-12T14:09:10.457+0000",
                    "started": "2022-05-12T14:09:10.457+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "769668",
                    "issueId": "13444305"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13444305/worklog/770076",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on code in PR #13117:\nURL: https://github.com/apache/arrow/pull/13117#discussion_r872147159\n\n\n##########\ncpp/src/arrow/compute/exec/exec_plan.cc:\n##########\n@@ -506,22 +506,49 @@ Result<ExecNode*> Declaration::AddToPlan(ExecPlan* plan,\n   return node;\n }\n \n+Declaration* Declaration::Root() {\n+  Declaration* current = this;\n+  while (!current->inputs.empty()) {\n+    DCHECK_LE(current->inputs.size(), 1)\n+        << \"No clear root when a declaration has multiple inputs\";\n+    auto& input = current->inputs[0];\n+    Declaration* maybe_next = input.get<Declaration>();\n+    DCHECK(maybe_next) << \"Attempt to get root when part of declaration is already built\";\n+    current = maybe_next;\n+  }\n+  return current;\n+}\n+\n Declaration Declaration::Sequence(std::vector<Declaration> decls) {\n   DCHECK(!decls.empty());\n \n   Declaration out = std::move(decls.back());\n   decls.pop_back();\n-  auto receiver = &out;\n+  auto receiver = out.Root();\n\nReview Comment:\n   Ah, fair enough.  I can switch to this model.  Thanks for the clarification.\r\n   \n\n\n\n",
                    "created": "2022-05-13T08:45:51.261+0000",
                    "updated": "2022-05-13T08:45:51.261+0000",
                    "started": "2022-05-13T08:45:51.261+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "770076",
                    "issueId": "13444305"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13444305/worklog/770077",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on code in PR #13117:\nURL: https://github.com/apache/arrow/pull/13117#discussion_r872148471\n\n\n##########\ncpp/src/arrow/dataset/file_base.cc:\n##########\n@@ -465,14 +465,7 @@ class TeeNode : public compute::MapNode {\n       // Need to wait for the task group to complete regardless of dw_status\n       task_group_.End().AddCallback(\n           [this, dw_status, finish_st](const Status& tg_status) {\n-            // Prefer dw_status then finish_st and then tg_status\n-            if (!dw_status.ok()) {\n-              finished_.MarkFinished(dw_status);\n-            }\n-            if (!finish_st.ok()) {\n-              finished_.MarkFinished(finish_st);\n-            }\n-            finished_.MarkFinished(tg_status);\n+            finished_.MarkFinished(dw_status & finish_st & tg_status);\n\nReview Comment:\n   Agreed.  I'm not sure why it was chosen to be this way.  Perhaps inspired by python where `&&` forces the return of the operator to be a boolean.\n\n\n\n",
                    "created": "2022-05-13T08:47:21.362+0000",
                    "updated": "2022-05-13T08:47:21.362+0000",
                    "started": "2022-05-13T08:47:21.361+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "770077",
                    "issueId": "13444305"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13444305/worklog/770079",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on code in PR #13117:\nURL: https://github.com/apache/arrow/pull/13117#discussion_r872149598\n\n\n##########\ncpp/src/arrow/dataset/file_test.cc:\n##########\n@@ -349,18 +349,17 @@ TEST_F(TestFileSystemDataset, WriteProjected) {\n }\n \n class FileSystemWriteTest : public testing::TestWithParam<std::tuple<bool, bool>> {\n+  using PlanFactory = std::function<cp::Declaration(\n+      const FileSystemDatasetWriteOptions&,\n+      std::function<Future<util::optional<cp::ExecBatch>>()>*)>;\n+\n\nReview Comment:\n   I did think about this but I would like to start generally improving our test code for exec plans.  I think we are a little sparse at the moment and it is rather complex to create some of these unit tests.  I'll try and wrap this up tomorrow and if not I can leave the bonus utilities for a future PR.\n\n\n\n",
                    "created": "2022-05-13T08:48:46.686+0000",
                    "updated": "2022-05-13T08:48:46.686+0000",
                    "started": "2022-05-13T08:48:46.686+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "770079",
                    "issueId": "13444305"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13444305/worklog/770380",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on code in PR #13117:\nURL: https://github.com/apache/arrow/pull/13117#discussion_r872833684\n\n\n##########\ncpp/src/arrow/compute/exec/exec_plan.cc:\n##########\n@@ -506,22 +506,49 @@ Result<ExecNode*> Declaration::AddToPlan(ExecPlan* plan,\n   return node;\n }\n \n+Declaration* Declaration::Root() {\n+  Declaration* current = this;\n+  while (!current->inputs.empty()) {\n+    DCHECK_LE(current->inputs.size(), 1)\n+        << \"No clear root when a declaration has multiple inputs\";\n+    auto& input = current->inputs[0];\n+    Declaration* maybe_next = input.get<Declaration>();\n+    DCHECK(maybe_next) << \"Attempt to get root when part of declaration is already built\";\n+    current = maybe_next;\n+  }\n+  return current;\n+}\n+\n Declaration Declaration::Sequence(std::vector<Declaration> decls) {\n   DCHECK(!decls.empty());\n \n   Declaration out = std::move(decls.back());\n   decls.pop_back();\n-  auto receiver = &out;\n+  auto receiver = out.Root();\n\nReview Comment:\n   So this didn't end up working out because it dropped the tail.\r\n   \r\n   plan = [b, c]\r\n   source = [a]\r\n   Sequence({source, plan.Root()) = [a, b]\r\n   \r\n   I gave up on this and just switched to `std::vector<cp::Declaration>`\n\n\n\n",
                    "created": "2022-05-13T20:59:35.455+0000",
                    "updated": "2022-05-13T20:59:35.455+0000",
                    "started": "2022-05-13T20:59:35.455+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "770380",
                    "issueId": "13444305"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13444305/worklog/770381",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on code in PR #13117:\nURL: https://github.com/apache/arrow/pull/13117#discussion_r872835542\n\n\n##########\ncpp/src/arrow/compute/exec/exec_plan.cc:\n##########\n@@ -506,22 +506,49 @@ Result<ExecNode*> Declaration::AddToPlan(ExecPlan* plan,\n   return node;\n }\n \n+Declaration* Declaration::Root() {\n+  Declaration* current = this;\n+  while (!current->inputs.empty()) {\n+    DCHECK_LE(current->inputs.size(), 1)\n+        << \"No clear root when a declaration has multiple inputs\";\n\nReview Comment:\n   This function has gone away.\n\n\n\n",
                    "created": "2022-05-13T21:00:00.508+0000",
                    "updated": "2022-05-13T21:00:00.508+0000",
                    "started": "2022-05-13T21:00:00.508+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "770381",
                    "issueId": "13444305"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13444305/worklog/770882",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz closed pull request #13117: ARROW-16525: [C++] Tee node not properly marking node finished\nURL: https://github.com/apache/arrow/pull/13117\n\n\n",
                    "created": "2022-05-16T15:32:31.807+0000",
                    "updated": "2022-05-16T15:32:31.807+0000",
                    "started": "2022-05-16T15:32:31.807+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "770882",
                    "issueId": "13444305"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13444305/worklog/770974",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on PR #13117:\nURL: https://github.com/apache/arrow/pull/13117#issuecomment-1128000499\n\n   Benchmark runs are scheduled for baseline = 940ab93af6a6496d294c5a3f70709bde597ca548 and contender = d040fb568c8f7567e2d7c4e535f461743832003f. d040fb568c8f7567e2d7c4e535f461743832003f is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/f13b7e1ab5a14a7a96266d2633ce5655...390502aaf75f4fbda3a92cfb7cf2c3de/)\n   [Finished :arrow_down:0.43% :arrow_up:0.0%] [test-mac-arm](https://conbench.ursa.dev/compare/runs/fe78338578e7417c958c8744501d75d8...69ec8c1d69c14ff4be2d316ad42731bf/)\n   [Finished :arrow_down:0.36% :arrow_up:0.0%] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/053c43be7d754518a9f39d810dce3b01...847d86a1db104a44854e4aaa84c04002/)\n   [Finished :arrow_down:0.28% :arrow_up:0.04%] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/255be5b79ab647dd9abab36ab7c3c998...f2c130d64f9a4e07ba849f59ceb049d1/)\n   Buildkite builds:\n   [Finished] [`d040fb56` ec2-t3-xlarge-us-east-2](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ec2-t3-xlarge-us-east-2/builds/768)\n   [Finished] [`d040fb56` test-mac-arm](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-test-mac-arm/builds/765)\n   [Finished] [`d040fb56` ursa-i9-9960x](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-i9-9960x/builds/755)\n   [Finished] [`d040fb56` ursa-thinkcentre-m75q](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-thinkcentre-m75q/builds/771)\n   [Finished] [`940ab93a` ec2-t3-xlarge-us-east-2](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ec2-t3-xlarge-us-east-2/builds/767)\n   [Finished] [`940ab93a` test-mac-arm](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-test-mac-arm/builds/764)\n   [Finished] [`940ab93a` ursa-i9-9960x](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-i9-9960x/builds/754)\n   [Finished] [`940ab93a` ursa-thinkcentre-m75q](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-thinkcentre-m75q/builds/770)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python, R. Runs only benchmarks with cloud = True\n   test-mac-arm: Supported benchmark langs: C++, Python, R\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n",
                    "created": "2022-05-16T18:31:56.866+0000",
                    "updated": "2022-05-16T18:31:56.866+0000",
                    "started": "2022-05-16T18:31:56.865+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "770974",
                    "issueId": "13444305"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 11400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@4a3ac8bf[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@532f2810[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5529bf67[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7fec627a[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@14365550[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@a2c2276[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@126676d3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@e852957[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@28bf7102[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@43ebd9f1[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@629aefb1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@45f2ad24[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 11400,
        "customfield_12312520": null,
        "customfield_12312521": "Mon May 16 15:33:10 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-05-16T15:33:10.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-16525/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2022-05-11T04:50:29.000+0000",
        "updated": "2022-05-16T18:31:57.000+0000",
        "timeoriginalestimate": null,
        "description": "The tee node was not properly marking the node finished.  It needs to call End on the dataset writer and wait for all files to close and then call end on the task group and wait for all tasks to wrap up.\r\n\r\nWe also need to add tests for the TeeNode as well as a standalone test for the WriteNode.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 11400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Tee node not properly marking node finished",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13444305/comment/17537606",
                    "id": "17537606",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 13117\n[https://github.com/apache/arrow/pull/13117]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2022-05-16T15:33:10.439+0000",
                    "updated": "2022-05-16T15:33:10.439+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z12934:",
        "customfield_12314139": null
    }
}