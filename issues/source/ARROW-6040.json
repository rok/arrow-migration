{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13247126",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247126",
    "key": "ARROW-6040",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
            "name": "tianchen92",
            "key": "tianchen92",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
            },
            "displayName": "Ji Liu",
            "active": true,
            "timeZone": "Asia/Gaza"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=sfackler",
            "name": "sfackler",
            "key": "sfackler",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Steven Fackler",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=sfackler",
            "name": "sfackler",
            "key": "sfackler",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Steven Fackler",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 20400,
            "total": 20400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 20400,
            "total": 20400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6040/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 34,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247126/worklog/284049",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4960: ARROW-6040: [Java] Dictionary entries are required in IPC streams even when empty\nURL: https://github.com/apache/arrow/pull/4960\n \n \n   Related to [ARROW-6040](https://issues.apache.org/jira/browse/ARROW-6040).\r\n   \r\n   Java's ArrowReader requires that dictionaries are sent in an IPC stream: https://github.com/apache/arrow/blob/master/java/vector/src/main/java/org/apache/arrow/vector/ipc/ArrowReader.java#L196-L200.\r\n   However, as noted in ARROW-6006, that is not required if the stream contains no values.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-29T06:58:32.434+0000",
                    "updated": "2019-07-29T06:58:32.434+0000",
                    "started": "2019-07-29T06:58:32.433+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "284049",
                    "issueId": "13247126"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247126/worklog/286643",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4960: ARROW-6040: [Java] Dictionary entries are required in IPC streams even when empty\nURL: https://github.com/apache/arrow/pull/4960#issuecomment-517238196\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4960?src=pr&el=h1) Report\n   > Merging [#4960](https://codecov.io/gh/apache/arrow/pull/4960?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/38b01764da445ce6383b60a50d1e9b313857a3d7?src=pr&el=desc) will **increase** coverage by `2.2%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4960/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4960?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff            @@\n   ##           master   #4960      +/-   ##\n   =========================================\n   + Coverage    87.5%   89.7%    +2.2%     \n   =========================================\n     Files         998     667     -331     \n     Lines      141784   98627   -43157     \n     Branches     1418       0    -1418     \n   =========================================\n   - Hits       124065   88478   -35587     \n   + Misses      17357   10149    -7208     \n   + Partials      362       0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4960?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/extension\\_type.h](https://codecov.io/gh/apache/arrow/pull/4960/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9leHRlbnNpb25fdHlwZS5o) | `85.71% <0%> (-14.29%)` | :arrow_down: |\n   | [cpp/src/gandiva/function\\_registry\\_test.cc](https://codecov.io/gh/apache/arrow/pull/4960/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2Z1bmN0aW9uX3JlZ2lzdHJ5X3Rlc3QuY2M=) | `87.23% <0%> (-12.77%)` | :arrow_down: |\n   | [cpp/src/parquet/arrow/reader.h](https://codecov.io/gh/apache/arrow/pull/4960/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2Fycm93L3JlYWRlci5o) | `91.66% <0%> (-8.34%)` | :arrow_down: |\n   | [cpp/src/gandiva/precompiled/time.cc](https://codecov.io/gh/apache/arrow/pull/4960/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL3ByZWNvbXBpbGVkL3RpbWUuY2M=) | `90.62% <0%> (-6.57%)` | :arrow_down: |\n   | [cpp/src/arrow/array/builder\\_binary.h](https://codecov.io/gh/apache/arrow/pull/4960/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hcnJheS9idWlsZGVyX2JpbmFyeS5o) | `92.38% <0%> (-4.79%)` | :arrow_down: |\n   | [cpp/src/arrow/array/builder\\_adaptive.h](https://codecov.io/gh/apache/arrow/pull/4960/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hcnJheS9idWlsZGVyX2FkYXB0aXZlLmg=) | `93.75% <0%> (-3.13%)` | :arrow_down: |\n   | [cpp/src/arrow/array/builder\\_nested.h](https://codecov.io/gh/apache/arrow/pull/4960/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hcnJheS9idWlsZGVyX25lc3RlZC5o) | `97.61% <0%> (-2.39%)` | :arrow_down: |\n   | [cpp/src/arrow/json/converter.cc](https://codecov.io/gh/apache/arrow/pull/4960/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9qc29uL2NvbnZlcnRlci5jYw==) | `90.05% <0%> (-2.25%)` | :arrow_down: |\n   | [cpp/src/gandiva/precompiled/arithmetic\\_ops.cc](https://codecov.io/gh/apache/arrow/pull/4960/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL3ByZWNvbXBpbGVkL2FyaXRobWV0aWNfb3BzLmNj) | `36.11% <0%> (-2.13%)` | :arrow_down: |\n   | [cpp/src/arrow/array/builder\\_nested.cc](https://codecov.io/gh/apache/arrow/pull/4960/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hcnJheS9idWlsZGVyX25lc3RlZC5jYw==) | `90.55% <0%> (-2.12%)` | :arrow_down: |\n   | ... and [429 more](https://codecov.io/gh/apache/arrow/pull/4960/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4960?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4960?src=pr&el=footer). Last update [38b0176...77f1438](https://codecov.io/gh/apache/arrow/pull/4960?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-01T11:10:14.620+0000",
                    "updated": "2019-08-01T11:10:14.620+0000",
                    "started": "2019-08-01T11:10:14.619+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "286643",
                    "issueId": "13247126"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247126/worklog/286747",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #4960: ARROW-6040: [Java] Dictionary entries are required in IPC streams even when empty\nURL: https://github.com/apache/arrow/pull/4960#discussion_r309738410\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/ipc/ArrowWriter.java\n ##########\n @@ -103,6 +105,7 @@ public void start() throws IOException {\n    */\n   public void writeBatch() throws IOException {\n     ensureStarted();\n+    writeDictionaries();\n \n Review comment:\n   I would personally put the `if (!dictWritten)` check here, otherwise call `writeDictionaries` something like `ensureDictionariesWritten`\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-01T14:50:32.963+0000",
                    "updated": "2019-08-01T14:50:32.963+0000",
                    "started": "2019-08-01T14:50:32.963+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "286747",
                    "issueId": "13247126"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247126/worklog/286748",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #4960: ARROW-6040: [Java] Dictionary entries are required in IPC streams even when empty\nURL: https://github.com/apache/arrow/pull/4960#discussion_r309739666\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/ipc/ArrowStreamReader.java\n ##########\n @@ -170,4 +172,21 @@ protected ArrowDictionaryBatch readDictionary() throws IOException {\n \n     return MessageSerializer.deserializeDictionaryBatch(result.getMessage(), bodyBuffer);\n   }\n+\n+  @Override\n+  protected void readDictionaries(Map<Long, Dictionary> dictionaries) throws IOException {\n+    // Read and load all dictionaries from schema\n+    for (int i = 0; i < dictionaries.size(); i++) {\n+      ArrowDictionaryBatch dictionaryBatch = readDictionary();\n+      if (dictionaryBatch == null) {\n+        // empty stream has no dictionaries in IPC.\n+        if (i == 0) {\n+          break;\n \n Review comment:\n   If the stream is not empty, and the dictionaries are missing, where will the error be raised? It's a bit hard to test this case I suppose\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-01T14:50:33.064+0000",
                    "updated": "2019-08-01T14:50:33.064+0000",
                    "started": "2019-08-01T14:50:33.064+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "286748",
                    "issueId": "13247126"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247126/worklog/287452",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4960: ARROW-6040: [Java] Dictionary entries are required in IPC streams even when empty\nURL: https://github.com/apache/arrow/pull/4960#discussion_r309963815\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/ipc/ArrowWriter.java\n ##########\n @@ -103,6 +105,7 @@ public void start() throws IOException {\n    */\n   public void writeBatch() throws IOException {\n     ensureStarted();\n+    writeDictionaries();\n \n Review comment:\n   Right, ensureDictionariesWritten looks better, thanks\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-02T02:41:54.428+0000",
                    "updated": "2019-08-02T02:41:54.428+0000",
                    "started": "2019-08-02T02:41:54.428+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "287452",
                    "issueId": "13247126"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247126/worklog/287453",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4960: ARROW-6040: [Java] Dictionary entries are required in IPC streams even when empty\nURL: https://github.com/apache/arrow/pull/4960#discussion_r309964426\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/ipc/ArrowStreamReader.java\n ##########\n @@ -170,4 +172,21 @@ protected ArrowDictionaryBatch readDictionary() throws IOException {\n \n     return MessageSerializer.deserializeDictionaryBatch(result.getMessage(), bodyBuffer);\n   }\n+\n+  @Override\n+  protected void readDictionaries(Map<Long, Dictionary> dictionaries) throws IOException {\n+    // Read and load all dictionaries from schema\n+    for (int i = 0; i < dictionaries.size(); i++) {\n+      ArrowDictionaryBatch dictionaryBatch = readDictionary();\n+      if (dictionaryBatch == null) {\n+        // empty stream has no dictionaries in IPC.\n+        if (i == 0) {\n+          break;\n \n Review comment:\n   Agreed, I have thought about this and have not good solution. what about check loadNextBatch, like:\r\n   if (i == 0) {\r\n             initialized = true;\r\n             if (loadNextBatch()) {\r\n               throw new IOException();\r\n             }\r\n             break;\r\n           }\r\n   \r\n   if first dictionary is null but has follow batch, then i think the dictionaries are missing.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-02T02:45:03.720+0000",
                    "updated": "2019-08-02T02:45:03.720+0000",
                    "started": "2019-08-02T02:45:03.719+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "287453",
                    "issueId": "13247126"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247126/worklog/288215",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #4960: ARROW-6040: [Java] Dictionary entries are required in IPC streams even when empty\nURL: https://github.com/apache/arrow/pull/4960#discussion_r310280752\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/ipc/ArrowStreamReader.java\n ##########\n @@ -170,4 +172,21 @@ protected ArrowDictionaryBatch readDictionary() throws IOException {\n \n     return MessageSerializer.deserializeDictionaryBatch(result.getMessage(), bodyBuffer);\n   }\n+\n+  @Override\n+  protected void readDictionaries(Map<Long, Dictionary> dictionaries) throws IOException {\n+    // Read and load all dictionaries from schema\n+    for (int i = 0; i < dictionaries.size(); i++) {\n+      ArrowDictionaryBatch dictionaryBatch = readDictionary();\n+      if (dictionaryBatch == null) {\n+        // empty stream has no dictionaries in IPC.\n+        if (i == 0) {\n+          break;\n \n Review comment:\n   We have partially handled this in C++ but it is not as robust as it could be, I just opened\r\n   \r\n   https://issues.apache.org/jira/browse/ARROW-6126\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-02T20:08:31.422+0000",
                    "updated": "2019-08-02T20:08:31.422+0000",
                    "started": "2019-08-02T20:08:31.422+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "288215",
                    "issueId": "13247126"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247126/worklog/288327",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4960: ARROW-6040: [Java] Dictionary entries are required in IPC streams even when empty\nURL: https://github.com/apache/arrow/pull/4960#discussion_r310324879\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/ipc/ArrowStreamReader.java\n ##########\n @@ -170,4 +172,21 @@ protected ArrowDictionaryBatch readDictionary() throws IOException {\n \n     return MessageSerializer.deserializeDictionaryBatch(result.getMessage(), bodyBuffer);\n   }\n+\n+  @Override\n+  protected void readDictionaries(Map<Long, Dictionary> dictionaries) throws IOException {\n+    // Read and load all dictionaries from schema\n+    for (int i = 0; i < dictionaries.size(); i++) {\n+      ArrowDictionaryBatch dictionaryBatch = readDictionary();\n+      if (dictionaryBatch == null) {\n+        // empty stream has no dictionaries in IPC.\n+        if (i == 0) {\n+          break;\n \n Review comment:\n   Fine, and this PR already updated.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-02T23:28:49.177+0000",
                    "updated": "2019-08-02T23:28:49.177+0000",
                    "started": "2019-08-02T23:28:49.177+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "288327",
                    "issueId": "13247126"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247126/worklog/291757",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4960: ARROW-6040: [Java] Dictionary entries are required in IPC streams even when empty\nURL: https://github.com/apache/arrow/pull/4960#discussion_r312318211\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/ipc/ArrowStreamReader.java\n ##########\n @@ -170,4 +172,25 @@ protected ArrowDictionaryBatch readDictionary() throws IOException {\n \n     return MessageSerializer.deserializeDictionaryBatch(result.getMessage(), bodyBuffer);\n   }\n+\n+  @Override\n+  protected void readDictionaries(Map<Long, Dictionary> dictionaries) throws IOException {\n+    // Read and load all dictionaries from schema\n+    for (int i = 0; i < dictionaries.size(); i++) {\n+      ArrowDictionaryBatch dictionaryBatch = readDictionary();\n+      if (dictionaryBatch == null) {\n+        // empty stream has no dictionaries in IPC.\n+        if (i == 0) {\n+          initialized = true;\n+          if (loadNextBatch()) {\n+            throw new IOException(\"DictionaryBatch is missing.\");\n+          }\n+          break;\n+        } else {\n+          throw new IOException(\"Unexpected end of input. Expected DictionaryBatch\");\n \n Review comment:\n   It would be potentially useful to include \"i\" in the error message.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T03:29:44.511+0000",
                    "updated": "2019-08-09T03:29:44.511+0000",
                    "started": "2019-08-09T03:29:44.511+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291757",
                    "issueId": "13247126"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247126/worklog/291761",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4960: ARROW-6040: [Java] Dictionary entries are required in IPC streams even when empty\nURL: https://github.com/apache/arrow/pull/4960#discussion_r312318544\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/ipc/TestArrowReaderWriter.java\n ##########\n @@ -135,4 +151,128 @@ public void test() throws IOException {\n     }\n   }\n \n+  @Test\n+  public void testWriteReadWithDictionaries() throws IOException {\n+    DictionaryProvider.MapDictionaryProvider provider = new DictionaryProvider.MapDictionaryProvider();\n+    provider.put(dictionary);\n+\n+    VarCharVector vector1 = newVarCharVector(\"varchar1\", allocator);\n+    vector1.allocateNewSafe();\n+    vector1.set(0, \"foo\".getBytes(StandardCharsets.UTF_8));\n+    vector1.set(1, \"bar\".getBytes(StandardCharsets.UTF_8));\n+    vector1.set(3, \"baz\".getBytes(StandardCharsets.UTF_8));\n+    vector1.set(4, \"bar\".getBytes(StandardCharsets.UTF_8));\n+    vector1.set(5, \"baz\".getBytes(StandardCharsets.UTF_8));\n+    vector1.setValueCount(6);\n+    FieldVector encodedVector1 = (FieldVector) DictionaryEncoder.encode(vector1, dictionary);\n+    vector1.close();\n+\n+    VarCharVector vector2 = newVarCharVector(\"varchar2\", allocator);\n+    vector2.allocateNewSafe();\n+    vector2.set(0, \"bar\".getBytes(StandardCharsets.UTF_8));\n+    vector2.set(1, \"baz\".getBytes(StandardCharsets.UTF_8));\n+    vector2.set(2, \"foo\".getBytes(StandardCharsets.UTF_8));\n+    vector2.set(3, \"foo\".getBytes(StandardCharsets.UTF_8));\n+    vector2.set(4, \"foo\".getBytes(StandardCharsets.UTF_8));\n+    vector2.set(5, \"bar\".getBytes(StandardCharsets.UTF_8));\n+    vector2.setValueCount(6);\n+    FieldVector encodedVector2 = (FieldVector) DictionaryEncoder.encode(vector2, dictionary);\n+    vector2.close();\n+\n+    List<Field> fields = Arrays.asList(encodedVector1.getField(), encodedVector2.getField());\n+    List<FieldVector> vectors = Collections2.asImmutableList(encodedVector1, encodedVector2);\n+    VectorSchemaRoot root =  new VectorSchemaRoot(fields, vectors, encodedVector1.getValueCount());\n+\n+    ByteArrayOutputStream out = new ByteArrayOutputStream();\n+    ArrowFileWriter writer = new ArrowFileWriter(root, provider, newChannel(out));\n+    writer.start();\n+    writer.writeBatch();\n+    writer.end();\n+\n+    try (SeekableReadChannel channel = new SeekableReadChannel(\n+        new ByteArrayReadableSeekableByteChannel(out.toByteArray()));\n+        ArrowFileReader reader = new ArrowFileReader(channel, allocator)) {\n+      Schema readSchema = reader.getVectorSchemaRoot().getSchema();\n+      assertEquals(root.getSchema(), readSchema);\n+      assertEquals(1, reader.getDictionaryBlocks().size());\n+      assertEquals(1, reader.getRecordBlocks().size());\n+\n+      reader.loadNextBatch();\n+      assertEquals(2, reader.getVectorSchemaRoot().getFieldVectors().size());\n+    }\n+  }\n+\n+  @Test\n+  public void testEmptyStream1() throws IOException {\n \n Review comment:\n   please be more description in the test name for this and the one below.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T03:32:46.348+0000",
                    "updated": "2019-08-09T03:32:46.348+0000",
                    "started": "2019-08-09T03:32:46.347+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291761",
                    "issueId": "13247126"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247126/worklog/291764",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4960: ARROW-6040: [Java] Dictionary entries are required in IPC streams even when empty\nURL: https://github.com/apache/arrow/pull/4960#discussion_r312318772\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/ipc/ArrowReader.java\n ##########\n @@ -46,7 +46,7 @@\n   private VectorLoader loader;\n   private VectorSchemaRoot root;\n   private Map<Long, Dictionary> dictionaries;\n-  private boolean initialized = false;\n+  protected boolean initialized = false;\n \n Review comment:\n   does this need to be shared?  its strange that both extension of ArrowReader don't use it\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T03:34:30.197+0000",
                    "updated": "2019-08-09T03:34:30.197+0000",
                    "started": "2019-08-09T03:34:30.196+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291764",
                    "issueId": "13247126"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247126/worklog/291780",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4960: ARROW-6040: [Java] Dictionary entries are required in IPC streams even when empty\nURL: https://github.com/apache/arrow/pull/4960#discussion_r312323005\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/ipc/ArrowStreamReader.java\n ##########\n @@ -170,4 +172,25 @@ protected ArrowDictionaryBatch readDictionary() throws IOException {\n \n     return MessageSerializer.deserializeDictionaryBatch(result.getMessage(), bodyBuffer);\n   }\n+\n+  @Override\n+  protected void readDictionaries(Map<Long, Dictionary> dictionaries) throws IOException {\n+    // Read and load all dictionaries from schema\n+    for (int i = 0; i < dictionaries.size(); i++) {\n+      ArrowDictionaryBatch dictionaryBatch = readDictionary();\n+      if (dictionaryBatch == null) {\n+        // empty stream has no dictionaries in IPC.\n+        if (i == 0) {\n+          initialized = true;\n+          if (loadNextBatch()) {\n+            throw new IOException(\"DictionaryBatch is missing.\");\n+          }\n+          break;\n+        } else {\n+          throw new IOException(\"Unexpected end of input. Expected DictionaryBatch\");\n \n Review comment:\n   Sure, fixed.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T04:08:37.531+0000",
                    "updated": "2019-08-09T04:08:37.531+0000",
                    "started": "2019-08-09T04:08:37.531+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291780",
                    "issueId": "13247126"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247126/worklog/291781",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4960: ARROW-6040: [Java] Dictionary entries are required in IPC streams even when empty\nURL: https://github.com/apache/arrow/pull/4960#discussion_r312323024\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/ipc/TestArrowReaderWriter.java\n ##########\n @@ -135,4 +151,128 @@ public void test() throws IOException {\n     }\n   }\n \n+  @Test\n+  public void testWriteReadWithDictionaries() throws IOException {\n+    DictionaryProvider.MapDictionaryProvider provider = new DictionaryProvider.MapDictionaryProvider();\n+    provider.put(dictionary);\n+\n+    VarCharVector vector1 = newVarCharVector(\"varchar1\", allocator);\n+    vector1.allocateNewSafe();\n+    vector1.set(0, \"foo\".getBytes(StandardCharsets.UTF_8));\n+    vector1.set(1, \"bar\".getBytes(StandardCharsets.UTF_8));\n+    vector1.set(3, \"baz\".getBytes(StandardCharsets.UTF_8));\n+    vector1.set(4, \"bar\".getBytes(StandardCharsets.UTF_8));\n+    vector1.set(5, \"baz\".getBytes(StandardCharsets.UTF_8));\n+    vector1.setValueCount(6);\n+    FieldVector encodedVector1 = (FieldVector) DictionaryEncoder.encode(vector1, dictionary);\n+    vector1.close();\n+\n+    VarCharVector vector2 = newVarCharVector(\"varchar2\", allocator);\n+    vector2.allocateNewSafe();\n+    vector2.set(0, \"bar\".getBytes(StandardCharsets.UTF_8));\n+    vector2.set(1, \"baz\".getBytes(StandardCharsets.UTF_8));\n+    vector2.set(2, \"foo\".getBytes(StandardCharsets.UTF_8));\n+    vector2.set(3, \"foo\".getBytes(StandardCharsets.UTF_8));\n+    vector2.set(4, \"foo\".getBytes(StandardCharsets.UTF_8));\n+    vector2.set(5, \"bar\".getBytes(StandardCharsets.UTF_8));\n+    vector2.setValueCount(6);\n+    FieldVector encodedVector2 = (FieldVector) DictionaryEncoder.encode(vector2, dictionary);\n+    vector2.close();\n+\n+    List<Field> fields = Arrays.asList(encodedVector1.getField(), encodedVector2.getField());\n+    List<FieldVector> vectors = Collections2.asImmutableList(encodedVector1, encodedVector2);\n+    VectorSchemaRoot root =  new VectorSchemaRoot(fields, vectors, encodedVector1.getValueCount());\n+\n+    ByteArrayOutputStream out = new ByteArrayOutputStream();\n+    ArrowFileWriter writer = new ArrowFileWriter(root, provider, newChannel(out));\n+    writer.start();\n+    writer.writeBatch();\n+    writer.end();\n+\n+    try (SeekableReadChannel channel = new SeekableReadChannel(\n+        new ByteArrayReadableSeekableByteChannel(out.toByteArray()));\n+        ArrowFileReader reader = new ArrowFileReader(channel, allocator)) {\n+      Schema readSchema = reader.getVectorSchemaRoot().getSchema();\n+      assertEquals(root.getSchema(), readSchema);\n+      assertEquals(1, reader.getDictionaryBlocks().size());\n+      assertEquals(1, reader.getRecordBlocks().size());\n+\n+      reader.loadNextBatch();\n+      assertEquals(2, reader.getVectorSchemaRoot().getFieldVectors().size());\n+    }\n+  }\n+\n+  @Test\n+  public void testEmptyStream1() throws IOException {\n \n Review comment:\n   Thanks, fixed.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T04:08:46.267+0000",
                    "updated": "2019-08-09T04:08:46.267+0000",
                    "started": "2019-08-09T04:08:46.267+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291781",
                    "issueId": "13247126"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247126/worklog/291786",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4960: ARROW-6040: [Java] Dictionary entries are required in IPC streams even when empty\nURL: https://github.com/apache/arrow/pull/4960#discussion_r312323523\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/ipc/ArrowReader.java\n ##########\n @@ -46,7 +46,7 @@\n   private VectorLoader loader;\n   private VectorSchemaRoot root;\n   private Map<Long, Dictionary> dictionaries;\n-  private boolean initialized = false;\n+  protected boolean initialized = false;\n \n Review comment:\n   Yes, as Wes pointed out \"If the stream is not empty, and the dictionaries are missing, we should raise the error\".  In this case we need loadNextBatch (https://github.com/apache/arrow/pull/4960/files#diff-4d9b9d173e23ff1bedae9331dfcec910R185) to see if it is really empty stream, before this, we need to change this flag, other wise loadNextBatch will throw exception because it need to read schema again which has already been read before.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T04:13:41.409+0000",
                    "updated": "2019-08-09T04:13:41.409+0000",
                    "started": "2019-08-09T04:13:41.408+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291786",
                    "issueId": "13247126"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247126/worklog/291837",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4960: ARROW-6040: [Java] Dictionary entries are required in IPC streams even when empty\nURL: https://github.com/apache/arrow/pull/4960\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T06:09:05.518+0000",
                    "updated": "2019-08-09T06:09:05.518+0000",
                    "started": "2019-08-09T06:09:05.517+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291837",
                    "issueId": "13247126"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247126/worklog/291838",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4960: ARROW-6040: [Java] Dictionary entries are required in IPC streams even when empty\nURL: https://github.com/apache/arrow/pull/4960\n \n \n   Related to [ARROW-6040](https://issues.apache.org/jira/browse/ARROW-6040).\r\n   \r\n   Java's ArrowReader requires that dictionaries are sent in an IPC stream: https://github.com/apache/arrow/blob/master/java/vector/src/main/java/org/apache/arrow/vector/ipc/ArrowReader.java#L196-L200.\r\n   However, as noted in ARROW-6006, that is not required if the stream contains no values.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T06:09:07.322+0000",
                    "updated": "2019-08-09T06:09:07.322+0000",
                    "started": "2019-08-09T06:09:07.322+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291838",
                    "issueId": "13247126"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247126/worklog/291999",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4960: ARROW-6040: [Java] Dictionary entries are required in IPC streams even when empty\nURL: https://github.com/apache/arrow/pull/4960\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T11:27:46.047+0000",
                    "updated": "2019-08-09T11:27:46.047+0000",
                    "started": "2019-08-09T11:27:46.047+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291999",
                    "issueId": "13247126"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247126/worklog/292000",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4960: ARROW-6040: [Java] Dictionary entries are required in IPC streams even when empty\nURL: https://github.com/apache/arrow/pull/4960\n \n \n   Related to [ARROW-6040](https://issues.apache.org/jira/browse/ARROW-6040).\r\n   \r\n   Java's ArrowReader requires that dictionaries are sent in an IPC stream: https://github.com/apache/arrow/blob/master/java/vector/src/main/java/org/apache/arrow/vector/ipc/ArrowReader.java#L196-L200.\r\n   However, as noted in ARROW-6006, that is not required if the stream contains no values.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T11:27:47.947+0000",
                    "updated": "2019-08-09T11:27:47.947+0000",
                    "started": "2019-08-09T11:27:47.947+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "292000",
                    "issueId": "13247126"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247126/worklog/292165",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4960: ARROW-6040: [Java] Dictionary entries are required in IPC streams even when empty\nURL: https://github.com/apache/arrow/pull/4960#issuecomment-517238196\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4960?src=pr&el=h1) Report\n   > Merging [#4960](https://codecov.io/gh/apache/arrow/pull/4960?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/38b01764da445ce6383b60a50d1e9b313857a3d7?src=pr&el=desc) will **increase** coverage by `2.18%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4960/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4960?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4960      +/-   ##\n   ==========================================\n   + Coverage    87.5%   89.68%   +2.18%     \n   ==========================================\n     Files         998      670     -328     \n     Lines      141784    99406   -42378     \n     Branches     1418        0    -1418     \n   ==========================================\n   - Hits       124065    89156   -34909     \n   + Misses      17357    10250    -7107     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4960?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/parquet/arrow/reader.h](https://codecov.io/gh/apache/arrow/pull/4960/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2Fycm93L3JlYWRlci5o) | `80% <0%> (-20%)` | :arrow_down: |\n   | [cpp/src/parquet/file\\_writer.h](https://codecov.io/gh/apache/arrow/pull/4960/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2ZpbGVfd3JpdGVyLmg=) | `81.81% <0%> (-18.19%)` | :arrow_down: |\n   | [cpp/src/arrow/extension\\_type.h](https://codecov.io/gh/apache/arrow/pull/4960/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9leHRlbnNpb25fdHlwZS5o) | `85.71% <0%> (-14.29%)` | :arrow_down: |\n   | [cpp/src/gandiva/function\\_registry\\_test.cc](https://codecov.io/gh/apache/arrow/pull/4960/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2Z1bmN0aW9uX3JlZ2lzdHJ5X3Rlc3QuY2M=) | `87.23% <0%> (-12.77%)` | :arrow_down: |\n   | [cpp/src/gandiva/precompiled/time.cc](https://codecov.io/gh/apache/arrow/pull/4960/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL3ByZWNvbXBpbGVkL3RpbWUuY2M=) | `90.62% <0%> (-6.57%)` | :arrow_down: |\n   | [cpp/src/arrow/array/builder\\_binary.h](https://codecov.io/gh/apache/arrow/pull/4960/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hcnJheS9idWlsZGVyX2JpbmFyeS5o) | `92.92% <0%> (-4.25%)` | :arrow_down: |\n   | [cpp/src/arrow/array/builder\\_adaptive.h](https://codecov.io/gh/apache/arrow/pull/4960/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hcnJheS9idWlsZGVyX2FkYXB0aXZlLmg=) | `93.75% <0%> (-3.13%)` | :arrow_down: |\n   | [cpp/src/arrow/array/builder\\_nested.h](https://codecov.io/gh/apache/arrow/pull/4960/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hcnJheS9idWlsZGVyX25lc3RlZC5o) | `97.61% <0%> (-2.39%)` | :arrow_down: |\n   | [cpp/src/arrow/json/converter.cc](https://codecov.io/gh/apache/arrow/pull/4960/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9qc29uL2NvbnZlcnRlci5jYw==) | `90.05% <0%> (-2.25%)` | :arrow_down: |\n   | [cpp/src/gandiva/precompiled/arithmetic\\_ops.cc](https://codecov.io/gh/apache/arrow/pull/4960/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL3ByZWNvbXBpbGVkL2FyaXRobWV0aWNfb3BzLmNj) | `36.11% <0%> (-2.13%)` | :arrow_down: |\n   | ... and [486 more](https://codecov.io/gh/apache/arrow/pull/4960/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4960?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4960?src=pr&el=footer). Last update [38b0176...df6a8a0](https://codecov.io/gh/apache/arrow/pull/4960?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T16:51:55.493+0000",
                    "updated": "2019-08-09T16:51:55.493+0000",
                    "started": "2019-08-09T16:51:55.493+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "292165",
                    "issueId": "13247126"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247126/worklog/292464",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4960: ARROW-6040: [Java] Dictionary entries are required in IPC streams even when empty\nURL: https://github.com/apache/arrow/pull/4960#discussion_r312693088\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/ipc/ArrowStreamReader.java\n ##########\n @@ -170,4 +172,21 @@ protected ArrowDictionaryBatch readDictionary() throws IOException {\n \n     return MessageSerializer.deserializeDictionaryBatch(result.getMessage(), bodyBuffer);\n   }\n+\n+  @Override\n+  protected void readDictionaries(Map<Long, Dictionary> dictionaries) throws IOException {\n+    // Read and load all dictionaries from schema\n+    for (int i = 0; i < dictionaries.size(); i++) {\n+      ArrowDictionaryBatch dictionaryBatch = readDictionary();\n+      if (dictionaryBatch == null) {\n+        // empty stream has no dictionaries in IPC.\n+        if (i == 0) {\n+          break;\n \n Review comment:\n   Looking at the [spec](https://arrow.apache.org/docs/ipc.html), I think there is a larger bug in the Java code.  It seems to assume that all dictionaries are at the start of the file/stream.  But the specification says:\r\n   \r\n   > DictionaryBatch and RecordBatch messages may be interleaved, but before any dictionary key is used in a RecordBatch it should be defined in a DictionaryBatch\r\n   \r\n   the example however shows all dictionary batches defined and then deltas show afterwards.  Additionally, the java code does not seem to honor the isDelta flag on dictionary batches.\r\n   \r\n   Lastly, we should clarify for the file format, that while:\r\n   > In the file format, there is no requirement that dictionary keys should be defined in a DictionaryBatch before they are used in a RecordBatch, as long as the keys are defined somewhere in the file.\r\n   \r\n   That the order of the definition is still important.\r\n   \r\n   @wesm am I reading the spec correctly?   If so I think for this PR we should at least first issue, and we should file follow-up JIRAs for the remaining two.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-10T06:46:47.419+0000",
                    "updated": "2019-08-10T06:46:47.419+0000",
                    "started": "2019-08-10T06:46:47.419+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "292464",
                    "issueId": "13247126"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 20400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@4defdc24[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@bbb9073[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5c8000e4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@bef3b0f[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@33e91dc3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@332affd2[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6ff14e73[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@1db427c1[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@66c836b1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@2f891d5[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@671fc52f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@5ba96c22[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 20400,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Aug 21 05:37:24 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-08-21T05:37:24.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6040/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-07-25T18:02:58.000+0000",
        "updated": "2019-08-21T05:37:24.000+0000",
        "timeoriginalestimate": null,
        "description": "Java's ArrowReader requires that dictionaries are sent in an IPC stream:\u00a0[https://github.com/apache/arrow/blob/master/java/vector/src/main/java/org/apache/arrow/vector/ipc/ArrowReader.java#L196-L200].\r\n\r\nHowever, as noted in ARROW-6006, that is not required if the stream contains no values.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "5h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 20400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] Dictionary entries are required in IPC streams even when empty",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247126/comment/16911957",
                    "id": "16911957",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 4960\n[https://github.com/apache/arrow/pull/4960]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-08-21T05:37:24.801+0000",
                    "updated": "2019-08-21T05:37:24.801+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z05180:",
        "customfield_12314139": null
    }
}