{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13165923",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165923",
    "key": "ARROW-2708",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343858",
                "id": "12343858",
                "description": "",
                "name": "0.12.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-01-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 8400,
            "total": 8400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 8400,
            "total": 8400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2708/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 16,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165923/worklog/112564",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Ghatage opened a new pull request #2142: ARROW-2708 [C++] Internal GetValues function in arrow::compute should check for nullptr\nURL: https://github.com/apache/arrow/pull/2142\n \n \n   This modifies inline `GetValues()` to log and return nullptr in case one of its arguments / it's contents are nullptr.\r\n   \r\n   Author: Anup Ghatage <ghatageanup@gmail.com>\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-16T20:26:27.485+0000",
                    "updated": "2018-06-16T20:26:27.485+0000",
                    "started": "2018-06-16T20:26:27.484+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "112564",
                    "issueId": "13165923"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165923/worklog/112565",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Ghatage commented on issue #2142: ARROW-2708 [C++] Internal GetValues function in arrow::compute should check for nullptr\nURL: https://github.com/apache/arrow/pull/2142#issuecomment-397837546\n \n \n   Apologies, added a few things last minute. Will close and open new PR.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-16T20:38:38.530+0000",
                    "updated": "2018-06-16T20:38:38.530+0000",
                    "started": "2018-06-16T20:38:38.529+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "112565",
                    "issueId": "13165923"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165923/worklog/112566",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Ghatage closed pull request #2142: ARROW-2708 [C++] Internal GetValues function in arrow::compute should check for nullptr\nURL: https://github.com/apache/arrow/pull/2142\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/compute/kernels/cast.cc b/cpp/src/arrow/compute/kernels/cast.cc\nindex 39925d7835..3250b635b5 100644\n--- a/cpp/src/arrow/compute/kernels/cast.cc\n+++ b/cpp/src/arrow/compute/kernels/cast.cc\n@@ -200,6 +200,10 @@ struct CastFunctor<O, I,\n   void operator()(FunctionContext* ctx, const CastOptions& options,\n                   const ArrayData& input, ArrayData* output) {\n     auto in_data = GetValues<typename I::c_type>(input, 1);\n+    if (in_data == NULLPTR) {\n+      ARROW_LOG(ERROR) << \"Buffer or it's contents are null\"\n+      return;\n+    }\n     const auto generate = [&in_data]() -> bool { return *in_data++ != 0; };\n     internal::GenerateBitsUnrolled(output->buffers[1]->mutable_data(), output->offset,\n                                    input.length, generate);\n@@ -217,6 +221,10 @@ struct CastFunctor<O, I,\n     auto in_offset = input.offset;\n \n     const in_type* in_data = GetValues<in_type>(input, 1);\n+    if (in_data == NULLPTR) {\n+      ARROW_LOG(ERROR) << \"Buffer or it's contents are null\"\n+      return;\n+    }\n     auto out_data = GetMutableValues<out_type>(output, 1);\n \n     if (!options.allow_int_overflow) {\n@@ -261,6 +269,10 @@ struct CastFunctor<O, I,\n     using out_type = typename O::c_type;\n \n     const in_type* in_data = GetValues<in_type>(input, 1);\n+    if (in_data == NULLPTR) {\n+      ARROW_LOG(ERROR) << \"Buffer or it's contents are null\"\n+      return;\n+    }\n     auto out_data = GetMutableValues<out_type>(output, 1);\n     for (int64_t i = 0; i < input.length; ++i) {\n       *out_data++ = static_cast<out_type>(*in_data++);\n@@ -275,6 +287,10 @@ template <typename in_type, typename out_type>\n void ShiftTime(FunctionContext* ctx, const CastOptions& options, const bool is_multiply,\n                const int64_t factor, const ArrayData& input, ArrayData* output) {\n   const in_type* in_data = GetValues<in_type>(input, 1);\n+  if (in_data == NULLPTR) {\n+    ARROW_LOG(ERROR) << \"Buffer or it's contents are null\"\n+    return;\n+  }\n   auto out_data = GetMutableValues<out_type>(output, 1);\n \n   if (factor == 1) {\n@@ -522,6 +538,10 @@ void UnpackFixedSizeBinaryDictionary(FunctionContext* ctx, const Array& indices,\n   using index_c_type = typename IndexType::c_type;\n \n   const index_c_type* in = GetValues<index_c_type>(*indices.data(), 1);\n+  if (in == NULLPTR) {\n+    ARROW_LOG(ERROR) << \"Buffer or it's contents are null\"\n+    return;\n+  }\n   int32_t byte_width =\n       checked_cast<const FixedSizeBinaryType&>(*output->type).byte_width();\n \n@@ -595,6 +615,9 @@ Status UnpackBinaryDictionary(FunctionContext* ctx, const Array& indices,\n   BinaryBuilder* binary_builder = checked_cast<BinaryBuilder*>(builder.get());\n \n   const index_c_type* in = GetValues<index_c_type>(*indices.data(), 1);\n+  if (in == NULLPTR) {\n+    return Status::Invalid(\"Buffer or it's contents are null\");\n+  }\n   if (indices.null_count() != 0) {\n     internal::BitmapReader valid_bits_reader(indices.null_bitmap_data(), indices.offset(),\n                                              indices.length());\n@@ -676,6 +699,10 @@ void UnpackPrimitiveDictionary(const Array& indices, const c_type* dictionary,\n                                            indices.length());\n \n   auto in = GetValues<typename IndexType::c_type>(*indices.data(), 1);\n+  if (in == NULLPTR) {\n+    ARROW_LOG(ERROR) << \"Buffer or it's contents are null\"\n+    return;\n+  }\n   for (int64_t i = 0; i < indices.length(); ++i) {\n     if (valid_bits_reader.IsSet()) {\n       out[i] = dictionary[in[i]];\n@@ -702,6 +729,10 @@ struct CastFunctor<T, DictionaryType,\n         << \"Dictionary type: \" << values_type << \" target type: \" << (*output->type);\n \n     const c_type* dictionary = GetValues<c_type>(*type.dictionary()->data(), 1);\n+    if (dictionary == NULLPTR) {\n+      ARROW_LOG(ERROR) << \"Buffer or it's contents are null\"\n+      return;\n+    }\n \n     auto out = GetMutableValues<c_type>(output, 1);\n     const Array& indices = *dict_array.indices();\ndiff --git a/cpp/src/arrow/compute/kernels/hash.cc b/cpp/src/arrow/compute/kernels/hash.cc\nindex 5ef8ee59fd..70e088f228 100644\n--- a/cpp/src/arrow/compute/kernels/hash.cc\n+++ b/cpp/src/arrow/compute/kernels/hash.cc\n@@ -243,6 +243,9 @@ class HashTableKernel<\n     }\n \n     const T* values = GetValues<T>(arr, 1);\n+    if (values == NULLPTR) {\n+      return Status::Invalid(\"Buffer or it's contents are null\");\n+    }\n     auto action = checked_cast<Action*>(this);\n \n     RETURN_NOT_OK(action->Reserve(arr.length));\n@@ -418,11 +421,17 @@ class HashTableKernel<Type, Action, enable_if_binary<Type>> : public HashTable {\n     }\n \n     const int32_t* offsets = GetValues<int32_t>(arr, 1);\n+    if (offsets == NULLPTR) {\n+      return Status::Invalid(\"Buffer or it's contents are null\");\n+    }\n     const uint8_t* data;\n     if (arr.buffers[2].get() == nullptr) {\n       data = &empty_value;\n     } else {\n       data = GetValues<uint8_t>(arr, 2);\n+      if (data == NULLPTR) {\n+        return Status::Invalid(\"Buffer or it's contents are null\");\n+      }\n     }\n \n     auto action = checked_cast<Action*>(this);\n@@ -538,6 +547,9 @@ class HashTableKernel<Type, Action, enable_if_fixed_size_binary<Type>>\n     }\n \n     const uint8_t* data = GetValues<uint8_t>(arr, 1);\n+    if (data == NULLPTR) {\n+      return Status::Invalid(\"Buffer or it's contents are null\");\n+    }\n \n     auto action = checked_cast<Action*>(this);\n     RETURN_NOT_OK(action->Reserve(arr.length));\n@@ -646,6 +658,9 @@ class HashTableKernel<Type, Action, enable_if_8bit_int<Type>> : public HashTable\n \n   Status Append(const ArrayData& arr) override {\n     const T* values = GetValues<T>(arr, 1);\n+    if (values == NULLPTR) {\n+      return Status::Invalid(\"Buffer or it's contents are null\");\n+    }\n     auto action = checked_cast<Action*>(this);\n     RETURN_NOT_OK(action->Reserve(arr.length));\n \ndiff --git a/cpp/src/arrow/compute/kernels/util-internal.h b/cpp/src/arrow/compute/kernels/util-internal.h\nindex acfcb4bb79..d4dbde85ca 100644\n--- a/cpp/src/arrow/compute/kernels/util-internal.h\n+++ b/cpp/src/arrow/compute/kernels/util-internal.h\n@@ -31,7 +31,8 @@ class FunctionContext;\n \n template <typename T>\n inline const T* GetValues(const ArrayData& data, int i) {\n-  return reinterpret_cast<const T*>(data.buffers[i]->data()) + data.offset;\n+  return (data.buffers[i] == NULLPTR || data.buffers[i]->data() == NULLPTR) ?\n+\t  NULLPTR : reinterpret_cast<const T*>(data.buffers[i]->data()) + data.offset;\n }\n \n template <typename T>\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-16T20:38:38.722+0000",
                    "updated": "2018-06-16T20:38:38.722+0000",
                    "started": "2018-06-16T20:38:38.722+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "112566",
                    "issueId": "13165923"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165923/worklog/112568",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Ghatage opened a new pull request #2143: ARROW-2708 [C++] Internal GetValues function in arrow::compute should check for nullptr\nURL: https://github.com/apache/arrow/pull/2143\n \n \n   This modifies inline GetValues() to log and return nullptr in case one of its arguments / it's contents are nullptr.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-16T20:46:06.411+0000",
                    "updated": "2018-06-16T20:46:06.411+0000",
                    "started": "2018-06-16T20:46:06.410+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "112568",
                    "issueId": "13165923"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165923/worklog/112603",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2142: ARROW-2708 [C++] Internal GetValues function in arrow::compute should check for nullptr\nURL: https://github.com/apache/arrow/pull/2142#issuecomment-397854502\n \n \n   For future reference, you can keep pushing commits to your branch after opening the PR\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-17T04:48:56.519+0000",
                    "updated": "2018-06-17T04:48:56.519+0000",
                    "started": "2018-06-17T04:48:56.519+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "112603",
                    "issueId": "13165923"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165923/worklog/112604",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2143: ARROW-2708 [C++] Internal GetValues function in arrow::compute should check for nullptr\nURL: https://github.com/apache/arrow/pull/2143#discussion_r195918107\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -702,6 +729,10 @@ struct CastFunctor<T, DictionaryType,\n         << \"Dictionary type: \" << values_type << \" target type: \" << (*output->type);\n \n     const c_type* dictionary = GetValues<c_type>(*type.dictionary()->data(), 1);\n+    if (dictionary == NULLPTR) {\n+      ARROW_LOG(ERROR) << \"Buffer or it's contents are null\";\n+      return;\n+    }\n \n Review comment:\n   I don't think we need any of the null checks in this file, only the change in `util-internal.h`. The only permissible condition for the pointer to be null is if the length of the array is 0\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-17T04:54:17.282+0000",
                    "updated": "2018-06-17T04:54:17.282+0000",
                    "started": "2018-06-17T04:54:17.282+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "112604",
                    "issueId": "13165923"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165923/worklog/112605",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2143: ARROW-2708 [C++] Internal GetValues function in arrow::compute should check for nullptr\nURL: https://github.com/apache/arrow/pull/2143#discussion_r195918121\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/util-internal.h\n ##########\n @@ -31,7 +31,8 @@ class FunctionContext;\n \n template <typename T>\n inline const T* GetValues(const ArrayData& data, int i) {\n-  return reinterpret_cast<const T*>(data.buffers[i]->data()) + data.offset;\n+  return (data.buffers[i] == NULLPTR || data.buffers[i]->data() == NULLPTR) ?\n+\t  NULLPTR : reinterpret_cast<const T*>(data.buffers[i]->data()) + data.offset;\n \n Review comment:\n   I recommend setting `const Buffer* buffer = data.buffers[i].get();` to improve readability\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-17T04:54:17.283+0000",
                    "updated": "2018-06-17T04:54:17.283+0000",
                    "started": "2018-06-17T04:54:17.283+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "112605",
                    "issueId": "13165923"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165923/worklog/113196",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2143: ARROW-2708 [C++] Internal GetValues function in arrow::compute should check for nullptr\nURL: https://github.com/apache/arrow/pull/2143#issuecomment-398428118\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2143?src=pr&el=h1) Report\n   > Merging [#2143](https://codecov.io/gh/apache/arrow/pull/2143?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/392fd02c63359a91b7834e55359e346f6814681c?src=pr&el=desc) will **increase** coverage by `<.01%`.\n   > The diff coverage is `100%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2143/graphs/tree.svg?token=LpTCFbqVT1&width=650&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/2143?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2143      +/-   ##\n   ==========================================\n   + Coverage   86.42%   86.42%   +<.01%     \n   ==========================================\n     Files         242      242              \n     Lines       41536    41544       +8     \n   ==========================================\n   + Hits        35896    35904       +8     \n     Misses       5640     5640\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2143?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/compute/kernels/util-internal.h](https://codecov.io/gh/apache/arrow/pull/2143/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jb21wdXRlL2tlcm5lbHMvdXRpbC1pbnRlcm5hbC5o) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/compute/compute-test.cc](https://codecov.io/gh/apache/arrow/pull/2143/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jb21wdXRlL2NvbXB1dGUtdGVzdC5jYw==) | `99.5% <100%> (\u00f8)` | :arrow_up: |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2143?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2143?src=pr&el=footer). Last update [392fd02...510e6d8](https://codecov.io/gh/apache/arrow/pull/2143?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-19T14:52:22.009+0000",
                    "updated": "2018-06-19T14:52:22.009+0000",
                    "started": "2018-06-19T14:52:22.009+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "113196",
                    "issueId": "13165923"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165923/worklog/114459",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Ghatage commented on issue #2143: ARROW-2708 [C++] Internal GetValues function in arrow::compute should check for nullptr\nURL: https://github.com/apache/arrow/pull/2143#issuecomment-399231908\n \n \n   @wesm Do let me know if this looks good or if more changes are needed!\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-21T20:26:53.918+0000",
                    "updated": "2018-06-21T20:26:53.918+0000",
                    "started": "2018-06-21T20:26:53.917+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "114459",
                    "issueId": "13165923"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165923/worklog/114675",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2143: ARROW-2708 [C++] Internal GetValues function in arrow::compute should check for nullptr\nURL: https://github.com/apache/arrow/pull/2143#issuecomment-399370884\n \n \n   I'm traveling internationally -- I will review more closely when I can. @pitrou or @cpcloud or @xhochy can also take a look\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-22T08:50:17.654+0000",
                    "updated": "2018-06-22T08:50:17.654+0000",
                    "started": "2018-06-22T08:50:17.654+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "114675",
                    "issueId": "13165923"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165923/worklog/118839",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Ghatage commented on issue #2143: ARROW-2708: [C++] Internal GetValues function in arrow::compute should check for nullptr\nURL: https://github.com/apache/arrow/pull/2143#issuecomment-402295087\n \n \n   @pitrou / @wesm \r\n   Sorry to be a bother but do let me know if I need to add anything else?\r\n   Looking forward to working on more of these!\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-03T21:19:37.186+0000",
                    "updated": "2018-07-03T21:19:37.186+0000",
                    "started": "2018-07-03T21:19:37.186+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "118839",
                    "issueId": "13165923"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165923/worklog/118996",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2143: ARROW-2708: [C++] Internal GetValues function in arrow::compute should check for nullptr\nURL: https://github.com/apache/arrow/pull/2143#discussion_r200058561\n \n \n\n ##########\n File path: cpp/src/arrow/compute/compute-test.cc\n ##########\n @@ -670,6 +671,15 @@ TEST_F(TestCast, FromNull) {\n   ASSERT_ARRAYS_EQUAL(*result, *result);\n }\n \n+TEST_F(TestCast, EmptyArray) {\n \n Review comment:\n   I'm not sure why it's in `TestCast`, since it doesn't seem to have anything to do with casting?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-04T09:10:39.534+0000",
                    "updated": "2018-07-04T09:10:39.534+0000",
                    "started": "2018-07-04T09:10:39.533+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "118996",
                    "issueId": "13165923"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165923/worklog/118997",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2143: ARROW-2708: [C++] Internal GetValues function in arrow::compute should check for nullptr\nURL: https://github.com/apache/arrow/pull/2143#discussion_r200058297\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/util-internal.h\n ##########\n @@ -31,7 +31,10 @@ class FunctionContext;\n \n template <typename T>\n inline const T* GetValues(const ArrayData& data, int i) {\n-  return reinterpret_cast<const T*>(data.buffers[i]->data()) + data.offset;\n+  const Buffer* buffer = data.buffers[i].get();\n+  return (buffer == NULLPTR || buffer->data() == NULLPTR)\n+             ? NULLPTR\n+             : reinterpret_cast<const T*>(data.buffers[i]->data()) + data.offset;\n \n Review comment:\n   Should use `buffer` instead of `data.buffers[i]`.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-04T09:10:39.542+0000",
                    "updated": "2018-07-04T09:10:39.542+0000",
                    "started": "2018-07-04T09:10:39.541+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "118997",
                    "issueId": "13165923"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165923/worklog/119095",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2143: ARROW-2708: [C++] Internal GetValues function in arrow::compute should check for nullptr\nURL: https://github.com/apache/arrow/pull/2143#discussion_r200147679\n \n \n\n ##########\n File path: cpp/src/arrow/compute/compute-test.cc\n ##########\n @@ -670,6 +671,15 @@ TEST_F(TestCast, FromNull) {\n   ASSERT_ARRAYS_EQUAL(*result, *result);\n }\n \n+TEST_F(TestCast, EmptyArray) {\n+  const int length = 0;\n+  auto out_data = ArrayData::Make(int32(), length, {nullptr, nullptr});\n+\n+  auto arr = out_data.get();\n+  auto ret = GetValues<int32_t>(*arr, 1);\n+  ASSERT_EQ(ret, nullptr);\n+}\n \n Review comment:\n   @Ghatage this test is not quite sufficient to test what we want to test which is that having a null buffer does not cause `compute::Cast` to segfault\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-04T14:41:42.580+0000",
                    "updated": "2018-07-04T14:41:42.580+0000",
                    "started": "2018-07-04T14:41:42.580+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "119095",
                    "issueId": "13165923"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165923/worklog/169168",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2143: ARROW-2708: [C++] Internal GetValues function in arrow::compute should check for nullptr\nURL: https://github.com/apache/arrow/pull/2143#issuecomment-441403509\n \n \n   This was addressed in https://github.com/apache/arrow/commit/eaf8d32e5f292dca0aa5b5508041d5d39406224d. Thanks @Ghatage for your contribution!\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-24T23:30:58.997+0000",
                    "updated": "2018-11-24T23:30:58.997+0000",
                    "started": "2018-11-24T23:30:58.997+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169168",
                    "issueId": "13165923"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165923/worklog/169169",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm closed pull request #2143: ARROW-2708: [C++] Internal GetValues function in arrow::compute should check for nullptr\nURL: https://github.com/apache/arrow/pull/2143\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/compute/compute-test.cc b/cpp/src/arrow/compute/compute-test.cc\nindex 6a9284460f..2ab6378b3a 100644\n--- a/cpp/src/arrow/compute/compute-test.cc\n+++ b/cpp/src/arrow/compute/compute-test.cc\n@@ -41,6 +41,7 @@\n #include \"arrow/compute/kernel.h\"\n #include \"arrow/compute/kernels/cast.h\"\n #include \"arrow/compute/kernels/hash.h\"\n+#include \"arrow/compute/kernels/util-internal.h\"\n \n using std::shared_ptr;\n using std::vector;\n@@ -670,6 +671,15 @@ TEST_F(TestCast, FromNull) {\n   ASSERT_ARRAYS_EQUAL(*result, *result);\n }\n \n+TEST_F(TestCast, EmptyArray) {\n+  const int length = 0;\n+  auto out_data = ArrayData::Make(int32(), length, {nullptr, nullptr});\n+\n+  auto arr = out_data.get();\n+  auto ret = GetValues<int32_t>(*arr, 1);\n+  ASSERT_EQ(ret, nullptr);\n+}\n+\n TEST_F(TestCast, PreallocatedMemory) {\n   CastOptions options;\n   options.allow_int_overflow = false;\ndiff --git a/cpp/src/arrow/compute/kernels/util-internal.h b/cpp/src/arrow/compute/kernels/util-internal.h\nindex acfcb4bb79..da4e4a9d41 100644\n--- a/cpp/src/arrow/compute/kernels/util-internal.h\n+++ b/cpp/src/arrow/compute/kernels/util-internal.h\n@@ -31,7 +31,10 @@ class FunctionContext;\n \n template <typename T>\n inline const T* GetValues(const ArrayData& data, int i) {\n-  return reinterpret_cast<const T*>(data.buffers[i]->data()) + data.offset;\n+  const Buffer* buffer = data.buffers[i].get();\n+  return (buffer == NULLPTR || buffer->data() == NULLPTR)\n+             ? NULLPTR\n+             : reinterpret_cast<const T*>(data.buffers[i]->data()) + data.offset;\n }\n \n template <typename T>\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-24T23:30:59.127+0000",
                    "updated": "2018-11-24T23:30:59.127+0000",
                    "started": "2018-11-24T23:30:59.127+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169169",
                    "issueId": "13165923"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 8400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@4856396d[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@435f0e7a[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@409a306e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7b8ddad9[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2a436a55[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@64284963[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@75201cc8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@60ee5ba7[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@51ce942d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@778bbc26[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2383843[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@109978c0[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 8400,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Nov 22 20:00:42 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-11-22T20:00:42.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2708/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2018-06-13T20:04:34.000+0000",
        "updated": "2018-11-24T23:30:59.000+0000",
        "timeoriginalestimate": null,
        "description": "See https://github.com/apache/arrow/blob/master/cpp/src/arrow/compute/kernels/util-internal.h#L33 and mailing list discussion",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 8400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Internal GetValues function in arrow::compute should check for nullptr",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165923/comment/16512996",
                    "id": "16512996",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=ghatageanup",
                        "name": "ghatageanup",
                        "key": "ghatageanup",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Anup Ghatage",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Hi [~wesmckinn]!\r\n I'd like to take this up.\r\n I checked the mailing list [here|https://mail-archives.apache.org/mod_mbox/arrow-issues/201806.mbox/browser] but did not find any of the discussion.\r\n\r\nAnyway, I was thinking of using ARROW_CHECK(data.buffers[i] == nullptr) for validation.\r\n In the case that 'buffers' is actually equal to nullptr, we must return nullptr.\r\n\r\nWhat do you think?\r\n Apologies since I am out of the discussion loop and may have missed something that was already discussed.\r\n\r\nRegards,\r\n Anup",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=ghatageanup",
                        "name": "ghatageanup",
                        "key": "ghatageanup",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Anup Ghatage",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-06-14T21:14:00.096+0000",
                    "updated": "2018-06-14T21:14:54.735+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165923/comment/16513334",
                    "id": "16513334",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "hi [~ghatageanup] the mailing thread referenced is here: https://lists.apache.org/thread.html/da5ee8247dcb209ac39c9e8f147c945304d1714ee377e0f7708162b3@%3Cdev.arrow.apache.org%3E\r\n\r\nI don't think you want to use {{ARROW_CHECK}}, but returning {{nullptr}} when the buffer is null (or has a nullptr inside) is the right solution",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-06-15T04:47:30.014+0000",
                    "updated": "2018-06-15T04:47:30.014+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165923/comment/16696235",
                    "id": "16696235",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "This was resolved in https://github.com/apache/arrow/commit/eaf8d32e5f292dca0aa5b5508041d5d39406224d. See now {{ArrayData::GetValues}}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-11-22T20:00:42.396+0000",
                    "updated": "2018-11-22T20:00:42.396+0000"
                }
            ],
            "maxResults": 3,
            "total": 3,
            "startAt": 0
        },
        "customfield_12311820": "0|i3utxr:",
        "customfield_12314139": null
    }
}