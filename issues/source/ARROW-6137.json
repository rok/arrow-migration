{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13248891",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248891",
    "key": "ARROW-6137",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pprudhvi",
            "name": "pprudhvi",
            "key": "pprudhvi",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Prudhvi Porandla",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334626",
                "id": "12334626",
                "name": "C++ - Gandiva"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pprudhvi",
            "name": "pprudhvi",
            "key": "pprudhvi",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Prudhvi Porandla",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pprudhvi",
            "name": "pprudhvi",
            "key": "pprudhvi",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Prudhvi Porandla",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 16200,
            "total": 16200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 16200,
            "total": 16200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6137/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 28,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248891/worklog/289401",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pprudhvi commented on pull request #5014: ARROW-6137: [C++][Gandiva] Change output format of castVARCHAR(timestamp) in Gandiva\nURL: https://github.com/apache/arrow/pull/5014\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-06T03:04:50.121+0000",
                    "updated": "2019-08-06T03:04:50.121+0000",
                    "started": "2019-08-06T03:04:50.120+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "289401",
                    "issueId": "13248891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248891/worklog/289402",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pprudhvi commented on pull request #5014: ARROW-6137: [C++][Gandiva] Change output format of castVARCHAR(timestamp) in Gandiva\nURL: https://github.com/apache/arrow/pull/5014\n \n \n   Format timestamp to yyyy-MM-dd hh:mm:ss.sss\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-06T03:04:51.607+0000",
                    "updated": "2019-08-06T03:04:51.607+0000",
                    "started": "2019-08-06T03:04:51.607+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "289402",
                    "issueId": "13248891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248891/worklog/289543",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "praveenbingo commented on pull request #5014: ARROW-6137: [C++][Gandiva] Change output format of castVARCHAR(timestamp) in Gandiva\nURL: https://github.com/apache/arrow/pull/5014#discussion_r310890176\n \n \n\n ##########\n File path: cpp/src/gandiva/precompiled/time.cc\n ##########\n @@ -691,7 +728,22 @@ timestamp castTIMESTAMP_date64(date64 date_in_millis) { return date_in_millis; }\n \n char* castVARCHAR_timestamp_int64(int64 context, timestamp in, int64 length,\n                                   int32* out_len) {\n-  std::string timestamp_str = std::to_string(in);\n+  int64 year = extractYear_timestamp(in);\n \n Review comment:\n   all of these can be int32?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-06T08:53:09.025+0000",
                    "updated": "2019-08-06T08:53:09.025+0000",
                    "started": "2019-08-06T08:53:09.024+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "289543",
                    "issueId": "13248891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248891/worklog/289544",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "praveenbingo commented on pull request #5014: ARROW-6137: [C++][Gandiva] Change output format of castVARCHAR(timestamp) in Gandiva\nURL: https://github.com/apache/arrow/pull/5014#discussion_r310891118\n \n \n\n ##########\n File path: cpp/src/gandiva/precompiled/time.cc\n ##########\n @@ -691,7 +728,22 @@ timestamp castTIMESTAMP_date64(date64 date_in_millis) { return date_in_millis; }\n \n char* castVARCHAR_timestamp_int64(int64 context, timestamp in, int64 length,\n                                   int32* out_len) {\n-  std::string timestamp_str = std::to_string(in);\n+  int64 year = extractYear_timestamp(in);\n+  int64 month = extractMonth_timestamp(in);\n+  int64 day = extractDay_timestamp(in);\n+  int64 hour = extractHour_timestamp(in);\n+  int64 minute = extractMinute_timestamp(in);\n+  int64 second = extractSecond_timestamp(in);\n+  int64 millis = in % MILLIS_IN_SEC;\n+\n+  // format to yyyy-MM-dd hh:mm:ss.mil\n+  std::stringstream s;\n+  s << ensure_four_digits(year) << \"-\" << ensure_two_digits(month) << \"-\"\n \n Review comment:\n   what timezone does this return the value in? (looks like UTC)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-06T08:53:09.031+0000",
                    "updated": "2019-08-06T08:53:09.031+0000",
                    "started": "2019-08-06T08:53:09.030+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "289544",
                    "issueId": "13248891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248891/worklog/289545",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "praveenbingo commented on pull request #5014: ARROW-6137: [C++][Gandiva] Change output format of castVARCHAR(timestamp) in Gandiva\nURL: https://github.com/apache/arrow/pull/5014#discussion_r310890543\n \n \n\n ##########\n File path: cpp/src/gandiva/precompiled/time.cc\n ##########\n @@ -691,7 +728,22 @@ timestamp castTIMESTAMP_date64(date64 date_in_millis) { return date_in_millis; }\n \n char* castVARCHAR_timestamp_int64(int64 context, timestamp in, int64 length,\n \n Review comment:\n   what is the expected behavior for negative values of length or 0\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-06T08:53:09.071+0000",
                    "updated": "2019-08-06T08:53:09.071+0000",
                    "started": "2019-08-06T08:53:09.070+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "289545",
                    "issueId": "13248891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248891/worklog/289556",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pprudhvi commented on pull request #5014: ARROW-6137: [C++][Gandiva] Change output format of castVARCHAR(timestamp) in Gandiva\nURL: https://github.com/apache/arrow/pull/5014#discussion_r310962162\n \n \n\n ##########\n File path: cpp/src/gandiva/precompiled/time.cc\n ##########\n @@ -691,7 +728,22 @@ timestamp castTIMESTAMP_date64(date64 date_in_millis) { return date_in_millis; }\n \n char* castVARCHAR_timestamp_int64(int64 context, timestamp in, int64 length,\n                                   int32* out_len) {\n-  std::string timestamp_str = std::to_string(in);\n+  int64 year = extractYear_timestamp(in);\n \n Review comment:\n   extract functions return int64\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-06T09:16:31.974+0000",
                    "updated": "2019-08-06T09:16:31.974+0000",
                    "started": "2019-08-06T09:16:31.973+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "289556",
                    "issueId": "13248891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248891/worklog/289557",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pprudhvi commented on pull request #5014: ARROW-6137: [C++][Gandiva] Change output format of castVARCHAR(timestamp) in Gandiva\nURL: https://github.com/apache/arrow/pull/5014#discussion_r310962425\n \n \n\n ##########\n File path: cpp/src/gandiva/precompiled/time.cc\n ##########\n @@ -691,7 +728,22 @@ timestamp castTIMESTAMP_date64(date64 date_in_millis) { return date_in_millis; }\n \n char* castVARCHAR_timestamp_int64(int64 context, timestamp in, int64 length,\n \n Review comment:\n   empty string for 0 and error for length < 0\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-06T09:17:17.415+0000",
                    "updated": "2019-08-06T09:17:17.415+0000",
                    "started": "2019-08-06T09:17:17.414+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "289557",
                    "issueId": "13248891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248891/worklog/289562",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pprudhvi commented on pull request #5014: ARROW-6137: [C++][Gandiva] Change output format of castVARCHAR(timestamp) in Gandiva\nURL: https://github.com/apache/arrow/pull/5014#discussion_r310964870\n \n \n\n ##########\n File path: cpp/src/gandiva/precompiled/time.cc\n ##########\n @@ -691,7 +728,22 @@ timestamp castTIMESTAMP_date64(date64 date_in_millis) { return date_in_millis; }\n \n char* castVARCHAR_timestamp_int64(int64 context, timestamp in, int64 length,\n                                   int32* out_len) {\n-  std::string timestamp_str = std::to_string(in);\n+  int64 year = extractYear_timestamp(in);\n+  int64 month = extractMonth_timestamp(in);\n+  int64 day = extractDay_timestamp(in);\n+  int64 hour = extractHour_timestamp(in);\n+  int64 minute = extractMinute_timestamp(in);\n+  int64 second = extractSecond_timestamp(in);\n+  int64 millis = in % MILLIS_IN_SEC;\n+\n+  // format to yyyy-MM-dd hh:mm:ss.mil\n+  std::stringstream s;\n+  s << ensure_four_digits(year) << \"-\" << ensure_two_digits(month) << \"-\"\n \n Review comment:\n   yes, UTC\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-06T09:22:38.406+0000",
                    "updated": "2019-08-06T09:22:38.406+0000",
                    "started": "2019-08-06T09:22:38.405+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "289562",
                    "issueId": "13248891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248891/worklog/289571",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #5014: ARROW-6137: [C++][Gandiva] Change output format of castVARCHAR(timestamp) in Gandiva\nURL: https://github.com/apache/arrow/pull/5014#issuecomment-518592553\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/5014?src=pr&el=h1) Report\n   > Merging [#5014](https://codecov.io/gh/apache/arrow/pull/5014?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/2088c05fa79af84c6de3cd4ff5c36f31f40bbdcf?src=pr&el=desc) will **increase** coverage by `1.42%`.\n   > The diff coverage is `93.18%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/5014/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/5014?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #5014      +/-   ##\n   ==========================================\n   + Coverage   87.89%   89.31%   +1.42%     \n   ==========================================\n     Files         948      727     -221     \n     Lines      139767   104884   -34883     \n     Branches     1418        0    -1418     \n   ==========================================\n   - Hits       122844    93677   -29167     \n   + Misses      16561    11207    -5354     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/5014?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/gandiva/precompiled/time\\_test.cc](https://codecov.io/gh/apache/arrow/pull/5014/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL3ByZWNvbXBpbGVkL3RpbWVfdGVzdC5jYw==) | `99.75% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/gandiva/precompiled/time.cc](https://codecov.io/gh/apache/arrow/pull/5014/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL3ByZWNvbXBpbGVkL3RpbWUuY2M=) | `95.17% <91.89%> (+4.55%)` | :arrow_up: |\n   | [cpp/src/parquet/arrow/reader.cc](https://codecov.io/gh/apache/arrow/pull/5014/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2Fycm93L3JlYWRlci5jYw==) | `85.18% <0%> (-1.41%)` | :arrow_down: |\n   | [cpp/src/parquet/arrow/reader.h](https://codecov.io/gh/apache/arrow/pull/5014/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2Fycm93L3JlYWRlci5o) | `91.11% <0%> (-0.56%)` | :arrow_down: |\n   | [python/pyarrow/tests/test\\_parquet.py](https://codecov.io/gh/apache/arrow/pull/5014/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9wYXJxdWV0LnB5) | `96.37% <0%> (-0.02%)` | :arrow_down: |\n   | [cpp/src/arrow/util/key-value-metadata-test.cc](https://codecov.io/gh/apache/arrow/pull/5014/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL2tleS12YWx1ZS1tZXRhZGF0YS10ZXN0LmNj) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/compute/kernels/cast-test.cc](https://codecov.io/gh/apache/arrow/pull/5014/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jb21wdXRlL2tlcm5lbHMvY2FzdC10ZXN0LmNj) | `99.46% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/util/key\\_value\\_metadata.cc](https://codecov.io/gh/apache/arrow/pull/5014/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL2tleV92YWx1ZV9tZXRhZGF0YS5jYw==) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/util/parsing-util-test.cc](https://codecov.io/gh/apache/arrow/pull/5014/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL3BhcnNpbmctdXRpbC10ZXN0LmNj) | `98.65% <0%> (\u00f8)` | :arrow_up: |\n   | [go/arrow/ipc/writer.go](https://codecov.io/gh/apache/arrow/pull/5014/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaXBjL3dyaXRlci5nbw==) | | |\n   | ... and [344 more](https://codecov.io/gh/apache/arrow/pull/5014/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/5014?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/5014?src=pr&el=footer). Last update [2088c05...ca11f78](https://codecov.io/gh/apache/arrow/pull/5014?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-06T09:35:43.847+0000",
                    "updated": "2019-08-06T09:35:43.847+0000",
                    "started": "2019-08-06T09:35:43.846+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "289571",
                    "issueId": "13248891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248891/worklog/290281",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on pull request #5014: ARROW-6137: [C++][Gandiva] Change output format of castVARCHAR(timestamp) in Gandiva\nURL: https://github.com/apache/arrow/pull/5014#discussion_r311393914\n \n \n\n ##########\n File path: cpp/src/gandiva/precompiled/time.cc\n ##########\n @@ -691,17 +728,41 @@ timestamp castTIMESTAMP_date64(date64 date_in_millis) { return date_in_millis; }\n \n char* castVARCHAR_timestamp_int64(int64 context, timestamp in, int64 length,\n                                   int32* out_len) {\n-  std::string timestamp_str = std::to_string(in);\n+  int64 year = extractYear_timestamp(in);\n+  int64 month = extractMonth_timestamp(in);\n+  int64 day = extractDay_timestamp(in);\n+  int64 hour = extractHour_timestamp(in);\n+  int64 minute = extractMinute_timestamp(in);\n+  int64 second = extractSecond_timestamp(in);\n+  int64 millis = in % MILLIS_IN_SEC;\n+\n+  // format to yyyy-MM-dd hh:mm:ss.mil\n+  std::stringstream s;\n+  s << ensure_four_digits(year) << \"-\" << ensure_two_digits(month) << \"-\"\n+    << ensure_two_digits(day) << \" \" << ensure_two_digits(hour) << \":\"\n+    << ensure_two_digits(minute) << \":\" << ensure_two_digits(second) << \".\"\n+    << ensure_three_digits(millis);\n+\n+  std::string timestamp_str = s.str();\n   *out_len = static_cast<int32>(length);\n   int32 timestamp_str_len = static_cast<int32>(timestamp_str.length());\n   if (length > timestamp_str_len) {\n     *out_len = timestamp_str_len;\n   }\n+  if (*out_len <= 0) {\n+    if (*out_len < 0) {\n+      gdv_fn_context_set_error_msg(context, \"Length of output string cannot be negative\");\n+    }\n+    *out_len = 0;\n+    const char* empty_str = \"\";\n+    return const_cast<char*>(empty_str);\n+  }\n   char* ret = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(context, *out_len));\n   if (ret == nullptr) {\n     gdv_fn_context_set_error_msg(context, \"Could not allocate memory for output string\");\n     *out_len = 0;\n-    return nullptr;\n+    const char* empty_str = \"\";\n+    return const_cast<char*>(empty_str);\n \n Review comment:\n   simply, return \"\" should work too ? or, add one static char *EMPTY_STRING = \"\";\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-07T06:55:41.577+0000",
                    "updated": "2019-08-07T06:55:41.577+0000",
                    "started": "2019-08-07T06:55:41.577+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "290281",
                    "issueId": "13248891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248891/worklog/290282",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on pull request #5014: ARROW-6137: [C++][Gandiva] Change output format of castVARCHAR(timestamp) in Gandiva\nURL: https://github.com/apache/arrow/pull/5014#discussion_r311393609\n \n \n\n ##########\n File path: cpp/src/gandiva/precompiled/time.cc\n ##########\n @@ -15,8 +15,45 @@\n // specific language governing permissions and limitations\n // under the License.\n \n+#include <sstream>\n #include \"./epoch_time_point.h\"\n \n+std::string ensure_two_digits(int64_t num) {\n+  std::stringstream s;\n+  if (num < 10) {\n+    s << \"0\";\n+  }\n+  s << num;\n+  return s.str();\n+}\n+\n+std::string ensure_three_digits(int64_t num) {\n+  std::stringstream s;\n+  if (num < 10) {\n+    s << \"0\";\n+  }\n+  if (num < 100) {\n+    s << \"0\";\n+  }\n+  s << num;\n+  return s.str();\n+}\n+\n+std::string ensure_four_digits(int64_t num) {\n \n Review comment:\n   you can use sprint/snprintf. \r\n   \r\n   https://www.quora.com/What-is-the-difference-between-2d-and-02d-in-C-language-What-is-the-logic\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-07T06:55:46.086+0000",
                    "updated": "2019-08-07T06:55:46.086+0000",
                    "started": "2019-08-07T06:55:46.086+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "290282",
                    "issueId": "13248891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248891/worklog/290302",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #5014: ARROW-6137: [C++][Gandiva] Change output format of castVARCHAR(timestamp) in Gandiva\nURL: https://github.com/apache/arrow/pull/5014#issuecomment-518592553\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/5014?src=pr&el=h1) Report\n   > Merging [#5014](https://codecov.io/gh/apache/arrow/pull/5014?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/2088c05fa79af84c6de3cd4ff5c36f31f40bbdcf?src=pr&el=desc) will **decrease** coverage by `22.18%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/5014/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/5014?src=pr&el=tree)\n   \n   ```diff\n   @@             Coverage Diff             @@\n   ##           master    #5014       +/-   ##\n   ===========================================\n   - Coverage   87.89%   65.71%   -22.19%     \n   ===========================================\n     Files         948      549      -399     \n     Lines      139767    69502    -70265     \n     Branches     1418        0     -1418     \n   ===========================================\n   - Hits       122844    45670    -77174     \n   - Misses      16561    23832     +7271     \n   + Partials      362        0      -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/5014?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/util/memory.h](https://codecov.io/gh/apache/arrow/pull/5014/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL21lbW9yeS5o) | `0% <0%> (-100%)` | :arrow_down: |\n   | [cpp/src/gandiva/date\\_utils.h](https://codecov.io/gh/apache/arrow/pull/5014/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2RhdGVfdXRpbHMuaA==) | `0% <0%> (-100%)` | :arrow_down: |\n   | [cpp/src/arrow/util/memory.cc](https://codecov.io/gh/apache/arrow/pull/5014/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL21lbW9yeS5jYw==) | `0% <0%> (-100%)` | :arrow_down: |\n   | [cpp/src/arrow/filesystem/util-internal.cc](https://codecov.io/gh/apache/arrow/pull/5014/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9maWxlc3lzdGVtL3V0aWwtaW50ZXJuYWwuY2M=) | `0% <0%> (-100%)` | :arrow_down: |\n   | [cpp/src/gandiva/decimal\\_type\\_util.h](https://codecov.io/gh/apache/arrow/pull/5014/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2RlY2ltYWxfdHlwZV91dGlsLmg=) | `0% <0%> (-100%)` | :arrow_down: |\n   | [cpp/src/arrow/compute/logical\\_type.h](https://codecov.io/gh/apache/arrow/pull/5014/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jb21wdXRlL2xvZ2ljYWxfdHlwZS5o) | `0% <0%> (-100%)` | :arrow_down: |\n   | [cpp/src/parquet/hasher.h](https://codecov.io/gh/apache/arrow/pull/5014/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2hhc2hlci5o) | `0% <0%> (-100%)` | :arrow_down: |\n   | [cpp/src/gandiva/basic\\_decimal\\_scalar.h](https://codecov.io/gh/apache/arrow/pull/5014/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2Jhc2ljX2RlY2ltYWxfc2NhbGFyLmg=) | `0% <0%> (-100%)` | :arrow_down: |\n   | [cpp/src/arrow/compute/kernels/boolean.cc](https://codecov.io/gh/apache/arrow/pull/5014/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jb21wdXRlL2tlcm5lbHMvYm9vbGVhbi5jYw==) | `0% <0%> (-100%)` | :arrow_down: |\n   | [cpp/src/arrow/filesystem/path-util.cc](https://codecov.io/gh/apache/arrow/pull/5014/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9maWxlc3lzdGVtL3BhdGgtdXRpbC5jYw==) | `0% <0%> (-100%)` | :arrow_down: |\n   | ... and [773 more](https://codecov.io/gh/apache/arrow/pull/5014/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/5014?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/5014?src=pr&el=footer). Last update [2088c05...106226b](https://codecov.io/gh/apache/arrow/pull/5014?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-07T07:29:15.820+0000",
                    "updated": "2019-08-07T07:29:15.820+0000",
                    "started": "2019-08-07T07:29:15.819+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "290302",
                    "issueId": "13248891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248891/worklog/290347",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pprudhvi commented on pull request #5014: ARROW-6137: [C++][Gandiva] Change output format of castVARCHAR(timestamp) in Gandiva\nURL: https://github.com/apache/arrow/pull/5014#discussion_r311476338\n \n \n\n ##########\n File path: cpp/src/gandiva/precompiled/time.cc\n ##########\n @@ -691,17 +728,41 @@ timestamp castTIMESTAMP_date64(date64 date_in_millis) { return date_in_millis; }\n \n char* castVARCHAR_timestamp_int64(int64 context, timestamp in, int64 length,\n                                   int32* out_len) {\n-  std::string timestamp_str = std::to_string(in);\n+  int64 year = extractYear_timestamp(in);\n+  int64 month = extractMonth_timestamp(in);\n+  int64 day = extractDay_timestamp(in);\n+  int64 hour = extractHour_timestamp(in);\n+  int64 minute = extractMinute_timestamp(in);\n+  int64 second = extractSecond_timestamp(in);\n+  int64 millis = in % MILLIS_IN_SEC;\n+\n+  // format to yyyy-MM-dd hh:mm:ss.mil\n+  std::stringstream s;\n+  s << ensure_four_digits(year) << \"-\" << ensure_two_digits(month) << \"-\"\n+    << ensure_two_digits(day) << \" \" << ensure_two_digits(hour) << \":\"\n+    << ensure_two_digits(minute) << \":\" << ensure_two_digits(second) << \".\"\n+    << ensure_three_digits(millis);\n+\n+  std::string timestamp_str = s.str();\n   *out_len = static_cast<int32>(length);\n   int32 timestamp_str_len = static_cast<int32>(timestamp_str.length());\n   if (length > timestamp_str_len) {\n     *out_len = timestamp_str_len;\n   }\n+  if (*out_len <= 0) {\n+    if (*out_len < 0) {\n+      gdv_fn_context_set_error_msg(context, \"Length of output string cannot be negative\");\n+    }\n+    *out_len = 0;\n+    const char* empty_str = \"\";\n+    return const_cast<char*>(empty_str);\n+  }\n   char* ret = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(context, *out_len));\n   if (ret == nullptr) {\n     gdv_fn_context_set_error_msg(context, \"Could not allocate memory for output string\");\n     *out_len = 0;\n-    return nullptr;\n+    const char* empty_str = \"\";\n+    return const_cast<char*>(empty_str);\n \n Review comment:\n   changed function return type to const char*. Thanks\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-07T10:17:19.320+0000",
                    "updated": "2019-08-07T10:17:19.320+0000",
                    "started": "2019-08-07T10:17:19.319+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "290347",
                    "issueId": "13248891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248891/worklog/290493",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5014: ARROW-6137: [C++][Gandiva] Change output format of castVARCHAR(timestamp) in Gandiva\nURL: https://github.com/apache/arrow/pull/5014#discussion_r311586057\n \n \n\n ##########\n File path: cpp/src/gandiva/precompiled/time.cc\n ##########\n @@ -689,21 +689,46 @@ timestamp castTIMESTAMP_utf8(int64_t context, const char* input, int32 length) {\n \n timestamp castTIMESTAMP_date64(date64 date_in_millis) { return date_in_millis; }\n \n-char* castVARCHAR_timestamp_int64(int64 context, timestamp in, int64 length,\n-                                  int32* out_len) {\n-  std::string timestamp_str = std::to_string(in);\n+const char* castVARCHAR_timestamp_int64(int64 context, timestamp in, int64 length,\n+                                        int32* out_len) {\n+  long long int year = static_cast<long long int>(extractYear_timestamp(in));\n+  long long int month = static_cast<long long int>(extractMonth_timestamp(in));\n+  long long int day = static_cast<long long int>(extractDay_timestamp(in));\n+  long long int hour = static_cast<long long int>(extractHour_timestamp(in));\n+  long long int minute = static_cast<long long int>(extractMinute_timestamp(in));\n+  long long int second = static_cast<long long int>(extractSecond_timestamp(in));\n+  long long int millis = static_cast<long long int>(in % MILLIS_IN_SEC);\n+\n+  const int full_output_length = 23;\n+  const int char_buffer_length = full_output_length + 1;  // snprintf adds \\0\n+  char char_buffer[char_buffer_length];\n+\n+  // yyyy-MM-dd hh:mm:ss.sss\n+  snprintf(char_buffer, char_buffer_length,\n \n Review comment:\n   Do note that `snprintf` is locale-dependent. I'm not sure this makes a difference for pure integer formatting, but it's something to be careful about in general (especially if formatting floating-point numbers).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-07T14:30:15.164+0000",
                    "updated": "2019-08-07T14:30:15.164+0000",
                    "started": "2019-08-07T14:30:15.163+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "290493",
                    "issueId": "13248891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248891/worklog/291003",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pprudhvi commented on pull request #5014: ARROW-6137: [C++][Gandiva] Change output format of castVARCHAR(timestamp) in Gandiva\nURL: https://github.com/apache/arrow/pull/5014\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-08T06:03:10.766+0000",
                    "updated": "2019-08-08T06:03:10.766+0000",
                    "started": "2019-08-08T06:03:10.763+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291003",
                    "issueId": "13248891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248891/worklog/291004",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pprudhvi commented on pull request #5014: ARROW-6137: [C++][Gandiva] Change output format of castVARCHAR(timestamp) in Gandiva\nURL: https://github.com/apache/arrow/pull/5014\n \n \n   Format timestamp to yyyy-MM-dd hh:mm:ss.sss\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-08T06:03:13.442+0000",
                    "updated": "2019-08-08T06:03:13.442+0000",
                    "started": "2019-08-08T06:03:13.442+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291004",
                    "issueId": "13248891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248891/worklog/291033",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on pull request #5014: ARROW-6137: [C++][Gandiva] Change output format of castVARCHAR(timestamp) in Gandiva\nURL: https://github.com/apache/arrow/pull/5014#discussion_r311881561\n \n \n\n ##########\n File path: cpp/src/gandiva/precompiled/time.cc\n ##########\n @@ -689,21 +689,46 @@ timestamp castTIMESTAMP_utf8(int64_t context, const char* input, int32 length) {\n \n timestamp castTIMESTAMP_date64(date64 date_in_millis) { return date_in_millis; }\n \n-char* castVARCHAR_timestamp_int64(int64 context, timestamp in, int64 length,\n-                                  int32* out_len) {\n-  std::string timestamp_str = std::to_string(in);\n+const char* castVARCHAR_timestamp_int64(int64 context, timestamp in, int64 length,\n+                                        int32* out_len) {\n+  long long int year = static_cast<long long int>(extractYear_timestamp(in));\n+  long long int month = static_cast<long long int>(extractMonth_timestamp(in));\n+  long long int day = static_cast<long long int>(extractDay_timestamp(in));\n+  long long int hour = static_cast<long long int>(extractHour_timestamp(in));\n+  long long int minute = static_cast<long long int>(extractMinute_timestamp(in));\n+  long long int second = static_cast<long long int>(extractSecond_timestamp(in));\n+  long long int millis = static_cast<long long int>(in % MILLIS_IN_SEC);\n+\n+  const int full_output_length = 23;\n+  const int char_buffer_length = full_output_length + 1;  // snprintf adds \\0\n+  char char_buffer[char_buffer_length];\n+\n+  // yyyy-MM-dd hh:mm:ss.sss\n+  snprintf(char_buffer, char_buffer_length,\n \n Review comment:\n   one alternative would be std::setw/std::setfill. but, we've had trouble with streams in the precompiled library earlier. however, that may be gone now (we don't statically link libstdc++ any longer).\r\n   \r\n   @pprudhvi, can you please give this a try ? \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-08T07:00:18.978+0000",
                    "updated": "2019-08-08T07:00:18.978+0000",
                    "started": "2019-08-08T07:00:18.978+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291033",
                    "issueId": "13248891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248891/worklog/291034",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on pull request #5014: ARROW-6137: [C++][Gandiva] Change output format of castVARCHAR(timestamp) in Gandiva\nURL: https://github.com/apache/arrow/pull/5014#discussion_r311882939\n \n \n\n ##########\n File path: cpp/src/gandiva/precompiled/time.cc\n ##########\n @@ -689,21 +691,47 @@ timestamp castTIMESTAMP_utf8(int64_t context, const char* input, int32 length) {\n \n timestamp castTIMESTAMP_date64(date64 date_in_millis) { return date_in_millis; }\n \n-char* castVARCHAR_timestamp_int64(int64 context, timestamp in, int64 length,\n-                                  int32* out_len) {\n-  std::string timestamp_str = std::to_string(in);\n+const char* castVARCHAR_timestamp_int64(int64 context, timestamp in, int64 length,\n+                                        int32* out_len) {\n+  int64 year = extractYear_timestamp(in);\n+  int64 month = extractMonth_timestamp(in);\n+  int64 day = extractDay_timestamp(in);\n+  int64 hour = extractHour_timestamp(in);\n+  int64 minute = extractMinute_timestamp(in);\n+  int64 second = extractSecond_timestamp(in);\n+  int64 millis = in % MILLIS_IN_SEC;\n+\n+  const int full_output_length = 23;\n \n Review comment:\n   please make this a static const. per the [convention](https://google.github.io/styleguide/cppguide.html#Constant_Names), the name should be like  kTimeStampStringLen\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-08T07:04:54.798+0000",
                    "updated": "2019-08-08T07:04:54.798+0000",
                    "started": "2019-08-08T07:04:54.798+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291034",
                    "issueId": "13248891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248891/worklog/291062",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5014: ARROW-6137: [C++][Gandiva] Change output format of castVARCHAR(timestamp) in Gandiva\nURL: https://github.com/apache/arrow/pull/5014#discussion_r311911434\n \n \n\n ##########\n File path: cpp/src/gandiva/precompiled/time.cc\n ##########\n @@ -689,21 +689,46 @@ timestamp castTIMESTAMP_utf8(int64_t context, const char* input, int32 length) {\n \n timestamp castTIMESTAMP_date64(date64 date_in_millis) { return date_in_millis; }\n \n-char* castVARCHAR_timestamp_int64(int64 context, timestamp in, int64 length,\n-                                  int32* out_len) {\n-  std::string timestamp_str = std::to_string(in);\n+const char* castVARCHAR_timestamp_int64(int64 context, timestamp in, int64 length,\n+                                        int32* out_len) {\n+  long long int year = static_cast<long long int>(extractYear_timestamp(in));\n+  long long int month = static_cast<long long int>(extractMonth_timestamp(in));\n+  long long int day = static_cast<long long int>(extractDay_timestamp(in));\n+  long long int hour = static_cast<long long int>(extractHour_timestamp(in));\n+  long long int minute = static_cast<long long int>(extractMinute_timestamp(in));\n+  long long int second = static_cast<long long int>(extractSecond_timestamp(in));\n+  long long int millis = static_cast<long long int>(in % MILLIS_IN_SEC);\n+\n+  const int full_output_length = 23;\n+  const int char_buffer_length = full_output_length + 1;  // snprintf adds \\0\n+  char char_buffer[char_buffer_length];\n+\n+  // yyyy-MM-dd hh:mm:ss.sss\n+  snprintf(char_buffer, char_buffer_length,\n \n Review comment:\n   C++ streams will have the same issue by default (though you can call [imbue](https://en.cppreference.com/w/cpp/io/basic_ios/imbue) to change the stream's locale).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-08T08:23:15.398+0000",
                    "updated": "2019-08-08T08:23:15.398+0000",
                    "started": "2019-08-08T08:23:15.398+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291062",
                    "issueId": "13248891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248891/worklog/291545",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #5014: ARROW-6137: [C++][Gandiva] Change output format of castVARCHAR(timestamp) in Gandiva\nURL: https://github.com/apache/arrow/pull/5014#issuecomment-518592553\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/5014?src=pr&el=h1) Report\n   > :exclamation: No coverage uploaded for pull request base (`master@710210a`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).\n   > The diff coverage is `94.28%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/5014/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/5014?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff            @@\n   ##             master    #5014   +/-   ##\n   =========================================\n     Coverage          ?    89.2%           \n   =========================================\n     Files             ?      727           \n     Lines             ?   103016           \n     Branches          ?        0           \n   =========================================\n     Hits              ?    91891           \n     Misses            ?    11125           \n     Partials          ?        0\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/5014?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/gandiva/precompiled/time\\_test.cc](https://codecov.io/gh/apache/arrow/pull/5014/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL3ByZWNvbXBpbGVkL3RpbWVfdGVzdC5jYw==) | `99.75% <100%> (\u00f8)` | |\n   | [cpp/src/gandiva/precompiled/time.cc](https://codecov.io/gh/apache/arrow/pull/5014/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL3ByZWNvbXBpbGVkL3RpbWUuY2M=) | `95.65% <90.47%> (\u00f8)` | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/5014?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/5014?src=pr&el=footer). Last update [710210a...f1867e8](https://codecov.io/gh/apache/arrow/pull/5014?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-08T19:52:37.020+0000",
                    "updated": "2019-08-08T19:52:37.020+0000",
                    "started": "2019-08-08T19:52:37.019+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291545",
                    "issueId": "13248891"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/3",
            "id": "3",
            "description": "A task that needs to be done.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21148&avatarType=issuetype",
            "name": "Task",
            "subtask": false,
            "avatarId": 21148
        },
        "timespent": 16200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@1bd1e132[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4a2ea24f[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@71a900c1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@4eaaf861[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6db0eeb9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@25b4eae4[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1ca2599b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@552c39e[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6f7d30ab[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@6d9c146a[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@63fcf6c3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@70a18711[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 16200,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Aug 09 12:54:33 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-08-09T12:54:33.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6137/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-08-05T14:35:59.000+0000",
        "updated": "2019-08-10T13:14:57.000+0000",
        "timeoriginalestimate": null,
        "description": "Format timestamp to yyyy-MM-dd hh:mm:ss.sss",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "4.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 16200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Gandiva] Change output format of castVARCHAR(timestamp) in Gandiva",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248891/comment/16903862",
                    "id": "16903862",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
                        "name": "pravindra",
                        "key": "pravindra",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
                        },
                        "displayName": "Pindikura Ravindra",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "body": "Issue resolved by pull request 5014\n[https://github.com/apache/arrow/pull/5014]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
                        "name": "pravindra",
                        "key": "pravindra",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
                        },
                        "displayName": "Pindikura Ravindra",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "created": "2019-08-09T12:54:33.526+0000",
                    "updated": "2019-08-09T12:54:33.526+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z05c3k:",
        "customfield_12314139": null
    }
}