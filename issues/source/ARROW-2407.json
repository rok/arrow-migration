{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13150590",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150590",
    "key": "ARROW-2407",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342562",
                "id": "12342562",
                "description": "",
                "name": "0.10.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-08-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341707",
                "id": "12341707",
                "description": "",
                "name": "0.9.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-03-19"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
            "name": "kou",
            "key": "kou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
            },
            "displayName": "Kouhei Sutou",
            "active": true,
            "timeZone": "Asia/Tokyo"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332430",
                "id": "12332430",
                "name": "GLib"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
            "name": "kou",
            "key": "kou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
            },
            "displayName": "Kouhei Sutou",
            "active": true,
            "timeZone": "Asia/Tokyo"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
            "name": "kou",
            "key": "kou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
            },
            "displayName": "Kouhei Sutou",
            "active": true,
            "timeZone": "Asia/Tokyo"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2407/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@7f719358[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5e60b406[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@37ceee74[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@6c55bc0f[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6a393ffb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1cee652f[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5c938588[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@1d67ffd1[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3e02dd61[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@512a1093[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@115560fb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@33ee9c77[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Apr 11 03:34:47 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-04-11T03:34:47.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2407/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2018-04-06T13:31:14.000+0000",
        "updated": "2018-04-11T03:34:47.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[GLib] Add garrow_string_array_builder_append_values()",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150590/comment/16428327",
                    "id": "16428327",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "kou opened a new pull request #1845: ARROW-2407: [GLib] Add garrow_string_array_builder_append_values()\nURL: https://github.com/apache/arrow/pull/1845\n \n \n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-06T13:31:41.190+0000",
                    "updated": "2018-04-06T13:31:41.190+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150590/comment/16428513",
                    "id": "16428513",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy commented on a change in pull request #1845: ARROW-2407: [GLib] Add garrow_string_array_builder_append_values()\nURL: https://github.com/apache/arrow/pull/1845#discussion_r179805269\n \n \n\n ##########\n File path: c_glib/arrow-glib/array-builder.cpp\n ##########\n @@ -2184,6 +2184,72 @@ garrow_string_array_builder_append(GArrowStringArrayBuilder *builder,\n   return garrow_error_check(error, status, \"[string-array-builder][append]\");\n }\n \n+/**\n+ * garrow_string_array_builder_append_values:\n+ * @builder: A #GArrowStringArrayBuilder.\n+ * @values: (array length=values_length): The array of\n+ *   strings.\n+ * @values_length: The length of `values`.\n+ * @is_valids: (nullable) (array length=is_valids_length): The array of\n+ *   boolean that shows whether the Nth value is valid or not. If the\n+ *   Nth `is_valids` is %TRUE, the Nth `values` is valid value. Otherwise\n+ *   the Nth value is null value.\n+ * @is_valids_length: The length of `is_valids`.\n+ * @error: (nullable): Return location for a #GError or %NULL.\n+ *\n+ * Append multiple values at once. It's efficient than multiple\n+ * `append()` and `append_null()` calls.\n+ *\n+ * Returns: %TRUE on success, %FALSE if there was an error.\n+ *\n+ * Since: 0.10.0\n+ */\n+gboolean\n+garrow_string_array_builder_append_values(GArrowStringArrayBuilder *builder,\n+                                          const gchar **values,\n+                                          gint64 values_length,\n+                                          const gboolean *is_valids,\n+                                          gint64 is_valids_length,\n+                                          GError **error)\n+{\n+  const char *context = \"[string-array-builder][append-values]\";\n+  auto arrow_builder =\n+    static_cast<arrow::StringBuilder *>(\n+      garrow_array_builder_get_raw(GARROW_ARRAY_BUILDER(builder)));\n+\n+  if (is_valids_length > 0) {\n+    if (values_length != is_valids_length) {\n+      g_set_error(error,\n+                  GARROW_ERROR,\n+                  GARROW_ERROR_INVALID,\n+                  \"%s: values length and is_valids length must be equal: \"\n+                  \"<%\" G_GINT64_FORMAT \"> != \"\n+                  \"<%\" G_GINT64_FORMAT \">\",\n+                  context,\n+                  values_length,\n+                  is_valids_length);\n+      return FALSE;\n+    }\n+  }\n+\n+  std::vector<std::string> value_vector;\n+  if (is_valids_length > 0) {\n+    uint8_t valid_bytes[is_valids_length];\n+    for (gint64 i = 0; i < values_length; ++i) {\n+      value_vector.push_back(std::string(values[i]));\n+      valid_bytes[i] = is_valids[i];\n+    }\n+    auto status = arrow_builder->Append(value_vector, valid_bytes);\n \n Review comment:\n   Converting to `std::string` and inserting then into the Builder is still not the most efficient way, it would be better if we could directly pass the `values` to the StringBuilder instance. This has not be in this PR but I made a JIRA about that: https://issues.apache.org/jira/browse/ARROW-2411\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-06T16:09:26.208+0000",
                    "updated": "2018-04-06T16:09:26.208+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150590/comment/16428514",
                    "id": "16428514",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy commented on a change in pull request #1845: ARROW-2407: [GLib] Add garrow_string_array_builder_append_values()\nURL: https://github.com/apache/arrow/pull/1845#discussion_r179803416\n \n \n\n ##########\n File path: c_glib/arrow-glib/array-builder.cpp\n ##########\n @@ -2184,6 +2184,72 @@ garrow_string_array_builder_append(GArrowStringArrayBuilder *builder,\n   return garrow_error_check(error, status, \"[string-array-builder][append]\");\n }\n \n+/**\n+ * garrow_string_array_builder_append_values:\n+ * @builder: A #GArrowStringArrayBuilder.\n+ * @values: (array length=values_length): The array of\n+ *   strings.\n+ * @values_length: The length of `values`.\n+ * @is_valids: (nullable) (array length=is_valids_length): The array of\n+ *   boolean that shows whether the Nth value is valid or not. If the\n+ *   Nth `is_valids` is %TRUE, the Nth `values` is valid value. Otherwise\n+ *   the Nth value is null value.\n+ * @is_valids_length: The length of `is_valids`.\n+ * @error: (nullable): Return location for a #GError or %NULL.\n+ *\n+ * Append multiple values at once. It's efficient than multiple\n \n Review comment:\n   Missing word: \u2026 It's *more* efficient \u2026\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-06T16:09:26.233+0000",
                    "updated": "2018-04-06T16:09:26.233+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150590/comment/16429328",
                    "id": "16429328",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "kou commented on a change in pull request #1845: ARROW-2407: [GLib] Add garrow_string_array_builder_append_values()\nURL: https://github.com/apache/arrow/pull/1845#discussion_r179915453\n \n \n\n ##########\n File path: c_glib/arrow-glib/array-builder.cpp\n ##########\n @@ -2184,6 +2184,72 @@ garrow_string_array_builder_append(GArrowStringArrayBuilder *builder,\n   return garrow_error_check(error, status, \"[string-array-builder][append]\");\n }\n \n+/**\n+ * garrow_string_array_builder_append_values:\n+ * @builder: A #GArrowStringArrayBuilder.\n+ * @values: (array length=values_length): The array of\n+ *   strings.\n+ * @values_length: The length of `values`.\n+ * @is_valids: (nullable) (array length=is_valids_length): The array of\n+ *   boolean that shows whether the Nth value is valid or not. If the\n+ *   Nth `is_valids` is %TRUE, the Nth `values` is valid value. Otherwise\n+ *   the Nth value is null value.\n+ * @is_valids_length: The length of `is_valids`.\n+ * @error: (nullable): Return location for a #GError or %NULL.\n+ *\n+ * Append multiple values at once. It's efficient than multiple\n \n Review comment:\n   Thanks!\r\n   I've fixed it.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-07T12:15:08.522+0000",
                    "updated": "2018-04-07T12:15:08.522+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150590/comment/16429329",
                    "id": "16429329",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "kou commented on a change in pull request #1845: ARROW-2407: [GLib] Add garrow_string_array_builder_append_values()\nURL: https://github.com/apache/arrow/pull/1845#discussion_r179915478\n \n \n\n ##########\n File path: c_glib/arrow-glib/array-builder.cpp\n ##########\n @@ -2184,6 +2184,72 @@ garrow_string_array_builder_append(GArrowStringArrayBuilder *builder,\n   return garrow_error_check(error, status, \"[string-array-builder][append]\");\n }\n \n+/**\n+ * garrow_string_array_builder_append_values:\n+ * @builder: A #GArrowStringArrayBuilder.\n+ * @values: (array length=values_length): The array of\n+ *   strings.\n+ * @values_length: The length of `values`.\n+ * @is_valids: (nullable) (array length=is_valids_length): The array of\n+ *   boolean that shows whether the Nth value is valid or not. If the\n+ *   Nth `is_valids` is %TRUE, the Nth `values` is valid value. Otherwise\n+ *   the Nth value is null value.\n+ * @is_valids_length: The length of `is_valids`.\n+ * @error: (nullable): Return location for a #GError or %NULL.\n+ *\n+ * Append multiple values at once. It's efficient than multiple\n+ * `append()` and `append_null()` calls.\n+ *\n+ * Returns: %TRUE on success, %FALSE if there was an error.\n+ *\n+ * Since: 0.10.0\n+ */\n+gboolean\n+garrow_string_array_builder_append_values(GArrowStringArrayBuilder *builder,\n+                                          const gchar **values,\n+                                          gint64 values_length,\n+                                          const gboolean *is_valids,\n+                                          gint64 is_valids_length,\n+                                          GError **error)\n+{\n+  const char *context = \"[string-array-builder][append-values]\";\n+  auto arrow_builder =\n+    static_cast<arrow::StringBuilder *>(\n+      garrow_array_builder_get_raw(GARROW_ARRAY_BUILDER(builder)));\n+\n+  if (is_valids_length > 0) {\n+    if (values_length != is_valids_length) {\n+      g_set_error(error,\n+                  GARROW_ERROR,\n+                  GARROW_ERROR_INVALID,\n+                  \"%s: values length and is_valids length must be equal: \"\n+                  \"<%\" G_GINT64_FORMAT \"> != \"\n+                  \"<%\" G_GINT64_FORMAT \">\",\n+                  context,\n+                  values_length,\n+                  is_valids_length);\n+      return FALSE;\n+    }\n+  }\n+\n+  std::vector<std::string> value_vector;\n+  if (is_valids_length > 0) {\n+    uint8_t valid_bytes[is_valids_length];\n+    for (gint64 i = 0; i < values_length; ++i) {\n+      value_vector.push_back(std::string(values[i]));\n+      valid_bytes[i] = is_valids[i];\n+    }\n+    auto status = arrow_builder->Append(value_vector, valid_bytes);\n \n Review comment:\n   It makes sense.\r\n   I'll create a pull request.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-07T12:16:26.613+0000",
                    "updated": "2018-04-07T12:16:26.613+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150590/comment/16432231",
                    "id": "16432231",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy commented on issue #1845: ARROW-2407: [GLib] Add garrow_string_array_builder_append_values()\nURL: https://github.com/apache/arrow/pull/1845#issuecomment-380094004\n \n \n   @kou feel free to merge or rebase on the newly added Append method.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-10T13:15:55.049+0000",
                    "updated": "2018-04-10T13:15:55.049+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150590/comment/16433217",
                    "id": "16433217",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "kou commented on issue #1845: ARROW-2407: [GLib] Add garrow_string_array_builder_append_values()\nURL: https://github.com/apache/arrow/pull/1845#issuecomment-380286802\n \n \n   OK.\r\n   I've rebased and changed to use the new `Append()` method.\r\n   \r\n   If CI is passed, I'll merge this.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-11T00:16:32.897+0000",
                    "updated": "2018-04-11T00:16:32.897+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150590/comment/16433351",
                    "id": "16433351",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "kou closed pull request #1845: ARROW-2407: [GLib] Add garrow_string_array_builder_append_values()\nURL: https://github.com/apache/arrow/pull/1845\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/c_glib/arrow-glib/array-builder.cpp b/c_glib/arrow-glib/array-builder.cpp\nindex 7625bcd51..f12999881 100644\n--- a/c_glib/arrow-glib/array-builder.cpp\n+++ b/c_glib/arrow-glib/array-builder.cpp\n@@ -443,7 +443,7 @@ garrow_boolean_array_builder_append(GArrowBooleanArrayBuilder *builder,\n  * @is_valids_length: The length of `is_valids`.\n  * @error: (nullable): Return location for a #GError or %NULL.\n  *\n- * Append multiple values at once. It's efficient than multiple\n+ * Append multiple values at once. It's more efficient than multiple\n  * `append()` and `append_null()` calls.\n  *\n  * Returns: %TRUE on success, %FALSE if there was an error.\n@@ -495,7 +495,7 @@ garrow_boolean_array_builder_append_null(GArrowBooleanArrayBuilder *builder,\n  * @n: The number of null values to be appended.\n  * @error: (nullable): Return location for a #GError or %NULL.\n  *\n- * Append multiple nulls at once. It's efficient than multiple\n+ * Append multiple nulls at once. It's more efficient than multiple\n  * `append_null()` calls.\n  *\n  * Returns: %TRUE on success, %FALSE if there was an error.\n@@ -580,7 +580,7 @@ garrow_int_array_builder_append(GArrowIntArrayBuilder *builder,\n  * @is_valids_length: The length of `is_valids`.\n  * @error: (nullable): Return location for a #GError or %NULL.\n  *\n- * Append multiple values at once. It's efficient than multiple\n+ * Append multiple values at once. It's more efficient than multiple\n  * `append()` and `append_null()` calls.\n  *\n  * Returns: %TRUE on success, %FALSE if there was an error.\n@@ -630,7 +630,7 @@ garrow_int_array_builder_append_null(GArrowIntArrayBuilder *builder,\n  * @n: The number of null values to be appended.\n  * @error: (nullable): Return location for a #GError or %NULL.\n  *\n- * Append multiple nulls at once. It's efficient than multiple\n+ * Append multiple nulls at once. It's more efficient than multiple\n  * `append_null()` calls.\n  *\n  * Returns: %TRUE on success, %FALSE if there was an error.\n@@ -715,7 +715,7 @@ garrow_uint_array_builder_append(GArrowUIntArrayBuilder *builder,\n  * @is_valids_length: The length of `is_valids`.\n  * @error: (nullable): Return location for a #GError or %NULL.\n  *\n- * Append multiple values at once. It's efficient than multiple\n+ * Append multiple values at once. It's more efficient than multiple\n  * `append()` and `append_null()` calls.\n  *\n  * Returns: %TRUE on success, %FALSE if there was an error.\n@@ -765,7 +765,7 @@ garrow_uint_array_builder_append_null(GArrowUIntArrayBuilder *builder,\n  * @n: The number of null values to be appended.\n  * @error: (nullable): Return location for a #GError or %NULL.\n  *\n- * Append multiple nulls at once. It's efficient than multiple\n+ * Append multiple nulls at once. It's more efficient than multiple\n  * `append_null()` calls.\n  *\n  * Returns: %TRUE on success, %FALSE if there was an error.\n@@ -845,7 +845,7 @@ garrow_int8_array_builder_append(GArrowInt8ArrayBuilder *builder,\n  * @is_valids_length: The length of `is_valids`.\n  * @error: (nullable): Return location for a #GError or %NULL.\n  *\n- * Append multiple values at once. It's efficient than multiple\n+ * Append multiple values at once. It's more efficient than multiple\n  * `append()` and `append_null()` calls.\n  *\n  * Returns: %TRUE on success, %FALSE if there was an error.\n@@ -893,7 +893,7 @@ garrow_int8_array_builder_append_null(GArrowInt8ArrayBuilder *builder,\n  * @n: The number of null values to be appended.\n  * @error: (nullable): Return location for a #GError or %NULL.\n  *\n- * Append multiple nulls at once. It's efficient than multiple\n+ * Append multiple nulls at once. It's more efficient than multiple\n  * `append_null()` calls.\n  *\n  * Returns: %TRUE on success, %FALSE if there was an error.\n@@ -973,7 +973,7 @@ garrow_uint8_array_builder_append(GArrowUInt8ArrayBuilder *builder,\n  * @is_valids_length: The length of `is_valids`.\n  * @error: (nullable): Return location for a #GError or %NULL.\n  *\n- * Append multiple values at once. It's efficient than multiple\n+ * Append multiple values at once. It's more efficient than multiple\n  * `append()` and `append_null()` calls.\n  *\n  * Returns: %TRUE on success, %FALSE if there was an error.\n@@ -1021,7 +1021,7 @@ garrow_uint8_array_builder_append_null(GArrowUInt8ArrayBuilder *builder,\n  * @n: The number of null values to be appended.\n  * @error: (nullable): Return location for a #GError or %NULL.\n  *\n- * Append multiple nulls at once. It's efficient than multiple\n+ * Append multiple nulls at once. It's more efficient than multiple\n  * `append_null()` calls.\n  *\n  * Returns: %TRUE on success, %FALSE if there was an error.\n@@ -1101,7 +1101,7 @@ garrow_int16_array_builder_append(GArrowInt16ArrayBuilder *builder,\n  * @is_valids_length: The length of `is_valids`.\n  * @error: (nullable): Return location for a #GError or %NULL.\n  *\n- * Append multiple values at once. It's efficient than multiple\n+ * Append multiple values at once. It's more efficient than multiple\n  * `append()` and `append_null()` calls.\n  *\n  * Returns: %TRUE on success, %FALSE if there was an error.\n@@ -1149,7 +1149,7 @@ garrow_int16_array_builder_append_null(GArrowInt16ArrayBuilder *builder,\n  * @n: The number of null values to be appended.\n  * @error: (nullable): Return location for a #GError or %NULL.\n  *\n- * Append multiple nulls at once. It's efficient than multiple\n+ * Append multiple nulls at once. It's more efficient than multiple\n  * `append_null()` calls.\n  *\n  * Returns: %TRUE on success, %FALSE if there was an error.\n@@ -1229,7 +1229,7 @@ garrow_uint16_array_builder_append(GArrowUInt16ArrayBuilder *builder,\n  * @is_valids_length: The length of `is_valids`.\n  * @error: (nullable): Return location for a #GError or %NULL.\n  *\n- * Append multiple values at once. It's efficient than multiple\n+ * Append multiple values at once. It's more efficient than multiple\n  * `append()` and `append_null()` calls.\n  *\n  * Returns: %TRUE on success, %FALSE if there was an error.\n@@ -1277,7 +1277,7 @@ garrow_uint16_array_builder_append_null(GArrowUInt16ArrayBuilder *builder,\n  * @n: The number of null values to be appended.\n  * @error: (nullable): Return location for a #GError or %NULL.\n  *\n- * Append multiple nulls at once. It's efficient than multiple\n+ * Append multiple nulls at once. It's more efficient than multiple\n  * `append_null()` calls.\n  *\n  * Returns: %TRUE on success, %FALSE if there was an error.\n@@ -1357,7 +1357,7 @@ garrow_int32_array_builder_append(GArrowInt32ArrayBuilder *builder,\n  * @is_valids_length: The length of `is_valids`.\n  * @error: (nullable): Return location for a #GError or %NULL.\n  *\n- * Append multiple values at once. It's efficient than multiple\n+ * Append multiple values at once. It's more efficient than multiple\n  * `append()` and `append_null()` calls.\n  *\n  * Returns: %TRUE on success, %FALSE if there was an error.\n@@ -1405,7 +1405,7 @@ garrow_int32_array_builder_append_null(GArrowInt32ArrayBuilder *builder,\n  * @n: The number of null values to be appended.\n  * @error: (nullable): Return location for a #GError or %NULL.\n  *\n- * Append multiple nulls at once. It's efficient than multiple\n+ * Append multiple nulls at once. It's more efficient than multiple\n  * `append_null()` calls.\n  *\n  * Returns: %TRUE on success, %FALSE if there was an error.\n@@ -1485,7 +1485,7 @@ garrow_uint32_array_builder_append(GArrowUInt32ArrayBuilder *builder,\n  * @is_valids_length: The length of `is_valids`.\n  * @error: (nullable): Return location for a #GError or %NULL.\n  *\n- * Append multiple values at once. It's efficient than multiple\n+ * Append multiple values at once. It's more efficient than multiple\n  * `append()` and `append_null()` calls.\n  *\n  * Returns: %TRUE on success, %FALSE if there was an error.\n@@ -1533,7 +1533,7 @@ garrow_uint32_array_builder_append_null(GArrowUInt32ArrayBuilder *builder,\n  * @n: The number of null values to be appended.\n  * @error: (nullable): Return location for a #GError or %NULL.\n  *\n- * Append multiple nulls at once. It's efficient than multiple\n+ * Append multiple nulls at once. It's more efficient than multiple\n  * `append_null()` calls.\n  *\n  * Returns: %TRUE on success, %FALSE if there was an error.\n@@ -1613,7 +1613,7 @@ garrow_int64_array_builder_append(GArrowInt64ArrayBuilder *builder,\n  * @is_valids_length: The length of `is_valids`.\n  * @error: (nullable): Return location for a #GError or %NULL.\n  *\n- * Append multiple values at once. It's efficient than multiple\n+ * Append multiple values at once. It's more efficient than multiple\n  * `append()` and `append_null()` calls.\n  *\n  * Returns: %TRUE on success, %FALSE if there was an error.\n@@ -1661,7 +1661,7 @@ garrow_int64_array_builder_append_null(GArrowInt64ArrayBuilder *builder,\n  * @n: The number of null values to be appended.\n  * @error: (nullable): Return location for a #GError or %NULL.\n  *\n- * Append multiple nulls at once. It's efficient than multiple\n+ * Append multiple nulls at once. It's more efficient than multiple\n  * `append_null()` calls.\n  *\n  * Returns: %TRUE on success, %FALSE if there was an error.\n@@ -1741,7 +1741,7 @@ garrow_uint64_array_builder_append(GArrowUInt64ArrayBuilder *builder,\n  * @is_valids_length: The length of `is_valids`.\n  * @error: (nullable): Return location for a #GError or %NULL.\n  *\n- * Append multiple values at once. It's efficient than multiple\n+ * Append multiple values at once. It's more efficient than multiple\n  * `append()` and `append_null()` calls.\n  *\n  * Returns: %TRUE on success, %FALSE if there was an error.\n@@ -1789,7 +1789,7 @@ garrow_uint64_array_builder_append_null(GArrowUInt64ArrayBuilder *builder,\n  * @n: The number of null values to be appended.\n  * @error: (nullable): Return location for a #GError or %NULL.\n  *\n- * Append multiple nulls at once. It's efficient than multiple\n+ * Append multiple nulls at once. It's more efficient than multiple\n  * `append_null()` calls.\n  *\n  * Returns: %TRUE on success, %FALSE if there was an error.\n@@ -1869,7 +1869,7 @@ garrow_float_array_builder_append(GArrowFloatArrayBuilder *builder,\n  * @is_valids_length: The length of `is_valids`.\n  * @error: (nullable): Return location for a #GError or %NULL.\n  *\n- * Append multiple values at once. It's efficient than multiple\n+ * Append multiple values at once. It's more efficient than multiple\n  * `append()` and `append_null()` calls.\n  *\n  * Returns: %TRUE on success, %FALSE if there was an error.\n@@ -1917,7 +1917,7 @@ garrow_float_array_builder_append_null(GArrowFloatArrayBuilder *builder,\n  * @n: The number of null values to be appended.\n  * @error: (nullable): Return location for a #GError or %NULL.\n  *\n- * Append multiple nulls at once. It's efficient than multiple\n+ * Append multiple nulls at once. It's more efficient than multiple\n  * `append_null()` calls.\n  *\n  * Returns: %TRUE on success, %FALSE if there was an error.\n@@ -1997,7 +1997,7 @@ garrow_double_array_builder_append(GArrowDoubleArrayBuilder *builder,\n  * @is_valids_length: The length of `is_valids`.\n  * @error: (nullable): Return location for a #GError or %NULL.\n  *\n- * Append multiple values at once. It's efficient than multiple\n+ * Append multiple values at once. It's more efficient than multiple\n  * `append()` and `append_null()` calls.\n  *\n  * Returns: %TRUE on success, %FALSE if there was an error.\n@@ -2045,7 +2045,7 @@ garrow_double_array_builder_append_null(GArrowDoubleArrayBuilder *builder,\n  * @n: The number of null values to be appended.\n  * @error: (nullable): Return location for a #GError or %NULL.\n  *\n- * Append multiple nulls at once. It's efficient than multiple\n+ * Append multiple nulls at once. It's more efficient than multiple\n  * `append_null()` calls.\n  *\n  * Returns: %TRUE on success, %FALSE if there was an error.\n@@ -2184,6 +2184,67 @@ garrow_string_array_builder_append(GArrowStringArrayBuilder *builder,\n   return garrow_error_check(error, status, \"[string-array-builder][append]\");\n }\n \n+/**\n+ * garrow_string_array_builder_append_values:\n+ * @builder: A #GArrowStringArrayBuilder.\n+ * @values: (array length=values_length): The array of\n+ *   strings.\n+ * @values_length: The length of `values`.\n+ * @is_valids: (nullable) (array length=is_valids_length): The array of\n+ *   boolean that shows whether the Nth value is valid or not. If the\n+ *   Nth `is_valids` is %TRUE, the Nth `values` is valid value. Otherwise\n+ *   the Nth value is null value.\n+ * @is_valids_length: The length of `is_valids`.\n+ * @error: (nullable): Return location for a #GError or %NULL.\n+ *\n+ * Append multiple values at once. It's more efficient than multiple\n+ * `append()` and `append_null()` calls.\n+ *\n+ * Returns: %TRUE on success, %FALSE if there was an error.\n+ *\n+ * Since: 0.10.0\n+ */\n+gboolean\n+garrow_string_array_builder_append_values(GArrowStringArrayBuilder *builder,\n+                                          const gchar **values,\n+                                          gint64 values_length,\n+                                          const gboolean *is_valids,\n+                                          gint64 is_valids_length,\n+                                          GError **error)\n+{\n+  const char *context = \"[string-array-builder][append-values]\";\n+  auto arrow_builder =\n+    static_cast<arrow::StringBuilder *>(\n+      garrow_array_builder_get_raw(GARROW_ARRAY_BUILDER(builder)));\n+\n+  if (is_valids_length > 0) {\n+    if (values_length != is_valids_length) {\n+      g_set_error(error,\n+                  GARROW_ERROR,\n+                  GARROW_ERROR_INVALID,\n+                  \"%s: values length and is_valids length must be equal: \"\n+                  \"<%\" G_GINT64_FORMAT \"> != \"\n+                  \"<%\" G_GINT64_FORMAT \">\",\n+                  context,\n+                  values_length,\n+                  is_valids_length);\n+      return FALSE;\n+    }\n+  }\n+\n+  if (is_valids_length > 0) {\n+    uint8_t valid_bytes[is_valids_length];\n+    for (gint64 i = 0; i < values_length; ++i) {\n+      valid_bytes[i] = is_valids[i];\n+    }\n+    auto status = arrow_builder->Append(values, values_length, valid_bytes);\n+    return garrow_error_check(error, status, context);\n+  } else {\n+    auto status = arrow_builder->Append(values, values_length, nullptr);\n+    return garrow_error_check(error, status, context);\n+  }\n+}\n+\n \n G_DEFINE_TYPE(GArrowDate32ArrayBuilder,\n               garrow_date32_array_builder,\n@@ -2250,7 +2311,7 @@ garrow_date32_array_builder_append(GArrowDate32ArrayBuilder *builder,\n  * @is_valids_length: The length of `is_valids`.\n  * @error: (nullable): Return location for a #GError or %NULL.\n  *\n- * Append multiple values at once. It's efficient than multiple\n+ * Append multiple values at once. It's more efficient than multiple\n  * `append()` and `append_null()` calls.\n  *\n  * Returns: %TRUE on success, %FALSE if there was an error.\n@@ -2300,7 +2361,7 @@ garrow_date32_array_builder_append_null(GArrowDate32ArrayBuilder *builder,\n  * @n: The number of null values to be appended.\n  * @error: (nullable): Return location for a #GError or %NULL.\n  *\n- * Append multiple nulls at once. It's efficient than multiple\n+ * Append multiple nulls at once. It's more efficient than multiple\n  * `append_null()` calls.\n  *\n  * Returns: %TRUE on success, %FALSE if there was an error.\n@@ -2385,7 +2446,7 @@ garrow_date64_array_builder_append(GArrowDate64ArrayBuilder *builder,\n  * @is_valids_length: The length of `is_valids`.\n  * @error: (nullable): Return location for a #GError or %NULL.\n  *\n- * Append multiple values at once. It's efficient than multiple\n+ * Append multiple values at once. It's more efficient than multiple\n  * `append()` and `append_null()` calls.\n  *\n  * Returns: %TRUE on success, %FALSE if there was an error.\n@@ -2435,7 +2496,7 @@ garrow_date64_array_builder_append_null(GArrowDate64ArrayBuilder *builder,\n  * @n: The number of null values to be appended.\n  * @error: (nullable): Return location for a #GError or %NULL.\n  *\n- * Append multiple nulls at once. It's efficient than multiple\n+ * Append multiple nulls at once. It's more efficient than multiple\n  * `append_null()` calls.\n  *\n  * Returns: %TRUE on success, %FALSE if there was an error.\n@@ -2522,7 +2583,7 @@ garrow_timestamp_array_builder_append(GArrowTimestampArrayBuilder *builder,\n  * @is_valids_length: The length of `is_valids`.\n  * @error: (nullable): Return location for a #GError or %NULL.\n  *\n- * Append multiple values at once. It's efficient than multiple\n+ * Append multiple values at once. It's more efficient than multiple\n  * `append()` and `append_null()` calls.\n  *\n  * Returns: %TRUE on success, %FALSE if there was an error.\n@@ -2572,7 +2633,7 @@ garrow_timestamp_array_builder_append_null(GArrowTimestampArrayBuilder *builder,\n  * @n: The number of null values to be appended.\n  * @error: (nullable): Return location for a #GError or %NULL.\n  *\n- * Append multiple nulls at once. It's efficient than multiple\n+ * Append multiple nulls at once. It's more efficient than multiple\n  * `append_null()` calls.\n  *\n  * Returns: %TRUE on success, %FALSE if there was an error.\n@@ -2659,7 +2720,7 @@ garrow_time32_array_builder_append(GArrowTime32ArrayBuilder *builder,\n  * @is_valids_length: The length of `is_valids`.\n  * @error: (nullable): Return location for a #GError or %NULL.\n  *\n- * Append multiple values at once. It's efficient than multiple\n+ * Append multiple values at once. It's more efficient than multiple\n  * `append()` and `append_null()` calls.\n  *\n  * Returns: %TRUE on success, %FALSE if there was an error.\n@@ -2709,7 +2770,7 @@ garrow_time32_array_builder_append_null(GArrowTime32ArrayBuilder *builder,\n  * @n: The number of null values to be appended.\n  * @error: (nullable): Return location for a #GError or %NULL.\n  *\n- * Append multiple nulls at once. It's efficient than multiple\n+ * Append multiple nulls at once. It's more efficient than multiple\n  * `append_null()` calls.\n  *\n  * Returns: %TRUE on success, %FALSE if there was an error.\n@@ -2796,7 +2857,7 @@ garrow_time64_array_builder_append(GArrowTime64ArrayBuilder *builder,\n  * @is_valids_length: The length of `is_valids`.\n  * @error: (nullable): Return location for a #GError or %NULL.\n  *\n- * Append multiple values at once. It's efficient than multiple\n+ * Append multiple values at once. It's more efficient than multiple\n  * `append()` and `append_null()` calls.\n  *\n  * Returns: %TRUE on success, %FALSE if there was an error.\n@@ -2846,7 +2907,7 @@ garrow_time64_array_builder_append_null(GArrowTime64ArrayBuilder *builder,\n  * @n: The number of null values to be appended.\n  * @error: (nullable): Return location for a #GError or %NULL.\n  *\n- * Append multiple nulls at once. It's efficient than multiple\n+ * Append multiple nulls at once. It's more efficient than multiple\n  * `append_null()` calls.\n  *\n  * Returns: %TRUE on success, %FALSE if there was an error.\ndiff --git a/c_glib/arrow-glib/array-builder.h b/c_glib/arrow-glib/array-builder.h\nindex ea95f31e8..284a78fdb 100644\n--- a/c_glib/arrow-glib/array-builder.h\n+++ b/c_glib/arrow-glib/array-builder.h\n@@ -893,6 +893,12 @@ GArrowStringArrayBuilder *garrow_string_array_builder_new(void);\n gboolean garrow_string_array_builder_append(GArrowStringArrayBuilder *builder,\n                                             const gchar *value,\n                                             GError **error);\n+gboolean garrow_string_array_builder_append_values(GArrowStringArrayBuilder *builder,\n+                                                   const gchar **values,\n+                                                   gint64 values_length,\n+                                                   const gboolean *is_valids,\n+                                                   gint64 is_valids_length,\n+                                                   GError **error);\n \n \n #define GARROW_TYPE_DATE32_ARRAY_BUILDER        \\\ndiff --git a/c_glib/test/test-array-builder.rb b/c_glib/test/test-array-builder.rb\nindex a773131e1..6811102ca 100644\n--- a/c_glib/test/test-array-builder.rb\n+++ b/c_glib/test/test-array-builder.rb\n@@ -662,4 +662,34 @@ def sample_values\n       include ArrayBuilderAppendNullsTests\n     end\n   end\n+\n+  sub_test_case(\"StringArrayBuilder\") do\n+    def create_builder\n+      Arrow::StringArrayBuilder.new\n+    end\n+\n+    def value_data_type\n+      Arrow::StringDataType.new\n+    end\n+\n+    def builder_class_name\n+      \"string-array-builder\"\n+    end\n+\n+    def sample_values\n+      [\n+        \"hello\",\n+        \"world!!\",\n+        \"\",\n+      ]\n+    end\n+\n+    sub_test_case(\"value type\") do\n+      include ArrayBuilderValueTypeTests\n+    end\n+\n+    sub_test_case(\"#append_values\") do\n+      include ArrayBuilderAppendValuesTests\n+    end\n+  end\n end\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-11T03:34:29.965+0000",
                    "updated": "2018-04-11T03:34:29.965+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150590/comment/16433352",
                    "id": "16433352",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "body": "Issue resolved by pull request 1845\n[https://github.com/apache/arrow/pull/1845]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "created": "2018-04-11T03:34:47.854+0000",
                    "updated": "2018-04-11T03:34:47.854+0000"
                }
            ],
            "maxResults": 9,
            "total": 9,
            "startAt": 0
        },
        "customfield_12311820": "0|i3s8hb:",
        "customfield_12314139": null
    }
}