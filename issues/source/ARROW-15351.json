{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13423063",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423063",
    "key": "ARROW-15351",
    "fields": {
        "parent": {
            "id": "13418567",
            "key": "ARROW-15157",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/13418567",
            "fields": {
                "summary": "[Doc] New Contributors Guide v2",
                "status": {
                    "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                    "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                    "name": "Resolved",
                    "id": "5",
                    "statusCategory": {
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                        "id": 3,
                        "key": "done",
                        "colorName": "green",
                        "name": "Done"
                    }
                },
                "priority": {
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                    "name": "Major",
                    "id": "3"
                },
                "issuetype": {
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                    "id": "4",
                    "description": "An improvement or enhancement to an existing feature or task.",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                    "name": "Improvement",
                    "subtask": false,
                    "avatarId": 21140
                }
            }
        },
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351051",
                "id": "12351051",
                "description": "",
                "name": "8.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-05-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=alenka",
            "name": "alenka",
            "key": "alenkaf",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
            },
            "displayName": "Alenka Frim",
            "active": true,
            "timeZone": "Europe/Ljubljana"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332532",
                "id": "12332532",
                "name": "Documentation"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=alenka",
            "name": "alenka",
            "key": "alenkaf",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
            },
            "displayName": "Alenka Frim",
            "active": true,
            "timeZone": "Europe/Ljubljana"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=alenka",
            "name": "alenka",
            "key": "alenkaf",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
            },
            "displayName": "Alenka Frim",
            "active": true,
            "timeZone": "Europe/Ljubljana"
        },
        "aggregateprogress": {
            "progress": 11400,
            "total": 11400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 11400,
            "total": 11400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15351/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 19,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423063/worklog/718717",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF opened a new pull request #12313:\nURL: https://github.com/apache/arrow/pull/12313\n\n\n   This PR adds R binding tutorial for `lubridate::mday` to the New Contributors Guide.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-01T14:40:29.742+0000",
                    "updated": "2022-02-01T14:40:29.742+0000",
                    "started": "2022-02-01T14:40:29.742+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "718717",
                    "issueId": "13423063"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423063/worklog/718718",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #12313:\nURL: https://github.com/apache/arrow/pull/12313#issuecomment-1026914947\n\n\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-01T14:40:52.432+0000",
                    "updated": "2022-02-01T14:40:52.432+0000",
                    "started": "2022-02-01T14:40:52.431+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "718718",
                    "issueId": "13423063"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423063/worklog/723729",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on a change in pull request #12313:\nURL: https://github.com/apache/arrow/pull/12313#discussion_r802771295\n\n\n\n##########\nFile path: docs/source/developers/guide/tutorials/r_tutorial.rst\n##########\n@@ -22,21 +22,429 @@\n \n .. _r-tutorial:\n \n-**********\n-R tutorial\n-**********\n+***********\n+R tutorials\n+***********\n+\n+\n+Writing Bindings Walkthrough\n+============================\n \n The first R package tutorial to be included in the New Contributor's\n guide is a **Walkthrough** added in the **Writing Bindings**\n vignette. With time we will try to include additional tutorials\n directly into this guide.\n \n-Writing Bindings Walkthrough\n-----------------------------\n-\n This tutorial will show how to do a binding of a C++ function\n `starts_with() <https://arrow.apache.org/docs/cpp/compute.html#containment-tests>`_\n to the (base) R function ``startsWith()``.\n \n To view the tutorial follow the\n `Walkthrough section of the Writing Bindings article <https://arrow.apache.org/docs/r/articles/developers/bindings.html#walkthrough>`_.\n+\n+\n+R tutorial on adding a lubridate binding\n+========================================\n+\n+In this tutorial we will document a simple binding contribution\n+to Arrow R package following the steps specified by the\n+:ref:`quick-ref-guide` section of the guide and a more detailed\n+:ref:`step_by_step` section. Navigate there whenever there is\n+some information you may find is missing here.\n+\n+The binding will be added to the ``expression.R`` file in the \n+R package. But you can also follow these steps in case you are\n+adding a binding that will live somewhere else.\n+\n+.. seealso::\n+   \n+   To read more about the philosophy behind R bindings, refer to the\n+   `Writing Bindings article <https://arrow.apache.org/docs/r/articles/developers/bindings.html>`_.\n+\n+This tutorial is different from the :ref:`step_by_step` as we\n+will be working on a specific case. This tutorial is not meant\n+as a step-by-step guide.\n+\n+**Let's start!**\n+\n+Set up\n+------\n+\n+Let's set up the Arrow repository. We presume here that Git is\n+already installed. Otherwise please see the :ref:`set-up` section.\n+\n+Once the `Apache Arrow repository <https://github.com/apache/arrow>`_\n+is forked we will clone it and add the link of the main repository\n\nReview comment:\n       Do we instruct people on how to fork it?  If so, can we link to that.  If not, we should explicitly tell the reader that they'll need to fork it. \n\n##########\nFile path: docs/source/developers/guide/tutorials/r_tutorial.rst\n##########\n@@ -22,21 +22,429 @@\n \n .. _r-tutorial:\n \n-**********\n-R tutorial\n-**********\n+***********\n+R tutorials\n+***********\n+\n+\n+Writing Bindings Walkthrough\n+============================\n \n The first R package tutorial to be included in the New Contributor's\n guide is a **Walkthrough** added in the **Writing Bindings**\n vignette. With time we will try to include additional tutorials\n directly into this guide.\n \n-Writing Bindings Walkthrough\n-----------------------------\n-\n This tutorial will show how to do a binding of a C++ function\n `starts_with() <https://arrow.apache.org/docs/cpp/compute.html#containment-tests>`_\n to the (base) R function ``startsWith()``.\n \n To view the tutorial follow the\n `Walkthrough section of the Writing Bindings article <https://arrow.apache.org/docs/r/articles/developers/bindings.html#walkthrough>`_.\n+\n+\n+R tutorial on adding a lubridate binding\n+========================================\n+\n+In this tutorial we will document a simple binding contribution\n+to Arrow R package following the steps specified by the\n+:ref:`quick-ref-guide` section of the guide and a more detailed\n+:ref:`step_by_step` section. Navigate there whenever there is\n+some information you may find is missing here.\n+\n+The binding will be added to the ``expression.R`` file in the \n+R package. But you can also follow these steps in case you are\n+adding a binding that will live somewhere else.\n+\n+.. seealso::\n+   \n+   To read more about the philosophy behind R bindings, refer to the\n+   `Writing Bindings article <https://arrow.apache.org/docs/r/articles/developers/bindings.html>`_.\n+\n+This tutorial is different from the :ref:`step_by_step` as we\n+will be working on a specific case. This tutorial is not meant\n+as a step-by-step guide.\n+\n+**Let's start!**\n+\n+Set up\n+------\n+\n+Let's set up the Arrow repository. We presume here that Git is\n+already installed. Otherwise please see the :ref:`set-up` section.\n+\n+Once the `Apache Arrow repository <https://github.com/apache/arrow>`_\n+is forked we will clone it and add the link of the main repository\n+to our upstream.\n+\n+.. code:: console\n+\n+   $ git clone https://github.com/<your username>/arrow.git\n+   $ cd arrow\n+   $ git remote add upstream https://github.com/apache/arrow\n+\n+Building R package\n+------------------\n+\n+Script for building R package differs depending on the Operating\n+System you are using. For this reason we will only refer to\n+the instructions for the building process in this tutorial.\n+\n+.. seealso::\n+\n+   For the **introduction** to the building process refer to the\n+   :ref:`build-arrow-guide` section.\n+\n+   For the **instructions** on how to build R package refer to the\n+   `R developer docs <https://arrow.apache.org/docs/r/articles/developing.html>`_.\n+\n+JIRA issue\n+----------\n+\n+In this tutorial we will be tackling a JIRA issue for implementing\n+a simple binding for ``mday()`` function that will match that of the\n+existing R function from ``lubridate``. The issue can be found on\n+`this link <https://issues.apache.org/jira/browse/ARROW-14816>`_.\n+\n+.. figure:: R_tutorial_jira_issue.jpeg\n+   :scale: 40 %\n+   :alt: JIRA page of the issue for the R binding.\n+\n+   JIRA page of the issue for the lubridate::mday binding.\n\nReview comment:\n       ```suggestion\r\n      JIRA page of the issue for the lubridate::mday() binding.\r\n   ```\n\n##########\nFile path: docs/source/developers/guide/tutorials/r_tutorial.rst\n##########\n@@ -22,21 +22,429 @@\n \n .. _r-tutorial:\n \n-**********\n-R tutorial\n-**********\n+***********\n+R tutorials\n+***********\n+\n+\n+Writing Bindings Walkthrough\n+============================\n \n The first R package tutorial to be included in the New Contributor's\n guide is a **Walkthrough** added in the **Writing Bindings**\n vignette. With time we will try to include additional tutorials\n directly into this guide.\n \n-Writing Bindings Walkthrough\n-----------------------------\n-\n This tutorial will show how to do a binding of a C++ function\n `starts_with() <https://arrow.apache.org/docs/cpp/compute.html#containment-tests>`_\n to the (base) R function ``startsWith()``.\n \n To view the tutorial follow the\n `Walkthrough section of the Writing Bindings article <https://arrow.apache.org/docs/r/articles/developers/bindings.html#walkthrough>`_.\n+\n+\n+R tutorial on adding a lubridate binding\n+========================================\n+\n+In this tutorial we will document a simple binding contribution\n+to Arrow R package following the steps specified by the\n\nReview comment:\n       ```suggestion\r\n   In this tutorial, we will document the contribution of a binding\r\n   to Arrow R package following the steps specified by the\r\n   ```\n\n##########\nFile path: docs/source/developers/guide/tutorials/r_tutorial.rst\n##########\n@@ -22,21 +22,429 @@\n \n .. _r-tutorial:\n \n-**********\n-R tutorial\n-**********\n+***********\n+R tutorials\n+***********\n+\n+\n+Writing Bindings Walkthrough\n+============================\n \n The first R package tutorial to be included in the New Contributor's\n guide is a **Walkthrough** added in the **Writing Bindings**\n vignette. With time we will try to include additional tutorials\n directly into this guide.\n \n-Writing Bindings Walkthrough\n-----------------------------\n-\n This tutorial will show how to do a binding of a C++ function\n `starts_with() <https://arrow.apache.org/docs/cpp/compute.html#containment-tests>`_\n to the (base) R function ``startsWith()``.\n \n To view the tutorial follow the\n `Walkthrough section of the Writing Bindings article <https://arrow.apache.org/docs/r/articles/developers/bindings.html#walkthrough>`_.\n+\n+\n+R tutorial on adding a lubridate binding\n+========================================\n+\n+In this tutorial we will document a simple binding contribution\n+to Arrow R package following the steps specified by the\n+:ref:`quick-ref-guide` section of the guide and a more detailed\n+:ref:`step_by_step` section. Navigate there whenever there is\n+some information you may find is missing here.\n+\n+The binding will be added to the ``expression.R`` file in the \n+R package. But you can also follow these steps in case you are\n+adding a binding that will live somewhere else.\n+\n+.. seealso::\n+   \n+   To read more about the philosophy behind R bindings, refer to the\n+   `Writing Bindings article <https://arrow.apache.org/docs/r/articles/developers/bindings.html>`_.\n+\n+This tutorial is different from the :ref:`step_by_step` as we\n+will be working on a specific case. This tutorial is not meant\n+as a step-by-step guide.\n+\n+**Let's start!**\n+\n+Set up\n+------\n+\n+Let's set up the Arrow repository. We presume here that Git is\n+already installed. Otherwise please see the :ref:`set-up` section.\n+\n+Once the `Apache Arrow repository <https://github.com/apache/arrow>`_\n+is forked we will clone it and add the link of the main repository\n+to our upstream.\n+\n+.. code:: console\n+\n+   $ git clone https://github.com/<your username>/arrow.git\n+   $ cd arrow\n+   $ git remote add upstream https://github.com/apache/arrow\n+\n+Building R package\n+------------------\n+\n+Script for building R package differs depending on the Operating\n+System you are using. For this reason we will only refer to\n+the instructions for the building process in this tutorial.\n+\n+.. seealso::\n+\n+   For the **introduction** to the building process refer to the\n+   :ref:`build-arrow-guide` section.\n+\n+   For the **instructions** on how to build R package refer to the\n\nReview comment:\n       ```suggestion\r\n      For the **instructions** on how to build the R package refer to the\r\n   ```\n\n##########\nFile path: docs/source/developers/guide/tutorials/r_tutorial.rst\n##########\n@@ -22,21 +22,429 @@\n \n .. _r-tutorial:\n \n-**********\n-R tutorial\n-**********\n+***********\n+R tutorials\n+***********\n+\n+\n+Writing Bindings Walkthrough\n+============================\n \n The first R package tutorial to be included in the New Contributor's\n guide is a **Walkthrough** added in the **Writing Bindings**\n vignette. With time we will try to include additional tutorials\n directly into this guide.\n \n-Writing Bindings Walkthrough\n-----------------------------\n-\n This tutorial will show how to do a binding of a C++ function\n `starts_with() <https://arrow.apache.org/docs/cpp/compute.html#containment-tests>`_\n to the (base) R function ``startsWith()``.\n \n To view the tutorial follow the\n `Walkthrough section of the Writing Bindings article <https://arrow.apache.org/docs/r/articles/developers/bindings.html#walkthrough>`_.\n+\n+\n+R tutorial on adding a lubridate binding\n+========================================\n+\n+In this tutorial we will document a simple binding contribution\n+to Arrow R package following the steps specified by the\n+:ref:`quick-ref-guide` section of the guide and a more detailed\n+:ref:`step_by_step` section. Navigate there whenever there is\n+some information you may find is missing here.\n+\n+The binding will be added to the ``expression.R`` file in the \n+R package. But you can also follow these steps in case you are\n+adding a binding that will live somewhere else.\n+\n+.. seealso::\n+   \n+   To read more about the philosophy behind R bindings, refer to the\n+   `Writing Bindings article <https://arrow.apache.org/docs/r/articles/developers/bindings.html>`_.\n+\n+This tutorial is different from the :ref:`step_by_step` as we\n+will be working on a specific case. This tutorial is not meant\n+as a step-by-step guide.\n+\n+**Let's start!**\n+\n+Set up\n+------\n+\n+Let's set up the Arrow repository. We presume here that Git is\n+already installed. Otherwise please see the :ref:`set-up` section.\n+\n+Once the `Apache Arrow repository <https://github.com/apache/arrow>`_\n+is forked we will clone it and add the link of the main repository\n+to our upstream.\n+\n+.. code:: console\n+\n+   $ git clone https://github.com/<your username>/arrow.git\n+   $ cd arrow\n+   $ git remote add upstream https://github.com/apache/arrow\n+\n+Building R package\n+------------------\n+\n+Script for building R package differs depending on the Operating\n+System you are using. For this reason we will only refer to\n+the instructions for the building process in this tutorial.\n+\n+.. seealso::\n+\n+   For the **introduction** to the building process refer to the\n+   :ref:`build-arrow-guide` section.\n+\n+   For the **instructions** on how to build R package refer to the\n+   `R developer docs <https://arrow.apache.org/docs/r/articles/developing.html>`_.\n+\n+JIRA issue\n+----------\n+\n+In this tutorial we will be tackling a JIRA issue for implementing\n+a simple binding for ``mday()`` function that will match that of the\n+existing R function from ``lubridate``. The issue can be found on\n+`this link <https://issues.apache.org/jira/browse/ARROW-14816>`_.\n+\n+.. figure:: R_tutorial_jira_issue.jpeg\n+   :scale: 40 %\n+   :alt: JIRA page of the issue for the R binding.\n+\n+   JIRA page of the issue for the lubridate::mday binding.\n+\n+.. note::\n+\n+   If you do not have an issue and you need help finding one please refer\n+   to the :ref:`finding-issues` part of the guide.\n+\n+Once you have an issue picked out and assigned to yourself, you can\n+proceed to the next step.\n+\n+Start the work on a new branch\n+------------------------------\n+\n+Before we start working on adding the binding we should\n+create a new branch from the updated master.\n+\n+.. code:: console\n+\n+   $ git checkout master\n+   $ git fetch upstream\n+   $ git pull --ff-only upstream master\n+   $ git checkout -b ARROW-14816\n+\n+Now we can start with researching the R function and the C++ Arrow\n+compute function we want to expose or connect to.\n+\n+**Examine the lubridate mday() function**\n+\n+Going through the `lubridate documentation <https://lubridate.tidyverse.org/reference/day.html>`_\n+we can see that ``mday()`` takes a date object\n+and returns the day of the month as a numeric object.\n+\n+We can run some examples in the R console to help us understand\n+the function better:\n+\n+.. code-block:: R\n+\n+   > library(lubridate)\n+   > mday(as.Date(\"2000-12-31\"))\n+   [1] 31\n+   > mday(ymd(080306))\n+   [1] 6\n+\n+**Examine the Arrow C++ day() function**\n+\n+From the `compute function documentation <https://arrow.apache.org/docs/cpp/compute.html#containment-tests>`_\n+we can see that ``day`` is a unary function, which means that it takes\n+a single data input. The data input must be a ``Temporal class`` and\n+the returned value is an ``Integer/numeric`` type.\n+\n+The ``Temporal class`` is specified as: Date types (Date32, Date64),\n+Time types (Time32, Time64), Timestamp, Duration, Interval.\n+\n+We can call an Arrow C++ function from an R console using ``call_function``\n+to see how it works:\n+\n+.. code-block:: R\n+\n+   > call_function(\"day\", Scalar$create(lubridate::ymd(\"2000-12-31\")))\n+   Scalar\n+   31\n+\n+We can see that lubridate and Arrow functions operate on and return\n+equivalent data types. Lubridate ``mday()`` function has no additional\n\nReview comment:\n       ```suggestion\r\n   equivalent data types. lubridate's ``mday()`` function has no additional\r\n   ```\n\n##########\nFile path: docs/source/developers/guide/tutorials/r_tutorial.rst\n##########\n@@ -22,21 +22,429 @@\n \n .. _r-tutorial:\n \n-**********\n-R tutorial\n-**********\n+***********\n+R tutorials\n+***********\n+\n+\n+Writing Bindings Walkthrough\n+============================\n \n The first R package tutorial to be included in the New Contributor's\n guide is a **Walkthrough** added in the **Writing Bindings**\n vignette. With time we will try to include additional tutorials\n directly into this guide.\n \n-Writing Bindings Walkthrough\n-----------------------------\n-\n This tutorial will show how to do a binding of a C++ function\n `starts_with() <https://arrow.apache.org/docs/cpp/compute.html#containment-tests>`_\n to the (base) R function ``startsWith()``.\n \n To view the tutorial follow the\n `Walkthrough section of the Writing Bindings article <https://arrow.apache.org/docs/r/articles/developers/bindings.html#walkthrough>`_.\n+\n+\n+R tutorial on adding a lubridate binding\n+========================================\n+\n+In this tutorial we will document a simple binding contribution\n+to Arrow R package following the steps specified by the\n+:ref:`quick-ref-guide` section of the guide and a more detailed\n+:ref:`step_by_step` section. Navigate there whenever there is\n+some information you may find is missing here.\n+\n+The binding will be added to the ``expression.R`` file in the \n+R package. But you can also follow these steps in case you are\n+adding a binding that will live somewhere else.\n+\n+.. seealso::\n+   \n+   To read more about the philosophy behind R bindings, refer to the\n+   `Writing Bindings article <https://arrow.apache.org/docs/r/articles/developers/bindings.html>`_.\n+\n+This tutorial is different from the :ref:`step_by_step` as we\n+will be working on a specific case. This tutorial is not meant\n+as a step-by-step guide.\n+\n+**Let's start!**\n+\n+Set up\n+------\n+\n+Let's set up the Arrow repository. We presume here that Git is\n+already installed. Otherwise please see the :ref:`set-up` section.\n+\n+Once the `Apache Arrow repository <https://github.com/apache/arrow>`_\n+is forked we will clone it and add the link of the main repository\n+to our upstream.\n+\n+.. code:: console\n+\n+   $ git clone https://github.com/<your username>/arrow.git\n+   $ cd arrow\n+   $ git remote add upstream https://github.com/apache/arrow\n+\n+Building R package\n+------------------\n+\n+Script for building R package differs depending on the Operating\n+System you are using. For this reason we will only refer to\n+the instructions for the building process in this tutorial.\n+\n+.. seealso::\n+\n+   For the **introduction** to the building process refer to the\n+   :ref:`build-arrow-guide` section.\n+\n+   For the **instructions** on how to build R package refer to the\n+   `R developer docs <https://arrow.apache.org/docs/r/articles/developing.html>`_.\n+\n+JIRA issue\n+----------\n+\n+In this tutorial we will be tackling a JIRA issue for implementing\n+a simple binding for ``mday()`` function that will match that of the\n+existing R function from ``lubridate``. The issue can be found on\n+`this link <https://issues.apache.org/jira/browse/ARROW-14816>`_.\n+\n+.. figure:: R_tutorial_jira_issue.jpeg\n+   :scale: 40 %\n+   :alt: JIRA page of the issue for the R binding.\n+\n+   JIRA page of the issue for the lubridate::mday binding.\n+\n+.. note::\n+\n+   If you do not have an issue and you need help finding one please refer\n+   to the :ref:`finding-issues` part of the guide.\n+\n+Once you have an issue picked out and assigned to yourself, you can\n+proceed to the next step.\n+\n+Start the work on a new branch\n+------------------------------\n+\n+Before we start working on adding the binding we should\n+create a new branch from the updated master.\n+\n+.. code:: console\n+\n+   $ git checkout master\n+   $ git fetch upstream\n+   $ git pull --ff-only upstream master\n+   $ git checkout -b ARROW-14816\n+\n+Now we can start with researching the R function and the C++ Arrow\n+compute function we want to expose or connect to.\n+\n+**Examine the lubridate mday() function**\n+\n+Going through the `lubridate documentation <https://lubridate.tidyverse.org/reference/day.html>`_\n+we can see that ``mday()`` takes a date object\n+and returns the day of the month as a numeric object.\n+\n+We can run some examples in the R console to help us understand\n+the function better:\n+\n+.. code-block:: R\n+\n+   > library(lubridate)\n+   > mday(as.Date(\"2000-12-31\"))\n+   [1] 31\n+   > mday(ymd(080306))\n+   [1] 6\n+\n+**Examine the Arrow C++ day() function**\n+\n+From the `compute function documentation <https://arrow.apache.org/docs/cpp/compute.html#containment-tests>`_\n+we can see that ``day`` is a unary function, which means that it takes\n+a single data input. The data input must be a ``Temporal class`` and\n+the returned value is an ``Integer/numeric`` type.\n+\n+The ``Temporal class`` is specified as: Date types (Date32, Date64),\n+Time types (Time32, Time64), Timestamp, Duration, Interval.\n+\n+We can call an Arrow C++ function from an R console using ``call_function``\n+to see how it works:\n+\n+.. code-block:: R\n+\n+   > call_function(\"day\", Scalar$create(lubridate::ymd(\"2000-12-31\")))\n+   Scalar\n+   31\n+\n+We can see that lubridate and Arrow functions operate on and return\n+equivalent data types. Lubridate ``mday()`` function has no additional\n+arguments and there are also no option classes associated with Arrow C++\n+function ``day()``.\n+\n+.. note::\n+\n+   To see what to do if there is an option class associated with the\n+   function you are binding, refer to\n+   `Examining the C++ function <https://arrow.apache.org/docs/r/articles/developers/bindings.html#examining-the-c-function>`_ from the Writing Bindings\n+   article.\n+\n+Looking at the code in ``expressions.R`` we can see the day function\n+is already specified/mapped on the R package side:\n+`<https://github.com/apache/arrow/blob/658bec37aa5cbdd53b5e4cdc81b8ba3962e67f11/r/R/expression.R#L63-L64>`_\n+\n+We only need to add ``mday`` to the list of expressions connecting\n+it to the C++ ``day`` function.\n+\n+.. code-block:: R\n+\n+   # second is defined in dplyr-functions.R\n+   # wday is defined in dplyr-functions.R\n+   \"mday\" = \"day\",\n+   \"yday\" = \"day_of_year\",\n+   \"year\" = \"year\",\n+\n+Adding a test\n+-------------\n+\n+Now we need to add a test that checks if everything works well.\n+If there are additional options or edge cases, we would have to\n+add more. Looking at tests for similar functions (for example\n+``yday()`` or ``day())`` we can see that a good place to add two\n+tests we have is in ``test-dplyr-funcs-datetime.R``:\n+\n+.. code-block:: R\n+\n+   test_that(\"extract mday from timestamp\", {\n+     compare_dplyr_binding(\n+       .input %>%\n+         mutate(x = mday(datetime)) %>%\n+         collect(),\n+       test_df\n+     )\n+   })\n+\n+And \n+\n+.. code-block:: R\n+\n+   test_that(\"extract mday from date\", {\n+     compare_dplyr_binding(\n+       .input %>%\n+         mutate(x = mday(date)) %>%\n+         collect(),\n+       test_df\n+     )\n+   })\n+\n+Now we need to see if the tests are passing or we need to do some\n+more research and code corrections.\n+\n+.. code-block:: R\n+\n+   devtools::test(filter=\"datetime\")\n+\n+   > devtools::test(filter=\"datetime\")\n+   \u2139 Loading arrow\n+   See arrow_info() for available features\n+   \u2139 Testing arrow\n+   See arrow_info() for available features\n+   \u2714 | F W S  OK | Context\n+   \u2716 | 1     230 | dplyr-funcs-datetime [1.4s]                                                                                             \n+   \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n+   Failure (test-dplyr-funcs-datetime.R:187:3): strftime\n+   ``%>%`(...)` did not throw the expected error.\n+   Backtrace:\n+    1. testthat::expect_error(...) test-dplyr-funcs-datetime.R:187:2\n+    2. testthat:::expect_condition_matching(...)\n+   \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n+\n+   \u2550\u2550 Results \u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\n+   Duration: 1.4 s\n+\n+   [ FAIL 1 | WARN 0 | SKIP 0 | PASS 230 ]\n+\n+There is a fail we get for the ``strftime`` function but looking\n+at the code we see is not connected to our work. We can move on and\n+maybe ask others if they are getting similar fail when running the tests.\n+It could be we only need to rebuild the library.\n+\n+Check styling\n+-------------\n+\n+As we did not change any part of the C++ code we will not\n+run any linters. In case we would need to check the styling\n+for the C++ part we would run ``arrow/r/lint.sh`` to lint the code.\n+\n+Creating a Pull Request\n+-----------------------\n+\n+First let\u2019s review our changes in the shell using ``git status`` to see\n+which files have been changed and to commit only the ones we are working on.\n+\n+.. code:: console\n+\n+   $ git status\n+   On branch ARROW-14816\n+   Changes not staged for commit:\n+     (use \"git add <file>...\" to update what will be committed)\n+     (use \"git restore <file>...\" to discard changes in working directory)\n+      modified:   R/expression.R\n+      modified:   tests/testthat/test-dplyr-funcs-datetime.R\n+\n+And ``git diff`` to see the changes in the files in order to spot any error we might have made.\n+\n+.. code:: console\n+\n+   $ git diff\n+   diff --git a/r/R/expression.R b/r/R/expression.R\n+   index 37fc21c25..0e71803ec 100644\n+   --- a/r/R/expression.R\n+   +++ b/r/R/expression.R\n+   @@ -70,6 +70,7 @@\n+      \"quarter\" = \"quarter\",\n+      # second is defined in dplyr-functions.R\n+      # wday is defined in dplyr-functions.R\n+   +  \"mday\" = \"day\",\n+      \"yday\" = \"day_of_year\",\n+      \"year\" = \"year\",\n+\n+   diff --git a/r/tests/testthat/test-dplyr-funcs-datetime.R b/r/tests/testthat/test-dplyr-funcs-datetime.R\n+   index 359a5403a..228eca56a 100644\n+   --- a/r/tests/testthat/test-dplyr-funcs-datetime.R\n+   +++ b/r/tests/testthat/test-dplyr-funcs-datetime.R\n+   @@ -444,6 +444,15 @@ test_that(\"extract wday from timestamp\", {\n+      )\n+    })\n+    \n+   +test_that(\"extract mday from timestamp\", {\n+   +  compare_dplyr_binding(\n+   +    .input %>%\n+   +      mutate(x = mday(datetime)) %>%\n+   +      collect(),\n+   +    test_df\n+   +  )\n+   +})\n+   +\n+    test_that(\"extract yday from timestamp\", {\n+      compare_dplyr_binding(\n+        .input %>%\n+   @@ -626,6 +635,15 @@ test_that(\"extract wday from date\", {\n+      )\n+    })\n+\n+   +test_that(\"extract mday from date\", {\n+   +  compare_dplyr_binding(\n+   +    .input %>%\n+   +      mutate(x = mday(date)) %>%\n+   +      collect(),\n+   +    test_df\n+   +  )\n+   +})\n+   +\n+    test_that(\"extract yday from date\", {\n+      compare_dplyr_binding(\n+        .input %>%\n+\n+Everything looks OK. Now we can make the commit\n+(save our changes to the branch history):\n+\n+.. code:: console\n+\n+   $ git commit -am \"Adding a binding and a test for mday() lubridate\"\n+   [ARROW-14816 ed37d3a3b] Adding a binding and a test for mday() lubridate\n+    2 files changed, 19 insertions(+)\n+\n+We can use ``git log`` to check the history of commits:\n+\n+.. code:: console\n+\n+   $ git log\n+   commit ed37d3a3b3eef76b696532f10562fea85f809fab (HEAD -> ARROW-14816)\n+   Author: Alenka Frim <frim.alenka@gmail.com>\n+   Date:   Fri Jan 21 09:15:31 2022 +0100\n+\n+       Adding a binding and a test for mday() lubridate\n+\n+   commit c5358787ee8f7b80f067292f49e5f032854041b9 (upstream/master, upstream/HEAD, master, ARROW-15346, ARROW-10643)\n+   Author: Kriszti\u00e1n Sz\u0171cs <szucs.krisztian@gmail.com>\n+   Date:   Thu Jan 20 09:45:59 2022 +0900\n+\n+       ARROW-15372: [C++][Gandiva] Gandiva now depends on boost/crc.hpp which is missing from the trimmed boost archive\n+       \n+       See build error https://github.com/ursacomputing/crossbow/runs/4871392838?check_suite_focus=true#step:5:11762\n+       \n+       Closes #12190 from kszucs/ARROW-15372\n+       \n+       Authored-by: Kriszti\u00e1n Sz\u0171cs <szucs.krisztian@gmail.com>\n+       Signed-off-by: Sutou Kouhei <kou@clear-code.com>\n+\n+If we started the branch some time ago, we may need to rebase\n+to upstream master to make sure there are no merge conflicts:\n+\n+.. code:: console\n+\n+   $ git pull upstream master --rebase\n+\n+And now we can push our work to the forked Arrow repository\n+on GitHub called origin.\n+\n+.. code:: console\n+\n+   $ git push origin ARROW-14816\n+   Enumerating objects: 233, done.\n+   Counting objects: 100% (233/233), done.\n+   Delta compression using up to 8 threads\n+   Compressing objects: 100% (130/130), done.\n+   Writing objects: 100% (151/151), 35.78 KiB | 8.95 MiB/s, done.\n+   Total 151 (delta 129), reused 33 (delta 20), pack-reused 0\n+   remote: Resolving deltas: 100% (129/129), completed with 80 local objects.\n+   remote: \n+   remote: Create a pull request for 'ARROW-14816' on GitHub by visiting:\n+   remote:      https://github.com/AlenkaF/arrow/pull/new/ARROW-14816\n+   remote: \n+   To https://github.com/AlenkaF/arrow.git\n+    * [new branch]          ARROW-14816 -> ARROW-14816\n+\n+Now we have to go to the `Arrow repository on GitHub <https://github.com/apache/arrow>`_\n+to create a Pull Request. On the GitHub Arrow\n+page (main or forked) we will see a yellow notice\n+bar with a note that we made recent pushes to the branch\n+ARROW-14816. That\u2019s great, now we can make the Pull Request\n+by clicking on **Compare & pull request**. \n+\n+.. figure:: R_tutorial_create_pr_notice.jpeg\n+   :scale: 60 %\n+   :alt: GitHub page of the Apache Arrow repository showing a notice bar\n+         indicating change has been made in our branch and a Pull Request\n+         can be created.\n+\n+   Notice bar on the Apache Arrow repository.\n+\n+First we need to change the Title to **ARROW-14816: [R] Implement\n+bindings for lubridate::mday** in order to match it with the\n+JIRA issue. Note a punctuation mark was added!\n+\n+We will also add a description to make it clear to others what we are trying to do.\n+\n+.. figure:: R_tutorial_pr_descr.jpeg\n+   :scale: 50 %\n+   :alt: GitHub page of the Pull Request showing the editor for the\n+         title and a description.\n+\n+   Editing the title and the description of our Pull Request.\n+\n+Once we click **Create pull request** our code can be reviewed as\n+a Pull Request in the Apache Arrow repository.\n+\n+.. figure:: R_tutorial_pr.jpeg\n+   :scale: 50 %\n+   :alt: GitHub page of the Pull Request showing the title and a\n+         description.\n+\n+   Here it is, our Pull Request!\n+\n+The Pull Request gets connected to the JIRA issue and the CI is running.\n\nReview comment:\n       ```suggestion\r\n   The pull request gets connected to the JIRA issue and the CI is running.\r\n   ```\n\n##########\nFile path: docs/source/developers/guide/tutorials/python_tutorial.rst\n##########\n@@ -133,7 +133,7 @@ Start the work on a new branch\n ------------------------------\n \n Before we start working on adding the feature we should\n-create a new branch from updated master.\n+create a new branch from the updated master.\n\nReview comment:\n       ```suggestion\r\n   create a new branch from the updated master branch.\r\n   ```\n\n##########\nFile path: docs/source/developers/guide/tutorials/r_tutorial.rst\n##########\n@@ -22,21 +22,429 @@\n \n .. _r-tutorial:\n \n-**********\n-R tutorial\n-**********\n+***********\n+R tutorials\n+***********\n+\n+\n+Writing Bindings Walkthrough\n+============================\n \n The first R package tutorial to be included in the New Contributor's\n guide is a **Walkthrough** added in the **Writing Bindings**\n vignette. With time we will try to include additional tutorials\n directly into this guide.\n \n-Writing Bindings Walkthrough\n-----------------------------\n-\n This tutorial will show how to do a binding of a C++ function\n `starts_with() <https://arrow.apache.org/docs/cpp/compute.html#containment-tests>`_\n to the (base) R function ``startsWith()``.\n \n To view the tutorial follow the\n `Walkthrough section of the Writing Bindings article <https://arrow.apache.org/docs/r/articles/developers/bindings.html#walkthrough>`_.\n+\n+\n+R tutorial on adding a lubridate binding\n+========================================\n+\n+In this tutorial we will document a simple binding contribution\n+to Arrow R package following the steps specified by the\n+:ref:`quick-ref-guide` section of the guide and a more detailed\n+:ref:`step_by_step` section. Navigate there whenever there is\n+some information you may find is missing here.\n+\n+The binding will be added to the ``expression.R`` file in the \n+R package. But you can also follow these steps in case you are\n+adding a binding that will live somewhere else.\n+\n+.. seealso::\n+   \n+   To read more about the philosophy behind R bindings, refer to the\n+   `Writing Bindings article <https://arrow.apache.org/docs/r/articles/developers/bindings.html>`_.\n+\n+This tutorial is different from the :ref:`step_by_step` as we\n+will be working on a specific case. This tutorial is not meant\n+as a step-by-step guide.\n+\n+**Let's start!**\n+\n+Set up\n+------\n+\n+Let's set up the Arrow repository. We presume here that Git is\n+already installed. Otherwise please see the :ref:`set-up` section.\n+\n+Once the `Apache Arrow repository <https://github.com/apache/arrow>`_\n+is forked we will clone it and add the link of the main repository\n+to our upstream.\n+\n+.. code:: console\n+\n+   $ git clone https://github.com/<your username>/arrow.git\n+   $ cd arrow\n+   $ git remote add upstream https://github.com/apache/arrow\n+\n+Building R package\n+------------------\n+\n+Script for building R package differs depending on the Operating\n+System you are using. For this reason we will only refer to\n\nReview comment:\n       ```suggestion\r\n   The steps to follow for for building the R package differs depending on the operating\r\n   system you are using. For this reason we will only refer to\r\n   ```\n\n##########\nFile path: docs/source/developers/guide/tutorials/r_tutorial.rst\n##########\n@@ -22,21 +22,429 @@\n \n .. _r-tutorial:\n \n-**********\n-R tutorial\n-**********\n+***********\n+R tutorials\n+***********\n+\n+\n+Writing Bindings Walkthrough\n+============================\n \n The first R package tutorial to be included in the New Contributor's\n guide is a **Walkthrough** added in the **Writing Bindings**\n vignette. With time we will try to include additional tutorials\n directly into this guide.\n \n-Writing Bindings Walkthrough\n-----------------------------\n-\n This tutorial will show how to do a binding of a C++ function\n `starts_with() <https://arrow.apache.org/docs/cpp/compute.html#containment-tests>`_\n to the (base) R function ``startsWith()``.\n \n To view the tutorial follow the\n `Walkthrough section of the Writing Bindings article <https://arrow.apache.org/docs/r/articles/developers/bindings.html#walkthrough>`_.\n+\n+\n+R tutorial on adding a lubridate binding\n+========================================\n+\n+In this tutorial we will document a simple binding contribution\n+to Arrow R package following the steps specified by the\n+:ref:`quick-ref-guide` section of the guide and a more detailed\n+:ref:`step_by_step` section. Navigate there whenever there is\n+some information you may find is missing here.\n+\n+The binding will be added to the ``expression.R`` file in the \n+R package. But you can also follow these steps in case you are\n+adding a binding that will live somewhere else.\n+\n+.. seealso::\n+   \n+   To read more about the philosophy behind R bindings, refer to the\n+   `Writing Bindings article <https://arrow.apache.org/docs/r/articles/developers/bindings.html>`_.\n+\n+This tutorial is different from the :ref:`step_by_step` as we\n+will be working on a specific case. This tutorial is not meant\n+as a step-by-step guide.\n+\n+**Let's start!**\n+\n+Set up\n+------\n+\n+Let's set up the Arrow repository. We presume here that Git is\n+already installed. Otherwise please see the :ref:`set-up` section.\n+\n+Once the `Apache Arrow repository <https://github.com/apache/arrow>`_\n+is forked we will clone it and add the link of the main repository\n+to our upstream.\n+\n+.. code:: console\n+\n+   $ git clone https://github.com/<your username>/arrow.git\n+   $ cd arrow\n+   $ git remote add upstream https://github.com/apache/arrow\n+\n+Building R package\n+------------------\n+\n+Script for building R package differs depending on the Operating\n+System you are using. For this reason we will only refer to\n+the instructions for the building process in this tutorial.\n+\n+.. seealso::\n+\n+   For the **introduction** to the building process refer to the\n+   :ref:`build-arrow-guide` section.\n+\n+   For the **instructions** on how to build R package refer to the\n+   `R developer docs <https://arrow.apache.org/docs/r/articles/developing.html>`_.\n+\n+JIRA issue\n+----------\n+\n+In this tutorial we will be tackling a JIRA issue for implementing\n+a simple binding for ``mday()`` function that will match that of the\n+existing R function from ``lubridate``. The issue can be found on\n+`this link <https://issues.apache.org/jira/browse/ARROW-14816>`_.\n+\n+.. figure:: R_tutorial_jira_issue.jpeg\n+   :scale: 40 %\n+   :alt: JIRA page of the issue for the R binding.\n+\n+   JIRA page of the issue for the lubridate::mday binding.\n+\n+.. note::\n+\n+   If you do not have an issue and you need help finding one please refer\n+   to the :ref:`finding-issues` part of the guide.\n+\n+Once you have an issue picked out and assigned to yourself, you can\n+proceed to the next step.\n+\n+Start the work on a new branch\n+------------------------------\n+\n+Before we start working on adding the binding we should\n+create a new branch from the updated master.\n+\n+.. code:: console\n+\n+   $ git checkout master\n+   $ git fetch upstream\n+   $ git pull --ff-only upstream master\n+   $ git checkout -b ARROW-14816\n+\n+Now we can start with researching the R function and the C++ Arrow\n+compute function we want to expose or connect to.\n+\n+**Examine the lubridate mday() function**\n+\n+Going through the `lubridate documentation <https://lubridate.tidyverse.org/reference/day.html>`_\n+we can see that ``mday()`` takes a date object\n+and returns the day of the month as a numeric object.\n+\n+We can run some examples in the R console to help us understand\n+the function better:\n+\n+.. code-block:: R\n+\n+   > library(lubridate)\n+   > mday(as.Date(\"2000-12-31\"))\n+   [1] 31\n+   > mday(ymd(080306))\n+   [1] 6\n+\n+**Examine the Arrow C++ day() function**\n+\n+From the `compute function documentation <https://arrow.apache.org/docs/cpp/compute.html#containment-tests>`_\n+we can see that ``day`` is a unary function, which means that it takes\n+a single data input. The data input must be a ``Temporal class`` and\n+the returned value is an ``Integer/numeric`` type.\n+\n+The ``Temporal class`` is specified as: Date types (Date32, Date64),\n+Time types (Time32, Time64), Timestamp, Duration, Interval.\n+\n+We can call an Arrow C++ function from an R console using ``call_function``\n+to see how it works:\n+\n+.. code-block:: R\n+\n+   > call_function(\"day\", Scalar$create(lubridate::ymd(\"2000-12-31\")))\n+   Scalar\n+   31\n+\n+We can see that lubridate and Arrow functions operate on and return\n+equivalent data types. Lubridate ``mday()`` function has no additional\n+arguments and there are also no option classes associated with Arrow C++\n+function ``day()``.\n+\n+.. note::\n+\n+   To see what to do if there is an option class associated with the\n+   function you are binding, refer to\n+   `Examining the C++ function <https://arrow.apache.org/docs/r/articles/developers/bindings.html#examining-the-c-function>`_ from the Writing Bindings\n+   article.\n+\n+Looking at the code in ``expressions.R`` we can see the day function\n+is already specified/mapped on the R package side:\n+`<https://github.com/apache/arrow/blob/658bec37aa5cbdd53b5e4cdc81b8ba3962e67f11/r/R/expression.R#L63-L64>`_\n+\n+We only need to add ``mday`` to the list of expressions connecting\n+it to the C++ ``day`` function.\n+\n+.. code-block:: R\n+\n+   # second is defined in dplyr-functions.R\n+   # wday is defined in dplyr-functions.R\n+   \"mday\" = \"day\",\n+   \"yday\" = \"day_of_year\",\n+   \"year\" = \"year\",\n+\n+Adding a test\n+-------------\n+\n+Now we need to add a test that checks if everything works well.\n+If there are additional options or edge cases, we would have to\n+add more. Looking at tests for similar functions (for example\n+``yday()`` or ``day())`` we can see that a good place to add two\n+tests we have is in ``test-dplyr-funcs-datetime.R``:\n+\n+.. code-block:: R\n+\n+   test_that(\"extract mday from timestamp\", {\n+     compare_dplyr_binding(\n+       .input %>%\n+         mutate(x = mday(datetime)) %>%\n+         collect(),\n+       test_df\n+     )\n+   })\n+\n+And \n+\n+.. code-block:: R\n+\n+   test_that(\"extract mday from date\", {\n+     compare_dplyr_binding(\n+       .input %>%\n+         mutate(x = mday(date)) %>%\n+         collect(),\n+       test_df\n+     )\n+   })\n+\n+Now we need to see if the tests are passing or we need to do some\n+more research and code corrections.\n+\n+.. code-block:: R\n+\n+   devtools::test(filter=\"datetime\")\n+\n+   > devtools::test(filter=\"datetime\")\n+   \u2139 Loading arrow\n+   See arrow_info() for available features\n+   \u2139 Testing arrow\n+   See arrow_info() for available features\n+   \u2714 | F W S  OK | Context\n+   \u2716 | 1     230 | dplyr-funcs-datetime [1.4s]                                                                                             \n+   \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n+   Failure (test-dplyr-funcs-datetime.R:187:3): strftime\n+   ``%>%`(...)` did not throw the expected error.\n+   Backtrace:\n+    1. testthat::expect_error(...) test-dplyr-funcs-datetime.R:187:2\n+    2. testthat:::expect_condition_matching(...)\n+   \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n+\n+   \u2550\u2550 Results \u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\n+   Duration: 1.4 s\n+\n+   [ FAIL 1 | WARN 0 | SKIP 0 | PASS 230 ]\n+\n+There is a fail we get for the ``strftime`` function but looking\n\nReview comment:\n       ```suggestion\r\n   There is a failure we get for the ``strftime`` function but looking\r\n   ```\n\n##########\nFile path: docs/source/developers/guide/tutorials/r_tutorial.rst\n##########\n@@ -22,21 +22,429 @@\n \n .. _r-tutorial:\n \n-**********\n-R tutorial\n-**********\n+***********\n+R tutorials\n+***********\n+\n+\n+Writing Bindings Walkthrough\n+============================\n \n The first R package tutorial to be included in the New Contributor's\n guide is a **Walkthrough** added in the **Writing Bindings**\n vignette. With time we will try to include additional tutorials\n directly into this guide.\n \n-Writing Bindings Walkthrough\n-----------------------------\n-\n This tutorial will show how to do a binding of a C++ function\n `starts_with() <https://arrow.apache.org/docs/cpp/compute.html#containment-tests>`_\n to the (base) R function ``startsWith()``.\n \n To view the tutorial follow the\n `Walkthrough section of the Writing Bindings article <https://arrow.apache.org/docs/r/articles/developers/bindings.html#walkthrough>`_.\n+\n+\n+R tutorial on adding a lubridate binding\n+========================================\n+\n+In this tutorial we will document a simple binding contribution\n+to Arrow R package following the steps specified by the\n+:ref:`quick-ref-guide` section of the guide and a more detailed\n+:ref:`step_by_step` section. Navigate there whenever there is\n+some information you may find is missing here.\n+\n+The binding will be added to the ``expression.R`` file in the \n+R package. But you can also follow these steps in case you are\n+adding a binding that will live somewhere else.\n+\n+.. seealso::\n+   \n+   To read more about the philosophy behind R bindings, refer to the\n+   `Writing Bindings article <https://arrow.apache.org/docs/r/articles/developers/bindings.html>`_.\n+\n+This tutorial is different from the :ref:`step_by_step` as we\n+will be working on a specific case. This tutorial is not meant\n+as a step-by-step guide.\n+\n+**Let's start!**\n+\n+Set up\n+------\n+\n+Let's set up the Arrow repository. We presume here that Git is\n+already installed. Otherwise please see the :ref:`set-up` section.\n+\n+Once the `Apache Arrow repository <https://github.com/apache/arrow>`_\n+is forked we will clone it and add the link of the main repository\n+to our upstream.\n+\n+.. code:: console\n+\n+   $ git clone https://github.com/<your username>/arrow.git\n+   $ cd arrow\n+   $ git remote add upstream https://github.com/apache/arrow\n+\n+Building R package\n+------------------\n+\n+Script for building R package differs depending on the Operating\n+System you are using. For this reason we will only refer to\n+the instructions for the building process in this tutorial.\n+\n+.. seealso::\n+\n+   For the **introduction** to the building process refer to the\n+   :ref:`build-arrow-guide` section.\n+\n+   For the **instructions** on how to build R package refer to the\n+   `R developer docs <https://arrow.apache.org/docs/r/articles/developing.html>`_.\n+\n+JIRA issue\n+----------\n+\n+In this tutorial we will be tackling a JIRA issue for implementing\n+a simple binding for ``mday()`` function that will match that of the\n+existing R function from ``lubridate``. The issue can be found on\n+`this link <https://issues.apache.org/jira/browse/ARROW-14816>`_.\n+\n+.. figure:: R_tutorial_jira_issue.jpeg\n+   :scale: 40 %\n+   :alt: JIRA page of the issue for the R binding.\n+\n+   JIRA page of the issue for the lubridate::mday binding.\n+\n+.. note::\n+\n+   If you do not have an issue and you need help finding one please refer\n+   to the :ref:`finding-issues` part of the guide.\n+\n+Once you have an issue picked out and assigned to yourself, you can\n+proceed to the next step.\n+\n+Start the work on a new branch\n+------------------------------\n+\n+Before we start working on adding the binding we should\n+create a new branch from the updated master.\n+\n+.. code:: console\n+\n+   $ git checkout master\n+   $ git fetch upstream\n+   $ git pull --ff-only upstream master\n+   $ git checkout -b ARROW-14816\n+\n+Now we can start with researching the R function and the C++ Arrow\n+compute function we want to expose or connect to.\n+\n+**Examine the lubridate mday() function**\n+\n+Going through the `lubridate documentation <https://lubridate.tidyverse.org/reference/day.html>`_\n+we can see that ``mday()`` takes a date object\n+and returns the day of the month as a numeric object.\n+\n+We can run some examples in the R console to help us understand\n+the function better:\n+\n+.. code-block:: R\n+\n+   > library(lubridate)\n+   > mday(as.Date(\"2000-12-31\"))\n+   [1] 31\n+   > mday(ymd(080306))\n+   [1] 6\n+\n+**Examine the Arrow C++ day() function**\n+\n+From the `compute function documentation <https://arrow.apache.org/docs/cpp/compute.html#containment-tests>`_\n+we can see that ``day`` is a unary function, which means that it takes\n+a single data input. The data input must be a ``Temporal class`` and\n+the returned value is an ``Integer/numeric`` type.\n+\n+The ``Temporal class`` is specified as: Date types (Date32, Date64),\n+Time types (Time32, Time64), Timestamp, Duration, Interval.\n+\n+We can call an Arrow C++ function from an R console using ``call_function``\n+to see how it works:\n+\n+.. code-block:: R\n+\n+   > call_function(\"day\", Scalar$create(lubridate::ymd(\"2000-12-31\")))\n+   Scalar\n+   31\n+\n+We can see that lubridate and Arrow functions operate on and return\n+equivalent data types. Lubridate ``mday()`` function has no additional\n+arguments and there are also no option classes associated with Arrow C++\n+function ``day()``.\n+\n+.. note::\n+\n+   To see what to do if there is an option class associated with the\n+   function you are binding, refer to\n+   `Examining the C++ function <https://arrow.apache.org/docs/r/articles/developers/bindings.html#examining-the-c-function>`_ from the Writing Bindings\n+   article.\n+\n+Looking at the code in ``expressions.R`` we can see the day function\n+is already specified/mapped on the R package side:\n+`<https://github.com/apache/arrow/blob/658bec37aa5cbdd53b5e4cdc81b8ba3962e67f11/r/R/expression.R#L63-L64>`_\n+\n+We only need to add ``mday`` to the list of expressions connecting\n+it to the C++ ``day`` function.\n+\n+.. code-block:: R\n+\n+   # second is defined in dplyr-functions.R\n+   # wday is defined in dplyr-functions.R\n+   \"mday\" = \"day\",\n+   \"yday\" = \"day_of_year\",\n+   \"year\" = \"year\",\n+\n+Adding a test\n+-------------\n+\n+Now we need to add a test that checks if everything works well.\n+If there are additional options or edge cases, we would have to\n+add more. Looking at tests for similar functions (for example\n+``yday()`` or ``day())`` we can see that a good place to add two\n+tests we have is in ``test-dplyr-funcs-datetime.R``:\n+\n+.. code-block:: R\n+\n+   test_that(\"extract mday from timestamp\", {\n+     compare_dplyr_binding(\n+       .input %>%\n+         mutate(x = mday(datetime)) %>%\n+         collect(),\n+       test_df\n+     )\n+   })\n+\n+And \n+\n+.. code-block:: R\n+\n+   test_that(\"extract mday from date\", {\n+     compare_dplyr_binding(\n+       .input %>%\n+         mutate(x = mday(date)) %>%\n+         collect(),\n+       test_df\n+     )\n+   })\n+\n+Now we need to see if the tests are passing or we need to do some\n+more research and code corrections.\n+\n+.. code-block:: R\n+\n+   devtools::test(filter=\"datetime\")\n+\n+   > devtools::test(filter=\"datetime\")\n+   \u2139 Loading arrow\n+   See arrow_info() for available features\n+   \u2139 Testing arrow\n+   See arrow_info() for available features\n+   \u2714 | F W S  OK | Context\n+   \u2716 | 1     230 | dplyr-funcs-datetime [1.4s]                                                                                             \n+   \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n+   Failure (test-dplyr-funcs-datetime.R:187:3): strftime\n+   ``%>%`(...)` did not throw the expected error.\n+   Backtrace:\n+    1. testthat::expect_error(...) test-dplyr-funcs-datetime.R:187:2\n+    2. testthat:::expect_condition_matching(...)\n+   \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n+\n+   \u2550\u2550 Results \u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\n+   Duration: 1.4 s\n+\n+   [ FAIL 1 | WARN 0 | SKIP 0 | PASS 230 ]\n+\n+There is a fail we get for the ``strftime`` function but looking\n+at the code we see is not connected to our work. We can move on and\n+maybe ask others if they are getting similar fail when running the tests.\n+It could be we only need to rebuild the library.\n+\n+Check styling\n+-------------\n+\n+As we did not change any part of the C++ code we will not\n+run any linters. In case we would need to check the styling\n+for the C++ part we would run ``arrow/r/lint.sh`` to lint the code.\n\nReview comment:\n       We still need to run `make style` in the `r` directory to style the R code\n\n##########\nFile path: docs/source/developers/guide/tutorials/r_tutorial.rst\n##########\n@@ -22,21 +22,429 @@\n \n .. _r-tutorial:\n \n-**********\n-R tutorial\n-**********\n+***********\n+R tutorials\n+***********\n+\n+\n+Writing Bindings Walkthrough\n+============================\n \n The first R package tutorial to be included in the New Contributor's\n guide is a **Walkthrough** added in the **Writing Bindings**\n vignette. With time we will try to include additional tutorials\n directly into this guide.\n \n-Writing Bindings Walkthrough\n-----------------------------\n-\n This tutorial will show how to do a binding of a C++ function\n `starts_with() <https://arrow.apache.org/docs/cpp/compute.html#containment-tests>`_\n to the (base) R function ``startsWith()``.\n \n To view the tutorial follow the\n `Walkthrough section of the Writing Bindings article <https://arrow.apache.org/docs/r/articles/developers/bindings.html#walkthrough>`_.\n+\n+\n+R tutorial on adding a lubridate binding\n+========================================\n+\n+In this tutorial we will document a simple binding contribution\n+to Arrow R package following the steps specified by the\n+:ref:`quick-ref-guide` section of the guide and a more detailed\n+:ref:`step_by_step` section. Navigate there whenever there is\n+some information you may find is missing here.\n+\n+The binding will be added to the ``expression.R`` file in the \n+R package. But you can also follow these steps in case you are\n+adding a binding that will live somewhere else.\n+\n+.. seealso::\n+   \n+   To read more about the philosophy behind R bindings, refer to the\n+   `Writing Bindings article <https://arrow.apache.org/docs/r/articles/developers/bindings.html>`_.\n+\n+This tutorial is different from the :ref:`step_by_step` as we\n+will be working on a specific case. This tutorial is not meant\n+as a step-by-step guide.\n+\n+**Let's start!**\n+\n+Set up\n+------\n+\n+Let's set up the Arrow repository. We presume here that Git is\n+already installed. Otherwise please see the :ref:`set-up` section.\n+\n+Once the `Apache Arrow repository <https://github.com/apache/arrow>`_\n+is forked we will clone it and add the link of the main repository\n+to our upstream.\n+\n+.. code:: console\n+\n+   $ git clone https://github.com/<your username>/arrow.git\n+   $ cd arrow\n+   $ git remote add upstream https://github.com/apache/arrow\n+\n+Building R package\n+------------------\n+\n+Script for building R package differs depending on the Operating\n+System you are using. For this reason we will only refer to\n+the instructions for the building process in this tutorial.\n+\n+.. seealso::\n+\n+   For the **introduction** to the building process refer to the\n+   :ref:`build-arrow-guide` section.\n+\n+   For the **instructions** on how to build R package refer to the\n+   `R developer docs <https://arrow.apache.org/docs/r/articles/developing.html>`_.\n+\n+JIRA issue\n+----------\n+\n+In this tutorial we will be tackling a JIRA issue for implementing\n+a simple binding for ``mday()`` function that will match that of the\n+existing R function from ``lubridate``. The issue can be found on\n+`this link <https://issues.apache.org/jira/browse/ARROW-14816>`_.\n+\n+.. figure:: R_tutorial_jira_issue.jpeg\n+   :scale: 40 %\n+   :alt: JIRA page of the issue for the R binding.\n+\n+   JIRA page of the issue for the lubridate::mday binding.\n+\n+.. note::\n+\n+   If you do not have an issue and you need help finding one please refer\n+   to the :ref:`finding-issues` part of the guide.\n+\n+Once you have an issue picked out and assigned to yourself, you can\n+proceed to the next step.\n+\n+Start the work on a new branch\n+------------------------------\n+\n+Before we start working on adding the binding we should\n+create a new branch from the updated master.\n+\n+.. code:: console\n+\n+   $ git checkout master\n+   $ git fetch upstream\n+   $ git pull --ff-only upstream master\n+   $ git checkout -b ARROW-14816\n+\n+Now we can start with researching the R function and the C++ Arrow\n+compute function we want to expose or connect to.\n+\n+**Examine the lubridate mday() function**\n+\n+Going through the `lubridate documentation <https://lubridate.tidyverse.org/reference/day.html>`_\n+we can see that ``mday()`` takes a date object\n+and returns the day of the month as a numeric object.\n+\n+We can run some examples in the R console to help us understand\n+the function better:\n+\n+.. code-block:: R\n+\n+   > library(lubridate)\n+   > mday(as.Date(\"2000-12-31\"))\n+   [1] 31\n+   > mday(ymd(080306))\n+   [1] 6\n+\n+**Examine the Arrow C++ day() function**\n+\n+From the `compute function documentation <https://arrow.apache.org/docs/cpp/compute.html#containment-tests>`_\n+we can see that ``day`` is a unary function, which means that it takes\n+a single data input. The data input must be a ``Temporal class`` and\n+the returned value is an ``Integer/numeric`` type.\n+\n+The ``Temporal class`` is specified as: Date types (Date32, Date64),\n+Time types (Time32, Time64), Timestamp, Duration, Interval.\n+\n+We can call an Arrow C++ function from an R console using ``call_function``\n+to see how it works:\n+\n+.. code-block:: R\n+\n+   > call_function(\"day\", Scalar$create(lubridate::ymd(\"2000-12-31\")))\n+   Scalar\n+   31\n+\n+We can see that lubridate and Arrow functions operate on and return\n+equivalent data types. Lubridate ``mday()`` function has no additional\n+arguments and there are also no option classes associated with Arrow C++\n+function ``day()``.\n+\n+.. note::\n+\n+   To see what to do if there is an option class associated with the\n+   function you are binding, refer to\n+   `Examining the C++ function <https://arrow.apache.org/docs/r/articles/developers/bindings.html#examining-the-c-function>`_ from the Writing Bindings\n+   article.\n+\n+Looking at the code in ``expressions.R`` we can see the day function\n+is already specified/mapped on the R package side:\n+`<https://github.com/apache/arrow/blob/658bec37aa5cbdd53b5e4cdc81b8ba3962e67f11/r/R/expression.R#L63-L64>`_\n+\n+We only need to add ``mday`` to the list of expressions connecting\n+it to the C++ ``day`` function.\n+\n+.. code-block:: R\n+\n+   # second is defined in dplyr-functions.R\n+   # wday is defined in dplyr-functions.R\n+   \"mday\" = \"day\",\n+   \"yday\" = \"day_of_year\",\n+   \"year\" = \"year\",\n+\n+Adding a test\n+-------------\n+\n+Now we need to add a test that checks if everything works well.\n+If there are additional options or edge cases, we would have to\n+add more. Looking at tests for similar functions (for example\n+``yday()`` or ``day())`` we can see that a good place to add two\n+tests we have is in ``test-dplyr-funcs-datetime.R``:\n+\n+.. code-block:: R\n+\n+   test_that(\"extract mday from timestamp\", {\n+     compare_dplyr_binding(\n+       .input %>%\n+         mutate(x = mday(datetime)) %>%\n+         collect(),\n+       test_df\n+     )\n+   })\n+\n+And \n+\n+.. code-block:: R\n+\n+   test_that(\"extract mday from date\", {\n+     compare_dplyr_binding(\n+       .input %>%\n+         mutate(x = mday(date)) %>%\n+         collect(),\n+       test_df\n+     )\n+   })\n+\n+Now we need to see if the tests are passing or we need to do some\n+more research and code corrections.\n+\n+.. code-block:: R\n+\n+   devtools::test(filter=\"datetime\")\n+\n+   > devtools::test(filter=\"datetime\")\n+   \u2139 Loading arrow\n+   See arrow_info() for available features\n+   \u2139 Testing arrow\n+   See arrow_info() for available features\n+   \u2714 | F W S  OK | Context\n+   \u2716 | 1     230 | dplyr-funcs-datetime [1.4s]                                                                                             \n+   \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n+   Failure (test-dplyr-funcs-datetime.R:187:3): strftime\n+   ``%>%`(...)` did not throw the expected error.\n+   Backtrace:\n+    1. testthat::expect_error(...) test-dplyr-funcs-datetime.R:187:2\n+    2. testthat:::expect_condition_matching(...)\n+   \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n+\n+   \u2550\u2550 Results \u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\n+   Duration: 1.4 s\n+\n+   [ FAIL 1 | WARN 0 | SKIP 0 | PASS 230 ]\n+\n+There is a fail we get for the ``strftime`` function but looking\n+at the code we see is not connected to our work. We can move on and\n+maybe ask others if they are getting similar fail when running the tests.\n+It could be we only need to rebuild the library.\n+\n+Check styling\n+-------------\n+\n+As we did not change any part of the C++ code we will not\n+run any linters. In case we would need to check the styling\n+for the C++ part we would run ``arrow/r/lint.sh`` to lint the code.\n+\n+Creating a Pull Request\n+-----------------------\n+\n+First let\u2019s review our changes in the shell using ``git status`` to see\n+which files have been changed and to commit only the ones we are working on.\n+\n+.. code:: console\n+\n+   $ git status\n+   On branch ARROW-14816\n+   Changes not staged for commit:\n+     (use \"git add <file>...\" to update what will be committed)\n+     (use \"git restore <file>...\" to discard changes in working directory)\n+      modified:   R/expression.R\n+      modified:   tests/testthat/test-dplyr-funcs-datetime.R\n+\n+And ``git diff`` to see the changes in the files in order to spot any error we might have made.\n+\n+.. code:: console\n+\n+   $ git diff\n+   diff --git a/r/R/expression.R b/r/R/expression.R\n+   index 37fc21c25..0e71803ec 100644\n+   --- a/r/R/expression.R\n+   +++ b/r/R/expression.R\n+   @@ -70,6 +70,7 @@\n+      \"quarter\" = \"quarter\",\n+      # second is defined in dplyr-functions.R\n+      # wday is defined in dplyr-functions.R\n+   +  \"mday\" = \"day\",\n+      \"yday\" = \"day_of_year\",\n+      \"year\" = \"year\",\n+\n+   diff --git a/r/tests/testthat/test-dplyr-funcs-datetime.R b/r/tests/testthat/test-dplyr-funcs-datetime.R\n+   index 359a5403a..228eca56a 100644\n+   --- a/r/tests/testthat/test-dplyr-funcs-datetime.R\n+   +++ b/r/tests/testthat/test-dplyr-funcs-datetime.R\n+   @@ -444,6 +444,15 @@ test_that(\"extract wday from timestamp\", {\n+      )\n+    })\n+    \n+   +test_that(\"extract mday from timestamp\", {\n+   +  compare_dplyr_binding(\n+   +    .input %>%\n+   +      mutate(x = mday(datetime)) %>%\n+   +      collect(),\n+   +    test_df\n+   +  )\n+   +})\n+   +\n+    test_that(\"extract yday from timestamp\", {\n+      compare_dplyr_binding(\n+        .input %>%\n+   @@ -626,6 +635,15 @@ test_that(\"extract wday from date\", {\n+      )\n+    })\n+\n+   +test_that(\"extract mday from date\", {\n+   +  compare_dplyr_binding(\n+   +    .input %>%\n+   +      mutate(x = mday(date)) %>%\n+   +      collect(),\n+   +    test_df\n+   +  )\n+   +})\n+   +\n+    test_that(\"extract yday from date\", {\n+      compare_dplyr_binding(\n+        .input %>%\n+\n+Everything looks OK. Now we can make the commit\n+(save our changes to the branch history):\n+\n+.. code:: console\n+\n+   $ git commit -am \"Adding a binding and a test for mday() lubridate\"\n+   [ARROW-14816 ed37d3a3b] Adding a binding and a test for mday() lubridate\n+    2 files changed, 19 insertions(+)\n+\n+We can use ``git log`` to check the history of commits:\n+\n+.. code:: console\n+\n+   $ git log\n+   commit ed37d3a3b3eef76b696532f10562fea85f809fab (HEAD -> ARROW-14816)\n+   Author: Alenka Frim <frim.alenka@gmail.com>\n+   Date:   Fri Jan 21 09:15:31 2022 +0100\n+\n+       Adding a binding and a test for mday() lubridate\n+\n+   commit c5358787ee8f7b80f067292f49e5f032854041b9 (upstream/master, upstream/HEAD, master, ARROW-15346, ARROW-10643)\n+   Author: Kriszti\u00e1n Sz\u0171cs <szucs.krisztian@gmail.com>\n+   Date:   Thu Jan 20 09:45:59 2022 +0900\n+\n+       ARROW-15372: [C++][Gandiva] Gandiva now depends on boost/crc.hpp which is missing from the trimmed boost archive\n+       \n+       See build error https://github.com/ursacomputing/crossbow/runs/4871392838?check_suite_focus=true#step:5:11762\n+       \n+       Closes #12190 from kszucs/ARROW-15372\n+       \n+       Authored-by: Kriszti\u00e1n Sz\u0171cs <szucs.krisztian@gmail.com>\n+       Signed-off-by: Sutou Kouhei <kou@clear-code.com>\n+\n+If we started the branch some time ago, we may need to rebase\n+to upstream master to make sure there are no merge conflicts:\n+\n+.. code:: console\n+\n+   $ git pull upstream master --rebase\n\nReview comment:\n       Should this be `git rebase` not `git pull`?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-09T15:29:19.794+0000",
                    "updated": "2022-02-09T15:29:19.794+0000",
                    "started": "2022-02-09T15:29:19.794+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "723729",
                    "issueId": "13423063"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423063/worklog/724323",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on a change in pull request #12313:\nURL: https://github.com/apache/arrow/pull/12313#discussion_r803376088\n\n\n\n##########\nFile path: docs/source/developers/guide/tutorials/r_tutorial.rst\n##########\n@@ -22,21 +22,429 @@\n \n .. _r-tutorial:\n \n-**********\n-R tutorial\n-**********\n+***********\n+R tutorials\n+***********\n+\n+\n+Writing Bindings Walkthrough\n+============================\n \n The first R package tutorial to be included in the New Contributor's\n guide is a **Walkthrough** added in the **Writing Bindings**\n vignette. With time we will try to include additional tutorials\n directly into this guide.\n \n-Writing Bindings Walkthrough\n-----------------------------\n-\n This tutorial will show how to do a binding of a C++ function\n `starts_with() <https://arrow.apache.org/docs/cpp/compute.html#containment-tests>`_\n to the (base) R function ``startsWith()``.\n \n To view the tutorial follow the\n `Walkthrough section of the Writing Bindings article <https://arrow.apache.org/docs/r/articles/developers/bindings.html#walkthrough>`_.\n+\n+\n+R tutorial on adding a lubridate binding\n+========================================\n+\n+In this tutorial we will document a simple binding contribution\n+to Arrow R package following the steps specified by the\n+:ref:`quick-ref-guide` section of the guide and a more detailed\n+:ref:`step_by_step` section. Navigate there whenever there is\n+some information you may find is missing here.\n+\n+The binding will be added to the ``expression.R`` file in the \n+R package. But you can also follow these steps in case you are\n+adding a binding that will live somewhere else.\n+\n+.. seealso::\n+   \n+   To read more about the philosophy behind R bindings, refer to the\n+   `Writing Bindings article <https://arrow.apache.org/docs/r/articles/developers/bindings.html>`_.\n+\n+This tutorial is different from the :ref:`step_by_step` as we\n+will be working on a specific case. This tutorial is not meant\n+as a step-by-step guide.\n+\n+**Let's start!**\n+\n+Set up\n+------\n+\n+Let's set up the Arrow repository. We presume here that Git is\n+already installed. Otherwise please see the :ref:`set-up` section.\n+\n+Once the `Apache Arrow repository <https://github.com/apache/arrow>`_\n+is forked we will clone it and add the link of the main repository\n\nReview comment:\n       We have the instructions in the guide, I will add a link to it \ud83d\udc4d \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-10T07:35:59.048+0000",
                    "updated": "2022-02-10T07:35:59.048+0000",
                    "started": "2022-02-10T07:35:59.047+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "724323",
                    "issueId": "13423063"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423063/worklog/724329",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on a change in pull request #12313:\nURL: https://github.com/apache/arrow/pull/12313#discussion_r803383794\n\n\n\n##########\nFile path: docs/source/developers/guide/tutorials/r_tutorial.rst\n##########\n@@ -22,21 +22,429 @@\n \n .. _r-tutorial:\n \n-**********\n-R tutorial\n-**********\n+***********\n+R tutorials\n+***********\n+\n+\n+Writing Bindings Walkthrough\n+============================\n \n The first R package tutorial to be included in the New Contributor's\n guide is a **Walkthrough** added in the **Writing Bindings**\n vignette. With time we will try to include additional tutorials\n directly into this guide.\n \n-Writing Bindings Walkthrough\n-----------------------------\n-\n This tutorial will show how to do a binding of a C++ function\n `starts_with() <https://arrow.apache.org/docs/cpp/compute.html#containment-tests>`_\n to the (base) R function ``startsWith()``.\n \n To view the tutorial follow the\n `Walkthrough section of the Writing Bindings article <https://arrow.apache.org/docs/r/articles/developers/bindings.html#walkthrough>`_.\n+\n+\n+R tutorial on adding a lubridate binding\n+========================================\n+\n+In this tutorial we will document a simple binding contribution\n+to Arrow R package following the steps specified by the\n+:ref:`quick-ref-guide` section of the guide and a more detailed\n+:ref:`step_by_step` section. Navigate there whenever there is\n+some information you may find is missing here.\n+\n+The binding will be added to the ``expression.R`` file in the \n+R package. But you can also follow these steps in case you are\n+adding a binding that will live somewhere else.\n+\n+.. seealso::\n+   \n+   To read more about the philosophy behind R bindings, refer to the\n+   `Writing Bindings article <https://arrow.apache.org/docs/r/articles/developers/bindings.html>`_.\n+\n+This tutorial is different from the :ref:`step_by_step` as we\n+will be working on a specific case. This tutorial is not meant\n+as a step-by-step guide.\n+\n+**Let's start!**\n+\n+Set up\n+------\n+\n+Let's set up the Arrow repository. We presume here that Git is\n+already installed. Otherwise please see the :ref:`set-up` section.\n+\n+Once the `Apache Arrow repository <https://github.com/apache/arrow>`_\n+is forked we will clone it and add the link of the main repository\n+to our upstream.\n+\n+.. code:: console\n+\n+   $ git clone https://github.com/<your username>/arrow.git\n+   $ cd arrow\n+   $ git remote add upstream https://github.com/apache/arrow\n+\n+Building R package\n+------------------\n+\n+Script for building R package differs depending on the Operating\n+System you are using. For this reason we will only refer to\n+the instructions for the building process in this tutorial.\n+\n+.. seealso::\n+\n+   For the **introduction** to the building process refer to the\n+   :ref:`build-arrow-guide` section.\n+\n+   For the **instructions** on how to build R package refer to the\n+   `R developer docs <https://arrow.apache.org/docs/r/articles/developing.html>`_.\n+\n+JIRA issue\n+----------\n+\n+In this tutorial we will be tackling a JIRA issue for implementing\n+a simple binding for ``mday()`` function that will match that of the\n+existing R function from ``lubridate``. The issue can be found on\n+`this link <https://issues.apache.org/jira/browse/ARROW-14816>`_.\n+\n+.. figure:: R_tutorial_jira_issue.jpeg\n+   :scale: 40 %\n+   :alt: JIRA page of the issue for the R binding.\n+\n+   JIRA page of the issue for the lubridate::mday binding.\n+\n+.. note::\n+\n+   If you do not have an issue and you need help finding one please refer\n+   to the :ref:`finding-issues` part of the guide.\n+\n+Once you have an issue picked out and assigned to yourself, you can\n+proceed to the next step.\n+\n+Start the work on a new branch\n+------------------------------\n+\n+Before we start working on adding the binding we should\n+create a new branch from the updated master.\n+\n+.. code:: console\n+\n+   $ git checkout master\n+   $ git fetch upstream\n+   $ git pull --ff-only upstream master\n+   $ git checkout -b ARROW-14816\n+\n+Now we can start with researching the R function and the C++ Arrow\n+compute function we want to expose or connect to.\n+\n+**Examine the lubridate mday() function**\n+\n+Going through the `lubridate documentation <https://lubridate.tidyverse.org/reference/day.html>`_\n+we can see that ``mday()`` takes a date object\n+and returns the day of the month as a numeric object.\n+\n+We can run some examples in the R console to help us understand\n+the function better:\n+\n+.. code-block:: R\n+\n+   > library(lubridate)\n+   > mday(as.Date(\"2000-12-31\"))\n+   [1] 31\n+   > mday(ymd(080306))\n+   [1] 6\n+\n+**Examine the Arrow C++ day() function**\n+\n+From the `compute function documentation <https://arrow.apache.org/docs/cpp/compute.html#containment-tests>`_\n+we can see that ``day`` is a unary function, which means that it takes\n+a single data input. The data input must be a ``Temporal class`` and\n+the returned value is an ``Integer/numeric`` type.\n+\n+The ``Temporal class`` is specified as: Date types (Date32, Date64),\n+Time types (Time32, Time64), Timestamp, Duration, Interval.\n+\n+We can call an Arrow C++ function from an R console using ``call_function``\n+to see how it works:\n+\n+.. code-block:: R\n+\n+   > call_function(\"day\", Scalar$create(lubridate::ymd(\"2000-12-31\")))\n+   Scalar\n+   31\n+\n+We can see that lubridate and Arrow functions operate on and return\n+equivalent data types. Lubridate ``mday()`` function has no additional\n+arguments and there are also no option classes associated with Arrow C++\n+function ``day()``.\n+\n+.. note::\n+\n+   To see what to do if there is an option class associated with the\n+   function you are binding, refer to\n+   `Examining the C++ function <https://arrow.apache.org/docs/r/articles/developers/bindings.html#examining-the-c-function>`_ from the Writing Bindings\n+   article.\n+\n+Looking at the code in ``expressions.R`` we can see the day function\n+is already specified/mapped on the R package side:\n+`<https://github.com/apache/arrow/blob/658bec37aa5cbdd53b5e4cdc81b8ba3962e67f11/r/R/expression.R#L63-L64>`_\n+\n+We only need to add ``mday`` to the list of expressions connecting\n+it to the C++ ``day`` function.\n+\n+.. code-block:: R\n+\n+   # second is defined in dplyr-functions.R\n+   # wday is defined in dplyr-functions.R\n+   \"mday\" = \"day\",\n+   \"yday\" = \"day_of_year\",\n+   \"year\" = \"year\",\n+\n+Adding a test\n+-------------\n+\n+Now we need to add a test that checks if everything works well.\n+If there are additional options or edge cases, we would have to\n+add more. Looking at tests for similar functions (for example\n+``yday()`` or ``day())`` we can see that a good place to add two\n+tests we have is in ``test-dplyr-funcs-datetime.R``:\n+\n+.. code-block:: R\n+\n+   test_that(\"extract mday from timestamp\", {\n+     compare_dplyr_binding(\n+       .input %>%\n+         mutate(x = mday(datetime)) %>%\n+         collect(),\n+       test_df\n+     )\n+   })\n+\n+And \n+\n+.. code-block:: R\n+\n+   test_that(\"extract mday from date\", {\n+     compare_dplyr_binding(\n+       .input %>%\n+         mutate(x = mday(date)) %>%\n+         collect(),\n+       test_df\n+     )\n+   })\n+\n+Now we need to see if the tests are passing or we need to do some\n+more research and code corrections.\n+\n+.. code-block:: R\n+\n+   devtools::test(filter=\"datetime\")\n+\n+   > devtools::test(filter=\"datetime\")\n+   \u2139 Loading arrow\n+   See arrow_info() for available features\n+   \u2139 Testing arrow\n+   See arrow_info() for available features\n+   \u2714 | F W S  OK | Context\n+   \u2716 | 1     230 | dplyr-funcs-datetime [1.4s]                                                                                             \n+   \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n+   Failure (test-dplyr-funcs-datetime.R:187:3): strftime\n+   ``%>%`(...)` did not throw the expected error.\n+   Backtrace:\n+    1. testthat::expect_error(...) test-dplyr-funcs-datetime.R:187:2\n+    2. testthat:::expect_condition_matching(...)\n+   \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n+\n+   \u2550\u2550 Results \u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\n+   Duration: 1.4 s\n+\n+   [ FAIL 1 | WARN 0 | SKIP 0 | PASS 230 ]\n+\n+There is a fail we get for the ``strftime`` function but looking\n+at the code we see is not connected to our work. We can move on and\n+maybe ask others if they are getting similar fail when running the tests.\n+It could be we only need to rebuild the library.\n+\n+Check styling\n+-------------\n+\n+As we did not change any part of the C++ code we will not\n+run any linters. In case we would need to check the styling\n+for the C++ part we would run ``arrow/r/lint.sh`` to lint the code.\n+\n+Creating a Pull Request\n+-----------------------\n+\n+First let\u2019s review our changes in the shell using ``git status`` to see\n+which files have been changed and to commit only the ones we are working on.\n+\n+.. code:: console\n+\n+   $ git status\n+   On branch ARROW-14816\n+   Changes not staged for commit:\n+     (use \"git add <file>...\" to update what will be committed)\n+     (use \"git restore <file>...\" to discard changes in working directory)\n+      modified:   R/expression.R\n+      modified:   tests/testthat/test-dplyr-funcs-datetime.R\n+\n+And ``git diff`` to see the changes in the files in order to spot any error we might have made.\n+\n+.. code:: console\n+\n+   $ git diff\n+   diff --git a/r/R/expression.R b/r/R/expression.R\n+   index 37fc21c25..0e71803ec 100644\n+   --- a/r/R/expression.R\n+   +++ b/r/R/expression.R\n+   @@ -70,6 +70,7 @@\n+      \"quarter\" = \"quarter\",\n+      # second is defined in dplyr-functions.R\n+      # wday is defined in dplyr-functions.R\n+   +  \"mday\" = \"day\",\n+      \"yday\" = \"day_of_year\",\n+      \"year\" = \"year\",\n+\n+   diff --git a/r/tests/testthat/test-dplyr-funcs-datetime.R b/r/tests/testthat/test-dplyr-funcs-datetime.R\n+   index 359a5403a..228eca56a 100644\n+   --- a/r/tests/testthat/test-dplyr-funcs-datetime.R\n+   +++ b/r/tests/testthat/test-dplyr-funcs-datetime.R\n+   @@ -444,6 +444,15 @@ test_that(\"extract wday from timestamp\", {\n+      )\n+    })\n+    \n+   +test_that(\"extract mday from timestamp\", {\n+   +  compare_dplyr_binding(\n+   +    .input %>%\n+   +      mutate(x = mday(datetime)) %>%\n+   +      collect(),\n+   +    test_df\n+   +  )\n+   +})\n+   +\n+    test_that(\"extract yday from timestamp\", {\n+      compare_dplyr_binding(\n+        .input %>%\n+   @@ -626,6 +635,15 @@ test_that(\"extract wday from date\", {\n+      )\n+    })\n+\n+   +test_that(\"extract mday from date\", {\n+   +  compare_dplyr_binding(\n+   +    .input %>%\n+   +      mutate(x = mday(date)) %>%\n+   +      collect(),\n+   +    test_df\n+   +  )\n+   +})\n+   +\n+    test_that(\"extract yday from date\", {\n+      compare_dplyr_binding(\n+        .input %>%\n+\n+Everything looks OK. Now we can make the commit\n+(save our changes to the branch history):\n+\n+.. code:: console\n+\n+   $ git commit -am \"Adding a binding and a test for mday() lubridate\"\n+   [ARROW-14816 ed37d3a3b] Adding a binding and a test for mday() lubridate\n+    2 files changed, 19 insertions(+)\n+\n+We can use ``git log`` to check the history of commits:\n+\n+.. code:: console\n+\n+   $ git log\n+   commit ed37d3a3b3eef76b696532f10562fea85f809fab (HEAD -> ARROW-14816)\n+   Author: Alenka Frim <frim.alenka@gmail.com>\n+   Date:   Fri Jan 21 09:15:31 2022 +0100\n+\n+       Adding a binding and a test for mday() lubridate\n+\n+   commit c5358787ee8f7b80f067292f49e5f032854041b9 (upstream/master, upstream/HEAD, master, ARROW-15346, ARROW-10643)\n+   Author: Kriszti\u00e1n Sz\u0171cs <szucs.krisztian@gmail.com>\n+   Date:   Thu Jan 20 09:45:59 2022 +0900\n+\n+       ARROW-15372: [C++][Gandiva] Gandiva now depends on boost/crc.hpp which is missing from the trimmed boost archive\n+       \n+       See build error https://github.com/ursacomputing/crossbow/runs/4871392838?check_suite_focus=true#step:5:11762\n+       \n+       Closes #12190 from kszucs/ARROW-15372\n+       \n+       Authored-by: Kriszti\u00e1n Sz\u0171cs <szucs.krisztian@gmail.com>\n+       Signed-off-by: Sutou Kouhei <kou@clear-code.com>\n+\n+If we started the branch some time ago, we may need to rebase\n+to upstream master to make sure there are no merge conflicts:\n+\n+.. code:: console\n+\n+   $ git pull upstream master --rebase\n\nReview comment:\n       If I understand correctly `git pull --rebase` is equal to `git fetch`& `git rebase`, just shorter (and there is something about saving you trouble when rebasing on a force-pushed rebase https://git-scm.com/book/en/v2/Git-Branching-Rebasing#_rebase_rebase_work)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-10T07:48:24.334+0000",
                    "updated": "2022-02-10T07:48:24.334+0000",
                    "started": "2022-02-10T07:48:24.334+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "724329",
                    "issueId": "13423063"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423063/worklog/724331",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on a change in pull request #12313:\nURL: https://github.com/apache/arrow/pull/12313#discussion_r803384073\n\n\n\n##########\nFile path: docs/source/developers/guide/tutorials/r_tutorial.rst\n##########\n@@ -22,21 +22,429 @@\n \n .. _r-tutorial:\n \n-**********\n-R tutorial\n-**********\n+***********\n+R tutorials\n+***********\n+\n+\n+Writing Bindings Walkthrough\n+============================\n \n The first R package tutorial to be included in the New Contributor's\n guide is a **Walkthrough** added in the **Writing Bindings**\n vignette. With time we will try to include additional tutorials\n directly into this guide.\n \n-Writing Bindings Walkthrough\n-----------------------------\n-\n This tutorial will show how to do a binding of a C++ function\n `starts_with() <https://arrow.apache.org/docs/cpp/compute.html#containment-tests>`_\n to the (base) R function ``startsWith()``.\n \n To view the tutorial follow the\n `Walkthrough section of the Writing Bindings article <https://arrow.apache.org/docs/r/articles/developers/bindings.html#walkthrough>`_.\n+\n+\n+R tutorial on adding a lubridate binding\n+========================================\n+\n+In this tutorial we will document a simple binding contribution\n+to Arrow R package following the steps specified by the\n+:ref:`quick-ref-guide` section of the guide and a more detailed\n+:ref:`step_by_step` section. Navigate there whenever there is\n+some information you may find is missing here.\n+\n+The binding will be added to the ``expression.R`` file in the \n+R package. But you can also follow these steps in case you are\n+adding a binding that will live somewhere else.\n+\n+.. seealso::\n+   \n+   To read more about the philosophy behind R bindings, refer to the\n+   `Writing Bindings article <https://arrow.apache.org/docs/r/articles/developers/bindings.html>`_.\n+\n+This tutorial is different from the :ref:`step_by_step` as we\n+will be working on a specific case. This tutorial is not meant\n+as a step-by-step guide.\n+\n+**Let's start!**\n+\n+Set up\n+------\n+\n+Let's set up the Arrow repository. We presume here that Git is\n+already installed. Otherwise please see the :ref:`set-up` section.\n+\n+Once the `Apache Arrow repository <https://github.com/apache/arrow>`_\n+is forked we will clone it and add the link of the main repository\n+to our upstream.\n+\n+.. code:: console\n+\n+   $ git clone https://github.com/<your username>/arrow.git\n+   $ cd arrow\n+   $ git remote add upstream https://github.com/apache/arrow\n+\n+Building R package\n+------------------\n+\n+Script for building R package differs depending on the Operating\n+System you are using. For this reason we will only refer to\n+the instructions for the building process in this tutorial.\n+\n+.. seealso::\n+\n+   For the **introduction** to the building process refer to the\n+   :ref:`build-arrow-guide` section.\n+\n+   For the **instructions** on how to build R package refer to the\n+   `R developer docs <https://arrow.apache.org/docs/r/articles/developing.html>`_.\n+\n+JIRA issue\n+----------\n+\n+In this tutorial we will be tackling a JIRA issue for implementing\n+a simple binding for ``mday()`` function that will match that of the\n+existing R function from ``lubridate``. The issue can be found on\n+`this link <https://issues.apache.org/jira/browse/ARROW-14816>`_.\n+\n+.. figure:: R_tutorial_jira_issue.jpeg\n+   :scale: 40 %\n+   :alt: JIRA page of the issue for the R binding.\n+\n+   JIRA page of the issue for the lubridate::mday binding.\n+\n+.. note::\n+\n+   If you do not have an issue and you need help finding one please refer\n+   to the :ref:`finding-issues` part of the guide.\n+\n+Once you have an issue picked out and assigned to yourself, you can\n+proceed to the next step.\n+\n+Start the work on a new branch\n+------------------------------\n+\n+Before we start working on adding the binding we should\n+create a new branch from the updated master.\n+\n+.. code:: console\n+\n+   $ git checkout master\n+   $ git fetch upstream\n+   $ git pull --ff-only upstream master\n+   $ git checkout -b ARROW-14816\n+\n+Now we can start with researching the R function and the C++ Arrow\n+compute function we want to expose or connect to.\n+\n+**Examine the lubridate mday() function**\n+\n+Going through the `lubridate documentation <https://lubridate.tidyverse.org/reference/day.html>`_\n+we can see that ``mday()`` takes a date object\n+and returns the day of the month as a numeric object.\n+\n+We can run some examples in the R console to help us understand\n+the function better:\n+\n+.. code-block:: R\n+\n+   > library(lubridate)\n+   > mday(as.Date(\"2000-12-31\"))\n+   [1] 31\n+   > mday(ymd(080306))\n+   [1] 6\n+\n+**Examine the Arrow C++ day() function**\n+\n+From the `compute function documentation <https://arrow.apache.org/docs/cpp/compute.html#containment-tests>`_\n+we can see that ``day`` is a unary function, which means that it takes\n+a single data input. The data input must be a ``Temporal class`` and\n+the returned value is an ``Integer/numeric`` type.\n+\n+The ``Temporal class`` is specified as: Date types (Date32, Date64),\n+Time types (Time32, Time64), Timestamp, Duration, Interval.\n+\n+We can call an Arrow C++ function from an R console using ``call_function``\n+to see how it works:\n+\n+.. code-block:: R\n+\n+   > call_function(\"day\", Scalar$create(lubridate::ymd(\"2000-12-31\")))\n+   Scalar\n+   31\n+\n+We can see that lubridate and Arrow functions operate on and return\n+equivalent data types. Lubridate ``mday()`` function has no additional\n+arguments and there are also no option classes associated with Arrow C++\n+function ``day()``.\n+\n+.. note::\n+\n+   To see what to do if there is an option class associated with the\n+   function you are binding, refer to\n+   `Examining the C++ function <https://arrow.apache.org/docs/r/articles/developers/bindings.html#examining-the-c-function>`_ from the Writing Bindings\n+   article.\n+\n+Looking at the code in ``expressions.R`` we can see the day function\n+is already specified/mapped on the R package side:\n+`<https://github.com/apache/arrow/blob/658bec37aa5cbdd53b5e4cdc81b8ba3962e67f11/r/R/expression.R#L63-L64>`_\n+\n+We only need to add ``mday`` to the list of expressions connecting\n+it to the C++ ``day`` function.\n+\n+.. code-block:: R\n+\n+   # second is defined in dplyr-functions.R\n+   # wday is defined in dplyr-functions.R\n+   \"mday\" = \"day\",\n+   \"yday\" = \"day_of_year\",\n+   \"year\" = \"year\",\n+\n+Adding a test\n+-------------\n+\n+Now we need to add a test that checks if everything works well.\n+If there are additional options or edge cases, we would have to\n+add more. Looking at tests for similar functions (for example\n+``yday()`` or ``day())`` we can see that a good place to add two\n+tests we have is in ``test-dplyr-funcs-datetime.R``:\n+\n+.. code-block:: R\n+\n+   test_that(\"extract mday from timestamp\", {\n+     compare_dplyr_binding(\n+       .input %>%\n+         mutate(x = mday(datetime)) %>%\n+         collect(),\n+       test_df\n+     )\n+   })\n+\n+And \n+\n+.. code-block:: R\n+\n+   test_that(\"extract mday from date\", {\n+     compare_dplyr_binding(\n+       .input %>%\n+         mutate(x = mday(date)) %>%\n+         collect(),\n+       test_df\n+     )\n+   })\n+\n+Now we need to see if the tests are passing or we need to do some\n+more research and code corrections.\n+\n+.. code-block:: R\n+\n+   devtools::test(filter=\"datetime\")\n+\n+   > devtools::test(filter=\"datetime\")\n+   \u2139 Loading arrow\n+   See arrow_info() for available features\n+   \u2139 Testing arrow\n+   See arrow_info() for available features\n+   \u2714 | F W S  OK | Context\n+   \u2716 | 1     230 | dplyr-funcs-datetime [1.4s]                                                                                             \n+   \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n+   Failure (test-dplyr-funcs-datetime.R:187:3): strftime\n+   ``%>%`(...)` did not throw the expected error.\n+   Backtrace:\n+    1. testthat::expect_error(...) test-dplyr-funcs-datetime.R:187:2\n+    2. testthat:::expect_condition_matching(...)\n+   \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n+\n+   \u2550\u2550 Results \u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\n+   Duration: 1.4 s\n+\n+   [ FAIL 1 | WARN 0 | SKIP 0 | PASS 230 ]\n+\n+There is a fail we get for the ``strftime`` function but looking\n+at the code we see is not connected to our work. We can move on and\n+maybe ask others if they are getting similar fail when running the tests.\n+It could be we only need to rebuild the library.\n+\n+Check styling\n+-------------\n+\n+As we did not change any part of the C++ code we will not\n+run any linters. In case we would need to check the styling\n+for the C++ part we would run ``arrow/r/lint.sh`` to lint the code.\n\nReview comment:\n       Will add this, thanks for pointing it out!\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-10T07:48:41.139+0000",
                    "updated": "2022-02-10T07:48:41.139+0000",
                    "started": "2022-02-10T07:48:41.139+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "724331",
                    "issueId": "13423063"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423063/worklog/724441",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on a change in pull request #12313:\nURL: https://github.com/apache/arrow/pull/12313#discussion_r803579093\n\n\n\n##########\nFile path: docs/source/developers/guide/tutorials/r_tutorial.rst\n##########\n@@ -22,21 +22,429 @@\n \n .. _r-tutorial:\n \n-**********\n-R tutorial\n-**********\n+***********\n+R tutorials\n+***********\n+\n+\n+Writing Bindings Walkthrough\n+============================\n \n The first R package tutorial to be included in the New Contributor's\n guide is a **Walkthrough** added in the **Writing Bindings**\n vignette. With time we will try to include additional tutorials\n directly into this guide.\n \n-Writing Bindings Walkthrough\n-----------------------------\n-\n This tutorial will show how to do a binding of a C++ function\n `starts_with() <https://arrow.apache.org/docs/cpp/compute.html#containment-tests>`_\n to the (base) R function ``startsWith()``.\n \n To view the tutorial follow the\n `Walkthrough section of the Writing Bindings article <https://arrow.apache.org/docs/r/articles/developers/bindings.html#walkthrough>`_.\n+\n+\n+R tutorial on adding a lubridate binding\n+========================================\n+\n+In this tutorial we will document a simple binding contribution\n+to Arrow R package following the steps specified by the\n+:ref:`quick-ref-guide` section of the guide and a more detailed\n+:ref:`step_by_step` section. Navigate there whenever there is\n+some information you may find is missing here.\n+\n+The binding will be added to the ``expression.R`` file in the \n+R package. But you can also follow these steps in case you are\n+adding a binding that will live somewhere else.\n+\n+.. seealso::\n+   \n+   To read more about the philosophy behind R bindings, refer to the\n+   `Writing Bindings article <https://arrow.apache.org/docs/r/articles/developers/bindings.html>`_.\n+\n+This tutorial is different from the :ref:`step_by_step` as we\n+will be working on a specific case. This tutorial is not meant\n+as a step-by-step guide.\n+\n+**Let's start!**\n+\n+Set up\n+------\n+\n+Let's set up the Arrow repository. We presume here that Git is\n+already installed. Otherwise please see the :ref:`set-up` section.\n+\n+Once the `Apache Arrow repository <https://github.com/apache/arrow>`_\n+is forked we will clone it and add the link of the main repository\n+to our upstream.\n+\n+.. code:: console\n+\n+   $ git clone https://github.com/<your username>/arrow.git\n+   $ cd arrow\n+   $ git remote add upstream https://github.com/apache/arrow\n+\n+Building R package\n+------------------\n+\n+Script for building R package differs depending on the Operating\n+System you are using. For this reason we will only refer to\n+the instructions for the building process in this tutorial.\n+\n+.. seealso::\n+\n+   For the **introduction** to the building process refer to the\n+   :ref:`build-arrow-guide` section.\n+\n+   For the **instructions** on how to build R package refer to the\n+   `R developer docs <https://arrow.apache.org/docs/r/articles/developing.html>`_.\n+\n+JIRA issue\n+----------\n+\n+In this tutorial we will be tackling a JIRA issue for implementing\n+a simple binding for ``mday()`` function that will match that of the\n+existing R function from ``lubridate``. The issue can be found on\n+`this link <https://issues.apache.org/jira/browse/ARROW-14816>`_.\n+\n+.. figure:: R_tutorial_jira_issue.jpeg\n+   :scale: 40 %\n+   :alt: JIRA page of the issue for the R binding.\n+\n+   JIRA page of the issue for the lubridate::mday binding.\n+\n+.. note::\n+\n+   If you do not have an issue and you need help finding one please refer\n+   to the :ref:`finding-issues` part of the guide.\n+\n+Once you have an issue picked out and assigned to yourself, you can\n+proceed to the next step.\n+\n+Start the work on a new branch\n+------------------------------\n+\n+Before we start working on adding the binding we should\n+create a new branch from the updated master.\n+\n+.. code:: console\n+\n+   $ git checkout master\n+   $ git fetch upstream\n+   $ git pull --ff-only upstream master\n+   $ git checkout -b ARROW-14816\n+\n+Now we can start with researching the R function and the C++ Arrow\n+compute function we want to expose or connect to.\n+\n+**Examine the lubridate mday() function**\n+\n+Going through the `lubridate documentation <https://lubridate.tidyverse.org/reference/day.html>`_\n+we can see that ``mday()`` takes a date object\n+and returns the day of the month as a numeric object.\n+\n+We can run some examples in the R console to help us understand\n+the function better:\n+\n+.. code-block:: R\n+\n+   > library(lubridate)\n+   > mday(as.Date(\"2000-12-31\"))\n+   [1] 31\n+   > mday(ymd(080306))\n+   [1] 6\n+\n+**Examine the Arrow C++ day() function**\n+\n+From the `compute function documentation <https://arrow.apache.org/docs/cpp/compute.html#containment-tests>`_\n+we can see that ``day`` is a unary function, which means that it takes\n+a single data input. The data input must be a ``Temporal class`` and\n+the returned value is an ``Integer/numeric`` type.\n+\n+The ``Temporal class`` is specified as: Date types (Date32, Date64),\n+Time types (Time32, Time64), Timestamp, Duration, Interval.\n+\n+We can call an Arrow C++ function from an R console using ``call_function``\n+to see how it works:\n+\n+.. code-block:: R\n+\n+   > call_function(\"day\", Scalar$create(lubridate::ymd(\"2000-12-31\")))\n+   Scalar\n+   31\n+\n+We can see that lubridate and Arrow functions operate on and return\n+equivalent data types. Lubridate ``mday()`` function has no additional\n+arguments and there are also no option classes associated with Arrow C++\n+function ``day()``.\n+\n+.. note::\n+\n+   To see what to do if there is an option class associated with the\n+   function you are binding, refer to\n+   `Examining the C++ function <https://arrow.apache.org/docs/r/articles/developers/bindings.html#examining-the-c-function>`_ from the Writing Bindings\n+   article.\n+\n+Looking at the code in ``expressions.R`` we can see the day function\n+is already specified/mapped on the R package side:\n+`<https://github.com/apache/arrow/blob/658bec37aa5cbdd53b5e4cdc81b8ba3962e67f11/r/R/expression.R#L63-L64>`_\n+\n+We only need to add ``mday`` to the list of expressions connecting\n+it to the C++ ``day`` function.\n+\n+.. code-block:: R\n+\n+   # second is defined in dplyr-functions.R\n+   # wday is defined in dplyr-functions.R\n+   \"mday\" = \"day\",\n+   \"yday\" = \"day_of_year\",\n+   \"year\" = \"year\",\n+\n+Adding a test\n+-------------\n+\n+Now we need to add a test that checks if everything works well.\n+If there are additional options or edge cases, we would have to\n+add more. Looking at tests for similar functions (for example\n+``yday()`` or ``day())`` we can see that a good place to add two\n+tests we have is in ``test-dplyr-funcs-datetime.R``:\n+\n+.. code-block:: R\n+\n+   test_that(\"extract mday from timestamp\", {\n+     compare_dplyr_binding(\n+       .input %>%\n+         mutate(x = mday(datetime)) %>%\n+         collect(),\n+       test_df\n+     )\n+   })\n+\n+And \n+\n+.. code-block:: R\n+\n+   test_that(\"extract mday from date\", {\n+     compare_dplyr_binding(\n+       .input %>%\n+         mutate(x = mday(date)) %>%\n+         collect(),\n+       test_df\n+     )\n+   })\n+\n+Now we need to see if the tests are passing or we need to do some\n+more research and code corrections.\n+\n+.. code-block:: R\n+\n+   devtools::test(filter=\"datetime\")\n+\n+   > devtools::test(filter=\"datetime\")\n+   \u2139 Loading arrow\n+   See arrow_info() for available features\n+   \u2139 Testing arrow\n+   See arrow_info() for available features\n+   \u2714 | F W S  OK | Context\n+   \u2716 | 1     230 | dplyr-funcs-datetime [1.4s]                                                                                             \n+   \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n+   Failure (test-dplyr-funcs-datetime.R:187:3): strftime\n+   ``%>%`(...)` did not throw the expected error.\n+   Backtrace:\n+    1. testthat::expect_error(...) test-dplyr-funcs-datetime.R:187:2\n+    2. testthat:::expect_condition_matching(...)\n+   \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n+\n+   \u2550\u2550 Results \u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\n+   Duration: 1.4 s\n+\n+   [ FAIL 1 | WARN 0 | SKIP 0 | PASS 230 ]\n+\n+There is a fail we get for the ``strftime`` function but looking\n+at the code we see is not connected to our work. We can move on and\n+maybe ask others if they are getting similar fail when running the tests.\n+It could be we only need to rebuild the library.\n+\n+Check styling\n+-------------\n+\n+As we did not change any part of the C++ code we will not\n+run any linters. In case we would need to check the styling\n+for the C++ part we would run ``arrow/r/lint.sh`` to lint the code.\n\nReview comment:\n       Removed the part about linting C++ code. I think the info is redundant for the tutorial that deals with simple R binding with no change in C++ code. I am also working on a section in the guide about linting (I will connect to the existing docs) and so the info will still be available in the guide itself.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-10T11:31:15.492+0000",
                    "updated": "2022-02-10T11:31:15.492+0000",
                    "started": "2022-02-10T11:31:15.492+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "724441",
                    "issueId": "13423063"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423063/worklog/724578",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on a change in pull request #12313:\nURL: https://github.com/apache/arrow/pull/12313#discussion_r803807939\n\n\n\n##########\nFile path: docs/source/developers/guide/tutorials/r_tutorial.rst\n##########\n@@ -22,21 +22,429 @@\n \n .. _r-tutorial:\n \n-**********\n-R tutorial\n-**********\n+***********\n+R tutorials\n+***********\n+\n+\n+Writing Bindings Walkthrough\n+============================\n \n The first R package tutorial to be included in the New Contributor's\n guide is a **Walkthrough** added in the **Writing Bindings**\n vignette. With time we will try to include additional tutorials\n directly into this guide.\n \n-Writing Bindings Walkthrough\n-----------------------------\n-\n This tutorial will show how to do a binding of a C++ function\n `starts_with() <https://arrow.apache.org/docs/cpp/compute.html#containment-tests>`_\n to the (base) R function ``startsWith()``.\n \n To view the tutorial follow the\n `Walkthrough section of the Writing Bindings article <https://arrow.apache.org/docs/r/articles/developers/bindings.html#walkthrough>`_.\n+\n+\n+R tutorial on adding a lubridate binding\n+========================================\n+\n+In this tutorial we will document a simple binding contribution\n+to Arrow R package following the steps specified by the\n+:ref:`quick-ref-guide` section of the guide and a more detailed\n+:ref:`step_by_step` section. Navigate there whenever there is\n+some information you may find is missing here.\n+\n+The binding will be added to the ``expression.R`` file in the \n+R package. But you can also follow these steps in case you are\n+adding a binding that will live somewhere else.\n+\n+.. seealso::\n+   \n+   To read more about the philosophy behind R bindings, refer to the\n+   `Writing Bindings article <https://arrow.apache.org/docs/r/articles/developers/bindings.html>`_.\n+\n+This tutorial is different from the :ref:`step_by_step` as we\n+will be working on a specific case. This tutorial is not meant\n+as a step-by-step guide.\n+\n+**Let's start!**\n+\n+Set up\n+------\n+\n+Let's set up the Arrow repository. We presume here that Git is\n+already installed. Otherwise please see the :ref:`set-up` section.\n+\n+Once the `Apache Arrow repository <https://github.com/apache/arrow>`_\n+is forked we will clone it and add the link of the main repository\n+to our upstream.\n+\n+.. code:: console\n+\n+   $ git clone https://github.com/<your username>/arrow.git\n+   $ cd arrow\n+   $ git remote add upstream https://github.com/apache/arrow\n+\n+Building R package\n+------------------\n+\n+Script for building R package differs depending on the Operating\n+System you are using. For this reason we will only refer to\n+the instructions for the building process in this tutorial.\n+\n+.. seealso::\n+\n+   For the **introduction** to the building process refer to the\n+   :ref:`build-arrow-guide` section.\n+\n+   For the **instructions** on how to build R package refer to the\n+   `R developer docs <https://arrow.apache.org/docs/r/articles/developing.html>`_.\n+\n+JIRA issue\n+----------\n+\n+In this tutorial we will be tackling a JIRA issue for implementing\n+a simple binding for ``mday()`` function that will match that of the\n+existing R function from ``lubridate``. The issue can be found on\n+`this link <https://issues.apache.org/jira/browse/ARROW-14816>`_.\n+\n+.. figure:: R_tutorial_jira_issue.jpeg\n+   :scale: 40 %\n+   :alt: JIRA page of the issue for the R binding.\n+\n+   JIRA page of the issue for the lubridate::mday binding.\n+\n+.. note::\n+\n+   If you do not have an issue and you need help finding one please refer\n+   to the :ref:`finding-issues` part of the guide.\n+\n+Once you have an issue picked out and assigned to yourself, you can\n+proceed to the next step.\n+\n+Start the work on a new branch\n+------------------------------\n+\n+Before we start working on adding the binding we should\n+create a new branch from the updated master.\n+\n+.. code:: console\n+\n+   $ git checkout master\n+   $ git fetch upstream\n+   $ git pull --ff-only upstream master\n+   $ git checkout -b ARROW-14816\n+\n+Now we can start with researching the R function and the C++ Arrow\n+compute function we want to expose or connect to.\n+\n+**Examine the lubridate mday() function**\n+\n+Going through the `lubridate documentation <https://lubridate.tidyverse.org/reference/day.html>`_\n+we can see that ``mday()`` takes a date object\n+and returns the day of the month as a numeric object.\n+\n+We can run some examples in the R console to help us understand\n+the function better:\n+\n+.. code-block:: R\n+\n+   > library(lubridate)\n+   > mday(as.Date(\"2000-12-31\"))\n+   [1] 31\n+   > mday(ymd(080306))\n+   [1] 6\n+\n+**Examine the Arrow C++ day() function**\n+\n+From the `compute function documentation <https://arrow.apache.org/docs/cpp/compute.html#containment-tests>`_\n+we can see that ``day`` is a unary function, which means that it takes\n+a single data input. The data input must be a ``Temporal class`` and\n+the returned value is an ``Integer/numeric`` type.\n+\n+The ``Temporal class`` is specified as: Date types (Date32, Date64),\n+Time types (Time32, Time64), Timestamp, Duration, Interval.\n+\n+We can call an Arrow C++ function from an R console using ``call_function``\n+to see how it works:\n+\n+.. code-block:: R\n+\n+   > call_function(\"day\", Scalar$create(lubridate::ymd(\"2000-12-31\")))\n+   Scalar\n+   31\n+\n+We can see that lubridate and Arrow functions operate on and return\n+equivalent data types. Lubridate ``mday()`` function has no additional\n+arguments and there are also no option classes associated with Arrow C++\n+function ``day()``.\n+\n+.. note::\n+\n+   To see what to do if there is an option class associated with the\n+   function you are binding, refer to\n+   `Examining the C++ function <https://arrow.apache.org/docs/r/articles/developers/bindings.html#examining-the-c-function>`_ from the Writing Bindings\n+   article.\n+\n+Looking at the code in ``expressions.R`` we can see the day function\n+is already specified/mapped on the R package side:\n+`<https://github.com/apache/arrow/blob/658bec37aa5cbdd53b5e4cdc81b8ba3962e67f11/r/R/expression.R#L63-L64>`_\n+\n+We only need to add ``mday`` to the list of expressions connecting\n+it to the C++ ``day`` function.\n+\n+.. code-block:: R\n+\n+   # second is defined in dplyr-functions.R\n+   # wday is defined in dplyr-functions.R\n+   \"mday\" = \"day\",\n+   \"yday\" = \"day_of_year\",\n+   \"year\" = \"year\",\n+\n+Adding a test\n+-------------\n+\n+Now we need to add a test that checks if everything works well.\n+If there are additional options or edge cases, we would have to\n+add more. Looking at tests for similar functions (for example\n+``yday()`` or ``day())`` we can see that a good place to add two\n+tests we have is in ``test-dplyr-funcs-datetime.R``:\n+\n+.. code-block:: R\n+\n+   test_that(\"extract mday from timestamp\", {\n+     compare_dplyr_binding(\n+       .input %>%\n+         mutate(x = mday(datetime)) %>%\n+         collect(),\n+       test_df\n+     )\n+   })\n+\n+And \n+\n+.. code-block:: R\n+\n+   test_that(\"extract mday from date\", {\n+     compare_dplyr_binding(\n+       .input %>%\n+         mutate(x = mday(date)) %>%\n+         collect(),\n+       test_df\n+     )\n+   })\n+\n+Now we need to see if the tests are passing or we need to do some\n+more research and code corrections.\n+\n+.. code-block:: R\n+\n+   devtools::test(filter=\"datetime\")\n+\n+   > devtools::test(filter=\"datetime\")\n+   \u2139 Loading arrow\n+   See arrow_info() for available features\n+   \u2139 Testing arrow\n+   See arrow_info() for available features\n+   \u2714 | F W S  OK | Context\n+   \u2716 | 1     230 | dplyr-funcs-datetime [1.4s]                                                                                             \n+   \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n+   Failure (test-dplyr-funcs-datetime.R:187:3): strftime\n+   ``%>%`(...)` did not throw the expected error.\n+   Backtrace:\n+    1. testthat::expect_error(...) test-dplyr-funcs-datetime.R:187:2\n+    2. testthat:::expect_condition_matching(...)\n+   \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n+\n+   \u2550\u2550 Results \u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\n+   Duration: 1.4 s\n+\n+   [ FAIL 1 | WARN 0 | SKIP 0 | PASS 230 ]\n+\n+There is a fail we get for the ``strftime`` function but looking\n+at the code we see is not connected to our work. We can move on and\n+maybe ask others if they are getting similar fail when running the tests.\n+It could be we only need to rebuild the library.\n+\n+Check styling\n+-------------\n+\n+As we did not change any part of the C++ code we will not\n+run any linters. In case we would need to check the styling\n+for the C++ part we would run ``arrow/r/lint.sh`` to lint the code.\n+\n+Creating a Pull Request\n+-----------------------\n+\n+First let\u2019s review our changes in the shell using ``git status`` to see\n+which files have been changed and to commit only the ones we are working on.\n+\n+.. code:: console\n+\n+   $ git status\n+   On branch ARROW-14816\n+   Changes not staged for commit:\n+     (use \"git add <file>...\" to update what will be committed)\n+     (use \"git restore <file>...\" to discard changes in working directory)\n+      modified:   R/expression.R\n+      modified:   tests/testthat/test-dplyr-funcs-datetime.R\n+\n+And ``git diff`` to see the changes in the files in order to spot any error we might have made.\n+\n+.. code:: console\n+\n+   $ git diff\n+   diff --git a/r/R/expression.R b/r/R/expression.R\n+   index 37fc21c25..0e71803ec 100644\n+   --- a/r/R/expression.R\n+   +++ b/r/R/expression.R\n+   @@ -70,6 +70,7 @@\n+      \"quarter\" = \"quarter\",\n+      # second is defined in dplyr-functions.R\n+      # wday is defined in dplyr-functions.R\n+   +  \"mday\" = \"day\",\n+      \"yday\" = \"day_of_year\",\n+      \"year\" = \"year\",\n+\n+   diff --git a/r/tests/testthat/test-dplyr-funcs-datetime.R b/r/tests/testthat/test-dplyr-funcs-datetime.R\n+   index 359a5403a..228eca56a 100644\n+   --- a/r/tests/testthat/test-dplyr-funcs-datetime.R\n+   +++ b/r/tests/testthat/test-dplyr-funcs-datetime.R\n+   @@ -444,6 +444,15 @@ test_that(\"extract wday from timestamp\", {\n+      )\n+    })\n+    \n+   +test_that(\"extract mday from timestamp\", {\n+   +  compare_dplyr_binding(\n+   +    .input %>%\n+   +      mutate(x = mday(datetime)) %>%\n+   +      collect(),\n+   +    test_df\n+   +  )\n+   +})\n+   +\n+    test_that(\"extract yday from timestamp\", {\n+      compare_dplyr_binding(\n+        .input %>%\n+   @@ -626,6 +635,15 @@ test_that(\"extract wday from date\", {\n+      )\n+    })\n+\n+   +test_that(\"extract mday from date\", {\n+   +  compare_dplyr_binding(\n+   +    .input %>%\n+   +      mutate(x = mday(date)) %>%\n+   +      collect(),\n+   +    test_df\n+   +  )\n+   +})\n+   +\n+    test_that(\"extract yday from date\", {\n+      compare_dplyr_binding(\n+        .input %>%\n+\n+Everything looks OK. Now we can make the commit\n+(save our changes to the branch history):\n+\n+.. code:: console\n+\n+   $ git commit -am \"Adding a binding and a test for mday() lubridate\"\n+   [ARROW-14816 ed37d3a3b] Adding a binding and a test for mday() lubridate\n+    2 files changed, 19 insertions(+)\n+\n+We can use ``git log`` to check the history of commits:\n+\n+.. code:: console\n+\n+   $ git log\n+   commit ed37d3a3b3eef76b696532f10562fea85f809fab (HEAD -> ARROW-14816)\n+   Author: Alenka Frim <frim.alenka@gmail.com>\n+   Date:   Fri Jan 21 09:15:31 2022 +0100\n+\n+       Adding a binding and a test for mday() lubridate\n+\n+   commit c5358787ee8f7b80f067292f49e5f032854041b9 (upstream/master, upstream/HEAD, master, ARROW-15346, ARROW-10643)\n+   Author: Kriszti\u00e1n Sz\u0171cs <szucs.krisztian@gmail.com>\n+   Date:   Thu Jan 20 09:45:59 2022 +0900\n+\n+       ARROW-15372: [C++][Gandiva] Gandiva now depends on boost/crc.hpp which is missing from the trimmed boost archive\n+       \n+       See build error https://github.com/ursacomputing/crossbow/runs/4871392838?check_suite_focus=true#step:5:11762\n+       \n+       Closes #12190 from kszucs/ARROW-15372\n+       \n+       Authored-by: Kriszti\u00e1n Sz\u0171cs <szucs.krisztian@gmail.com>\n+       Signed-off-by: Sutou Kouhei <kou@clear-code.com>\n+\n+If we started the branch some time ago, we may need to rebase\n+to upstream master to make sure there are no merge conflicts:\n+\n+.. code:: console\n+\n+   $ git pull upstream master --rebase\n\nReview comment:\n       Oh awesome, learned something new today!\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-10T15:39:04.032+0000",
                    "updated": "2022-02-10T15:39:04.032+0000",
                    "started": "2022-02-10T15:39:04.031+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "724578",
                    "issueId": "13423063"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423063/worklog/726212",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic closed pull request #12313:\nURL: https://github.com/apache/arrow/pull/12313\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-14T10:11:25.017+0000",
                    "updated": "2022-02-14T10:11:25.017+0000",
                    "started": "2022-02-14T10:11:25.017+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "726212",
                    "issueId": "13423063"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423063/worklog/726216",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on pull request #12313:\nURL: https://github.com/apache/arrow/pull/12313#issuecomment-1038908489\n\n\n   Benchmark runs are scheduled for baseline = 90edde22090dbb97a5f3728f476511c5b5c388de and contender = 3cc7df895e0cf2bf0aa1ac1977c20e5f93ec2f25. 3cc7df895e0cf2bf0aa1ac1977c20e5f93ec2f25 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Scheduled] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/3b3b8902374c4c349a78922b11f60754...7d3109e924ba4e26b140fc7a2c3de6f2/)\n   [Scheduled] [test-mac-arm](https://conbench.ursa.dev/compare/runs/fcec2d8a0ce24ff884645f22d2639dc7...165fce9b573d4bce910b7d7bff49fe97/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/ecea0e5109d2462196c06415b04a4bb6...81f8ffa968ed4fe38085a2b7585f0014/)\n   [Scheduled] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/088e1686fb72407ea6c6ff527ce841e9...44c22badc7f34c4db594c664d8027362/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   test-mac-arm: Supported benchmark langs: C++, Python, R\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-14T10:21:26.008+0000",
                    "updated": "2022-02-14T10:21:26.008+0000",
                    "started": "2022-02-14T10:21:26.008+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "726216",
                    "issueId": "13423063"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423063/worklog/726222",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #12313:\nURL: https://github.com/apache/arrow/pull/12313#issuecomment-1038908489\n\n\n   Benchmark runs are scheduled for baseline = 90edde22090dbb97a5f3728f476511c5b5c388de and contender = 3cc7df895e0cf2bf0aa1ac1977c20e5f93ec2f25. 3cc7df895e0cf2bf0aa1ac1977c20e5f93ec2f25 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Failed] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/3b3b8902374c4c349a78922b11f60754...7d3109e924ba4e26b140fc7a2c3de6f2/)\n   [Failed] [test-mac-arm](https://conbench.ursa.dev/compare/runs/fcec2d8a0ce24ff884645f22d2639dc7...165fce9b573d4bce910b7d7bff49fe97/)\n   [Failed] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/ecea0e5109d2462196c06415b04a4bb6...81f8ffa968ed4fe38085a2b7585f0014/)\n   [Failed] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/088e1686fb72407ea6c6ff527ce841e9...44c22badc7f34c4db594c664d8027362/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   test-mac-arm: Supported benchmark langs: C++, Python, R\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-14T10:31:24.080+0000",
                    "updated": "2022-02-14T10:31:24.080+0000",
                    "started": "2022-02-14T10:31:24.080+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "726222",
                    "issueId": "13423063"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423063/worklog/726487",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #12313:\nURL: https://github.com/apache/arrow/pull/12313#issuecomment-1038908489\n\n\n   Benchmark runs are scheduled for baseline = 90edde22090dbb97a5f3728f476511c5b5c388de and contender = 3cc7df895e0cf2bf0aa1ac1977c20e5f93ec2f25. 3cc7df895e0cf2bf0aa1ac1977c20e5f93ec2f25 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Scheduled] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/3b3b8902374c4c349a78922b11f60754...7d3109e924ba4e26b140fc7a2c3de6f2/)\n   [Scheduled] [test-mac-arm](https://conbench.ursa.dev/compare/runs/fcec2d8a0ce24ff884645f22d2639dc7...165fce9b573d4bce910b7d7bff49fe97/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/ecea0e5109d2462196c06415b04a4bb6...81f8ffa968ed4fe38085a2b7585f0014/)\n   [Scheduled] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/088e1686fb72407ea6c6ff527ce841e9...44c22badc7f34c4db594c664d8027362/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   test-mac-arm: Supported benchmark langs: C++, Python, R\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-14T18:51:07.716+0000",
                    "updated": "2022-02-14T18:51:07.716+0000",
                    "started": "2022-02-14T18:51:07.715+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "726487",
                    "issueId": "13423063"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423063/worklog/726538",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #12313:\nURL: https://github.com/apache/arrow/pull/12313#issuecomment-1038908489\n\n\n   Benchmark runs are scheduled for baseline = 90edde22090dbb97a5f3728f476511c5b5c388de and contender = 3cc7df895e0cf2bf0aa1ac1977c20e5f93ec2f25. 3cc7df895e0cf2bf0aa1ac1977c20e5f93ec2f25 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Scheduled] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/3b3b8902374c4c349a78922b11f60754...7d3109e924ba4e26b140fc7a2c3de6f2/)\n   [Scheduled] [test-mac-arm](https://conbench.ursa.dev/compare/runs/fcec2d8a0ce24ff884645f22d2639dc7...165fce9b573d4bce910b7d7bff49fe97/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/ecea0e5109d2462196c06415b04a4bb6...81f8ffa968ed4fe38085a2b7585f0014/)\n   [Failed] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/088e1686fb72407ea6c6ff527ce841e9...44c22badc7f34c4db594c664d8027362/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   test-mac-arm: Supported benchmark langs: C++, Python, R\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-14T19:41:47.857+0000",
                    "updated": "2022-02-14T19:41:47.857+0000",
                    "started": "2022-02-14T19:41:47.857+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "726538",
                    "issueId": "13423063"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423063/worklog/726570",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #12313:\nURL: https://github.com/apache/arrow/pull/12313#issuecomment-1038908489\n\n\n   Benchmark runs are scheduled for baseline = 90edde22090dbb97a5f3728f476511c5b5c388de and contender = 3cc7df895e0cf2bf0aa1ac1977c20e5f93ec2f25. 3cc7df895e0cf2bf0aa1ac1977c20e5f93ec2f25 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/3b3b8902374c4c349a78922b11f60754...7d3109e924ba4e26b140fc7a2c3de6f2/)\n   [Scheduled] [test-mac-arm](https://conbench.ursa.dev/compare/runs/fcec2d8a0ce24ff884645f22d2639dc7...165fce9b573d4bce910b7d7bff49fe97/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/ecea0e5109d2462196c06415b04a4bb6...81f8ffa968ed4fe38085a2b7585f0014/)\n   [Failed] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/088e1686fb72407ea6c6ff527ce841e9...44c22badc7f34c4db594c664d8027362/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   test-mac-arm: Supported benchmark langs: C++, Python, R\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-14T20:32:34.400+0000",
                    "updated": "2022-02-14T20:32:34.400+0000",
                    "started": "2022-02-14T20:32:34.400+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "726570",
                    "issueId": "13423063"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423063/worklog/726699",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #12313:\nURL: https://github.com/apache/arrow/pull/12313#issuecomment-1038908489\n\n\n   Benchmark runs are scheduled for baseline = 90edde22090dbb97a5f3728f476511c5b5c388de and contender = 3cc7df895e0cf2bf0aa1ac1977c20e5f93ec2f25. 3cc7df895e0cf2bf0aa1ac1977c20e5f93ec2f25 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/3b3b8902374c4c349a78922b11f60754...7d3109e924ba4e26b140fc7a2c3de6f2/)\n   [Scheduled] [test-mac-arm](https://conbench.ursa.dev/compare/runs/fcec2d8a0ce24ff884645f22d2639dc7...165fce9b573d4bce910b7d7bff49fe97/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/ecea0e5109d2462196c06415b04a4bb6...81f8ffa968ed4fe38085a2b7585f0014/)\n   [Scheduled] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/088e1686fb72407ea6c6ff527ce841e9...44c22badc7f34c4db594c664d8027362/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   test-mac-arm: Supported benchmark langs: C++, Python, R\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-14T23:12:31.134+0000",
                    "updated": "2022-02-14T23:12:31.134+0000",
                    "started": "2022-02-14T23:12:31.133+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "726699",
                    "issueId": "13423063"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423063/worklog/726864",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #12313:\nURL: https://github.com/apache/arrow/pull/12313#issuecomment-1038908489\n\n\n   Benchmark runs are scheduled for baseline = 90edde22090dbb97a5f3728f476511c5b5c388de and contender = 3cc7df895e0cf2bf0aa1ac1977c20e5f93ec2f25. 3cc7df895e0cf2bf0aa1ac1977c20e5f93ec2f25 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/3b3b8902374c4c349a78922b11f60754...7d3109e924ba4e26b140fc7a2c3de6f2/)\n   [Scheduled] [test-mac-arm](https://conbench.ursa.dev/compare/runs/fcec2d8a0ce24ff884645f22d2639dc7...165fce9b573d4bce910b7d7bff49fe97/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/ecea0e5109d2462196c06415b04a4bb6...81f8ffa968ed4fe38085a2b7585f0014/)\n   [Failed] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/088e1686fb72407ea6c6ff527ce841e9...44c22badc7f34c4db594c664d8027362/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   test-mac-arm: Supported benchmark langs: C++, Python, R\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-15T06:51:29.121+0000",
                    "updated": "2022-02-15T06:51:29.121+0000",
                    "started": "2022-02-15T06:51:29.121+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "726864",
                    "issueId": "13423063"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423063/worklog/727005",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #12313:\nURL: https://github.com/apache/arrow/pull/12313#issuecomment-1038908489\n\n\n   Benchmark runs are scheduled for baseline = 90edde22090dbb97a5f3728f476511c5b5c388de and contender = 3cc7df895e0cf2bf0aa1ac1977c20e5f93ec2f25. 3cc7df895e0cf2bf0aa1ac1977c20e5f93ec2f25 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/3b3b8902374c4c349a78922b11f60754...7d3109e924ba4e26b140fc7a2c3de6f2/)\n   [Finished :arrow_down:0.47% :arrow_up:0.04%] [test-mac-arm](https://conbench.ursa.dev/compare/runs/fcec2d8a0ce24ff884645f22d2639dc7...165fce9b573d4bce910b7d7bff49fe97/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/ecea0e5109d2462196c06415b04a4bb6...81f8ffa968ed4fe38085a2b7585f0014/)\n   [Failed] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/088e1686fb72407ea6c6ff527ce841e9...44c22badc7f34c4db594c664d8027362/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   test-mac-arm: Supported benchmark langs: C++, Python, R\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-15T13:01:25.006+0000",
                    "updated": "2022-02-15T13:01:25.006+0000",
                    "started": "2022-02-15T13:01:25.005+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "727005",
                    "issueId": "13423063"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423063/worklog/727166",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #12313:\nURL: https://github.com/apache/arrow/pull/12313#issuecomment-1038908489\n\n\n   Benchmark runs are scheduled for baseline = 90edde22090dbb97a5f3728f476511c5b5c388de and contender = 3cc7df895e0cf2bf0aa1ac1977c20e5f93ec2f25. 3cc7df895e0cf2bf0aa1ac1977c20e5f93ec2f25 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/3b3b8902374c4c349a78922b11f60754...7d3109e924ba4e26b140fc7a2c3de6f2/)\n   [Finished :arrow_down:0.47% :arrow_up:0.04%] [test-mac-arm](https://conbench.ursa.dev/compare/runs/fcec2d8a0ce24ff884645f22d2639dc7...165fce9b573d4bce910b7d7bff49fe97/)\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/ecea0e5109d2462196c06415b04a4bb6...81f8ffa968ed4fe38085a2b7585f0014/)\n   [Failed] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/088e1686fb72407ea6c6ff527ce841e9...44c22badc7f34c4db594c664d8027362/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   test-mac-arm: Supported benchmark langs: C++, Python, R\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-15T17:22:26.924+0000",
                    "updated": "2022-02-15T17:22:26.924+0000",
                    "started": "2022-02-15T17:22:26.924+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "727166",
                    "issueId": "13423063"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423063/worklog/727524",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #12313:\nURL: https://github.com/apache/arrow/pull/12313#issuecomment-1038908489\n\n\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-15T18:58:31.695+0000",
                    "updated": "2022-02-15T18:58:31.695+0000",
                    "started": "2022-02-15T18:58:31.695+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "727524",
                    "issueId": "13423063"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
            "id": "7",
            "description": "The sub-task of the issue",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
            "name": "Sub-task",
            "subtask": true,
            "avatarId": 21146
        },
        "timespent": 11400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@790a6a16[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3987bb44[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1de74bd9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@193e9eba[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@e2edea7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@7dfd2e0[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@20c1f841[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@4de779ad[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@35445d50[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@4c75d1ca[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@63593bf5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@15851c22[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 11400,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Feb 14 10:11:20 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-02-14T10:11:20.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15351/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2022-01-17T13:28:07.000+0000",
        "updated": "2022-02-15T18:58:32.000+0000",
        "timeoriginalestimate": null,
        "description": "Additional *tutorial for R* bindings - lubridate::mday for example: https://issues.apache.org/jira/browse/ARROW-14816 to be put in the .rst part of the docs.\r\n\r\nAlso add these correction for the existing Python tutorial:\r\n * Change _Lets_ _start_ to _Lets's_ _start_ - (intro), before the Set up section.\r\n * Change _Setup_ to _Set up_ in the first sentence of the Set up section.\r\n * Change\u00a0_Lets_\u00a0to _Lets's and from *the* updated master_ in Start the work on a new branch section, second and first paragraph.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 11400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Doc][Guide] Additional tutorial for R bindings",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423063/comment/17491912",
                    "id": "17491912",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
                        "name": "thisisnic",
                        "key": "thisisnic",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
                        },
                        "displayName": "Nicola Crane",
                        "active": true,
                        "timeZone": "Africa/Casablanca"
                    },
                    "body": "Issue resolved by pull request 12313\n[https://github.com/apache/arrow/pull/12313]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
                        "name": "thisisnic",
                        "key": "thisisnic",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
                        },
                        "displayName": "Nicola Crane",
                        "active": true,
                        "timeZone": "Africa/Casablanca"
                    },
                    "created": "2022-02-14T10:11:20.046+0000",
                    "updated": "2022-02-14T10:11:20.046+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0ynjc:",
        "customfield_12314139": null
    }
}