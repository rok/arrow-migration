{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13284909",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13284909",
    "key": "ARROW-7842",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12348823",
                "id": "12348823",
                "description": "",
                "name": "3.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-01-25"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=nevi_me",
            "name": "nevi_me",
            "key": "nevi_me",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=nevi_me&avatarId=24271",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nevi_me&avatarId=24271",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nevi_me&avatarId=24271",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nevi_me&avatarId=24271"
            },
            "displayName": "Neville Dipale",
            "active": true,
            "timeZone": "Africa/Johannesburg"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=m_cassels",
            "name": "m_cassels",
            "key": "m_cassels",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Morgan Cassels",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=m_cassels",
            "name": "m_cassels",
            "key": "m_cassels",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Morgan Cassels",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 33000,
            "total": 33000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 33000,
            "total": 33000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7842/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 55,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13284909/worklog/412688",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mcassels commented on pull request #6770: ARROW-7842 [Parquet][Rust] implement array_reader for list type columns\nURL: https://github.com/apache/arrow/pull/6770\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-30T23:31:23.245+0000",
                    "updated": "2020-03-30T23:31:23.245+0000",
                    "started": "2020-03-30T23:31:23.244+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "412688",
                    "issueId": "13284909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13284909/worklog/412690",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #6770: ARROW-7842 [Parquet][Rust] implement array_reader for list type columns\nURL: https://github.com/apache/arrow/pull/6770#issuecomment-606306073\n \n \n   https://issues.apache.org/jira/browse/ARROW-7842\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-30T23:31:33.787+0000",
                    "updated": "2020-03-30T23:31:33.787+0000",
                    "started": "2020-03-30T23:31:33.786+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "412690",
                    "issueId": "13284909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13284909/worklog/412693",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mcassels commented on pull request #11: ARROW-7842 add tiny parquet with int and utf8 list columns\nURL: https://github.com/apache/parquet-testing/pull/11\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-30T23:37:02.509+0000",
                    "updated": "2020-03-30T23:37:02.509+0000",
                    "started": "2020-03-30T23:37:02.509+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "412693",
                    "issueId": "13284909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13284909/worklog/412695",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mcassels commented on issue #6770: ARROW-7842 [Parquet][Rust] implement array_reader for list type columns\nURL: https://github.com/apache/arrow/pull/6770#issuecomment-606308481\n \n \n   New test file PR for datafusion test: https://github.com/apache/parquet-testing/pull/11\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-30T23:39:30.847+0000",
                    "updated": "2020-03-30T23:39:30.847+0000",
                    "started": "2020-03-30T23:39:30.847+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "412695",
                    "issueId": "13284909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13284909/worklog/412796",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mcassels commented on issue #6770: ARROW-7842 [Parquet][Rust] implement array_reader for list type columns\nURL: https://github.com/apache/arrow/pull/6770#issuecomment-606308481\n \n \n   New test file PR for datafusion test: https://github.com/apache/parquet-testing/pull/11\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-31T02:57:19.398+0000",
                    "updated": "2020-03-31T02:57:19.398+0000",
                    "started": "2020-03-31T02:57:19.398+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "412796",
                    "issueId": "13284909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13284909/worklog/426314",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mcassels commented on issue #6770:\nURL: https://github.com/apache/arrow/pull/6770#issuecomment-618082896\n\n\n   @andygrove @nevi-me do you have any thoughts on this?\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-22T23:00:42.315+0000",
                    "updated": "2020-04-22T23:00:42.315+0000",
                    "started": "2020-04-22T23:00:42.314+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "426314",
                    "issueId": "13284909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13284909/worklog/426317",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on a change in pull request #6770:\nURL: https://github.com/apache/arrow/pull/6770#discussion_r413403453\n\n\n\n##########\nFile path: rust/datafusion/src/logicalplan.rs\n##########\n@@ -828,8 +828,8 @@ mod tests {\n         .build()?;\n \n         let expected = \"Projection: #id\\\n-        \\n  Selection: #state Eq Utf8(\\\"CO\\\")\\\n-        \\n    TableScan: employee.csv projection=Some([0, 3])\";\n+                        \\n  Selection: #state Eq Utf8(\\\"CO\\\")\\\n+                        \\n    TableScan: employee.csv projection=Some([0, 3])\";\n \n\nReview comment:\n       Are these formatting changes from running rustfmt?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-22T23:35:09.794+0000",
                    "updated": "2020-04-22T23:35:09.794+0000",
                    "started": "2020-04-22T23:35:09.794+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "426317",
                    "issueId": "13284909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13284909/worklog/426318",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on a change in pull request #6770:\nURL: https://github.com/apache/arrow/pull/6770#discussion_r413403760\n\n\n\n##########\nFile path: rust/datafusion/src/utils.rs\n##########\n@@ -74,6 +74,29 @@ macro_rules! make_string {\n     }};\n }\n \n+macro_rules! make_string_from_list {\n+    ($column: ident, $row: ident) => {{\n+        let list = $column\n+            .as_any()\n+            .downcast_ref::<array::ListArray>()\n+            .unwrap()\n\nReview comment:\n       `expect` would be better than `unwrap`. Using a `Result` would be better than `expect`.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-22T23:36:03.349+0000",
                    "updated": "2020-04-22T23:36:03.349+0000",
                    "started": "2020-04-22T23:36:03.349+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "426318",
                    "issueId": "13284909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13284909/worklog/426319",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on a change in pull request #6770:\nURL: https://github.com/apache/arrow/pull/6770#discussion_r413404215\n\n\n\n##########\nFile path: rust/datafusion/src/utils.rs\n##########\n@@ -74,6 +74,29 @@ macro_rules! make_string {\n     }};\n }\n \n+macro_rules! make_string_from_list {\n+    ($column: ident, $row: ident) => {{\n+        let list = $column\n+            .as_any()\n+            .downcast_ref::<array::ListArray>()\n+            .unwrap()\n+            .value($row);\n+        let string_values = match (0..list.len())\n+            .map(|i| array_value_to_string(list.clone(), i))\n+            .collect::<Result<Vec<String>>>()\n+        {\n+            Ok(values) => values,\n+            _ => {\n+                return Err(ExecutionError::ExecutionError(format!(\n+                    \"Unsupported {:?} type for repl.\",\n\nReview comment:\n       What does `repl` mean here? Maybe this error could be a bit more descriptive?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-22T23:37:02.753+0000",
                    "updated": "2020-04-22T23:37:02.753+0000",
                    "started": "2020-04-22T23:37:02.753+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "426319",
                    "issueId": "13284909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13284909/worklog/426320",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on a change in pull request #6770:\nURL: https://github.com/apache/arrow/pull/6770#discussion_r413404556\n\n\n\n##########\nFile path: rust/datafusion/src/utils.rs\n##########\n@@ -120,6 +143,7 @@ pub fn array_value_to_string(column: array::ArrayRef, row: usize) -> Result<Stri\n         DataType::Time64(unit) if *unit == TimeUnit::Nanosecond => {\n             make_string!(array::Time64NanosecondArray, column, row)\n         }\n+        DataType::List(_) => make_string_from_list!(column, row),\n\nReview comment:\n       Does it matter what data type the list is? Can lists of any type be converted into strings?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-22T23:37:56.318+0000",
                    "updated": "2020-04-22T23:37:56.318+0000",
                    "started": "2020-04-22T23:37:56.318+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "426320",
                    "issueId": "13284909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13284909/worklog/426848",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mcassels commented on a change in pull request #6770:\nURL: https://github.com/apache/arrow/pull/6770#discussion_r414276380\n\n\n\n##########\nFile path: rust/datafusion/src/utils.rs\n##########\n@@ -120,6 +143,7 @@ pub fn array_value_to_string(column: array::ArrayRef, row: usize) -> Result<Stri\n         DataType::Time64(unit) if *unit == TimeUnit::Nanosecond => {\n             make_string!(array::Time64NanosecondArray, column, row)\n         }\n+        DataType::List(_) => make_string_from_list!(column, row),\n\nReview comment:\n       This recursively calls `array_value_to_string` on the array items, so an unsupported type should give the appropriate error on the recursive call\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-24T04:05:34.185+0000",
                    "updated": "2020-04-24T04:05:34.185+0000",
                    "started": "2020-04-24T04:05:34.184+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "426848",
                    "issueId": "13284909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13284909/worklog/426849",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mcassels commented on a change in pull request #6770:\nURL: https://github.com/apache/arrow/pull/6770#discussion_r414276861\n\n\n\n##########\nFile path: rust/datafusion/src/logicalplan.rs\n##########\n@@ -828,8 +828,8 @@ mod tests {\n         .build()?;\n \n         let expected = \"Projection: #id\\\n-        \\n  Selection: #state Eq Utf8(\\\"CO\\\")\\\n-        \\n    TableScan: employee.csv projection=Some([0, 3])\";\n+                        \\n  Selection: #state Eq Utf8(\\\"CO\\\")\\\n+                        \\n    TableScan: employee.csv projection=Some([0, 3])\";\n \n\nReview comment:\n       yes\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-24T04:06:47.325+0000",
                    "updated": "2020-04-24T04:06:47.325+0000",
                    "started": "2020-04-24T04:06:47.325+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "426849",
                    "issueId": "13284909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13284909/worklog/429923",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on a change in pull request #6770:\nURL: https://github.com/apache/arrow/pull/6770#discussion_r419080375\n\n\n\n##########\nFile path: rust/parquet/src/arrow/array_reader.rs\n##########\n@@ -468,6 +491,391 @@ where\n     }\n }\n \n+/// Implementation of list array reader.\n+pub struct ListArrayReader {\n+    item_reader: Box<dyn ArrayReader>,\n+    data_type: ArrowType,\n+    item_type: ArrowType,\n+    list_def_level: i16,\n+    list_rep_level: i16,\n+    def_level_buffer: Option<Buffer>,\n+    rep_level_buffer: Option<Buffer>,\n+}\n+\n+impl ListArrayReader {\n+    /// Construct list array reader.\n+    pub fn new(\n+        item_reader: Box<dyn ArrayReader>,\n+        data_type: ArrowType,\n+        item_type: ArrowType,\n+        def_level: i16,\n+        rep_level: i16,\n+    ) -> Self {\n+        Self {\n+            item_reader,\n+            data_type,\n+            item_type,\n+            list_def_level: def_level,\n+            list_rep_level: rep_level,\n+            def_level_buffer: None,\n+            rep_level_buffer: None,\n+        }\n+    }\n+}\n+\n+macro_rules! build_empty_list_array_with_primitive_items {\n+    ($item_type:ident) => {{\n+        let values_builder = PrimitiveBuilder::<$item_type>::new(0);\n+        let mut builder = ListBuilder::new(values_builder);\n+        let empty_list_array = builder.finish();\n+        Ok(Arc::new(empty_list_array))\n+    }};\n+}\n+\n+macro_rules! build_empty_list_array_with_non_primitive_items {\n+    ($builder:ident) => {{\n+        let values_builder = $builder::new(0);\n+        let mut builder = ListBuilder::new(values_builder);\n+        let empty_list_array = builder.finish();\n+        Ok(Arc::new(empty_list_array))\n+    }};\n+}\n+\n+fn build_empty_list_array(item_type: ArrowType) -> Result<ArrayRef> {\n+    match item_type {\n+        ArrowType::UInt8 => build_empty_list_array_with_primitive_items!(ArrowUInt8Type),\n+        ArrowType::UInt16 => {\n+            build_empty_list_array_with_primitive_items!(ArrowUInt16Type)\n+        }\n+        ArrowType::UInt32 => {\n+            build_empty_list_array_with_primitive_items!(ArrowUInt32Type)\n+        }\n+        ArrowType::UInt64 => {\n+            build_empty_list_array_with_primitive_items!(ArrowUInt64Type)\n+        }\n+        ArrowType::Int8 => build_empty_list_array_with_primitive_items!(ArrowInt8Type),\n+        ArrowType::Int16 => build_empty_list_array_with_primitive_items!(ArrowInt16Type),\n+        ArrowType::Int32 => build_empty_list_array_with_primitive_items!(ArrowInt32Type),\n+        ArrowType::Int64 => build_empty_list_array_with_primitive_items!(ArrowInt64Type),\n+        ArrowType::Float32 => {\n+            build_empty_list_array_with_primitive_items!(ArrowFloat32Type)\n+        }\n+        ArrowType::Float64 => {\n+            build_empty_list_array_with_primitive_items!(ArrowFloat64Type)\n+        }\n+        ArrowType::Boolean => {\n+            build_empty_list_array_with_primitive_items!(ArrowBooleanType)\n+        }\n+        ArrowType::Date32(_) => {\n+            build_empty_list_array_with_primitive_items!(ArrowDate32Type)\n+        }\n+        ArrowType::Date64(_) => {\n+            build_empty_list_array_with_primitive_items!(ArrowDate64Type)\n+        }\n+        ArrowType::Time32(ArrowTimeUnit::Second) => {\n+            build_empty_list_array_with_primitive_items!(ArrowTime32SecondType)\n+        }\n+        ArrowType::Time32(ArrowTimeUnit::Millisecond) => {\n+            build_empty_list_array_with_primitive_items!(ArrowTime32MillisecondType)\n+        }\n+        ArrowType::Time64(ArrowTimeUnit::Microsecond) => {\n+            build_empty_list_array_with_primitive_items!(ArrowTime64MicrosecondType)\n+        }\n+        ArrowType::Time64(ArrowTimeUnit::Nanosecond) => {\n+            build_empty_list_array_with_primitive_items!(ArrowTime64NanosecondType)\n+        }\n+        ArrowType::Duration(ArrowTimeUnit::Second) => {\n\nReview comment:\n       Are durations supported in parquet?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-03T10:14:55.037+0000",
                    "updated": "2020-05-03T10:14:55.037+0000",
                    "started": "2020-05-03T10:14:55.037+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "429923",
                    "issueId": "13284909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13284909/worklog/429986",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mcassels commented on a change in pull request #6770:\nURL: https://github.com/apache/arrow/pull/6770#discussion_r419189845\n\n\n\n##########\nFile path: rust/parquet/src/arrow/array_reader.rs\n##########\n@@ -468,6 +491,391 @@ where\n     }\n }\n \n+/// Implementation of list array reader.\n+pub struct ListArrayReader {\n+    item_reader: Box<dyn ArrayReader>,\n+    data_type: ArrowType,\n+    item_type: ArrowType,\n+    list_def_level: i16,\n+    list_rep_level: i16,\n+    def_level_buffer: Option<Buffer>,\n+    rep_level_buffer: Option<Buffer>,\n+}\n+\n+impl ListArrayReader {\n+    /// Construct list array reader.\n+    pub fn new(\n+        item_reader: Box<dyn ArrayReader>,\n+        data_type: ArrowType,\n+        item_type: ArrowType,\n+        def_level: i16,\n+        rep_level: i16,\n+    ) -> Self {\n+        Self {\n+            item_reader,\n+            data_type,\n+            item_type,\n+            list_def_level: def_level,\n+            list_rep_level: rep_level,\n+            def_level_buffer: None,\n+            rep_level_buffer: None,\n+        }\n+    }\n+}\n+\n+macro_rules! build_empty_list_array_with_primitive_items {\n+    ($item_type:ident) => {{\n+        let values_builder = PrimitiveBuilder::<$item_type>::new(0);\n+        let mut builder = ListBuilder::new(values_builder);\n+        let empty_list_array = builder.finish();\n+        Ok(Arc::new(empty_list_array))\n+    }};\n+}\n+\n+macro_rules! build_empty_list_array_with_non_primitive_items {\n+    ($builder:ident) => {{\n+        let values_builder = $builder::new(0);\n+        let mut builder = ListBuilder::new(values_builder);\n+        let empty_list_array = builder.finish();\n+        Ok(Arc::new(empty_list_array))\n+    }};\n+}\n+\n+fn build_empty_list_array(item_type: ArrowType) -> Result<ArrayRef> {\n+    match item_type {\n+        ArrowType::UInt8 => build_empty_list_array_with_primitive_items!(ArrowUInt8Type),\n+        ArrowType::UInt16 => {\n+            build_empty_list_array_with_primitive_items!(ArrowUInt16Type)\n+        }\n+        ArrowType::UInt32 => {\n+            build_empty_list_array_with_primitive_items!(ArrowUInt32Type)\n+        }\n+        ArrowType::UInt64 => {\n+            build_empty_list_array_with_primitive_items!(ArrowUInt64Type)\n+        }\n+        ArrowType::Int8 => build_empty_list_array_with_primitive_items!(ArrowInt8Type),\n+        ArrowType::Int16 => build_empty_list_array_with_primitive_items!(ArrowInt16Type),\n+        ArrowType::Int32 => build_empty_list_array_with_primitive_items!(ArrowInt32Type),\n+        ArrowType::Int64 => build_empty_list_array_with_primitive_items!(ArrowInt64Type),\n+        ArrowType::Float32 => {\n+            build_empty_list_array_with_primitive_items!(ArrowFloat32Type)\n+        }\n+        ArrowType::Float64 => {\n+            build_empty_list_array_with_primitive_items!(ArrowFloat64Type)\n+        }\n+        ArrowType::Boolean => {\n+            build_empty_list_array_with_primitive_items!(ArrowBooleanType)\n+        }\n+        ArrowType::Date32(_) => {\n+            build_empty_list_array_with_primitive_items!(ArrowDate32Type)\n+        }\n+        ArrowType::Date64(_) => {\n+            build_empty_list_array_with_primitive_items!(ArrowDate64Type)\n+        }\n+        ArrowType::Time32(ArrowTimeUnit::Second) => {\n+            build_empty_list_array_with_primitive_items!(ArrowTime32SecondType)\n+        }\n+        ArrowType::Time32(ArrowTimeUnit::Millisecond) => {\n+            build_empty_list_array_with_primitive_items!(ArrowTime32MillisecondType)\n+        }\n+        ArrowType::Time64(ArrowTimeUnit::Microsecond) => {\n+            build_empty_list_array_with_primitive_items!(ArrowTime64MicrosecondType)\n+        }\n+        ArrowType::Time64(ArrowTimeUnit::Nanosecond) => {\n+            build_empty_list_array_with_primitive_items!(ArrowTime64NanosecondType)\n+        }\n+        ArrowType::Duration(ArrowTimeUnit::Second) => {\n\nReview comment:\n       It looks like the PrimitiveArrayReader implementation [supports Duration] (https://github.com/apache/arrow/blob/master/rust/parquet/src/arrow/array_reader.rs#L206)\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-04T02:01:39.024+0000",
                    "updated": "2020-05-04T02:01:39.024+0000",
                    "started": "2020-05-04T02:01:39.023+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "429986",
                    "issueId": "13284909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13284909/worklog/429987",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mcassels commented on a change in pull request #6770:\nURL: https://github.com/apache/arrow/pull/6770#discussion_r419189845\n\n\n\n##########\nFile path: rust/parquet/src/arrow/array_reader.rs\n##########\n@@ -468,6 +491,391 @@ where\n     }\n }\n \n+/// Implementation of list array reader.\n+pub struct ListArrayReader {\n+    item_reader: Box<dyn ArrayReader>,\n+    data_type: ArrowType,\n+    item_type: ArrowType,\n+    list_def_level: i16,\n+    list_rep_level: i16,\n+    def_level_buffer: Option<Buffer>,\n+    rep_level_buffer: Option<Buffer>,\n+}\n+\n+impl ListArrayReader {\n+    /// Construct list array reader.\n+    pub fn new(\n+        item_reader: Box<dyn ArrayReader>,\n+        data_type: ArrowType,\n+        item_type: ArrowType,\n+        def_level: i16,\n+        rep_level: i16,\n+    ) -> Self {\n+        Self {\n+            item_reader,\n+            data_type,\n+            item_type,\n+            list_def_level: def_level,\n+            list_rep_level: rep_level,\n+            def_level_buffer: None,\n+            rep_level_buffer: None,\n+        }\n+    }\n+}\n+\n+macro_rules! build_empty_list_array_with_primitive_items {\n+    ($item_type:ident) => {{\n+        let values_builder = PrimitiveBuilder::<$item_type>::new(0);\n+        let mut builder = ListBuilder::new(values_builder);\n+        let empty_list_array = builder.finish();\n+        Ok(Arc::new(empty_list_array))\n+    }};\n+}\n+\n+macro_rules! build_empty_list_array_with_non_primitive_items {\n+    ($builder:ident) => {{\n+        let values_builder = $builder::new(0);\n+        let mut builder = ListBuilder::new(values_builder);\n+        let empty_list_array = builder.finish();\n+        Ok(Arc::new(empty_list_array))\n+    }};\n+}\n+\n+fn build_empty_list_array(item_type: ArrowType) -> Result<ArrayRef> {\n+    match item_type {\n+        ArrowType::UInt8 => build_empty_list_array_with_primitive_items!(ArrowUInt8Type),\n+        ArrowType::UInt16 => {\n+            build_empty_list_array_with_primitive_items!(ArrowUInt16Type)\n+        }\n+        ArrowType::UInt32 => {\n+            build_empty_list_array_with_primitive_items!(ArrowUInt32Type)\n+        }\n+        ArrowType::UInt64 => {\n+            build_empty_list_array_with_primitive_items!(ArrowUInt64Type)\n+        }\n+        ArrowType::Int8 => build_empty_list_array_with_primitive_items!(ArrowInt8Type),\n+        ArrowType::Int16 => build_empty_list_array_with_primitive_items!(ArrowInt16Type),\n+        ArrowType::Int32 => build_empty_list_array_with_primitive_items!(ArrowInt32Type),\n+        ArrowType::Int64 => build_empty_list_array_with_primitive_items!(ArrowInt64Type),\n+        ArrowType::Float32 => {\n+            build_empty_list_array_with_primitive_items!(ArrowFloat32Type)\n+        }\n+        ArrowType::Float64 => {\n+            build_empty_list_array_with_primitive_items!(ArrowFloat64Type)\n+        }\n+        ArrowType::Boolean => {\n+            build_empty_list_array_with_primitive_items!(ArrowBooleanType)\n+        }\n+        ArrowType::Date32(_) => {\n+            build_empty_list_array_with_primitive_items!(ArrowDate32Type)\n+        }\n+        ArrowType::Date64(_) => {\n+            build_empty_list_array_with_primitive_items!(ArrowDate64Type)\n+        }\n+        ArrowType::Time32(ArrowTimeUnit::Second) => {\n+            build_empty_list_array_with_primitive_items!(ArrowTime32SecondType)\n+        }\n+        ArrowType::Time32(ArrowTimeUnit::Millisecond) => {\n+            build_empty_list_array_with_primitive_items!(ArrowTime32MillisecondType)\n+        }\n+        ArrowType::Time64(ArrowTimeUnit::Microsecond) => {\n+            build_empty_list_array_with_primitive_items!(ArrowTime64MicrosecondType)\n+        }\n+        ArrowType::Time64(ArrowTimeUnit::Nanosecond) => {\n+            build_empty_list_array_with_primitive_items!(ArrowTime64NanosecondType)\n+        }\n+        ArrowType::Duration(ArrowTimeUnit::Second) => {\n\nReview comment:\n       It looks like the PrimitiveArrayReader implementation [supports Duration](https://github.com/apache/arrow/blob/master/rust/parquet/src/arrow/array_reader.rs#L206)\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-04T02:02:22.292+0000",
                    "updated": "2020-05-04T02:02:22.292+0000",
                    "started": "2020-05-04T02:02:22.292+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "429987",
                    "issueId": "13284909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13284909/worklog/430013",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on a change in pull request #6770:\nURL: https://github.com/apache/arrow/pull/6770#discussion_r419233839\n\n\n\n##########\nFile path: rust/parquet/src/arrow/array_reader.rs\n##########\n@@ -468,6 +491,391 @@ where\n     }\n }\n \n+/// Implementation of list array reader.\n+pub struct ListArrayReader {\n+    item_reader: Box<dyn ArrayReader>,\n+    data_type: ArrowType,\n+    item_type: ArrowType,\n+    list_def_level: i16,\n+    list_rep_level: i16,\n+    def_level_buffer: Option<Buffer>,\n+    rep_level_buffer: Option<Buffer>,\n+}\n+\n+impl ListArrayReader {\n+    /// Construct list array reader.\n+    pub fn new(\n+        item_reader: Box<dyn ArrayReader>,\n+        data_type: ArrowType,\n+        item_type: ArrowType,\n+        def_level: i16,\n+        rep_level: i16,\n+    ) -> Self {\n+        Self {\n+            item_reader,\n+            data_type,\n+            item_type,\n+            list_def_level: def_level,\n+            list_rep_level: rep_level,\n+            def_level_buffer: None,\n+            rep_level_buffer: None,\n+        }\n+    }\n+}\n+\n+macro_rules! build_empty_list_array_with_primitive_items {\n+    ($item_type:ident) => {{\n+        let values_builder = PrimitiveBuilder::<$item_type>::new(0);\n+        let mut builder = ListBuilder::new(values_builder);\n+        let empty_list_array = builder.finish();\n+        Ok(Arc::new(empty_list_array))\n+    }};\n+}\n+\n+macro_rules! build_empty_list_array_with_non_primitive_items {\n+    ($builder:ident) => {{\n+        let values_builder = $builder::new(0);\n+        let mut builder = ListBuilder::new(values_builder);\n+        let empty_list_array = builder.finish();\n+        Ok(Arc::new(empty_list_array))\n+    }};\n+}\n+\n+fn build_empty_list_array(item_type: ArrowType) -> Result<ArrayRef> {\n+    match item_type {\n+        ArrowType::UInt8 => build_empty_list_array_with_primitive_items!(ArrowUInt8Type),\n+        ArrowType::UInt16 => {\n+            build_empty_list_array_with_primitive_items!(ArrowUInt16Type)\n+        }\n+        ArrowType::UInt32 => {\n+            build_empty_list_array_with_primitive_items!(ArrowUInt32Type)\n+        }\n+        ArrowType::UInt64 => {\n+            build_empty_list_array_with_primitive_items!(ArrowUInt64Type)\n+        }\n+        ArrowType::Int8 => build_empty_list_array_with_primitive_items!(ArrowInt8Type),\n+        ArrowType::Int16 => build_empty_list_array_with_primitive_items!(ArrowInt16Type),\n+        ArrowType::Int32 => build_empty_list_array_with_primitive_items!(ArrowInt32Type),\n+        ArrowType::Int64 => build_empty_list_array_with_primitive_items!(ArrowInt64Type),\n+        ArrowType::Float32 => {\n+            build_empty_list_array_with_primitive_items!(ArrowFloat32Type)\n+        }\n+        ArrowType::Float64 => {\n+            build_empty_list_array_with_primitive_items!(ArrowFloat64Type)\n+        }\n+        ArrowType::Boolean => {\n+            build_empty_list_array_with_primitive_items!(ArrowBooleanType)\n+        }\n+        ArrowType::Date32(_) => {\n+            build_empty_list_array_with_primitive_items!(ArrowDate32Type)\n+        }\n+        ArrowType::Date64(_) => {\n+            build_empty_list_array_with_primitive_items!(ArrowDate64Type)\n+        }\n+        ArrowType::Time32(ArrowTimeUnit::Second) => {\n+            build_empty_list_array_with_primitive_items!(ArrowTime32SecondType)\n+        }\n+        ArrowType::Time32(ArrowTimeUnit::Millisecond) => {\n+            build_empty_list_array_with_primitive_items!(ArrowTime32MillisecondType)\n+        }\n+        ArrowType::Time64(ArrowTimeUnit::Microsecond) => {\n+            build_empty_list_array_with_primitive_items!(ArrowTime64MicrosecondType)\n+        }\n+        ArrowType::Time64(ArrowTimeUnit::Nanosecond) => {\n+            build_empty_list_array_with_primitive_items!(ArrowTime64NanosecondType)\n+        }\n+        ArrowType::Duration(ArrowTimeUnit::Second) => {\n\nReview comment:\n       That's probably incorrect, but we can clarify/fix the behaviour of the readers at a later stage.\n\n##########\nFile path: rust/parquet/src/arrow/array_reader.rs\n##########\n@@ -468,6 +491,391 @@ where\n     }\n }\n \n+/// Implementation of list array reader.\n+pub struct ListArrayReader {\n+    item_reader: Box<dyn ArrayReader>,\n+    data_type: ArrowType,\n+    item_type: ArrowType,\n+    list_def_level: i16,\n+    list_rep_level: i16,\n+    def_level_buffer: Option<Buffer>,\n+    rep_level_buffer: Option<Buffer>,\n+}\n+\n+impl ListArrayReader {\n+    /// Construct list array reader.\n+    pub fn new(\n+        item_reader: Box<dyn ArrayReader>,\n+        data_type: ArrowType,\n+        item_type: ArrowType,\n+        def_level: i16,\n+        rep_level: i16,\n+    ) -> Self {\n+        Self {\n+            item_reader,\n+            data_type,\n+            item_type,\n+            list_def_level: def_level,\n+            list_rep_level: rep_level,\n+            def_level_buffer: None,\n+            rep_level_buffer: None,\n+        }\n+    }\n+}\n+\n+macro_rules! build_empty_list_array_with_primitive_items {\n+    ($item_type:ident) => {{\n+        let values_builder = PrimitiveBuilder::<$item_type>::new(0);\n+        let mut builder = ListBuilder::new(values_builder);\n+        let empty_list_array = builder.finish();\n+        Ok(Arc::new(empty_list_array))\n+    }};\n+}\n+\n+macro_rules! build_empty_list_array_with_non_primitive_items {\n+    ($builder:ident) => {{\n+        let values_builder = $builder::new(0);\n+        let mut builder = ListBuilder::new(values_builder);\n+        let empty_list_array = builder.finish();\n+        Ok(Arc::new(empty_list_array))\n+    }};\n+}\n+\n+fn build_empty_list_array(item_type: ArrowType) -> Result<ArrayRef> {\n+    match item_type {\n+        ArrowType::UInt8 => build_empty_list_array_with_primitive_items!(ArrowUInt8Type),\n+        ArrowType::UInt16 => {\n+            build_empty_list_array_with_primitive_items!(ArrowUInt16Type)\n+        }\n+        ArrowType::UInt32 => {\n+            build_empty_list_array_with_primitive_items!(ArrowUInt32Type)\n+        }\n+        ArrowType::UInt64 => {\n+            build_empty_list_array_with_primitive_items!(ArrowUInt64Type)\n+        }\n+        ArrowType::Int8 => build_empty_list_array_with_primitive_items!(ArrowInt8Type),\n+        ArrowType::Int16 => build_empty_list_array_with_primitive_items!(ArrowInt16Type),\n+        ArrowType::Int32 => build_empty_list_array_with_primitive_items!(ArrowInt32Type),\n+        ArrowType::Int64 => build_empty_list_array_with_primitive_items!(ArrowInt64Type),\n+        ArrowType::Float32 => {\n+            build_empty_list_array_with_primitive_items!(ArrowFloat32Type)\n+        }\n+        ArrowType::Float64 => {\n+            build_empty_list_array_with_primitive_items!(ArrowFloat64Type)\n+        }\n+        ArrowType::Boolean => {\n+            build_empty_list_array_with_primitive_items!(ArrowBooleanType)\n+        }\n+        ArrowType::Date32(_) => {\n+            build_empty_list_array_with_primitive_items!(ArrowDate32Type)\n+        }\n+        ArrowType::Date64(_) => {\n+            build_empty_list_array_with_primitive_items!(ArrowDate64Type)\n+        }\n+        ArrowType::Time32(ArrowTimeUnit::Second) => {\n+            build_empty_list_array_with_primitive_items!(ArrowTime32SecondType)\n+        }\n+        ArrowType::Time32(ArrowTimeUnit::Millisecond) => {\n+            build_empty_list_array_with_primitive_items!(ArrowTime32MillisecondType)\n+        }\n+        ArrowType::Time64(ArrowTimeUnit::Microsecond) => {\n+            build_empty_list_array_with_primitive_items!(ArrowTime64MicrosecondType)\n+        }\n+        ArrowType::Time64(ArrowTimeUnit::Nanosecond) => {\n+            build_empty_list_array_with_primitive_items!(ArrowTime64NanosecondType)\n+        }\n+        ArrowType::Duration(ArrowTimeUnit::Second) => {\n\nReview comment:\n       That's probably incorrect, but we can clarify/fix the behaviour of the readers at a later stage.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-04T06:32:16.171+0000",
                    "updated": "2020-05-04T06:32:16.171+0000",
                    "started": "2020-05-04T06:32:16.170+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "430013",
                    "issueId": "13284909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13284909/worklog/430501",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "maxburke commented on pull request #6770:\nURL: https://github.com/apache/arrow/pull/6770#issuecomment-623814755\n\n\n   Is there anything else that needs to be taken care of in order to have this merged?\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-05T03:34:36.728+0000",
                    "updated": "2020-05-05T03:34:36.728+0000",
                    "started": "2020-05-05T03:34:36.728+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "430501",
                    "issueId": "13284909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13284909/worklog/430603",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on pull request #6770:\nURL: https://github.com/apache/arrow/pull/6770#issuecomment-623955192\n\n\n   > Is there anything else that needs to be taken care of in order to have this merged?\r\n   \r\n   We need to wait for https://github.com/apache/parquet-testing/pull/11 to be merged, then update the submodule so that the tests pass.\r\n   \r\n   @sunchao @paddyhoran may you please also have a look at this when you get a chance. I have some slight concerns around Arrow <-> Parquet format support, but I'm comfortable that we'll be able to pick up any required changes when we progress with the Arrow to Parquet writer.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-05T09:37:43.226+0000",
                    "updated": "2020-05-05T09:37:43.226+0000",
                    "started": "2020-05-05T09:37:43.225+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "430603",
                    "issueId": "13284909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13284909/worklog/430616",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on pull request #6770:\nURL: https://github.com/apache/arrow/pull/6770#issuecomment-623966815\n\n\n   @mcassels may you please kindly rebase and update the submodule?\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-05T10:05:51.917+0000",
                    "updated": "2020-05-05T10:05:51.917+0000",
                    "started": "2020-05-05T10:05:51.917+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "430616",
                    "issueId": "13284909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13284909/worklog/433813",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "maxburke commented on pull request #6770:\nURL: https://github.com/apache/arrow/pull/6770#issuecomment-629397472\n\n\n   > Sorry for the late response @maxburke . I'll take a look at this today.\r\n   \r\n   I hate to keep poking but were you able to have a look at this? We're really hoping to get back onto the master branch of Arrow\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-15T17:55:46.060+0000",
                    "updated": "2020-05-15T17:55:46.060+0000",
                    "started": "2020-05-15T17:55:46.059+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "433813",
                    "issueId": "13284909"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 33000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5d114020[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4cd9461a[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5f41a042[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@592ed426[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4e89e8de[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@71398fcc[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@23287219[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@c081dbe[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@dc6dbf9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@303c6262[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@50e466c6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@1ccd6489[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 33000,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Oct 17 19:14:38 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-10-17T19:14:38.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7842/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2020-02-12T19:40:56.000+0000",
        "updated": "2020-12-27T11:10:25.000+0000",
        "timeoriginalestimate": null,
        "description": "Currently array reader does not support list or map types. The initial PR implementing array reader\u00a0\u00a0https://issues.apache.org/jira/browse/ARROW-4218\u00a0says that list and map support will come later. Is it known when support for list types might be implemented?",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "9h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 33000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] [Parquet] Implement array reader for list type",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13284909/comment/17216021",
                    "id": "17216021",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=nevi_me",
                        "name": "nevi_me",
                        "key": "nevi_me",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=nevi_me&avatarId=24271",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nevi_me&avatarId=24271",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nevi_me&avatarId=24271",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nevi_me&avatarId=24271"
                        },
                        "displayName": "Neville Dipale",
                        "active": true,
                        "timeZone": "Africa/Johannesburg"
                    },
                    "body": "Issue resolved by pull request 8449\n[https://github.com/apache/arrow/pull/8449]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=nevi_me",
                        "name": "nevi_me",
                        "key": "nevi_me",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=nevi_me&avatarId=24271",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nevi_me&avatarId=24271",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nevi_me&avatarId=24271",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nevi_me&avatarId=24271"
                        },
                        "displayName": "Neville Dipale",
                        "active": true,
                        "timeZone": "Africa/Johannesburg"
                    },
                    "created": "2020-10-17T19:14:38.678+0000",
                    "updated": "2020-10-17T19:14:38.678+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0bfg0:",
        "customfield_12314139": null
    }
}