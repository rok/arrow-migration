{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13197820",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197820",
    "key": "ARROW-3767",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12344925",
                "id": "12344925",
                "description": "",
                "name": "0.14.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-07-04"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12560342",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12560342",
                "type": {
                    "id": "12310051",
                    "name": "Supercedes",
                    "inward": "is superceded by",
                    "outward": "supercedes",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310051"
                },
                "outwardIssue": {
                    "id": "13206504",
                    "key": "ARROW-4119",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13206504",
                    "fields": {
                        "summary": "[C++] Clean up cast implementation from null to other types",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                            "name": "Closed",
                            "id": "6",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
            "name": "uwe",
            "key": "xhochy",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
            },
            "displayName": "Uwe Korn",
            "active": true,
            "timeZone": "Europe/Berlin"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
            "name": "uwe",
            "key": "xhochy",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
            },
            "displayName": "Uwe Korn",
            "active": true,
            "timeZone": "Europe/Berlin"
        },
        "aggregateprogress": {
            "progress": 18000,
            "total": 18000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 18000,
            "total": 18000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3767/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 31,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197820/worklog/232075",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4196: ARROW-3767: [C++] Add cast from null to any other type\nURL: https://github.com/apache/arrow/pull/4196\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-24T13:05:14.977+0000",
                    "updated": "2019-04-24T13:05:14.977+0000",
                    "started": "2019-04-24T13:05:14.977+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "232075",
                    "issueId": "13197820"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197820/worklog/232123",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4196: ARROW-3767: [C++] Add cast from null to any other type\nURL: https://github.com/apache/arrow/pull/4196#issuecomment-486246367\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4196?src=pr&el=h1) Report\n   > Merging [#4196](https://codecov.io/gh/apache/arrow/pull/4196?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/948379f2bb87480a44ca2218c0aaa9da7cd164ff?src=pr&el=desc) will **increase** coverage by `1.37%`.\n   > The diff coverage is `79.76%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4196/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4196?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4196      +/-   ##\n   ==========================================\n   + Coverage   87.78%   89.15%   +1.37%     \n   ==========================================\n     Files         758      617     -141     \n     Lines       92512    82238   -10274     \n     Branches     1251        0    -1251     \n   ==========================================\n   - Hits        81209    73319    -7890     \n   + Misses      11186     8919    -2267     \n   + Partials      117        0     -117\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4196?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/array/builder\\_dict.h](https://codecov.io/gh/apache/arrow/pull/4196/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hcnJheS9idWlsZGVyX2RpY3QuaA==) | `88.88% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/array/builder\\_dict.cc](https://codecov.io/gh/apache/arrow/pull/4196/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hcnJheS9idWlsZGVyX2RpY3QuY2M=) | `64.41% <0%> (-3.33%)` | :arrow_down: |\n   | [cpp/src/arrow/array/builder\\_base.cc](https://codecov.io/gh/apache/arrow/pull/4196/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hcnJheS9idWlsZGVyX2Jhc2UuY2M=) | `76.36% <0%> (-5.99%)` | :arrow_down: |\n   | [cpp/src/arrow/array/builder\\_nested.h](https://codecov.io/gh/apache/arrow/pull/4196/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hcnJheS9idWlsZGVyX25lc3RlZC5o) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/array/builder\\_adaptive.h](https://codecov.io/gh/apache/arrow/pull/4196/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hcnJheS9idWlsZGVyX2FkYXB0aXZlLmg=) | `93.75% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/compute/kernels/cast-test.cc](https://codecov.io/gh/apache/arrow/pull/4196/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jb21wdXRlL2tlcm5lbHMvY2FzdC10ZXN0LmNj) | `99.45% <100%> (-0.01%)` | :arrow_down: |\n   | [cpp/src/arrow/array/builder\\_primitive.h](https://codecov.io/gh/apache/arrow/pull/4196/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hcnJheS9idWlsZGVyX3ByaW1pdGl2ZS5o) | `95.8% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/compute/kernels/cast.cc](https://codecov.io/gh/apache/arrow/pull/4196/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jb21wdXRlL2tlcm5lbHMvY2FzdC5jYw==) | `91.56% <100%> (+0.86%)` | :arrow_up: |\n   | [cpp/src/arrow/array-binary-test.cc](https://codecov.io/gh/apache/arrow/pull/4196/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hcnJheS1iaW5hcnktdGVzdC5jYw==) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/array/builder\\_binary.cc](https://codecov.io/gh/apache/arrow/pull/4196/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hcnJheS9idWlsZGVyX2JpbmFyeS5jYw==) | `78.23% <100%> (+0.65%)` | :arrow_up: |\n   | ... and [147 more](https://codecov.io/gh/apache/arrow/pull/4196/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4196?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4196?src=pr&el=footer). Last update [948379f...9b5a968](https://codecov.io/gh/apache/arrow/pull/4196?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-24T14:03:08.210+0000",
                    "updated": "2019-04-24T14:03:08.210+0000",
                    "started": "2019-04-24T14:03:08.209+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "232123",
                    "issueId": "13197820"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197820/worklog/232204",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #4196: ARROW-3767: [C++] Add cast from null to any other type\nURL: https://github.com/apache/arrow/pull/4196#issuecomment-486309631\n \n \n   @fsaintjacques \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-24T16:10:35.633+0000",
                    "updated": "2019-04-24T16:10:35.633+0000",
                    "started": "2019-04-24T16:10:35.632+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "232204",
                    "issueId": "13197820"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197820/worklog/232871",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #4196: ARROW-3767: [C++] Add cast from null to any other type\nURL: https://github.com/apache/arrow/pull/4196#discussion_r278545997\n \n \n\n ##########\n File path: cpp/src/arrow/array-binary-test.cc\n ##########\n @@ -42,6 +42,30 @@ using internal::checked_cast;\n // ----------------------------------------------------------------------\n // String / Binary tests\n \n+template <typename ArrayType>\n+void CheckStringArray(const ArrayType& array, const std::vector<std::string>& strings,\n+                      const std::vector<uint8_t>& is_valid, int repeats = 1) {\n+  int64_t length = array.length();\n+  int64_t base_length = static_cast<int64_t>(strings.size());\n+  ASSERT_EQ(base_length, static_cast<int64_t>(is_valid.size()));\n+\n+  int32_t value_pos = 0;\n+  int32_t value_length;\n+  for (int i = 0; i < length; ++i) {\n+    auto j = i % base_length;\n+    if (is_valid[j]) {\n+      ASSERT_FALSE(array.IsNull(i));\n+      array.GetValue(i, &value_length);\n \n Review comment:\n   Might want to get a string_view, could simplify this body a tiny bit, or make it clearer.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-25T13:53:07.331+0000",
                    "updated": "2019-04-25T13:53:07.331+0000",
                    "started": "2019-04-25T13:53:07.330+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "232871",
                    "issueId": "13197820"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197820/worklog/232872",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #4196: ARROW-3767: [C++] Add cast from null to any other type\nURL: https://github.com/apache/arrow/pull/4196#discussion_r278553108\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -688,6 +680,35 @@ class ListCastKernel : public CastKernelBase {\n   std::unique_ptr<UnaryKernel> child_caster_;\n };\n \n+// ----------------------------------------------------------------------\n+// Null to other things\n+\n+class FromNullCastKernel : public CastKernelBase {\n+ public:\n+  explicit FromNullCastKernel(std::shared_ptr<DataType> out_type)\n+      : CastKernelBase(std::move(out_type)) {}\n+\n+  Status Call(FunctionContext* ctx, const Datum& input, Datum* out) override {\n+    DCHECK_EQ(Datum::ARRAY, input.kind());\n+\n+    const ArrayData& in_data = *input.array();\n+    DCHECK_EQ(Type::NA, in_data.type->id());\n+    auto length = in_data.length;\n+\n+    // A ArrayData may be preallocated for the output (see InvokeUnaryArrayKernel),\n+    // however, it doesn't have any actual data, so throw it away and start anew.\n+    std::unique_ptr<ArrayBuilder> builder;\n+    RETURN_NOT_OK(MakeBuilder(ctx->memory_pool(), out_type_, &builder));\n+    RETURN_NOT_OK(builder->Reserve(length));\n \n Review comment:\n   Isn't this implied by `AppendNulls(lenght)`?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-25T13:53:07.633+0000",
                    "updated": "2019-04-25T13:53:07.633+0000",
                    "started": "2019-04-25T13:53:07.633+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "232872",
                    "issueId": "13197820"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197820/worklog/232873",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #4196: ARROW-3767: [C++] Add cast from null to any other type\nURL: https://github.com/apache/arrow/pull/4196#discussion_r278554087\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast-test.cc\n ##########\n @@ -1264,5 +1173,103 @@ TEST_F(TestCast, EmptyCasts) {\n   }\n }\n \n+// ----------------------------------------------------------------------\n+// Test casting from NullType\n+\n+template <typename TestType>\n+class TestNullCast : public TestCast {};\n+\n+typedef ::testing::Types<NullType, UInt8Type, Int8Type, UInt16Type, Int16Type, Int32Type,\n+                         UInt32Type, UInt64Type, Int64Type, FloatType, DoubleType,\n+                         Date32Type, Date64Type, FixedSizeBinaryType, BinaryType>\n+    TestTypes;\n+\n+TYPED_TEST_CASE(TestNullCast, TestTypes);\n+\n+TYPED_TEST(TestNullCast, FromNull) {\n+  // Null casts to everything\n+  const int length = 10;\n+\n+  // Hack to get a DataType including for parametric types\n+  std::shared_ptr<DataType> out_type =\n+      TestBase::MakeRandomArray<typename TypeTraits<TypeParam>::ArrayType>(0, 0)->type();\n+\n+  NullArray arr(length);\n+\n+  std::shared_ptr<Array> result;\n+  ASSERT_OK(Cast(&this->ctx_, arr, out_type, {}, &result));\n+  ASSERT_OK(ValidateArray(*result));\n+\n+  ASSERT_TRUE(result->type()->Equals(*out_type));\n+  ASSERT_EQ(length, result->length());\n+  ASSERT_EQ(length, result->null_count());\n+\n+  // OK to look at bitmaps\n+  ASSERT_ARRAYS_EQUAL(*result, *result);\n \n Review comment:\n   heh, why? Maybe extract the bitmap and ensure it's all zeroes? \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-25T13:53:07.663+0000",
                    "updated": "2019-04-25T13:53:07.663+0000",
                    "started": "2019-04-25T13:53:07.662+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "232873",
                    "issueId": "13197820"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197820/worklog/232874",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #4196: ARROW-3767: [C++] Add cast from null to any other type\nURL: https://github.com/apache/arrow/pull/4196#discussion_r278557844\n \n \n\n ##########\n File path: cpp/src/arrow/array/builder_dict.cc\n ##########\n @@ -258,13 +258,28 @@ Status DictionaryBuilder<T>::AppendNull() {\n   return values_builder_.AppendNull();\n }\n \n+template <typename T>\n+Status DictionaryBuilder<T>::AppendNulls(int64_t length) {\n+  length_ += length;\n+  null_count_ += length;\n+\n+  return values_builder_.AppendNulls(length);\n+}\n+\n Status DictionaryBuilder<NullType>::AppendNull() {\n   length_ += 1;\n   null_count_ += 1;\n \n   return values_builder_.AppendNull();\n }\n \n+Status DictionaryBuilder<NullType>::AppendNulls(int64_t length) {\n \n Review comment:\n   Do you need to specialize for NullType if the body is the same?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-25T13:53:07.707+0000",
                    "updated": "2019-04-25T13:53:07.707+0000",
                    "started": "2019-04-25T13:53:07.706+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "232874",
                    "issueId": "13197820"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197820/worklog/232875",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #4196: ARROW-3767: [C++] Add cast from null to any other type\nURL: https://github.com/apache/arrow/pull/4196#discussion_r278544505\n \n \n\n ##########\n File path: cpp/src/arrow/array-binary-test.cc\n ##########\n @@ -42,6 +42,30 @@ using internal::checked_cast;\n // ----------------------------------------------------------------------\n // String / Binary tests\n \n+template <typename ArrayType>\n+void CheckStringArray(const ArrayType& array, const std::vector<std::string>& strings,\n+                      const std::vector<uint8_t>& is_valid, int repeats = 1) {\n \n Review comment:\n   repeats seems unused. Maybe `ASSERT_EQ(length, base_length * repeats)`, though, not really testing the implementation but the test implementation.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-25T13:53:07.760+0000",
                    "updated": "2019-04-25T13:53:07.760+0000",
                    "started": "2019-04-25T13:53:07.759+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "232875",
                    "issueId": "13197820"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197820/worklog/232890",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #4196: ARROW-3767: [C++] Add cast from null to any other type\nURL: https://github.com/apache/arrow/pull/4196#issuecomment-486689630\n \n \n   Please don't merge. There's a bug for list arrays.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-25T14:12:08.262+0000",
                    "updated": "2019-04-25T14:12:08.262+0000",
                    "started": "2019-04-25T14:12:08.261+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "232890",
                    "issueId": "13197820"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197820/worklog/232891",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4196: ARROW-3767: [C++] Add cast from null to any other type\nURL: https://github.com/apache/arrow/pull/4196#discussion_r278569959\n \n \n\n ##########\n File path: cpp/src/arrow/array/builder_dict.cc\n ##########\n @@ -258,13 +258,28 @@ Status DictionaryBuilder<T>::AppendNull() {\n   return values_builder_.AppendNull();\n }\n \n+template <typename T>\n+Status DictionaryBuilder<T>::AppendNulls(int64_t length) {\n+  length_ += length;\n+  null_count_ += length;\n+\n+  return values_builder_.AppendNulls(length);\n+}\n+\n Status DictionaryBuilder<NullType>::AppendNull() {\n   length_ += 1;\n   null_count_ += 1;\n \n   return values_builder_.AppendNull();\n }\n \n+Status DictionaryBuilder<NullType>::AppendNulls(int64_t length) {\n \n Review comment:\n   Unfortunately yes, because those are separate implementations (otherwise the name is not found when linking).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-25T14:12:35.900+0000",
                    "updated": "2019-04-25T14:12:35.900+0000",
                    "started": "2019-04-25T14:12:35.899+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "232891",
                    "issueId": "13197820"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197820/worklog/232892",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4196: ARROW-3767: [C++] Add cast from null to any other type\nURL: https://github.com/apache/arrow/pull/4196#discussion_r278570204\n \n \n\n ##########\n File path: cpp/src/arrow/array-binary-test.cc\n ##########\n @@ -42,6 +42,30 @@ using internal::checked_cast;\n // ----------------------------------------------------------------------\n // String / Binary tests\n \n+template <typename ArrayType>\n+void CheckStringArray(const ArrayType& array, const std::vector<std::string>& strings,\n+                      const std::vector<uint8_t>& is_valid, int repeats = 1) {\n \n Review comment:\n   Ah, I should add that indeed.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-25T14:13:07.051+0000",
                    "updated": "2019-04-25T14:13:07.051+0000",
                    "started": "2019-04-25T14:13:07.051+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "232892",
                    "issueId": "13197820"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197820/worklog/232895",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4196: ARROW-3767: [C++] Add cast from null to any other type\nURL: https://github.com/apache/arrow/pull/4196#discussion_r278570759\n \n \n\n ##########\n File path: cpp/src/arrow/array-binary-test.cc\n ##########\n @@ -42,6 +42,30 @@ using internal::checked_cast;\n // ----------------------------------------------------------------------\n // String / Binary tests\n \n+template <typename ArrayType>\n+void CheckStringArray(const ArrayType& array, const std::vector<std::string>& strings,\n+                      const std::vector<uint8_t>& is_valid, int repeats = 1) {\n+  int64_t length = array.length();\n+  int64_t base_length = static_cast<int64_t>(strings.size());\n+  ASSERT_EQ(base_length, static_cast<int64_t>(is_valid.size()));\n+\n+  int32_t value_pos = 0;\n+  int32_t value_length;\n+  for (int i = 0; i < length; ++i) {\n+    auto j = i % base_length;\n+    if (is_valid[j]) {\n+      ASSERT_FALSE(array.IsNull(i));\n+      array.GetValue(i, &value_length);\n \n Review comment:\n   Hmm, right.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-25T14:14:06.186+0000",
                    "updated": "2019-04-25T14:14:06.186+0000",
                    "started": "2019-04-25T14:14:06.186+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "232895",
                    "issueId": "13197820"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197820/worklog/232896",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4196: ARROW-3767: [C++] Add cast from null to any other type\nURL: https://github.com/apache/arrow/pull/4196#discussion_r278571947\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast-test.cc\n ##########\n @@ -1264,5 +1173,103 @@ TEST_F(TestCast, EmptyCasts) {\n   }\n }\n \n+// ----------------------------------------------------------------------\n+// Test casting from NullType\n+\n+template <typename TestType>\n+class TestNullCast : public TestCast {};\n+\n+typedef ::testing::Types<NullType, UInt8Type, Int8Type, UInt16Type, Int16Type, Int32Type,\n+                         UInt32Type, UInt64Type, Int64Type, FloatType, DoubleType,\n+                         Date32Type, Date64Type, FixedSizeBinaryType, BinaryType>\n+    TestTypes;\n+\n+TYPED_TEST_CASE(TestNullCast, TestTypes);\n+\n+TYPED_TEST(TestNullCast, FromNull) {\n+  // Null casts to everything\n+  const int length = 10;\n+\n+  // Hack to get a DataType including for parametric types\n+  std::shared_ptr<DataType> out_type =\n+      TestBase::MakeRandomArray<typename TypeTraits<TypeParam>::ArrayType>(0, 0)->type();\n+\n+  NullArray arr(length);\n+\n+  std::shared_ptr<Array> result;\n+  ASSERT_OK(Cast(&this->ctx_, arr, out_type, {}, &result));\n+  ASSERT_OK(ValidateArray(*result));\n+\n+  ASSERT_TRUE(result->type()->Equals(*out_type));\n+  ASSERT_EQ(length, result->length());\n+  ASSERT_EQ(length, result->null_count());\n+\n+  // OK to look at bitmaps\n+  ASSERT_ARRAYS_EQUAL(*result, *result);\n \n Review comment:\n   This is just copied from another test :-) I'm not sure how to do it simply otherwise...\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-25T14:16:29.995+0000",
                    "updated": "2019-04-25T14:16:29.995+0000",
                    "started": "2019-04-25T14:16:29.994+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "232896",
                    "issueId": "13197820"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197820/worklog/232897",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4196: ARROW-3767: [C++] Add cast from null to any other type\nURL: https://github.com/apache/arrow/pull/4196#discussion_r278572125\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -688,6 +680,35 @@ class ListCastKernel : public CastKernelBase {\n   std::unique_ptr<UnaryKernel> child_caster_;\n };\n \n+// ----------------------------------------------------------------------\n+// Null to other things\n+\n+class FromNullCastKernel : public CastKernelBase {\n+ public:\n+  explicit FromNullCastKernel(std::shared_ptr<DataType> out_type)\n+      : CastKernelBase(std::move(out_type)) {}\n+\n+  Status Call(FunctionContext* ctx, const Datum& input, Datum* out) override {\n+    DCHECK_EQ(Datum::ARRAY, input.kind());\n+\n+    const ArrayData& in_data = *input.array();\n+    DCHECK_EQ(Type::NA, in_data.type->id());\n+    auto length = in_data.length;\n+\n+    // A ArrayData may be preallocated for the output (see InvokeUnaryArrayKernel),\n+    // however, it doesn't have any actual data, so throw it away and start anew.\n+    std::unique_ptr<ArrayBuilder> builder;\n+    RETURN_NOT_OK(MakeBuilder(ctx->memory_pool(), out_type_, &builder));\n+    RETURN_NOT_OK(builder->Reserve(length));\n \n Review comment:\n   Probably, yes. Will try to remove it.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-25T14:16:54.428+0000",
                    "updated": "2019-04-25T14:16:54.428+0000",
                    "started": "2019-04-25T14:16:54.428+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "232897",
                    "issueId": "13197820"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197820/worklog/232899",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #4196: ARROW-3767: [C++] Add cast from null to any other type\nURL: https://github.com/apache/arrow/pull/4196#discussion_r278572982\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast-test.cc\n ##########\n @@ -1264,5 +1173,103 @@ TEST_F(TestCast, EmptyCasts) {\n   }\n }\n \n+// ----------------------------------------------------------------------\n+// Test casting from NullType\n+\n+template <typename TestType>\n+class TestNullCast : public TestCast {};\n+\n+typedef ::testing::Types<NullType, UInt8Type, Int8Type, UInt16Type, Int16Type, Int32Type,\n+                         UInt32Type, UInt64Type, Int64Type, FloatType, DoubleType,\n+                         Date32Type, Date64Type, FixedSizeBinaryType, BinaryType>\n+    TestTypes;\n+\n+TYPED_TEST_CASE(TestNullCast, TestTypes);\n+\n+TYPED_TEST(TestNullCast, FromNull) {\n+  // Null casts to everything\n+  const int length = 10;\n+\n+  // Hack to get a DataType including for parametric types\n+  std::shared_ptr<DataType> out_type =\n+      TestBase::MakeRandomArray<typename TypeTraits<TypeParam>::ArrayType>(0, 0)->type();\n+\n+  NullArray arr(length);\n+\n+  std::shared_ptr<Array> result;\n+  ASSERT_OK(Cast(&this->ctx_, arr, out_type, {}, &result));\n+  ASSERT_OK(ValidateArray(*result));\n+\n+  ASSERT_TRUE(result->type()->Equals(*out_type));\n+  ASSERT_EQ(length, result->length());\n+  ASSERT_EQ(length, result->null_count());\n+\n+  // OK to look at bitmaps\n+  ASSERT_ARRAYS_EQUAL(*result, *result);\n \n Review comment:\n   I mean, I'm not sure what this line does, might as well just remove it. I recall that the Equal implementation will early exit if pointers are equal.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-25T14:18:40.084+0000",
                    "updated": "2019-04-25T14:18:40.084+0000",
                    "started": "2019-04-25T14:18:40.083+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "232899",
                    "issueId": "13197820"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197820/worklog/232929",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4196: ARROW-3767: [C++] Add cast from null to any other type\nURL: https://github.com/apache/arrow/pull/4196#discussion_r278598430\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast-test.cc\n ##########\n @@ -1264,5 +1173,103 @@ TEST_F(TestCast, EmptyCasts) {\n   }\n }\n \n+// ----------------------------------------------------------------------\n+// Test casting from NullType\n+\n+template <typename TestType>\n+class TestNullCast : public TestCast {};\n+\n+typedef ::testing::Types<NullType, UInt8Type, Int8Type, UInt16Type, Int16Type, Int32Type,\n+                         UInt32Type, UInt64Type, Int64Type, FloatType, DoubleType,\n+                         Date32Type, Date64Type, FixedSizeBinaryType, BinaryType>\n+    TestTypes;\n+\n+TYPED_TEST_CASE(TestNullCast, TestTypes);\n+\n+TYPED_TEST(TestNullCast, FromNull) {\n+  // Null casts to everything\n+  const int length = 10;\n+\n+  // Hack to get a DataType including for parametric types\n+  std::shared_ptr<DataType> out_type =\n+      TestBase::MakeRandomArray<typename TypeTraits<TypeParam>::ArrayType>(0, 0)->type();\n+\n+  NullArray arr(length);\n+\n+  std::shared_ptr<Array> result;\n+  ASSERT_OK(Cast(&this->ctx_, arr, out_type, {}, &result));\n+  ASSERT_OK(ValidateArray(*result));\n+\n+  ASSERT_TRUE(result->type()->Equals(*out_type));\n+  ASSERT_EQ(length, result->length());\n+  ASSERT_EQ(length, result->null_count());\n+\n+  // OK to look at bitmaps\n+  ASSERT_ARRAYS_EQUAL(*result, *result);\n \n Review comment:\n   Ah, I see. Then I'll simply remove it. Hopefully validating the result array is enough.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-25T15:10:14.769+0000",
                    "updated": "2019-04-25T15:10:14.769+0000",
                    "started": "2019-04-25T15:10:14.769+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "232929",
                    "issueId": "13197820"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197820/worklog/232943",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #4196: ARROW-3767: [C++] Add cast from null to any other type\nURL: https://github.com/apache/arrow/pull/4196#issuecomment-486689630\n \n \n   Please don't merge. There's a bug for list arrays.\r\n   \r\n   Edit: fixed now.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-25T15:28:50.957+0000",
                    "updated": "2019-04-25T15:28:50.957+0000",
                    "started": "2019-04-25T15:28:50.957+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "232943",
                    "issueId": "13197820"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197820/worklog/233506",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #4196: ARROW-3767: [C++] Add cast from null to any other type\nURL: https://github.com/apache/arrow/pull/4196#discussion_r278944222\n \n \n\n ##########\n File path: cpp/src/arrow/array/builder_union.h\n ##########\n @@ -47,12 +47,23 @@ class ARROW_EXPORT DenseUnionBuilder : public ArrayBuilder {\n   explicit DenseUnionBuilder(MemoryPool* pool,\n                              const std::shared_ptr<DataType>& type = NULLPTR);\n \n-  Status AppendNull() {\n+  Status AppendNull() final {\n     ARROW_RETURN_NOT_OK(types_builder_.Append(0));\n     ARROW_RETURN_NOT_OK(offsets_builder_.Append(0));\n     return AppendToBitmap(false);\n   }\n \n+  Status AppendNulls(int64_t length) final {\n+    ARROW_RETURN_NOT_OK(types_builder_.Reserve(length));\n+    ARROW_RETURN_NOT_OK(offsets_builder_.Reserve(length));\n+    ARROW_RETURN_NOT_OK(Reserve(length));\n+    for (int64_t i = 0; i < length; ++i) {\n \n Review comment:\n   Also memcpy worthy.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-26T13:39:43.901+0000",
                    "updated": "2019-04-26T13:39:43.901+0000",
                    "started": "2019-04-26T13:39:43.900+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "233506",
                    "issueId": "13197820"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197820/worklog/233507",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #4196: ARROW-3767: [C++] Add cast from null to any other type\nURL: https://github.com/apache/arrow/pull/4196#discussion_r278943695\n \n \n\n ##########\n File path: cpp/src/arrow/array/builder_nested.cc\n ##########\n @@ -72,6 +78,17 @@ Status ListBuilder::Append(bool is_valid) {\n   return AppendNextOffset();\n }\n \n+Status ListBuilder::AppendNulls(int64_t length) {\n+  RETURN_NOT_OK(Reserve(length));\n+  RETURN_NOT_OK(CheckNextOffset());\n+  UnsafeAppendToBitmap(length, false);\n+  const int64_t num_values = value_builder_->length();\n+  for (int64_t i = 0; i < length; ++i) {\n \n Review comment:\n   memcpy instead of the whole loop?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-26T13:39:43.903+0000",
                    "updated": "2019-04-26T13:39:43.903+0000",
                    "started": "2019-04-26T13:39:43.902+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "233507",
                    "issueId": "13197820"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197820/worklog/234538",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #4196: ARROW-3767: [C++] Add cast from null to any other type\nURL: https://github.com/apache/arrow/pull/4196#issuecomment-487600982\n \n \n   AppVeyor build: https://ci.appveyor.com/project/pitrou/arrow/builds/24174651\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-29T14:25:52.465+0000",
                    "updated": "2019-04-29T14:25:52.465+0000",
                    "started": "2019-04-29T14:25:52.465+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "234538",
                    "issueId": "13197820"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 18000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@3f28203a[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6ae98e57[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@86e56c4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@2e53eaa8[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@32a21f4b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@8aff78f[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@728d5828[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@433aea7b[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@61c0fd10[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@16a47d28[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@e703bcc[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@1a8d614b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 18000,
        "customfield_12312520": null,
        "customfield_12312521": "Fri May 03 22:55:23 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-05-03T22:55:23.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3767/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2018-11-12T14:31:51.000+0000",
        "updated": "2019-05-07T15:42:11.000+0000",
        "timeoriginalestimate": null,
        "description": "Casting a column from NullType to any other type is possible as the resulting array will also be all-null but simply with a different type annotation.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 18000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Add cast for Null to any type",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197820/comment/16683866",
                    "id": "16683866",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Some memory buffers will have to be allocated to conform to the columnar format (for primitive types, string, lists, etc.) but that shouldn't be too bad to build. We should try to use as much common utility code for this as possible",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-11-12T14:34:49.760+0000",
                    "updated": "2018-11-12T14:34:49.760+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197820/comment/16832909",
                    "id": "16832909",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 4196\n[https://github.com/apache/arrow/pull/4196]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-05-03T22:55:23.586+0000",
                    "updated": "2019-05-03T22:55:23.586+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|s00e88:",
        "customfield_12314139": null
    }
}