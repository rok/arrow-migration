{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13375975",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13375975",
    "key": "ARROW-12607",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350591",
                "id": "12350591",
                "description": "",
                "name": "7.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-02-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=zhztheplayer",
            "name": "zhztheplayer",
            "key": "zhztheplayer",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Hongze Zhang",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332532",
                "id": "12332532",
                "name": "Documentation"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=zhztheplayer",
            "name": "zhztheplayer",
            "key": "zhztheplayer",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Hongze Zhang",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=zhztheplayer",
            "name": "zhztheplayer",
            "key": "zhztheplayer",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Hongze Zhang",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 14400,
            "total": 14400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 14400,
            "total": 14400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12607/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 24,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13375975/worklog/597216",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zhztheplayer opened a new pull request #10333:\nURL: https://github.com/apache/arrow/pull/10333\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-15T13:41:08.544+0000",
                    "updated": "2021-05-15T13:41:08.544+0000",
                    "started": "2021-05-15T13:41:08.544+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "597216",
                    "issueId": "13375975"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13375975/worklog/597217",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10333:\nURL: https://github.com/apache/arrow/pull/10333#issuecomment-841660817\n\n\n   https://issues.apache.org/jira/browse/ARROW-12607\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-15T13:41:32.253+0000",
                    "updated": "2021-05-15T13:41:32.253+0000",
                    "started": "2021-05-15T13:41:32.252+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "597217",
                    "issueId": "13375975"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13375975/worklog/597234",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kiszk commented on a change in pull request #10333:\nURL: https://github.com/apache/arrow/pull/10333#discussion_r632973238\n\n\n\n##########\nFile path: docs/source/java/dataset.rst\n##########\n@@ -0,0 +1,192 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+===========\n+Dataset\n+===========\n+\n+.. warning::\n+\n+    Experimental: The Java module ``dataset`` is currently under early development. API might be changed in each release of Apache Arrow until it gets mature.\n+\n+Dataset is an universal layer in Apache Arrow for querying data in different formats or in different paritionning strategies. Usually the data to be queried is\n+supposed to be located from a traditional file system, but Dataset API is not designed only for querying files but can be extended to serve all possible data sources\n+such as from inter-process communication or from other network locations, etc. \n+\n+Getting Started\n+===========\n+\n+Below shows a simplest example of using Dataset to query a Parquet file in Java:\n+\n+.. code-block:: Java\n+\n+    // read data from file /opt/example.parquet\n+    String uri = \"file:///opt/example.parquet\";\n+    BufferAllocator allocator = new RootAllocator(Long.MAX_VALUE);\n+    DatasetFactory factory = new FileSystemDatasetFactory(allocator, NativeMemoryPool.getDefault(),\n+        FileFormat.PARQUET, uri);\n+    Dataset dataset = factory.finish();\n+    Scanner scanner = dataset.newScan(new ScanOptions(new String[0], 100));\n+    List<ArrowRecordBatch> batches = StreamSupport.stream(scanner.scan().spliterator(), false)\n+        .flatMap(t -> stream(t.execute()))\n+        .collect(Collectors.toList());\n+    \n+    // do something with read record batches, for example:\n+    analyzeArrowData(batches);\n+    \n+    // finished the analysis of the data, close all resources:\n+    AutoCloseables.close(batches);\n+    AutoCloseables.close(factory, dataset, scanner);\n+\n+.. note::\n+    ``ArrowRecordBatch`` is a low-level composite Arrow data exchange format that doesn't provide API to read typed data from it directly. It's recommended\n+    to use utilities ``VectorLoader`` to load it into a schema aware container ``VectorSchemaRoot`` by which user could be able to access decoded data\n+    conveniently in Java.\n+\n+.. seealso::\n+   Load record batches with :doc:`VectorSchemaRoot <vector_schema_root>`.\n+\n+Schema\n+===========\n+\n+Schema of the data to be queried can be inspected via method ``DatasetFactory#inspect()`` before actually reading it. For example:\n+\n+.. code-block:: Java\n+\n+    // read data from local file /opt/example.parquet\n+    String uri = \"file:///opt/example.parquet\";\n+    BufferAllocator allocator = new RootAllocator(Long.MAX_VALUE);\n+    DatasetFactory factory = new FileSystemDatasetFactory(allocator, NativeMemoryPool.getDefault(),\n+        FileFormat.PARQUET, uri);\n+    \n+    // inspect schema\n+    Schema schema = factory.inspect();\n+ \n+For some of the data format that is compatible with a user-defined schema, user can use method ``DatasetFactory#inspect(Schema schema)`` to create the dataset:\n+\n+.. code-block:: Java\n+\n+    Schema schema = createUserSchema()\n+    Dataset dataset = factory.finish(schema);\n+\n+Otherwise when the non-parameter method ``DatasetFactory#inspect()`` is called, schema will be inferred automatically from data source. The same as the result of\n+``DatasetFactory#inspect()``.\n+\n+Also, if projector is specified during scanning (see next section :ref:`Projection`), the actual schema of output data can be got within method ``Scanner::schema()``:\n+\n+.. code-block:: Java\n+\n+    Scanner scanner = dataset.newScan(new ScanOptions(new String[] {\"id\", \"name\"}, 100));\n+    Schema projectedSchema = scanner.schema();\n+ \n+Projection\n+===========\n+\n+User can specify projections in ScanOptions. For ``FileSystemDataset``, only column projection is allowed for now. Which means, only column names\n\nReview comment:\n       nit: now. -> now,  ??\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-15T15:29:41.640+0000",
                    "updated": "2021-05-15T15:29:41.640+0000",
                    "started": "2021-05-15T15:29:41.640+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "597234",
                    "issueId": "13375975"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13375975/worklog/597235",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kiszk commented on a change in pull request #10333:\nURL: https://github.com/apache/arrow/pull/10333#discussion_r632973238\n\n\n\n##########\nFile path: docs/source/java/dataset.rst\n##########\n@@ -0,0 +1,192 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+===========\n+Dataset\n+===========\n+\n+.. warning::\n+\n+    Experimental: The Java module ``dataset`` is currently under early development. API might be changed in each release of Apache Arrow until it gets mature.\n+\n+Dataset is an universal layer in Apache Arrow for querying data in different formats or in different paritionning strategies. Usually the data to be queried is\n+supposed to be located from a traditional file system, but Dataset API is not designed only for querying files but can be extended to serve all possible data sources\n+such as from inter-process communication or from other network locations, etc. \n+\n+Getting Started\n+===========\n+\n+Below shows a simplest example of using Dataset to query a Parquet file in Java:\n+\n+.. code-block:: Java\n+\n+    // read data from file /opt/example.parquet\n+    String uri = \"file:///opt/example.parquet\";\n+    BufferAllocator allocator = new RootAllocator(Long.MAX_VALUE);\n+    DatasetFactory factory = new FileSystemDatasetFactory(allocator, NativeMemoryPool.getDefault(),\n+        FileFormat.PARQUET, uri);\n+    Dataset dataset = factory.finish();\n+    Scanner scanner = dataset.newScan(new ScanOptions(new String[0], 100));\n+    List<ArrowRecordBatch> batches = StreamSupport.stream(scanner.scan().spliterator(), false)\n+        .flatMap(t -> stream(t.execute()))\n+        .collect(Collectors.toList());\n+    \n+    // do something with read record batches, for example:\n+    analyzeArrowData(batches);\n+    \n+    // finished the analysis of the data, close all resources:\n+    AutoCloseables.close(batches);\n+    AutoCloseables.close(factory, dataset, scanner);\n+\n+.. note::\n+    ``ArrowRecordBatch`` is a low-level composite Arrow data exchange format that doesn't provide API to read typed data from it directly. It's recommended\n+    to use utilities ``VectorLoader`` to load it into a schema aware container ``VectorSchemaRoot`` by which user could be able to access decoded data\n+    conveniently in Java.\n+\n+.. seealso::\n+   Load record batches with :doc:`VectorSchemaRoot <vector_schema_root>`.\n+\n+Schema\n+===========\n+\n+Schema of the data to be queried can be inspected via method ``DatasetFactory#inspect()`` before actually reading it. For example:\n+\n+.. code-block:: Java\n+\n+    // read data from local file /opt/example.parquet\n+    String uri = \"file:///opt/example.parquet\";\n+    BufferAllocator allocator = new RootAllocator(Long.MAX_VALUE);\n+    DatasetFactory factory = new FileSystemDatasetFactory(allocator, NativeMemoryPool.getDefault(),\n+        FileFormat.PARQUET, uri);\n+    \n+    // inspect schema\n+    Schema schema = factory.inspect();\n+ \n+For some of the data format that is compatible with a user-defined schema, user can use method ``DatasetFactory#inspect(Schema schema)`` to create the dataset:\n+\n+.. code-block:: Java\n+\n+    Schema schema = createUserSchema()\n+    Dataset dataset = factory.finish(schema);\n+\n+Otherwise when the non-parameter method ``DatasetFactory#inspect()`` is called, schema will be inferred automatically from data source. The same as the result of\n+``DatasetFactory#inspect()``.\n+\n+Also, if projector is specified during scanning (see next section :ref:`Projection`), the actual schema of output data can be got within method ``Scanner::schema()``:\n+\n+.. code-block:: Java\n+\n+    Scanner scanner = dataset.newScan(new ScanOptions(new String[] {\"id\", \"name\"}, 100));\n+    Schema projectedSchema = scanner.schema();\n+ \n+Projection\n+===========\n+\n+User can specify projections in ScanOptions. For ``FileSystemDataset``, only column projection is allowed for now. Which means, only column names\n\nReview comment:\n       nit: now. -> now,\r\n   ?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-15T15:29:54.862+0000",
                    "updated": "2021-05-15T15:29:54.862+0000",
                    "started": "2021-05-15T15:29:54.862+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "597235",
                    "issueId": "13375975"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13375975/worklog/597236",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kiszk commented on a change in pull request #10333:\nURL: https://github.com/apache/arrow/pull/10333#discussion_r632973338\n\n\n\n##########\nFile path: docs/source/java/dataset.rst\n##########\n@@ -0,0 +1,192 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+===========\n+Dataset\n+===========\n+\n+.. warning::\n+\n+    Experimental: The Java module ``dataset`` is currently under early development. API might be changed in each release of Apache Arrow until it gets mature.\n+\n+Dataset is an universal layer in Apache Arrow for querying data in different formats or in different paritionning strategies. Usually the data to be queried is\n+supposed to be located from a traditional file system, but Dataset API is not designed only for querying files but can be extended to serve all possible data sources\n+such as from inter-process communication or from other network locations, etc. \n+\n+Getting Started\n+===========\n+\n+Below shows a simplest example of using Dataset to query a Parquet file in Java:\n+\n+.. code-block:: Java\n+\n+    // read data from file /opt/example.parquet\n+    String uri = \"file:///opt/example.parquet\";\n+    BufferAllocator allocator = new RootAllocator(Long.MAX_VALUE);\n+    DatasetFactory factory = new FileSystemDatasetFactory(allocator, NativeMemoryPool.getDefault(),\n+        FileFormat.PARQUET, uri);\n+    Dataset dataset = factory.finish();\n+    Scanner scanner = dataset.newScan(new ScanOptions(new String[0], 100));\n+    List<ArrowRecordBatch> batches = StreamSupport.stream(scanner.scan().spliterator(), false)\n+        .flatMap(t -> stream(t.execute()))\n+        .collect(Collectors.toList());\n+    \n+    // do something with read record batches, for example:\n+    analyzeArrowData(batches);\n+    \n+    // finished the analysis of the data, close all resources:\n+    AutoCloseables.close(batches);\n+    AutoCloseables.close(factory, dataset, scanner);\n+\n+.. note::\n+    ``ArrowRecordBatch`` is a low-level composite Arrow data exchange format that doesn't provide API to read typed data from it directly. It's recommended\n+    to use utilities ``VectorLoader`` to load it into a schema aware container ``VectorSchemaRoot`` by which user could be able to access decoded data\n+    conveniently in Java.\n+\n+.. seealso::\n+   Load record batches with :doc:`VectorSchemaRoot <vector_schema_root>`.\n+\n+Schema\n+===========\n+\n+Schema of the data to be queried can be inspected via method ``DatasetFactory#inspect()`` before actually reading it. For example:\n+\n+.. code-block:: Java\n+\n+    // read data from local file /opt/example.parquet\n+    String uri = \"file:///opt/example.parquet\";\n+    BufferAllocator allocator = new RootAllocator(Long.MAX_VALUE);\n+    DatasetFactory factory = new FileSystemDatasetFactory(allocator, NativeMemoryPool.getDefault(),\n+        FileFormat.PARQUET, uri);\n+    \n+    // inspect schema\n+    Schema schema = factory.inspect();\n+ \n+For some of the data format that is compatible with a user-defined schema, user can use method ``DatasetFactory#inspect(Schema schema)`` to create the dataset:\n+\n+.. code-block:: Java\n+\n+    Schema schema = createUserSchema()\n+    Dataset dataset = factory.finish(schema);\n+\n+Otherwise when the non-parameter method ``DatasetFactory#inspect()`` is called, schema will be inferred automatically from data source. The same as the result of\n+``DatasetFactory#inspect()``.\n+\n+Also, if projector is specified during scanning (see next section :ref:`Projection`), the actual schema of output data can be got within method ``Scanner::schema()``:\n+\n+.. code-block:: Java\n+\n+    Scanner scanner = dataset.newScan(new ScanOptions(new String[] {\"id\", \"name\"}, 100));\n+    Schema projectedSchema = scanner.schema();\n+ \n+Projection\n+===========\n+\n+User can specify projections in ScanOptions. For ``FileSystemDataset``, only column projection is allowed for now. Which means, only column names\n+in the projection list will be accepted. For example:\n+\n+.. code-block:: Java\n+\n+    String[] projection = new String[] {\"id\", \"name\"};\n+    ScanOptions options = new ScanOptions(projection, 100);\n+    \n+If no projection is needed, specify an empty String array ``new String[0]`` in ScanOptions:\n+\n+.. code-block:: Java\n+\n+    String[] projection = new String[0];\n+    ScanOptions options = new ScanOptions(projection, 100);\n+    \n+This way all column will be emitted during scanning.\n+\n+Read data from HDFS\n+===========\n+\n+``FileSystemDataset`` supports reading data from non-local file systems. HDFS support is included in the official Apache Arrow Java package releases and\n+can be used directly without re-building the source code.\n+To access HDFS data using Dataset API, pass a general HDFS URI to ``FilesSystemDatasetFactory``:\n+\n+.. code-block:: Java\n+    \n+    String uri = \"hdfs://{hdfs_host}:{port}/data/example.parquet\";\n+    BufferAllocator allocator = new RootAllocator(Long.MAX_VALUE);\n+    DatasetFactory factory = new FileSystemDatasetFactory(allocator, NativeMemoryPool.getDefault(),\n+        FileFormat.PARQUET, uri);\n+        \n+Native Memory Management\n+===========\n+\n+To gain better performance and reducing code complexity, Java ``FileSystemDataset`` internally relys on C++ ``arrow::dataset::FileSystemDataset`` via JNI.\n+As a result, All Arrow data read from ``FileSystemDataset`` is supposed to be allocated off the JVM heap. To manage this part of memory, An utility class\n\nReview comment:\n       All -> all\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-15T15:30:38.109+0000",
                    "updated": "2021-05-15T15:30:38.109+0000",
                    "started": "2021-05-15T15:30:38.108+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "597236",
                    "issueId": "13375975"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13375975/worklog/597237",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kiszk commented on a change in pull request #10333:\nURL: https://github.com/apache/arrow/pull/10333#discussion_r632973406\n\n\n\n##########\nFile path: docs/source/java/dataset.rst\n##########\n@@ -0,0 +1,192 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+===========\n+Dataset\n+===========\n+\n+.. warning::\n+\n+    Experimental: The Java module ``dataset`` is currently under early development. API might be changed in each release of Apache Arrow until it gets mature.\n+\n+Dataset is an universal layer in Apache Arrow for querying data in different formats or in different paritionning strategies. Usually the data to be queried is\n+supposed to be located from a traditional file system, but Dataset API is not designed only for querying files but can be extended to serve all possible data sources\n+such as from inter-process communication or from other network locations, etc. \n+\n+Getting Started\n+===========\n+\n+Below shows a simplest example of using Dataset to query a Parquet file in Java:\n+\n+.. code-block:: Java\n+\n+    // read data from file /opt/example.parquet\n+    String uri = \"file:///opt/example.parquet\";\n+    BufferAllocator allocator = new RootAllocator(Long.MAX_VALUE);\n+    DatasetFactory factory = new FileSystemDatasetFactory(allocator, NativeMemoryPool.getDefault(),\n+        FileFormat.PARQUET, uri);\n+    Dataset dataset = factory.finish();\n+    Scanner scanner = dataset.newScan(new ScanOptions(new String[0], 100));\n+    List<ArrowRecordBatch> batches = StreamSupport.stream(scanner.scan().spliterator(), false)\n+        .flatMap(t -> stream(t.execute()))\n+        .collect(Collectors.toList());\n+    \n+    // do something with read record batches, for example:\n+    analyzeArrowData(batches);\n+    \n+    // finished the analysis of the data, close all resources:\n+    AutoCloseables.close(batches);\n+    AutoCloseables.close(factory, dataset, scanner);\n+\n+.. note::\n+    ``ArrowRecordBatch`` is a low-level composite Arrow data exchange format that doesn't provide API to read typed data from it directly. It's recommended\n+    to use utilities ``VectorLoader`` to load it into a schema aware container ``VectorSchemaRoot`` by which user could be able to access decoded data\n+    conveniently in Java.\n+\n+.. seealso::\n+   Load record batches with :doc:`VectorSchemaRoot <vector_schema_root>`.\n+\n+Schema\n+===========\n+\n+Schema of the data to be queried can be inspected via method ``DatasetFactory#inspect()`` before actually reading it. For example:\n+\n+.. code-block:: Java\n+\n+    // read data from local file /opt/example.parquet\n+    String uri = \"file:///opt/example.parquet\";\n+    BufferAllocator allocator = new RootAllocator(Long.MAX_VALUE);\n+    DatasetFactory factory = new FileSystemDatasetFactory(allocator, NativeMemoryPool.getDefault(),\n+        FileFormat.PARQUET, uri);\n+    \n+    // inspect schema\n+    Schema schema = factory.inspect();\n+ \n+For some of the data format that is compatible with a user-defined schema, user can use method ``DatasetFactory#inspect(Schema schema)`` to create the dataset:\n+\n+.. code-block:: Java\n+\n+    Schema schema = createUserSchema()\n+    Dataset dataset = factory.finish(schema);\n+\n+Otherwise when the non-parameter method ``DatasetFactory#inspect()`` is called, schema will be inferred automatically from data source. The same as the result of\n+``DatasetFactory#inspect()``.\n+\n+Also, if projector is specified during scanning (see next section :ref:`Projection`), the actual schema of output data can be got within method ``Scanner::schema()``:\n+\n+.. code-block:: Java\n+\n+    Scanner scanner = dataset.newScan(new ScanOptions(new String[] {\"id\", \"name\"}, 100));\n+    Schema projectedSchema = scanner.schema();\n+ \n+Projection\n+===========\n+\n+User can specify projections in ScanOptions. For ``FileSystemDataset``, only column projection is allowed for now. Which means, only column names\n+in the projection list will be accepted. For example:\n+\n+.. code-block:: Java\n+\n+    String[] projection = new String[] {\"id\", \"name\"};\n+    ScanOptions options = new ScanOptions(projection, 100);\n+    \n+If no projection is needed, specify an empty String array ``new String[0]`` in ScanOptions:\n+\n+.. code-block:: Java\n+\n+    String[] projection = new String[0];\n+    ScanOptions options = new ScanOptions(projection, 100);\n+    \n+This way all column will be emitted during scanning.\n+\n+Read data from HDFS\n+===========\n+\n+``FileSystemDataset`` supports reading data from non-local file systems. HDFS support is included in the official Apache Arrow Java package releases and\n+can be used directly without re-building the source code.\n+To access HDFS data using Dataset API, pass a general HDFS URI to ``FilesSystemDatasetFactory``:\n+\n+.. code-block:: Java\n+    \n+    String uri = \"hdfs://{hdfs_host}:{port}/data/example.parquet\";\n+    BufferAllocator allocator = new RootAllocator(Long.MAX_VALUE);\n+    DatasetFactory factory = new FileSystemDatasetFactory(allocator, NativeMemoryPool.getDefault(),\n+        FileFormat.PARQUET, uri);\n+        \n+Native Memory Management\n+===========\n+\n+To gain better performance and reducing code complexity, Java ``FileSystemDataset`` internally relys on C++ ``arrow::dataset::FileSystemDataset`` via JNI.\n\nReview comment:\n       reducing -> reduce\r\n   ?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-15T15:31:11.290+0000",
                    "updated": "2021-05-15T15:31:11.290+0000",
                    "started": "2021-05-15T15:31:11.290+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "597237",
                    "issueId": "13375975"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13375975/worklog/597238",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kiszk commented on a change in pull request #10333:\nURL: https://github.com/apache/arrow/pull/10333#discussion_r632973438\n\n\n\n##########\nFile path: docs/source/java/dataset.rst\n##########\n@@ -0,0 +1,192 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+===========\n+Dataset\n+===========\n+\n+.. warning::\n+\n+    Experimental: The Java module ``dataset`` is currently under early development. API might be changed in each release of Apache Arrow until it gets mature.\n+\n+Dataset is an universal layer in Apache Arrow for querying data in different formats or in different paritionning strategies. Usually the data to be queried is\n+supposed to be located from a traditional file system, but Dataset API is not designed only for querying files but can be extended to serve all possible data sources\n+such as from inter-process communication or from other network locations, etc. \n+\n+Getting Started\n+===========\n+\n+Below shows a simplest example of using Dataset to query a Parquet file in Java:\n+\n+.. code-block:: Java\n+\n+    // read data from file /opt/example.parquet\n+    String uri = \"file:///opt/example.parquet\";\n+    BufferAllocator allocator = new RootAllocator(Long.MAX_VALUE);\n+    DatasetFactory factory = new FileSystemDatasetFactory(allocator, NativeMemoryPool.getDefault(),\n+        FileFormat.PARQUET, uri);\n+    Dataset dataset = factory.finish();\n+    Scanner scanner = dataset.newScan(new ScanOptions(new String[0], 100));\n+    List<ArrowRecordBatch> batches = StreamSupport.stream(scanner.scan().spliterator(), false)\n+        .flatMap(t -> stream(t.execute()))\n+        .collect(Collectors.toList());\n+    \n+    // do something with read record batches, for example:\n+    analyzeArrowData(batches);\n+    \n+    // finished the analysis of the data, close all resources:\n+    AutoCloseables.close(batches);\n+    AutoCloseables.close(factory, dataset, scanner);\n+\n+.. note::\n+    ``ArrowRecordBatch`` is a low-level composite Arrow data exchange format that doesn't provide API to read typed data from it directly. It's recommended\n+    to use utilities ``VectorLoader`` to load it into a schema aware container ``VectorSchemaRoot`` by which user could be able to access decoded data\n+    conveniently in Java.\n+\n+.. seealso::\n+   Load record batches with :doc:`VectorSchemaRoot <vector_schema_root>`.\n+\n+Schema\n+===========\n+\n+Schema of the data to be queried can be inspected via method ``DatasetFactory#inspect()`` before actually reading it. For example:\n+\n+.. code-block:: Java\n+\n+    // read data from local file /opt/example.parquet\n+    String uri = \"file:///opt/example.parquet\";\n+    BufferAllocator allocator = new RootAllocator(Long.MAX_VALUE);\n+    DatasetFactory factory = new FileSystemDatasetFactory(allocator, NativeMemoryPool.getDefault(),\n+        FileFormat.PARQUET, uri);\n+    \n+    // inspect schema\n+    Schema schema = factory.inspect();\n+ \n+For some of the data format that is compatible with a user-defined schema, user can use method ``DatasetFactory#inspect(Schema schema)`` to create the dataset:\n+\n+.. code-block:: Java\n+\n+    Schema schema = createUserSchema()\n+    Dataset dataset = factory.finish(schema);\n+\n+Otherwise when the non-parameter method ``DatasetFactory#inspect()`` is called, schema will be inferred automatically from data source. The same as the result of\n+``DatasetFactory#inspect()``.\n+\n+Also, if projector is specified during scanning (see next section :ref:`Projection`), the actual schema of output data can be got within method ``Scanner::schema()``:\n+\n+.. code-block:: Java\n+\n+    Scanner scanner = dataset.newScan(new ScanOptions(new String[] {\"id\", \"name\"}, 100));\n+    Schema projectedSchema = scanner.schema();\n+ \n+Projection\n+===========\n+\n+User can specify projections in ScanOptions. For ``FileSystemDataset``, only column projection is allowed for now. Which means, only column names\n+in the projection list will be accepted. For example:\n+\n+.. code-block:: Java\n+\n+    String[] projection = new String[] {\"id\", \"name\"};\n+    ScanOptions options = new ScanOptions(projection, 100);\n+    \n+If no projection is needed, specify an empty String array ``new String[0]`` in ScanOptions:\n+\n+.. code-block:: Java\n+\n+    String[] projection = new String[0];\n+    ScanOptions options = new ScanOptions(projection, 100);\n+    \n+This way all column will be emitted during scanning.\n+\n+Read data from HDFS\n+===========\n+\n+``FileSystemDataset`` supports reading data from non-local file systems. HDFS support is included in the official Apache Arrow Java package releases and\n+can be used directly without re-building the source code.\n+To access HDFS data using Dataset API, pass a general HDFS URI to ``FilesSystemDatasetFactory``:\n+\n+.. code-block:: Java\n+    \n+    String uri = \"hdfs://{hdfs_host}:{port}/data/example.parquet\";\n+    BufferAllocator allocator = new RootAllocator(Long.MAX_VALUE);\n+    DatasetFactory factory = new FileSystemDatasetFactory(allocator, NativeMemoryPool.getDefault(),\n+        FileFormat.PARQUET, uri);\n+        \n+Native Memory Management\n+===========\n+\n+To gain better performance and reducing code complexity, Java ``FileSystemDataset`` internally relys on C++ ``arrow::dataset::FileSystemDataset`` via JNI.\n+As a result, All Arrow data read from ``FileSystemDataset`` is supposed to be allocated off the JVM heap. To manage this part of memory, An utility class\n+``NativeMemoryPool`` is provided to users.\n+\n+As a basic example, by using a listenable ``NativeMemoryPool``, User can pass a listener hooking on C++ buffer allocation/deallocation:\n\nReview comment:\n       User -> user\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-15T15:31:34.483+0000",
                    "updated": "2021-05-15T15:31:34.483+0000",
                    "started": "2021-05-15T15:31:34.483+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "597238",
                    "issueId": "13375975"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13375975/worklog/597334",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zhztheplayer commented on pull request #10333:\nURL: https://github.com/apache/arrow/pull/10333#issuecomment-841764639\n\n\n   Thanks @kiszk for helping checking this :)\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-16T04:31:36.245+0000",
                    "updated": "2021-05-16T04:31:36.245+0000",
                    "started": "2021-05-16T04:31:36.245+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "597334",
                    "issueId": "13375975"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13375975/worklog/597394",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kiszk commented on a change in pull request #10333:\nURL: https://github.com/apache/arrow/pull/10333#discussion_r633105004\n\n\n\n##########\nFile path: docs/source/java/dataset.rst\n##########\n@@ -0,0 +1,192 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+===========\n+Dataset\n+===========\n+\n+.. warning::\n+\n+    Experimental: The Java module ``dataset`` is currently under early development. API might be changed in each release of Apache Arrow until it gets mature.\n+\n+Dataset is an universal layer in Apache Arrow for querying data in different formats or in different paritionning strategies. Usually the data to be queried is\n\nReview comment:\n       nit: paritionning -> partitioning\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-16T15:38:57.410+0000",
                    "updated": "2021-05-16T15:38:57.410+0000",
                    "started": "2021-05-16T15:38:57.410+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "597394",
                    "issueId": "13375975"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13375975/worklog/597395",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kiszk commented on a change in pull request #10333:\nURL: https://github.com/apache/arrow/pull/10333#discussion_r633105004\n\n\n\n##########\nFile path: docs/source/java/dataset.rst\n##########\n@@ -0,0 +1,192 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+===========\n+Dataset\n+===========\n+\n+.. warning::\n+\n+    Experimental: The Java module ``dataset`` is currently under early development. API might be changed in each release of Apache Arrow until it gets mature.\n+\n+Dataset is an universal layer in Apache Arrow for querying data in different formats or in different paritionning strategies. Usually the data to be queried is\n\nReview comment:\n       paritionning -> partitioning\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-16T15:39:41.793+0000",
                    "updated": "2021-05-16T15:39:41.793+0000",
                    "started": "2021-05-16T15:39:41.793+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "597395",
                    "issueId": "13375975"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13375975/worklog/597396",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kiszk commented on a change in pull request #10333:\nURL: https://github.com/apache/arrow/pull/10333#discussion_r633105760\n\n\n\n##########\nFile path: docs/source/java/dataset.rst\n##########\n@@ -0,0 +1,192 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+===========\n+Dataset\n+===========\n+\n+.. warning::\n+\n+    Experimental: The Java module ``dataset`` is currently under early development. API might be changed in each release of Apache Arrow until it gets mature.\n+\n+Dataset is an universal layer in Apache Arrow for querying data in different formats or in different paritionning strategies. Usually the data to be queried is\n+supposed to be located from a traditional file system, however Arrow Dataset is not designed only for querying files but can be extended to serve all possible data sources\n+such as from inter-process communication or from other network locations, etc. \n+\n+Getting Started\n+===========\n+\n+Below shows a simplest example of using Dataset to query a Parquet file in Java:\n+\n+.. code-block:: Java\n+\n+    // read data from file /opt/example.parquet\n+    String uri = \"file:///opt/example.parquet\";\n+    BufferAllocator allocator = new RootAllocator(Long.MAX_VALUE);\n+    DatasetFactory factory = new FileSystemDatasetFactory(allocator, NativeMemoryPool.getDefault(),\n+        FileFormat.PARQUET, uri);\n+    Dataset dataset = factory.finish();\n+    Scanner scanner = dataset.newScan(new ScanOptions(new String[0], 100));\n+    List<ArrowRecordBatch> batches = StreamSupport.stream(scanner.scan().spliterator(), false)\n+        .flatMap(t -> stream(t.execute()))\n+        .collect(Collectors.toList());\n+    \n+    // do something with read record batches, for example:\n+    analyzeArrowData(batches);\n+    \n+    // finished the analysis of the data, close all resources:\n+    AutoCloseables.close(batches);\n+    AutoCloseables.close(factory, dataset, scanner);\n+\n+.. note::\n+    ``ArrowRecordBatch`` is a low-level composite Arrow data exchange format that doesn't provide API to read typed data from it directly. It's recommended\n+    to use utilities ``VectorLoader`` to load it into a schema aware container ``VectorSchemaRoot`` by which user could be able to access decoded data\n+    conveniently in Java.\n+\n+.. seealso::\n+   Load record batches with :doc:`VectorSchemaRoot <vector_schema_root>`.\n+\n+Schema\n+===========\n+\n+Schema of the data to be queried can be inspected via method ``DatasetFactory#inspect()`` before actually reading it. For example:\n+\n+.. code-block:: Java\n+\n+    // read data from local file /opt/example.parquet\n+    String uri = \"file:///opt/example.parquet\";\n+    BufferAllocator allocator = new RootAllocator(Long.MAX_VALUE);\n+    DatasetFactory factory = new FileSystemDatasetFactory(allocator, NativeMemoryPool.getDefault(),\n+        FileFormat.PARQUET, uri);\n+    \n+    // inspect schema\n+    Schema schema = factory.inspect();\n+ \n+For some of the data format that is compatible with a user-defined schema, user can use method ``DatasetFactory#inspect(Schema schema)`` to create the dataset:\n+\n+.. code-block:: Java\n+\n+    Schema schema = createUserSchema()\n+    Dataset dataset = factory.finish(schema);\n+\n+Otherwise when the non-parameter method ``DatasetFactory#inspect()`` is called, schema will be inferred automatically from data source. The same as the result of\n+``DatasetFactory#inspect()``.\n+\n+Also, if projector is specified during scanning (see next section :ref:`Projection`), the actual schema of output data can be got within method ``Scanner::schema()``:\n+\n+.. code-block:: Java\n+\n+    Scanner scanner = dataset.newScan(new ScanOptions(new String[] {\"id\", \"name\"}, 100));\n+    Schema projectedSchema = scanner.schema();\n+ \n+Projection\n+===========\n+\n+User can specify projections in ScanOptions. For ``FileSystemDataset``, only column projection is allowed for now, which means, only column names\n+in the projection list will be accepted. For example:\n+\n+.. code-block:: Java\n+\n+    String[] projection = new String[] {\"id\", \"name\"};\n+    ScanOptions options = new ScanOptions(projection, 100);\n+    \n+If no projection is needed, specify an empty String array ``new String[0]`` in ScanOptions:\n+\n+.. code-block:: Java\n+\n+    String[] projection = new String[0];\n+    ScanOptions options = new ScanOptions(projection, 100);\n+    \n+This way all column will be emitted during scanning.\n\nReview comment:\n       nit: all column -> all columns\r\n   ?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-16T15:46:07.386+0000",
                    "updated": "2021-05-16T15:46:07.386+0000",
                    "started": "2021-05-16T15:46:07.386+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "597396",
                    "issueId": "13375975"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13375975/worklog/597828",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zhztheplayer commented on pull request #10333:\nURL: https://github.com/apache/arrow/pull/10333#issuecomment-841764639\n\n\n   Thanks @kiszk for helping checking this :)\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-17T18:00:18.755+0000",
                    "updated": "2021-05-17T18:00:18.755+0000",
                    "started": "2021-05-17T18:00:18.754+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "597828",
                    "issueId": "13375975"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13375975/worklog/598007",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kiszk commented on a change in pull request #10333:\nURL: https://github.com/apache/arrow/pull/10333#discussion_r633105004\n\n\n\n##########\nFile path: docs/source/java/dataset.rst\n##########\n@@ -0,0 +1,192 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+===========\n+Dataset\n+===========\n+\n+.. warning::\n+\n+    Experimental: The Java module ``dataset`` is currently under early development. API might be changed in each release of Apache Arrow until it gets mature.\n+\n+Dataset is an universal layer in Apache Arrow for querying data in different formats or in different paritionning strategies. Usually the data to be queried is\n\nReview comment:\n       nit: paritionning -> partitioning\n\n##########\nFile path: docs/source/java/dataset.rst\n##########\n@@ -0,0 +1,192 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+===========\n+Dataset\n+===========\n+\n+.. warning::\n+\n+    Experimental: The Java module ``dataset`` is currently under early development. API might be changed in each release of Apache Arrow until it gets mature.\n+\n+Dataset is an universal layer in Apache Arrow for querying data in different formats or in different paritionning strategies. Usually the data to be queried is\n\nReview comment:\n       paritionning -> partitioning\n\n##########\nFile path: docs/source/java/dataset.rst\n##########\n@@ -0,0 +1,192 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+===========\n+Dataset\n+===========\n+\n+.. warning::\n+\n+    Experimental: The Java module ``dataset`` is currently under early development. API might be changed in each release of Apache Arrow until it gets mature.\n+\n+Dataset is an universal layer in Apache Arrow for querying data in different formats or in different paritionning strategies. Usually the data to be queried is\n+supposed to be located from a traditional file system, however Arrow Dataset is not designed only for querying files but can be extended to serve all possible data sources\n+such as from inter-process communication or from other network locations, etc. \n+\n+Getting Started\n+===========\n+\n+Below shows a simplest example of using Dataset to query a Parquet file in Java:\n+\n+.. code-block:: Java\n+\n+    // read data from file /opt/example.parquet\n+    String uri = \"file:///opt/example.parquet\";\n+    BufferAllocator allocator = new RootAllocator(Long.MAX_VALUE);\n+    DatasetFactory factory = new FileSystemDatasetFactory(allocator, NativeMemoryPool.getDefault(),\n+        FileFormat.PARQUET, uri);\n+    Dataset dataset = factory.finish();\n+    Scanner scanner = dataset.newScan(new ScanOptions(new String[0], 100));\n+    List<ArrowRecordBatch> batches = StreamSupport.stream(scanner.scan().spliterator(), false)\n+        .flatMap(t -> stream(t.execute()))\n+        .collect(Collectors.toList());\n+    \n+    // do something with read record batches, for example:\n+    analyzeArrowData(batches);\n+    \n+    // finished the analysis of the data, close all resources:\n+    AutoCloseables.close(batches);\n+    AutoCloseables.close(factory, dataset, scanner);\n+\n+.. note::\n+    ``ArrowRecordBatch`` is a low-level composite Arrow data exchange format that doesn't provide API to read typed data from it directly. It's recommended\n+    to use utilities ``VectorLoader`` to load it into a schema aware container ``VectorSchemaRoot`` by which user could be able to access decoded data\n+    conveniently in Java.\n+\n+.. seealso::\n+   Load record batches with :doc:`VectorSchemaRoot <vector_schema_root>`.\n+\n+Schema\n+===========\n+\n+Schema of the data to be queried can be inspected via method ``DatasetFactory#inspect()`` before actually reading it. For example:\n+\n+.. code-block:: Java\n+\n+    // read data from local file /opt/example.parquet\n+    String uri = \"file:///opt/example.parquet\";\n+    BufferAllocator allocator = new RootAllocator(Long.MAX_VALUE);\n+    DatasetFactory factory = new FileSystemDatasetFactory(allocator, NativeMemoryPool.getDefault(),\n+        FileFormat.PARQUET, uri);\n+    \n+    // inspect schema\n+    Schema schema = factory.inspect();\n+ \n+For some of the data format that is compatible with a user-defined schema, user can use method ``DatasetFactory#inspect(Schema schema)`` to create the dataset:\n+\n+.. code-block:: Java\n+\n+    Schema schema = createUserSchema()\n+    Dataset dataset = factory.finish(schema);\n+\n+Otherwise when the non-parameter method ``DatasetFactory#inspect()`` is called, schema will be inferred automatically from data source. The same as the result of\n+``DatasetFactory#inspect()``.\n+\n+Also, if projector is specified during scanning (see next section :ref:`Projection`), the actual schema of output data can be got within method ``Scanner::schema()``:\n+\n+.. code-block:: Java\n+\n+    Scanner scanner = dataset.newScan(new ScanOptions(new String[] {\"id\", \"name\"}, 100));\n+    Schema projectedSchema = scanner.schema();\n+ \n+Projection\n+===========\n+\n+User can specify projections in ScanOptions. For ``FileSystemDataset``, only column projection is allowed for now, which means, only column names\n+in the projection list will be accepted. For example:\n+\n+.. code-block:: Java\n+\n+    String[] projection = new String[] {\"id\", \"name\"};\n+    ScanOptions options = new ScanOptions(projection, 100);\n+    \n+If no projection is needed, specify an empty String array ``new String[0]`` in ScanOptions:\n+\n+.. code-block:: Java\n+\n+    String[] projection = new String[0];\n+    ScanOptions options = new ScanOptions(projection, 100);\n+    \n+This way all column will be emitted during scanning.\n\nReview comment:\n       nit: all column -> all columns\r\n   ?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-17T18:23:16.799+0000",
                    "updated": "2021-05-17T18:23:16.799+0000",
                    "started": "2021-05-17T18:23:16.799+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "598007",
                    "issueId": "13375975"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13375975/worklog/665710",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #10333:\nURL: https://github.com/apache/arrow/pull/10333#discussion_r729087158\n\n\n\n##########\nFile path: docs/source/java/dataset.rst\n##########\n@@ -0,0 +1,192 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+===========\n+Dataset\n+===========\n+\n+.. warning::\n+\n+    Experimental: The Java module ``dataset`` is currently under early development. API might be changed in each release of Apache Arrow until it gets mature.\n+\n+Dataset is an universal layer in Apache Arrow for querying data in different formats or in different paritioning strategies. Usually the data to be queried is\n\nReview comment:\n       @zhztheplayer Sorry for the delay here. Can you ensure the reStructuredText source is line-wrapped around 80 characters?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-14T15:14:51.286+0000",
                    "updated": "2021-10-14T15:14:51.286+0000",
                    "started": "2021-10-14T15:14:51.286+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "665710",
                    "issueId": "13375975"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13375975/worklog/665711",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #10333:\nURL: https://github.com/apache/arrow/pull/10333#discussion_r729087861\n\n\n\n##########\nFile path: docs/source/java/dataset.rst\n##########\n@@ -0,0 +1,192 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+===========\n+Dataset\n+===========\n+\n+.. warning::\n+\n+    Experimental: The Java module ``dataset`` is currently under early development. API might be changed in each release of Apache Arrow until it gets mature.\n+\n+Dataset is an universal layer in Apache Arrow for querying data in different formats or in different paritioning strategies. Usually the data to be queried is\n+supposed to be located from a traditional file system, however Arrow Dataset is not designed only for querying files but can be extended to serve all possible data sources\n+such as from inter-process communication or from other network locations, etc. \n+\n+Getting Started\n+===========\n\nReview comment:\n       I think rendering errors may be emitted if the dashes are not at least the same amount as the title text.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-14T15:15:44.534+0000",
                    "updated": "2021-10-14T15:15:44.534+0000",
                    "started": "2021-10-14T15:15:44.534+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "665711",
                    "issueId": "13375975"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13375975/worklog/665712",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #10333:\nURL: https://github.com/apache/arrow/pull/10333#issuecomment-943457635\n\n\n   @emkornfield I don't know if you have time to give this a quick look?\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-14T15:15:57.794+0000",
                    "updated": "2021-10-14T15:15:57.794+0000",
                    "started": "2021-10-14T15:15:57.793+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "665712",
                    "issueId": "13375975"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13375975/worklog/665714",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #10333:\nURL: https://github.com/apache/arrow/pull/10333#issuecomment-943458327\n\n\n   @github-actions crossbow submit *docs*\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-14T15:16:45.408+0000",
                    "updated": "2021-10-14T15:16:45.408+0000",
                    "started": "2021-10-14T15:16:45.408+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "665714",
                    "issueId": "13375975"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13375975/worklog/665718",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10333:\nURL: https://github.com/apache/arrow/pull/10333#issuecomment-943459297\n\n\n   Revision: 4d60bb0cfc6e51c13c22d90e0cee60da6fd08371\n   \n   Submitted crossbow builds: [ursacomputing/crossbow @ actions-957](https://github.com/ursacomputing/crossbow/branches/all?query=actions-957)\n   \n   |Task|Status|\n   |----|------|\n   |test-r-devdocs|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-957-github-test-r-devdocs)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-957-github-test-r-devdocs)|\n   |test-ubuntu-20.10-docs|[![Azure](https://dev.azure.com/ursacomputing/crossbow/_apis/build/status/ursacomputing.crossbow?branchName=actions-957-azure-test-ubuntu-20.10-docs)](https://dev.azure.com/ursacomputing/crossbow/_build/latest?definitionId=1&branchName=actions-957-azure-test-ubuntu-20.10-docs)|\n   |test-ubuntu-default-docs|[![Azure](https://dev.azure.com/ursacomputing/crossbow/_apis/build/status/ursacomputing.crossbow?branchName=actions-957-azure-test-ubuntu-default-docs)](https://dev.azure.com/ursacomputing/crossbow/_build/latest?definitionId=1&branchName=actions-957-azure-test-ubuntu-default-docs)|\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-14T15:17:55.229+0000",
                    "updated": "2021-10-14T15:17:55.229+0000",
                    "started": "2021-10-14T15:17:55.229+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "665718",
                    "issueId": "13375975"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13375975/worklog/665746",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zhztheplayer commented on a change in pull request #10333:\nURL: https://github.com/apache/arrow/pull/10333#discussion_r729139175\n\n\n\n##########\nFile path: docs/source/java/dataset.rst\n##########\n@@ -0,0 +1,192 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+===========\n+Dataset\n+===========\n+\n+.. warning::\n+\n+    Experimental: The Java module ``dataset`` is currently under early development. API might be changed in each release of Apache Arrow until it gets mature.\n+\n+Dataset is an universal layer in Apache Arrow for querying data in different formats or in different paritioning strategies. Usually the data to be queried is\n\nReview comment:\n       Done.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-14T16:14:04.945+0000",
                    "updated": "2021-10-14T16:14:04.945+0000",
                    "started": "2021-10-14T16:14:04.945+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "665746",
                    "issueId": "13375975"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13375975/worklog/711220",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs closed pull request #10333:\nURL: https://github.com/apache/arrow/pull/10333\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-19T09:40:48.872+0000",
                    "updated": "2022-01-19T09:40:48.872+0000",
                    "started": "2022-01-19T09:40:48.872+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "711220",
                    "issueId": "13375975"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 14400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5054c06[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5da507cd[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7582c421[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@ec2e33[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1d600177[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@184ac8f[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@62c4d352[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@338f48f[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1ece2626[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3a8a01a4[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7e901be4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@3ac80435[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 14400,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Jan 19 09:40:35 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-01-19T09:40:35.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12607/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2021-04-30T06:41:00.000+0000",
        "updated": "2022-01-20T09:11:41.000+0000",
        "timeoriginalestimate": null,
        "description": "Planning to add a section \"Dataset\" to Java documentation page https://arrow.apache.org/docs/java/",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "4h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 14400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Doc][Java] Doc section for Dataset Java bindings",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13375975/comment/17478488",
                    "id": "17478488",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "body": "Issue resolved by pull request 10333\n[https://github.com/apache/arrow/pull/10333]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "created": "2022-01-19T09:40:35.796+0000",
                    "updated": "2022-01-19T09:40:35.796+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0qlyg:",
        "customfield_12314139": null
    }
}