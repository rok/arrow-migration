{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13482667",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482667",
    "key": "ARROW-17812",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12352360",
                "id": "12352360",
                "description": "",
                "name": "11.0.0",
                "archived": false,
                "released": false
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=willjones127",
            "name": "willjones127",
            "key": "willjones127",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
            },
            "displayName": "Will Jones",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334626",
                "id": "12334626",
                "name": "C++ - Gandiva"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=willjones127",
            "name": "willjones127",
            "key": "willjones127",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
            },
            "displayName": "Will Jones",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=willjones127",
            "name": "willjones127",
            "key": "willjones127",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
            },
            "displayName": "Will Jones",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 21000,
            "total": 21000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 21000,
            "total": 21000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-17812/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 35,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482667/worklog/810989",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #14200:\nURL: https://github.com/apache/arrow/pull/14200#issuecomment-1254420394\n\n   https://issues.apache.org/jira/browse/ARROW-17812\n\n\n",
                    "created": "2022-09-22T02:06:31.656+0000",
                    "updated": "2022-09-22T02:06:31.656+0000",
                    "started": "2022-09-22T02:06:31.655+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "810989",
                    "issueId": "13482667"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482667/worklog/810990",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 commented on PR #14200:\nURL: https://github.com/apache/arrow/pull/14200#issuecomment-1254428138\n\n   FYI @js8544 \n\n\n",
                    "created": "2022-09-22T02:17:10.224+0000",
                    "updated": "2022-09-22T02:17:10.224+0000",
                    "started": "2022-09-22T02:17:10.224+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "810990",
                    "issueId": "13482667"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482667/worklog/810992",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "js8544 commented on PR #14200:\nURL: https://github.com/apache/arrow/pull/14200#issuecomment-1254443940\n\n   Thanks!\n\n\n",
                    "created": "2022-09-22T02:41:45.535+0000",
                    "updated": "2022-09-22T02:41:45.535+0000",
                    "started": "2022-09-22T02:41:45.534+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "810992",
                    "issueId": "13482667"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482667/worklog/811097",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "js8544 commented on PR #14200:\nURL: https://github.com/apache/arrow/pull/14200#issuecomment-1254694168\n\n   @pitrou Would you mind reviewing this PR? I am planning on improving Gandiva's doc based on Will's work.\n\n\n",
                    "created": "2022-09-22T08:26:16.993+0000",
                    "updated": "2022-09-22T08:26:16.993+0000",
                    "started": "2022-09-22T08:26:16.992+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "811097",
                    "issueId": "13482667"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482667/worklog/811108",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #14200:\nURL: https://github.com/apache/arrow/pull/14200#discussion_r977384535\n\n\n##########\ndocs/source/cpp/gandiva.rst:\n##########\n@@ -0,0 +1,148 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. default-domain:: cpp\n+.. highlight:: cpp\n+.. cpp:namespace:: arrow::compute\n+\n+===============================\n+The Gandiva Expression Compiler\n+===============================\n+\n+Gandiva is a runtime expression compiler that uses `LLVM`_ to generate\n+efficient native code for projections and filters on Arrow record batches.\n+Gandiva only handles projections and filters. For other transformation, see\n+:ref:`Compute Functions <compute-cpp>`.\n+\n+Gandiva was designed to take advantage of the Arrow memory format and modern\n+hardware. Compiling expressions using LLVM allows the execution to be optimized\n+to the local runtime environment and hardware, including available SIMD\n+instructions. To minimize optimization overhead, all Gandiva functions are\n+pre-compiled into LLVM IR (intermediate representation).\n+\n+.. _LLVM: https://llvm.org/\n+\n+\n+Building Expressions\n+====================\n+\n+Gandiva provides a general expression representation where expressions are\n+represented by a tree of nodes. The expression trees are built using\n+:class:`gandiva::TreeExprBuilder`. The leaves of the expression tree are typically\n+field references, created by :func:`gandiva::TreeExprBuilder::MakeField`, and\n+literal values, created by :func:`gandiva::TreeExprBuilder::MakeLiteral`. Nodes\n+can be combined into more complex expression trees using:\n+\n+* :func:`gandiva::TreeExprBuilder::MakeFunction` to create a function\n+  node.\n+* :func:`gandiva::TreeExprBuilder::MakeIf` to create if-else logic.\n+* :func:`gandiva::TreeExprBuilder::MakeAnd` and :func:`gandiva::TreeExprBuilder::MakeOr`\n+  to create boolean expressions. (For \"not\", use the ``not(bool)`` function in ``MakeFunction``.)\n+* :func:`gandiva::TreeExprBuilder::MakeInExpressionInt32` and the other \"in expression\"\n+  functions to create set membership tests.\n+\n+Once an expression tree is built, they are wrapped in either :class:`gandiva::Expression`\n+or :class:`gandiva::Condition`, depending on how they will be used.\n+``Expression`` is used in projections while ``Condition`` is used filters.\n+\n+As an example, here is how to create an Expression representing ``x + 3`` and a\n+Condition representing ``x < 3``:\n+\n+.. code-block:: cpp\n+\n+   auto field_x_raw = arrow::field(\"x\", arrow::int32());\n+   auto field_x = TreeExprBuilder::MakeField(field_x_raw);\n+   auto literal_3 = TreeExprBuilder::MakeLiteral(3);\n+   auto field_result = arrow::field(\"result\", arrow::int32());\n+\n+   auto add_node = TreeExprBuilder::MakeFunction(\"add\", {field_x, literal_3}, arrow::int32());\n+   auto expression = TreeExprBuilder::MakeExpression(add_node, field_result);\n+\n+   auto less_than_node = TreeExprBuilder::MakeFunction(\"less_than\", {field_x, literal_3},\n+                                                       boolean());\n+   auto condition = TreeExprBuilder::MakeCondition(less_than_node);\n+\n+For simpler expressions, there are also convenience functions that allow you to\n+use functions directly in ``MakeExpression`` and ``MakeCondition``:\n+\n+.. code-block:: cpp\n+\n+   auto expression = TreeExprBuilder::MakeExpression(\"add\", {field_x, literal_3}, field_result);\n+\n+   auto condition = TreeExprBuilder::MakeCondition(\"less_than\", {field_x, literal_3});\n+\n+\n+Projectors and Filters\n+======================\n+\n+Gandiva's two execution kernels are :class:`gandiva::Projector` and\n+:class:`gandiva::Filter`. ``Projector`` consumes a record batch and projects\n+into a new record batch. ``Filter`` consumes a record batch and produces a\n+:class:`gandiva::SelectionVector` containing the indices that matched the condition.\n+\n+For both ``Projector`` and ``Filter``, optimization of the expression IR happens\n+when creating instances. They are compiled against a static schema, so the\n+schema of the record batches must be known at this point.\n+\n+Continuing with the ``expression`` and ``condition`` created in the previous\n+section, here is an example of creating a Projector and a Filter:\n+\n+.. code-block:: cpp\n+\n+   auto schema = arrow::schema({field_x});\n+   std::shared_ptr<Projector> projector;\n+   auto status = Projector::Make(schema, {expression}, &projector);\n+   ARROW_CHECK_OK(status);\n+\n+   std::shared_ptr<Filter> filter;\n+   status = Filter::Make(schema, condition, &filter);\n+   ARROW_CHECK_OK(status);\n+\n+\n+Once a Projector or Filter is created, it can be evaluated on Arrow record batches.\n+These execution kernels are single-threaded on their own, but are designed to be\n+reused to process record batches in parallel.\n+\n+Execution is performed with :func:`gandiva::Projector::Evaluate` and\n+:func:`gandiva::Filter::Evaluate`. Filters produce :class:`gandiva::SelectionVector`,\n+a vector of row indices that matched the filter condition. When filtering and\n+projecting record batches, you can pass the selection vector into the projector\n+so that the projection is only evaluated on matching rows.\n+\n+Here is an example of evaluating the Filter and Projector created above:\n+\n+.. code-block:: cpp\n+\n+   auto pool = arrow::default_memory_pool();\n+   int num_records = 4;\n+   auto array = MakeArrowArrayInt32({1, 2, 3, 4}, {true, true, true, true});\n+   auto in_batch = arrow::RecordBatch::Make(schema, num_records, {array});\n+\n+   // Just project\n+   arrow::ArrayVector outputs;\n+   status = projector->Evaluate(*in_batch, pool, &outputs);\n+   ARROW_CHECK_OK(status);\n+\n+   // Evaluate filter\n+   gandiva::SelectionVector result_indices;\n+   status = filter->Evaluate(*in_batch, &result_indices);\n+   ARROW_CHECK_OK(status);\n+\n+   // Project with filter\n+   arrow::ArrayVector outputs_filtered;\n+   status = projector->Evaluate(*in_batch, selection_vector.get(),\n+                                pool, &outputs_filtered);\n\nReview Comment:\n   Add `ARROW_CHECK_OK` as a last line as well?\n\n\n\n##########\ndocs/source/cpp/gandiva.rst:\n##########\n@@ -0,0 +1,148 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. default-domain:: cpp\n+.. highlight:: cpp\n+.. cpp:namespace:: arrow::compute\n+\n+===============================\n+The Gandiva Expression Compiler\n+===============================\n+\n+Gandiva is a runtime expression compiler that uses `LLVM`_ to generate\n+efficient native code for projections and filters on Arrow record batches.\n+Gandiva only handles projections and filters. For other transformation, see\n+:ref:`Compute Functions <compute-cpp>`.\n+\n+Gandiva was designed to take advantage of the Arrow memory format and modern\n+hardware. Compiling expressions using LLVM allows the execution to be optimized\n+to the local runtime environment and hardware, including available SIMD\n+instructions. To minimize optimization overhead, all Gandiva functions are\n+pre-compiled into LLVM IR (intermediate representation).\n+\n+.. _LLVM: https://llvm.org/\n+\n+\n+Building Expressions\n+====================\n+\n+Gandiva provides a general expression representation where expressions are\n+represented by a tree of nodes. The expression trees are built using\n+:class:`gandiva::TreeExprBuilder`. The leaves of the expression tree are typically\n+field references, created by :func:`gandiva::TreeExprBuilder::MakeField`, and\n+literal values, created by :func:`gandiva::TreeExprBuilder::MakeLiteral`. Nodes\n+can be combined into more complex expression trees using:\n+\n+* :func:`gandiva::TreeExprBuilder::MakeFunction` to create a function\n+  node.\n+* :func:`gandiva::TreeExprBuilder::MakeIf` to create if-else logic.\n+* :func:`gandiva::TreeExprBuilder::MakeAnd` and :func:`gandiva::TreeExprBuilder::MakeOr`\n+  to create boolean expressions. (For \"not\", use the ``not(bool)`` function in ``MakeFunction``.)\n+* :func:`gandiva::TreeExprBuilder::MakeInExpressionInt32` and the other \"in expression\"\n+  functions to create set membership tests.\n+\n+Once an expression tree is built, they are wrapped in either :class:`gandiva::Expression`\n+or :class:`gandiva::Condition`, depending on how they will be used.\n+``Expression`` is used in projections while ``Condition`` is used filters.\n+\n+As an example, here is how to create an Expression representing ``x + 3`` and a\n+Condition representing ``x < 3``:\n+\n+.. code-block:: cpp\n+\n+   auto field_x_raw = arrow::field(\"x\", arrow::int32());\n+   auto field_x = TreeExprBuilder::MakeField(field_x_raw);\n+   auto literal_3 = TreeExprBuilder::MakeLiteral(3);\n+   auto field_result = arrow::field(\"result\", arrow::int32());\n+\n+   auto add_node = TreeExprBuilder::MakeFunction(\"add\", {field_x, literal_3}, arrow::int32());\n+   auto expression = TreeExprBuilder::MakeExpression(add_node, field_result);\n+\n+   auto less_than_node = TreeExprBuilder::MakeFunction(\"less_than\", {field_x, literal_3},\n+                                                       boolean());\n+   auto condition = TreeExprBuilder::MakeCondition(less_than_node);\n+\n+For simpler expressions, there are also convenience functions that allow you to\n+use functions directly in ``MakeExpression`` and ``MakeCondition``:\n+\n+.. code-block:: cpp\n+\n+   auto expression = TreeExprBuilder::MakeExpression(\"add\", {field_x, literal_3}, field_result);\n+\n+   auto condition = TreeExprBuilder::MakeCondition(\"less_than\", {field_x, literal_3});\n+\n+\n+Projectors and Filters\n+======================\n+\n+Gandiva's two execution kernels are :class:`gandiva::Projector` and\n+:class:`gandiva::Filter`. ``Projector`` consumes a record batch and projects\n+into a new record batch. ``Filter`` consumes a record batch and produces a\n+:class:`gandiva::SelectionVector` containing the indices that matched the condition.\n+\n+For both ``Projector`` and ``Filter``, optimization of the expression IR happens\n+when creating instances. They are compiled against a static schema, so the\n+schema of the record batches must be known at this point.\n+\n+Continuing with the ``expression`` and ``condition`` created in the previous\n+section, here is an example of creating a Projector and a Filter:\n+\n+.. code-block:: cpp\n+\n+   auto schema = arrow::schema({field_x});\n+   std::shared_ptr<Projector> projector;\n+   auto status = Projector::Make(schema, {expression}, &projector);\n+   ARROW_CHECK_OK(status);\n+\n+   std::shared_ptr<Filter> filter;\n+   status = Filter::Make(schema, condition, &filter);\n+   ARROW_CHECK_OK(status);\n+\n+\n+Once a Projector or Filter is created, it can be evaluated on Arrow record batches.\n+These execution kernels are single-threaded on their own, but are designed to be\n+reused to process record batches in parallel.\n\nReview Comment:\n   ```suggestion\r\n   reused to process distinct record batches in parallel.\r\n   ```\n\n\n\n##########\ndocs/source/cpp/gandiva.rst:\n##########\n@@ -0,0 +1,148 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. default-domain:: cpp\n+.. highlight:: cpp\n+.. cpp:namespace:: arrow::compute\n+\n+===============================\n+The Gandiva Expression Compiler\n+===============================\n+\n+Gandiva is a runtime expression compiler that uses `LLVM`_ to generate\n+efficient native code for projections and filters on Arrow record batches.\n+Gandiva only handles projections and filters. For other transformation, see\n+:ref:`Compute Functions <compute-cpp>`.\n+\n+Gandiva was designed to take advantage of the Arrow memory format and modern\n+hardware. Compiling expressions using LLVM allows the execution to be optimized\n+to the local runtime environment and hardware, including available SIMD\n+instructions. To minimize optimization overhead, all Gandiva functions are\n\nReview Comment:\n   Also I would say \"To reduce optimization overhead\".\n\n\n\n##########\ndocs/source/cpp/gandiva.rst:\n##########\n@@ -0,0 +1,148 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. default-domain:: cpp\n+.. highlight:: cpp\n+.. cpp:namespace:: arrow::compute\n+\n+===============================\n+The Gandiva Expression Compiler\n+===============================\n+\n+Gandiva is a runtime expression compiler that uses `LLVM`_ to generate\n+efficient native code for projections and filters on Arrow record batches.\n+Gandiva only handles projections and filters. For other transformation, see\n+:ref:`Compute Functions <compute-cpp>`.\n+\n+Gandiva was designed to take advantage of the Arrow memory format and modern\n+hardware. Compiling expressions using LLVM allows the execution to be optimized\n+to the local runtime environment and hardware, including available SIMD\n+instructions. To minimize optimization overhead, all Gandiva functions are\n\nReview Comment:\n   Is it really all Gandiva functions (including e.g. simple additions) or the most costly ones?\n\n\n\n##########\ndocs/source/cpp/gandiva.rst:\n##########\n@@ -0,0 +1,148 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. default-domain:: cpp\n+.. highlight:: cpp\n+.. cpp:namespace:: arrow::compute\n+\n+===============================\n+The Gandiva Expression Compiler\n+===============================\n+\n+Gandiva is a runtime expression compiler that uses `LLVM`_ to generate\n+efficient native code for projections and filters on Arrow record batches.\n+Gandiva only handles projections and filters. For other transformation, see\n\nReview Comment:\n   ```suggestion\r\n   Gandiva only handles projections and filters. For other transformations, see\r\n   ```\n\n\n\n",
                    "created": "2022-09-22T08:54:13.864+0000",
                    "updated": "2022-09-22T08:54:13.864+0000",
                    "started": "2022-09-22T08:54:13.864+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "811108",
                    "issueId": "13482667"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482667/worklog/811109",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on PR #14200:\nURL: https://github.com/apache/arrow/pull/14200#issuecomment-1254727459\n\n   @ksuarez1423 Do you want to take a look at the additions here?\n\n\n",
                    "created": "2022-09-22T08:55:12.870+0000",
                    "updated": "2022-09-22T08:55:12.870+0000",
                    "started": "2022-09-22T08:55:12.870+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "811109",
                    "issueId": "13482667"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482667/worklog/811300",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 commented on code in PR #14200:\nURL: https://github.com/apache/arrow/pull/14200#discussion_r977859275\n\n\n##########\ndocs/source/cpp/gandiva.rst:\n##########\n@@ -0,0 +1,148 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. default-domain:: cpp\n+.. highlight:: cpp\n+.. cpp:namespace:: arrow::compute\n+\n+===============================\n+The Gandiva Expression Compiler\n+===============================\n+\n+Gandiva is a runtime expression compiler that uses `LLVM`_ to generate\n+efficient native code for projections and filters on Arrow record batches.\n+Gandiva only handles projections and filters. For other transformation, see\n+:ref:`Compute Functions <compute-cpp>`.\n+\n+Gandiva was designed to take advantage of the Arrow memory format and modern\n+hardware. Compiling expressions using LLVM allows the execution to be optimized\n+to the local runtime environment and hardware, including available SIMD\n+instructions. To minimize optimization overhead, all Gandiva functions are\n\nReview Comment:\n   I changed to \"many\", though I'm not sure which is right. I wrote this about a year ago, based on what I could understand from the Arrow and Dremio blog posts. But I've forgotten where I might have gotten this.\n\n\n\n",
                    "created": "2022-09-22T16:21:54.913+0000",
                    "updated": "2022-09-22T16:21:54.913+0000",
                    "started": "2022-09-22T16:21:54.912+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "811300",
                    "issueId": "13482667"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482667/worklog/811456",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "js8544 commented on code in PR #14200:\nURL: https://github.com/apache/arrow/pull/14200#discussion_r978223698\n\n\n##########\ndocs/source/cpp/gandiva.rst:\n##########\n@@ -0,0 +1,148 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. default-domain:: cpp\n+.. highlight:: cpp\n+.. cpp:namespace:: arrow::compute\n+\n+===============================\n+The Gandiva Expression Compiler\n+===============================\n+\n+Gandiva is a runtime expression compiler that uses `LLVM`_ to generate\n+efficient native code for projections and filters on Arrow record batches.\n+Gandiva only handles projections and filters. For other transformation, see\n+:ref:`Compute Functions <compute-cpp>`.\n+\n+Gandiva was designed to take advantage of the Arrow memory format and modern\n+hardware. Compiling expressions using LLVM allows the execution to be optimized\n+to the local runtime environment and hardware, including available SIMD\n+instructions. To minimize optimization overhead, all Gandiva functions are\n\nReview Comment:\n   @pitrou As far as I understand all functions are precompiled to LLVM IR. For example addition is defined here as a C function: https://github.com/apache/arrow/blob/master/cpp/src/gandiva/precompiled/arithmetic_ops.cc#L85. During the build process, all functions will first be compiled to LLVM IR format(https://github.com/apache/arrow/blob/master/cpp/src/gandiva/precompiled/CMakeLists.txt#L88) and loaded by the LLVM engine before any computation occurs (https://github.com/apache/arrow/blob/master/cpp/src/gandiva/engine.cc#L257).\n\n\n\n",
                    "created": "2022-09-23T02:31:39.543+0000",
                    "updated": "2022-09-23T02:31:39.543+0000",
                    "started": "2022-09-23T02:31:39.543+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "811456",
                    "issueId": "13482667"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482667/worklog/811626",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 commented on code in PR #14200:\nURL: https://github.com/apache/arrow/pull/14200#discussion_r978777226\n\n\n##########\ndocs/source/cpp/gandiva.rst:\n##########\n@@ -0,0 +1,151 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. default-domain:: cpp\n+.. highlight:: cpp\n+.. cpp:namespace:: arrow::compute\n+\n+===============================\n+The Gandiva Expression Compiler\n+===============================\n+\n+Gandiva is a runtime expression compiler that uses `LLVM`_ to generate\n+efficient native code for projections and filters on Arrow record batches.\n+Gandiva only handles projections and filters. For other transformations, see\n+:ref:`Compute Functions <compute-cpp>`.\n+\n+Gandiva was designed to take advantage of the Arrow memory format and modern\n+hardware. Compiling expressions using LLVM allows the execution to be optimized\n+to the local runtime environment and hardware, including available SIMD\n+instructions. To reduce optimization overhead, many Gandiva functions are\n\nReview Comment:\n   ```suggestion\r\n   instructions. To reduce optimization overhead, all Gandiva functions are\r\n   ```\n\n\n\n",
                    "created": "2022-09-23T15:04:01.675+0000",
                    "updated": "2022-09-23T15:04:01.675+0000",
                    "started": "2022-09-23T15:04:01.675+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "811626",
                    "issueId": "13482667"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482667/worklog/811721",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ksuarez1423 commented on code in PR #14200:\nURL: https://github.com/apache/arrow/pull/14200#discussion_r979039703\n\n\n##########\ndocs/source/cpp/gandiva.rst:\n##########\n@@ -0,0 +1,151 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. default-domain:: cpp\n+.. highlight:: cpp\n+.. cpp:namespace:: arrow::compute\n+\n+===============================\n+The Gandiva Expression Compiler\n+===============================\n+\n+Gandiva is a runtime expression compiler that uses `LLVM`_ to generate\n+efficient native code for projections and filters on Arrow record batches.\n+Gandiva only handles projections and filters. For other transformations, see\n\nReview Comment:\n   This feels a little awkward after saying it handles projections and filters ",
                    "created": "2022-09-23T20:44:25.083+0000",
                    "updated": "2022-09-23T20:44:25.083+0000",
                    "started": "2022-09-23T20:44:25.082+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "811721",
                    "issueId": "13482667"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482667/worklog/811736",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 commented on code in PR #14200:\nURL: https://github.com/apache/arrow/pull/14200#discussion_r979068172\n\n\n##########\ndocs/source/cpp/gandiva.rst:\n##########\n@@ -0,0 +1,151 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. default-domain:: cpp\n+.. highlight:: cpp\n+.. cpp:namespace:: arrow::compute\n+\n+===============================\n+The Gandiva Expression Compiler\n+===============================\n+\n+Gandiva is a runtime expression compiler that uses `LLVM`_ to generate\n+efficient native code for projections and filters on Arrow record batches.\n+Gandiva only handles projections and filters. For other transformations, see\n\nReview Comment:\n   There's a lot of concepts flying around in that first sentence though, so I worry that could be a confusing transition. What if I changed \"projections and filters\" to \"compute\" in the first instance so it's not redundant?\r\n   \r\n   ```suggestion\r\n   efficient native code for compute on Arrow record batches.\r\n   Gandiva only handles projections and filters; for other transformations, see\r\n   ```\n\n\n\n",
                    "created": "2022-09-23T21:13:33.848+0000",
                    "updated": "2022-09-23T21:13:33.848+0000",
                    "started": "2022-09-23T21:13:33.848+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "811736",
                    "issueId": "13482667"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482667/worklog/811737",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 commented on code in PR #14200:\nURL: https://github.com/apache/arrow/pull/14200#discussion_r979073523\n\n\n##########\ndocs/source/cpp/gandiva.rst:\n##########\n@@ -0,0 +1,151 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. default-domain:: cpp\n+.. highlight:: cpp\n+.. cpp:namespace:: arrow::compute\n+\n+===============================\n+The Gandiva Expression Compiler\n+===============================\n+\n+Gandiva is a runtime expression compiler that uses `LLVM`_ to generate\n+efficient native code for projections and filters on Arrow record batches.\n+Gandiva only handles projections and filters. For other transformations, see\n+:ref:`Compute Functions <compute-cpp>`.\n+\n+Gandiva was designed to take advantage of the Arrow memory format and modern\n+hardware. Compiling expressions using LLVM allows the execution to be optimized\n\nReview Comment:\n   Sure, here's one example from [this blog post](https://www.dremio.com/blog/announcing-gandiva-initiative-for-apache-arrow/). What do you think of that?\r\n   \r\n   ```suggestion\r\n   hardware. For example, since Arrow arrays have separate buffers for values and \r\n   validity bitmaps, values and their null status can often be processed \r\n   independently, allowing for better instruction pipelining. In addition,\r\n   compiling expressions using LLVM allows the execution to be optimized\r\n   ```\n\n\n\n",
                    "created": "2022-09-23T21:24:30.186+0000",
                    "updated": "2022-09-23T21:24:30.186+0000",
                    "started": "2022-09-23T21:24:30.186+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "811737",
                    "issueId": "13482667"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482667/worklog/811739",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 commented on code in PR #14200:\nURL: https://github.com/apache/arrow/pull/14200#discussion_r979076496\n\n\n##########\ndocs/source/cpp/gandiva.rst:\n##########\n@@ -0,0 +1,151 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. default-domain:: cpp\n+.. highlight:: cpp\n+.. cpp:namespace:: arrow::compute\n+\n+===============================\n+The Gandiva Expression Compiler\n+===============================\n+\n+Gandiva is a runtime expression compiler that uses `LLVM`_ to generate\n+efficient native code for projections and filters on Arrow record batches.\n+Gandiva only handles projections and filters. For other transformations, see\n+:ref:`Compute Functions <compute-cpp>`.\n+\n+Gandiva was designed to take advantage of the Arrow memory format and modern\n+hardware. Compiling expressions using LLVM allows the execution to be optimized\n+to the local runtime environment and hardware, including available SIMD\n+instructions. To reduce optimization overhead, many Gandiva functions are\n+pre-compiled into LLVM IR (intermediate representation).\n+\n+.. _LLVM: https://llvm.org/\n+\n+\n+Building Expressions\n+====================\n+\n+Gandiva provides a general expression representation where expressions are\n+represented by a tree of nodes. The expression trees are built using\n+:class:`gandiva::TreeExprBuilder`. The leaves of the expression tree are typically\n+field references, created by :func:`gandiva::TreeExprBuilder::MakeField`, and\n+literal values, created by :func:`gandiva::TreeExprBuilder::MakeLiteral`. Nodes\n\nReview Comment:\n   > Are readers expected to know what a field or value would be, here?\r\n   \r\n   I think that's a reasonable assumption. These terms are pretty ubiquitous in the analytics engine space. (We have them in Acero, I've seen them in Spark before this.)\r\n   \r\n   Plus if it's not clear when first reading, the examples that come next should eliminate the ambiguity.\r\n   \r\n   > I can reason out that fields are variables, and literals are values, but it takes a bit of thinking\r\n   \r\n   Yeah in the world of SQL, for example, I think the idea of a \"field\" or \"column\" is actually very distinct from \"variable\". For example, \"project these three fields from the data\" or \"select these columns from the table\" might be common statements, but \"select these variables from the table\" isn't quite right.\n\n\n\n",
                    "created": "2022-09-23T21:31:05.958+0000",
                    "updated": "2022-09-23T21:31:05.958+0000",
                    "started": "2022-09-23T21:31:05.958+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "811739",
                    "issueId": "13482667"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482667/worklog/811740",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 commented on code in PR #14200:\nURL: https://github.com/apache/arrow/pull/14200#discussion_r979078423\n\n\n##########\ndocs/source/cpp/gandiva.rst:\n##########\n@@ -0,0 +1,151 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. default-domain:: cpp\n+.. highlight:: cpp\n+.. cpp:namespace:: arrow::compute\n+\n+===============================\n+The Gandiva Expression Compiler\n+===============================\n+\n+Gandiva is a runtime expression compiler that uses `LLVM`_ to generate\n+efficient native code for projections and filters on Arrow record batches.\n+Gandiva only handles projections and filters. For other transformations, see\n+:ref:`Compute Functions <compute-cpp>`.\n+\n+Gandiva was designed to take advantage of the Arrow memory format and modern\n+hardware. Compiling expressions using LLVM allows the execution to be optimized\n+to the local runtime environment and hardware, including available SIMD\n+instructions. To reduce optimization overhead, many Gandiva functions are\n+pre-compiled into LLVM IR (intermediate representation).\n+\n+.. _LLVM: https://llvm.org/\n+\n+\n+Building Expressions\n+====================\n+\n+Gandiva provides a general expression representation where expressions are\n+represented by a tree of nodes. The expression trees are built using\n\nReview Comment:\n   I guess what would really be helpful would be to draw an expression tree, but idk if I want to do that in this PR.\r\n   \r\n   I don't really know how to describe what a node itself means. That's why I first describe the leaves, and then the composite nodes. And then give an example.\r\n   \r\n   If you have a suggestion, though, I'd happily take it.\n\n\n\n",
                    "created": "2022-09-23T21:35:21.530+0000",
                    "updated": "2022-09-23T21:35:21.530+0000",
                    "started": "2022-09-23T21:35:21.529+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "811740",
                    "issueId": "13482667"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482667/worklog/811745",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 commented on code in PR #14200:\nURL: https://github.com/apache/arrow/pull/14200#discussion_r979084272\n\n\n##########\ndocs/source/cpp/gandiva.rst:\n##########\n@@ -0,0 +1,151 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. default-domain:: cpp\n+.. highlight:: cpp\n+.. cpp:namespace:: arrow::compute\n+\n+===============================\n+The Gandiva Expression Compiler\n+===============================\n+\n+Gandiva is a runtime expression compiler that uses `LLVM`_ to generate\n+efficient native code for projections and filters on Arrow record batches.\n+Gandiva only handles projections and filters. For other transformations, see\n+:ref:`Compute Functions <compute-cpp>`.\n+\n+Gandiva was designed to take advantage of the Arrow memory format and modern\n+hardware. Compiling expressions using LLVM allows the execution to be optimized\n+to the local runtime environment and hardware, including available SIMD\n+instructions. To reduce optimization overhead, many Gandiva functions are\n+pre-compiled into LLVM IR (intermediate representation).\n+\n+.. _LLVM: https://llvm.org/\n+\n+\n+Building Expressions\n+====================\n+\n+Gandiva provides a general expression representation where expressions are\n+represented by a tree of nodes. The expression trees are built using\n+:class:`gandiva::TreeExprBuilder`. The leaves of the expression tree are typically\n+field references, created by :func:`gandiva::TreeExprBuilder::MakeField`, and\n+literal values, created by :func:`gandiva::TreeExprBuilder::MakeLiteral`. Nodes\n+can be combined into more complex expression trees using:\n+\n+* :func:`gandiva::TreeExprBuilder::MakeFunction` to create a function\n+  node.\n+* :func:`gandiva::TreeExprBuilder::MakeIf` to create if-else logic.\n+* :func:`gandiva::TreeExprBuilder::MakeAnd` and :func:`gandiva::TreeExprBuilder::MakeOr`\n+  to create boolean expressions. (For \"not\", use the ``not(bool)`` function in ``MakeFunction``.)\n+* :func:`gandiva::TreeExprBuilder::MakeInExpressionInt32` and the other \"in expression\"\n+  functions to create set membership tests.\n+\n+Once an expression tree is built, they are wrapped in either :class:`gandiva::Expression`\n+or :class:`gandiva::Condition`, depending on how they will be used.\n+``Expression`` is used in projections while ``Condition`` is used filters.\n+\n+As an example, here is how to create an Expression representing ``x + 3`` and a\n+Condition representing ``x < 3``:\n+\n+.. code-block:: cpp\n+\n+   auto field_x_raw = arrow::field(\"x\", arrow::int32());\n+   auto field_x = TreeExprBuilder::MakeField(field_x_raw);\n+   auto literal_3 = TreeExprBuilder::MakeLiteral(3);\n+   auto field_result = arrow::field(\"result\", arrow::int32());\n+\n+   auto add_node = TreeExprBuilder::MakeFunction(\"add\", {field_x, literal_3}, arrow::int32());\n+   auto expression = TreeExprBuilder::MakeExpression(add_node, field_result);\n+\n+   auto less_than_node = TreeExprBuilder::MakeFunction(\"less_than\", {field_x, literal_3},\n+                                                       boolean());\n+   auto condition = TreeExprBuilder::MakeCondition(less_than_node);\n+\n+For simpler expressions, there are also convenience functions that allow you to\n+use functions directly in ``MakeExpression`` and ``MakeCondition``:\n+\n+.. code-block:: cpp\n+\n+   auto expression = TreeExprBuilder::MakeExpression(\"add\", {field_x, literal_3}, field_result);\n+\n+   auto condition = TreeExprBuilder::MakeCondition(\"less_than\", {field_x, literal_3});\n+\n+\n+Projectors and Filters\n+======================\n+\n+Gandiva's two execution kernels are :class:`gandiva::Projector` and\n+:class:`gandiva::Filter`. ``Projector`` consumes a record batch and projects\n+into a new record batch. ``Filter`` consumes a record batch and produces a\n+:class:`gandiva::SelectionVector` containing the indices that matched the condition.\n+\n+For both ``Projector`` and ``Filter``, optimization of the expression IR happens\n+when creating instances. They are compiled against a static schema, so the\n+schema of the record batches must be known at this point.\n+\n+Continuing with the ``expression`` and ``condition`` created in the previous\n+section, here is an example of creating a Projector and a Filter:\n+\n+.. code-block:: cpp\n+\n+   auto schema = arrow::schema({field_x});\n+   std::shared_ptr<Projector> projector;\n+   auto status = Projector::Make(schema, {expression}, &projector);\n+   ARROW_CHECK_OK(status);\n+\n+   std::shared_ptr<Filter> filter;\n+   status = Filter::Make(schema, condition, &filter);\n+   ARROW_CHECK_OK(status);\n+\n+\n+Once a Projector or Filter is created, it can be evaluated on Arrow record batches.\n+These execution kernels are single-threaded on their own, but are designed to be\n+reused to process distinct record batches in parallel.\n+\n+Execution is performed with :func:`gandiva::Projector::Evaluate` and\n+:func:`gandiva::Filter::Evaluate`. Filters produce :class:`gandiva::SelectionVector`,\n+a vector of row indices that matched the filter condition. When filtering and\n+projecting record batches, you can pass the selection vector into the projector\n+so that the projection is only evaluated on matching rows.\n\nReview Comment:\n   > So you can pass the SelectionVector into Projector::Evaluate()?\r\n   \r\n   Yes, there is an overload for that. It's documented in the API reference.\r\n   \r\n   I'm not sure I understand your suggestion. Are you saying something like this?\r\n   \r\n   ```\r\n   For filtering and\r\n   projecting record batches simultaneously, you can pass the selection vector into the \r\n   projector (using one of the overloads) so that the projection is only evaluated on \r\n   matching rows.\r\n   ```\n\n\n\n",
                    "created": "2022-09-23T21:48:58.823+0000",
                    "updated": "2022-09-23T21:48:58.823+0000",
                    "started": "2022-09-23T21:48:58.823+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "811745",
                    "issueId": "13482667"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482667/worklog/811746",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 commented on code in PR #14200:\nURL: https://github.com/apache/arrow/pull/14200#discussion_r979088817\n\n\n##########\ndocs/source/cpp/gandiva.rst:\n##########\n@@ -0,0 +1,151 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. default-domain:: cpp\n+.. highlight:: cpp\n+.. cpp:namespace:: arrow::compute\n+\n+===============================\n+The Gandiva Expression Compiler\n+===============================\n+\n+Gandiva is a runtime expression compiler that uses `LLVM`_ to generate\n+efficient native code for projections and filters on Arrow record batches.\n+Gandiva only handles projections and filters. For other transformations, see\n+:ref:`Compute Functions <compute-cpp>`.\n+\n+Gandiva was designed to take advantage of the Arrow memory format and modern\n+hardware. Compiling expressions using LLVM allows the execution to be optimized\n+to the local runtime environment and hardware, including available SIMD\n+instructions. To reduce optimization overhead, many Gandiva functions are\n+pre-compiled into LLVM IR (intermediate representation).\n+\n+.. _LLVM: https://llvm.org/\n+\n+\n+Building Expressions\n+====================\n+\n+Gandiva provides a general expression representation where expressions are\n+represented by a tree of nodes. The expression trees are built using\n+:class:`gandiva::TreeExprBuilder`. The leaves of the expression tree are typically\n+field references, created by :func:`gandiva::TreeExprBuilder::MakeField`, and\n+literal values, created by :func:`gandiva::TreeExprBuilder::MakeLiteral`. Nodes\n+can be combined into more complex expression trees using:\n+\n+* :func:`gandiva::TreeExprBuilder::MakeFunction` to create a function\n+  node.\n+* :func:`gandiva::TreeExprBuilder::MakeIf` to create if-else logic.\n+* :func:`gandiva::TreeExprBuilder::MakeAnd` and :func:`gandiva::TreeExprBuilder::MakeOr`\n+  to create boolean expressions. (For \"not\", use the ``not(bool)`` function in ``MakeFunction``.)\n+* :func:`gandiva::TreeExprBuilder::MakeInExpressionInt32` and the other \"in expression\"\n+  functions to create set membership tests.\n+\n+Once an expression tree is built, they are wrapped in either :class:`gandiva::Expression`\n+or :class:`gandiva::Condition`, depending on how they will be used.\n+``Expression`` is used in projections while ``Condition`` is used filters.\n+\n+As an example, here is how to create an Expression representing ``x + 3`` and a\n+Condition representing ``x < 3``:\n+\n+.. code-block:: cpp\n+\n+   auto field_x_raw = arrow::field(\"x\", arrow::int32());\n+   auto field_x = TreeExprBuilder::MakeField(field_x_raw);\n+   auto literal_3 = TreeExprBuilder::MakeLiteral(3);\n+   auto field_result = arrow::field(\"result\", arrow::int32());\n+\n+   auto add_node = TreeExprBuilder::MakeFunction(\"add\", {field_x, literal_3}, arrow::int32());\n+   auto expression = TreeExprBuilder::MakeExpression(add_node, field_result);\n+\n+   auto less_than_node = TreeExprBuilder::MakeFunction(\"less_than\", {field_x, literal_3},\n+                                                       boolean());\n+   auto condition = TreeExprBuilder::MakeCondition(less_than_node);\n+\n+For simpler expressions, there are also convenience functions that allow you to\n+use functions directly in ``MakeExpression`` and ``MakeCondition``:\n+\n+.. code-block:: cpp\n+\n+   auto expression = TreeExprBuilder::MakeExpression(\"add\", {field_x, literal_3}, field_result);\n+\n+   auto condition = TreeExprBuilder::MakeCondition(\"less_than\", {field_x, literal_3});\n+\n+\n+Projectors and Filters\n+======================\n+\n+Gandiva's two execution kernels are :class:`gandiva::Projector` and\n+:class:`gandiva::Filter`. ``Projector`` consumes a record batch and projects\n+into a new record batch. ``Filter`` consumes a record batch and produces a\n+:class:`gandiva::SelectionVector` containing the indices that matched the condition.\n+\n+For both ``Projector`` and ``Filter``, optimization of the expression IR happens\n+when creating instances. They are compiled against a static schema, so the\n+schema of the record batches must be known at this point.\n+\n+Continuing with the ``expression`` and ``condition`` created in the previous\n+section, here is an example of creating a Projector and a Filter:\n+\n+.. code-block:: cpp\n+\n+   auto schema = arrow::schema({field_x});\n+   std::shared_ptr<Projector> projector;\n+   auto status = Projector::Make(schema, {expression}, &projector);\n+   ARROW_CHECK_OK(status);\n+\n+   std::shared_ptr<Filter> filter;\n+   status = Filter::Make(schema, condition, &filter);\n+   ARROW_CHECK_OK(status);\n+\n+\n+Once a Projector or Filter is created, it can be evaluated on Arrow record batches.\n+These execution kernels are single-threaded on their own, but are designed to be\n+reused to process distinct record batches in parallel.\n+\n+Execution is performed with :func:`gandiva::Projector::Evaluate` and\n+:func:`gandiva::Filter::Evaluate`. Filters produce :class:`gandiva::SelectionVector`,\n\nReview Comment:\n   Projectors produce an `ArrayVector` :facepalm:. I should probably show an example of how to turn it into a record batch, because that requires collecting the output field names from your expression vector.\r\n   \r\n   > Also, is SelectionVector full of ints to show indices?\r\n   \r\n   Yes. Aren't indices always integers? `SelectionVector` is a fancy wrapper around an Arrow integer array, and uses the smallest data type that can represent the indices of the input data.\n\n\n\n",
                    "created": "2022-09-23T22:00:20.722+0000",
                    "updated": "2022-09-23T22:00:20.722+0000",
                    "started": "2022-09-23T22:00:20.722+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "811746",
                    "issueId": "13482667"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482667/worklog/811885",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "js8544 commented on code in PR #14200:\nURL: https://github.com/apache/arrow/pull/14200#discussion_r979339652\n\n\n##########\ndocs/source/cpp/gandiva.rst:\n##########\n@@ -0,0 +1,151 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. default-domain:: cpp\n+.. highlight:: cpp\n+.. cpp:namespace:: arrow::compute\n+\n+===============================\n+The Gandiva Expression Compiler\n+===============================\n+\n+Gandiva is a runtime expression compiler that uses `LLVM`_ to generate\n+efficient native code for projections and filters on Arrow record batches.\n+Gandiva only handles projections and filters. For other transformations, see\n+:ref:`Compute Functions <compute-cpp>`.\n+\n+Gandiva was designed to take advantage of the Arrow memory format and modern\n+hardware. Compiling expressions using LLVM allows the execution to be optimized\n+to the local runtime environment and hardware, including available SIMD\n+instructions. To reduce optimization overhead, many Gandiva functions are\n\nReview Comment:\n   Hi @wjones127, sorry but I need to take back what I said. I noticed that there are some functions that are not compiled to LLVM IR. Those functions are typically hard to be implemented in LLVM IR such as string operations and in expression checks. They are provided as C function pointers for the LLVM JIT engine to call. So I think it's better to change back to \"many\" here. Sorry again for the trouble!\n\n\n\n",
                    "created": "2022-09-25T01:36:13.463+0000",
                    "updated": "2022-09-25T01:36:13.463+0000",
                    "started": "2022-09-25T01:36:13.463+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "811885",
                    "issueId": "13482667"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482667/worklog/812542",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ksuarez1423 commented on code in PR #14200:\nURL: https://github.com/apache/arrow/pull/14200#discussion_r981370937\n\n\n##########\ndocs/source/cpp/gandiva.rst:\n##########\n@@ -0,0 +1,151 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. default-domain:: cpp\n+.. highlight:: cpp\n+.. cpp:namespace:: arrow::compute\n+\n+===============================\n+The Gandiva Expression Compiler\n+===============================\n+\n+Gandiva is a runtime expression compiler that uses `LLVM`_ to generate\n+efficient native code for projections and filters on Arrow record batches.\n+Gandiva only handles projections and filters. For other transformations, see\n\nReview Comment:\n   That fixes up the redundancy! I'm happy with that.\n\n\n\n",
                    "created": "2022-09-27T15:07:24.686+0000",
                    "updated": "2022-09-27T15:07:24.686+0000",
                    "started": "2022-09-27T15:07:24.686+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "812542",
                    "issueId": "13482667"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482667/worklog/812544",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ksuarez1423 commented on code in PR #14200:\nURL: https://github.com/apache/arrow/pull/14200#discussion_r981372900\n\n\n##########\ndocs/source/cpp/gandiva.rst:\n##########\n@@ -0,0 +1,151 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. default-domain:: cpp\n+.. highlight:: cpp\n+.. cpp:namespace:: arrow::compute\n+\n+===============================\n+The Gandiva Expression Compiler\n+===============================\n+\n+Gandiva is a runtime expression compiler that uses `LLVM`_ to generate\n+efficient native code for projections and filters on Arrow record batches.\n+Gandiva only handles projections and filters. For other transformations, see\n+:ref:`Compute Functions <compute-cpp>`.\n+\n+Gandiva was designed to take advantage of the Arrow memory format and modern\n+hardware. Compiling expressions using LLVM allows the execution to be optimized\n\nReview Comment:\n   I think \"For example\" and \"In addition\" are the wrong starters here ",
                    "created": "2022-09-27T15:08:49.826+0000",
                    "updated": "2022-09-27T15:08:49.826+0000",
                    "started": "2022-09-27T15:08:49.826+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "812544",
                    "issueId": "13482667"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482667/worklog/812545",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ksuarez1423 commented on code in PR #14200:\nURL: https://github.com/apache/arrow/pull/14200#discussion_r981373756\n\n\n##########\ndocs/source/cpp/gandiva.rst:\n##########\n@@ -0,0 +1,151 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. default-domain:: cpp\n+.. highlight:: cpp\n+.. cpp:namespace:: arrow::compute\n+\n+===============================\n+The Gandiva Expression Compiler\n+===============================\n+\n+Gandiva is a runtime expression compiler that uses `LLVM`_ to generate\n+efficient native code for projections and filters on Arrow record batches.\n+Gandiva only handles projections and filters. For other transformations, see\n+:ref:`Compute Functions <compute-cpp>`.\n+\n+Gandiva was designed to take advantage of the Arrow memory format and modern\n+hardware. Compiling expressions using LLVM allows the execution to be optimized\n+to the local runtime environment and hardware, including available SIMD\n+instructions. To reduce optimization overhead, many Gandiva functions are\n+pre-compiled into LLVM IR (intermediate representation).\n+\n+.. _LLVM: https://llvm.org/\n+\n+\n+Building Expressions\n+====================\n+\n+Gandiva provides a general expression representation where expressions are\n+represented by a tree of nodes. The expression trees are built using\n+:class:`gandiva::TreeExprBuilder`. The leaves of the expression tree are typically\n+field references, created by :func:`gandiva::TreeExprBuilder::MakeField`, and\n+literal values, created by :func:`gandiva::TreeExprBuilder::MakeLiteral`. Nodes\n\nReview Comment:\n   If viewers just know already, then there's no problem!\n\n\n\n",
                    "created": "2022-09-27T15:09:34.812+0000",
                    "updated": "2022-09-27T15:09:34.812+0000",
                    "started": "2022-09-27T15:09:34.812+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "812545",
                    "issueId": "13482667"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 21000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@76e568d2[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@55d109f7[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@78c47f00[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@25074f5e[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@76e05abb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@2aa3232[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@594d7118[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@46afa8d0[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@326e173c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@610698e1[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5371f068[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@68a33bfe[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 21000,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Nov 08 23:12:27 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": [
            "C++"
        ],
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-11-08T23:12:27.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-17812/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2022-09-22T01:38:16.000+0000",
        "updated": "2022-11-09T01:32:22.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "5h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 21000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Documentation] Add Gandiva User Guide",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482667/comment/17630652",
                    "id": "17630652",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=willjones127",
                        "name": "willjones127",
                        "key": "willjones127",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Will Jones",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 14200\n[https://github.com/apache/arrow/pull/14200]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=willjones127",
                        "name": "willjones127",
                        "key": "willjones127",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Will Jones",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-11-08T23:12:27.855+0000",
                    "updated": "2022-11-08T23:12:27.855+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z18r2o:",
        "customfield_12314139": null
    }
}