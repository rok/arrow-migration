{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13071780",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071780",
    "key": "ARROW-1021",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341707",
                "id": "12341707",
                "description": "",
                "name": "0.9.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-03-19"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1021/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@39c8573b[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1a85fe67[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@10598486[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@259a262c[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@55f45c80[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@256d0841[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@794cd5de[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@d13279d[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7af46ae3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@37165afc[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@286b9be5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@3cd06eba[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Feb 12 20:25:28 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-02-12T20:25:25.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1021/watchers",
            "watchCount": 4,
            "isWatching": false
        },
        "created": "2017-05-13T19:45:52.000+0000",
        "updated": "2018-02-12T20:25:32.000+0000",
        "timeoriginalestimate": null,
        "description": "Follow up work to ARROW-819, ARROW-714",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Add documentation about using pyarrow from other Cython and C++ projects",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071780/comment/16356768",
                    "id": "16356768",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "What is the status of {{arrow/python/api.h}}? It looks more like an internal helper compared to {{arrow/python/pyarrow.h}}.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2018-02-08T10:31:23.726+0000",
                    "updated": "2018-02-08T10:31:23.726+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071780/comment/16356785",
                    "id": "16356785",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou opened a new pull request #1576: ARROW-1021: [Python] Add documentation for C++ pyarrow API\nURL: https://github.com/apache/arrow/pull/1576\n \n \n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-08T10:44:25.836+0000",
                    "updated": "2018-02-08T10:44:25.836+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071780/comment/16356809",
                    "id": "16356809",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "By the way, what's the intended use of {{pyarrow/public-api.pxi}}? The hyphen makes it non-cimportable:\r\n{code}\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n\r\nfrom pyarrow.public-api cimport *\r\n                  ^\r\n------------------------------------------------------------\r\n\r\nttt.pyx:2:19: Expected 'import' or 'cimport'\r\n{code}\r\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2018-02-08T11:04:59.286+0000",
                    "updated": "2018-02-08T11:04:59.286+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071780/comment/16356889",
                    "id": "16356889",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "body": "{{.pxi}} files are not meant to be used directly. They all render into {{pyarrow.lib}} (see the includes in {{pyarrow/lib.pyx}})",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "created": "2018-02-08T12:35:13.173+0000",
                    "updated": "2018-02-08T12:35:13.173+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071780/comment/16356896",
                    "id": "16356896",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Thanks. So, IIUC, 3rd party Cython code is expected to use only the symbols defined as {{cdef public}} in {{lib.pxd}}?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2018-02-08T12:43:53.756+0000",
                    "updated": "2018-02-08T12:43:53.756+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071780/comment/16356922",
                    "id": "16356922",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "I've tried to add a test for the Cython API: [https://github.com/apache/arrow/pull/1576/files#diff-8dbd260ac34efe0c510155d2a86c1405]\r\nDoes that reflect the intended idiom for calling into that API?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2018-02-08T13:13:25.975+0000",
                    "updated": "2018-02-08T13:13:25.975+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071780/comment/16356935",
                    "id": "16356935",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "body": "{quote}So, IIUC, 3rd party Cython code is expected to use only the symbols defined as\u00a0{{cdef public}}\u00a0in\u00a0{{lib.pxd}}?\r\n{quote}\r\nYes.\r\n{quote}Does that reflect the intended idiom for calling into that API?\r\n{quote}\r\nAlso yes but until now I have only used that API with {{boost::python}} and {{pybind11}}. I will add that afterwards to the documentation.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "created": "2018-02-08T13:28:49.543+0000",
                    "updated": "2018-02-08T13:28:49.543+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071780/comment/16356955",
                    "id": "16356955",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Note it is currently required to also add the Numpy C include path:\r\nhttps://travis-ci.org/pitrou/arrow/jobs/338970086#L3616-L3623\r\n\r\n{code}\r\nIn file included from pyarrow_cython_example.cpp:571:\r\nIn file included from /Users/travis/build/pitrou/arrow/pyarrow-test-3.6/lib/python3.6/site-packages/pyarrow/include/arrow/python/api.h:22:\r\nIn file included from /Users/travis/build/pitrou/arrow/pyarrow-test-3.6/lib/python3.6/site-packages/pyarrow/include/arrow/python/arrow_to_python.h:27:\r\nIn file included from /Users/travis/build/pitrou/arrow/pyarrow-test-3.6/lib/python3.6/site-packages/pyarrow/include/arrow/python/python_to_arrow.h:26:\r\nIn file included from /Users/travis/build/pitrou/arrow/pyarrow-test-3.6/lib/python3.6/site-packages/pyarrow/include/arrow/python/common.h:23:\r\nIn file included from /Users/travis/build/pitrou/arrow/pyarrow-test-3.6/lib/python3.6/site-packages/pyarrow/include/arrow/python/config.h:23:\r\n/Users/travis/build/pitrou/arrow/pyarrow-test-3.6/lib/python3.6/site-packages/pyarrow/include/arrow/python/numpy_interop.h:23:10: fatal error: 'numpy/numpyconfig.h' file not found\r\n#include <numpy/numpyconfig.h>\r\n{code}\r\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2018-02-08T13:47:41.556+0000",
                    "updated": "2018-02-08T13:47:41.556+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071780/comment/16357155",
                    "id": "16357155",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on issue #1576: ARROW-1021: [Python] Add documentation for C++ pyarrow API\nURL: https://github.com/apache/arrow/pull/1576#issuecomment-364164874\n \n \n   This required a bit more churn than I expected (especially to get the Cython example and test to work). I think this is ready for review now.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-08T16:21:56.822+0000",
                    "updated": "2018-02-08T16:21:56.822+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071780/comment/16357208",
                    "id": "16357208",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on issue #1576: ARROW-1021: [Python] Add documentation for C++ pyarrow API\nURL: https://github.com/apache/arrow/pull/1576#issuecomment-364175414\n \n \n   Hmm, there's still an AppVeyor failure. Will try to fix :-/\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-08T16:52:45.711+0000",
                    "updated": "2018-02-08T16:52:45.711+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071780/comment/16357330",
                    "id": "16357330",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on issue #1576: ARROW-1021: [Python] Add documentation for C++ pyarrow API\nURL: https://github.com/apache/arrow/pull/1576#issuecomment-364197384\n \n \n   Ok, I'm afraid I don't know how to get the Windows Cython test to work. Here is the log:\r\n   ```\r\n   pyarrow_cython_example.obj : error LNK2001: unresolved external symbol \"__declspec(dllimport) public: __int64 __cdecl arrow::Array::length(void)const \" (__imp_?length@Array@arrow@@QEBA_JXZ)\r\n   C:\\Users\\appveyor\\AppData\\Local\\Temp\\1\\pytest-of-appveyor\\pytest-0\\test_cython_api0\\pyarrow_cython_example.cp35-win_amd64.pyd : fatal error LNK1120: 1 unresolved externals\r\n   ```\r\n   (from https://ci.appveyor.com/project/pitrou/arrow/build/1.0.60/job/aruj4pno67s4xpcf#L6242 )\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-08T18:03:54.613+0000",
                    "updated": "2018-02-08T18:03:54.613+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071780/comment/16357514",
                    "id": "16357514",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1576: ARROW-1021: [Python] Add documentation for C++ pyarrow API\nURL: https://github.com/apache/arrow/pull/1576#issuecomment-364235254\n \n \n   I can take a look at the Windows issue (I have a machine to test on)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-08T20:16:53.092+0000",
                    "updated": "2018-02-08T20:16:53.092+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071780/comment/16359576",
                    "id": "16359576",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy commented on issue #1576: ARROW-1021: [Python] Add documentation for C++ pyarrow API\nURL: https://github.com/apache/arrow/pull/1576#issuecomment-364678900\n \n \n   @pitrou @wesm Note that there are free Windows VMs for 90 days to test on https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/ If there is ever a dark and lonely day, I might try to get my head around this to write an ansible/vagrant deployment that sets up the Vm including a Windows environment as I have never been able to test it myself. But don't expect this to happen soon.\r\n   \r\n   I have not read fully through the license for these VMs but as far as I understand they are made exactly for testing software for Windows.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-10T18:32:58.059+0000",
                    "updated": "2018-02-10T18:32:58.059+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071780/comment/16359592",
                    "id": "16359592",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on issue #1576: ARROW-1021: [Python] Add documentation for C++ pyarrow API\nURL: https://github.com/apache/arrow/pull/1576#issuecomment-364679838\n \n \n   @xhochy I do have a Windows VM at home. But that won't allow me fixing the error, as that requires platform-specific knowledge about the Windows linker that I don't have ;-)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-10T18:46:19.664+0000",
                    "updated": "2018-02-10T18:46:19.664+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071780/comment/16360140",
                    "id": "16360140",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1576: ARROW-1021: [Python] Add documentation for C++ pyarrow API\nURL: https://github.com/apache/arrow/pull/1576#issuecomment-364791831\n \n \n   Taking a look at this now-ish\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-11T21:44:18.581+0000",
                    "updated": "2018-02-11T21:44:18.581+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071780/comment/16360155",
                    "id": "16360155",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1576: ARROW-1021: [Python] Add documentation for C++ pyarrow API\nURL: https://github.com/apache/arrow/pull/1576#issuecomment-364797277\n \n \n   So I believe the issue on Windows is that we need the `.lib` files in addition to the `.dll` files. It doesn't appear that these are being installed in `%INSTALL_PREFIX%\\lib`. Let me tinker with it and see if I can get things to work locally\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-11T22:47:19.817+0000",
                    "updated": "2018-02-11T22:47:19.817+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071780/comment/16360162",
                    "id": "16360162",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1576: ARROW-1021: [Python] Add documentation for C++ pyarrow API\nURL: https://github.com/apache/arrow/pull/1576#issuecomment-364798904\n \n \n   Correction: we need to add `arrow_python` to `libraries` and make sure the `.lib` files (which are being installed) are visible in `library_dirs` in setuptools. I tried to look how Cython deals with NumPy for linking on Windows but it wasn't obvious what's going on. We might need to add a function that will try to locate `arrow_python.lib`, I will try some things to try to at least get the test case working\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-11T23:09:27.249+0000",
                    "updated": "2018-02-11T23:09:27.249+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071780/comment/16360166",
                    "id": "16360166",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1576: ARROW-1021: [Python] Add documentation for C++ pyarrow API\nURL: https://github.com/apache/arrow/pull/1576#issuecomment-364800548\n \n \n   I got this to work locally on Windows -- the documentation will need to be updated to account for the new `get_libraries` and `get_library_dirs` functions. Should we create a `pyarrow.distutils` module or something or leave these at the top level (either is OK by me)\r\n   \r\n   We should try out the example extension with both conda-style and pip-style installations -- I left a TODO because I'm not sure we need to include the `%PYTHON_DIR%\\Library\\lib` directory in the `library_dirs`\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-11T23:28:26.426+0000",
                    "updated": "2018-02-11T23:28:26.426+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071780/comment/16360728",
                    "id": "16360728",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on issue #1576: ARROW-1021: [Python] Add documentation for C++ pyarrow API\nURL: https://github.com/apache/arrow/pull/1576#issuecomment-364920070\n \n \n   >  Should we create a pyarrow.distutils module or something or leave these at the top level (either is OK by me)\r\n   \r\n   Leaving them at the top-level sounds fine to me.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-12T13:19:22.381+0000",
                    "updated": "2018-02-12T13:19:22.381+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071780/comment/16360732",
                    "id": "16360732",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on a change in pull request #1576: ARROW-1021: [Python] Add documentation for C++ pyarrow API\nURL: https://github.com/apache/arrow/pull/1576#discussion_r167553178\n \n \n\n ##########\n File path: python/pyarrow/__init__.py\n ##########\n @@ -165,3 +165,38 @@ def get_include():\n     \"\"\"\n     import os\n     return os.path.join(os.path.dirname(__file__), 'include')\n+\n+\n+def get_libraries():\n+    \"\"\"\n+    Return list of library names to include in the `libraries` argument for C\n+    or Cython extensions using pyarrow\n+    \"\"\"\n+    return ['arrow_python']\n+\n+\n+def get_library_dirs():\n+    \"\"\"\n+    Return lists of directories likely to contain Arrow C++ libraries for\n+    linking C or Cython extensions using pyarrow\n+    \"\"\"\n+    import os\n+    import sys\n+    package_cwd = os.path.dirname(__file__)\n+\n+    library_dirs = [package_cwd]\n+\n+    # TODO(wesm): Is this necessary, or does setuptools within a conda\n+    # installation add Library\\lib to the linker path for MSVC?\n+    try:\n+        site_packages, _ = os.path.split(package_cwd)\n+        python_base_install, _ = os.path.split(site_packages)\n+\n+        if sys.platform == 'win32':\n+            library_dirs.append(os.path.join(python_base_install,\n+                                             'Library', 'lib'))\n+    except Exception:\n \n Review comment:\n   I don't think `os.path.split` and `os.path.join` can raise, as they don't do any filesystem I/O.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-12T13:22:01.444+0000",
                    "updated": "2018-02-12T13:22:01.444+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071780/comment/16361130",
                    "id": "16361130",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1576: ARROW-1021: [Python] Add documentation for C++ pyarrow API\nURL: https://github.com/apache/arrow/pull/1576#issuecomment-364999709\n \n \n   OK, going to put the finishing touches on this now and get the Linux tests passing\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-12T17:34:34.333+0000",
                    "updated": "2018-02-12T17:34:34.333+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071780/comment/16361273",
                    "id": "16361273",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy commented on a change in pull request #1576: ARROW-1021: [Python] Add documentation for C++ pyarrow API\nURL: https://github.com/apache/arrow/pull/1576#discussion_r167651696\n \n \n\n ##########\n File path: python/doc/source/api.rst\n ##########\n @@ -342,3 +342,15 @@ Apache Parquet\n    read_schema\n    write_metadata\n    write_table\n+\n+.. currentmodule:: pyarrow\n+\n+Using with C extensions\n+-----------------------\n+\n+.. autosummary::\n+   :toctree: generated/\n+\n+   get_include\n \n Review comment:\n   Already made me a reminder to use them in `turbodbc` https://github.com/blue-yonder/turbodbc/issues/147. Much appreciated functionality.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-12T18:55:16.307+0000",
                    "updated": "2018-02-12T18:55:16.307+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071780/comment/16361311",
                    "id": "16361311",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1576: ARROW-1021: [Python] Add documentation for C++ pyarrow API\nURL: https://github.com/apache/arrow/pull/1576#issuecomment-365032119\n \n \n   Appveyor build running here: https://ci.appveyor.com/project/pitrou/arrow/build/1.0.67. Will merge once that's looking good\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-12T19:19:29.888+0000",
                    "updated": "2018-02-12T19:19:29.888+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071780/comment/16361401",
                    "id": "16361401",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 1576\n[https://github.com/apache/arrow/pull/1576]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-02-12T20:25:25.995+0000",
                    "updated": "2018-02-12T20:25:25.995+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13071780/comment/16361402",
                    "id": "16361402",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm closed pull request #1576: ARROW-1021: [Python] Add documentation for C++ pyarrow API\nURL: https://github.com/apache/arrow/pull/1576\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/.gitignore b/.gitignore\nindex c38694e1f..f5b235a89 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -21,6 +21,7 @@\n *.o\n *.py[ocd]\n *.so\n+*.so.*\n *.dylib\n .build_cache_dir\n MANIFEST\ndiff --git a/ci/msvc-build.bat b/ci/msvc-build.bat\nindex 58dfc2a14..069ddf0fc 100644\n--- a/ci/msvc-build.bat\n+++ b/ci/msvc-build.bat\n@@ -137,14 +137,20 @@ cmake -G \"%GENERATOR%\" ^\n cmake --build . --target INSTALL --config %CONFIGURATION% || exit /B\n popd\n \n-@rem Build and import pyarrow\n+@rem Build and install pyarrow\n @rem parquet-cpp has some additional runtime dependencies that we need to figure out\n @rem see PARQUET-1018\n \n pushd python\n \n set PYARROW_CXXFLAGS=/WX\n-python setup.py build_ext --inplace --with-parquet --bundle-arrow-cpp bdist_wheel  || exit /B\n-py.test pyarrow -r sxX --durations=15 -v -s --parquet || exit /B\n+python setup.py build_ext --with-parquet --bundle-arrow-cpp ^\n+    install -q --single-version-externally-managed --record=record.text ^\n+    bdist_wheel || exit /B\n+\n+@rem Test directly from installed location\n+\n+SET PYARROW_PATH=%CONDA_PREFIX%\\Lib\\site-packages\\pyarrow\n+py.test -r sxX --durations=15 -v %PYARROW_PATH% --parquet || exit /B\n \n popd\ndiff --git a/python/doc/Makefile b/python/doc/Makefile\nindex 1b9f70702..eacb124c3 100644\n--- a/python/doc/Makefile\n+++ b/python/doc/Makefile\n@@ -20,7 +20,7 @@\n #\n \n # You can set these variables from the command line.\n-SPHINXOPTS    =\n+SPHINXOPTS    = -j4\n SPHINXBUILD   = sphinx-build\n PAPER         =\n BUILDDIR      = _build\ndiff --git a/python/doc/source/api.rst b/python/doc/source/api.rst\nindex 2d3e39c69..a71e92b0b 100644\n--- a/python/doc/source/api.rst\n+++ b/python/doc/source/api.rst\n@@ -342,3 +342,15 @@ Apache Parquet\n    read_schema\n    write_metadata\n    write_table\n+\n+.. currentmodule:: pyarrow\n+\n+Using with C extensions\n+-----------------------\n+\n+.. autosummary::\n+   :toctree: generated/\n+\n+   get_include\n+   get_libraries\n+   get_library_dirs\ndiff --git a/python/doc/source/extending.rst b/python/doc/source/extending.rst\nindex 2d6caed26..4a358984f 100644\n--- a/python/doc/source/extending.rst\n+++ b/python/doc/source/extending.rst\n@@ -15,19 +15,332 @@\n .. specific language governing permissions and limitations\n .. under the License.\n \n-.. currentmodule:: pyarrow\n+.. currentmodule:: pyarrow.lib\n .. _extending:\n \n-Building C++ and Cython Extensions using pyarrow\n-================================================\n+Using pyarrow from C++ and Cython Code\n+======================================\n \n-pyarrow features both a Cython and C++ API. We intend to fully document the\n-details of how to do this.\n+pyarrow features both a Cython and C++ API.\n \n-The Arrow C++ header files are bundled with a pyarrow installation. To get the\n-absolute path to this directory (like ``numpy.get_include()``), use:\n+C++ API\n+-------\n+\n+.. default-domain:: cpp\n+\n+The Arrow C++ header files are bundled with a pyarrow installation.\n+To get the absolute path to this directory (like ``numpy.get_include()``), use:\n \n .. code-block:: python\n \n    import pyarrow as pa\n    pa.get_include()\n+\n+Assuming the path above is on your compiler's include path, the pyarrow API\n+can be included using the following directive:\n+\n+.. code-block:: cpp\n+\n+   #include <arrow/python/pyarrow.h>\n+\n+This will not include other parts of the Arrow API, which you will need\n+to include yourself (for example ``arrow/api.h``).\n+\n+When building C extensions that use the Arrow C++ libraries, you must add\n+appropriate linker flags. We have provided functions ``pyarrow.get_libraries``\n+and ``pyarrow.get_library_dirs`` which return a list of library names and\n+likely library install locations (if you installed pyarrow with pip or\n+conda). These must be included when declaring your C extensions with distutils\n+(see below).\n+\n+Initializing the API\n+~~~~~~~~~~~~~~~~~~~~\n+\n+.. function:: int import_pyarrow()\n+\n+   Initialize inner pointers of the pyarrow API.  On success, 0 is\n+   returned.  Otherwise, -1 is returned and a Python exception is set.\n+\n+   It is mandatory to call this function before calling any other function\n+   in the pyarrow C++ API.  Failing to do so will likely lead to crashes.\n+\n+Wrapping and Unwrapping\n+~~~~~~~~~~~~~~~~~~~~~~~\n+\n+pyarrow provides the following functions to go back and forth between\n+Python wrappers (as exposed by the pyarrow Python API) and the underlying\n+C++ objects.\n+\n+.. function:: bool is_array(PyObject* obj)\n+\n+   Return whether *obj* wraps an Arrow C++ :class:`Array` pointer;\n+   in other words, whether *obj* is a :py:class:`pyarrow.Array` instance.\n+\n+.. function:: bool is_buffer(PyObject* obj)\n+\n+   Return whether *obj* wraps an Arrow C++ :class:`Buffer` pointer;\n+   in other words, whether *obj* is a :py:class:`pyarrow.Buffer` instance.\n+\n+.. function:: bool is_column(PyObject* obj)\n+\n+   Return whether *obj* wraps an Arrow C++ :class:`Column` pointer;\n+   in other words, whether *obj* is a :py:class:`pyarrow.Column` instance.\n+\n+.. function:: bool is_data_type(PyObject* obj)\n+\n+   Return whether *obj* wraps an Arrow C++ :class:`DataType` pointer;\n+   in other words, whether *obj* is a :py:class:`pyarrow.DataType` instance.\n+\n+.. function:: bool is_field(PyObject* obj)\n+\n+   Return whether *obj* wraps an Arrow C++ :class:`Field` pointer;\n+   in other words, whether *obj* is a :py:class:`pyarrow.Field` instance.\n+\n+.. function:: bool is_record_batch(PyObject* obj)\n+\n+   Return whether *obj* wraps an Arrow C++ :class:`RecordBatch` pointer;\n+   in other words, whether *obj* is a :py:class:`pyarrow.RecordBatch` instance.\n+\n+.. function:: bool is_schema(PyObject* obj)\n+\n+   Return whether *obj* wraps an Arrow C++ :class:`Schema` pointer;\n+   in other words, whether *obj* is a :py:class:`pyarrow.Schema` instance.\n+\n+.. function:: bool is_table(PyObject* obj)\n+\n+   Return whether *obj* wraps an Arrow C++ :class:`Table` pointer;\n+   in other words, whether *obj* is a :py:class:`pyarrow.Table` instance.\n+\n+.. function:: bool is_tensor(PyObject* obj)\n+\n+   Return whether *obj* wraps an Arrow C++ :class:`Tensor` pointer;\n+   in other words, whether *obj* is a :py:class:`pyarrow.Tensor` instance.\n+\n+The following functions expect a pyarrow object, unwrap the underlying\n+Arrow C++ API pointer, and put it in the *out* parameter.  The returned\n+:class:`Status` object must be inspected first to know whether any error\n+occurred.  If successful, *out* is guaranteed to be non-NULL.\n+\n+.. function:: Status unwrap_array(PyObject* obj, std::shared_ptr<Array>* out)\n+\n+   Unwrap the Arrow C++ :class:`Array` pointer from *obj* and put it in *out*.\n+\n+.. function:: Status unwrap_buffer(PyObject* obj, std::shared_ptr<Buffer>* out)\n+\n+   Unwrap the Arrow C++ :class:`Buffer` pointer from *obj* and put it in *out*.\n+\n+.. function:: Status unwrap_column(PyObject* obj, std::shared_ptr<Column>* out)\n+\n+   Unwrap the Arrow C++ :class:`Column` pointer from *obj* and put it in *out*.\n+\n+.. function:: Status unwrap_data_type(PyObject* obj, std::shared_ptr<DataType>* out)\n+\n+   Unwrap the Arrow C++ :class:`DataType` pointer from *obj* and put it in *out*.\n+\n+.. function:: Status unwrap_field(PyObject* obj, std::shared_ptr<Field>* out)\n+\n+   Unwrap the Arrow C++ :class:`Field` pointer from *obj* and put it in *out*.\n+\n+.. function:: Status unwrap_record_batch(PyObject* obj, std::shared_ptr<RecordBatch>* out)\n+\n+   Unwrap the Arrow C++ :class:`RecordBatch` pointer from *obj* and put it in *out*.\n+\n+.. function:: Status unwrap_schema(PyObject* obj, std::shared_ptr<Schema>* out)\n+\n+   Unwrap the Arrow C++ :class:`Schema` pointer from *obj* and put it in *out*.\n+\n+.. function:: Status unwrap_table(PyObject* obj, std::shared_ptr<Table>* out)\n+\n+   Unwrap the Arrow C++ :class:`Table` pointer from *obj* and put it in *out*.\n+\n+.. function:: Status unwrap_tensor(PyObject* obj, std::shared_ptr<Tensor>* out)\n+\n+   Unwrap the Arrow C++ :class:`Tensor` pointer from *obj* and put it in *out*.\n+\n+The following functions take an Arrow C++ API pointer and wrap it in a\n+pyarray object of the corresponding type.  A new reference is returned.\n+On error, NULL is returned and a Python exception is set.\n+\n+.. function:: PyObject* wrap_array(const std::shared_ptr<Array>& array)\n+\n+   Wrap the Arrow C++ *array* in a :py:class:`pyarrow.Array` instance.\n+\n+.. function:: PyObject* wrap_buffer(const std::shared_ptr<Buffer>& buffer)\n+\n+   Wrap the Arrow C++ *buffer* in a :py:class:`pyarrow.Buffer` instance.\n+\n+.. function:: PyObject* wrap_column(const std::shared_ptr<Column>& column)\n+\n+   Wrap the Arrow C++ *column* in a :py:class:`pyarrow.Column` instance.\n+\n+.. function:: PyObject* wrap_data_type(const std::shared_ptr<DataType>& data_type)\n+\n+   Wrap the Arrow C++ *data_type* in a :py:class:`pyarrow.DataType` instance.\n+\n+.. function:: PyObject* wrap_field(const std::shared_ptr<Field>& field)\n+\n+   Wrap the Arrow C++ *field* in a :py:class:`pyarrow.Field` instance.\n+\n+.. function:: PyObject* wrap_record_batch(const std::shared_ptr<RecordBatch>& batch)\n+\n+   Wrap the Arrow C++ record *batch* in a :py:class:`pyarrow.RecordBatch` instance.\n+\n+.. function:: PyObject* wrap_schema(const std::shared_ptr<Schema>& schema)\n+\n+   Wrap the Arrow C++ *schema* in a :py:class:`pyarrow.Schema` instance.\n+\n+.. function:: PyObject* wrap_table(const std::shared_ptr<Table>& table)\n+\n+   Wrap the Arrow C++ *table* in a :py:class:`pyarrow.Table` instance.\n+\n+.. function:: PyObject* wrap_tensor(const std::shared_ptr<Tensor>& tensor)\n+\n+   Wrap the Arrow C++ *tensor* in a :py:class:`pyarrow.Tensor` instance.\n+\n+\n+Cython API\n+----------\n+\n+.. default-domain:: py\n+\n+The Cython API more or less mirrors the C++ API, but the calling convention\n+can be different as required by Cython.  In Cython, you don't need to\n+initialize the API as that will be handled automaticalled by the ``cimport``\n+directive.\n+\n+.. note::\n+   Classes from the Arrow C++ API are renamed when exposed in Cython, to\n+   avoid named clashes with the corresponding Python classes.  For example,\n+   C++ Arrow arrays have the ``CArray`` type and ``Array`` is the\n+   corresponding Python wrapper class.\n+\n+Wrapping and Unwrapping\n+~~~~~~~~~~~~~~~~~~~~~~~\n+\n+The following functions expect a pyarrow object, unwrap the underlying\n+Arrow C++ API pointer, and return it.  NULL is returned (without setting\n+an exception) if the input is not of the right type.\n+\n+.. function:: pyarrow_unwrap_array(obj) -> shared_ptr[CArray]\n+\n+   Unwrap the Arrow C++ :cpp:class:`Array` pointer from *obj*.\n+\n+.. function:: pyarrow_unwrap_batch(obj) -> shared_ptr[CRecordBatch]\n+\n+   Unwrap the Arrow C++ :cpp:class:`RecordBatch` pointer from *obj*.\n+\n+.. function:: pyarrow_unwrap_buffer(obj) -> shared_ptr[CBuffer]\n+\n+   Unwrap the Arrow C++ :cpp:class:`Buffer` pointer from *obj*.\n+\n+.. function:: pyarrow_unwrap_column(obj) -> shared_ptr[CColumn]\n+\n+   Unwrap the Arrow C++ :cpp:class:`Column` pointer from *obj*.\n+\n+.. function:: pyarrow_unwrap_data_type(obj) -> shared_ptr[CDataType]\n+\n+   Unwrap the Arrow C++ :cpp:class:`CDataType` pointer from *obj*.\n+\n+.. function:: pyarrow_unwrap_field(obj) -> shared_ptr[CField]\n+\n+   Unwrap the Arrow C++ :cpp:class:`Field` pointer from *obj*.\n+\n+.. function:: pyarrow_unwrap_schema(obj) -> shared_ptr[CSchema]\n+\n+   Unwrap the Arrow C++ :cpp:class:`Schema` pointer from *obj*.\n+\n+.. function:: pyarrow_unwrap_table(obj) -> shared_ptr[CTable]\n+\n+   Unwrap the Arrow C++ :cpp:class:`Table` pointer from *obj*.\n+\n+.. function:: pyarrow_unwrap_tensor(obj) -> shared_ptr[CTensor]\n+\n+   Unwrap the Arrow C++ :cpp:class:`Tensor` pointer from *obj*.\n+\n+The following functions take a Arrow C++ API pointer and wrap it in a\n+pyarray object of the corresponding type.  An exception is raised on error.\n+\n+.. function:: pyarrow_wrap_array(sp_array: const shared_ptr[CArray]& array) -> object\n+\n+   Wrap the Arrow C++ *array* in a Python :class:`pyarrow.Array` instance.\n+\n+.. function:: pyarrow_wrap_batch(sp_array: const shared_ptr[CRecordBatch]& batch) -> object\n+\n+   Wrap the Arrow C++ record *batch* in a Python :class:`pyarrow.RecordBatch` instance.\n+\n+.. function:: pyarrow_wrap_buffer(sp_array: const shared_ptr[CBuffer]& buffer) -> object\n+\n+   Wrap the Arrow C++ *buffer* in a Python :class:`pyarrow.Buffer` instance.\n+\n+.. function:: pyarrow_wrap_column(sp_array: const shared_ptr[CColumn]& column) -> object\n+\n+   Wrap the Arrow C++ *column* in a Python :class:`pyarrow.Column` instance.\n+\n+.. function:: pyarrow_wrap_data_type(sp_array: const shared_ptr[CDataType]& data_type) -> object\n+\n+   Wrap the Arrow C++ *data_type* in a Python :class:`pyarrow.DataType` instance.\n+\n+.. function:: pyarrow_wrap_field(sp_array: const shared_ptr[CField]& field) -> object\n+\n+   Wrap the Arrow C++ *field* in a Python :class:`pyarrow.Field` instance.\n+\n+.. function:: pyarrow_wrap_resizable_buffer(sp_array: const shared_ptr[CResizableBuffer]& buffer) -> object\n+\n+   Wrap the Arrow C++ resizable *buffer* in a Python :class:`pyarrow.ResizableBuffer` instance.\n+\n+.. function:: pyarrow_wrap_schema(sp_array: const shared_ptr[CSchema]& schema) -> object\n+\n+   Wrap the Arrow C++ *schema* in a Python :class:`pyarrow.Schema` instance.\n+\n+.. function:: pyarrow_wrap_table(sp_array: const shared_ptr[CTable]& table) -> object\n+\n+   Wrap the Arrow C++ *table* in a Python :class:`pyarrow.Table` instance.\n+\n+.. function:: pyarrow_wrap_tensor(sp_array: const shared_ptr[CTensor]& tensor) -> object\n+\n+   Wrap the Arrow C++ *tensor* in a Python :class:`pyarrow.Tensor` instance.\n+\n+Example\n+~~~~~~~\n+\n+The following Cython module shows how to unwrap a Python object and call\n+the underlying C++ object's API.\n+\n+.. code-block:: python\n+\n+   # distutils: language=c++\n+\n+   from pyarrow.lib cimport *\n+\n+   def get_array_length(obj):\n+       # Just an example function accessing both the pyarrow Cython API\n+       # and the Arrow C++ API\n+       cdef shared_ptr[CArray] arr = pyarrow_unwrap_array(obj)\n+       if arr.get() == NULL:\n+           raise TypeError(\"not an array\")\n+       return arr.get().length()\n+\n+To build this module, you will need a slightly customized ``setup.py`` file\n+(this is assuming the file above is named ``example.pyx``):\n+\n+.. code-block:: python\n+\n+    from distutils.core import setup\n+    from Cython.Build import cythonize\n+\n+    import numpy as np\n+\n+    import pyarrow as pa\n+\n+    ext_modules = cythonize(\"example.pyx\")\n+\n+    for ext in ext_modules:\n+        # The Numpy C headers are currently required\n+        ext.include_dirs.append(np.get_include())\n+        ext.include_dirs.append(pa.get_include())\n+        ext.libraries.extend(pa.get_libraries())\n+        ext.library_dirs.append(pa.get_library_dirs())\n+\n+    setup(\n+        ext_modules=ext_modules,\n+    )\ndiff --git a/python/pyarrow/__init__.py b/python/pyarrow/__init__.py\nindex 8b3cba924..d95954ed3 100644\n--- a/python/pyarrow/__init__.py\n+++ b/python/pyarrow/__init__.py\n@@ -165,3 +165,33 @@ def get_include():\n     \"\"\"\n     import os\n     return os.path.join(os.path.dirname(__file__), 'include')\n+\n+\n+def get_libraries():\n+    \"\"\"\n+    Return list of library names to include in the `libraries` argument for C\n+    or Cython extensions using pyarrow\n+    \"\"\"\n+    return ['arrow_python']\n+\n+\n+def get_library_dirs():\n+    \"\"\"\n+    Return lists of directories likely to contain Arrow C++ libraries for\n+    linking C or Cython extensions using pyarrow\n+    \"\"\"\n+    import os\n+    import sys\n+    package_cwd = os.path.dirname(__file__)\n+\n+    library_dirs = [package_cwd]\n+\n+    if sys.platform == 'win32':\n+        # TODO(wesm): Is this necessary, or does setuptools within a conda\n+        # installation add Library\\lib to the linker path for MSVC?\n+        site_packages, _ = os.path.split(package_cwd)\n+        python_base_install, _ = os.path.split(site_packages)\n+        library_dirs.append(os.path.join(python_base_install,\n+                                         'Library', 'lib'))\n+\n+    return library_dirs\ndiff --git a/python/pyarrow/lib.pxd b/python/pyarrow/lib.pxd\nindex 161562c04..b1433ecde 100644\n--- a/python/pyarrow/lib.pxd\n+++ b/python/pyarrow/lib.pxd\n@@ -347,16 +347,29 @@ cdef class NativeFile:\n cdef get_reader(object source, shared_ptr[RandomAccessFile]* reader)\n cdef get_writer(object source, shared_ptr[OutputStream]* writer)\n \n+cdef dict box_metadata(const CKeyValueMetadata* sp_metadata)\n+\n+# Public Cython API for 3rd party code\n+\n+cdef public object pyarrow_wrap_array(const shared_ptr[CArray]& sp_array)\n+# XXX pyarrow.h calls it `wrap_record_batch`\n+cdef public object pyarrow_wrap_batch(const shared_ptr[CRecordBatch]& cbatch)\n cdef public object pyarrow_wrap_buffer(const shared_ptr[CBuffer]& buf)\n-cdef public object pyarrow_wrap_resizable_buffer(\n-    const shared_ptr[CResizableBuffer]& buf)\n+cdef public object pyarrow_wrap_column(const shared_ptr[CColumn]& ccolumn)\n cdef public object pyarrow_wrap_data_type(const shared_ptr[CDataType]& type)\n cdef public object pyarrow_wrap_field(const shared_ptr[CField]& field)\n+cdef public object pyarrow_wrap_resizable_buffer(\n+    const shared_ptr[CResizableBuffer]& buf)\n cdef public object pyarrow_wrap_schema(const shared_ptr[CSchema]& type)\n-cdef public object pyarrow_wrap_array(const shared_ptr[CArray]& sp_array)\n-cdef public object pyarrow_wrap_tensor(const shared_ptr[CTensor]& sp_tensor)\n-cdef public object pyarrow_wrap_column(const shared_ptr[CColumn]& ccolumn)\n cdef public object pyarrow_wrap_table(const shared_ptr[CTable]& ctable)\n-cdef public object pyarrow_wrap_batch(const shared_ptr[CRecordBatch]& cbatch)\n+cdef public object pyarrow_wrap_tensor(const shared_ptr[CTensor]& sp_tensor)\n \n-cdef dict box_metadata(const CKeyValueMetadata* sp_metadata)\n+cdef public shared_ptr[CArray] pyarrow_unwrap_array(object array)\n+cdef public shared_ptr[CRecordBatch] pyarrow_unwrap_batch(object batch)\n+cdef public shared_ptr[CBuffer] pyarrow_unwrap_buffer(object buffer)\n+cdef public shared_ptr[CColumn] pyarrow_unwrap_column(object column)\n+cdef public shared_ptr[CDataType] pyarrow_unwrap_data_type(object data_type)\n+cdef public shared_ptr[CField] pyarrow_unwrap_field(object field)\n+cdef public shared_ptr[CSchema] pyarrow_unwrap_schema(object schema)\n+cdef public shared_ptr[CTable] pyarrow_unwrap_table(object table)\n+cdef public shared_ptr[CTensor] pyarrow_unwrap_tensor(object tensor)\ndiff --git a/python/pyarrow/tests/pyarrow_cython_example.pyx b/python/pyarrow/tests/pyarrow_cython_example.pyx\nnew file mode 100644\nindex 000000000..b5e54063d\n--- /dev/null\n+++ b/python/pyarrow/tests/pyarrow_cython_example.pyx\n@@ -0,0 +1,29 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# distutils: language=c++\n+\n+from pyarrow.lib cimport *\n+\n+\n+def get_array_length(obj):\n+    # Just an example function accessing both the pyarrow Cython API\n+    # and the Arrow C++ API\n+    cdef shared_ptr[CArray] arr = pyarrow_unwrap_array(obj)\n+    if arr.get() == NULL:\n+        raise TypeError(\"not an array\")\n+    return arr.get().length()\ndiff --git a/python/pyarrow/tests/test_cython.py b/python/pyarrow/tests/test_cython.py\nnew file mode 100644\nindex 000000000..51b1a48de\n--- /dev/null\n+++ b/python/pyarrow/tests/test_cython.py\n@@ -0,0 +1,100 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+import os\n+import shutil\n+import subprocess\n+import sys\n+\n+import pytest\n+\n+import pyarrow as pa\n+\n+\n+here = os.path.dirname(os.path.abspath(__file__))\n+\n+setup_template = \"\"\"if 1:\n+    from distutils.core import setup\n+    from Cython.Build import cythonize\n+\n+    import numpy as np\n+\n+    import pyarrow as pa\n+\n+    ext_modules = cythonize({pyx_file!r})\n+    compiler_opts = {compiler_opts!r}\n+    custom_ld_path = {test_ld_path!r}\n+\n+    for ext in ext_modules:\n+        # XXX required for numpy/numpyconfig.h,\n+        # included from arrow/python/api.h\n+        ext.include_dirs.append(np.get_include())\n+        ext.include_dirs.append(pa.get_include())\n+        ext.libraries.extend(pa.get_libraries())\n+        ext.library_dirs.extend(pa.get_library_dirs())\n+        if custom_ld_path:\n+            ext.library_dirs.append(custom_ld_path)\n+        ext.extra_compile_args.extend(compiler_opts)\n+\n+    setup(\n+        ext_modules=ext_modules,\n+    )\n+\"\"\"\n+\n+\n+def test_cython_api(tmpdir):\n+    \"\"\"\n+    Basic test for the Cython API.\n+    \"\"\"\n+    pytest.importorskip('Cython')\n+\n+    if 'ARROW_HOME' in os.environ:\n+        ld_path_default = os.path.join(os.environ['ARROW_HOME'], 'lib')\n+\n+    test_ld_path = os.environ.get('PYARROW_TEST_LD_PATH', ld_path_default)\n+\n+    with tmpdir.as_cwd():\n+        # Set up temporary workspace\n+        pyx_file = 'pyarrow_cython_example.pyx'\n+        shutil.copyfile(os.path.join(here, pyx_file),\n+                        os.path.join(str(tmpdir), pyx_file))\n+        # Create setup.py file\n+        if os.name == 'posix':\n+            compiler_opts = ['-std=c++11']\n+        else:\n+            compiler_opts = []\n+        setup_code = setup_template.format(pyx_file=pyx_file,\n+                                           compiler_opts=compiler_opts,\n+                                           test_ld_path=test_ld_path)\n+        with open('setup.py', 'w') as f:\n+            f.write(setup_code)\n+\n+        # Compile extension module\n+        subprocess.check_call([sys.executable, 'setup.py',\n+                               'build_ext', '--inplace'])\n+\n+        # Check basic functionality\n+        orig_path = sys.path[:]\n+        sys.path.insert(0, str(tmpdir))\n+        try:\n+            mod = __import__('pyarrow_cython_example')\n+            arr = pa.array([1, 2, 3])\n+            assert mod.get_array_length(arr) == 3\n+            with pytest.raises(TypeError, match=\"not an array\"):\n+                mod.get_array_length(None)\n+        finally:\n+            sys.path = orig_path\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-12T20:25:28.350+0000",
                    "updated": "2018-02-12T20:25:28.350+0000"
                }
            ],
            "maxResults": 25,
            "total": 25,
            "startAt": 0
        },
        "customfield_12311820": "0|i3exvj:",
        "customfield_12314139": null
    }
}