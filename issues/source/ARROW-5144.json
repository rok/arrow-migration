{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13226806",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226806",
    "key": "ARROW-5144",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12344925",
                "id": "12344925",
                "description": "",
                "name": "0.14.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-07-04"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/2",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/critical.svg",
            "name": "Critical",
            "id": "2"
        },
        "labels": [
            "parquet",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "1.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343937",
                "id": "12343937",
                "description": "",
                "name": "0.13.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-04-01"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
            "name": "kszucs",
            "key": "kszucs",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Krisztian Szucs",
            "active": true,
            "timeZone": "Europe/Budapest"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=mdurant",
            "name": "mdurant",
            "key": "mdurant",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Martin Durant",
            "active": true,
            "timeZone": "America/Montreal"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=mdurant",
            "name": "mdurant",
            "key": "mdurant",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Martin Durant",
            "active": true,
            "timeZone": "America/Montreal"
        },
        "aggregateprogress": {
            "progress": 13800,
            "total": 13800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 13800,
            "total": 13800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5144/votes",
            "votes": 1,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 24,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226806/worklog/228358",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #4156: ARROW-5144: [Python] ParquetDataset and CloudParquetPiece not serializable\nURL: https://github.com/apache/arrow/pull/4156\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-16T12:44:12.887+0000",
                    "updated": "2019-04-16T12:44:12.887+0000",
                    "started": "2019-04-16T12:44:12.887+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "228358",
                    "issueId": "13226806"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226806/worklog/228438",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #4156: ARROW-5144: [Python] ParquetDataset and ParquetPiece not serializable\nURL: https://github.com/apache/arrow/pull/4156#discussion_r275835819\n \n \n\n ##########\n File path: python/pyarrow/tests/test_parquet.py\n ##########\n @@ -2306,6 +2307,34 @@ def test_backwards_compatible_column_metadata_handling(datadir):\n     tm.assert_frame_equal(result, expected[['a']].reset_index(drop=True))\n \n \n+@pytest.mark.pandas\n+@pytest.mark.skipif(pickle.HIGHEST_PROTOCOL < 3,\n \n Review comment:\n   I'm not sure about which protocol has introduced support for instancemethods.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-16T14:44:32.183+0000",
                    "updated": "2019-04-16T14:44:32.183+0000",
                    "started": "2019-04-16T14:44:32.182+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "228438",
                    "issueId": "13226806"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226806/worklog/228448",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4156: ARROW-5144: [Python] ParquetDataset and ParquetPiece not serializable\nURL: https://github.com/apache/arrow/pull/4156#discussion_r275846561\n \n \n\n ##########\n File path: python/pyarrow/tests/test_parquet.py\n ##########\n @@ -2306,6 +2307,34 @@ def test_backwards_compatible_column_metadata_handling(datadir):\n     tm.assert_frame_equal(result, expected[['a']].reset_index(drop=True))\n \n \n+@pytest.mark.pandas\n+@pytest.mark.skipif(pickle.HIGHEST_PROTOCOL < 3,\n \n Review comment:\n   Hmm... why it is trying to pickle an instance method?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-16T15:05:51.744+0000",
                    "updated": "2019-04-16T15:05:51.744+0000",
                    "started": "2019-04-16T15:05:51.744+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "228448",
                    "issueId": "13226806"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226806/worklog/228449",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4156: ARROW-5144: [Python] ParquetDataset and ParquetPiece not serializable\nURL: https://github.com/apache/arrow/pull/4156#discussion_r275846109\n \n \n\n ##########\n File path: python/pyarrow/parquet.py\n ##########\n @@ -1048,19 +1064,16 @@ def _get_common_pandas_metadata(self):\n         keyvalues = self.common_metadata.metadata\n         return keyvalues.get(b'pandas', None)\n \n-    def _get_open_file_func(self):\n+    def _open_file_func(self, path, meta=None):\n \n Review comment:\n   Rename to `_open_file`?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-16T15:05:51.753+0000",
                    "updated": "2019-04-16T15:05:51.753+0000",
                    "started": "2019-04-16T15:05:51.753+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "228449",
                    "issueId": "13226806"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226806/worklog/228450",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4156: ARROW-5144: [Python] ParquetDataset and ParquetPiece not serializable\nURL: https://github.com/apache/arrow/pull/4156#discussion_r275845437\n \n \n\n ##########\n File path: python/pyarrow/parquet.py\n ##########\n @@ -961,6 +960,23 @@ def __init__(self, path_or_paths, filesystem=None, schema=None,\n             filters = _check_filters(filters)\n             self._filter(filters)\n \n+    def equals(self, other):\n+        if self.fs.__class__ != other.fs.__class__:\n+            return False\n+        for prop in ('paths', 'memory_map', 'pieces', 'partitions',\n+                     'common_metadata_path', 'metadata_path',\n+                     'common_metadata', 'metadata', 'schema',\n+                     'split_row_groups'):\n+            if getattr(self, prop) != getattr(other, prop):\n+                return False\n+        return True\n+\n+    def __eq__(self, other):\n+        try:\n+            return self.equals(other)\n+        except TypeError:\n \n Review comment:\n   This will never raise TypeError, right? Instead, should perhaps be:\r\n   ```python\r\n   def __eq__(self, other):\r\n       if not isinstance(other, ParquetDataset):\r\n           return NotImplemented\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-16T15:05:51.795+0000",
                    "updated": "2019-04-16T15:05:51.795+0000",
                    "started": "2019-04-16T15:05:51.794+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "228450",
                    "issueId": "13226806"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226806/worklog/228454",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #4156: ARROW-5144: [Python] ParquetDataset and ParquetPiece not serializable\nURL: https://github.com/apache/arrow/pull/4156#discussion_r275848612\n \n \n\n ##########\n File path: python/pyarrow/parquet.py\n ##########\n @@ -961,6 +960,23 @@ def __init__(self, path_or_paths, filesystem=None, schema=None,\n             filters = _check_filters(filters)\n             self._filter(filters)\n \n+    def equals(self, other):\n+        if self.fs.__class__ != other.fs.__class__:\n+            return False\n+        for prop in ('paths', 'memory_map', 'pieces', 'partitions',\n+                     'common_metadata_path', 'metadata_path',\n+                     'common_metadata', 'metadata', 'schema',\n+                     'split_row_groups'):\n+            if getattr(self, prop) != getattr(other, prop):\n+                return False\n+        return True\n+\n+    def __eq__(self, other):\n+        try:\n+            return self.equals(other)\n+        except TypeError:\n \n Review comment:\n   Indeed, copied from extensions where `equals` have type annotation.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-16T15:09:10.982+0000",
                    "updated": "2019-04-16T15:09:10.982+0000",
                    "started": "2019-04-16T15:09:10.981+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "228454",
                    "issueId": "13226806"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226806/worklog/228455",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #4156: ARROW-5144: [Python] ParquetDataset and ParquetPiece not serializable\nURL: https://github.com/apache/arrow/pull/4156#discussion_r275849594\n \n \n\n ##########\n File path: python/pyarrow/parquet.py\n ##########\n @@ -925,7 +925,6 @@ def __init__(self, path_or_paths, filesystem=None, schema=None,\n             self.paths = _parse_uri(path_or_paths)\n \n         self.memory_map = memory_map\n-        self._open_file_func = self._get_open_file_func()\n \n Review comment:\n   @pitrou I've reduced `self._open_file_func` to be an instancemethod instead of a closure, but still it's bound to self.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-16T15:11:17.485+0000",
                    "updated": "2019-04-16T15:11:17.485+0000",
                    "started": "2019-04-16T15:11:17.484+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "228455",
                    "issueId": "13226806"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226806/worklog/228456",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #4156: ARROW-5144: [Python] ParquetDataset and ParquetPiece not serializable\nURL: https://github.com/apache/arrow/pull/4156#discussion_r275849594\n \n \n\n ##########\n File path: python/pyarrow/parquet.py\n ##########\n @@ -925,7 +925,6 @@ def __init__(self, path_or_paths, filesystem=None, schema=None,\n             self.paths = _parse_uri(path_or_paths)\n \n         self.memory_map = memory_map\n-        self._open_file_func = self._get_open_file_func()\n \n Review comment:\n   @pitrou I've reduced `self._open_file_func` to be an instancemethod instead of a closure, but still it's bound to self. Under python 3 ordinary pickle can handle it.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-16T15:12:11.109+0000",
                    "updated": "2019-04-16T15:12:11.109+0000",
                    "started": "2019-04-16T15:12:11.109+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "228456",
                    "issueId": "13226806"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226806/worklog/228459",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4156: ARROW-5144: [Python] ParquetDataset and ParquetPiece not serializable\nURL: https://github.com/apache/arrow/pull/4156#discussion_r275851140\n \n \n\n ##########\n File path: python/pyarrow/parquet.py\n ##########\n @@ -925,7 +925,6 @@ def __init__(self, path_or_paths, filesystem=None, schema=None,\n             self.paths = _parse_uri(path_or_paths)\n \n         self.memory_map = memory_map\n-        self._open_file_func = self._get_open_file_func()\n \n Review comment:\n   I don't understand what you mean. What is the error you get on Python 2 ?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-16T15:14:17.773+0000",
                    "updated": "2019-04-16T15:14:17.773+0000",
                    "started": "2019-04-16T15:14:17.773+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "228459",
                    "issueId": "13226806"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226806/worklog/228463",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #4156: ARROW-5144: [Python] ParquetDataset and ParquetPiece not serializable\nURL: https://github.com/apache/arrow/pull/4156#discussion_r275853840\n \n \n\n ##########\n File path: python/pyarrow/parquet.py\n ##########\n @@ -925,7 +925,6 @@ def __init__(self, path_or_paths, filesystem=None, schema=None,\n             self.paths = _parse_uri(path_or_paths)\n \n         self.memory_map = memory_map\n-        self._open_file_func = self._get_open_file_func()\n \n Review comment:\n   https://travis-ci.org/apache/arrow/jobs/520755777#L3184\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-16T15:19:41.480+0000",
                    "updated": "2019-04-16T15:19:41.480+0000",
                    "started": "2019-04-16T15:19:41.479+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "228463",
                    "issueId": "13226806"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226806/worklog/228481",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4156: ARROW-5144: [Python] ParquetDataset and ParquetPiece not serializable\nURL: https://github.com/apache/arrow/pull/4156#discussion_r275865412\n \n \n\n ##########\n File path: python/pyarrow/parquet.py\n ##########\n @@ -925,7 +925,6 @@ def __init__(self, path_or_paths, filesystem=None, schema=None,\n             self.paths = _parse_uri(path_or_paths)\n \n         self.memory_map = memory_map\n-        self._open_file_func = self._get_open_file_func()\n \n Review comment:\n   I see, the following change should work:\r\n   ```diff\r\n   diff --git a/python/pyarrow/parquet.py b/python/pyarrow/parquet.py\r\n   index ade0ddc79..966ae4a58 100644\r\n   --- a/python/pyarrow/parquet.py\r\n   +++ b/python/pyarrow/parquet.py\r\n   @@ -864,6 +864,13 @@ def _path_split(path, sep):\r\n        return head, tail\r\n    \r\n    \r\n   +def _open_dataset_file(dataset, path, meta=None):\r\n   +    \"\"\"\r\n   +    A Python 2-picklable function that just calls ParquetDataset._open_file.\r\n   +    \"\"\"\r\n   +    return dataset._open_file(path, meta)\r\n   +\r\n   +\r\n    EXCLUDED_PARQUET_PATHS = {'_SUCCESS'}\r\n    \r\n    \r\n   @@ -931,7 +938,7 @@ class ParquetDataset(object):\r\n             self.common_metadata_path,\r\n             self.metadata_path) = _make_manifest(\r\n                 path_or_paths, self.fs, metadata_nthreads=metadata_nthreads,\r\n   -             open_file_func=self._open_file)\r\n   +             open_file_func=partial(_open_dataset_file, self))\r\n    \r\n            if self.common_metadata_path is not None:\r\n                with self.fs.open(self.common_metadata_path) as f:\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-16T15:42:17.624+0000",
                    "updated": "2019-04-16T15:42:17.624+0000",
                    "started": "2019-04-16T15:42:17.623+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "228481",
                    "issueId": "13226806"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226806/worklog/228523",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #4156: ARROW-5144: [Python] ParquetDataset and ParquetPiece not serializable\nURL: https://github.com/apache/arrow/pull/4156#discussion_r275877493\n \n \n\n ##########\n File path: python/pyarrow/parquet.py\n ##########\n @@ -925,7 +925,6 @@ def __init__(self, path_or_paths, filesystem=None, schema=None,\n             self.paths = _parse_uri(path_or_paths)\n \n         self.memory_map = memory_map\n-        self._open_file_func = self._get_open_file_func()\n \n Review comment:\n   Ohh, didn't know that partial is supported. Trying it.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-16T16:07:24.689+0000",
                    "updated": "2019-04-16T16:07:24.689+0000",
                    "started": "2019-04-16T16:07:24.688+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "228523",
                    "issueId": "13226806"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226806/worklog/228584",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrocklin commented on pull request #4156: ARROW-5144: [Python] ParquetDataset and ParquetPiece not serializable\nURL: https://github.com/apache/arrow/pull/4156#discussion_r275919925\n \n \n\n ##########\n File path: python/pyarrow/tests/test_parquet.py\n ##########\n @@ -2306,6 +2307,30 @@ def test_backwards_compatible_column_metadata_handling(datadir):\n     tm.assert_frame_equal(result, expected[['a']].reset_index(drop=True))\n \n \n+def test_pickle_dataset(datadir):\n+    path = datadir / 'v0.7.1.column-metadata-handling.parquet'\n+    dataset = pq.ParquetDataset(path)\n+\n+    result = pickle.loads(pickle.dumps(dataset))\n+    assert dataset == result\n+\n+    for piece in dataset.pieces:\n+        assert piece == pickle.loads(pickle.dumps(piece))\n+\n+\n+def test_cloudpickle_dataset(datadir):\n+    cp = pytest.importorskip('cloudpickle')\n+\n+    path = datadir / 'v0.7.1.column-metadata-handling.parquet'\n+    dataset = pq.ParquetDataset(path)\n+\n+    result = cp.loads(cp.dumps(dataset))\n+    assert dataset == result\n+\n+    for piece in dataset.pieces:\n+        assert piece == cp.loads(cp.dumps(piece))\n \n Review comment:\n   If we wanted to go further, it might be useful to extend these tests to include ...\r\n   \r\n   ```python\r\n   dataset.metadata\r\n   dataset.metadata.schema\r\n   dataset.metadata.schema.column(0)\r\n   dataset.metadata.row_group(0)\r\n   ```\r\n   \r\n   Assuming, of course, that the dataset has a metadata file (and so these things are not `None`)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-16T17:51:28.821+0000",
                    "updated": "2019-04-16T17:51:28.821+0000",
                    "started": "2019-04-16T17:51:28.820+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "228584",
                    "issueId": "13226806"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226806/worklog/228630",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #4156: ARROW-5144: [Python] ParquetDataset and ParquetPiece not serializable\nURL: https://github.com/apache/arrow/pull/4156#discussion_r275965318\n \n \n\n ##########\n File path: python/pyarrow/tests/test_parquet.py\n ##########\n @@ -2306,6 +2307,30 @@ def test_backwards_compatible_column_metadata_handling(datadir):\n     tm.assert_frame_equal(result, expected[['a']].reset_index(drop=True))\n \n \n+def test_pickle_dataset(datadir):\n+    path = datadir / 'v0.7.1.column-metadata-handling.parquet'\n+    dataset = pq.ParquetDataset(path)\n+\n+    result = pickle.loads(pickle.dumps(dataset))\n+    assert dataset == result\n+\n+    for piece in dataset.pieces:\n+        assert piece == pickle.loads(pickle.dumps(piece))\n+\n+\n+def test_cloudpickle_dataset(datadir):\n+    cp = pytest.importorskip('cloudpickle')\n+\n+    path = datadir / 'v0.7.1.column-metadata-handling.parquet'\n+    dataset = pq.ParquetDataset(path)\n+\n+    result = cp.loads(cp.dumps(dataset))\n+    assert dataset == result\n+\n+    for piece in dataset.pieces:\n+        assert piece == cp.loads(cp.dumps(piece))\n \n Review comment:\n   Sure, I can do that. A more interesting question would be the continuous testing of pyarrow and dask.\r\n   \r\n   We have dockerized integration tests for dask and pyarrow, but the visibility currently is pretty bad (which will change soon). May I suggest You to run these test somewhere in your CI as well?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-16T19:53:08.546+0000",
                    "updated": "2019-04-16T19:53:08.546+0000",
                    "started": "2019-04-16T19:53:08.545+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "228630",
                    "issueId": "13226806"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226806/worklog/228649",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrocklin commented on pull request #4156: ARROW-5144: [Python] ParquetDataset and ParquetPiece not serializable\nURL: https://github.com/apache/arrow/pull/4156#discussion_r275976095\n \n \n\n ##########\n File path: python/pyarrow/tests/test_parquet.py\n ##########\n @@ -2306,6 +2307,30 @@ def test_backwards_compatible_column_metadata_handling(datadir):\n     tm.assert_frame_equal(result, expected[['a']].reset_index(drop=True))\n \n \n+def test_pickle_dataset(datadir):\n+    path = datadir / 'v0.7.1.column-metadata-handling.parquet'\n+    dataset = pq.ParquetDataset(path)\n+\n+    result = pickle.loads(pickle.dumps(dataset))\n+    assert dataset == result\n+\n+    for piece in dataset.pieces:\n+        assert piece == pickle.loads(pickle.dumps(piece))\n+\n+\n+def test_cloudpickle_dataset(datadir):\n+    cp = pytest.importorskip('cloudpickle')\n+\n+    path = datadir / 'v0.7.1.column-metadata-handling.parquet'\n+    dataset = pq.ParquetDataset(path)\n+\n+    result = cp.loads(cp.dumps(dataset))\n+    assert dataset == result\n+\n+    for piece in dataset.pieces:\n+        assert piece == cp.loads(cp.dumps(piece))\n \n Review comment:\n   > Sure, I can do that. A more interesting question would be the continuous testing of pyarrow and dask.\r\n   \r\n   Indeed\r\n   \r\n   > We have dockerized integration tests for dask and pyarrow, but the visibility currently is pretty bad (which will change soon). May I suggest You to run these test somewhere in your CI as well?\r\n   \r\n    Sure.  We do have integrated Dask + PyArrow tests in our test suite, but I suspect that they only test against latest release.  Does Arrow publish dev conda builds by any chance?  It would be pretty easy to add this to one of our CI testing builds if so.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-16T20:21:59.432+0000",
                    "updated": "2019-04-16T20:21:59.432+0000",
                    "started": "2019-04-16T20:21:59.432+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "228649",
                    "issueId": "13226806"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226806/worklog/229101",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4156: ARROW-5144: [Python] ParquetDataset and ParquetPiece not serializable\nURL: https://github.com/apache/arrow/pull/4156#discussion_r276271423\n \n \n\n ##########\n File path: python/pyarrow/_parquet.pyx\n ##########\n @@ -287,6 +289,17 @@ cdef class RowGroupMetaData:\n         return self.metadata.total_byte_size()\n \n \n+def _reconstruct_filemetadata(Buffer serialized):\n+    cdef:\n+        FileMetaData metadata = FileMetaData.__new__(FileMetaData)\n+        CBuffer *buffer = serialized.buffer.get()\n+        uint32_t metadata_len = buffer.size()\n \n Review comment:\n   I think this is the line that causes the AppVeyor compile error. You need an explicit cast to `uint32_t` to avoid the implicit truncation.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-17T14:31:04.928+0000",
                    "updated": "2019-04-17T14:31:04.928+0000",
                    "started": "2019-04-17T14:31:04.927+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "229101",
                    "issueId": "13226806"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226806/worklog/229102",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #4156: ARROW-5144: [Python] ParquetDataset and ParquetPiece not serializable\nURL: https://github.com/apache/arrow/pull/4156#issuecomment-484115468\n \n \n   I approved the changed but the AppVeyor failure needs fixing (see the comment I posted). Also I agree with @mrocklin that testing the pickling of a couple more things would be useful.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-17T14:32:15.384+0000",
                    "updated": "2019-04-17T14:32:15.384+0000",
                    "started": "2019-04-17T14:32:15.383+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "229102",
                    "issueId": "13226806"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226806/worklog/229581",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #4156: ARROW-5144: [Python] ParquetDataset and ParquetPiece not serializable\nURL: https://github.com/apache/arrow/pull/4156#issuecomment-484397946\n \n \n   Force-pushed to trigger AppVeyor build.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-18T08:03:04.138+0000",
                    "updated": "2019-04-18T08:03:04.138+0000",
                    "started": "2019-04-18T08:03:04.137+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "229581",
                    "issueId": "13226806"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226806/worklog/229586",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on issue #4156: ARROW-5144: [Python] ParquetDataset and ParquetPiece not serializable\nURL: https://github.com/apache/arrow/pull/4156#issuecomment-484403738\n \n \n   @pitrou it still [updates](https://ci.appveyor.com/project/ApacheSoftwareFoundation/arrow/builds/23940327/job/1f2l35xl7i0r46ym#L49) boost to 1.70. Any idea how can I pin it?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-18T08:22:21.497+0000",
                    "updated": "2019-04-18T08:22:21.497+0000",
                    "started": "2019-04-18T08:22:21.496+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "229586",
                    "issueId": "13226806"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226806/worklog/229587",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #4156: ARROW-5144: [Python] ParquetDataset and ParquetPiece not serializable\nURL: https://github.com/apache/arrow/pull/4156#discussion_r276563079\n \n \n\n ##########\n File path: python/pyarrow/tests/test_parquet.py\n ##########\n @@ -2306,6 +2307,30 @@ def test_backwards_compatible_column_metadata_handling(datadir):\n     tm.assert_frame_equal(result, expected[['a']].reset_index(drop=True))\n \n \n+def test_pickle_dataset(datadir):\n+    path = datadir / 'v0.7.1.column-metadata-handling.parquet'\n+    dataset = pq.ParquetDataset(path)\n+\n+    result = pickle.loads(pickle.dumps(dataset))\n+    assert dataset == result\n+\n+    for piece in dataset.pieces:\n+        assert piece == pickle.loads(pickle.dumps(piece))\n+\n+\n+def test_cloudpickle_dataset(datadir):\n+    cp = pytest.importorskip('cloudpickle')\n+\n+    path = datadir / 'v0.7.1.column-metadata-handling.parquet'\n+    dataset = pq.ParquetDataset(path)\n+\n+    result = cp.loads(cp.dumps(dataset))\n+    assert dataset == result\n+\n+    for piece in dataset.pieces:\n+        assert piece == cp.loads(cp.dumps(piece))\n \n Review comment:\n   We already have nightly conda binaries, but not uploaded to anaconda yet. I'll let You know when the binaries are available.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-18T08:24:56.540+0000",
                    "updated": "2019-04-18T08:24:56.540+0000",
                    "started": "2019-04-18T08:24:56.539+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "229587",
                    "issueId": "13226806"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 13800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@299c0f52[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4d5a0b[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@77b6900a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@1d4101f5[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@13ee0b9b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@62f63eac[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2103c438[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@34583744[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@57894087[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@4590784[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3bc42133[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@4e53c318[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 13800,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Apr 22 14:58:42 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-04-19T11:22:52.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5144/watchers",
            "watchCount": 7,
            "isWatching": false
        },
        "created": "2019-04-08T22:03:22.000+0000",
        "updated": "2019-05-02T22:11:38.000+0000",
        "timeoriginalestimate": null,
        "description": "Since 0.13.0, parquet instances are no longer serialisable, which means that dask.distributed cannot pass them between processes in order to load parquet in parallel.\r\n\r\nExample:\r\n```\r\n>>> import cloudpickle\r\n>>> import pyarrow.parquet as pq\r\n>>> pf = pq.ParquetDataset('nation.impala.parquet')\r\n>>> cloudpickle.dumps(pf)\r\n~/anaconda/envs/py36/lib/python3.6/site-packages/cloudpickle/cloudpickle.py in dumps(obj, protocol)\r\n    893     try:\r\n    894         cp = CloudPickler(file, protocol=protocol)\r\n--> 895         cp.dump(obj)\r\n    896         return file.getvalue()\r\n    897     finally:\r\n\r\n~/anaconda/envs/py36/lib/python3.6/site-packages/cloudpickle/cloudpickle.py in dump(self, obj)\r\n    266         self.inject_addons()\r\n    267         try:\r\n--> 268             return Pickler.dump(self, obj)\r\n    269         except RuntimeError as e:\r\n    270             if 'recursion' in e.args[0]:\r\n\r\n~/anaconda/envs/py36/lib/python3.6/pickle.py in dump(self, obj)\r\n    407         if self.proto >= 4:\r\n    408             self.framer.start_framing()\r\n--> 409         self.save(obj)\r\n    410         self.write(STOP)\r\n    411         self.framer.end_framing()\r\n\r\n~/anaconda/envs/py36/lib/python3.6/pickle.py in save(self, obj, save_persistent_id)\r\n    519\r\n    520         # Save the reduce() output and finally memoize the object\r\n--> 521         self.save_reduce(obj=obj, *rv)\r\n    522\r\n    523     def persistent_id(self, obj):\r\n\r\n~/anaconda/envs/py36/lib/python3.6/pickle.py in save_reduce(self, func, args, state, listitems, dictitems, obj)\r\n    632\r\n    633         if state is not None:\r\n--> 634             save(state)\r\n    635             write(BUILD)\r\n    636\r\n\r\n~/anaconda/envs/py36/lib/python3.6/pickle.py in save(self, obj, save_persistent_id)\r\n    474         f = self.dispatch.get(t)\r\n    475         if f is not None:\r\n--> 476             f(self, obj) # Call unbound method with explicit self\r\n    477             return\r\n    478\r\n\r\n~/anaconda/envs/py36/lib/python3.6/pickle.py in save_dict(self, obj)\r\n    819\r\n    820         self.memoize(obj)\r\n--> 821         self._batch_setitems(obj.items())\r\n    822\r\n    823     dispatch[dict] = save_dict\r\n\r\n~/anaconda/envs/py36/lib/python3.6/pickle.py in _batch_setitems(self, items)\r\n    845                 for k, v in tmp:\r\n    846                     save(k)\r\n--> 847                     save(v)\r\n    848                 write(SETITEMS)\r\n    849             elif n:\r\n\r\n~/anaconda/envs/py36/lib/python3.6/pickle.py in save(self, obj, save_persistent_id)\r\n    494             reduce = getattr(obj, \"__reduce_ex__\", None)\r\n    495             if reduce is not None:\r\n--> 496                 rv = reduce(self.proto)\r\n    497             else:\r\n    498                 reduce = getattr(obj, \"__reduce__\", None)\r\n\r\n~/anaconda/envs/py36/lib/python3.6/site-packages/pyarrow/_parquet.cpython-36m-darwin.so in pyarrow._parquet.ParquetSchema.__reduce_cython__()\r\n\r\nTypeError: no default __reduce__ due to non-trivial __cinit__\r\n```\r\nThe indicated schema instance is also referenced by the ParquetDatasetPiece s.\r\n\r\nref: https://github.com/dask/distributed/issues/2597",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 13800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/attachment/12966282",
                "id": "12966282",
                "filename": "part.0.parquet",
                "author": {
                    "self": "https://issues.apache.org/jira/rest/api/2/user?username=birdsarah",
                    "name": "birdsarah",
                    "key": "birdsarah",
                    "avatarUrls": {
                        "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=birdsarah&avatarId=38742",
                        "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=birdsarah&avatarId=38742",
                        "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=birdsarah&avatarId=38742",
                        "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=birdsarah&avatarId=38742"
                    },
                    "displayName": "Sarah Bird",
                    "active": true,
                    "timeZone": "America/Chicago"
                },
                "created": "2019-04-17T20:25:39.868+0000",
                "size": 2229179,
                "mimeType": "application/octet-stream",
                "content": "https://issues.apache.org/jira/secure/attachment/12966282/part.0.parquet"
            }
        ],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] ParquetDataset and ParquetPiece not serializable",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": "osx python36/conda cloudpickle 0.8.1\r\narrow-cpp                 0.13.0           py36ha71616b_0    conda-forge\r\npyarrow                   0.13.0           py36hb37e6aa_0    conda-forge\r\n",
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226806/comment/16814535",
                    "id": "16814535",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=mrocklin",
                        "name": "mrocklin",
                        "key": "mrocklin",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Matthew Rocklin",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Hi everyone, \r\n\r\nThis is pretty critical for Dask usage.  Anyone trying to use PyArrow 0.13 in a Dask workflow will break pretty hard here.  This isn't something that we can work around easily on our side.  It would be great to know if this is likely to be resolved quickly, or if we should warn users strongly away from 0.13.\r\n\r\nIn general, I recommend serialization tests for any project looking to interact with distributed computing libraries in Python.  Often this consists of tests like the following for any type that you think a parallel computing framework might want to interact with.\r\n\r\n{code}\r\ndef test_serialization():\r\n    obj = MyObj()\r\n    obj2 = pickle.loads(pickle.dumps(obj))\r\n\r\n    assert obj == obj2\r\n{code}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=mrocklin",
                        "name": "mrocklin",
                        "key": "mrocklin",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Matthew Rocklin",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-04-10T15:13:59.735+0000",
                    "updated": "2019-04-10T15:13:59.735+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226806/comment/16814937",
                    "id": "16814937",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=dhirschfeld",
                        "name": "dhirschfeld",
                        "key": "dhirschfeld",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=dhirschfeld&avatarId=33438",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dhirschfeld&avatarId=33438",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dhirschfeld&avatarId=33438",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dhirschfeld&avatarId=33438"
                        },
                        "displayName": "Dave Hirschfeld",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "As a user of `pyarrow` and `dask.distributed` together this issue will prevent me from upgrading to `0.13` which I'm otherwise very keen to do.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=dhirschfeld",
                        "name": "dhirschfeld",
                        "key": "dhirschfeld",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=dhirschfeld&avatarId=33438",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dhirschfeld&avatarId=33438",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dhirschfeld&avatarId=33438",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dhirschfeld&avatarId=33438"
                        },
                        "displayName": "Dave Hirschfeld",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-04-10T23:25:36.879+0000",
                    "updated": "2019-04-10T23:25:36.879+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226806/comment/16815095",
                    "id": "16815095",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I'm on vacation until April 22. Are you able to submit a PR?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-04-11T05:57:49.197+0000",
                    "updated": "2019-04-11T05:57:49.197+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226806/comment/16818320",
                    "id": "16818320",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Is it just with {{cloudpickle}} or also with plain {{pickle}}?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2019-04-15T19:32:06.703+0000",
                    "updated": "2019-04-15T19:32:06.703+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226806/comment/16818331",
                    "id": "16818331",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=mdurant",
                        "name": "mdurant",
                        "key": "mdurant",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Martin Durant",
                        "active": true,
                        "timeZone": "America/Montreal"
                    },
                    "body": "Cloudpickle actually does a better job than ordinary pickle, which also has trouble with the opener function closure attached to the dataset instance and the pieces.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=mdurant",
                        "name": "mdurant",
                        "key": "mdurant",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Martin Durant",
                        "active": true,
                        "timeZone": "America/Montreal"
                    },
                    "created": "2019-04-15T19:45:12.293+0000",
                    "updated": "2019-04-15T19:45:12.293+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226806/comment/16818763",
                    "id": "16818763",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "[~mdurant] At which one point did this work? I've tried all PyArrow versions from 0.7 to 0.13 and serializing a ParquetDataset always fails with the same error you're reporting.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2019-04-16T08:22:06.939+0000",
                    "updated": "2019-04-16T08:22:06.939+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226806/comment/16818813",
                    "id": "16818813",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "body": "[~pitrou] I'm starting to implement the reducers to make cloudpickle working. ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "created": "2019-04-16T09:15:41.373+0000",
                    "updated": "2019-04-16T09:15:41.373+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226806/comment/16818845",
                    "id": "16818845",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "body": "I also don't understand how could have it been working without proper {{___reduce___}} methods (at least pickling fails with 0.12 too).",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "created": "2019-04-16T09:46:34.103+0000",
                    "updated": "2019-04-16T09:47:02.536+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226806/comment/16818854",
                    "id": "16818854",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "That's what I said above: picking fails from 0.7 to 0.13 at least.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2019-04-16T09:56:47.993+0000",
                    "updated": "2019-04-16T09:56:47.993+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226806/comment/16818983",
                    "id": "16818983",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "body": "So this seems like a new feature rather than a bug. I suppose something must have changed on the caller/dask side.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "created": "2019-04-16T13:00:42.701+0000",
                    "updated": "2019-04-16T13:00:42.701+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226806/comment/16819005",
                    "id": "16819005",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=mdurant",
                        "name": "mdurant",
                        "key": "mdurant",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Martin Durant",
                        "active": true,
                        "timeZone": "America/Montreal"
                    },
                    "body": "Well this is confusing! We don't explicitly have pyarrow-parquet-in-distributed tests (apparently we should), but people have certainly been reading parquet for some time. Could they all have been using fastparquet? That seems unlikely, especially in HDFS contexts.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=mdurant",
                        "name": "mdurant",
                        "key": "mdurant",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Martin Durant",
                        "active": true,
                        "timeZone": "America/Montreal"
                    },
                    "created": "2019-04-16T13:14:53.330+0000",
                    "updated": "2019-04-16T13:14:53.330+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226806/comment/16819024",
                    "id": "16819024",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=mrocklin",
                        "name": "mrocklin",
                        "key": "mrocklin",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Matthew Rocklin",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Most objects in Python are serializable by default.  My guess is that this object recently gained a non-serializable attribute, perhaps like an open file?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=mrocklin",
                        "name": "mrocklin",
                        "key": "mrocklin",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Matthew Rocklin",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-04-16T13:32:19.083+0000",
                    "updated": "2019-04-16T13:32:19.083+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226806/comment/16819027",
                    "id": "16819027",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "[~mrocklin] Can you post a snippet that used to work and that doesn't work anymore?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2019-04-16T13:38:06.647+0000",
                    "updated": "2019-04-16T13:38:06.647+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226806/comment/16820463",
                    "id": "16820463",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=birdsarah",
                        "name": "birdsarah",
                        "key": "birdsarah",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=birdsarah&avatarId=38742",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=birdsarah&avatarId=38742",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=birdsarah&avatarId=38742",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=birdsarah&avatarId=38742"
                        },
                        "displayName": "Sarah Bird",
                        "active": true,
                        "timeZone": "America/Chicago"
                    },
                    "body": "This might not be what you were looking for [~pitrou] but this is what breaks consistently for me from 0.12.1 to 0.13.0: \r\n\r\n{code:python}\r\nimport dask.dataframe as dd\r\nfrom dask.distributed import ClientClient()\r\ndf = dd.read_parquet('my_data.parquet', engine='pyarrow')\r\ndf.head()\r\n{code}\r\n\u00a0\r\n(dask 1.2.0, distributed 1.27.0)\r\n\r\nLet me know if I can better help.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=birdsarah",
                        "name": "birdsarah",
                        "key": "birdsarah",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=birdsarah&avatarId=38742",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=birdsarah&avatarId=38742",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=birdsarah&avatarId=38742",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=birdsarah&avatarId=38742"
                        },
                        "displayName": "Sarah Bird",
                        "active": true,
                        "timeZone": "America/Chicago"
                    },
                    "created": "2019-04-17T20:04:40.249+0000",
                    "updated": "2019-04-17T20:05:31.285+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226806/comment/16820466",
                    "id": "16820466",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "body": "[~birdsarah] with any parquet file?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "created": "2019-04-17T20:11:28.995+0000",
                    "updated": "2019-04-17T20:11:28.995+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226806/comment/16820480",
                    "id": "16820480",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=birdsarah",
                        "name": "birdsarah",
                        "key": "birdsarah",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=birdsarah&avatarId=38742",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=birdsarah&avatarId=38742",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=birdsarah&avatarId=38742",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=birdsarah&avatarId=38742"
                        },
                        "displayName": "Sarah Bird",
                        "active": true,
                        "timeZone": "America/Chicago"
                    },
                    "body": "[~kszucs] this is with variations on my dataset. I have attached one piece which is sufficient to reproduce the error. It is web crawl data. The dtypes are:\r\n{code}\r\nargument_0                      object\r\nargument_1                      object\r\nargument_2                      object\r\nargument_3                      object\r\nargument_4                      object\r\nargument_5                      object\r\nargument_6                      object\r\nargument_7                      object\r\narguments                       object\r\narguments_len                    int64\r\ncall_stack                      object\r\ncrawl_id                         int32\r\ndocument_url                    object\r\nfunc_name                       object\r\nin_iframe                         bool\r\noperation                       object\r\nscript_col                       int64\r\nscript_line                      int64\r\nscript_loc_eval                 object\r\nscript_url                      object\r\nsymbol                          object\r\ntime_stamp         datetime64[ns, UTC]\r\ntop_level_url                   object\r\nvalue_1000                      object\r\nvalue_len                        int64\r\nvisit_id                         int64\r\ndtype: object\r\n{code}\r\nMy traceback is:\r\n{code:java}\r\ndistributed.protocol.pickle - INFO - Failed to serialize (<function safe_head at 0x7f3d57f2c7b8>, (<function _read_pyarrow_parquet_piece at 0x7f3d57ef9268>, <dask.bytes.local.LocalFileSystem object at 0x7f3db58\r\nea4e0>, ParquetDatasetPiece('javascript_10percent_value_1000_only.parquet/part.0.parquet', row_group=None, partition_keys=[]), ['argument_0', 'argument_1', 'argument_2', 'argument_3', 'argument_4', 'argument_5'\r\n, 'argument_6', 'argument_7', 'arguments', 'arguments_len', 'call_stack', 'crawl_id', 'document_url', 'func_name', 'in_iframe', 'operation', 'script_col', 'script_line', 'script_loc_eval', 'script_url', 'symbol\r\n', 'time_stamp', 'top_level_url', 'value_1000', 'value_len', 'visit_id'], [], False, None, []), 5). Exception: no default __reduce__ due to non-trivial __cinit__\r\ndistributed.protocol.core - CRITICAL - Failed to Serialize\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\r\nTraceback (most recent call last):\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\r\n\u00a0 File \"/home/bird/miniconda3/envs/pyarrowtest/lib/python3.7/site-packages/distributed/protocol/core.py\", line 54, in dumps\r\n\u00a0\u00a0\u00a0 for key, value in data.items()\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\r\n\u00a0 File \"/home/bird/miniconda3/envs/pyarrowtest/lib/python3.7/site-packages/distributed/protocol/core.py\", line 55, in <dictcomp>\r\n\u00a0\u00a0\u00a0 if type(value) is Serialize}\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\r\n\u00a0 File \"/home/bird/miniconda3/envs/pyarrowtest/lib/python3.7/site-packages/distributed/protocol/serialize.py\", line 164, in serialize\r\n\u00a0\u00a0\u00a0 raise TypeError(msg, str(x)[:10000])\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\r\nTypeError: ('Could not serialize object of type tuple.', \"(<function safe_head at 0x7f3d57f2c7b8>, (<function _read_pyarrow_parquet_piece at 0x7f3d57ef9268>, <dask.bytes.local.LocalFileSystem object at 0x7f3db5\r\n8ea4e0>, ParquetDatasetPiece('javascript_10percent_value_1000_only.parquet/part.0.parquet', row_group=None, partition_keys=[]), ['argument_0', 'argument_1', 'argument_2', 'argument_3', 'argument_4', 'argument_5\r\n', 'argument_6', 'argument_7', 'arguments', 'arguments_len', 'call_stack', 'crawl_id', 'document_url', 'func_name', 'in_iframe', 'operation', 'script_col', 'script_line', 'script_loc_eval', 'script_url', 'symbo\r\nl', 'time_stamp', 'top_level_url', 'value_1000', 'value_len', 'visit_id'], [], False, None, []), 5)\")\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\r\ndistributed.comm.utils - INFO - Unserializable Message: [{'op': 'update-graph', 'tasks': {\"('head-1-5-read-parquet-daaccee11e9cff29ad1ee5622ffd6c69', 0)\": <Serialize: ('read-parquet-head-1-5-read-parquet-daacce\r\ne11e9cff29ad1ee5622ffd6c69', 0)>, \"('read-parquet-head-1-5-read-parquet-daaccee11e9cff29ad1ee5622ffd6c69', 0)\": <Serialize: (<function safe_head at 0x7f3d57f2c7b8>, (<function _read_pyarrow_parquet_piece at 0x7\r\nf3d57ef9268>, <dask.bytes.local.LocalFileSystem object at 0x7f3db58ea4e0>, ParquetDatasetPiece('javascript_10percent_value_1000_only.parquet/part.0.parquet', row_group=None, partition_keys=[]), ['argument_0', '\r\nargument_1', 'argument_2', 'argument_3', 'argument_4', 'argument_5', 'argument_6', 'argument_7', 'arguments', 'arguments_len', 'call_stack', 'crawl_id', 'document_url', 'func_name', 'in_iframe', 'operation', 's\r\ncript_col', 'script_line', 'script_loc_eval', 'script_url', 'symbol', 'time_stamp', 'top_level_url', 'value_1000', 'value_len', 'visit_id'], [], False, None, []), 5)>}, 'dependencies': {\"('head-1-5-read-parquet\r\n-daaccee11e9cff29ad1ee5622ffd6c69', 0)\": [\"('read-parquet-head-1-5-read-parquet-daaccee11e9cff29ad1ee5622ffd6c69', 0)\"], \"('read-parquet-head-1-5-read-parquet-daaccee11e9cff29ad1ee5622ffd6c69', 0)\": []}, 'keys'\r\n: [\"('head-1-5-read-parquet-daaccee11e9cff29ad1ee5622ffd6c69', 0)\"], 'restrictions': {}, 'loose_restrictions': None, 'priority': {\"('read-parquet-head-1-5-read-parquet-daaccee11e9cff29ad1ee5622ffd6c69', 0)\": 0,\r\n\u00a0\"('head-1-5-read-parquet-daaccee11e9cff29ad1ee5622ffd6c69', 0)\": 1}, 'user_priority': 0, 'resources': None, 'submitting_task': None, 'retries': None, 'fifo_timeout': '60s', 'actors': None}]\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\r\ndistributed.comm.utils - ERROR - ('Could not serialize object of type tuple.', \"(<function safe_head at 0x7f3d57f2c7b8>, (<function _read_pyarrow_parquet_piece at 0x7f3d57ef9268>, <dask.bytes.local.LocalFileSys\r\ntem object at 0x7f3db58ea4e0>, ParquetDatasetPiece('javascript_10percent_value_1000_only.parquet/part.0.parquet', row_group=None, partition_keys=[]), ['argument_0', 'argument_1', 'argument_2', 'argument_3', 'ar\r\ngument_4', 'argument_5', 'argument_6', 'argument_7', 'arguments', 'arguments_len', 'call_stack', 'crawl_id', 'document_url', 'func_name', 'in_iframe', 'operation', 'script_col', 'script_line', 'script_loc_eval'\r\n, 'script_url', 'symbol', 'time_stamp', 'top_level_url', 'value_1000', 'value_len', 'visit_id'], [], False, None, []), 5)\")\r\nTraceback (most recent call last):\r\n\u00a0 File \"/home/bird/miniconda3/envs/pyarrowtest/lib/python3.7/site-packages/distributed/batched.py\", line 94, in _background_send\r\n\u00a0\u00a0\u00a0 on_error='raise')\r\n\u00a0 File \"/home/bird/miniconda3/envs/pyarrowtest/lib/python3.7/site-packages/tornado/gen.py\", line 729, in run\r\n\u00a0\u00a0\u00a0 value = future.result()\r\n\u00a0 File \"/home/bird/miniconda3/envs/pyarrowtest/lib/python3.7/site-packages/tornado/gen.py\", line 736, in run\r\n\u00a0\u00a0\u00a0 yielded = self.gen.throw(*exc_info)\u00a0 # type: ignore\r\n\u00a0 File \"/home/bird/miniconda3/envs/pyarrowtest/lib/python3.7/site-packages/distributed/comm/tcp.py\", line 224, in write\r\n\u00a0\u00a0\u00a0 'recipient': self._peer_addr})\r\n\u00a0 File \"/home/bird/miniconda3/envs/pyarrowtest/lib/python3.7/site-packages/tornado/gen.py\", line 729, in run\r\n\u00a0\u00a0\u00a0 value = future.result()\r\n\u00a0 File \"/home/bird/miniconda3/envs/pyarrowtest/lib/python3.7/site-packages/tornado/gen.py\", line 736, in run\r\n\u00a0\u00a0\u00a0 yielded = self.gen.throw(*exc_info)\u00a0 # type: ignore\r\n\u00a0 File \"/home/bird/miniconda3/envs/pyarrowtest/lib/python3.7/site-packages/distributed/comm/utils.py\", line 50, in to_frames\r\n\u00a0\u00a0\u00a0 res = yield offload(_to_frames)\r\n\u00a0 File \"/home/bird/miniconda3/envs/pyarrowtest/lib/python3.7/site-packages/tornado/gen.py\", line 729, in run\r\n\u00a0\u00a0\u00a0 value = future.result()\r\n\u00a0 File \"/home/bird/miniconda3/envs/pyarrowtest/lib/python3.7/concurrent/futures/_base.py\", line 425, in result\r\n\u00a0\u00a0\u00a0 return self.__get_result()\r\n\u00a0 File \"/home/bird/miniconda3/envs/pyarrowtest/lib/python3.7/concurrent/futures/_base.py\", line 384, in __get_result\r\n\u00a0\u00a0\u00a0 raise self._exception\r\n\u00a0 File \"/home/bird/miniconda3/envs/pyarrowtest/lib/python3.7/concurrent/futures/thread.py\", line 57, in run\r\n\u00a0\u00a0\u00a0 result = self.fn(*self.args, **self.kwargs)\r\n\u00a0 File \"/home/bird/miniconda3/envs/pyarrowtest/lib/python3.7/site-packages/distributed/comm/utils.py\", line 43, in _to_frames\r\n\u00a0\u00a0\u00a0 context=context))\r\n\u00a0 File \"/home/bird/miniconda3/envs/pyarrowtest/lib/python3.7/site-packages/distributed/protocol/core.py\", line 54, in dumps\r\n\u00a0\u00a0\u00a0 for key, value in data.items()\r\n\u00a0 File \"/home/bird/miniconda3/envs/pyarrowtest/lib/python3.7/site-packages/distributed/protocol/core.py\", line 55, in <dictcomp>\r\n\u00a0\u00a0\u00a0 if type(value) is Serialize}\r\n\u00a0 File \"/home/bird/miniconda3/envs/pyarrowtest/lib/python3.7/site-packages/distributed/protocol/serialize.py\", line 164, in serialize\r\n\u00a0\u00a0\u00a0 raise TypeError(msg, str(x)[:10000])\r\nTypeError: ('Could not serialize object of type tuple.', \"(<function safe_head at 0x7f3d57f2c7b8>, (<function _read_pyarrow_parquet_piece at 0x7f3d57ef9268>, <dask.bytes.local.LocalFileSystem object at 0x7f3db5\r\n8ea4e0>, ParquetDatasetPiece('javascript_10percent_value_1000_only.parquet/part.0.parquet', row_group=None, partition_keys=[]), ['argument_0', 'argument_1', 'argument_2', 'argument_3', 'argument_4', 'argument_5\r\n', 'argument_6', 'argument_7', 'arguments', 'arguments_len', 'call_stack', 'crawl_id', 'document_url', 'func_name', 'in_iframe', 'operation', 'script_col', 'script_line', 'script_loc_eval', 'script_url', 'symbo\r\nl', 'time_stamp', 'top_level_url', 'value_1000', 'value_len', 'visit_id'], [], False, None, []), 5)\"){code}\r\n[^part.0.parquet]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=birdsarah",
                        "name": "birdsarah",
                        "key": "birdsarah",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=birdsarah&avatarId=38742",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=birdsarah&avatarId=38742",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=birdsarah&avatarId=38742",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=birdsarah&avatarId=38742"
                        },
                        "displayName": "Sarah Bird",
                        "active": true,
                        "timeZone": "America/Chicago"
                    },
                    "created": "2019-04-17T20:29:33.250+0000",
                    "updated": "2019-04-17T20:38:41.239+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226806/comment/16820483",
                    "id": "16820483",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=birdsarah",
                        "name": "birdsarah",
                        "key": "birdsarah",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=birdsarah&avatarId=38742",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=birdsarah&avatarId=38742",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=birdsarah&avatarId=38742",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=birdsarah&avatarId=38742"
                        },
                        "displayName": "Sarah Bird",
                        "active": true,
                        "timeZone": "America/Chicago"
                    },
                    "body": "I should add: I can also get the cloudpickle error that is reported by the original report with the same file, but it is invariant between pyarrow 0.12.1 and 0.13.0. The above distributed error is what is changing for me.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=birdsarah",
                        "name": "birdsarah",
                        "key": "birdsarah",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=birdsarah&avatarId=38742",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=birdsarah&avatarId=38742",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=birdsarah&avatarId=38742",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=birdsarah&avatarId=38742"
                        },
                        "displayName": "Sarah Bird",
                        "active": true,
                        "timeZone": "America/Chicago"
                    },
                    "created": "2019-04-17T20:36:20.959+0000",
                    "updated": "2019-04-17T20:39:28.757+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226806/comment/16821852",
                    "id": "16821852",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "body": "Issue resolved by pull request 4156\n[https://github.com/apache/arrow/pull/4156]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "created": "2019-04-19T11:22:52.574+0000",
                    "updated": "2019-04-19T11:22:52.574+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226806/comment/16823055",
                    "id": "16823055",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "[~mrocklin] We might be able to do a 0.13.1 release including this and some other fixes in a week or two. If that would be helpful let us know. \r\n\r\nFWIW, ParquetDatasetPiece is regarded as an implementation detail and wasn't intended necessarily to be serializable. So will keep this in mind for the future",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-04-22T12:04:44.764+0000",
                    "updated": "2019-04-22T12:04:44.764+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226806/comment/16823161",
                    "id": "16823161",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=mrocklin",
                        "name": "mrocklin",
                        "key": "mrocklin",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Matthew Rocklin",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "That would be helpful, yes.  We're currently raising an error in master telling people to downgrade.  We get bug reports about this issue most days it seems.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=mrocklin",
                        "name": "mrocklin",
                        "key": "mrocklin",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Matthew Rocklin",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-04-22T14:58:42.298+0000",
                    "updated": "2019-04-22T14:58:42.298+0000"
                }
            ],
            "maxResults": 20,
            "total": 20,
            "startAt": 0
        },
        "customfield_12311820": "0|z01kps:",
        "customfield_12314139": null
    }
}