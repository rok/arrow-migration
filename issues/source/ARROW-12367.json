{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13372067",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372067",
    "key": "ARROW-12367",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349493",
                "id": "12349493",
                "description": "",
                "name": "4.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-04-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "aggregateprogress": {
            "progress": 5400,
            "total": 5400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 5400,
            "total": 5400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12367/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 9,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372067/worklog/583501",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou opened a new pull request #10055:\nURL: https://github.com/apache/arrow/pull/10055\n\n\n   When a PushGenerator is lost but its Producer is left dangling, avoid pushing values and inform the caller about it.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-15T15:23:42.666+0000",
                    "updated": "2021-04-15T15:23:42.666+0000",
                    "started": "2021-04-15T15:23:42.666+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "583501",
                    "issueId": "13372067"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372067/worklog/583504",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #10055:\nURL: https://github.com/apache/arrow/pull/10055#issuecomment-820516873\n\n\n   @westonpace Do you want to review this?\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-15T15:24:33.654+0000",
                    "updated": "2021-04-15T15:24:33.654+0000",
                    "started": "2021-04-15T15:24:33.654+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "583504",
                    "issueId": "13372067"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372067/worklog/583588",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10055:\nURL: https://github.com/apache/arrow/pull/10055#issuecomment-820594492\n\n\n   https://issues.apache.org/jira/browse/ARROW-12367\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-15T17:12:53.009+0000",
                    "updated": "2021-04-15T17:12:53.009+0000",
                    "started": "2021-04-15T17:12:53.008+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "583588",
                    "issueId": "13372067"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372067/worklog/583599",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #10055:\nURL: https://github.com/apache/arrow/pull/10055#discussion_r614257805\n\n\n\n##########\nFile path: cpp/src/arrow/util/async_generator.h\n##########\n@@ -766,52 +766,77 @@ class PushGenerator {\n   /// Producer API for PushGenerator\n   class Producer {\n    public:\n-    explicit Producer(std::shared_ptr<State> state) : state_(std::move(state)) {}\n+    explicit Producer(const std::shared_ptr<State> state) : weak_state_(state) {}\n \n-    /// Push a value on the queue\n-    void Push(Result<T> result) {\n-      auto lock = state_->mutex.Lock();\n-      if (state_->finished) {\n+    /// \\brief Push a value on the queue\n+    ///\n+    /// True is returned if the value was pushed, false if the generator is\n+    /// already closed or destroyed.  If the latter, it is recommended to stop\n+    /// producing any further values.\n+    bool Push(Result<T> result) {\n+      auto state = weak_state_.lock();\n+      if (!state) {\n+        // Generator was destroyed\n+        return false;\n+      }\n+      auto lock = state->mutex.Lock();\n+      if (state->finished) {\n         // Closed early\n-        return;\n+        return false;\n       }\n-      if (state_->consumer_fut.has_value()) {\n-        auto fut = std::move(state_->consumer_fut.value());\n-        state_->consumer_fut.reset();\n+      if (state->consumer_fut.has_value()) {\n+        auto fut = std::move(state->consumer_fut.value());\n+        state->consumer_fut.reset();\n         lock.Unlock();  // unlock before potentially invoking a callback\n         fut.MarkFinished(std::move(result));\n-        return;\n+      } else {\n+        state->result_q.push_back(std::move(result));\n       }\n-      state_->result_q.push_back(std::move(result));\n+      return true;\n     }\n \n     /// \\brief Tell the consumer we have finished producing\n     ///\n     /// It is allowed to call this and later call Push() again (\"early close\").\n     /// In this case, calls to Push() after the queue is closed are silently\n     /// ignored.  This can help implementing non-trivial cancellation cases.\n-    void Close() {\n-      auto lock = state_->mutex.Lock();\n-      if (state_->finished) {\n+    ///\n+    /// True is returned on success, false if the generator is already closed\n+    /// or destroyed.\n+    bool Close() {\n+      auto state = weak_state_.lock();\n+      if (!state) {\n+        // Generator was destroyed\n+        return false;\n+      }\n+      auto lock = state->mutex.Lock();\n+      if (state->finished) {\n         // Already closed\n-        return;\n+        return false;\n       }\n-      state_->finished = true;\n-      if (state_->consumer_fut.has_value()) {\n-        auto fut = std::move(state_->consumer_fut.value());\n-        state_->consumer_fut.reset();\n+      state->finished = true;\n+      if (state->consumer_fut.has_value()) {\n+        auto fut = std::move(state->consumer_fut.value());\n+        state->consumer_fut.reset();\n         lock.Unlock();  // unlock before potentially invoking a callback\n         fut.MarkFinished(IterationTraits<T>::End());\n       }\n+      return true;\n     }\n \n+    /// Return whether the generator was closed or destroyed.\n     bool is_closed() const {\n-      auto lock = state_->mutex.Lock();\n-      return state_->finished;\n+      auto state = weak_state_.lock();\n+      if (!state) {\n+        // Generator was destroyed\n+        return true;\n+      }\n+      auto lock = state->mutex.Lock();\n\nReview comment:\n       Since `is_closed` is already \"best effort\" you could probably make `finished` an atomic and avoid the lock here but that's a pretty minor concern and could potentially make other paths more expensive.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-15T17:22:54.004+0000",
                    "updated": "2021-04-15T17:22:54.004+0000",
                    "started": "2021-04-15T17:22:54.003+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "583599",
                    "issueId": "13372067"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372067/worklog/583624",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #10055:\nURL: https://github.com/apache/arrow/pull/10055#discussion_r614267822\n\n\n\n##########\nFile path: cpp/src/arrow/util/async_generator.h\n##########\n@@ -766,52 +766,77 @@ class PushGenerator {\n   /// Producer API for PushGenerator\n   class Producer {\n    public:\n-    explicit Producer(std::shared_ptr<State> state) : state_(std::move(state)) {}\n+    explicit Producer(const std::shared_ptr<State> state) : weak_state_(state) {}\n \n-    /// Push a value on the queue\n-    void Push(Result<T> result) {\n-      auto lock = state_->mutex.Lock();\n-      if (state_->finished) {\n+    /// \\brief Push a value on the queue\n+    ///\n+    /// True is returned if the value was pushed, false if the generator is\n+    /// already closed or destroyed.  If the latter, it is recommended to stop\n+    /// producing any further values.\n+    bool Push(Result<T> result) {\n+      auto state = weak_state_.lock();\n+      if (!state) {\n+        // Generator was destroyed\n+        return false;\n+      }\n+      auto lock = state->mutex.Lock();\n+      if (state->finished) {\n         // Closed early\n-        return;\n+        return false;\n       }\n-      if (state_->consumer_fut.has_value()) {\n-        auto fut = std::move(state_->consumer_fut.value());\n-        state_->consumer_fut.reset();\n+      if (state->consumer_fut.has_value()) {\n+        auto fut = std::move(state->consumer_fut.value());\n+        state->consumer_fut.reset();\n         lock.Unlock();  // unlock before potentially invoking a callback\n         fut.MarkFinished(std::move(result));\n-        return;\n+      } else {\n+        state->result_q.push_back(std::move(result));\n       }\n-      state_->result_q.push_back(std::move(result));\n+      return true;\n     }\n \n     /// \\brief Tell the consumer we have finished producing\n     ///\n     /// It is allowed to call this and later call Push() again (\"early close\").\n     /// In this case, calls to Push() after the queue is closed are silently\n     /// ignored.  This can help implementing non-trivial cancellation cases.\n-    void Close() {\n-      auto lock = state_->mutex.Lock();\n-      if (state_->finished) {\n+    ///\n+    /// True is returned on success, false if the generator is already closed\n+    /// or destroyed.\n+    bool Close() {\n+      auto state = weak_state_.lock();\n+      if (!state) {\n+        // Generator was destroyed\n+        return false;\n+      }\n+      auto lock = state->mutex.Lock();\n+      if (state->finished) {\n         // Already closed\n-        return;\n+        return false;\n       }\n-      state_->finished = true;\n-      if (state_->consumer_fut.has_value()) {\n-        auto fut = std::move(state_->consumer_fut.value());\n-        state_->consumer_fut.reset();\n+      state->finished = true;\n+      if (state->consumer_fut.has_value()) {\n+        auto fut = std::move(state->consumer_fut.value());\n+        state->consumer_fut.reset();\n         lock.Unlock();  // unlock before potentially invoking a callback\n         fut.MarkFinished(IterationTraits<T>::End());\n       }\n+      return true;\n     }\n \n+    /// Return whether the generator was closed or destroyed.\n     bool is_closed() const {\n-      auto lock = state_->mutex.Lock();\n-      return state_->finished;\n+      auto state = weak_state_.lock();\n+      if (!state) {\n+        // Generator was destroyed\n+        return true;\n+      }\n+      auto lock = state->mutex.Lock();\n\nReview comment:\n       Looks like reading an atomic bool is free on x86, not on ARM64 though: https://godbolt.org/z/fjh91hE1c\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-15T17:37:34.513+0000",
                    "updated": "2021-04-15T17:37:34.513+0000",
                    "started": "2021-04-15T17:37:34.513+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "583624",
                    "issueId": "13372067"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372067/worklog/583627",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #10055:\nURL: https://github.com/apache/arrow/pull/10055#discussion_r614268823\n\n\n\n##########\nFile path: cpp/src/arrow/util/async_generator.h\n##########\n@@ -766,52 +766,77 @@ class PushGenerator {\n   /// Producer API for PushGenerator\n   class Producer {\n    public:\n-    explicit Producer(std::shared_ptr<State> state) : state_(std::move(state)) {}\n+    explicit Producer(const std::shared_ptr<State> state) : weak_state_(state) {}\n \n-    /// Push a value on the queue\n-    void Push(Result<T> result) {\n-      auto lock = state_->mutex.Lock();\n-      if (state_->finished) {\n+    /// \\brief Push a value on the queue\n+    ///\n+    /// True is returned if the value was pushed, false if the generator is\n+    /// already closed or destroyed.  If the latter, it is recommended to stop\n+    /// producing any further values.\n+    bool Push(Result<T> result) {\n+      auto state = weak_state_.lock();\n+      if (!state) {\n+        // Generator was destroyed\n+        return false;\n+      }\n+      auto lock = state->mutex.Lock();\n+      if (state->finished) {\n         // Closed early\n-        return;\n+        return false;\n       }\n-      if (state_->consumer_fut.has_value()) {\n-        auto fut = std::move(state_->consumer_fut.value());\n-        state_->consumer_fut.reset();\n+      if (state->consumer_fut.has_value()) {\n+        auto fut = std::move(state->consumer_fut.value());\n+        state->consumer_fut.reset();\n         lock.Unlock();  // unlock before potentially invoking a callback\n         fut.MarkFinished(std::move(result));\n-        return;\n+      } else {\n+        state->result_q.push_back(std::move(result));\n       }\n-      state_->result_q.push_back(std::move(result));\n+      return true;\n     }\n \n     /// \\brief Tell the consumer we have finished producing\n     ///\n     /// It is allowed to call this and later call Push() again (\"early close\").\n     /// In this case, calls to Push() after the queue is closed are silently\n     /// ignored.  This can help implementing non-trivial cancellation cases.\n-    void Close() {\n-      auto lock = state_->mutex.Lock();\n-      if (state_->finished) {\n+    ///\n+    /// True is returned on success, false if the generator is already closed\n+    /// or destroyed.\n+    bool Close() {\n+      auto state = weak_state_.lock();\n+      if (!state) {\n+        // Generator was destroyed\n+        return false;\n+      }\n+      auto lock = state->mutex.Lock();\n+      if (state->finished) {\n         // Already closed\n-        return;\n+        return false;\n       }\n-      state_->finished = true;\n-      if (state_->consumer_fut.has_value()) {\n-        auto fut = std::move(state_->consumer_fut.value());\n-        state_->consumer_fut.reset();\n+      state->finished = true;\n+      if (state->consumer_fut.has_value()) {\n+        auto fut = std::move(state->consumer_fut.value());\n+        state->consumer_fut.reset();\n         lock.Unlock();  // unlock before potentially invoking a callback\n         fut.MarkFinished(IterationTraits<T>::End());\n       }\n+      return true;\n     }\n \n+    /// Return whether the generator was closed or destroyed.\n     bool is_closed() const {\n-      auto lock = state_->mutex.Lock();\n-      return state_->finished;\n+      auto state = weak_state_.lock();\n+      if (!state) {\n+        // Generator was destroyed\n+        return true;\n+      }\n+      auto lock = state->mutex.Lock();\n\nReview comment:\n       In any case, I think it is a bug if this becomes a bottleneck, as generators should be tailored for expensive operations.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-15T17:39:04.799+0000",
                    "updated": "2021-04-15T17:39:04.799+0000",
                    "started": "2021-04-15T17:39:04.799+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "583627",
                    "issueId": "13372067"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372067/worklog/583636",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #10055:\nURL: https://github.com/apache/arrow/pull/10055#discussion_r614278652\n\n\n\n##########\nFile path: cpp/src/arrow/util/async_generator.h\n##########\n@@ -766,52 +766,77 @@ class PushGenerator {\n   /// Producer API for PushGenerator\n   class Producer {\n    public:\n-    explicit Producer(std::shared_ptr<State> state) : state_(std::move(state)) {}\n+    explicit Producer(const std::shared_ptr<State> state) : weak_state_(state) {}\n \n-    /// Push a value on the queue\n-    void Push(Result<T> result) {\n-      auto lock = state_->mutex.Lock();\n-      if (state_->finished) {\n+    /// \\brief Push a value on the queue\n+    ///\n+    /// True is returned if the value was pushed, false if the generator is\n+    /// already closed or destroyed.  If the latter, it is recommended to stop\n+    /// producing any further values.\n+    bool Push(Result<T> result) {\n+      auto state = weak_state_.lock();\n+      if (!state) {\n+        // Generator was destroyed\n+        return false;\n+      }\n+      auto lock = state->mutex.Lock();\n+      if (state->finished) {\n         // Closed early\n-        return;\n+        return false;\n       }\n-      if (state_->consumer_fut.has_value()) {\n-        auto fut = std::move(state_->consumer_fut.value());\n-        state_->consumer_fut.reset();\n+      if (state->consumer_fut.has_value()) {\n+        auto fut = std::move(state->consumer_fut.value());\n+        state->consumer_fut.reset();\n         lock.Unlock();  // unlock before potentially invoking a callback\n         fut.MarkFinished(std::move(result));\n-        return;\n+      } else {\n+        state->result_q.push_back(std::move(result));\n       }\n-      state_->result_q.push_back(std::move(result));\n+      return true;\n     }\n \n     /// \\brief Tell the consumer we have finished producing\n     ///\n     /// It is allowed to call this and later call Push() again (\"early close\").\n     /// In this case, calls to Push() after the queue is closed are silently\n     /// ignored.  This can help implementing non-trivial cancellation cases.\n-    void Close() {\n-      auto lock = state_->mutex.Lock();\n-      if (state_->finished) {\n+    ///\n+    /// True is returned on success, false if the generator is already closed\n+    /// or destroyed.\n+    bool Close() {\n+      auto state = weak_state_.lock();\n+      if (!state) {\n+        // Generator was destroyed\n+        return false;\n+      }\n+      auto lock = state->mutex.Lock();\n+      if (state->finished) {\n         // Already closed\n-        return;\n+        return false;\n       }\n-      state_->finished = true;\n-      if (state_->consumer_fut.has_value()) {\n-        auto fut = std::move(state_->consumer_fut.value());\n-        state_->consumer_fut.reset();\n+      state->finished = true;\n+      if (state->consumer_fut.has_value()) {\n+        auto fut = std::move(state->consumer_fut.value());\n+        state->consumer_fut.reset();\n         lock.Unlock();  // unlock before potentially invoking a callback\n         fut.MarkFinished(IterationTraits<T>::End());\n       }\n+      return true;\n     }\n \n+    /// Return whether the generator was closed or destroyed.\n     bool is_closed() const {\n-      auto lock = state_->mutex.Lock();\n-      return state_->finished;\n+      auto state = weak_state_.lock();\n+      if (!state) {\n+        // Generator was destroyed\n+        return true;\n+      }\n+      auto lock = state->mutex.Lock();\n\nReview comment:\n       True.  And atomic bool may not even be free on x86 as it forces the compilers to sequence things (although so would a mutex and that sequencing is exactly what we're after here).\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-15T17:54:37.052+0000",
                    "updated": "2021-04-15T17:54:37.052+0000",
                    "started": "2021-04-15T17:54:37.052+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "583636",
                    "issueId": "13372067"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372067/worklog/583643",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #10055:\nURL: https://github.com/apache/arrow/pull/10055#issuecomment-820621784\n\n\n   Looks like this will fit in 4.0 if CI goes fine.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-15T17:57:13.251+0000",
                    "updated": "2021-04-15T17:57:13.251+0000",
                    "started": "2021-04-15T17:57:13.250+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "583643",
                    "issueId": "13372067"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372067/worklog/583662",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou closed pull request #10055:\nURL: https://github.com/apache/arrow/pull/10055\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-15T18:07:35.659+0000",
                    "updated": "2021-04-15T18:07:35.659+0000",
                    "started": "2021-04-15T18:07:35.659+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "583662",
                    "issueId": "13372067"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 5400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@29738895[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@505c52af[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2f9da753[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@1d665125[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@c6a2bce[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@6b0f237d[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@29eab670[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@6aa2511[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5b435a51[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@49458e8f[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3560e8e1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@6235c1f1[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 5400,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Apr 15 18:07:24 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-04-15T18:07:24.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12367/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2021-04-13T14:45:37.000+0000",
        "updated": "2021-04-15T18:07:36.000+0000",
        "timeoriginalestimate": null,
        "description": "When the consuming-facing {{PushGenerator}} is lost, the {{Producer}} should expose that information so that any background-running producing code can abort.\r\n\r\nPerhaps this may be combined with StopToken...",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 5400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Stop producing when PushGenerator was destroyed",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372067/comment/17322382",
                    "id": "17322382",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 10055\n[https://github.com/apache/arrow/pull/10055]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-04-15T18:07:24.785+0000",
                    "updated": "2021-04-15T18:07:24.785+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0pxuw:",
        "customfield_12314139": null
    }
}