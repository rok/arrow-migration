{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13315700",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315700",
    "key": "ARROW-9377",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345977",
                "id": "12345977",
                "description": "",
                "name": "2.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-10-19"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12592989",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12592989",
                "type": {
                    "id": "12310460",
                    "name": "Child-Issue",
                    "inward": "is a child of",
                    "outward": "is a parent of",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310460"
                },
                "inwardIssue": {
                    "id": "13313863",
                    "key": "ARROW-9259",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13313863",
                    "fields": {
                        "summary": "[Format] Permit unsigned dictionary indices in Columnar.rst",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/2",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/critical.svg",
                            "name": "Critical",
                            "id": "2"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 6000,
            "total": 6000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 6000,
            "total": 6000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9377/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 10,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315700/worklog/461876",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 opened a new pull request #7817:\nURL: https://github.com/apache/arrow/pull/7817\n\n\n   See https://issues.apache.org/jira/browse/ARROW-9377\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-07-22T07:21:57.986+0000",
                    "updated": "2020-07-22T07:21:57.986+0000",
                    "started": "2020-07-22T07:21:57.986+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "461876",
                    "issueId": "13315700"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315700/worklog/461879",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #7817:\nURL: https://github.com/apache/arrow/pull/7817#issuecomment-662293548\n\n\n   https://issues.apache.org/jira/browse/ARROW-9377\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-07-22T07:32:46.563+0000",
                    "updated": "2020-07-22T07:32:46.563+0000",
                    "started": "2020-07-22T07:32:46.562+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "461879",
                    "issueId": "13315700"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315700/worklog/465257",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #7817:\nURL: https://github.com/apache/arrow/pull/7817#discussion_r463914759\n\n\n\n##########\nFile path: java/vector/src/test/java/org/apache/arrow/vector/TestDictionaryVector.java\n##########\n@@ -878,6 +880,103 @@ public void testEncodeStructSubFieldWithCertainColumns() {\n     }\n   }\n \n+  private void testDictionary(Dictionary dictionary, ToIntBiFunction<ValueVector, Integer> valGetter) {\n+    try (VarCharVector vector = new VarCharVector(\"vector\", allocator)) {\n+      setVector(vector, \"1\", \"3\", \"5\", \"7\", \"9\");\n+      try (ValueVector encodedVector = DictionaryEncoder.encode(vector, dictionary)) {\n+\n+        // verify encoded result\n+        assertEquals(vector.getValueCount(), encodedVector.getValueCount());\n+        assertEquals(valGetter.applyAsInt(encodedVector, 0), 1);\n+        assertEquals(valGetter.applyAsInt(encodedVector, 1), 3);\n+        assertEquals(valGetter.applyAsInt(encodedVector, 2), 5);\n+        assertEquals(valGetter.applyAsInt(encodedVector, 3), 7);\n+        assertEquals(valGetter.applyAsInt(encodedVector, 4), 9);\n+\n+        try (ValueVector decodedVector = DictionaryEncoder.decode(encodedVector, dictionary)) {\n+          assertTrue(decodedVector instanceof VarCharVector);\n+          assertEquals(vector.getValueCount(), decodedVector.getValueCount());\n+          assertArrayEquals(\"1\".getBytes(), ((VarCharVector) decodedVector).get(0));\n+          assertArrayEquals(\"3\".getBytes(), ((VarCharVector) decodedVector).get(1));\n+          assertArrayEquals(\"5\".getBytes(), ((VarCharVector) decodedVector).get(2));\n+          assertArrayEquals(\"7\".getBytes(), ((VarCharVector) decodedVector).get(3));\n+          assertArrayEquals(\"9\".getBytes(), ((VarCharVector) decodedVector).get(4));\n+        }\n+      }\n+    }\n+  }\n+\n+  @Test\n+  public void testDictionaryUInt1() {\n+    try (VarCharVector dictionaryVector = new VarCharVector(\"dict vector\", allocator)) {\n+      setVector(dictionaryVector, \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\");\n+      Dictionary dictionary1 = new Dictionary(dictionaryVector,\n+          new DictionaryEncoding(/*id=*/10L, /*ordered=*/false, /*indexType=*/ new ArrowType.Int(8, false)));\n\nReview comment:\n       please provide a parameter comment for bit_width and  \"false\". here and below.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-01T03:16:10.802+0000",
                    "updated": "2020-08-01T03:16:10.802+0000",
                    "started": "2020-08-01T03:16:10.802+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "465257",
                    "issueId": "13315700"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315700/worklog/465260",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #7817:\nURL: https://github.com/apache/arrow/pull/7817#discussion_r463915338\n\n\n\n##########\nFile path: java/vector/src/test/java/org/apache/arrow/vector/TestValueVector.java\n##########\n@@ -2977,4 +2977,47 @@ public void testEmptyBufBehavior() {\n       assertEquals(0, vector.getOffsetBuffer().capacity());\n     }\n   }\n+\n+  @Test\n+  public void testSetGetUInt1() {\n+    try (UInt1Vector vector = new UInt1Vector(\"vector\", allocator)) {\n+      vector.allocateNew(2);\n+\n+      vector.setWithPossibleTruncate(0, 0xffL);\n+      vector.setUnsafeWithPossibleTruncate(1, 0xffL);\n+      vector.setValueCount(2);\n+\n+      assertEquals(255, vector.getValueAsLong(0));\n+      assertEquals(255, vector.getValueAsLong(1));\n+    }\n+  }\n+\n+  @Test\n+  public void testSetGetUInt2() {\n+    try (UInt2Vector vector = new UInt2Vector(\"vector\", allocator)) {\n+      vector.allocateNew(2);\n+\n+      vector.setWithPossibleTruncate(0, 0xffffL);\n\nReview comment:\n       Is there a constant someplace (or can this be moved to a constant on Uint8 vector) to better indicating you are using MAX_INT.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-01T03:22:45.200+0000",
                    "updated": "2020-08-01T03:22:45.200+0000",
                    "started": "2020-08-01T03:22:45.200+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "465260",
                    "issueId": "13315700"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315700/worklog/466138",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on a change in pull request #7817:\nURL: https://github.com/apache/arrow/pull/7817#discussion_r464922151\n\n\n\n##########\nFile path: java/vector/src/test/java/org/apache/arrow/vector/TestDictionaryVector.java\n##########\n@@ -878,6 +880,103 @@ public void testEncodeStructSubFieldWithCertainColumns() {\n     }\n   }\n \n+  private void testDictionary(Dictionary dictionary, ToIntBiFunction<ValueVector, Integer> valGetter) {\n+    try (VarCharVector vector = new VarCharVector(\"vector\", allocator)) {\n+      setVector(vector, \"1\", \"3\", \"5\", \"7\", \"9\");\n+      try (ValueVector encodedVector = DictionaryEncoder.encode(vector, dictionary)) {\n+\n+        // verify encoded result\n+        assertEquals(vector.getValueCount(), encodedVector.getValueCount());\n+        assertEquals(valGetter.applyAsInt(encodedVector, 0), 1);\n+        assertEquals(valGetter.applyAsInt(encodedVector, 1), 3);\n+        assertEquals(valGetter.applyAsInt(encodedVector, 2), 5);\n+        assertEquals(valGetter.applyAsInt(encodedVector, 3), 7);\n+        assertEquals(valGetter.applyAsInt(encodedVector, 4), 9);\n+\n+        try (ValueVector decodedVector = DictionaryEncoder.decode(encodedVector, dictionary)) {\n+          assertTrue(decodedVector instanceof VarCharVector);\n+          assertEquals(vector.getValueCount(), decodedVector.getValueCount());\n+          assertArrayEquals(\"1\".getBytes(), ((VarCharVector) decodedVector).get(0));\n+          assertArrayEquals(\"3\".getBytes(), ((VarCharVector) decodedVector).get(1));\n+          assertArrayEquals(\"5\".getBytes(), ((VarCharVector) decodedVector).get(2));\n+          assertArrayEquals(\"7\".getBytes(), ((VarCharVector) decodedVector).get(3));\n+          assertArrayEquals(\"9\".getBytes(), ((VarCharVector) decodedVector).get(4));\n+        }\n+      }\n+    }\n+  }\n+\n+  @Test\n+  public void testDictionaryUInt1() {\n+    try (VarCharVector dictionaryVector = new VarCharVector(\"dict vector\", allocator)) {\n+      setVector(dictionaryVector, \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\");\n+      Dictionary dictionary1 = new Dictionary(dictionaryVector,\n+          new DictionaryEncoding(/*id=*/10L, /*ordered=*/false, /*indexType=*/ new ArrowType.Int(8, false)));\n\nReview comment:\n       Parameter comments added. Thanks for your kind reminder. \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-04T09:28:43.532+0000",
                    "updated": "2020-08-04T09:28:43.532+0000",
                    "started": "2020-08-04T09:28:43.532+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "466138",
                    "issueId": "13315700"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315700/worklog/466140",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on a change in pull request #7817:\nURL: https://github.com/apache/arrow/pull/7817#discussion_r464922804\n\n\n\n##########\nFile path: java/vector/src/test/java/org/apache/arrow/vector/TestValueVector.java\n##########\n@@ -2977,4 +2977,47 @@ public void testEmptyBufBehavior() {\n       assertEquals(0, vector.getOffsetBuffer().capacity());\n     }\n   }\n+\n+  @Test\n+  public void testSetGetUInt1() {\n+    try (UInt1Vector vector = new UInt1Vector(\"vector\", allocator)) {\n+      vector.allocateNew(2);\n+\n+      vector.setWithPossibleTruncate(0, 0xffL);\n+      vector.setUnsafeWithPossibleTruncate(1, 0xffL);\n+      vector.setValueCount(2);\n+\n+      assertEquals(255, vector.getValueAsLong(0));\n+      assertEquals(255, vector.getValueAsLong(1));\n+    }\n+  }\n+\n+  @Test\n+  public void testSetGetUInt2() {\n+    try (UInt2Vector vector = new UInt2Vector(\"vector\", allocator)) {\n+      vector.allocateNew(2);\n+\n+      vector.setWithPossibleTruncate(0, 0xffffL);\n\nReview comment:\n       Good idea!\r\n   I've extracted constants for maximum unsigned integers, and placed them in corresponding UIntXvector classes. \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-04T09:29:58.516+0000",
                    "updated": "2020-08-04T09:29:58.516+0000",
                    "started": "2020-08-04T09:29:58.516+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "466140",
                    "issueId": "13315700"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315700/worklog/468179",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #7817:\nURL: https://github.com/apache/arrow/pull/7817#discussion_r467357784\n\n\n\n##########\nFile path: java/vector/src/test/java/org/apache/arrow/vector/ipc/TestUIntDictionaryRoundTrip.java\n##########\n@@ -0,0 +1,207 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.ipc;\n+\n+import static org.apache.arrow.vector.testing.ValueVectorDataPopulator.setVector;\n+import static org.junit.Assert.assertArrayEquals;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.nio.channels.Channels;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Map;\n+import java.util.function.ToIntBiFunction;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.memory.RootAllocator;\n+import org.apache.arrow.vector.FieldVector;\n+import org.apache.arrow.vector.UInt1Vector;\n+import org.apache.arrow.vector.UInt2Vector;\n+import org.apache.arrow.vector.UInt4Vector;\n+import org.apache.arrow.vector.UInt8Vector;\n+import org.apache.arrow.vector.ValueVector;\n+import org.apache.arrow.vector.VarCharVector;\n+import org.apache.arrow.vector.VectorSchemaRoot;\n+import org.apache.arrow.vector.dictionary.Dictionary;\n+import org.apache.arrow.vector.dictionary.DictionaryProvider;\n+import org.apache.arrow.vector.types.pojo.ArrowType;\n+import org.apache.arrow.vector.types.pojo.DictionaryEncoding;\n+import org.apache.arrow.vector.types.pojo.Field;\n+import org.apache.arrow.vector.types.pojo.FieldType;\n+import org.apache.arrow.vector.types.pojo.Schema;\n+import org.apache.arrow.vector.util.ByteArrayReadableSeekableByteChannel;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Parameterized;\n+\n+/**\n+ * Test the round-trip of dictionary encoding,\n+ * with unsigned integer as indices.\n+ */\n+@RunWith(Parameterized.class)\n+public class TestUIntDictionaryRoundTrip {\n+\n+  private final boolean streamMode;\n+\n+  public TestUIntDictionaryRoundTrip(boolean streamMode) {\n+    this.streamMode = streamMode;\n+  }\n+\n+  private BufferAllocator allocator;\n+\n+  private VarCharVector dictionaryVector;\n+\n+  private DictionaryProvider.MapDictionaryProvider dictionaryProvider;\n+\n+  @Before\n+  public void init() {\n+    allocator = new RootAllocator(Long.MAX_VALUE);\n+    dictionaryVector = new VarCharVector(\"dict vector\", allocator);\n+    setVector(dictionaryVector, \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\");\n+\n+    dictionaryProvider = new DictionaryProvider.MapDictionaryProvider();\n+  }\n+\n+  @After\n+  public void terminate() throws Exception {\n+    dictionaryVector.close();\n+    allocator.close();\n+  }\n+\n+  private byte[] writeData(FieldVector encodedVector) throws IOException {\n+    ByteArrayOutputStream out = new ByteArrayOutputStream();\n+    VectorSchemaRoot root =\n+        new VectorSchemaRoot(\n+            Arrays.asList(encodedVector.getField()), Arrays.asList(encodedVector), encodedVector.getValueCount());\n+    try (ArrowWriter writer = streamMode ?\n+        new ArrowStreamWriter(root, dictionaryProvider, out) :\n+        new ArrowFileWriter(root, dictionaryProvider, Channels.newChannel(out))) {\n+      writer.start();\n+      writer.writeBatch();\n+      writer.end();\n+\n+      return out.toByteArray();\n+    }\n+  }\n+\n+  private void readData(\n+      byte[] data,\n+      Field expectedField,\n+      ToIntBiFunction<ValueVector, Integer> valGetter,\n+      long dictionaryID) throws IOException {\n+    try (ArrowReader reader = streamMode ?\n+             new ArrowStreamReader(new ByteArrayInputStream(data), allocator) :\n+             new ArrowFileReader(new SeekableReadChannel(new ByteArrayReadableSeekableByteChannel(data)), allocator)) {\n+\n+      // verify schema\n+      Schema readSchema = reader.getVectorSchemaRoot().getSchema();\n+      assertEquals(1, readSchema.getFields().size());\n+      assertEquals(expectedField, readSchema.getFields().get(0));\n+\n+      // verify vector schema root\n+      assertTrue(reader.loadNextBatch());\n+      VectorSchemaRoot root = reader.getVectorSchemaRoot();\n+\n+      assertEquals(1, root.getFieldVectors().size());\n+      ValueVector encodedVector = root.getVector(0);\n+      assertEquals(5, encodedVector.getValueCount());\n+\n+      assertEquals(1, valGetter.applyAsInt(encodedVector, 0));\n+      assertEquals(3, valGetter.applyAsInt(encodedVector, 1));\n+      assertEquals(5, valGetter.applyAsInt(encodedVector, 2));\n+      assertEquals(7, valGetter.applyAsInt(encodedVector, 3));\n+      assertEquals(9, valGetter.applyAsInt(encodedVector, 4));\n+\n+      // verify dictionary\n+      Map<Long, Dictionary> dictVectors = reader.getDictionaryVectors();\n+      assertEquals(1, dictVectors.size());\n+      Dictionary dictionary = dictVectors.get(dictionaryID);\n+      assertNotNull(dictionary);\n+\n+      assertTrue(dictionary.getVector() instanceof VarCharVector);\n+      VarCharVector dictVector = (VarCharVector) dictionary.getVector();\n+      assertEquals(10, dictVector.getValueCount());\n+      for (int i = 0; i < dictVector.getValueCount(); i++) {\n+        assertArrayEquals(String.valueOf(i).getBytes(), dictVector.get(i));\n+      }\n+    }\n+  }\n+\n+  private ValueVector createEncodedVector(int bitWidth) {\n+    final DictionaryEncoding dictionaryEncoding =\n+        new DictionaryEncoding(bitWidth, false, new ArrowType.Int(bitWidth, false));\n+    Dictionary dictionary = new Dictionary(dictionaryVector, dictionaryEncoding);\n+    dictionaryProvider.put(dictionary);\n+\n+    final FieldType type =\n+        new FieldType(true, dictionaryEncoding.getIndexType(), dictionaryEncoding, null);\n+    final Field field = new Field(\"encoded\", type, null);\n+    return field.createVector(allocator);\n+  }\n+\n+  @Test\n+  public void testUInt1RoundTrip() throws IOException {\n+    try (UInt1Vector encodedVector1 = (UInt1Vector) createEncodedVector(8)) {\n+      setVector(encodedVector1, (byte) 1, (byte) 3, (byte) 5, (byte) 7, (byte) 9);\n\nReview comment:\n       should max value round trips be be added here and below as well?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-08T03:57:27.242+0000",
                    "updated": "2020-08-08T03:57:27.242+0000",
                    "started": "2020-08-08T03:57:27.242+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "468179",
                    "issueId": "13315700"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315700/worklog/468180",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #7817:\nURL: https://github.com/apache/arrow/pull/7817#discussion_r467357953\n\n\n\n##########\nFile path: java/vector/src/test/java/org/apache/arrow/vector/ipc/TestUIntDictionaryRoundTrip.java\n##########\n@@ -0,0 +1,207 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.ipc;\n+\n+import static org.apache.arrow.vector.testing.ValueVectorDataPopulator.setVector;\n+import static org.junit.Assert.assertArrayEquals;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.nio.channels.Channels;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Map;\n+import java.util.function.ToIntBiFunction;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.memory.RootAllocator;\n+import org.apache.arrow.vector.FieldVector;\n+import org.apache.arrow.vector.UInt1Vector;\n+import org.apache.arrow.vector.UInt2Vector;\n+import org.apache.arrow.vector.UInt4Vector;\n+import org.apache.arrow.vector.UInt8Vector;\n+import org.apache.arrow.vector.ValueVector;\n+import org.apache.arrow.vector.VarCharVector;\n+import org.apache.arrow.vector.VectorSchemaRoot;\n+import org.apache.arrow.vector.dictionary.Dictionary;\n+import org.apache.arrow.vector.dictionary.DictionaryProvider;\n+import org.apache.arrow.vector.types.pojo.ArrowType;\n+import org.apache.arrow.vector.types.pojo.DictionaryEncoding;\n+import org.apache.arrow.vector.types.pojo.Field;\n+import org.apache.arrow.vector.types.pojo.FieldType;\n+import org.apache.arrow.vector.types.pojo.Schema;\n+import org.apache.arrow.vector.util.ByteArrayReadableSeekableByteChannel;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Parameterized;\n+\n+/**\n+ * Test the round-trip of dictionary encoding,\n+ * with unsigned integer as indices.\n+ */\n+@RunWith(Parameterized.class)\n+public class TestUIntDictionaryRoundTrip {\n+\n+  private final boolean streamMode;\n+\n+  public TestUIntDictionaryRoundTrip(boolean streamMode) {\n+    this.streamMode = streamMode;\n+  }\n+\n+  private BufferAllocator allocator;\n+\n+  private VarCharVector dictionaryVector;\n+\n+  private DictionaryProvider.MapDictionaryProvider dictionaryProvider;\n+\n+  @Before\n+  public void init() {\n+    allocator = new RootAllocator(Long.MAX_VALUE);\n+    dictionaryVector = new VarCharVector(\"dict vector\", allocator);\n+    setVector(dictionaryVector, \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\");\n\nReview comment:\n       it might be nice to verify dictionary for at least uint1 work for vectors of length > 127\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-08T03:59:50.850+0000",
                    "updated": "2020-08-08T03:59:50.850+0000",
                    "started": "2020-08-08T03:59:50.850+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "468180",
                    "issueId": "13315700"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315700/worklog/470999",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #7817:\nURL: https://github.com/apache/arrow/pull/7817#issuecomment-674347084\n\n\n   Thanks @liyafan82 \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-15T04:26:55.946+0000",
                    "updated": "2020-08-15T04:26:55.946+0000",
                    "started": "2020-08-15T04:26:55.946+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "470999",
                    "issueId": "13315700"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315700/worklog/471000",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield closed pull request #7817:\nURL: https://github.com/apache/arrow/pull/7817\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-15T04:27:08.973+0000",
                    "updated": "2020-08-15T04:27:08.973+0000",
                    "started": "2020-08-15T04:27:08.973+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "471000",
                    "issueId": "13315700"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 6000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@1695c9e8[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@736b3df[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@57cd721c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@65579b71[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4c598ab[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1218afc7[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2e79720a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@772cf8a7[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5f043629[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@835cc99[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6db906b7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7d402267[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 6000,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Aug 15 04:27:07 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-08-15T04:27:07.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9377/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-07-08T18:24:45.000+0000",
        "updated": "2020-08-15T04:27:09.000+0000",
        "timeoriginalestimate": null,
        "description": "child of ARROW-9259",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 6000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] Support unsigned dictionary indices",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315700/comment/17178152",
                    "id": "17178152",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield",
                        "name": "emkornfield",
                        "key": "emkornfield",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 7817\n[https://github.com/apache/arrow/pull/7817]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield",
                        "name": "emkornfield",
                        "key": "emkornfield",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2020-08-15T04:27:07.785+0000",
                    "updated": "2020-08-15T04:27:07.785+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0gkow:",
        "customfield_12314139": null
    }
}