{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13194605",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13194605",
    "key": "ARROW-3636",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343858",
                "id": "12343858",
                "description": "",
                "name": "0.12.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-01-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
            "name": "uwe",
            "key": "xhochy",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
            },
            "displayName": "Uwe Korn",
            "active": true,
            "timeZone": "Europe/Berlin"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 3000,
            "total": 3000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 3000,
            "total": 3000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3636/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 5,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13194605/worklog/159704",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy opened a new pull request #2854: ARROW-3636: [C++/Python] Update arrow/python/pyarrow_api.h\nURL: https://github.com/apache/arrow/pull/2854\n \n \n   This simply updates the file. I'll defer the removal of `public` to https://issues.apache.org/jira/browse/ARROW-3641\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-28T10:51:57.463+0000",
                    "updated": "2018-10-28T10:51:57.463+0000",
                    "started": "2018-10-28T10:51:57.461+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "159704",
                    "issueId": "13194605"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13194605/worklog/159745",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2854: ARROW-3636: [C++/Python] Update arrow/python/pyarrow_api.h\nURL: https://github.com/apache/arrow/pull/2854#issuecomment-433734340\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2854?src=pr&el=h1) Report\n   > Merging [#2854](https://codecov.io/gh/apache/arrow/pull/2854?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/d61988d9bc1c9ca92789523593055da0996e9509?src=pr&el=desc) will **increase** coverage by `0.85%`.\n   > The diff coverage is `100%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2854/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/2854?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2854      +/-   ##\n   ==========================================\n   + Coverage   87.55%   88.41%   +0.85%     \n   ==========================================\n     Files         410      348      -62     \n     Lines       63486    59356    -4130     \n   ==========================================\n   - Hits        55586    52480    -3106     \n   + Misses       7828     6876     -952     \n   + Partials       72        0      -72\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2854?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/python/pyarrow\\_api.h](https://codecov.io/gh/apache/arrow/pull/2854/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vcHlhcnJvd19hcGkuaA==) | `82.75% <100%> (+2.16%)` | :arrow_up: |\n   | [rust/src/record\\_batch.rs](https://codecov.io/gh/apache/arrow/pull/2854/diff?src=pr&el=tree#diff-cnVzdC9zcmMvcmVjb3JkX2JhdGNoLnJz) | | |\n   | [go/arrow/array/table.go](https://codecov.io/gh/apache/arrow/pull/2854/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvdGFibGUuZ28=) | | |\n   | [rust/src/util/bit\\_util.rs](https://codecov.io/gh/apache/arrow/pull/2854/diff?src=pr&el=tree#diff-cnVzdC9zcmMvdXRpbC9iaXRfdXRpbC5ycw==) | | |\n   | [go/arrow/math/uint64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2854/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYW1kNjQuZ28=) | | |\n   | [go/arrow/internal/testing/tools/bool.go](https://codecov.io/gh/apache/arrow/pull/2854/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaW50ZXJuYWwvdGVzdGluZy90b29scy9ib29sLmdv) | | |\n   | [go/arrow/internal/bitutil/bitutil.go](https://codecov.io/gh/apache/arrow/pull/2854/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaW50ZXJuYWwvYml0dXRpbC9iaXR1dGlsLmdv) | | |\n   | [go/arrow/memory/memory\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2854/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L21lbW9yeV9hdngyX2FtZDY0Lmdv) | | |\n   | [go/arrow/array/null.go](https://codecov.io/gh/apache/arrow/pull/2854/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvbnVsbC5nbw==) | | |\n   | [go/arrow/datatype\\_nested.go](https://codecov.io/gh/apache/arrow/pull/2854/diff?src=pr&el=tree#diff-Z28vYXJyb3cvZGF0YXR5cGVfbmVzdGVkLmdv) | | |\n   | ... and [53 more](https://codecov.io/gh/apache/arrow/pull/2854/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2854?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2854?src=pr&el=footer). Last update [d61988d...10b429e](https://codecov.io/gh/apache/arrow/pull/2854?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-28T19:31:10.335+0000",
                    "updated": "2018-10-28T19:31:10.335+0000",
                    "started": "2018-10-28T19:31:10.334+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "159745",
                    "issueId": "13194605"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13194605/worklog/159910",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2854: ARROW-3636: [C++/Python] Update arrow/python/pyarrow_api.h\nURL: https://github.com/apache/arrow/pull/2854#discussion_r228859087\n \n \n\n ##########\n File path: cpp/src/arrow/python/pyarrow_api.h\n ##########\n @@ -17,66 +17,71 @@\n \n // DO NOT EDIT THIS FILE. Update from pyarrow/lib_api.h after pyarrow build\n \n-/* Generated by Cython 0.25.2 */\n+/* Generated by Cython 0.29 */\n \n #ifndef __PYX_HAVE_API__pyarrow__lib\n #define __PYX_HAVE_API__pyarrow__lib\n #include \"Python.h\"\n+#include \"pyarrow_lib.h\"\n \n Review comment:\n   I realize this is Cython-generated code, but why is including this file becoming necessary? @scoder \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-29T09:57:41.734+0000",
                    "updated": "2018-10-29T09:57:41.734+0000",
                    "started": "2018-10-29T09:57:41.733+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "159910",
                    "issueId": "13194605"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13194605/worklog/160021",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy commented on a change in pull request #2854: ARROW-3636: [C++/Python] Update arrow/python/pyarrow_api.h\nURL: https://github.com/apache/arrow/pull/2854#discussion_r228980090\n \n \n\n ##########\n File path: cpp/src/arrow/python/pyarrow_lib.h\n ##########\n @@ -0,0 +1,81 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+// DO NOT EDIT THIS FILE. Update from pyarrow/lib.h after pyarrow build\n+\n+/* Generated by Cython 0.29 */\n+\n+#ifndef __PYX_HAVE__pyarrow__lib\n+#define __PYX_HAVE__pyarrow__lib\n+\n+\n+#ifndef __PYX_HAVE_API__pyarrow__lib\n+\n+#ifndef __PYX_EXTERN_C\n+  #ifdef __cplusplus\n+    #define __PYX_EXTERN_C extern \"C\"\n+  #else\n+    #define __PYX_EXTERN_C extern\n+  #endif\n+#endif\n+\n+#ifndef DL_IMPORT\n+  #define DL_IMPORT(_T) _T\n+#endif\n+\n+__PYX_EXTERN_C PyObject *__pyx_f_7pyarrow_3lib_pyarrow_wrap_array(std::shared_ptr< arrow::Array>  const &);\n \n Review comment:\n   This will prevent the C++ compiler to also apply C++ name mangling on the already (Cython) mangled name, i.e. this guarantees that `__pyx_f_7pyarrow_3lib_pyarrow_wrap_array` is also the exact name of the symbol in the shared object. Normally the types of the parameters would also be included in the mangled symbol name.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-29T15:38:56.895+0000",
                    "updated": "2018-10-29T15:38:56.895+0000",
                    "started": "2018-10-29T15:38:56.847+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "160021",
                    "issueId": "13194605"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13194605/worklog/160252",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm closed pull request #2854: ARROW-3636: [C++/Python] Update arrow/python/pyarrow_api.h\nURL: https://github.com/apache/arrow/pull/2854\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/CMakeLists.txt b/cpp/CMakeLists.txt\nindex ca2949f8c2..1860a1ccbe 100644\n--- a/cpp/CMakeLists.txt\n+++ b/cpp/CMakeLists.txt\n@@ -337,6 +337,7 @@ if (UNIX)\n   FOREACH(item ${LINT_FILES})\n     IF(NOT ((item MATCHES \"_generated.h\") OR\n             (item MATCHES \"pyarrow_api.h\") OR\n+            (item MATCHES \"pyarrow_lib.h\") OR\n             (item MATCHES \"xxhash.h\") OR\n             (item MATCHES \"xxhash.cc\") OR\n             (item MATCHES \"config.h\") OR\ndiff --git a/cpp/build-support/clang_format_exclusions.txt b/cpp/build-support/clang_format_exclusions.txt\nindex e26cb76ee7..03caa00acd 100644\n--- a/cpp/build-support/clang_format_exclusions.txt\n+++ b/cpp/build-support/clang_format_exclusions.txt\n@@ -1,6 +1,7 @@\n *_generated*\n *windows_compatibility.h\n *pyarrow_api.h\n+*pyarrow_lib.h\n *python/config.h\n *python/platform.h\n *util/variant.h\ndiff --git a/cpp/src/arrow/python/pyarrow_api.h b/cpp/src/arrow/python/pyarrow_api.h\nindex 423595f127..f6a211290e 100644\n--- a/cpp/src/arrow/python/pyarrow_api.h\n+++ b/cpp/src/arrow/python/pyarrow_api.h\n@@ -17,66 +17,71 @@\n \n // DO NOT EDIT THIS FILE. Update from pyarrow/lib_api.h after pyarrow build\n \n-/* Generated by Cython 0.25.2 */\n+/* Generated by Cython 0.29 */\n \n #ifndef __PYX_HAVE_API__pyarrow__lib\n #define __PYX_HAVE_API__pyarrow__lib\n #include \"Python.h\"\n+#include \"pyarrow_lib.h\"\n \n+static PyObject *(*__pyx_api_f_7pyarrow_3lib_pyarrow_wrap_array)(std::shared_ptr< arrow::Array>  const &) = 0;\n+#define pyarrow_wrap_array __pyx_api_f_7pyarrow_3lib_pyarrow_wrap_array\n+static PyObject *(*__pyx_api_f_7pyarrow_3lib_pyarrow_wrap_batch)(std::shared_ptr< arrow::RecordBatch>  const &) = 0;\n+#define pyarrow_wrap_batch __pyx_api_f_7pyarrow_3lib_pyarrow_wrap_batch\n static PyObject *(*__pyx_api_f_7pyarrow_3lib_pyarrow_wrap_buffer)(std::shared_ptr< arrow::Buffer>  const &) = 0;\n #define pyarrow_wrap_buffer __pyx_api_f_7pyarrow_3lib_pyarrow_wrap_buffer\n+static PyObject *(*__pyx_api_f_7pyarrow_3lib_pyarrow_wrap_column)(std::shared_ptr< arrow::Column>  const &) = 0;\n+#define pyarrow_wrap_column __pyx_api_f_7pyarrow_3lib_pyarrow_wrap_column\n static PyObject *(*__pyx_api_f_7pyarrow_3lib_pyarrow_wrap_data_type)(std::shared_ptr< arrow::DataType>  const &) = 0;\n #define pyarrow_wrap_data_type __pyx_api_f_7pyarrow_3lib_pyarrow_wrap_data_type\n static PyObject *(*__pyx_api_f_7pyarrow_3lib_pyarrow_wrap_field)(std::shared_ptr< arrow::Field>  const &) = 0;\n #define pyarrow_wrap_field __pyx_api_f_7pyarrow_3lib_pyarrow_wrap_field\n+static PyObject *(*__pyx_api_f_7pyarrow_3lib_pyarrow_wrap_resizable_buffer)(std::shared_ptr< arrow::ResizableBuffer>  const &) = 0;\n+#define pyarrow_wrap_resizable_buffer __pyx_api_f_7pyarrow_3lib_pyarrow_wrap_resizable_buffer\n static PyObject *(*__pyx_api_f_7pyarrow_3lib_pyarrow_wrap_schema)(std::shared_ptr< arrow::Schema>  const &) = 0;\n #define pyarrow_wrap_schema __pyx_api_f_7pyarrow_3lib_pyarrow_wrap_schema\n-static PyObject *(*__pyx_api_f_7pyarrow_3lib_pyarrow_wrap_array)(std::shared_ptr< arrow::Array>  const &) = 0;\n-#define pyarrow_wrap_array __pyx_api_f_7pyarrow_3lib_pyarrow_wrap_array\n-static PyObject *(*__pyx_api_f_7pyarrow_3lib_pyarrow_wrap_tensor)(std::shared_ptr< arrow::Tensor>  const &) = 0;\n-#define pyarrow_wrap_tensor __pyx_api_f_7pyarrow_3lib_pyarrow_wrap_tensor\n-static PyObject *(*__pyx_api_f_7pyarrow_3lib_pyarrow_wrap_column)(std::shared_ptr< arrow::Column>  const &) = 0;\n-#define pyarrow_wrap_column __pyx_api_f_7pyarrow_3lib_pyarrow_wrap_column\n static PyObject *(*__pyx_api_f_7pyarrow_3lib_pyarrow_wrap_table)(std::shared_ptr< arrow::Table>  const &) = 0;\n #define pyarrow_wrap_table __pyx_api_f_7pyarrow_3lib_pyarrow_wrap_table\n-static PyObject *(*__pyx_api_f_7pyarrow_3lib_pyarrow_wrap_batch)(std::shared_ptr< arrow::RecordBatch>  const &) = 0;\n-#define pyarrow_wrap_batch __pyx_api_f_7pyarrow_3lib_pyarrow_wrap_batch\n-static int (*__pyx_api_f_7pyarrow_3lib_pyarrow_is_buffer)(PyObject *) = 0;\n-#define pyarrow_is_buffer __pyx_api_f_7pyarrow_3lib_pyarrow_is_buffer\n+static PyObject *(*__pyx_api_f_7pyarrow_3lib_pyarrow_wrap_tensor)(std::shared_ptr< arrow::Tensor>  const &) = 0;\n+#define pyarrow_wrap_tensor __pyx_api_f_7pyarrow_3lib_pyarrow_wrap_tensor\n+static std::shared_ptr< arrow::Array>  (*__pyx_api_f_7pyarrow_3lib_pyarrow_unwrap_array)(PyObject *) = 0;\n+#define pyarrow_unwrap_array __pyx_api_f_7pyarrow_3lib_pyarrow_unwrap_array\n+static std::shared_ptr< arrow::RecordBatch>  (*__pyx_api_f_7pyarrow_3lib_pyarrow_unwrap_batch)(PyObject *) = 0;\n+#define pyarrow_unwrap_batch __pyx_api_f_7pyarrow_3lib_pyarrow_unwrap_batch\n static std::shared_ptr< arrow::Buffer>  (*__pyx_api_f_7pyarrow_3lib_pyarrow_unwrap_buffer)(PyObject *) = 0;\n #define pyarrow_unwrap_buffer __pyx_api_f_7pyarrow_3lib_pyarrow_unwrap_buffer\n-static int (*__pyx_api_f_7pyarrow_3lib_pyarrow_is_data_type)(PyObject *) = 0;\n-#define pyarrow_is_data_type __pyx_api_f_7pyarrow_3lib_pyarrow_is_data_type\n+static std::shared_ptr< arrow::Column>  (*__pyx_api_f_7pyarrow_3lib_pyarrow_unwrap_column)(PyObject *) = 0;\n+#define pyarrow_unwrap_column __pyx_api_f_7pyarrow_3lib_pyarrow_unwrap_column\n static std::shared_ptr< arrow::DataType>  (*__pyx_api_f_7pyarrow_3lib_pyarrow_unwrap_data_type)(PyObject *) = 0;\n #define pyarrow_unwrap_data_type __pyx_api_f_7pyarrow_3lib_pyarrow_unwrap_data_type\n-static int (*__pyx_api_f_7pyarrow_3lib_pyarrow_is_field)(PyObject *) = 0;\n-#define pyarrow_is_field __pyx_api_f_7pyarrow_3lib_pyarrow_is_field\n static std::shared_ptr< arrow::Field>  (*__pyx_api_f_7pyarrow_3lib_pyarrow_unwrap_field)(PyObject *) = 0;\n #define pyarrow_unwrap_field __pyx_api_f_7pyarrow_3lib_pyarrow_unwrap_field\n-static int (*__pyx_api_f_7pyarrow_3lib_pyarrow_is_schema)(PyObject *) = 0;\n-#define pyarrow_is_schema __pyx_api_f_7pyarrow_3lib_pyarrow_is_schema\n static std::shared_ptr< arrow::Schema>  (*__pyx_api_f_7pyarrow_3lib_pyarrow_unwrap_schema)(PyObject *) = 0;\n #define pyarrow_unwrap_schema __pyx_api_f_7pyarrow_3lib_pyarrow_unwrap_schema\n+static std::shared_ptr< arrow::Table>  (*__pyx_api_f_7pyarrow_3lib_pyarrow_unwrap_table)(PyObject *) = 0;\n+#define pyarrow_unwrap_table __pyx_api_f_7pyarrow_3lib_pyarrow_unwrap_table\n+static std::shared_ptr< arrow::Tensor>  (*__pyx_api_f_7pyarrow_3lib_pyarrow_unwrap_tensor)(PyObject *) = 0;\n+#define pyarrow_unwrap_tensor __pyx_api_f_7pyarrow_3lib_pyarrow_unwrap_tensor\n+static int (*__pyx_api_f_7pyarrow_3lib_pyarrow_is_buffer)(PyObject *) = 0;\n+#define pyarrow_is_buffer __pyx_api_f_7pyarrow_3lib_pyarrow_is_buffer\n+static int (*__pyx_api_f_7pyarrow_3lib_pyarrow_is_data_type)(PyObject *) = 0;\n+#define pyarrow_is_data_type __pyx_api_f_7pyarrow_3lib_pyarrow_is_data_type\n+static int (*__pyx_api_f_7pyarrow_3lib_pyarrow_is_field)(PyObject *) = 0;\n+#define pyarrow_is_field __pyx_api_f_7pyarrow_3lib_pyarrow_is_field\n+static int (*__pyx_api_f_7pyarrow_3lib_pyarrow_is_schema)(PyObject *) = 0;\n+#define pyarrow_is_schema __pyx_api_f_7pyarrow_3lib_pyarrow_is_schema\n static int (*__pyx_api_f_7pyarrow_3lib_pyarrow_is_array)(PyObject *) = 0;\n #define pyarrow_is_array __pyx_api_f_7pyarrow_3lib_pyarrow_is_array\n-static std::shared_ptr< arrow::Array>  (*__pyx_api_f_7pyarrow_3lib_pyarrow_unwrap_array)(PyObject *) = 0;\n-#define pyarrow_unwrap_array __pyx_api_f_7pyarrow_3lib_pyarrow_unwrap_array\n+static PyObject *(*__pyx_api_f_7pyarrow_3lib_pyarrow_wrap_chunked_array)(std::shared_ptr< arrow::ChunkedArray>  const &) = 0;\n+#define pyarrow_wrap_chunked_array __pyx_api_f_7pyarrow_3lib_pyarrow_wrap_chunked_array\n static int (*__pyx_api_f_7pyarrow_3lib_pyarrow_is_tensor)(PyObject *) = 0;\n #define pyarrow_is_tensor __pyx_api_f_7pyarrow_3lib_pyarrow_is_tensor\n-static std::shared_ptr< arrow::Tensor>  (*__pyx_api_f_7pyarrow_3lib_pyarrow_unwrap_tensor)(PyObject *) = 0;\n-#define pyarrow_unwrap_tensor __pyx_api_f_7pyarrow_3lib_pyarrow_unwrap_tensor\n static int (*__pyx_api_f_7pyarrow_3lib_pyarrow_is_column)(PyObject *) = 0;\n #define pyarrow_is_column __pyx_api_f_7pyarrow_3lib_pyarrow_is_column\n-static std::shared_ptr< arrow::Column>  (*__pyx_api_f_7pyarrow_3lib_pyarrow_unwrap_column)(PyObject *) = 0;\n-#define pyarrow_unwrap_column __pyx_api_f_7pyarrow_3lib_pyarrow_unwrap_column\n static int (*__pyx_api_f_7pyarrow_3lib_pyarrow_is_table)(PyObject *) = 0;\n #define pyarrow_is_table __pyx_api_f_7pyarrow_3lib_pyarrow_is_table\n-static std::shared_ptr< arrow::Table>  (*__pyx_api_f_7pyarrow_3lib_pyarrow_unwrap_table)(PyObject *) = 0;\n-#define pyarrow_unwrap_table __pyx_api_f_7pyarrow_3lib_pyarrow_unwrap_table\n static int (*__pyx_api_f_7pyarrow_3lib_pyarrow_is_batch)(PyObject *) = 0;\n #define pyarrow_is_batch __pyx_api_f_7pyarrow_3lib_pyarrow_is_batch\n-static std::shared_ptr< arrow::RecordBatch>  (*__pyx_api_f_7pyarrow_3lib_pyarrow_unwrap_batch)(PyObject *) = 0;\n-#define pyarrow_unwrap_batch __pyx_api_f_7pyarrow_3lib_pyarrow_unwrap_batch\n #if !defined(__Pyx_PyIdentifier_FromString)\n #if PY_MAJOR_VERSION < 3\n   #define __Pyx_PyIdentifier_FromString(s) PyString_FromString(s)\n@@ -85,23 +90,6 @@ static std::shared_ptr< arrow::RecordBatch>  (*__pyx_api_f_7pyarrow_3lib_pyarrow\n #endif\n #endif\n \n-#ifndef __PYX_HAVE_RT_ImportModule\n-#define __PYX_HAVE_RT_ImportModule\n-static PyObject *__Pyx_ImportModule(const char *name) {\n-    PyObject *py_name = 0;\n-    PyObject *py_module = 0;\n-    py_name = __Pyx_PyIdentifier_FromString(name);\n-    if (!py_name)\n-        goto bad;\n-    py_module = PyImport_Import(py_name);\n-    Py_DECREF(py_name);\n-    return py_module;\n-bad:\n-    Py_XDECREF(py_name);\n-    return 0;\n-}\n-#endif\n-\n #ifndef __PYX_HAVE_RT_ImportFunction\n #define __PYX_HAVE_RT_ImportFunction\n static int __Pyx_ImportFunction(PyObject *module, const char *funcname, void (**f)(void), const char *sig) {\n@@ -158,35 +146,37 @@ static int __Pyx_ImportFunction(PyObject *module, const char *funcname, void (**\n \n static int import_pyarrow__lib(void) {\n   PyObject *module = 0;\n-  module = __Pyx_ImportModule(\"pyarrow.lib\");\n+  module = PyImport_ImportModule(\"pyarrow.lib\");\n   if (!module) goto bad;\n+  if (__Pyx_ImportFunction(module, \"pyarrow_wrap_array\", (void (**)(void))&__pyx_api_f_7pyarrow_3lib_pyarrow_wrap_array, \"PyObject *(std::shared_ptr< arrow::Array>  const &)\") < 0) goto bad;\n+  if (__Pyx_ImportFunction(module, \"pyarrow_wrap_batch\", (void (**)(void))&__pyx_api_f_7pyarrow_3lib_pyarrow_wrap_batch, \"PyObject *(std::shared_ptr< arrow::RecordBatch>  const &)\") < 0) goto bad;\n   if (__Pyx_ImportFunction(module, \"pyarrow_wrap_buffer\", (void (**)(void))&__pyx_api_f_7pyarrow_3lib_pyarrow_wrap_buffer, \"PyObject *(std::shared_ptr< arrow::Buffer>  const &)\") < 0) goto bad;\n+  if (__Pyx_ImportFunction(module, \"pyarrow_wrap_column\", (void (**)(void))&__pyx_api_f_7pyarrow_3lib_pyarrow_wrap_column, \"PyObject *(std::shared_ptr< arrow::Column>  const &)\") < 0) goto bad;\n   if (__Pyx_ImportFunction(module, \"pyarrow_wrap_data_type\", (void (**)(void))&__pyx_api_f_7pyarrow_3lib_pyarrow_wrap_data_type, \"PyObject *(std::shared_ptr< arrow::DataType>  const &)\") < 0) goto bad;\n   if (__Pyx_ImportFunction(module, \"pyarrow_wrap_field\", (void (**)(void))&__pyx_api_f_7pyarrow_3lib_pyarrow_wrap_field, \"PyObject *(std::shared_ptr< arrow::Field>  const &)\") < 0) goto bad;\n+  if (__Pyx_ImportFunction(module, \"pyarrow_wrap_resizable_buffer\", (void (**)(void))&__pyx_api_f_7pyarrow_3lib_pyarrow_wrap_resizable_buffer, \"PyObject *(std::shared_ptr< arrow::ResizableBuffer>  const &)\") < 0) goto bad;\n   if (__Pyx_ImportFunction(module, \"pyarrow_wrap_schema\", (void (**)(void))&__pyx_api_f_7pyarrow_3lib_pyarrow_wrap_schema, \"PyObject *(std::shared_ptr< arrow::Schema>  const &)\") < 0) goto bad;\n-  if (__Pyx_ImportFunction(module, \"pyarrow_wrap_array\", (void (**)(void))&__pyx_api_f_7pyarrow_3lib_pyarrow_wrap_array, \"PyObject *(std::shared_ptr< arrow::Array>  const &)\") < 0) goto bad;\n-  if (__Pyx_ImportFunction(module, \"pyarrow_wrap_tensor\", (void (**)(void))&__pyx_api_f_7pyarrow_3lib_pyarrow_wrap_tensor, \"PyObject *(std::shared_ptr< arrow::Tensor>  const &)\") < 0) goto bad;\n-  if (__Pyx_ImportFunction(module, \"pyarrow_wrap_column\", (void (**)(void))&__pyx_api_f_7pyarrow_3lib_pyarrow_wrap_column, \"PyObject *(std::shared_ptr< arrow::Column>  const &)\") < 0) goto bad;\n   if (__Pyx_ImportFunction(module, \"pyarrow_wrap_table\", (void (**)(void))&__pyx_api_f_7pyarrow_3lib_pyarrow_wrap_table, \"PyObject *(std::shared_ptr< arrow::Table>  const &)\") < 0) goto bad;\n-  if (__Pyx_ImportFunction(module, \"pyarrow_wrap_batch\", (void (**)(void))&__pyx_api_f_7pyarrow_3lib_pyarrow_wrap_batch, \"PyObject *(std::shared_ptr< arrow::RecordBatch>  const &)\") < 0) goto bad;\n-  if (__Pyx_ImportFunction(module, \"pyarrow_is_buffer\", (void (**)(void))&__pyx_api_f_7pyarrow_3lib_pyarrow_is_buffer, \"int (PyObject *)\") < 0) goto bad;\n+  if (__Pyx_ImportFunction(module, \"pyarrow_wrap_tensor\", (void (**)(void))&__pyx_api_f_7pyarrow_3lib_pyarrow_wrap_tensor, \"PyObject *(std::shared_ptr< arrow::Tensor>  const &)\") < 0) goto bad;\n+  if (__Pyx_ImportFunction(module, \"pyarrow_unwrap_array\", (void (**)(void))&__pyx_api_f_7pyarrow_3lib_pyarrow_unwrap_array, \"std::shared_ptr< arrow::Array>  (PyObject *)\") < 0) goto bad;\n+  if (__Pyx_ImportFunction(module, \"pyarrow_unwrap_batch\", (void (**)(void))&__pyx_api_f_7pyarrow_3lib_pyarrow_unwrap_batch, \"std::shared_ptr< arrow::RecordBatch>  (PyObject *)\") < 0) goto bad;\n   if (__Pyx_ImportFunction(module, \"pyarrow_unwrap_buffer\", (void (**)(void))&__pyx_api_f_7pyarrow_3lib_pyarrow_unwrap_buffer, \"std::shared_ptr< arrow::Buffer>  (PyObject *)\") < 0) goto bad;\n-  if (__Pyx_ImportFunction(module, \"pyarrow_is_data_type\", (void (**)(void))&__pyx_api_f_7pyarrow_3lib_pyarrow_is_data_type, \"int (PyObject *)\") < 0) goto bad;\n+  if (__Pyx_ImportFunction(module, \"pyarrow_unwrap_column\", (void (**)(void))&__pyx_api_f_7pyarrow_3lib_pyarrow_unwrap_column, \"std::shared_ptr< arrow::Column>  (PyObject *)\") < 0) goto bad;\n   if (__Pyx_ImportFunction(module, \"pyarrow_unwrap_data_type\", (void (**)(void))&__pyx_api_f_7pyarrow_3lib_pyarrow_unwrap_data_type, \"std::shared_ptr< arrow::DataType>  (PyObject *)\") < 0) goto bad;\n-  if (__Pyx_ImportFunction(module, \"pyarrow_is_field\", (void (**)(void))&__pyx_api_f_7pyarrow_3lib_pyarrow_is_field, \"int (PyObject *)\") < 0) goto bad;\n   if (__Pyx_ImportFunction(module, \"pyarrow_unwrap_field\", (void (**)(void))&__pyx_api_f_7pyarrow_3lib_pyarrow_unwrap_field, \"std::shared_ptr< arrow::Field>  (PyObject *)\") < 0) goto bad;\n-  if (__Pyx_ImportFunction(module, \"pyarrow_is_schema\", (void (**)(void))&__pyx_api_f_7pyarrow_3lib_pyarrow_is_schema, \"int (PyObject *)\") < 0) goto bad;\n   if (__Pyx_ImportFunction(module, \"pyarrow_unwrap_schema\", (void (**)(void))&__pyx_api_f_7pyarrow_3lib_pyarrow_unwrap_schema, \"std::shared_ptr< arrow::Schema>  (PyObject *)\") < 0) goto bad;\n+  if (__Pyx_ImportFunction(module, \"pyarrow_unwrap_table\", (void (**)(void))&__pyx_api_f_7pyarrow_3lib_pyarrow_unwrap_table, \"std::shared_ptr< arrow::Table>  (PyObject *)\") < 0) goto bad;\n+  if (__Pyx_ImportFunction(module, \"pyarrow_unwrap_tensor\", (void (**)(void))&__pyx_api_f_7pyarrow_3lib_pyarrow_unwrap_tensor, \"std::shared_ptr< arrow::Tensor>  (PyObject *)\") < 0) goto bad;\n+  if (__Pyx_ImportFunction(module, \"pyarrow_is_buffer\", (void (**)(void))&__pyx_api_f_7pyarrow_3lib_pyarrow_is_buffer, \"int (PyObject *)\") < 0) goto bad;\n+  if (__Pyx_ImportFunction(module, \"pyarrow_is_data_type\", (void (**)(void))&__pyx_api_f_7pyarrow_3lib_pyarrow_is_data_type, \"int (PyObject *)\") < 0) goto bad;\n+  if (__Pyx_ImportFunction(module, \"pyarrow_is_field\", (void (**)(void))&__pyx_api_f_7pyarrow_3lib_pyarrow_is_field, \"int (PyObject *)\") < 0) goto bad;\n+  if (__Pyx_ImportFunction(module, \"pyarrow_is_schema\", (void (**)(void))&__pyx_api_f_7pyarrow_3lib_pyarrow_is_schema, \"int (PyObject *)\") < 0) goto bad;\n   if (__Pyx_ImportFunction(module, \"pyarrow_is_array\", (void (**)(void))&__pyx_api_f_7pyarrow_3lib_pyarrow_is_array, \"int (PyObject *)\") < 0) goto bad;\n-  if (__Pyx_ImportFunction(module, \"pyarrow_unwrap_array\", (void (**)(void))&__pyx_api_f_7pyarrow_3lib_pyarrow_unwrap_array, \"std::shared_ptr< arrow::Array>  (PyObject *)\") < 0) goto bad;\n+  if (__Pyx_ImportFunction(module, \"pyarrow_wrap_chunked_array\", (void (**)(void))&__pyx_api_f_7pyarrow_3lib_pyarrow_wrap_chunked_array, \"PyObject *(std::shared_ptr< arrow::ChunkedArray>  const &)\") < 0) goto bad;\n   if (__Pyx_ImportFunction(module, \"pyarrow_is_tensor\", (void (**)(void))&__pyx_api_f_7pyarrow_3lib_pyarrow_is_tensor, \"int (PyObject *)\") < 0) goto bad;\n-  if (__Pyx_ImportFunction(module, \"pyarrow_unwrap_tensor\", (void (**)(void))&__pyx_api_f_7pyarrow_3lib_pyarrow_unwrap_tensor, \"std::shared_ptr< arrow::Tensor>  (PyObject *)\") < 0) goto bad;\n   if (__Pyx_ImportFunction(module, \"pyarrow_is_column\", (void (**)(void))&__pyx_api_f_7pyarrow_3lib_pyarrow_is_column, \"int (PyObject *)\") < 0) goto bad;\n-  if (__Pyx_ImportFunction(module, \"pyarrow_unwrap_column\", (void (**)(void))&__pyx_api_f_7pyarrow_3lib_pyarrow_unwrap_column, \"std::shared_ptr< arrow::Column>  (PyObject *)\") < 0) goto bad;\n   if (__Pyx_ImportFunction(module, \"pyarrow_is_table\", (void (**)(void))&__pyx_api_f_7pyarrow_3lib_pyarrow_is_table, \"int (PyObject *)\") < 0) goto bad;\n-  if (__Pyx_ImportFunction(module, \"pyarrow_unwrap_table\", (void (**)(void))&__pyx_api_f_7pyarrow_3lib_pyarrow_unwrap_table, \"std::shared_ptr< arrow::Table>  (PyObject *)\") < 0) goto bad;\n   if (__Pyx_ImportFunction(module, \"pyarrow_is_batch\", (void (**)(void))&__pyx_api_f_7pyarrow_3lib_pyarrow_is_batch, \"int (PyObject *)\") < 0) goto bad;\n-  if (__Pyx_ImportFunction(module, \"pyarrow_unwrap_batch\", (void (**)(void))&__pyx_api_f_7pyarrow_3lib_pyarrow_unwrap_batch, \"std::shared_ptr< arrow::RecordBatch>  (PyObject *)\") < 0) goto bad;\n   Py_DECREF(module); module = 0;\n   return 0;\n   bad:\ndiff --git a/cpp/src/arrow/python/pyarrow_lib.h b/cpp/src/arrow/python/pyarrow_lib.h\nnew file mode 100644\nindex 0000000000..4a99a073b5\n--- /dev/null\n+++ b/cpp/src/arrow/python/pyarrow_lib.h\n@@ -0,0 +1,81 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+// DO NOT EDIT THIS FILE. Update from pyarrow/lib.h after pyarrow build\n+\n+/* Generated by Cython 0.29 */\n+\n+#ifndef __PYX_HAVE__pyarrow__lib\n+#define __PYX_HAVE__pyarrow__lib\n+\n+\n+#ifndef __PYX_HAVE_API__pyarrow__lib\n+\n+#ifndef __PYX_EXTERN_C\n+  #ifdef __cplusplus\n+    #define __PYX_EXTERN_C extern \"C\"\n+  #else\n+    #define __PYX_EXTERN_C extern\n+  #endif\n+#endif\n+\n+#ifndef DL_IMPORT\n+  #define DL_IMPORT(_T) _T\n+#endif\n+\n+__PYX_EXTERN_C PyObject *__pyx_f_7pyarrow_3lib_pyarrow_wrap_array(std::shared_ptr< arrow::Array>  const &);\n+__PYX_EXTERN_C PyObject *__pyx_f_7pyarrow_3lib_pyarrow_wrap_batch(std::shared_ptr< arrow::RecordBatch>  const &);\n+__PYX_EXTERN_C PyObject *__pyx_f_7pyarrow_3lib_pyarrow_wrap_buffer(std::shared_ptr< arrow::Buffer>  const &);\n+__PYX_EXTERN_C PyObject *__pyx_f_7pyarrow_3lib_pyarrow_wrap_column(std::shared_ptr< arrow::Column>  const &);\n+__PYX_EXTERN_C PyObject *__pyx_f_7pyarrow_3lib_pyarrow_wrap_data_type(std::shared_ptr< arrow::DataType>  const &);\n+__PYX_EXTERN_C PyObject *__pyx_f_7pyarrow_3lib_pyarrow_wrap_field(std::shared_ptr< arrow::Field>  const &);\n+__PYX_EXTERN_C PyObject *__pyx_f_7pyarrow_3lib_pyarrow_wrap_resizable_buffer(std::shared_ptr< arrow::ResizableBuffer>  const &);\n+__PYX_EXTERN_C PyObject *__pyx_f_7pyarrow_3lib_pyarrow_wrap_schema(std::shared_ptr< arrow::Schema>  const &);\n+__PYX_EXTERN_C PyObject *__pyx_f_7pyarrow_3lib_pyarrow_wrap_table(std::shared_ptr< arrow::Table>  const &);\n+__PYX_EXTERN_C PyObject *__pyx_f_7pyarrow_3lib_pyarrow_wrap_tensor(std::shared_ptr< arrow::Tensor>  const &);\n+__PYX_EXTERN_C std::shared_ptr< arrow::Array>  __pyx_f_7pyarrow_3lib_pyarrow_unwrap_array(PyObject *);\n+__PYX_EXTERN_C std::shared_ptr< arrow::RecordBatch>  __pyx_f_7pyarrow_3lib_pyarrow_unwrap_batch(PyObject *);\n+__PYX_EXTERN_C std::shared_ptr< arrow::Buffer>  __pyx_f_7pyarrow_3lib_pyarrow_unwrap_buffer(PyObject *);\n+__PYX_EXTERN_C std::shared_ptr< arrow::Column>  __pyx_f_7pyarrow_3lib_pyarrow_unwrap_column(PyObject *);\n+__PYX_EXTERN_C std::shared_ptr< arrow::DataType>  __pyx_f_7pyarrow_3lib_pyarrow_unwrap_data_type(PyObject *);\n+__PYX_EXTERN_C std::shared_ptr< arrow::Field>  __pyx_f_7pyarrow_3lib_pyarrow_unwrap_field(PyObject *);\n+__PYX_EXTERN_C std::shared_ptr< arrow::Schema>  __pyx_f_7pyarrow_3lib_pyarrow_unwrap_schema(PyObject *);\n+__PYX_EXTERN_C std::shared_ptr< arrow::Table>  __pyx_f_7pyarrow_3lib_pyarrow_unwrap_table(PyObject *);\n+__PYX_EXTERN_C std::shared_ptr< arrow::Tensor>  __pyx_f_7pyarrow_3lib_pyarrow_unwrap_tensor(PyObject *);\n+__PYX_EXTERN_C int pyarrow_is_buffer(PyObject *);\n+__PYX_EXTERN_C int pyarrow_is_data_type(PyObject *);\n+__PYX_EXTERN_C int pyarrow_is_field(PyObject *);\n+__PYX_EXTERN_C int pyarrow_is_schema(PyObject *);\n+__PYX_EXTERN_C int pyarrow_is_array(PyObject *);\n+__PYX_EXTERN_C PyObject *pyarrow_wrap_chunked_array(std::shared_ptr< arrow::ChunkedArray>  const &);\n+__PYX_EXTERN_C int pyarrow_is_tensor(PyObject *);\n+__PYX_EXTERN_C int pyarrow_is_column(PyObject *);\n+__PYX_EXTERN_C int pyarrow_is_table(PyObject *);\n+__PYX_EXTERN_C int pyarrow_is_batch(PyObject *);\n+\n+#endif /* !__PYX_HAVE_API__pyarrow__lib */\n+\n+/* WARNING: the interface of the module init function changed in CPython 3.5. */\n+/* It now returns a PyModuleDef instance instead of a PyModule instance. */\n+\n+#if PY_MAJOR_VERSION < 3\n+PyMODINIT_FUNC initlib(void);\n+#else\n+PyMODINIT_FUNC PyInit_lib(void);\n+#endif\n+\n+#endif /* !__PYX_HAVE__pyarrow__lib */\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-29T22:25:39.894+0000",
                    "updated": "2018-10-29T22:25:39.894+0000",
                    "started": "2018-10-29T22:25:39.893+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "160252",
                    "issueId": "13194605"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 3000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@2be1ce83[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@43600bd7[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2815a78[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@41fcd74c[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@259ffd7c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@aef7341[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2b5bafe[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@25544b53[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7f7a3698[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@e7e274d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@21b31e36[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@26bac780[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 3000,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Oct 29 22:25:27 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-10-29T22:25:27.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3636/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-10-27T13:34:12.000+0000",
        "updated": "2018-10-29T22:25:55.000+0000",
        "timeoriginalestimate": null,
        "description": "This file should be updated to one generated by Cython 0.29. Also based on a conversation with Stefan Behnel, we should be able to change the {{cdef public api}} statements in pyarrow/public-api.pxi to simply {{cdef api}}",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 3000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++/Python] Update arrow/python/pyarrow_api.h",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13194605/comment/16667844",
                    "id": "16667844",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 2854\n[https://github.com/apache/arrow/pull/2854]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-10-29T22:25:27.609+0000",
                    "updated": "2018-10-29T22:25:27.609+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|i3zpon:",
        "customfield_12314139": null
    }
}