{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13326172",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326172",
    "key": "ARROW-9922",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345977",
                "id": "12345977",
                "description": "",
                "name": "2.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-10-19"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
            "name": "jorgecarleitao",
            "key": "jorgecarleitao",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
            },
            "displayName": "Jorge Leit\u00e3o",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
            "name": "jorgecarleitao",
            "key": "jorgecarleitao",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
            },
            "displayName": "Jorge Leit\u00e3o",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
            "name": "jorgecarleitao",
            "key": "jorgecarleitao",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
            },
            "displayName": "Jorge Leit\u00e3o",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 9600,
            "total": 9600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 9600,
            "total": 9600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9922/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 16,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326172/worklog/479394",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao opened a new pull request #8118:\nURL: https://github.com/apache/arrow/pull/8118\n\n\n   (This PR removes a lot of code ^_^)\r\n   \r\n   (This PR is built on top of #8117)\r\n   \r\n   The core problem that this PR addresses is the construction of a `StructArray`, whose spec can be found [here](https://arrow.apache.org/docs/format/Columnar.html#struct-layout).\r\n   \r\n   The current API to build a `StructArray` of 4 entries of fixed type is (part of a test):\r\n   \r\n   ```rust\r\n   let string_builder = StringBuilder::new(4);\r\n   let int_builder = Int32Builder::new(4);\r\n   \r\n   let mut fields = Vec::new();\r\n   let mut field_builders = Vec::new();\r\n   fields.push(Field::new(\"f1\", DataType::Utf8, false));\r\n   field_builders.push(Box::new(string_builder) as Box<ArrayBuilder>);\r\n   fields.push(Field::new(\"f2\", DataType::Int32, false));\r\n   field_builders.push(Box::new(int_builder) as Box<ArrayBuilder>);\r\n   \r\n   let mut builder = StructBuilder::new(fields, field_builders);\r\n   assert_eq!(2, builder.num_fields());\r\n   \r\n   let string_builder = builder\r\n       .field_builder::<StringBuilder>(0)\r\n       .expect(\"builder at field 0 should be string builder\");\r\n   string_builder.append_value(\"joe\").unwrap();\r\n   string_builder.append_null().unwrap();\r\n   string_builder.append_null().unwrap();\r\n   string_builder.append_value(\"mark\").unwrap();\r\n   \r\n   let int_builder = builder\r\n       .field_builder::<Int32Builder>(1)\r\n       .expect(\"builder at field 1 should be int builder\");\r\n   int_builder.append_value(1).unwrap();\r\n   int_builder.append_value(2).unwrap();\r\n   int_builder.append_null().unwrap();\r\n   int_builder.append_value(4).unwrap();\r\n   \r\n   builder.append(true).unwrap();\r\n   builder.append(true).unwrap();\r\n   builder.append_null().unwrap();\r\n   builder.append(true).unwrap();\r\n   \r\n   let arr = builder.finish();\r\n   ```\r\n   \r\n   This PR's proposal for the same array:\r\n   \r\n   ```rust\r\n   let strings: ArrayRef = Arc::new(StringArray::from(vec![\r\n       Some(\"joe\"),\r\n       None,\r\n       None,\r\n       Some(\"mark\"),\r\n   ]));\r\n   let ints: ArrayRef = Arc::new(Int32Array::from(vec![Some(1), Some(2), None, Some(4)]));\r\n   \r\n   let arr = StructArray::try_from(vec![(\"f1\", strings.clone()), (\"f2\", ints.clone())]).unwrap();\r\n   ```\r\n   \r\n   Note that:\r\n   \r\n   * There is no `Field`, only name: the attributes (type and nullability) are obtained from the `ArrayData`'s itself, and thus there a guarantee that the field's attributes are aligned with the Data.\r\n   * The implementation is dynamically typed: the type is obtained from `Array::data_type`, instead of having to match Field's datatype to each field' builders\r\n   * `Option` is used to specify whether the quantity is null or not\r\n   \r\n   The construction uses an OR on the entry's null bitmaps to decide whether the struct null bitmap is null at a given index. I.e. the third index of the example in [the spec](https://arrow.apache.org/docs/format/Columnar.html#struct-layout) is obtained by checking if all fields are null at that index.\r\n   \r\n   There is an edge case, that this constructor is unable to build (and the user needs to use the other `From`): a struct with a `0` at position X and all field's bitmap at position X to be `1`:\r\n   \r\n   ```\r\n   # array of 1 entry:\r\n   bitmap struct = [0]\r\n   bitmap field1 = [1]\r\n   bitmap field2 = [1]\r\n   ```\r\n   \r\n   this is because, in this `TryFrom`, the bitmap of the struct is computed from a bitwise `or` of the field's entries.\r\n   \r\n   IMO this is a non-issue because a `null` in the struct already implies an `unspecified` value on every field and thus that field's value is already assumed to be undefined. However, this is important to mention as a round-trip with this case will fail: in the example above, `bitmap struct` will have a `1`.\r\n   \r\n   Finally, this has a performance improvement of 40%.\r\n   \r\n   <details>\r\n     <summary>Benchmark results</summary>\r\n   \r\n   ```\r\n   git checkout HEAD^ && cargo bench --bench array_from_vec -- struct_array_from_vec && git checkout no_builder1 && cargo bench --bench array_from_vec -- struct_array_from_vec\r\n   ```\r\n   \r\n   ```\r\n   struct_array_from_vec 128                                                                             \r\n                           time:   [8.6816 us 8.8225 us 9.0221 us]\r\n                           change: [-39.407% -38.457% -37.537%] (p = 0.00 < 0.05)\r\n                           Performance has improved.\r\n   Found 5 outliers among 100 measurements (5.00%)\r\n     2 (2.00%) high mild\r\n     3 (3.00%) high severe\r\n   \r\n   struct_array_from_vec 256                                                                             \r\n                           time:   [11.218 us 11.448 us 11.707 us]\r\n                           change: [-44.091% -42.210% -40.540%] (p = 0.00 < 0.05)\r\n                           Performance has improved.\r\n   \r\n   struct_array_from_vec 512                                                                             \r\n                           time:   [16.402 us 17.445 us 18.638 us]\r\n                           change: [-49.129% -46.775% -44.109%] (p = 0.00 < 0.05)\r\n                           Performance has improved.\r\n   Found 11 outliers among 100 measurements (11.00%)\r\n     2 (2.00%) high mild\r\n     9 (9.00%) high severe\r\n   \r\n   struct_array_from_vec 1024                                                                             \r\n                           time:   [25.527 us 26.019 us 26.648 us]\r\n                           change: [-46.410% -42.028% -37.256%] (p = 0.00 < 0.05)\r\n                           Performance has improved.\r\n   Found 10 outliers among 100 measurements (10.00%)\r\n     5 (5.00%) high mild\r\n     5 (5.00%) high severe\r\n   ```\r\n   </details>\r\n   \r\n   ## Final note:\r\n   \r\n   The general direction that I am heading with this is to minimize the usage of builders. My issue with builders is that they are statically typed and perform incremental changes, but almost all our operations are dynamically typed and in bulk: batch read, batch write, etc. As such, it is often faster (and much simpler from UX's perspective) to create a `Vec<Option<_>>` and use it to create an Arrow Array.\r\n   \r\n   FYI @nevi-me @andygrove @alamb \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-06T08:47:43.215+0000",
                    "updated": "2020-09-06T08:47:43.215+0000",
                    "started": "2020-09-06T08:47:43.215+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "479394",
                    "issueId": "13326172"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326172/worklog/479395",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #8118:\nURL: https://github.com/apache/arrow/pull/8118#issuecomment-687732718\n\n\n   https://issues.apache.org/jira/browse/ARROW-9922\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-06T09:05:38.317+0000",
                    "updated": "2020-09-06T09:05:38.317+0000",
                    "started": "2020-09-06T09:05:38.316+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "479395",
                    "issueId": "13326172"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326172/worklog/479404",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on a change in pull request #8118:\nURL: https://github.com/apache/arrow/pull/8118#discussion_r484066509\n\n\n\n##########\nFile path: rust/arrow/src/array/builder.rs\n##########\n@@ -1872,294 +1871,6 @@ impl FixedSizeBinaryBuilder {\n     }\n }\n \n\nReview comment:\n       Wouldn't it be safer to deprecate the code (not sure what That's deprecation annotation is), then remove it 2 releases from now?\r\n   \r\n   We don't yet have a Rust-specific deprecation policy, so I'm still fine if other opinions are to remove the builder immediately.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-06T12:52:26.708+0000",
                    "updated": "2020-09-06T12:52:26.708+0000",
                    "started": "2020-09-06T12:52:26.708+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "479404",
                    "issueId": "13326172"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326172/worklog/479413",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #8118:\nURL: https://github.com/apache/arrow/pull/8118#discussion_r484088318\n\n\n\n##########\nFile path: rust/arrow/src/array/builder.rs\n##########\n@@ -1872,294 +1871,6 @@ impl FixedSizeBinaryBuilder {\n     }\n }\n \n\nReview comment:\n       I did not want to add new code without removing other code, but I am fine either way.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-06T16:18:41.405+0000",
                    "updated": "2020-09-06T16:18:41.405+0000",
                    "started": "2020-09-06T16:18:41.405+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "479413",
                    "issueId": "13326172"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326172/worklog/479419",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #8118:\nURL: https://github.com/apache/arrow/pull/8118#issuecomment-687844129\n\n\n   Maybe I am misunderstanding, but I think there may be a flaw with this approach and we're not comparing apples with apples when looking at the benchmarks.\r\n   \r\n   The original code is dynamically building a struct using the builder. The new code starts with a `vec!` where everything is known at compile time. In theory, the builders should be more efficient than building a `Vec` and then converting it.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-06T17:09:06.407+0000",
                    "updated": "2020-09-06T17:09:06.407+0000",
                    "started": "2020-09-06T17:09:06.407+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "479419",
                    "issueId": "13326172"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326172/worklog/479428",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on pull request #8118:\nURL: https://github.com/apache/arrow/pull/8118#issuecomment-687891730\n\n\n   > Maybe I am misunderstanding, but I think there may be a flaw with this approach and we're not comparing apples with apples when looking at the benchmarks.\r\n   > \r\n   > The original code is dynamically building a struct using the builder. The new code starts with a `vec!` where everything is known at compile time. In theory, the builders should be more efficient than building a `Vec` and then converting it.\r\n   \r\n   I though that `criterion::black_box()` would block the compiler from optimizing the code on it, so that the benchmark would not be tainted by compiler optimizations. I use these in both the Builder and `From`.\r\n   \r\n   Regardless, the reason I used this approach was because I looked through the code on where we use Builders, and I found two main inputs:\r\n   \r\n   * a vector:\r\n       * constructed from reading batches of rows (e.g. `StringRecord` in CSV, `&[Value]` in json)\r\n       * constructed in memory from some external source (e.g. `MemoryScan`)\r\n   * an Arrow Array, in most in-memory calculations (e.g. `RecordBatch` and `ArrayRef`, in `compute` and DataFusion)\r\n   \r\n   In all cases, we use the builders to append rows row-by-row:\r\n   * see [here](https://github.com/apache/arrow/blob/master/rust/arrow/src/csv/reader.rs#L432) for CSV\r\n   * see [here](https://github.com/apache/arrow/blob/master/rust/arrow/src/json/reader.rs#L491) for JSON\r\n   * in parquet [we do not use Array builders](https://github.com/apache/arrow/blob/master/rust/parquet/src/arrow/array_reader.rs#L27)\r\n   * see [here](https://github.com/apache/arrow/blob/master/rust/arrow/src/compute/kernels/cast.rs#L207) for an example in compute\r\n   \r\n   Based on this analysis, I though that:\r\n   * this benchmark was a good representation of our use-cases\r\n   * we can use `[Try]From` to build our results instead of a builder. The `from` is essentially `builder.append_data().finish()`, with a significantly simpler API\r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-06T20:23:28.421+0000",
                    "updated": "2020-09-06T20:23:28.421+0000",
                    "started": "2020-09-06T20:23:28.421+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "479428",
                    "issueId": "13326172"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326172/worklog/479430",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao edited a comment on pull request #8118:\nURL: https://github.com/apache/arrow/pull/8118#issuecomment-687891730\n\n\n   > Maybe I am misunderstanding, but I think there may be a flaw with this approach and we're not comparing apples with apples when looking at the benchmarks.\r\n   > \r\n   > The original code is dynamically building a struct using the builder. The new code starts with a `vec!` where everything is known at compile time. In theory, the builders should be more efficient than building a `Vec` and then converting it.\r\n   \r\n   I though that `criterion::black_box()` would block the compiler from optimizing the code on it, so that the benchmark would not be tainted by compiler optimizations. I use these in both the Builder and `From`.\r\n   \r\n   Regardless, the reason I used this approach was because I looked through the code on where we use Builders, and I found two main inputs:\r\n   \r\n   * a vector:\r\n       * constructed from reading batches of rows (e.g. `StringRecord` in CSV, `&[Value]` in json)\r\n       * constructed in memory from some external source (e.g. `MemoryScan`)\r\n   * an Arrow Array, in most in-memory calculations (e.g. `RecordBatch` and `ArrayRef`, in `compute` and DataFusion)\r\n   \r\n   In all cases, we use the builders to append rows row-by-row:\r\n   * see [here](https://github.com/apache/arrow/blob/master/rust/arrow/src/csv/reader.rs#L432) for CSV\r\n   * see [here](https://github.com/apache/arrow/blob/master/rust/arrow/src/json/reader.rs#L491) for JSON\r\n   * in parquet [we do not use Array builders](https://github.com/apache/arrow/blob/master/rust/parquet/src/arrow/array_reader.rs#L27)\r\n   * see [here](https://github.com/apache/arrow/blob/master/rust/arrow/src/compute/kernels/cast.rs#L207) for an example in compute\r\n   \r\n   Based on this analysis, I though that:\r\n   * this benchmark was a good representation of our use-cases\r\n   * we can use `[Try]From` to build our results instead of a builder. The `from` is essentially `builder.append_many().finish()`, with a significantly simpler API\r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-06T20:35:32.538+0000",
                    "updated": "2020-09-06T20:35:32.538+0000",
                    "started": "2020-09-06T20:35:32.538+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "479430",
                    "issueId": "13326172"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326172/worklog/479432",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #8118:\nURL: https://github.com/apache/arrow/pull/8118#issuecomment-687895865\n\n\n   Sorry, I should have been clearer with my comments. I was referring to the code samples in the PR description. The first example is using the builders to push data into the contiguous buffers that will eventually become the arrays. The second example is building an intermediate data structure (the Vec) and then copying from the Vec into buffers. so there is 2x the memory usage and additional memory allocations and copies. Maybe I'm reading too much into these examples though.\r\n   \r\n   Aside from that, I can't see how we can remove the StructBuilder though. The builder has semantics that I don't think we can cover by creating a struct from individual ArrayRefs representing fields. For example, how would we append a null struct versus appending a struct with null fields?\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-06T20:40:18.967+0000",
                    "updated": "2020-09-06T20:40:18.967+0000",
                    "started": "2020-09-06T20:40:18.967+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "479432",
                    "issueId": "13326172"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326172/worklog/479439",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on pull request #8118:\nURL: https://github.com/apache/arrow/pull/8118#issuecomment-687907669\n\n\n   > Aside from that, I can't see how we can remove the StructBuilder though. The builder has semantics that I don't think we can cover by creating a struct from individual ArrayRefs representing fields. For example, how would we append a null struct versus appending a struct with null fields?\r\n   \r\n   I will roll back the builder and associated tests.\r\n   \r\n   Just for my understanding, since I do not know the background: is it fair to say that the primary purpose of builders is to enable users to create Arrow Arrays without having to fiddle with `Buffers`, `ArrayData`? I.e. they are like helpers.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-06T21:34:24.597+0000",
                    "updated": "2020-09-06T21:34:24.597+0000",
                    "started": "2020-09-06T21:34:24.597+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "479439",
                    "issueId": "13326172"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326172/worklog/479440",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #8118:\nURL: https://github.com/apache/arrow/pull/8118#issuecomment-687909038\n\n\n   Yes, that's correct. These are the main high-level APIs for users to create\n   Arrow structures. The convenience methods that convert from Vec are great\n   for examples and tests but I would guess that they are not widely used for\n   code that has high performance requirements.\n   \n   On Sun, Sep 6, 2020 at 3:34 PM Jorge Leitao <notifications@github.com>\n   wrote:\n   \n   > Aside from that, I can't see how we can remove the StructBuilder though.\n   > The builder has semantics that I don't think we can cover by creating a\n   > struct from individual ArrayRefs representing fields. For example, how\n   > would we append a null struct versus appending a struct with null fields?\n   >\n   > I will roll back the builder and associated tests.\n   >\n   > Just for my understanding, since I do not know the background: is it fair\n   > to say that the primary purpose of builders is to enable users to create\n   > Arrow Arrays without having to fiddle with Buffers, ArrayData? I.e. they\n   > are like helpers.\n   >\n   > \u2014\n   > You are receiving this because you were mentioned.\n   > Reply to this email directly, view it on GitHub\n   > <https://github.com/apache/arrow/pull/8118#issuecomment-687907669>, or\n   > unsubscribe\n   > <https://github.com/notifications/unsubscribe-auth/AAHEBRD56FPE45RQ4ILMOQ3SEP56DANCNFSM4Q4DPXMQ>\n   > .\n   >\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-06T21:41:10.223+0000",
                    "updated": "2020-09-06T21:41:10.223+0000",
                    "started": "2020-09-06T21:41:10.223+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "479440",
                    "issueId": "13326172"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326172/worklog/479443",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on pull request #8118:\nURL: https://github.com/apache/arrow/pull/8118#issuecomment-687912467\n\n\n   > but I would guess that they are not widely used for code that has high performance requirements.\r\n   \r\n   That is interesting. So, in terms of performance, is it fair to rank then as:\r\n   \r\n   1. Buffers / ArrayData\r\n   2. `From`\r\n   3. Builder*\r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-06T21:57:05.222+0000",
                    "updated": "2020-09-06T21:57:05.222+0000",
                    "started": "2020-09-06T21:57:05.222+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "479443",
                    "issueId": "13326172"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326172/worklog/486518",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on pull request #8118:\nURL: https://github.com/apache/arrow/pull/8118#issuecomment-695335519\n\n\n   @nevi-me and @andygrove , I reverted the change wrt to the builder, so that this is an additive PR.\r\n   \r\n   @andygrove, wrt to the dynamically building the array, note that a StructArray is almost only composed by child data: the struct itself is a null bitmap and some pointers. Therefore, the cost of building a Struct will always be driven by the allocation of those buffers.\r\n   \r\n   With that said, you are right that during the creation of the fields, the benchmark clones the arrays, while a builder will build them on the fly and thus reduce memory footprint.\r\n   \r\n   IMO that issue is separated from the creation of the struct itself (but related to the build of its childs): it is how we efficiently build non-struct arrays without first allocating vectors, that the builders aimed at solving. I am outlying some of this on #8211, which allows to build primitive Arrays from an iterator without exposing a unsafe API to users and would avoid the double allocation that you refer to.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-19T17:31:41.116+0000",
                    "updated": "2020-09-19T17:31:41.116+0000",
                    "started": "2020-09-19T17:31:41.116+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "486518",
                    "issueId": "13326172"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326172/worklog/486937",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on a change in pull request #8118:\nURL: https://github.com/apache/arrow/pull/8118#discussion_r492065611\n\n\n\n##########\nFile path: rust/arrow/src/array/array.rs\n##########\n@@ -834,7 +840,7 @@ impl From<Vec<Option<bool>>> for BooleanArray {\n     fn from(data: Vec<Option<bool>>) -> Self {\n         let data_len = data.len();\n         let num_byte = bit_util::ceil(data_len, 8);\n-        let mut null_buf = MutableBuffer::new(num_byte).with_bitset(num_byte, false);\n+        let mut null_buf = make_null_buffer(data.len());\n         let mut val_buf = MutableBuffer::new(num_byte).with_bitset(num_byte, false);\n\nReview comment:\n       Shouldn't `val_buf` also be initialized by calling `make_null_buffer`?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-21T13:57:27.433+0000",
                    "updated": "2020-09-21T13:57:27.433+0000",
                    "started": "2020-09-21T13:57:27.433+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "486937",
                    "issueId": "13326172"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326172/worklog/486940",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove closed pull request #8118:\nURL: https://github.com/apache/arrow/pull/8118\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-21T14:01:33.982+0000",
                    "updated": "2020-09-21T14:01:33.982+0000",
                    "started": "2020-09-21T14:01:33.982+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "486940",
                    "issueId": "13326172"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326172/worklog/487438",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on a change in pull request #8118:\nURL: https://github.com/apache/arrow/pull/8118#discussion_r492065611\n\n\n\n##########\nFile path: rust/arrow/src/array/array.rs\n##########\n@@ -834,7 +840,7 @@ impl From<Vec<Option<bool>>> for BooleanArray {\n     fn from(data: Vec<Option<bool>>) -> Self {\n         let data_len = data.len();\n         let num_byte = bit_util::ceil(data_len, 8);\n-        let mut null_buf = MutableBuffer::new(num_byte).with_bitset(num_byte, false);\n+        let mut null_buf = make_null_buffer(data.len());\n         let mut val_buf = MutableBuffer::new(num_byte).with_bitset(num_byte, false);\n\nReview comment:\n       Shouldn't `val_buf` also be initialized by calling `make_null_buffer`?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-22T03:01:12.205+0000",
                    "updated": "2020-09-22T03:01:12.205+0000",
                    "started": "2020-09-22T03:01:12.205+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "487438",
                    "issueId": "13326172"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326172/worklog/487902",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove closed pull request #8118:\nURL: https://github.com/apache/arrow/pull/8118\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-22T03:44:37.078+0000",
                    "updated": "2020-09-22T03:44:37.078+0000",
                    "started": "2020-09-22T03:44:37.078+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "487902",
                    "issueId": "13326172"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 9600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5805f3e6[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@25071c88[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7e4d2d33[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@63b38d2e[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@51621065[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@5b61f61e[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4cd26cf4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@337752bd[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@72579d8e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@26d244dc[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7938393e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@70d36e1e[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 9600,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Sep 21 14:01:19 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-09-21T14:01:19.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9922/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-09-06T08:13:28.000+0000",
        "updated": "2020-09-22T03:44:38.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 9600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] Add `try_from(Vec<Option<(&str, ArrayRef)>>)` to StructArray",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326172/comment/17199405",
                    "id": "17199405",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "body": "Issue resolved by pull request 8118\n[https://github.com/apache/arrow/pull/8118]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "created": "2020-09-21T14:01:19.256+0000",
                    "updated": "2020-09-21T14:01:19.256+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0id4o:",
        "customfield_12314139": null
    }
}