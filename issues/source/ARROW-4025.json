{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13204399",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204399",
    "key": "ARROW-4025",
    "fields": {
        "fixVersions": [],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/2",
            "id": "2",
            "description": "The problem described is an issue which will never be fixed.",
            "name": "Won't Fix"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12344316",
                "id": "12344316",
                "name": "0.11.1",
                "archived": false,
                "released": true,
                "releaseDate": "2018-10-23"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": null,
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
            "name": "Closed",
            "id": "6",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pcmoritz",
            "name": "pcmoritz",
            "key": "pcmoritz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Philipp Moritz",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pcmoritz",
            "name": "pcmoritz",
            "key": "pcmoritz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Philipp Moritz",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 21600,
            "total": 21600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 21600,
            "total": 21600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4025/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 36,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204399/worklog/175621",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz opened a new pull request #3177: ARROW-4025: [Python] Avoid pthread_once in ThreadPool\nURL: https://github.com/apache/arrow/pull/3177\n \n \n   This seems to fix the TensorFlow/PyTorch crash for me.\r\n   \r\n   Some disassembling brought up that pthread_once is called by the C++11 future library. Replacing it with boost seems to fix it (but unfortunately pulls in a number of other boost dependencies like atomic, chrono and date_time; I wonder if that is avoidable).\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-14T23:45:02.770+0000",
                    "updated": "2018-12-14T23:45:02.770+0000",
                    "started": "2018-12-14T23:45:02.770+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "175621",
                    "issueId": "13204399"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204399/worklog/175627",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz commented on a change in pull request #3177: ARROW-4025: [Python] Avoid pthread_once in ThreadPool\nURL: https://github.com/apache/arrow/pull/3177#discussion_r241922845\n \n \n\n ##########\n File path: cpp/src/arrow/util/thread-pool.cc\n ##########\n @@ -294,9 +294,14 @@ std::shared_ptr<ThreadPool> ThreadPool::MakeCpuThreadPool() {\n   return pool;\n }\n \n+ThreadPool* arrow_global_thread_pool = nullptr;\n \n Review comment:\n   This may not be needed any more, I'll check that.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-14T23:53:04.359+0000",
                    "updated": "2018-12-14T23:53:04.359+0000",
                    "started": "2018-12-14T23:53:04.359+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "175627",
                    "issueId": "13204399"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204399/worklog/175629",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz commented on issue #3177: ARROW-4025: [Python] Avoid pthread_once in ThreadPool\nURL: https://github.com/apache/arrow/pull/3177#issuecomment-447513277\n \n \n   To test this, the manylinux1 base image needs to be rerun (in `arrow/python/manylinux1`) with\r\n   ```\r\n   docker build -t arrow_manylinux1_x86_64_base -f Dockerfile-x86_64_base .\r\n   ```\r\n   and then wheels can be generated with\r\n   ```\r\n   docker run --shm-size=2g --rm -t -i -v $PWD:/io -v $PWD/../../:/arrow arrow_manylinux1_x86_64_base:latest /io/build_arrow.sh\r\n   ```\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-14T23:55:15.712+0000",
                    "updated": "2018-12-14T23:55:15.712+0000",
                    "started": "2018-12-14T23:55:15.711+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "175629",
                    "issueId": "13204399"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204399/worklog/175631",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #3177: ARROW-4025: [Python] Avoid pthread_once in ThreadPool\nURL: https://github.com/apache/arrow/pull/3177#issuecomment-447514734\n \n \n   Yuck. We don't want to bring in boost just to workaround Tensoflow's standard violations.\r\n   \r\n   If you think this should be solved, I encourage you to find another way.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-15T00:04:40.490+0000",
                    "updated": "2018-12-15T00:04:40.490+0000",
                    "started": "2018-12-15T00:04:40.490+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "175631",
                    "issueId": "13204399"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204399/worklog/175632",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #3177: ARROW-4025: [Python] Avoid pthread_once in ThreadPool\nURL: https://github.com/apache/arrow/pull/3177#discussion_r241924276\n \n \n\n ##########\n File path: cpp/src/arrow/util/thread-pool.cc\n ##########\n @@ -294,9 +294,14 @@ std::shared_ptr<ThreadPool> ThreadPool::MakeCpuThreadPool() {\n   return pool;\n }\n \n+ThreadPool* arrow_global_thread_pool = nullptr;\n+\n ThreadPool* GetCpuThreadPool() {\n-  static std::shared_ptr<ThreadPool> singleton = ThreadPool::MakeCpuThreadPool();\n-  return singleton.get();\n+  if (!arrow_global_thread_pool) {\n \n Review comment:\n   This is not thread-safe. There is a reason why I used a static singleton, and that reason is thread safety.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-15T00:05:30.767+0000",
                    "updated": "2018-12-15T00:05:30.767+0000",
                    "started": "2018-12-15T00:05:30.766+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "175632",
                    "issueId": "13204399"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204399/worklog/175633",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #3177: ARROW-4025: [Python] Avoid pthread_once in ThreadPool\nURL: https://github.com/apache/arrow/pull/3177#discussion_r241924359\n \n \n\n ##########\n File path: cpp/src/arrow/util/thread-pool.cc\n ##########\n @@ -294,9 +294,14 @@ std::shared_ptr<ThreadPool> ThreadPool::MakeCpuThreadPool() {\n   return pool;\n }\n \n+ThreadPool* arrow_global_thread_pool = nullptr;\n+\n ThreadPool* GetCpuThreadPool() {\n-  static std::shared_ptr<ThreadPool> singleton = ThreadPool::MakeCpuThreadPool();\n-  return singleton.get();\n+  if (!arrow_global_thread_pool) {\n+    arrow_global_thread_pool = new ThreadPool();\n \n Review comment:\n   Creates a memory leak (object is never destroyed, Valgrind will complain).\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-15T00:06:13.008+0000",
                    "updated": "2018-12-15T00:06:13.008+0000",
                    "started": "2018-12-15T00:06:13.008+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "175633",
                    "issueId": "13204399"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204399/worklog/175634",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #3177: ARROW-4025: [Python] Avoid pthread_once in ThreadPool\nURL: https://github.com/apache/arrow/pull/3177#discussion_r241924276\n \n \n\n ##########\n File path: cpp/src/arrow/util/thread-pool.cc\n ##########\n @@ -294,9 +294,14 @@ std::shared_ptr<ThreadPool> ThreadPool::MakeCpuThreadPool() {\n   return pool;\n }\n \n+ThreadPool* arrow_global_thread_pool = nullptr;\n+\n ThreadPool* GetCpuThreadPool() {\n-  static std::shared_ptr<ThreadPool> singleton = ThreadPool::MakeCpuThreadPool();\n-  return singleton.get();\n+  if (!arrow_global_thread_pool) {\n \n Review comment:\n   This is not thread-safe. There is a reason why I used a static singleton, and that reason is the thread safety of its initialization.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-15T00:06:43.417+0000",
                    "updated": "2018-12-15T00:06:43.417+0000",
                    "started": "2018-12-15T00:06:43.416+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "175634",
                    "issueId": "13204399"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204399/worklog/175637",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #3177: ARROW-4025: [Python] Avoid pthread_once in ThreadPool\nURL: https://github.com/apache/arrow/pull/3177#issuecomment-447515206\n \n \n   I'm also -0/-1 on eschewing C++11 future/thread -- that seems hardly sustainable. I think we need to engage the TF / PyTorch communities on this. It feels like they swiped the credit card, but sent the bill to our house. \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-15T00:07:47.250+0000",
                    "updated": "2018-12-15T00:07:47.250+0000",
                    "started": "2018-12-15T00:07:47.249+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "175637",
                    "issueId": "13204399"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204399/worklog/175639",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #3177: ARROW-4025: [Python] Avoid pthread_once in ThreadPool\nURL: https://github.com/apache/arrow/pull/3177#issuecomment-447515982\n \n \n   It might mean that we have to create some kind of a pip wheel to hoist a modern C++ standard library into the environment (for PyTorch / TF to depend on) so they can avoid all this static linking insanity, similar to what's being done in conda now\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-15T00:13:11.380+0000",
                    "updated": "2018-12-15T00:13:11.380+0000",
                    "started": "2018-12-15T00:13:11.379+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "175639",
                    "issueId": "13204399"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204399/worklog/175680",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz commented on issue #3177: ARROW-4025: [Python] Avoid pthread_once in ThreadPool\nURL: https://github.com/apache/arrow/pull/3177#issuecomment-447545073\n \n \n   Thanks for the feedback @wesm @pitrou. Here are my thoughts:\r\n   \r\n   This problem _really_ needs to be fixed. If we don't fix it, doing deep learning with arrow via TensorFlow or PyTorch will be severely hindered and that's a non-starter certainly for Ray but I think also for the adoption of pyarrow in general. The workarounds we had so far work in some cases, but they are sometimes failing and we obviously cannot afford that. Making TensorFlow and pytorch manylinux1 compatible won't happen in the near future, it has been discussed several times and is non-trivial because of the need for GPU support and the nvidia toolchain. Plus even if it were fixed tomorrow, older versions of TensorFlow are still in use for various reasons. So I fear this needs to be fixed on our side.\r\n   \r\n   Here are the solutions I can think of:\r\n   1) Use boost::threads. While minimally invasive from the source code perspective I agree it is not a great solution.\r\n   2) Change the API of the thread pool to get rid of futures (see below).\r\n   3) Make the ThreadPool optional/configurable and provide an alternative that plays nicely with TensorFlow. This could be configurable from the python/C++ side at runtime or via a macro at compile time in which case it would be up to the application runtime (Ray in this case) to do something reasonable.\r\n   4) See if the problem will be fixed with manylinux2010. If it uses a more modern libstdc++, the problem might be fixed there (in that case we would need to use a fork in Ray for the time being, because we need an immediate solution).\r\n   \r\n   At least now that we know that the problem comes from std::call_once and the futures, we have a way of attacking it :)\r\n   \r\n   Concerning 2) I have a sketch in this PR now. It's not ready yet and there are probably bugs at the moment but it may give you an idea on how this would look like.\r\n   \r\n   It would entail the following more limited API that however covers the use cases of the ThreadPool we have at the moment: Only functions `void()` can be submitted to the thread pool, they can communicate with the caller via closures (arguments and return values) [alternatively we limit ourselves to Status return values as it is sketched in the PR]. Instead of being able to wait for the termination of each function individually, there would be pool.Wait() which waits for all functions currently queued. This API is obviously not as nice as the current one, but we could have it as a temporary workaround until manylinux2010 is ready.\r\n   \r\n   Please let me know about your thoughts/if you have further ideas how to fix it. I'm willing to spend the time making whatever approach we decide on working, but it really needs to be fixed :)\r\n   \r\n   Best,\r\n   Philipp.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-15T07:26:45.889+0000",
                    "updated": "2018-12-15T07:26:45.889+0000",
                    "started": "2018-12-15T07:26:45.888+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "175680",
                    "issueId": "13204399"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204399/worklog/175681",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz edited a comment on issue #3177: ARROW-4025: [Python] Avoid pthread_once in ThreadPool\nURL: https://github.com/apache/arrow/pull/3177#issuecomment-447545073\n \n \n   Thanks for the feedback @wesm @pitrou. Here are my thoughts:\r\n   \r\n   This problem _really_ needs to be fixed. If we don't fix it, doing deep learning with arrow via TensorFlow or PyTorch will be severely hindered and that's a non-starter certainly for Ray but I think also for the adoption of pyarrow in general. The workarounds we had so far work in some cases, but they are sometimes failing and we obviously cannot afford that. Making TensorFlow and pytorch manylinux1 compatible won't happen in the near future, it has been discussed several times and is non-trivial because of the need for GPU support and the nvidia toolchain. Plus even if it were fixed tomorrow, older versions of TensorFlow are still in use for various reasons. So I fear this needs to be fixed on our side.\r\n   \r\n   Here are the solutions I can think of:\r\n   1) Use boost::threads. While minimally invasive from the source code perspective I agree it is not a great solution.\r\n   2) Change the API of the thread pool to get rid of futures (see below).\r\n   3) Make the ThreadPool optional/configurable and provide an alternative that plays nicely with TensorFlow. This could be configurable from the python/C++ side at runtime or via a macro at compile time in which case it would be up to the application runtime (Ray in our case) to do something reasonable.\r\n   4) See if the problem will be fixed with manylinux2010. If it uses a more modern libstdc++, the problem might be fixed there (in that case we would need to use a fork in Ray for the time being, because we need an immediate solution).\r\n   \r\n   At least now that we know that the problem comes from std::call_once and the futures, we have a way of attacking it :)\r\n   \r\n   Concerning 2) I have a sketch in this PR now. It's not ready yet and there are probably bugs at the moment but it may give you an idea on how this would look like.\r\n   \r\n   It would entail the following more limited API that however covers the use cases of the ThreadPool we have at the moment: Only functions `void()` can be submitted to the thread pool, they can communicate with the caller via closures (arguments and return values) [alternatively we limit ourselves to Status return values as it is sketched in the PR]. Instead of being able to wait for the termination of each function individually, there would be pool.Wait() which waits for all functions currently queued. This API is obviously not as nice as the current one, but we could have it as a temporary workaround until manylinux2010 is ready.\r\n   \r\n   Please let me know about your thoughts/if you have further ideas how to fix it. I'm willing to spend the time making whatever approach we decide on working, but it really needs to be fixed :)\r\n   \r\n   Best,\r\n   Philipp.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-15T07:28:42.685+0000",
                    "updated": "2018-12-15T07:28:42.685+0000",
                    "started": "2018-12-15T07:28:42.684+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "175681",
                    "issueId": "13204399"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204399/worklog/175686",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #3177: ARROW-4025: [Python] Avoid pthread_once in ThreadPool\nURL: https://github.com/apache/arrow/pull/3177#issuecomment-447558155\n \n \n   > Concerning 2) I have a sketch in this PR now. It's not ready yet and there are probably bugs at the moment but it may give you an idea on how this would look like.\r\n   \r\n   I just took a look... Do you realize the thread pool can be called from several threads? If you wait for the thread pool to be idle, you may be waiting much longer than necessary.\r\n   \r\n   > At least now that we know that the problem comes from std::call_once and the futures, we have a way of attacking it :)\r\n   \r\n   What if some other problem comes up? What if loading Gandiva (which is gonna bundle LLVM) side-to-side with Tensorflow also causes crashes?\r\n   \r\n   > See if the problem will be fixed with manylinux2010. If it uses a more modern libstdc++, the problem might be fixed there\r\n   \r\n   It may indeed. Though I'm afraid that depends on the exact libstdc++ version Tensorflow builds against?\r\n   \r\n   > This problem really needs to be fixed. If we don't fix it, doing deep learning with arrow via TensorFlow or PyTorch will be severely hindered\r\n   \r\n   I understand the sentiment, but it seems the only sane way to fix this on our side is to ask people to use conda packages, not wheels. If wheels are broken, just say it to users instead of piling up fragile workarounds in the Arrow codebase.\r\n   \r\n   Actually, I would even go as far as asking distutils-sig if the non-conformant wheels can be removed from PyPI. PyPI has no policy for this currently, but it is an obvious detriment to the whole ecosystem that people are allowed to upload rogue wheels and other packages have to deal with the fallout.\r\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-15T10:32:11.665+0000",
                    "updated": "2018-12-15T10:32:11.665+0000",
                    "started": "2018-12-15T10:32:11.664+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "175686",
                    "issueId": "13204399"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204399/worklog/175692",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #3177: ARROW-4025: [Python] Avoid pthread_once in ThreadPool\nURL: https://github.com/apache/arrow/pull/3177#issuecomment-447560447\n \n \n   By the way, it seems manylinux2010 is almost there now: https://github.com/pypa/manylinux/issues/179\r\n   \r\n   (i.e. it's in pip master, but not any pip releases yet, AFAICT)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-15T11:07:52.976+0000",
                    "updated": "2018-12-15T11:07:52.976+0000",
                    "started": "2018-12-15T11:07:52.976+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "175692",
                    "issueId": "13204399"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204399/worklog/175695",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on a change in pull request #3177: ARROW-4025: [Python] Avoid pthread_once in ThreadPool\nURL: https://github.com/apache/arrow/pull/3177#discussion_r241947376\n \n \n\n ##########\n File path: cpp/src/arrow/util/memory.h\n ##########\n @@ -33,7 +33,10 @@ uint8_t* pointer_logical_and(const uint8_t* address, uintptr_t bits) {\n \n // This function is just for avoiding MinGW-w64 32bit crash.\n // See also: https://sourceforge.net/p/mingw-w64/bugs/767/\n-void* wrap_memcpy(void* dst, const void* src, size_t n) { return memcpy(dst, src, n); }\n+Status wrap_memcpy(void* dst, const void* src, size_t n) {\n \n Review comment:\n   I wouldn't wrap this with a different return type. There's a non negligible chance that gcc can't apply the inline-memcpy with a single instruction optimization. This can severely affect performance in code that does memcpy in loops.\r\n   \r\n   I'd also add the static inline keywords.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-15T11:58:38.699+0000",
                    "updated": "2018-12-15T11:58:38.699+0000",
                    "started": "2018-12-15T11:58:38.697+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "175695",
                    "issueId": "13204399"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204399/worklog/175696",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on a change in pull request #3177: ARROW-4025: [Python] Avoid pthread_once in ThreadPool\nURL: https://github.com/apache/arrow/pull/3177#discussion_r241947389\n \n \n\n ##########\n File path: cpp/src/arrow/util/thread-pool.cc\n ##########\n @@ -145,6 +145,11 @@ Status ThreadPool::Shutdown(bool wait) {\n   return Status::OK();\n }\n \n+void ThreadPool::Wait() {\n \n Review comment:\n   The typical nomenclature for this is `Join`.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-15T11:59:23.110+0000",
                    "updated": "2018-12-15T11:59:23.110+0000",
                    "started": "2018-12-15T11:59:23.110+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "175696",
                    "issueId": "13204399"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204399/worklog/175697",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on a change in pull request #3177: ARROW-4025: [Python] Avoid pthread_once in ThreadPool\nURL: https://github.com/apache/arrow/pull/3177#discussion_r241947542\n \n \n\n ##########\n File path: cpp/src/arrow/util/thread-pool.h\n ##########\n @@ -110,30 +93,18 @@ class ARROW_EXPORT ThreadPool {\n     return SpawnReal(std::forward<Function>(func));\n   }\n \n-  // Submit a callable and arguments for execution.  Return a future that\n-  // will return the callable's result value once.\n-  // The callable's arguments are copied before execution.\n-  // Since the function is variadic and needs to return a result (the future),\n-  // an exception is raised if the task fails spawning (which currently\n-  // only occurs if the ThreadPool is shutting down).\n-  template <typename Function, typename... Args,\n-            typename Result = typename std::result_of<Function && (Args && ...)>::type>\n-  std::future<Result> Submit(Function&& func, Args&&... args) {\n-    // Trying to templatize std::packaged_task with Function doesn't seem\n-    // to work, so go through std::bind to simplify the packaged signature\n-    using PackagedTask = std::packaged_task<Result()>;\n-    auto task = PackagedTask(std::bind(std::forward<Function>(func), args...));\n-    auto fut = task.get_future();\n-\n-    Status st = SpawnReal(detail::packaged_task_wrapper<Result>(std::move(task)));\n+  // Submit a callable for execution.\n+  void Submit(std::function<Status()> func) {\n+    Status st = SpawnReal(std::move(func));\n     if (!st.ok()) {\n       // This happens when Submit() is called after Shutdown()\n       std::cerr << st.ToString() << std::endl;\n       std::abort();\n     }\n-    return fut;\n   }\n \n+  void Wait();\n \n Review comment:\n   I'd also expose the WaitFor variant with chrono (see https://en.cppreference.com/w/cpp/thread/condition_variable/wait_for).\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-15T12:06:03.698+0000",
                    "updated": "2018-12-15T12:06:03.698+0000",
                    "started": "2018-12-15T12:06:03.697+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "175697",
                    "issueId": "13204399"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204399/worklog/175698",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on a change in pull request #3177: ARROW-4025: [Python] Avoid pthread_once in ThreadPool\nURL: https://github.com/apache/arrow/pull/3177#discussion_r241947594\n \n \n\n ##########\n File path: cpp/src/plasma/client.cc\n ##########\n @@ -650,11 +650,12 @@ Status PlasmaClient::Impl::List(ObjectTable* objects) {\n   return ReadListReply(buffer.data(), buffer.size(), objects);\n }\n \n-static void ComputeBlockHash(const unsigned char* data, int64_t nbytes, uint64_t* hash) {\n+static Status ComputeBlockHash(const unsigned char* data, int64_t nbytes, uint64_t* hash) {\n \n Review comment:\n   Why?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-15T12:08:24.849+0000",
                    "updated": "2018-12-15T12:08:24.849+0000",
                    "started": "2018-12-15T12:08:24.848+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "175698",
                    "issueId": "13204399"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204399/worklog/175700",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on a change in pull request #3177: ARROW-4025: [Python] Avoid pthread_once in ThreadPool\nURL: https://github.com/apache/arrow/pull/3177#discussion_r241947950\n \n \n\n ##########\n File path: cpp/src/arrow/util/thread-pool.h\n ##########\n @@ -110,30 +93,18 @@ class ARROW_EXPORT ThreadPool {\n     return SpawnReal(std::forward<Function>(func));\n   }\n \n-  // Submit a callable and arguments for execution.  Return a future that\n-  // will return the callable's result value once.\n-  // The callable's arguments are copied before execution.\n-  // Since the function is variadic and needs to return a result (the future),\n-  // an exception is raised if the task fails spawning (which currently\n-  // only occurs if the ThreadPool is shutting down).\n-  template <typename Function, typename... Args,\n-            typename Result = typename std::result_of<Function && (Args && ...)>::type>\n-  std::future<Result> Submit(Function&& func, Args&&... args) {\n-    // Trying to templatize std::packaged_task with Function doesn't seem\n-    // to work, so go through std::bind to simplify the packaged signature\n-    using PackagedTask = std::packaged_task<Result()>;\n-    auto task = PackagedTask(std::bind(std::forward<Function>(func), args...));\n-    auto fut = task.get_future();\n-\n-    Status st = SpawnReal(detail::packaged_task_wrapper<Result>(std::move(task)));\n+  // Submit a callable for execution.\n+  void Submit(std::function<Status()> func) {\n \n Review comment:\n   I wouldn't enforce that every function must return `Status`, a thread pool shouldn't care about the logical data. The original code didn't enforce this, what's returned is the the failure of submitting.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-15T12:21:41.085+0000",
                    "updated": "2018-12-15T12:21:41.085+0000",
                    "started": "2018-12-15T12:21:41.083+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "175700",
                    "issueId": "13204399"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204399/worklog/175703",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on a change in pull request #3177: ARROW-4025: [Python] Avoid pthread_once in ThreadPool\nURL: https://github.com/apache/arrow/pull/3177#discussion_r241949418\n \n \n\n ##########\n File path: cpp/src/arrow/util/thread-pool.cc\n ##########\n @@ -294,9 +294,14 @@ std::shared_ptr<ThreadPool> ThreadPool::MakeCpuThreadPool() {\n   return pool;\n }\n \n+ThreadPool* arrow_global_thread_pool = nullptr;\n+\n ThreadPool* GetCpuThreadPool() {\n-  static std::shared_ptr<ThreadPool> singleton = ThreadPool::MakeCpuThreadPool();\n-  return singleton.get();\n+  if (!arrow_global_thread_pool) {\n \n Review comment:\n   I think we can even demote it to a unique_ptr, since the object is never re-assigned.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-15T13:16:09.719+0000",
                    "updated": "2018-12-15T13:16:09.719+0000",
                    "started": "2018-12-15T13:16:09.717+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "175703",
                    "issueId": "13204399"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204399/worklog/175704",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on a change in pull request #3177: ARROW-4025: [Python] Avoid pthread_once in ThreadPool\nURL: https://github.com/apache/arrow/pull/3177#discussion_r241949450\n \n \n\n ##########\n File path: cpp/src/arrow/util/utf8.cc\n ##########\n @@ -73,10 +73,13 @@ ARROW_EXPORT void CheckUTF8Initialized() {\n \n }  // namespace internal\n \n-static std::once_flag utf8_initialized;\n+// static std::once_flag utf8_initialized;\n \n void InitializeUTF8() {\n-  std::call_once(utf8_initialized, internal::InitializeLargeTable);\n+  // std::call_once(utf8_initialized, internal::InitializeLargeTable);\n+  // How should we do this? Maybe use\n+  // https://en.wikibooks.org/wiki/More_C%2B%2B_Idioms/Nifty_Counter\n+  internal::InitializeLargeTable();\n \n Review comment:\n   Note that you can refactor the ut8 stuff into a simple struct class that allocates the array on the heap. Then you use the same static + unique_ptr singleton technique and you'll get rid of the once_flag.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-15T13:17:56.147+0000",
                    "updated": "2018-12-15T13:17:56.147+0000",
                    "started": "2018-12-15T13:17:56.146+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "175704",
                    "issueId": "13204399"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 21600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@60be2477[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@dcb4bf4[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3bfea8b8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@6c3dd0d8[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@350ddecf[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@aa08e37[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@44d54cb3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@46ecefe1[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1d4caa55[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@13135efd[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7d4d38f8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@5c7f5357[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 21600,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Sep 18 16:02:15 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-09-18T16:02:22.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4025/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2018-12-14T03:33:59.000+0000",
        "updated": "2019-09-20T01:00:30.000+0000",
        "timeoriginalestimate": null,
        "description": "See the bug report in [https://github.com/ray-project/ray/issues/3520]\r\n\r\nI wonder if we can revisit this issue and try to get rid of the workarounds we tried to deploy in the past.\r\n\r\nSee also the discussion in [https://github.com/apache/arrow/pull/2096]",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "6h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 21600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] TensorFlow/PyTorch arrow ThreadPool workarounds not working in some settings",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204399/comment/16932593",
                    "id": "16932593",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "We've given up on this. The robust solution is to install manylinux2010 packages instead.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2019-09-18T16:02:15.559+0000",
                    "updated": "2019-09-18T16:02:15.559+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|s01ii8:",
        "customfield_12314139": null
    }
}