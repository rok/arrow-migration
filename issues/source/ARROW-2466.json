{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13153016",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13153016",
    "key": "ARROW-2466",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342562",
                "id": "12342562",
                "description": "",
                "name": "0.10.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-08-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341707",
                "id": "12341707",
                "description": "",
                "name": "0.9.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-03-19"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "aggregateprogress": {
            "progress": 1200,
            "total": 1200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 1200,
            "total": 1200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2466/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 2,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13153016/worklog/97159",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou opened a new pull request #1978: ARROW-2466: [C++] Fix \"append\" flag to FileOutputStream\nURL: https://github.com/apache/arrow/pull/1978\n \n \n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-01T17:54:50.032+0000",
                    "updated": "2018-05-01T17:54:50.032+0000",
                    "started": "2018-05-01T17:54:50.031+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "97159",
                    "issueId": "13153016"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13153016/worklog/97343",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy closed pull request #1978: ARROW-2466: [C++] Fix \"append\" flag to FileOutputStream\nURL: https://github.com/apache/arrow/pull/1978\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/io/file.cc b/cpp/src/arrow/io/file.cc\nindex e3d6f84f3..811348232 100644\n--- a/cpp/src/arrow/io/file.cc\n+++ b/cpp/src/arrow/io/file.cc\n@@ -61,14 +61,16 @@ class OSFile {\n \n   // Note: only one of the Open* methods below may be called on a given instance\n \n-  Status OpenWriteable(const std::string& path, bool append, bool write_only) {\n+  Status OpenWriteable(const std::string& path, bool truncate, bool append,\n+                       bool write_only) {\n     RETURN_NOT_OK(SetFileName(path));\n \n-    RETURN_NOT_OK(internal::FileOpenWriteable(file_name_, write_only, !append, &fd_));\n+    RETURN_NOT_OK(\n+        internal::FileOpenWriteable(file_name_, write_only, truncate, append, &fd_));\n     is_open_ = true;\n     mode_ = write_only ? FileMode::WRITE : FileMode::READWRITE;\n \n-    if (append) {\n+    if (!truncate) {\n       RETURN_NOT_OK(internal::FileGetSize(fd_, &size_));\n     } else {\n       size_ = 0;\n@@ -284,7 +286,8 @@ int ReadableFile::file_descriptor() const { return impl_->fd(); }\n class FileOutputStream::FileOutputStreamImpl : public OSFile {\n  public:\n   Status Open(const std::string& path, bool append) {\n-    return OpenWriteable(path, append, true /* write_only */);\n+    const bool truncate = !append;\n+    return OpenWriteable(path, truncate, append, true /* write_only */);\n   }\n   Status Open(int fd) { return OpenWriteable(fd); }\n };\n@@ -363,9 +366,10 @@ class MemoryMappedFile::MemoryMap : public MutableBuffer {\n       // Memory mapping has permission failures if PROT_READ not set\n       prot_flags = PROT_READ | PROT_WRITE;\n       map_mode = MAP_SHARED;\n-      constexpr bool append = true;\n+      constexpr bool append = false;\n+      constexpr bool truncate = false;\n       constexpr bool write_only = false;\n-      RETURN_NOT_OK(file_->OpenWriteable(path, append, write_only));\n+      RETURN_NOT_OK(file_->OpenWriteable(path, truncate, append, write_only));\n \n       is_mutable_ = true;\n     } else {\ndiff --git a/cpp/src/arrow/io/file.h b/cpp/src/arrow/io/file.h\nindex c2572da59..7020cab79 100644\n--- a/cpp/src/arrow/io/file.h\n+++ b/cpp/src/arrow/io/file.h\n@@ -44,7 +44,7 @@ class ARROW_EXPORT FileOutputStream : public OutputStream {\n   /// \\param[out] out a base interface OutputStream instance\n   ///\n   /// When opening a new file, any existing file with the indicated path is\n-  /// truncated to 0 bytes, deleting any existing memory\n+  /// truncated to 0 bytes, deleting any existing data\n   static Status Open(const std::string& path, std::shared_ptr<OutputStream>* out);\n \n   /// \\brief Open a local file for writing\n@@ -68,7 +68,7 @@ class ARROW_EXPORT FileOutputStream : public OutputStream {\n   /// \\param[out] file a FileOutputStream instance\n   ///\n   /// When opening a new file, any existing file with the indicated path is\n-  /// truncated to 0 bytes, deleting any existing memory\n+  /// truncated to 0 bytes, deleting any existing data\n   static Status Open(const std::string& path, std::shared_ptr<FileOutputStream>* file);\n \n   /// \\brief Open a local file for writing\ndiff --git a/cpp/src/arrow/io/io-file-test.cc b/cpp/src/arrow/io/io-file-test.cc\nindex 40e24aaa4..4d9120f93 100644\n--- a/cpp/src/arrow/io/io-file-test.cc\n+++ b/cpp/src/arrow/io/io-file-test.cc\n@@ -74,10 +74,12 @@ class TestFileOutputStream : public FileTestFixture {\n     ASSERT_OK(internal::FileNameFromString(path_, &file_name));\n     int fd_file, fd_stream;\n     ASSERT_OK(internal::FileOpenWriteable(file_name, true /* write_only */,\n-                                          false /* truncate */, &fd_file));\n+                                          false /* truncate */, false /* append */,\n+                                          &fd_file));\n     ASSERT_OK(FileOutputStream::Open(fd_file, &file_));\n     ASSERT_OK(internal::FileOpenWriteable(file_name, true /* write_only */,\n-                                          false /* truncate */, &fd_stream));\n+                                          false /* truncate */, false /* append */,\n+                                          &fd_stream));\n     ASSERT_OK(FileOutputStream::Open(fd_stream, &stream_));\n   }\n \n@@ -168,7 +170,7 @@ TEST_F(TestFileOutputStream, FromFileDescriptor) {\n   internal::PlatformFilename file_name;\n   ASSERT_OK(internal::FileNameFromString(path_, &file_name));\n   ASSERT_OK(internal::FileOpenWriteable(file_name, true /* write_only */,\n-                                        false /* truncate */, &fd));\n+                                        false /* truncate */, false /* append */, &fd));\n   ASSERT_OK(internal::FileSeek(fd, 0, SEEK_END));\n   ASSERT_OK(FileOutputStream::Open(fd, &stream_));\n \n@@ -220,6 +222,7 @@ TEST_F(TestFileOutputStream, TruncatesNewFile) {\n \n   AssertFileContents(path_, \"\");\n \n+  // Same with stream-returning API\n   ASSERT_OK(FileOutputStream::Open(path_, &stream_));\n \n   ASSERT_OK(stream_->Write(data, strlen(data)));\n@@ -231,6 +234,38 @@ TEST_F(TestFileOutputStream, TruncatesNewFile) {\n   AssertFileContents(path_, \"\");\n }\n \n+TEST_F(TestFileOutputStream, Append) {\n+  ASSERT_OK(FileOutputStream::Open(path_, &file_));\n+  {\n+    const char* data = \"test\";\n+    ASSERT_OK(file_->Write(data, strlen(data)));\n+  }\n+  ASSERT_OK(file_->Close());\n+  ASSERT_OK(FileOutputStream::Open(path_, true /* append */, &file_));\n+  {\n+    const char* data = \"data\";\n+    ASSERT_OK(file_->Write(data, strlen(data)));\n+  }\n+  ASSERT_OK(file_->Close());\n+  AssertFileContents(path_, \"testdata\");\n+\n+  // Same with stream-returning API\n+  ASSERT_OK(FileOutputStream::Open(path_, &stream_));\n+  {\n+    const char* data = \"test\";\n+    ASSERT_OK(stream_->Write(data, strlen(data)));\n+  }\n+  ASSERT_OK(stream_->Close());\n+\n+  ASSERT_OK(FileOutputStream::Open(path_, true /* append */, &stream_));\n+  {\n+    const char* data = \"data\";\n+    ASSERT_OK(stream_->Write(data, strlen(data)));\n+  }\n+  ASSERT_OK(stream_->Close());\n+  AssertFileContents(path_, \"testdata\");\n+}\n+\n // ----------------------------------------------------------------------\n // File input tests\n \ndiff --git a/cpp/src/arrow/util/io-util.cc b/cpp/src/arrow/util/io-util.cc\nindex 03edc1838..ce989f4a7 100644\n--- a/cpp/src/arrow/util/io-util.cc\n+++ b/cpp/src/arrow/util/io-util.cc\n@@ -149,7 +149,7 @@ Status FileOpenReadable(const PlatformFilename& file_name, int* fd) {\n }\n \n Status FileOpenWriteable(const PlatformFilename& file_name, bool write_only,\n-                         bool truncate, int* fd) {\n+                         bool truncate, bool append, int* fd) {\n   int ret, errno_actual;\n \n #if defined(_MSC_VER)\n@@ -162,6 +162,9 @@ Status FileOpenWriteable(const PlatformFilename& file_name, bool write_only,\n   if (truncate) {\n     oflag |= _O_TRUNC;\n   }\n+  if (append) {\n+    oflag |= _O_APPEND;\n+  }\n \n   if (write_only) {\n     oflag |= _O_WRONLY;\n@@ -178,6 +181,9 @@ Status FileOpenWriteable(const PlatformFilename& file_name, bool write_only,\n   if (truncate) {\n     oflag |= O_TRUNC;\n   }\n+  if (append) {\n+    oflag |= O_APPEND;\n+  }\n \n   if (write_only) {\n     oflag |= O_WRONLY;\ndiff --git a/cpp/src/arrow/util/io-util.h b/cpp/src/arrow/util/io-util.h\nindex e857490c9..a0c66e94d 100644\n--- a/cpp/src/arrow/util/io-util.h\n+++ b/cpp/src/arrow/util/io-util.h\n@@ -146,7 +146,7 @@ Status FileNameFromString(const std::string& file_name, PlatformFilename* out);\n \n Status FileOpenReadable(const PlatformFilename& file_name, int* fd);\n Status FileOpenWriteable(const PlatformFilename& file_name, bool write_only,\n-                         bool truncate, int* fd);\n+                         bool truncate, bool append, int* fd);\n \n Status FileRead(int fd, uint8_t* buffer, const int64_t nbytes, int64_t* bytes_read);\n Status FileReadAt(int fd, uint8_t* buffer, int64_t position, int64_t nbytes,\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-02T05:02:43.310+0000",
                    "updated": "2018-05-02T05:02:43.310+0000",
                    "started": "2018-05-02T05:02:43.309+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "97343",
                    "issueId": "13153016"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 1200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5a8fe67a[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@fe8d5f1[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7434cddf[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@3d3ac9f5[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@e29698[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@3b19bb4f[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6911c3c6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@20fca70[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@164ddaff[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@60f8c8ba[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7902890[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7b302e58[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 1200,
        "customfield_12312520": null,
        "customfield_12312521": "Wed May 02 05:02:41 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-05-02T05:02:41.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2466/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-04-17T13:54:45.000+0000",
        "updated": "2018-05-02T05:02:43.000+0000",
        "timeoriginalestimate": null,
        "description": "{{FileOutputStream}} has a constructor option named {{append}}, but all it does is prevent truncation of the file, i.e. it doesn't move the file pointer to the end. And given {{FileOutputStream}} doesn't have a seek method, this option is useless unless you manually seek using the file descriptor.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 1200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] misleading \"append\" flag to FileOutputStream",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13153016/comment/16460519",
                    "id": "16460519",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "body": "Issue resolved by pull request 1978\n[https://github.com/apache/arrow/pull/1978]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "created": "2018-05-02T05:02:41.922+0000",
                    "updated": "2018-05-02T05:02:41.922+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|i3sndz:",
        "customfield_12314139": null
    }
}