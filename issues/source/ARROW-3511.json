{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13191447",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191447",
    "key": "ARROW-3511",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343937",
                "id": "12343937",
                "description": "",
                "name": "0.13.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-04-01"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=praveen_krishna",
            "name": "praveen_krishna",
            "key": "praveen_krishna",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34059",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34059",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34059",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34059"
            },
            "displayName": "Praveen Krishna",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334626",
                "id": "12334626",
                "name": "C++ - Gandiva"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
            "name": "pravindra",
            "key": "pravindra",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
            },
            "displayName": "Pindikura Ravindra",
            "active": true,
            "timeZone": "Asia/Kolkata"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
            "name": "pravindra",
            "key": "pravindra",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
            },
            "displayName": "Pindikura Ravindra",
            "active": true,
            "timeZone": "Asia/Kolkata"
        },
        "aggregateprogress": {
            "progress": 40800,
            "total": 40800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 40800,
            "total": 40800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3511/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 85,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191447/worklog/156066",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Praveen2112 opened a new pull request #2789: ARROW-3511:[GANDIVA] Link filter and project operations\nURL: https://github.com/apache/arrow/pull/2789\n \n \n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-18T18:06:41.360+0000",
                    "updated": "2018-10-18T18:06:41.360+0000",
                    "started": "2018-10-18T18:06:41.359+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "156066",
                    "issueId": "13191447"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191447/worklog/156547",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on a change in pull request #2789: ARROW-3511: [GANDIVA] Link filter and project operations\nURL: https://github.com/apache/arrow/pull/2789#discussion_r226831911\n \n \n\n ##########\n File path: cpp/src/gandiva/tests/filter_project_test.cc\n ##########\n @@ -0,0 +1,96 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include <gtest/gtest.h>\n+#include \"arrow/memory_pool.h\"\n+#include \"gandiva/filter.h\"\n+#include \"gandiva/projector.h\"\n+#include \"gandiva/tests/test_util.h\"\n+#include \"gandiva/tree_expr_builder.h\"\n+\n+namespace gandiva {\n+\n+using arrow::boolean;\n+using arrow::float32;\n+using arrow::int32;\n+\n+class TestFilterProject : public ::testing::Test {\n+ public:\n+  void SetUp() { pool_ = arrow::default_memory_pool(); }\n+\n+ protected:\n+  arrow::MemoryPool* pool_;\n+};\n+\n+TEST_F(TestFilterProject, TestSimple) {\n+  // schema for input fields\n+  auto field0 = field(\"f0\", int32());\n+  auto field1 = field(\"f1\", int32());\n+  auto field2 = field(\"f2\", int32());\n+  auto schema = arrow::schema({field0, field1});\n+\n+  // Build condition f0 < f1\n+  auto node_f0 = TreeExprBuilder::MakeField(field0);\n+  auto node_f1 = TreeExprBuilder::MakeField(field1);\n+  auto less_than_function =\n+      TreeExprBuilder::MakeFunction(\"less_than\", {node_f0, node_f1}, arrow::boolean());\n+  auto condition = TreeExprBuilder::MakeCondition(less_than_function);\n+  auto sum_expr = TreeExprBuilder::MakeExpression(\"add\", {field0, field1}, field2);\n+\n+  std::shared_ptr<Filter> filter;\n+  std::shared_ptr<Projector> projector;\n+\n+  Status status = Filter::Make(schema, condition, &filter);\n+  EXPECT_TRUE(status.ok());\n+\n+  status = Projector::Make(schema, {sum_expr}, &projector);\n+  EXPECT_TRUE(status.ok());\n+\n+  // Create a row-batch with some sample data\n+  int num_records = 5;\n+  auto array0 = MakeArrowArrayInt32({1, 2, 6, 40, 3}, {true, true, true, true, true});\n+  auto array1 = MakeArrowArrayInt32({5, 9, 3, 17, 6}, {true, true, true, true, true});\n+  // expected output\n+  auto result = MakeArrowArrayInt32({6, 11, 9}, {true, true, true});\n \n Review comment:\n   can you please modify the test so that \r\n   a. the selected/matched records are not all at the beginning (eg. 0, 2, 4)\r\n   b. pass ome false validity also\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-20T16:19:20.882+0000",
                    "updated": "2018-10-20T16:19:20.882+0000",
                    "started": "2018-10-20T16:19:20.881+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "156547",
                    "issueId": "13191447"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191447/worklog/156548",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on a change in pull request #2789: ARROW-3511: [GANDIVA] Link filter and project operations\nURL: https://github.com/apache/arrow/pull/2789#discussion_r226832030\n \n \n\n ##########\n File path: cpp/src/gandiva/llvm_generator.cc\n ##########\n @@ -263,9 +375,17 @@ Status LLVMGenerator::CodeGenExprValue(DexPtr value_expr, FieldDescriptorPtr out\n   // define loop_var : start with 0, +1 after each iter\n   llvm::PHINode* loop_var = builder.CreatePHI(types_->i64_type(), 2, \"loop_var\");\n \n+  llvm::Value* position_var = loop_var;\n+  if (mode >= 0) {\n+    position_var = builder.CreateIntCast(\n+        builder.CreateLoad(builder.CreateGEP(arg_selection_vector, loop_var),\n+                           \"uncasted_position_var\"),\n+        types_->i64_type(), true, \"position_var\");\n+  }\n+\n   // The visitor can add code to both the entry/loop blocks.\n   Visitor visitor(this, *fn, loop_entry, arg_addrs, arg_local_bitmaps, arg_context_ptr,\n-                  loop_var);\n+                  position_var);\n \n Review comment:\n   From the tests, it looked like you are collapsing the output (per the selection vector). but, the loop here indicates that you aren't collapsing.\r\n   \r\n   let's discuss this in a call.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-20T16:19:20.884+0000",
                    "updated": "2018-10-20T16:19:20.884+0000",
                    "started": "2018-10-20T16:19:20.883+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "156548",
                    "issueId": "13191447"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191447/worklog/156553",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2789: ARROW-3511: [GANDIVA] Link filter and project operations\nURL: https://github.com/apache/arrow/pull/2789#discussion_r226832808\n \n \n\n ##########\n File path: cpp/src/gandiva/llvm_generator.cc\n ##########\n @@ -263,9 +375,17 @@ Status LLVMGenerator::CodeGenExprValue(DexPtr value_expr, FieldDescriptorPtr out\n   // define loop_var : start with 0, +1 after each iter\n   llvm::PHINode* loop_var = builder.CreatePHI(types_->i64_type(), 2, \"loop_var\");\n \n+  llvm::Value* position_var = loop_var;\n+  if (mode >= 0) {\n+    position_var = builder.CreateIntCast(\n+        builder.CreateLoad(builder.CreateGEP(arg_selection_vector, loop_var),\n+                           \"uncasted_position_var\"),\n+        types_->i64_type(), true, \"position_var\");\n+  }\n+\n   // The visitor can add code to both the entry/loop blocks.\n   Visitor visitor(this, *fn, loop_entry, arg_addrs, arg_local_bitmaps, arg_context_ptr,\n-                  loop_var);\n+                  position_var);\n \n Review comment:\n   Please be careful to avoid private discussions that may be of value to others in the community\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-20T16:51:35.200+0000",
                    "updated": "2018-10-20T16:51:35.200+0000",
                    "started": "2018-10-20T16:51:35.200+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "156553",
                    "issueId": "13191447"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191447/worklog/156555",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on a change in pull request #2789: ARROW-3511: [GANDIVA] Link filter and project operations\nURL: https://github.com/apache/arrow/pull/2789#discussion_r226833681\n \n \n\n ##########\n File path: cpp/src/gandiva/llvm_generator.cc\n ##########\n @@ -263,9 +375,17 @@ Status LLVMGenerator::CodeGenExprValue(DexPtr value_expr, FieldDescriptorPtr out\n   // define loop_var : start with 0, +1 after each iter\n   llvm::PHINode* loop_var = builder.CreatePHI(types_->i64_type(), 2, \"loop_var\");\n \n+  llvm::Value* position_var = loop_var;\n+  if (mode >= 0) {\n+    position_var = builder.CreateIntCast(\n+        builder.CreateLoad(builder.CreateGEP(arg_selection_vector, loop_var),\n+                           \"uncasted_position_var\"),\n+        types_->i64_type(), true, \"position_var\");\n+  }\n+\n   // The visitor can add code to both the entry/loop blocks.\n   Visitor visitor(this, *fn, loop_entry, arg_addrs, arg_local_bitmaps, arg_context_ptr,\n-                  loop_var);\n+                  position_var);\n \n Review comment:\n   ok @wesm \r\n   \r\n   My thoughts on this. There are two alternatives here \r\n   \r\n   1. Collapse the output in the project/filter based on the selection vector\r\n   - This may be non-trivial since the bitmap handling gets messy.\r\n   \r\n   2. Run the projector/filter without collapsing the output, and do another iteration over the output to collapse it.\r\n   \r\n   I think 2 will be simpler though it requires a memcpy. \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-20T17:17:26.459+0000",
                    "updated": "2018-10-20T17:17:26.459+0000",
                    "started": "2018-10-20T17:17:26.458+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "156555",
                    "issueId": "13191447"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191447/worklog/156882",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Praveen2112 commented on a change in pull request #2789: ARROW-3511: [GANDIVA] Link filter and project operations\nURL: https://github.com/apache/arrow/pull/2789#discussion_r226960599\n \n \n\n ##########\n File path: cpp/src/gandiva/llvm_generator.cc\n ##########\n @@ -263,9 +375,17 @@ Status LLVMGenerator::CodeGenExprValue(DexPtr value_expr, FieldDescriptorPtr out\n   // define loop_var : start with 0, +1 after each iter\n   llvm::PHINode* loop_var = builder.CreatePHI(types_->i64_type(), 2, \"loop_var\");\n \n+  llvm::Value* position_var = loop_var;\n+  if (mode >= 0) {\n+    position_var = builder.CreateIntCast(\n+        builder.CreateLoad(builder.CreateGEP(arg_selection_vector, loop_var),\n+                           \"uncasted_position_var\"),\n+        types_->i64_type(), true, \"position_var\");\n+  }\n+\n   // The visitor can add code to both the entry/loop blocks.\n   Visitor visitor(this, *fn, loop_entry, arg_addrs, arg_local_bitmaps, arg_context_ptr,\n-                  loop_var);\n+                  position_var);\n \n Review comment:\n   @pravindra The number of iterations in the loop is determined by the size of selection vector. Instead of passing it as a separate variable, We have passed it as the size of ArrowRecordBatch. \r\n   In case of filter_project_test.cpp we set it in the Record batch\r\n   ` arrow::RecordBatch::Make(schema, selection_vector->GetNumSlots(), {array0, array1});`\r\n   \r\n   Even in case of JNI, if we have a `SelectionVector` as an input to the project operations, we set the number of rows as the size of `SelectionVector` instead of the number of rows in `RecordBatch`\r\n   \r\n   ```\r\n     public void evaluate(ArrowRecordBatch recordBatch,\r\n                        SelectionVector selectionVector, List<ValueVector> outColumns)\r\n           throws GandivaException {\r\n       evaluate(selectionVector.getRecordCount(), recordBatch.getBuffers(),\r\n           recordBatch.getBuffersLayout(),\r\n           selectionVector.getType().getNumber(),\r\n           selectionVector.getBuffer().memoryAddress(),\r\n           selectionVector.getBuffer().capacity(),\r\n           outColumns);\r\n     }\r\n   ```\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-22T18:27:28.520+0000",
                    "updated": "2018-10-22T18:27:28.520+0000",
                    "started": "2018-10-22T18:27:28.519+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "156882",
                    "issueId": "13191447"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191447/worklog/164782",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz commented on a change in pull request #2789: ARROW-3511: [GANDIVA] Link filter and project operations\nURL: https://github.com/apache/arrow/pull/2789#discussion_r232503571\n \n \n\n ##########\n File path: cpp/src/gandiva/compiled_expr.h\n ##########\n @@ -56,8 +96,20 @@ class CompiledExpr {\n   // IR function in the generated code\n   llvm::Function* ir_function_;\n \n+  // IR function in the generated code which is for 16 bit selection vector\n+  llvm::Function* ir_function_sel_vec_16_;\n+\n+  // IR function in the generated code whoch is for 32 bit selection  vector\n \n Review comment:\n   whoch -> which\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-11T20:41:55.353+0000",
                    "updated": "2018-11-11T20:41:55.353+0000",
                    "started": "2018-11-11T20:41:55.352+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "164782",
                    "issueId": "13191447"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191447/worklog/164783",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz commented on a change in pull request #2789: ARROW-3511: [GANDIVA] Link filter and project operations\nURL: https://github.com/apache/arrow/pull/2789#discussion_r232503620\n \n \n\n ##########\n File path: cpp/src/gandiva/jni/jni_common.cc\n ##########\n @@ -650,7 +651,10 @@ Java_org_apache_arrow_gandiva_evaluator_JniWrapper_evaluateProjector(\n       break;\n     }\n \n-    status = holder->projector()->Evaluate(*in_batch, output);\n+    auto selection_vector = std::shared_ptr<arrow::Buffer>(\n \n Review comment:\n   Is it possible to use std::make_shared here?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-11T20:43:20.701+0000",
                    "updated": "2018-11-11T20:43:20.701+0000",
                    "started": "2018-11-11T20:43:20.700+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "164783",
                    "issueId": "13191447"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191447/worklog/164785",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz commented on a change in pull request #2789: ARROW-3511: [GANDIVA] Link filter and project operations\nURL: https://github.com/apache/arrow/pull/2789#discussion_r232503825\n \n \n\n ##########\n File path: cpp/src/gandiva/llvm_generator.cc\n ##########\n @@ -93,19 +127,80 @@ Status LLVMGenerator::Build(const ExpressionVector& exprs) {\n   return Status::OK();\n }\n \n+Status LLVMGenerator::BuildForAllMode(const ExpressionVector& exprs) {\n+  Status status;\n+  for (auto& expr : exprs) {\n+    auto output = annotator_.AddOutputFieldDescriptor(expr->result());\n+    status = AddForAllMode(expr, output);\n+    GANDIVA_RETURN_NOT_OK(status);\n+  }\n+  // optimise, compile and finalize the module\n+  status = engine_->FinalizeModule(optimise_ir_, dump_ir_);\n+  GANDIVA_RETURN_NOT_OK(status);\n+  // setup the jit functions for each expression.\n+  for (auto& compiled_expr : compiled_exprs_) {\n+    llvm::Function* ir_func = compiled_expr->ir_function();\n+    EvalFunc fn = reinterpret_cast<EvalFunc>(engine_->CompiledFunction(ir_func));\n+    compiled_expr->set_jit_function(fn);\n+    llvm::Function* ir_func_sel_vec_16 = compiled_expr->ir_function_sel_vec_16();\n+    EvalFunc_Sel_Vec_16 fn_sel_vec_16 = reinterpret_cast<EvalFunc_Sel_Vec_16>(\n+        engine_->CompiledFunction(ir_func_sel_vec_16));\n+    compiled_expr->set_jit_function_sel_vec_16(fn_sel_vec_16);\n+    llvm::Function* ir_func_sel_vec_32 = compiled_expr->ir_function_sel_vec_32();\n+    EvalFunc_Sel_Vec_32 fn_sel_vec_32 = reinterpret_cast<EvalFunc_Sel_Vec_32>(\n+        engine_->CompiledFunction(ir_func_sel_vec_32));\n+    compiled_expr->set_jit_function_sel_vec_32(fn_sel_vec_32);\n+  }\n+\n+  return Status::OK();\n+}\n+\n /// Execute the compiled module against the provided vectors.\n Status LLVMGenerator::Execute(const arrow::RecordBatch& record_batch,\n                               const ArrayDataVector& output_vector) {\n+  arrow::Buffer* null_buffer = NULL;\n+  int mode = -1;\n+  return Execute(record_batch, mode, *null_buffer, output_vector);\n \n Review comment:\n   Hm, can you explain this? It looks like it is dereferencing a null pointer :)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-11T20:49:15.219+0000",
                    "updated": "2018-11-11T20:49:15.219+0000",
                    "started": "2018-11-11T20:49:15.218+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "164785",
                    "issueId": "13191447"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191447/worklog/164787",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz commented on a change in pull request #2789: ARROW-3511: [GANDIVA] Link filter and project operations\nURL: https://github.com/apache/arrow/pull/2789#discussion_r232503837\n \n \n\n ##########\n File path: cpp/src/gandiva/llvm_generator.cc\n ##########\n @@ -93,19 +127,80 @@ Status LLVMGenerator::Build(const ExpressionVector& exprs) {\n   return Status::OK();\n }\n \n+Status LLVMGenerator::BuildForAllMode(const ExpressionVector& exprs) {\n+  Status status;\n+  for (auto& expr : exprs) {\n+    auto output = annotator_.AddOutputFieldDescriptor(expr->result());\n+    status = AddForAllMode(expr, output);\n+    GANDIVA_RETURN_NOT_OK(status);\n+  }\n+  // optimise, compile and finalize the module\n+  status = engine_->FinalizeModule(optimise_ir_, dump_ir_);\n+  GANDIVA_RETURN_NOT_OK(status);\n+  // setup the jit functions for each expression.\n+  for (auto& compiled_expr : compiled_exprs_) {\n+    llvm::Function* ir_func = compiled_expr->ir_function();\n+    EvalFunc fn = reinterpret_cast<EvalFunc>(engine_->CompiledFunction(ir_func));\n+    compiled_expr->set_jit_function(fn);\n+    llvm::Function* ir_func_sel_vec_16 = compiled_expr->ir_function_sel_vec_16();\n+    EvalFunc_Sel_Vec_16 fn_sel_vec_16 = reinterpret_cast<EvalFunc_Sel_Vec_16>(\n+        engine_->CompiledFunction(ir_func_sel_vec_16));\n+    compiled_expr->set_jit_function_sel_vec_16(fn_sel_vec_16);\n+    llvm::Function* ir_func_sel_vec_32 = compiled_expr->ir_function_sel_vec_32();\n+    EvalFunc_Sel_Vec_32 fn_sel_vec_32 = reinterpret_cast<EvalFunc_Sel_Vec_32>(\n+        engine_->CompiledFunction(ir_func_sel_vec_32));\n+    compiled_expr->set_jit_function_sel_vec_32(fn_sel_vec_32);\n+  }\n+\n+  return Status::OK();\n+}\n+\n /// Execute the compiled module against the provided vectors.\n Status LLVMGenerator::Execute(const arrow::RecordBatch& record_batch,\n                               const ArrayDataVector& output_vector) {\n+  arrow::Buffer* null_buffer = NULL;\n+  int mode = -1;\n+  return Execute(record_batch, mode, *null_buffer, output_vector);\n+}\n+\n+/// Execute the compiled module against the provided vectors based on the type of\n+/// selection veector.\n \n Review comment:\n   veector -> vector\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-11T20:49:39.443+0000",
                    "updated": "2018-11-11T20:49:39.443+0000",
                    "started": "2018-11-11T20:49:39.442+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "164787",
                    "issueId": "13191447"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191447/worklog/164788",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz commented on a change in pull request #2789: ARROW-3511: [GANDIVA] Link filter and project operations\nURL: https://github.com/apache/arrow/pull/2789#discussion_r232504025\n \n \n\n ##########\n File path: cpp/src/gandiva/llvm_generator.cc\n ##########\n @@ -93,19 +127,80 @@ Status LLVMGenerator::Build(const ExpressionVector& exprs) {\n   return Status::OK();\n }\n \n+Status LLVMGenerator::BuildForAllMode(const ExpressionVector& exprs) {\n+  Status status;\n+  for (auto& expr : exprs) {\n+    auto output = annotator_.AddOutputFieldDescriptor(expr->result());\n+    status = AddForAllMode(expr, output);\n+    GANDIVA_RETURN_NOT_OK(status);\n+  }\n+  // optimise, compile and finalize the module\n+  status = engine_->FinalizeModule(optimise_ir_, dump_ir_);\n+  GANDIVA_RETURN_NOT_OK(status);\n+  // setup the jit functions for each expression.\n+  for (auto& compiled_expr : compiled_exprs_) {\n+    llvm::Function* ir_func = compiled_expr->ir_function();\n+    EvalFunc fn = reinterpret_cast<EvalFunc>(engine_->CompiledFunction(ir_func));\n+    compiled_expr->set_jit_function(fn);\n+    llvm::Function* ir_func_sel_vec_16 = compiled_expr->ir_function_sel_vec_16();\n+    EvalFunc_Sel_Vec_16 fn_sel_vec_16 = reinterpret_cast<EvalFunc_Sel_Vec_16>(\n+        engine_->CompiledFunction(ir_func_sel_vec_16));\n+    compiled_expr->set_jit_function_sel_vec_16(fn_sel_vec_16);\n+    llvm::Function* ir_func_sel_vec_32 = compiled_expr->ir_function_sel_vec_32();\n+    EvalFunc_Sel_Vec_32 fn_sel_vec_32 = reinterpret_cast<EvalFunc_Sel_Vec_32>(\n+        engine_->CompiledFunction(ir_func_sel_vec_32));\n+    compiled_expr->set_jit_function_sel_vec_32(fn_sel_vec_32);\n+  }\n+\n+  return Status::OK();\n+}\n+\n /// Execute the compiled module against the provided vectors.\n Status LLVMGenerator::Execute(const arrow::RecordBatch& record_batch,\n                               const ArrayDataVector& output_vector) {\n+  arrow::Buffer* null_buffer = NULL;\n+  int mode = -1;\n+  return Execute(record_batch, mode, *null_buffer, output_vector);\n+}\n+\n+/// Execute the compiled module against the provided vectors based on the type of\n+/// selection veector.\n+Status LLVMGenerator::Execute(const arrow::RecordBatch& record_batch, const int& mode,\n \n Review comment:\n   Have you considered making mode an enum? Something like this:\r\n   \r\n   ```\r\n   enum class SelectionVectorMode : int {\r\n     NONE,\r\n     INT16,\r\n     INT32,\r\n   }\r\n   ```\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-11T20:54:05.048+0000",
                    "updated": "2018-11-11T20:54:05.048+0000",
                    "started": "2018-11-11T20:54:05.047+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "164788",
                    "issueId": "13191447"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191447/worklog/164789",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz commented on a change in pull request #2789: ARROW-3511: [GANDIVA] Link filter and project operations\nURL: https://github.com/apache/arrow/pull/2789#discussion_r232504025\n \n \n\n ##########\n File path: cpp/src/gandiva/llvm_generator.cc\n ##########\n @@ -93,19 +127,80 @@ Status LLVMGenerator::Build(const ExpressionVector& exprs) {\n   return Status::OK();\n }\n \n+Status LLVMGenerator::BuildForAllMode(const ExpressionVector& exprs) {\n+  Status status;\n+  for (auto& expr : exprs) {\n+    auto output = annotator_.AddOutputFieldDescriptor(expr->result());\n+    status = AddForAllMode(expr, output);\n+    GANDIVA_RETURN_NOT_OK(status);\n+  }\n+  // optimise, compile and finalize the module\n+  status = engine_->FinalizeModule(optimise_ir_, dump_ir_);\n+  GANDIVA_RETURN_NOT_OK(status);\n+  // setup the jit functions for each expression.\n+  for (auto& compiled_expr : compiled_exprs_) {\n+    llvm::Function* ir_func = compiled_expr->ir_function();\n+    EvalFunc fn = reinterpret_cast<EvalFunc>(engine_->CompiledFunction(ir_func));\n+    compiled_expr->set_jit_function(fn);\n+    llvm::Function* ir_func_sel_vec_16 = compiled_expr->ir_function_sel_vec_16();\n+    EvalFunc_Sel_Vec_16 fn_sel_vec_16 = reinterpret_cast<EvalFunc_Sel_Vec_16>(\n+        engine_->CompiledFunction(ir_func_sel_vec_16));\n+    compiled_expr->set_jit_function_sel_vec_16(fn_sel_vec_16);\n+    llvm::Function* ir_func_sel_vec_32 = compiled_expr->ir_function_sel_vec_32();\n+    EvalFunc_Sel_Vec_32 fn_sel_vec_32 = reinterpret_cast<EvalFunc_Sel_Vec_32>(\n+        engine_->CompiledFunction(ir_func_sel_vec_32));\n+    compiled_expr->set_jit_function_sel_vec_32(fn_sel_vec_32);\n+  }\n+\n+  return Status::OK();\n+}\n+\n /// Execute the compiled module against the provided vectors.\n Status LLVMGenerator::Execute(const arrow::RecordBatch& record_batch,\n                               const ArrayDataVector& output_vector) {\n+  arrow::Buffer* null_buffer = NULL;\n+  int mode = -1;\n+  return Execute(record_batch, mode, *null_buffer, output_vector);\n+}\n+\n+/// Execute the compiled module against the provided vectors based on the type of\n+/// selection veector.\n+Status LLVMGenerator::Execute(const arrow::RecordBatch& record_batch, const int& mode,\n \n Review comment:\n   Have you considered making mode an enum? Something like this:\r\n   \r\n   ```\r\n   enum class SelectionVectorMode : int {\r\n     NONE,\r\n     INT16,\r\n     INT32,\r\n   }\r\n   ```\r\n   \r\n   It also seems simpler to pass it by value instead of by reference (elsewhere too).\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-11T20:55:30.433+0000",
                    "updated": "2018-11-11T20:55:30.433+0000",
                    "started": "2018-11-11T20:55:30.432+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "164789",
                    "issueId": "13191447"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191447/worklog/164790",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz commented on a change in pull request #2789: ARROW-3511: [GANDIVA] Link filter and project operations\nURL: https://github.com/apache/arrow/pull/2789#discussion_r232503825\n \n \n\n ##########\n File path: cpp/src/gandiva/llvm_generator.cc\n ##########\n @@ -93,19 +127,80 @@ Status LLVMGenerator::Build(const ExpressionVector& exprs) {\n   return Status::OK();\n }\n \n+Status LLVMGenerator::BuildForAllMode(const ExpressionVector& exprs) {\n+  Status status;\n+  for (auto& expr : exprs) {\n+    auto output = annotator_.AddOutputFieldDescriptor(expr->result());\n+    status = AddForAllMode(expr, output);\n+    GANDIVA_RETURN_NOT_OK(status);\n+  }\n+  // optimise, compile and finalize the module\n+  status = engine_->FinalizeModule(optimise_ir_, dump_ir_);\n+  GANDIVA_RETURN_NOT_OK(status);\n+  // setup the jit functions for each expression.\n+  for (auto& compiled_expr : compiled_exprs_) {\n+    llvm::Function* ir_func = compiled_expr->ir_function();\n+    EvalFunc fn = reinterpret_cast<EvalFunc>(engine_->CompiledFunction(ir_func));\n+    compiled_expr->set_jit_function(fn);\n+    llvm::Function* ir_func_sel_vec_16 = compiled_expr->ir_function_sel_vec_16();\n+    EvalFunc_Sel_Vec_16 fn_sel_vec_16 = reinterpret_cast<EvalFunc_Sel_Vec_16>(\n+        engine_->CompiledFunction(ir_func_sel_vec_16));\n+    compiled_expr->set_jit_function_sel_vec_16(fn_sel_vec_16);\n+    llvm::Function* ir_func_sel_vec_32 = compiled_expr->ir_function_sel_vec_32();\n+    EvalFunc_Sel_Vec_32 fn_sel_vec_32 = reinterpret_cast<EvalFunc_Sel_Vec_32>(\n+        engine_->CompiledFunction(ir_func_sel_vec_32));\n+    compiled_expr->set_jit_function_sel_vec_32(fn_sel_vec_32);\n+  }\n+\n+  return Status::OK();\n+}\n+\n /// Execute the compiled module against the provided vectors.\n Status LLVMGenerator::Execute(const arrow::RecordBatch& record_batch,\n                               const ArrayDataVector& output_vector) {\n+  arrow::Buffer* null_buffer = NULL;\n+  int mode = -1;\n+  return Execute(record_batch, mode, *null_buffer, output_vector);\n \n Review comment:\n   Hm, can you explain this? It looks like it is dereferencing a null pointer :)\r\n   \r\n   Similar below.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-11T20:57:21.753+0000",
                    "updated": "2018-11-11T20:57:21.753+0000",
                    "started": "2018-11-11T20:57:21.753+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "164790",
                    "issueId": "13191447"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191447/worklog/164791",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz commented on issue #2789: ARROW-3511: [GANDIVA] Link filter and project operations\nURL: https://github.com/apache/arrow/pull/2789#issuecomment-437704297\n \n \n   Can we rebase this and get it merged?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-11T20:58:52.727+0000",
                    "updated": "2018-11-11T20:58:52.727+0000",
                    "started": "2018-11-11T20:58:52.726+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "164791",
                    "issueId": "13191447"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191447/worklog/164798",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on a change in pull request #2789: ARROW-3511: [GANDIVA] Link filter and project operations\nURL: https://github.com/apache/arrow/pull/2789#discussion_r232515509\n \n \n\n ##########\n File path: cpp/src/gandiva/llvm_generator.cc\n ##########\n @@ -263,9 +375,17 @@ Status LLVMGenerator::CodeGenExprValue(DexPtr value_expr, FieldDescriptorPtr out\n   // define loop_var : start with 0, +1 after each iter\n   llvm::PHINode* loop_var = builder.CreatePHI(types_->i64_type(), 2, \"loop_var\");\n \n+  llvm::Value* position_var = loop_var;\n+  if (mode >= 0) {\n+    position_var = builder.CreateIntCast(\n+        builder.CreateLoad(builder.CreateGEP(arg_selection_vector, loop_var),\n+                           \"uncasted_position_var\"),\n+        types_->i64_type(), true, \"position_var\");\n+  }\n+\n   // The visitor can add code to both the entry/loop blocks.\n   Visitor visitor(this, *fn, loop_entry, arg_addrs, arg_local_bitmaps, arg_context_ptr,\n-                  loop_var);\n+                  position_var);\n \n Review comment:\n   I went through the code again - the patch is collapsing/packing the records in the output data buffer (per the input selection vector). but, the same is not happening for the output validity buffer.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-12T01:17:06.413+0000",
                    "updated": "2018-11-12T01:17:06.413+0000",
                    "started": "2018-11-12T01:17:06.412+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "164798",
                    "issueId": "13191447"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191447/worklog/164799",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on issue #2789: ARROW-3511: [GANDIVA] Link filter and project operations\nURL: https://github.com/apache/arrow/pull/2789#issuecomment-437724618\n \n \n   > Can we rebase this and get it merged?\r\n   \r\n   @Praveen2112 - will you be able to fix the comments and rebase soon ?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-12T01:18:10.524+0000",
                    "updated": "2018-11-12T01:18:10.524+0000",
                    "started": "2018-11-12T01:18:10.523+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "164799",
                    "issueId": "13191447"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191447/worklog/164800",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Praveen2112 commented on issue #2789: ARROW-3511: [GANDIVA] Link filter and project operations\nURL: https://github.com/apache/arrow/pull/2789#issuecomment-437725020\n \n \n   @pravindra I ll fix these comments and rebase it. \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-12T01:21:24.253+0000",
                    "updated": "2018-11-12T01:21:24.253+0000",
                    "started": "2018-11-12T01:21:24.252+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "164800",
                    "issueId": "13191447"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191447/worklog/167266",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz commented on issue #2789: ARROW-3511: [GANDIVA] Link filter and project operations\nURL: https://github.com/apache/arrow/pull/2789#issuecomment-439729778\n \n \n   Any updates on this?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-18T22:02:20.336+0000",
                    "updated": "2018-11-18T22:02:20.336+0000",
                    "started": "2018-11-18T22:02:20.335+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "167266",
                    "issueId": "13191447"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191447/worklog/167274",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "suquark commented on issue #2789: ARROW-3511: [GANDIVA] Link filter and project operations\nURL: https://github.com/apache/arrow/pull/2789#issuecomment-439734684\n \n \n   @Praveen2112  Hi, for linking filter and project operations, will it change the output size (by only keeping the selected rows) or it is just used as a mask so the projection will only operate on the selected rows and the output size is the same?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-18T23:10:23.272+0000",
                    "updated": "2018-11-18T23:10:23.272+0000",
                    "started": "2018-11-18T23:10:23.271+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "167274",
                    "issueId": "13191447"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191447/worklog/167280",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Praveen2112 commented on issue #2789: ARROW-3511: [GANDIVA] Link filter and project operations\nURL: https://github.com/apache/arrow/pull/2789#issuecomment-439745225\n \n \n   @suquark It will change the output size to the size of the selection vector\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-19T01:23:05.207+0000",
                    "updated": "2018-11-19T01:23:05.207+0000",
                    "started": "2018-11-19T01:23:05.207+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "167280",
                    "issueId": "13191447"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/3",
            "id": "3",
            "description": "A task that needs to be done.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21148&avatarType=issuetype",
            "name": "Task",
            "subtask": false,
            "avatarId": 21148
        },
        "timespent": 40800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6ad55606[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@46070c25[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2f94fe6d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@518cb99e[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2c4b4b00[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@4c9d505a[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4472b832[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@7006b96b[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@663ef20[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@205a7036[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7138ef27[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@34b0dd8a[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 40800,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Mar 04 09:00:35 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-03-04T09:00:35.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3511/watchers",
            "watchCount": 5,
            "isWatching": false
        },
        "created": "2018-10-14T12:46:40.000+0000",
        "updated": "2019-03-04T09:01:15.000+0000",
        "timeoriginalestimate": null,
        "description": "The Gandiva filter module returns a selection vector representing the indices of records (in the batch) that matched the filter. We can connect this to other modules, by passing along this selection vector as an input argument to the downstream projector/filter.\r\n\r\n\u00a0",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "11h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 40800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Gandiva] support input selection vectors for both projector and filter",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191447/comment/16649632",
                    "id": "16649632",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
                        "name": "fsaintjacques",
                        "key": "fsaintjacques",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
                        },
                        "displayName": "Francois Saint-Jacques",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I'm curious to know why gandiva makes primary use of selction vector as opposed to bitmap as is used in arrow.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
                        "name": "fsaintjacques",
                        "key": "fsaintjacques",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
                        },
                        "displayName": "Francois Saint-Jacques",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-10-15T01:44:59.554+0000",
                    "updated": "2018-10-15T01:44:59.554+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191447/comment/16650280",
                    "id": "16650280",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Selection integer vectors and boolean vectors are complementary; they are frequently used in pandas, and useful since you don't have to scan the boolean vector in order to determine the size of a filtered array. Others can comment further",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-10-15T14:20:14.535+0000",
                    "updated": "2018-10-15T14:20:14.535+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191447/comment/16650341",
                    "id": "16650341",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
                        "name": "pravindra",
                        "key": "pravindra",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
                        },
                        "displayName": "Pindikura Ravindra",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "body": "I picked the idea of using selection vectors from dremio. Iterating over a selection vector should be more efficient that iterating over bits in a bitmap, especially when the selectivity is low. but, I haven't benchmarked this.\r\n\r\n\u00a0\r\n\r\n\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
                        "name": "pravindra",
                        "key": "pravindra",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
                        },
                        "displayName": "Pindikura Ravindra",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "created": "2018-10-15T15:06:52.602+0000",
                    "updated": "2018-10-15T15:06:52.602+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191447/comment/16650348",
                    "id": "16650348",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Yes, for low selectivity selections it's also a lot more memory efficient.\r\n\r\nEither way, I see this as part of the \"algebra\" of the compiler. So at some point we can probably augment the algebra and code generation with boolean selections",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-10-15T15:12:00.260+0000",
                    "updated": "2018-10-15T15:12:00.260+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191447/comment/16650392",
                    "id": "16650392",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
                        "name": "fsaintjacques",
                        "key": "fsaintjacques",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
                        },
                        "displayName": "Francois Saint-Jacques",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I understand the difference and tradeoffs, was just curious about the decision on the divergence.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
                        "name": "fsaintjacques",
                        "key": "fsaintjacques",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
                        },
                        "displayName": "Francois Saint-Jacques",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-10-15T15:50:57.658+0000",
                    "updated": "2018-10-15T15:50:57.658+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191447/comment/16783133",
                    "id": "16783133",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
                        "name": "pravindra",
                        "key": "pravindra",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
                        },
                        "displayName": "Pindikura Ravindra",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "body": "Issue resolved by pull request 2789\n[https://github.com/apache/arrow/pull/2789]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
                        "name": "pravindra",
                        "key": "pravindra",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
                        },
                        "displayName": "Pindikura Ravindra",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "created": "2019-03-04T09:00:35.249+0000",
                    "updated": "2019-03-04T09:00:35.249+0000"
                }
            ],
            "maxResults": 6,
            "total": 6,
            "startAt": 0
        },
        "customfield_12311820": "0|i3z69j:",
        "customfield_12314139": null
    }
}