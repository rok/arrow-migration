{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13189440",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189440",
    "key": "ARROW-3439",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343858",
                "id": "12343858",
                "description": "",
                "name": "0.12.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-01-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=romainfrancois",
            "name": "romainfrancois",
            "key": "romainfrancois",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=romainfrancois&avatarId=35092",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=romainfrancois&avatarId=35092",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=romainfrancois&avatarId=35092",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=romainfrancois&avatarId=35092"
            },
            "displayName": "Romain Francois",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333008",
                "id": "12333008",
                "name": "R"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 24000,
            "total": 24000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 24000,
            "total": 24000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3439/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 41,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189440/worklog/164994",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois opened a new pull request #2947: ARROW-3439: [R] R language bindings for Feather format\nURL: https://github.com/apache/arrow/pull/2947\n \n \n   ``` r\r\n   library(arrow, warn.conflicts = FALSE)\r\n   library(tibble)\r\n   \r\n   tib <- tibble(x = 1:10, y = rnorm(10), z = letters[1:10])\r\n   tib\r\n   #> # A tibble: 10 x 3\r\n   #>        x       y z    \r\n   #>    <int>   <dbl> <chr>\r\n   #>  1     1  0.315  a    \r\n   #>  2     2 -1.16   b    \r\n   #>  3     3  0.0980 c    \r\n   #>  4     4  0.836  d    \r\n   #>  5     5 -1.12   e    \r\n   #>  6     6  0.118  f    \r\n   #>  7     7  2.74   g    \r\n   #>  8     8 -0.323  h    \r\n   #>  9     9  0.291  i    \r\n   #> 10    10  1.40   j\r\n   tf <- tempfile()\r\n   write_feather(tib, tf)\r\n   \r\n   # reads back into an arrow::Table\r\n   tab1 <- read_feather(tf)\r\n   tab1\r\n   #> arrow::Table\r\n   \r\n   # convert that to tibble\r\n   as_tibble(tab1)\r\n   #> # A tibble: 10 x 3\r\n   #>        x       y z    \r\n   #>    <int>   <dbl> <chr>\r\n   #>  1     1  0.315  a    \r\n   #>  2     2 -1.16   b    \r\n   #>  3     3  0.0980 c    \r\n   #>  4     4  0.836  d    \r\n   #>  5     5 -1.12   e    \r\n   #>  6     6  0.118  f    \r\n   #>  7     7  2.74   g    \r\n   #>  8     8 -0.323  h    \r\n   #>  9     9  0.291  i    \r\n   #> 10    10  1.40   j\r\n   identical(tib, as_tibble(tab1))\r\n   #> [1] TRUE\r\n   \r\n   # read it through reticulate\r\n   library(reticulate)\r\n   pa <- import(\"pyarrow\")\r\n   \r\n   # read straight to a data frame via pyarrow.feather.read_feather\r\n   tab2 <- pa$feather$read_feather(tf)\r\n   # just so that we cna compare\r\n   attr(tab2, \"pandas.index\") <-  NULL\r\n   tab2\r\n   #>     x          y z\r\n   #> 1   1  0.3148670 a\r\n   #> 2   2 -1.1583740 b\r\n   #> 3   3  0.0980070 c\r\n   #> 4   4  0.8360379 d\r\n   #> 5   5 -1.1171395 e\r\n   #> 6   6  0.1177422 f\r\n   #> 7   7  2.7407804 g\r\n   #> 8   8 -0.3229787 h\r\n   #> 9   9  0.2910557 i\r\n   #> 10 10  1.4015148 j\r\n   \r\n   identical(tib, as_tibble(tab2))\r\n   #> [1] TRUE\r\n   ```\r\n   \r\n   <sup>Created on 2018-11-12 by the [reprex package](https://reprex.tidyverse.org) (v0.2.1.9000)</sup>\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-12T15:56:33.391+0000",
                    "updated": "2018-11-12T15:56:33.391+0000",
                    "started": "2018-11-12T15:56:33.390+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "164994",
                    "issueId": "13189440"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189440/worklog/164995",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2947: ARROW-3439: [R] R language bindings for Feather format\nURL: https://github.com/apache/arrow/pull/2947#issuecomment-437933224\n \n \n   Very nice. How's the performance compare for a ~1GB dataset with the current `feather` package?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-12T15:58:14.607+0000",
                    "updated": "2018-11-12T15:58:14.607+0000",
                    "started": "2018-11-12T15:58:14.606+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "164995",
                    "issueId": "13189440"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189440/worklog/164996",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2947: ARROW-3439: [R] R language bindings for Feather format\nURL: https://github.com/apache/arrow/pull/2947#issuecomment-437933904\n \n \n   BTW I frequently cannot read or interpret the emojis in your commit messages, would it be ok to use normal text instead? :)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-12T16:00:07.441+0000",
                    "updated": "2018-11-12T16:00:07.441+0000",
                    "started": "2018-11-12T16:00:07.441+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "164996",
                    "issueId": "13189440"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189440/worklog/165021",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on issue #2947: ARROW-3439: [R] R language bindings for Feather format\nURL: https://github.com/apache/arrow/pull/2947#issuecomment-437962242\n \n \n   No idea about the performance. Most of the work is done by the C++ library. I'll check that. \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-12T17:21:41.447+0000",
                    "updated": "2018-11-12T17:21:41.447+0000",
                    "started": "2018-11-12T17:21:41.446+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "165021",
                    "issueId": "13189440"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189440/worklog/165023",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jameslamb commented on issue #2947: ARROW-3439: [R] R language bindings for Feather format\nURL: https://github.com/apache/arrow/pull/2947#issuecomment-437963382\n \n \n   This is so exciting! \r\n   \r\n   @romainfrancois for context on @wesm 's question, see this: https://github.com/wesm/feather/pull/294\r\n   \r\n   current `feather` has a hard upper limit of 2.4GB per column\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-12T17:25:05.910+0000",
                    "updated": "2018-11-12T17:25:05.910+0000",
                    "started": "2018-11-12T17:25:05.909+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "165023",
                    "issueId": "13189440"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189440/worklog/165025",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2947: ARROW-3439: [R] R language bindings for Feather format\nURL: https://github.com/apache/arrow/pull/2947#discussion_r232746449\n \n \n\n ##########\n File path: r/R/feather.R\n ##########\n @@ -0,0 +1,155 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+#' @include R6.R\n+\n+`arrow::ipc::feather::TableWriter` <- R6Class(\"arrow::ipc::feather::TableWriter\", inherit = `arrow::Object`,\n+  public = list(\n+    SetDescription = function(description) ipc___feather___TableWriter__SetDescription(self, description),\n+    SetNumRows = function(num_rows) ipc___feather___TableWriter__SetNumRows(self, num_rows),\n+    Append = function(name, values) ipc___feather___TableWriter__Append(self, name, values),\n+    Finalize = function() ipc___feather___TableWriter__Finalize(self)\n+  )\n+)\n+\n+`arrow::ipc::feather::TableReader` <- R6Class(\"arrow::ipc::feather::TableReader\", inherit = `arrow::Object`,\n+  public = list(\n+    GetDescription = function() ipc___feather___TableReader__GetDescription(self),\n+    HasDescription = function() ipc__feather___TableReader__HasDescription(self),\n+    version = function() ipc___feather___TableReader__version(self),\n+    num_rows = function() ipc___feather___TableReader__num_rows(self),\n+    num_columns = function() ipc___feather___TableReader__num_columns(self),\n+    GetColumnName = function(i) ipc___feather___TableReader__GetColumnName(self, i),\n+    GetColumn = function(i) shared_ptr(`arrow::Column`, ipc___feather___TableReader__GetColumn(self, i)),\n+    Read = function() shared_ptr(`arrow::Table`, ipc___feather___TableReader__Read(self))\n+  )\n+)\n+\n+#' Create TableWriter that writes into a stream\n+#'\n+#' @param stream an OutputStream\n+#'\n+#' @export\n+table_writer <- function(stream) {\n+  UseMethod(\"table_writer\")\n+}\n+\n+#' @export\n+`table_writer.arrow::io::OutputStream` <- function(stream){\n+  unique_ptr(`arrow::ipc::feather::TableWriter`, ipc___feather___TableWriter__Open(stream))\n+}\n+\n+#' Write data in the feather format\n+#'\n+#' @param data frame or arrow::RecordBatch\n+#' @param stream A file path or an arrow::io::OutputStream\n+#'\n+#' @export\n+write_feather <- function(data, stream) {\n+  UseMethod(\"write_feather\", data)\n+}\n+\n+#' @export\n+write_feather.default <- function(data, stream) {\n+  stop(\"unsupported\")\n+}\n+\n+#' @export\n+write_feather.data.frame <- function(data, stream) {\n+  write_feather(record_batch(data), stream)\n+}\n+\n+#' @method write_feather arrow::RecordBatch\n+#' @export\n+`write_feather.arrow::RecordBatch` <- function(data, stream) {\n+  write_feather_RecordBatch(data, stream)\n+}\n+\n+#' @rdname write_feather\n+#' @export\n+write_feather_RecordBatch <- function(data, stream) {\n+  UseMethod(\"write_feather_RecordBatch\", stream)\n+}\n+\n+#' @export\n+#' @method write_feather_RecordBatch default\n+`write_feather_RecordBatch.default` <- function(data, stream) {\n+  stop(\"unsupported\")\n+}\n+\n+#' @export\n+#' @method write_feather_RecordBatch character\n+`write_feather_RecordBatch.character` <- function(data, stream) {\n+  `write_feather_RecordBatch.fs_path`(data, fs::path_abs(stream))\n+}\n+\n+#' @export\n+#' @method write_feather_RecordBatch fs_path\n+`write_feather_RecordBatch.fs_path` <- function(data, stream) {\n+  file_stream <- close_on_exit(file_output_stream(stream))\n+  `write_feather_RecordBatch.arrow::io::OutputStream`(data, file_stream)\n+}\n+\n+#' @export\n+#' @method write_feather_RecordBatch arrow::io::OutputStream\n+`write_feather_RecordBatch.arrow::io::OutputStream` <- function(data, stream) {\n+  ipc___TableWriter__RecordBatch__WriteFeather(table_writer(stream), data)\n+}\n+\n+#' A arrow::ipc::feather::TableReader to read from a file\n+#'\n+#' @param file A file path, arrow::io::RandomAccessFile\n+#'\n+#' @export\n+table_reader <- function(file){\n+  UseMethod(\"table_reader\")\n+}\n+\n+#' @export\n+table_reader.default <- function(file) {\n+  stop(\"unsupported\")\n+}\n+\n+#' @export\n+table_reader.character <- function(file) {\n+  table_reader(fs::path_abs(file))\n+}\n+\n+#' @export\n+table_reader.fs_path <- function(file) {\n+  table_reader(file_open(file))\n+}\n+\n+#' @export\n+`table_reader.arrow::io::RandomAccessFile` <- function(file){\n+  unique_ptr(`arrow::ipc::feather::TableReader`, ipc___feather___TableReader__Open(file))\n+}\n+\n+#' @export\n+`table_reader.arrow::ipc::feather::TableReader` <- function(file){\n+  file\n+}\n+\n+#' Read a feather file\n+#'\n+#' @param reader a arrow::ipc::feather::TableReader or whatever the [table_reader()] function can handle\n+#' @return an arrow::Table\n+#'\n+#' @export\n+read_feather <- function(reader){\n \n Review comment:\n   Need to expose memory mapping option. This is required for this Read to be zero copy\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-12T17:26:42.993+0000",
                    "updated": "2018-11-12T17:26:42.993+0000",
                    "started": "2018-11-12T17:26:42.993+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "165025",
                    "issueId": "13189440"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189440/worklog/165026",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2947: ARROW-3439: [R] R language bindings for Feather format\nURL: https://github.com/apache/arrow/pull/2947#discussion_r232746263\n \n \n\n ##########\n File path: r/R/feather.R\n ##########\n @@ -0,0 +1,155 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+#' @include R6.R\n+\n+`arrow::ipc::feather::TableWriter` <- R6Class(\"arrow::ipc::feather::TableWriter\", inherit = `arrow::Object`,\n+  public = list(\n+    SetDescription = function(description) ipc___feather___TableWriter__SetDescription(self, description),\n+    SetNumRows = function(num_rows) ipc___feather___TableWriter__SetNumRows(self, num_rows),\n+    Append = function(name, values) ipc___feather___TableWriter__Append(self, name, values),\n+    Finalize = function() ipc___feather___TableWriter__Finalize(self)\n+  )\n+)\n+\n+`arrow::ipc::feather::TableReader` <- R6Class(\"arrow::ipc::feather::TableReader\", inherit = `arrow::Object`,\n+  public = list(\n+    GetDescription = function() ipc___feather___TableReader__GetDescription(self),\n+    HasDescription = function() ipc__feather___TableReader__HasDescription(self),\n+    version = function() ipc___feather___TableReader__version(self),\n+    num_rows = function() ipc___feather___TableReader__num_rows(self),\n+    num_columns = function() ipc___feather___TableReader__num_columns(self),\n+    GetColumnName = function(i) ipc___feather___TableReader__GetColumnName(self, i),\n+    GetColumn = function(i) shared_ptr(`arrow::Column`, ipc___feather___TableReader__GetColumn(self, i)),\n+    Read = function() shared_ptr(`arrow::Table`, ipc___feather___TableReader__Read(self))\n+  )\n+)\n+\n+#' Create TableWriter that writes into a stream\n+#'\n+#' @param stream an OutputStream\n+#'\n+#' @export\n+table_writer <- function(stream) {\n+  UseMethod(\"table_writer\")\n+}\n+\n+#' @export\n+`table_writer.arrow::io::OutputStream` <- function(stream){\n+  unique_ptr(`arrow::ipc::feather::TableWriter`, ipc___feather___TableWriter__Open(stream))\n+}\n+\n+#' Write data in the feather format\n+#'\n+#' @param data frame or arrow::RecordBatch\n+#' @param stream A file path or an arrow::io::OutputStream\n+#'\n+#' @export\n+write_feather <- function(data, stream) {\n+  UseMethod(\"write_feather\", data)\n+}\n+\n+#' @export\n+write_feather.default <- function(data, stream) {\n+  stop(\"unsupported\")\n+}\n+\n+#' @export\n+write_feather.data.frame <- function(data, stream) {\n+  write_feather(record_batch(data), stream)\n+}\n+\n+#' @method write_feather arrow::RecordBatch\n+#' @export\n+`write_feather.arrow::RecordBatch` <- function(data, stream) {\n+  write_feather_RecordBatch(data, stream)\n+}\n+\n+#' @rdname write_feather\n+#' @export\n+write_feather_RecordBatch <- function(data, stream) {\n+  UseMethod(\"write_feather_RecordBatch\", stream)\n+}\n+\n+#' @export\n+#' @method write_feather_RecordBatch default\n+`write_feather_RecordBatch.default` <- function(data, stream) {\n+  stop(\"unsupported\")\n+}\n+\n+#' @export\n+#' @method write_feather_RecordBatch character\n+`write_feather_RecordBatch.character` <- function(data, stream) {\n+  `write_feather_RecordBatch.fs_path`(data, fs::path_abs(stream))\n+}\n+\n+#' @export\n+#' @method write_feather_RecordBatch fs_path\n+`write_feather_RecordBatch.fs_path` <- function(data, stream) {\n+  file_stream <- close_on_exit(file_output_stream(stream))\n+  `write_feather_RecordBatch.arrow::io::OutputStream`(data, file_stream)\n+}\n+\n+#' @export\n+#' @method write_feather_RecordBatch arrow::io::OutputStream\n+`write_feather_RecordBatch.arrow::io::OutputStream` <- function(data, stream) {\n+  ipc___TableWriter__RecordBatch__WriteFeather(table_writer(stream), data)\n+}\n+\n+#' A arrow::ipc::feather::TableReader to read from a file\n+#'\n+#' @param file A file path, arrow::io::RandomAccessFile\n+#'\n+#' @export\n+table_reader <- function(file){\n \n Review comment:\n   Is this function exposed at the top level? Should probably call \"feather_reader\"\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-12T17:26:43.022+0000",
                    "updated": "2018-11-12T17:26:43.022+0000",
                    "started": "2018-11-12T17:26:43.021+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "165026",
                    "issueId": "13189440"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189440/worklog/165027",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on a change in pull request #2947: ARROW-3439: [R] R language bindings for Feather format\nURL: https://github.com/apache/arrow/pull/2947#discussion_r232747619\n \n \n\n ##########\n File path: r/R/feather.R\n ##########\n @@ -0,0 +1,155 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+#' @include R6.R\n+\n+`arrow::ipc::feather::TableWriter` <- R6Class(\"arrow::ipc::feather::TableWriter\", inherit = `arrow::Object`,\n+  public = list(\n+    SetDescription = function(description) ipc___feather___TableWriter__SetDescription(self, description),\n+    SetNumRows = function(num_rows) ipc___feather___TableWriter__SetNumRows(self, num_rows),\n+    Append = function(name, values) ipc___feather___TableWriter__Append(self, name, values),\n+    Finalize = function() ipc___feather___TableWriter__Finalize(self)\n+  )\n+)\n+\n+`arrow::ipc::feather::TableReader` <- R6Class(\"arrow::ipc::feather::TableReader\", inherit = `arrow::Object`,\n+  public = list(\n+    GetDescription = function() ipc___feather___TableReader__GetDescription(self),\n+    HasDescription = function() ipc__feather___TableReader__HasDescription(self),\n+    version = function() ipc___feather___TableReader__version(self),\n+    num_rows = function() ipc___feather___TableReader__num_rows(self),\n+    num_columns = function() ipc___feather___TableReader__num_columns(self),\n+    GetColumnName = function(i) ipc___feather___TableReader__GetColumnName(self, i),\n+    GetColumn = function(i) shared_ptr(`arrow::Column`, ipc___feather___TableReader__GetColumn(self, i)),\n+    Read = function() shared_ptr(`arrow::Table`, ipc___feather___TableReader__Read(self))\n+  )\n+)\n+\n+#' Create TableWriter that writes into a stream\n+#'\n+#' @param stream an OutputStream\n+#'\n+#' @export\n+table_writer <- function(stream) {\n+  UseMethod(\"table_writer\")\n+}\n+\n+#' @export\n+`table_writer.arrow::io::OutputStream` <- function(stream){\n+  unique_ptr(`arrow::ipc::feather::TableWriter`, ipc___feather___TableWriter__Open(stream))\n+}\n+\n+#' Write data in the feather format\n+#'\n+#' @param data frame or arrow::RecordBatch\n+#' @param stream A file path or an arrow::io::OutputStream\n+#'\n+#' @export\n+write_feather <- function(data, stream) {\n+  UseMethod(\"write_feather\", data)\n+}\n+\n+#' @export\n+write_feather.default <- function(data, stream) {\n+  stop(\"unsupported\")\n+}\n+\n+#' @export\n+write_feather.data.frame <- function(data, stream) {\n+  write_feather(record_batch(data), stream)\n+}\n+\n+#' @method write_feather arrow::RecordBatch\n+#' @export\n+`write_feather.arrow::RecordBatch` <- function(data, stream) {\n+  write_feather_RecordBatch(data, stream)\n+}\n+\n+#' @rdname write_feather\n+#' @export\n+write_feather_RecordBatch <- function(data, stream) {\n+  UseMethod(\"write_feather_RecordBatch\", stream)\n+}\n+\n+#' @export\n+#' @method write_feather_RecordBatch default\n+`write_feather_RecordBatch.default` <- function(data, stream) {\n+  stop(\"unsupported\")\n+}\n+\n+#' @export\n+#' @method write_feather_RecordBatch character\n+`write_feather_RecordBatch.character` <- function(data, stream) {\n+  `write_feather_RecordBatch.fs_path`(data, fs::path_abs(stream))\n+}\n+\n+#' @export\n+#' @method write_feather_RecordBatch fs_path\n+`write_feather_RecordBatch.fs_path` <- function(data, stream) {\n+  file_stream <- close_on_exit(file_output_stream(stream))\n+  `write_feather_RecordBatch.arrow::io::OutputStream`(data, file_stream)\n+}\n+\n+#' @export\n+#' @method write_feather_RecordBatch arrow::io::OutputStream\n+`write_feather_RecordBatch.arrow::io::OutputStream` <- function(data, stream) {\n+  ipc___TableWriter__RecordBatch__WriteFeather(table_writer(stream), data)\n+}\n+\n+#' A arrow::ipc::feather::TableReader to read from a file\n+#'\n+#' @param file A file path, arrow::io::RandomAccessFile\n+#'\n+#' @export\n+table_reader <- function(file){\n \n Review comment:\n   good catch, yeah there's no notion of levels in R. We can't do packages in packages like modules in modules in python, best we could do would be something like `feather$` but that's weird too. \r\n   \r\n   I'll rename. \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-12T17:29:00.708+0000",
                    "updated": "2018-11-12T17:29:00.708+0000",
                    "started": "2018-11-12T17:29:00.707+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "165027",
                    "issueId": "13189440"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189440/worklog/165029",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on a change in pull request #2947: ARROW-3439: [R] R language bindings for Feather format\nURL: https://github.com/apache/arrow/pull/2947#discussion_r232748663\n \n \n\n ##########\n File path: r/R/feather.R\n ##########\n @@ -0,0 +1,155 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+#' @include R6.R\n+\n+`arrow::ipc::feather::TableWriter` <- R6Class(\"arrow::ipc::feather::TableWriter\", inherit = `arrow::Object`,\n+  public = list(\n+    SetDescription = function(description) ipc___feather___TableWriter__SetDescription(self, description),\n+    SetNumRows = function(num_rows) ipc___feather___TableWriter__SetNumRows(self, num_rows),\n+    Append = function(name, values) ipc___feather___TableWriter__Append(self, name, values),\n+    Finalize = function() ipc___feather___TableWriter__Finalize(self)\n+  )\n+)\n+\n+`arrow::ipc::feather::TableReader` <- R6Class(\"arrow::ipc::feather::TableReader\", inherit = `arrow::Object`,\n+  public = list(\n+    GetDescription = function() ipc___feather___TableReader__GetDescription(self),\n+    HasDescription = function() ipc__feather___TableReader__HasDescription(self),\n+    version = function() ipc___feather___TableReader__version(self),\n+    num_rows = function() ipc___feather___TableReader__num_rows(self),\n+    num_columns = function() ipc___feather___TableReader__num_columns(self),\n+    GetColumnName = function(i) ipc___feather___TableReader__GetColumnName(self, i),\n+    GetColumn = function(i) shared_ptr(`arrow::Column`, ipc___feather___TableReader__GetColumn(self, i)),\n+    Read = function() shared_ptr(`arrow::Table`, ipc___feather___TableReader__Read(self))\n+  )\n+)\n+\n+#' Create TableWriter that writes into a stream\n+#'\n+#' @param stream an OutputStream\n+#'\n+#' @export\n+table_writer <- function(stream) {\n+  UseMethod(\"table_writer\")\n+}\n+\n+#' @export\n+`table_writer.arrow::io::OutputStream` <- function(stream){\n+  unique_ptr(`arrow::ipc::feather::TableWriter`, ipc___feather___TableWriter__Open(stream))\n+}\n+\n+#' Write data in the feather format\n+#'\n+#' @param data frame or arrow::RecordBatch\n+#' @param stream A file path or an arrow::io::OutputStream\n+#'\n+#' @export\n+write_feather <- function(data, stream) {\n+  UseMethod(\"write_feather\", data)\n+}\n+\n+#' @export\n+write_feather.default <- function(data, stream) {\n+  stop(\"unsupported\")\n+}\n+\n+#' @export\n+write_feather.data.frame <- function(data, stream) {\n+  write_feather(record_batch(data), stream)\n+}\n+\n+#' @method write_feather arrow::RecordBatch\n+#' @export\n+`write_feather.arrow::RecordBatch` <- function(data, stream) {\n+  write_feather_RecordBatch(data, stream)\n+}\n+\n+#' @rdname write_feather\n+#' @export\n+write_feather_RecordBatch <- function(data, stream) {\n+  UseMethod(\"write_feather_RecordBatch\", stream)\n+}\n+\n+#' @export\n+#' @method write_feather_RecordBatch default\n+`write_feather_RecordBatch.default` <- function(data, stream) {\n+  stop(\"unsupported\")\n+}\n+\n+#' @export\n+#' @method write_feather_RecordBatch character\n+`write_feather_RecordBatch.character` <- function(data, stream) {\n+  `write_feather_RecordBatch.fs_path`(data, fs::path_abs(stream))\n+}\n+\n+#' @export\n+#' @method write_feather_RecordBatch fs_path\n+`write_feather_RecordBatch.fs_path` <- function(data, stream) {\n+  file_stream <- close_on_exit(file_output_stream(stream))\n+  `write_feather_RecordBatch.arrow::io::OutputStream`(data, file_stream)\n+}\n+\n+#' @export\n+#' @method write_feather_RecordBatch arrow::io::OutputStream\n+`write_feather_RecordBatch.arrow::io::OutputStream` <- function(data, stream) {\n+  ipc___TableWriter__RecordBatch__WriteFeather(table_writer(stream), data)\n+}\n+\n+#' A arrow::ipc::feather::TableReader to read from a file\n+#'\n+#' @param file A file path, arrow::io::RandomAccessFile\n+#'\n+#' @export\n+table_reader <- function(file){\n+  UseMethod(\"table_reader\")\n+}\n+\n+#' @export\n+table_reader.default <- function(file) {\n+  stop(\"unsupported\")\n+}\n+\n+#' @export\n+table_reader.character <- function(file) {\n+  table_reader(fs::path_abs(file))\n+}\n+\n+#' @export\n+table_reader.fs_path <- function(file) {\n+  table_reader(file_open(file))\n+}\n+\n+#' @export\n+`table_reader.arrow::io::RandomAccessFile` <- function(file){\n+  unique_ptr(`arrow::ipc::feather::TableReader`, ipc___feather___TableReader__Open(file))\n+}\n+\n+#' @export\n+`table_reader.arrow::ipc::feather::TableReader` <- function(file){\n+  file\n+}\n+\n+#' Read a feather file\n+#'\n+#' @param reader a arrow::ipc::feather::TableReader or whatever the [table_reader()] function can handle\n+#' @return an arrow::Table\n+#'\n+#' @export\n+read_feather <- function(reader){\n \n Review comment:\n   I see, although you can do: `read_feather(mmap_open())` : \r\n   \r\n   ``` r\r\n   \r\n   library(arrow, warn.conflicts = FALSE)\r\n   library(tibble)\r\n   \r\n   tib <- tibble(x = 1:10, y = rnorm(10), z = letters[1:10])\r\n   tib\r\n   #> # A tibble: 10 x 3\r\n   #>        x       y z    \r\n   #>    <int>   <dbl> <chr>\r\n   #>  1     1 -0.523  a    \r\n   #>  2     2 -0.209  b    \r\n   #>  3     3  0.582  c    \r\n   #>  4     4  0.0232 d    \r\n   #>  5     5  0.290  e    \r\n   #>  6     6 -1.33   f    \r\n   #>  7     7  0.974  g    \r\n   #>  8     8  0.285  h    \r\n   #>  9     9  1.06   i    \r\n   #> 10    10  0.790  j\r\n   tf <- tempfile()\r\n   write_feather(tib, tf)\r\n   \r\n   stream <- mmap_open(tf)\r\n   tab <- read_feather(stream)\r\n   ```\r\n   \r\n   <sup>Created on 2018-11-12 by the [reprex package](https://reprex.tidyverse.org) (v0.2.1.9000)</sup>\r\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-12T17:31:54.469+0000",
                    "updated": "2018-11-12T17:31:54.469+0000",
                    "started": "2018-11-12T17:31:54.468+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "165029",
                    "issueId": "13189440"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189440/worklog/165030",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on a change in pull request #2947: ARROW-3439: [R] R language bindings for Feather format\nURL: https://github.com/apache/arrow/pull/2947#discussion_r232748663\n \n \n\n ##########\n File path: r/R/feather.R\n ##########\n @@ -0,0 +1,155 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+#' @include R6.R\n+\n+`arrow::ipc::feather::TableWriter` <- R6Class(\"arrow::ipc::feather::TableWriter\", inherit = `arrow::Object`,\n+  public = list(\n+    SetDescription = function(description) ipc___feather___TableWriter__SetDescription(self, description),\n+    SetNumRows = function(num_rows) ipc___feather___TableWriter__SetNumRows(self, num_rows),\n+    Append = function(name, values) ipc___feather___TableWriter__Append(self, name, values),\n+    Finalize = function() ipc___feather___TableWriter__Finalize(self)\n+  )\n+)\n+\n+`arrow::ipc::feather::TableReader` <- R6Class(\"arrow::ipc::feather::TableReader\", inherit = `arrow::Object`,\n+  public = list(\n+    GetDescription = function() ipc___feather___TableReader__GetDescription(self),\n+    HasDescription = function() ipc__feather___TableReader__HasDescription(self),\n+    version = function() ipc___feather___TableReader__version(self),\n+    num_rows = function() ipc___feather___TableReader__num_rows(self),\n+    num_columns = function() ipc___feather___TableReader__num_columns(self),\n+    GetColumnName = function(i) ipc___feather___TableReader__GetColumnName(self, i),\n+    GetColumn = function(i) shared_ptr(`arrow::Column`, ipc___feather___TableReader__GetColumn(self, i)),\n+    Read = function() shared_ptr(`arrow::Table`, ipc___feather___TableReader__Read(self))\n+  )\n+)\n+\n+#' Create TableWriter that writes into a stream\n+#'\n+#' @param stream an OutputStream\n+#'\n+#' @export\n+table_writer <- function(stream) {\n+  UseMethod(\"table_writer\")\n+}\n+\n+#' @export\n+`table_writer.arrow::io::OutputStream` <- function(stream){\n+  unique_ptr(`arrow::ipc::feather::TableWriter`, ipc___feather___TableWriter__Open(stream))\n+}\n+\n+#' Write data in the feather format\n+#'\n+#' @param data frame or arrow::RecordBatch\n+#' @param stream A file path or an arrow::io::OutputStream\n+#'\n+#' @export\n+write_feather <- function(data, stream) {\n+  UseMethod(\"write_feather\", data)\n+}\n+\n+#' @export\n+write_feather.default <- function(data, stream) {\n+  stop(\"unsupported\")\n+}\n+\n+#' @export\n+write_feather.data.frame <- function(data, stream) {\n+  write_feather(record_batch(data), stream)\n+}\n+\n+#' @method write_feather arrow::RecordBatch\n+#' @export\n+`write_feather.arrow::RecordBatch` <- function(data, stream) {\n+  write_feather_RecordBatch(data, stream)\n+}\n+\n+#' @rdname write_feather\n+#' @export\n+write_feather_RecordBatch <- function(data, stream) {\n+  UseMethod(\"write_feather_RecordBatch\", stream)\n+}\n+\n+#' @export\n+#' @method write_feather_RecordBatch default\n+`write_feather_RecordBatch.default` <- function(data, stream) {\n+  stop(\"unsupported\")\n+}\n+\n+#' @export\n+#' @method write_feather_RecordBatch character\n+`write_feather_RecordBatch.character` <- function(data, stream) {\n+  `write_feather_RecordBatch.fs_path`(data, fs::path_abs(stream))\n+}\n+\n+#' @export\n+#' @method write_feather_RecordBatch fs_path\n+`write_feather_RecordBatch.fs_path` <- function(data, stream) {\n+  file_stream <- close_on_exit(file_output_stream(stream))\n+  `write_feather_RecordBatch.arrow::io::OutputStream`(data, file_stream)\n+}\n+\n+#' @export\n+#' @method write_feather_RecordBatch arrow::io::OutputStream\n+`write_feather_RecordBatch.arrow::io::OutputStream` <- function(data, stream) {\n+  ipc___TableWriter__RecordBatch__WriteFeather(table_writer(stream), data)\n+}\n+\n+#' A arrow::ipc::feather::TableReader to read from a file\n+#'\n+#' @param file A file path, arrow::io::RandomAccessFile\n+#'\n+#' @export\n+table_reader <- function(file){\n+  UseMethod(\"table_reader\")\n+}\n+\n+#' @export\n+table_reader.default <- function(file) {\n+  stop(\"unsupported\")\n+}\n+\n+#' @export\n+table_reader.character <- function(file) {\n+  table_reader(fs::path_abs(file))\n+}\n+\n+#' @export\n+table_reader.fs_path <- function(file) {\n+  table_reader(file_open(file))\n+}\n+\n+#' @export\n+`table_reader.arrow::io::RandomAccessFile` <- function(file){\n+  unique_ptr(`arrow::ipc::feather::TableReader`, ipc___feather___TableReader__Open(file))\n+}\n+\n+#' @export\n+`table_reader.arrow::ipc::feather::TableReader` <- function(file){\n+  file\n+}\n+\n+#' Read a feather file\n+#'\n+#' @param reader a arrow::ipc::feather::TableReader or whatever the [table_reader()] function can handle\n+#' @return an arrow::Table\n+#'\n+#' @export\n+read_feather <- function(reader){\n \n Review comment:\n   I see, although you can do: `read_feather(mmap_open())` : \r\n   \r\n   ``` r\r\n   \r\n   library(arrow, warn.conflicts = FALSE)\r\n   library(tibble)\r\n   \r\n   tib <- tibble(x = 1:10, y = rnorm(10), z = letters[1:10])\r\n   tib\r\n   #> # A tibble: 10 x 3\r\n   #>        x       y z    \r\n   #>    <int>   <dbl> <chr>\r\n   #>  1     1 -0.993  a    \r\n   #>  2     2 -0.366  b    \r\n   #>  3     3 -1.00   c    \r\n   #>  4     4 -1.35   d    \r\n   #>  5     5  1.08   e    \r\n   #>  6     6 -1.76   f    \r\n   #>  7     7  2.13   g    \r\n   #>  8     8 -1.57   h    \r\n   #>  9     9  0.0476 i    \r\n   #> 10    10  0.422  j\r\n   tf <- tempfile()\r\n   write_feather(tib, tf)\r\n   \r\n   stream <- mmap_open(tf)\r\n   tab <- read_feather(stream)\r\n   tab\r\n   #> arrow::Table\r\n   as_tibble(tab)\r\n   #> # A tibble: 10 x 3\r\n   #>        x       y z    \r\n   #>    <int>   <dbl> <chr>\r\n   #>  1     1 -0.993  a    \r\n   #>  2     2 -0.366  b    \r\n   #>  3     3 -1.00   c    \r\n   #>  4     4 -1.35   d    \r\n   #>  5     5  1.08   e    \r\n   #>  6     6 -1.76   f    \r\n   #>  7     7  2.13   g    \r\n   #>  8     8 -1.57   h    \r\n   #>  9     9  0.0476 i    \r\n   #> 10    10  0.422  j\r\n   ```\r\n   \r\n   <sup>Created on 2018-11-12 by the [reprex package](https://reprex.tidyverse.org) (v0.2.1.9000)</sup>\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-12T17:32:24.427+0000",
                    "updated": "2018-11-12T17:32:24.427+0000",
                    "started": "2018-11-12T17:32:24.420+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "165030",
                    "issueId": "13189440"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189440/worklog/165033",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2947: ARROW-3439: [R] R language bindings for Feather format\nURL: https://github.com/apache/arrow/pull/2947#discussion_r232750164\n \n \n\n ##########\n File path: r/R/feather.R\n ##########\n @@ -0,0 +1,155 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+#' @include R6.R\n+\n+`arrow::ipc::feather::TableWriter` <- R6Class(\"arrow::ipc::feather::TableWriter\", inherit = `arrow::Object`,\n+  public = list(\n+    SetDescription = function(description) ipc___feather___TableWriter__SetDescription(self, description),\n+    SetNumRows = function(num_rows) ipc___feather___TableWriter__SetNumRows(self, num_rows),\n+    Append = function(name, values) ipc___feather___TableWriter__Append(self, name, values),\n+    Finalize = function() ipc___feather___TableWriter__Finalize(self)\n+  )\n+)\n+\n+`arrow::ipc::feather::TableReader` <- R6Class(\"arrow::ipc::feather::TableReader\", inherit = `arrow::Object`,\n+  public = list(\n+    GetDescription = function() ipc___feather___TableReader__GetDescription(self),\n+    HasDescription = function() ipc__feather___TableReader__HasDescription(self),\n+    version = function() ipc___feather___TableReader__version(self),\n+    num_rows = function() ipc___feather___TableReader__num_rows(self),\n+    num_columns = function() ipc___feather___TableReader__num_columns(self),\n+    GetColumnName = function(i) ipc___feather___TableReader__GetColumnName(self, i),\n+    GetColumn = function(i) shared_ptr(`arrow::Column`, ipc___feather___TableReader__GetColumn(self, i)),\n+    Read = function() shared_ptr(`arrow::Table`, ipc___feather___TableReader__Read(self))\n+  )\n+)\n+\n+#' Create TableWriter that writes into a stream\n+#'\n+#' @param stream an OutputStream\n+#'\n+#' @export\n+table_writer <- function(stream) {\n+  UseMethod(\"table_writer\")\n+}\n+\n+#' @export\n+`table_writer.arrow::io::OutputStream` <- function(stream){\n+  unique_ptr(`arrow::ipc::feather::TableWriter`, ipc___feather___TableWriter__Open(stream))\n+}\n+\n+#' Write data in the feather format\n+#'\n+#' @param data frame or arrow::RecordBatch\n+#' @param stream A file path or an arrow::io::OutputStream\n+#'\n+#' @export\n+write_feather <- function(data, stream) {\n+  UseMethod(\"write_feather\", data)\n+}\n+\n+#' @export\n+write_feather.default <- function(data, stream) {\n+  stop(\"unsupported\")\n+}\n+\n+#' @export\n+write_feather.data.frame <- function(data, stream) {\n+  write_feather(record_batch(data), stream)\n+}\n+\n+#' @method write_feather arrow::RecordBatch\n+#' @export\n+`write_feather.arrow::RecordBatch` <- function(data, stream) {\n+  write_feather_RecordBatch(data, stream)\n+}\n+\n+#' @rdname write_feather\n+#' @export\n+write_feather_RecordBatch <- function(data, stream) {\n+  UseMethod(\"write_feather_RecordBatch\", stream)\n+}\n+\n+#' @export\n+#' @method write_feather_RecordBatch default\n+`write_feather_RecordBatch.default` <- function(data, stream) {\n+  stop(\"unsupported\")\n+}\n+\n+#' @export\n+#' @method write_feather_RecordBatch character\n+`write_feather_RecordBatch.character` <- function(data, stream) {\n+  `write_feather_RecordBatch.fs_path`(data, fs::path_abs(stream))\n+}\n+\n+#' @export\n+#' @method write_feather_RecordBatch fs_path\n+`write_feather_RecordBatch.fs_path` <- function(data, stream) {\n+  file_stream <- close_on_exit(file_output_stream(stream))\n+  `write_feather_RecordBatch.arrow::io::OutputStream`(data, file_stream)\n+}\n+\n+#' @export\n+#' @method write_feather_RecordBatch arrow::io::OutputStream\n+`write_feather_RecordBatch.arrow::io::OutputStream` <- function(data, stream) {\n+  ipc___TableWriter__RecordBatch__WriteFeather(table_writer(stream), data)\n+}\n+\n+#' A arrow::ipc::feather::TableReader to read from a file\n+#'\n+#' @param file A file path, arrow::io::RandomAccessFile\n+#'\n+#' @export\n+table_reader <- function(file){\n+  UseMethod(\"table_reader\")\n+}\n+\n+#' @export\n+table_reader.default <- function(file) {\n+  stop(\"unsupported\")\n+}\n+\n+#' @export\n+table_reader.character <- function(file) {\n+  table_reader(fs::path_abs(file))\n+}\n+\n+#' @export\n+table_reader.fs_path <- function(file) {\n+  table_reader(file_open(file))\n+}\n+\n+#' @export\n+`table_reader.arrow::io::RandomAccessFile` <- function(file){\n+  unique_ptr(`arrow::ipc::feather::TableReader`, ipc___feather___TableReader__Open(file))\n+}\n+\n+#' @export\n+`table_reader.arrow::ipc::feather::TableReader` <- function(file){\n+  file\n+}\n+\n+#' Read a feather file\n+#'\n+#' @param reader a arrow::ipc::feather::TableReader or whatever the [table_reader()] function can handle\n+#' @return an arrow::Table\n+#'\n+#' @export\n+read_feather <- function(reader){\n \n Review comment:\n   In Python we have a flag whether to use memory mapping when the user passes a file path\r\n   \r\n   https://github.com/apache/arrow/blob/master/python/pyarrow/feather.pxi#L78\r\n   \r\n   The issue is that you'll be copying everything into memory and then copying it again into the target tibble/data.frame. This is a memory doubling and will cause problems for large datasets; so it should not be the default behavior IMHO\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-12T17:36:26.474+0000",
                    "updated": "2018-11-12T17:36:26.474+0000",
                    "started": "2018-11-12T17:36:26.469+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "165033",
                    "issueId": "13189440"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189440/worklog/165038",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2947: ARROW-3439: [R] R language bindings for Feather format\nURL: https://github.com/apache/arrow/pull/2947#issuecomment-437968504\n \n \n   FYI, when I switched the Feather stuff to run off the Arrow codebase, things got a lot faster\r\n   \r\n   http://wesmckinney.com/blog/feather-arrow-future/\r\n   \r\n   ![feather_perf](https://user-images.githubusercontent.com/329591/48365162-2241c600-e678-11e8-94dc-b6d8c6259eb8.png)\r\n   \r\n   Might try to replicate these benchmarks in R to see. We're missing some optimizations in R, though, like multithreaded conversions (there's JIRAs up for this)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-12T17:41:07.000+0000",
                    "updated": "2018-11-12T17:41:07.000+0000",
                    "started": "2018-11-12T17:41:07.000+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "165038",
                    "issueId": "13189440"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189440/worklog/165047",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on a change in pull request #2947: ARROW-3439: [R] R language bindings for Feather format\nURL: https://github.com/apache/arrow/pull/2947#discussion_r232761838\n \n \n\n ##########\n File path: r/R/feather.R\n ##########\n @@ -0,0 +1,155 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+#' @include R6.R\n+\n+`arrow::ipc::feather::TableWriter` <- R6Class(\"arrow::ipc::feather::TableWriter\", inherit = `arrow::Object`,\n+  public = list(\n+    SetDescription = function(description) ipc___feather___TableWriter__SetDescription(self, description),\n+    SetNumRows = function(num_rows) ipc___feather___TableWriter__SetNumRows(self, num_rows),\n+    Append = function(name, values) ipc___feather___TableWriter__Append(self, name, values),\n+    Finalize = function() ipc___feather___TableWriter__Finalize(self)\n+  )\n+)\n+\n+`arrow::ipc::feather::TableReader` <- R6Class(\"arrow::ipc::feather::TableReader\", inherit = `arrow::Object`,\n+  public = list(\n+    GetDescription = function() ipc___feather___TableReader__GetDescription(self),\n+    HasDescription = function() ipc__feather___TableReader__HasDescription(self),\n+    version = function() ipc___feather___TableReader__version(self),\n+    num_rows = function() ipc___feather___TableReader__num_rows(self),\n+    num_columns = function() ipc___feather___TableReader__num_columns(self),\n+    GetColumnName = function(i) ipc___feather___TableReader__GetColumnName(self, i),\n+    GetColumn = function(i) shared_ptr(`arrow::Column`, ipc___feather___TableReader__GetColumn(self, i)),\n+    Read = function() shared_ptr(`arrow::Table`, ipc___feather___TableReader__Read(self))\n+  )\n+)\n+\n+#' Create TableWriter that writes into a stream\n+#'\n+#' @param stream an OutputStream\n+#'\n+#' @export\n+table_writer <- function(stream) {\n+  UseMethod(\"table_writer\")\n+}\n+\n+#' @export\n+`table_writer.arrow::io::OutputStream` <- function(stream){\n+  unique_ptr(`arrow::ipc::feather::TableWriter`, ipc___feather___TableWriter__Open(stream))\n+}\n+\n+#' Write data in the feather format\n+#'\n+#' @param data frame or arrow::RecordBatch\n+#' @param stream A file path or an arrow::io::OutputStream\n+#'\n+#' @export\n+write_feather <- function(data, stream) {\n+  UseMethod(\"write_feather\", data)\n+}\n+\n+#' @export\n+write_feather.default <- function(data, stream) {\n+  stop(\"unsupported\")\n+}\n+\n+#' @export\n+write_feather.data.frame <- function(data, stream) {\n+  write_feather(record_batch(data), stream)\n+}\n+\n+#' @method write_feather arrow::RecordBatch\n+#' @export\n+`write_feather.arrow::RecordBatch` <- function(data, stream) {\n+  write_feather_RecordBatch(data, stream)\n+}\n+\n+#' @rdname write_feather\n+#' @export\n+write_feather_RecordBatch <- function(data, stream) {\n+  UseMethod(\"write_feather_RecordBatch\", stream)\n+}\n+\n+#' @export\n+#' @method write_feather_RecordBatch default\n+`write_feather_RecordBatch.default` <- function(data, stream) {\n+  stop(\"unsupported\")\n+}\n+\n+#' @export\n+#' @method write_feather_RecordBatch character\n+`write_feather_RecordBatch.character` <- function(data, stream) {\n+  `write_feather_RecordBatch.fs_path`(data, fs::path_abs(stream))\n+}\n+\n+#' @export\n+#' @method write_feather_RecordBatch fs_path\n+`write_feather_RecordBatch.fs_path` <- function(data, stream) {\n+  file_stream <- close_on_exit(file_output_stream(stream))\n+  `write_feather_RecordBatch.arrow::io::OutputStream`(data, file_stream)\n+}\n+\n+#' @export\n+#' @method write_feather_RecordBatch arrow::io::OutputStream\n+`write_feather_RecordBatch.arrow::io::OutputStream` <- function(data, stream) {\n+  ipc___TableWriter__RecordBatch__WriteFeather(table_writer(stream), data)\n+}\n+\n+#' A arrow::ipc::feather::TableReader to read from a file\n+#'\n+#' @param file A file path, arrow::io::RandomAccessFile\n+#'\n+#' @export\n+table_reader <- function(file){\n+  UseMethod(\"table_reader\")\n+}\n+\n+#' @export\n+table_reader.default <- function(file) {\n+  stop(\"unsupported\")\n+}\n+\n+#' @export\n+table_reader.character <- function(file) {\n+  table_reader(fs::path_abs(file))\n+}\n+\n+#' @export\n+table_reader.fs_path <- function(file) {\n+  table_reader(file_open(file))\n+}\n+\n+#' @export\n+`table_reader.arrow::io::RandomAccessFile` <- function(file){\n+  unique_ptr(`arrow::ipc::feather::TableReader`, ipc___feather___TableReader__Open(file))\n+}\n+\n+#' @export\n+`table_reader.arrow::ipc::feather::TableReader` <- function(file){\n+  file\n+}\n+\n+#' Read a feather file\n+#'\n+#' @param reader a arrow::ipc::feather::TableReader or whatever the [table_reader()] function can handle\n+#' @return an arrow::Table\n+#'\n+#' @export\n+read_feather <- function(reader){\n \n Review comment:\n   I added the `mmap = TRUE` option. Soon enough when we can ALTREP both of these copies can potentially go away. \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-12T18:14:58.686+0000",
                    "updated": "2018-11-12T18:14:58.686+0000",
                    "started": "2018-11-12T18:14:58.683+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "165047",
                    "issueId": "13189440"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189440/worklog/165050",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2947: ARROW-3439: [R] R language bindings for Feather format\nURL: https://github.com/apache/arrow/pull/2947#issuecomment-437982099\n \n \n   Cool, I will review again when I can, I'll be interested to see the perf numbers; it might be useful to start a directory of benchmarks where we can periodically check the performance of things\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-12T18:25:49.798+0000",
                    "updated": "2018-11-12T18:25:49.798+0000",
                    "started": "2018-11-12T18:25:49.797+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "165050",
                    "issueId": "13189440"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189440/worklog/165452",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on issue #2947: ARROW-3439: [R] R language bindings for Feather format\nURL: https://github.com/apache/arrow/pull/2947#issuecomment-438282959\n \n \n   ``` r\r\n   library(lobstr)\r\n   library(tibble)\r\n   library(arrow)\r\n   #> \r\n   #> Attaching package: 'arrow'\r\n   #> The following object is masked from 'package:utils':\r\n   #> \r\n   #>     timestamp\r\n   #> The following objects are masked from 'package:base':\r\n   #> \r\n   #>     array, table\r\n   library(feather)\r\n   #> \r\n   #> Attaching package: 'feather'\r\n   #> The following objects are masked from 'package:arrow':\r\n   #> \r\n   #>     read_feather, write_feather\r\n   \r\n   n <- 5e7\r\n   tib <- tibble(x = rnorm(n), y = rnorm(n), z = 1:n + 1L, a = sample(letters, n, replace = TRUE))\r\n   lobstr::obj_size(tib)\r\n   #> 1,400,002,664 B\r\n   \r\n   write_feather(tib, \"data.feather\")\r\n   \r\n   fs::file_info(\"data.feather\")\r\n   #> # A tibble: 1 x 18\r\n   #>   path         type   size permissions modification_time   user  group\r\n   #>   <fs::path>   <fct> <fs:> <fs::perms> <dttm>              <chr> <chr>\r\n   #> 1 data.feather file  1.16G rw-r--r--   2018-11-13 15:19:50 roma\u2026 staff\r\n   #> # \u2026 with 11 more variables: device_id <dbl>, hard_links <dbl>,\r\n   #> #   special_device_id <dbl>, inode <dbl>, block_size <dbl>, blocks <dbl>,\r\n   #> #   flags <int>, generation <dbl>, access_time <dttm>, change_time <dttm>,\r\n   #> #   birth_time <dttm>\r\n   \r\n   bench::mark(check = FALSE,\r\n     feather::read_feather(\"data.feather\"),\r\n   \r\n     arrow::read_feather(\"data.feather\"),\r\n     as_tibble(arrow::read_feather(\"data.feather\"))\r\n   )\r\n   #> Warning: Some expressions had a GC in every iteration; so filtering is\r\n   #> disabled.\r\n   #> # A tibble: 3 x 10\r\n   #>   expression    min  mean median      max `itr/sec` mem_alloc  n_gc n_itr\r\n   #>   <chr>      <bch:> <bch> <bch:> <bch:tm>     <dbl> <bch:byt> <dbl> <int>\r\n   #> 1 \"feather:\u2026  5.34s 5.34s  5.34s    5.34s     0.187     1.3GB     2     1\r\n   #> 2 \"arrow::r\u2026 1.38ms 7.3ms  1.6ms 426.94ms   137.       8.72MB     3   104\r\n   #> 3 \"as_tibbl\u2026  2.53s 2.53s  2.53s    2.53s     0.395     1.3GB     0     1\r\n   #> # \u2026 with 1 more variable: total_time <bch:tm>\r\n   ```\r\n   \r\n   <sup>Created on 2018-11-13 by the [reprex package](https://reprex.tidyverse.org) (v0.2.1.9000)</sup>\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-13T14:22:20.242+0000",
                    "updated": "2018-11-13T14:22:20.242+0000",
                    "started": "2018-11-13T14:22:20.241+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "165452",
                    "issueId": "13189440"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189440/worklog/165454",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on issue #2947: ARROW-3439: [R] R language bindings for Feather format\nURL: https://github.com/apache/arrow/pull/2947#issuecomment-438284973\n \n \n   so `arrow::read_feather()` is pretty fast as this just makes an `arrow::Table`: no copy of data to R data structures. \r\n   \r\n   if we add data copy we get the 3rd line, still twice as fast as feather, but not that impressive. \r\n   \r\n   However, this is not using altrep at all yet, which it really should so that the memory of the columns of the `arrow::Table` are reused by the R object. \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-13T14:28:20.836+0000",
                    "updated": "2018-11-13T14:28:20.836+0000",
                    "started": "2018-11-13T14:28:20.835+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "165454",
                    "issueId": "13189440"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189440/worklog/165456",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2947: ARROW-3439: [R] R language bindings for Feather format\nURL: https://github.com/apache/arrow/pull/2947#issuecomment-438285789\n \n \n   Well, being twice as fast is pretty good, as in theory the libraries are doing the same thing. Can you run a benchmark where about 50% of the values are NA? \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-13T14:30:43.874+0000",
                    "updated": "2018-11-13T14:30:43.874+0000",
                    "started": "2018-11-13T14:30:43.873+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "165456",
                    "issueId": "13189440"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189440/worklog/165464",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on issue #2947: ARROW-3439: [R] R language bindings for Feather format\nURL: https://github.com/apache/arrow/pull/2947#issuecomment-438293552\n \n \n   ``` r\r\n   library(lobstr)\r\n   library(tibble)\r\n   library(arrow)\r\n   library(feather)\r\n   library(dplyr)\r\n   #> \r\n   #> Attaching package: 'dplyr'\r\n   #> The following objects are masked from 'package:stats':\r\n   #> \r\n   #>     filter, lag\r\n   #> The following objects are masked from 'package:base':\r\n   #> \r\n   #>     intersect, setdiff, setequal, union\r\n   \r\n   n <- 5e7\r\n   tib <- tibble(x = rnorm(n), y = rnorm(n), z = 1:n + 1L, a = sample(letters, n, replace = TRUE))\r\n   tib <- tib %>%\r\n     mutate_all(~{ .[sample(length(.), length(.)/2L)] <- NA ; .})\r\n   \r\n   lobstr::obj_size(tib)\r\n   #> 1,400,002,720 B\r\n   summarise_all(tib, ~sum(is.na(.)) / n())\r\n   #> # A tibble: 1 x 4\r\n   #>       x     y     z     a\r\n   #>   <dbl> <dbl> <dbl> <dbl>\r\n   #> 1   0.5   0.5   0.5   0.5\r\n   \r\n   arrow::write_feather(tib, \"data-na50.feather\")\r\n   \r\n   fs::file_info(\"data-na50.feather\")\r\n   #> # A tibble: 1 x 18\r\n   #>   path              type   size permissions modification_time   user  group\r\n   #>   <fs::path>        <fct> <fs:> <fs::perms> <dttm>              <chr> <chr>\r\n   #> 1 data-na50.feather file  1.16G rw-r--r--   2018-11-13 15:46:20 roma\u2026 staff\r\n   #> # \u2026 with 11 more variables: device_id <dbl>, hard_links <dbl>,\r\n   #> #   special_device_id <dbl>, inode <dbl>, block_size <dbl>, blocks <dbl>,\r\n   #> #   flags <int>, generation <dbl>, access_time <dttm>, change_time <dttm>,\r\n   #> #   birth_time <dttm>\r\n   \r\n   bench::mark(check = FALSE,\r\n     feather = feather::read_feather(\"data-na50.feather\"),\r\n   \r\n     # arrow::read_feather(\"data-na50.feather\"),\r\n     arrow = as_tibble(arrow::read_feather(\"data-na50.feather\"))\r\n   )\r\n   #> Warning: Some expressions had a GC in every iteration; so filtering is\r\n   #> disabled.\r\n   #> # A tibble: 2 x 10\r\n   #>   expression   min  mean median   max `itr/sec` mem_alloc  n_gc n_itr\r\n   #>   <chr>      <bch> <bch> <bch:> <bch>     <dbl> <bch:byt> <dbl> <int>\r\n   #> 1 feather    4.15s 4.15s  4.15s 4.15s     0.241     1.3GB     1     1\r\n   #> 2 arrow      3.51s 3.51s  3.51s 3.51s     0.285    1.31GB     1     1\r\n   #> # \u2026 with 1 more variable: total_time <bch:tm>\r\n   ```\r\n   \r\n   But at the moment all this: happens in one thread, e.g. \r\n   \r\n   ```cpp\r\n         // first copy all the data\r\n         std::copy_n(p_values, n, data.begin() + start);\r\n   \r\n         if (null_count) {\r\n           // then set the sentinel NA\r\n           arrow::internal::BitmapReader bitmap_reader(array->null_bitmap()->data(),\r\n                                                       array->offset(), n);\r\n   \r\n           for (size_t i = 0; i < n; i++, bitmap_reader.Next()) {\r\n             if (bitmap_reader.IsNotSet()) {\r\n               data[i + start] = default_value<RTYPE>();\r\n             }\r\n           }\r\n         }\r\n   ```\r\n   \r\n   There's room for improvement here, even with copies (no altrep). But this is for later. We focus on the features first I suppose. \r\n   \r\n   \r\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-13T14:52:42.344+0000",
                    "updated": "2018-11-13T14:52:42.344+0000",
                    "started": "2018-11-13T14:52:42.344+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "165464",
                    "issueId": "13189440"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189440/worklog/165498",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2947: ARROW-3439: [R] R language bindings for Feather format\nURL: https://github.com/apache/arrow/pull/2947#issuecomment-438347211\n \n \n   Multithreading (https://issues.apache.org/jira/browse/ARROW-3315) will help a lot\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-13T16:54:51.484+0000",
                    "updated": "2018-11-13T16:54:51.484+0000",
                    "started": "2018-11-13T16:54:51.483+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "165498",
                    "issueId": "13189440"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189440/worklog/165618",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "javierluraschi opened a new pull request #2953: ARROW-3439: [R] Fix promotion of int16\nURL: https://github.com/apache/arrow/pull/2953\n \n \n   Fix for https://issues.apache.org/jira/browse/ARROW-3439.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-13T20:01:15.928+0000",
                    "updated": "2018-11-13T20:01:15.928+0000",
                    "started": "2018-11-13T20:01:15.927+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "165618",
                    "issueId": "13189440"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 24000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@41980c19[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7276344e[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3c9562e6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7f82e57e[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@52ae89b6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@d514a8c[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1ac49b92[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@720524a1[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5440f06e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@53c2c540[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6de4dca1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@369fdd90[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 24000,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Nov 14 15:18:55 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-11-14T15:18:55.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3439/watchers",
            "watchCount": 4,
            "isWatching": false
        },
        "created": "2018-10-04T14:45:25.000+0000",
        "updated": "2018-12-04T13:32:03.000+0000",
        "timeoriginalestimate": null,
        "description": "This will enable work on a \"Feather v2\" to commence and so that the codebase in github.om/wesm/feather can be finally deprecated",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "6h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 24000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[R] R language bindings for Feather format",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189440/comment/16686662",
                    "id": "16686662",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 2947\n[https://github.com/apache/arrow/pull/2947]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-11-14T15:18:55.699+0000",
                    "updated": "2018-11-14T15:18:55.699+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|i3ytzz:",
        "customfield_12314139": null
    }
}