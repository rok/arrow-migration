{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13209655",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13209655",
    "key": "ARROW-4265",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343937",
                "id": "12343937",
                "description": "",
                "name": "0.13.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-04-01"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
            "name": "uwe",
            "key": "xhochy",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
            },
            "displayName": "Uwe Korn",
            "active": true,
            "timeZone": "Europe/Berlin"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
            "name": "uwe",
            "key": "xhochy",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
            },
            "displayName": "Uwe Korn",
            "active": true,
            "timeZone": "Europe/Berlin"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
            "name": "uwe",
            "key": "xhochy",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
            },
            "displayName": "Uwe Korn",
            "active": true,
            "timeZone": "Europe/Berlin"
        },
        "aggregateprogress": {
            "progress": 9000,
            "total": 9000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 9000,
            "total": 9000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4265/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 16,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13209655/worklog/185279",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy commented on pull request #3404: ARROW-4265: [C++] Automatic conversion between Table and std::vector<std::tuple<..>>\nURL: https://github.com/apache/arrow/pull/3404\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-15T14:15:01.673+0000",
                    "updated": "2019-01-15T14:15:01.673+0000",
                    "started": "2019-01-15T14:15:01.672+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "185279",
                    "issueId": "13209655"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13209655/worklog/185280",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy commented on issue #3404: ARROW-4265: [C++] Automatic conversion between Table and std::vector<std::tuple<..>>\nURL: https://github.com/apache/arrow/pull/3404#issuecomment-454407270\n \n \n   cc @fjetter \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-15T14:18:41.261+0000",
                    "updated": "2019-01-15T14:18:41.261+0000",
                    "started": "2019-01-15T14:18:41.260+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "185280",
                    "issueId": "13209655"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13209655/worklog/185281",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy commented on issue #3404: ARROW-4265: [C++] Automatic conversion between Table and std::vector<std::tuple<..>>\nURL: https://github.com/apache/arrow/pull/3404#issuecomment-454407858\n \n \n   This is also build to support `std::optional` and implementations thereof. As we don't build normally with C++17, I did not include this here. I would do a follow-up PR for this but then I would also need to change one of the CI entries to build with `-std=c++17`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-15T14:20:28.328+0000",
                    "updated": "2019-01-15T14:20:28.328+0000",
                    "started": "2019-01-15T14:20:28.328+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "185281",
                    "issueId": "13209655"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13209655/worklog/185292",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #3404: ARROW-4265: [C++] Automatic conversion between Table and std::vector<std::tuple<..>>\nURL: https://github.com/apache/arrow/pull/3404#discussion_r247921676\n \n \n\n ##########\n File path: cpp/src/arrow/stl.h\n ##########\n @@ -150,7 +205,166 @@ struct SchemaFromTuple<Tuple, 0> {\n     return ret;\n   }\n };\n-/// @endcond\n+\n+namespace internal {\n+template <typename Tuple, std::size_t N = std::tuple_size<Tuple>::value>\n+struct CreateBuildersRecursive {\n+  static Status Make(MemoryPool* pool,\n+                     std::vector<std::unique_ptr<ArrayBuilder>>* builders) {\n+    using Element = typename std::tuple_element<N - 1, Tuple>::type;\n+    std::shared_ptr<DataType> type = ConversionTraits<Element>::arrow_type();\n+    ARROW_RETURN_NOT_OK(MakeBuilder(pool, type, &builders->at(N - 1)));\n+\n+    return CreateBuildersRecursive<Tuple, N - 1>::Make(pool, builders);\n+  }\n+};\n+\n+template <typename Tuple>\n+struct CreateBuildersRecursive<Tuple, 0> {\n+  static Status Make(MemoryPool*, std::vector<std::unique_ptr<ArrayBuilder>>*) {\n+    return Status::OK();\n+  }\n+};\n+\n+template <typename Tuple, std::size_t N = std::tuple_size<Tuple>::value>\n+struct RowIterator {\n+  static Status Append(const std::vector<std::unique_ptr<ArrayBuilder>>& builders,\n+                       const Tuple& row) {\n+    using std::get;\n+    using Element = typename std::tuple_element<N - 1, Tuple>::type;\n+    using BuilderType =\n+        typename TypeTraits<typename ConversionTraits<Element>::ArrowType>::BuilderType;\n+\n+    BuilderType& builder = static_cast<BuilderType&>(*builders[N - 1]);\n+    ARROW_RETURN_NOT_OK(ConversionTraits<Element>::AppendRow(builder, get<N - 1>(row)));\n+\n+    return RowIterator<Tuple, N - 1>::Append(builders, row);\n+  }\n+};\n+\n+template <typename Tuple>\n+struct RowIterator<Tuple, 0> {\n+  static Status Append(const std::vector<std::unique_ptr<ArrayBuilder>>& builders,\n+                       const Tuple& row) {\n+    return Status::OK();\n+  }\n+};\n+\n+template <typename Tuple, std::size_t N = std::tuple_size<Tuple>::value>\n+struct EnsureColumnTypes {\n+  static Status Cast(const Table& table, std::shared_ptr<Table>* table_owner,\n+                     const compute::CastOptions& cast_options,\n+                     compute::FunctionContext* ctx,\n+                     std::reference_wrapper<const ::arrow::Table>* result) {\n+    using Element = typename std::tuple_element<N - 1, Tuple>::type;\n+    std::shared_ptr<DataType> expected_type = ConversionTraits<Element>::arrow_type();\n+\n+    if (!table.schema()->field(N - 1)->type()->Equals(*expected_type)) {\n+      compute::Datum casted;\n+      ARROW_RETURN_NOT_OK(compute::Cast(ctx, compute::Datum(table.column(N - 1)->data()),\n+                                        expected_type, cast_options, &casted));\n+      std::shared_ptr<Column> new_column = std::make_shared<Column>(\n+          table.schema()->field(N - 1)->WithType(expected_type), casted.chunked_array());\n+      ARROW_RETURN_NOT_OK(table.SetColumn(N - 1, new_column, table_owner));\n+      *result = **table_owner;\n+    }\n+\n+    return EnsureColumnTypes<Tuple, N - 1>::Cast(result->get(), table_owner, cast_options,\n+                                                 ctx, result);\n+  }\n+};\n+\n+template <typename Tuple>\n+struct EnsureColumnTypes<Tuple, 0> {\n+  static Status Cast(const Table& table, std::shared_ptr<Table>* table_ownder,\n+                     const compute::CastOptions& cast_options,\n+                     compute::FunctionContext* ctx,\n+                     std::reference_wrapper<const ::arrow::Table>* result) {\n+    return Status::OK();\n+  }\n+};\n+\n+template <typename Range, typename Tuple, std::size_t N = std::tuple_size<Tuple>::value>\n+struct TupleSetter {\n+  static void Fill(const Table& table, Range* rows) {\n+    using std::get;\n+    using Element = typename std::tuple_element<N - 1, Tuple>::type;\n+    using ArrayType =\n+        typename TypeTraits<typename ConversionTraits<Element>::ArrowType>::ArrayType;\n+\n+    auto iter = rows->begin();\n+    const ChunkedArray& chunked_array = *table.column(N - 1)->data();\n+    for (int i = 0; i < chunked_array.num_chunks(); i++) {\n+      const ArrayType& array =\n+          ::arrow::internal::checked_cast<const ArrayType&>(*chunked_array.chunk(i));\n+      for (int64_t j = 0; j < array.length(); j++) {\n+        get<N - 1>(*iter++) = ConversionTraits<Element>::GetEntry(array, j);\n+      }\n+    }\n+\n+    return TupleSetter<Range, Tuple, N - 1>::Fill(table, rows);\n+  }\n+};\n+\n+template <typename Range, typename Tuple>\n+struct TupleSetter<Range, Tuple, 0> {\n+  static void Fill(const Table& table, Range* rows) {}\n+};\n+\n+}  // namespace internal\n+\n+template <typename Range>\n+Status TableFromTupleRange(MemoryPool* pool, const Range& rows,\n+                           const std::vector<std::string>& names,\n+                           std::shared_ptr<Table>* table) {\n+  using row_type = typename std::decay<decltype(*std::begin(rows))>::type;\n \n Review comment:\n   It's possible that `decltype(*begin(rows))` wouldn't be a reference type (as in `vector<bool>`), in which case decay will still provide a type which is logically a reference. Instead:\r\n   \r\n   ```\r\n   using row_type = std::iterator_traits<decltype(std::begin(rows))>:: value_type;\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-15T15:04:44.519+0000",
                    "updated": "2019-01-15T15:04:44.519+0000",
                    "started": "2019-01-15T15:04:44.518+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "185292",
                    "issueId": "13209655"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13209655/worklog/188591",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #3404: ARROW-4265: [C++] Automatic conversion between Table and std::vector<std::tuple<..>>\nURL: https://github.com/apache/arrow/pull/3404#issuecomment-456636330\n \n \n   @xhochy what more needs to be done here, beyond rebase / fix build? (I'm doing that now)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-23T01:47:49.615+0000",
                    "updated": "2019-01-23T01:47:49.615+0000",
                    "started": "2019-01-23T01:47:49.614+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "188591",
                    "issueId": "13209655"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13209655/worklog/188873",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #3404: ARROW-4265: [C++] Automatic conversion between Table and std::vector<std::tuple<..>>\nURL: https://github.com/apache/arrow/pull/3404#discussion_r250160524\n \n \n\n ##########\n File path: docs/source/cpp/examples.rst\n ##########\n @@ -28,3 +28,81 @@ The following example converts an array of structs to a :class:`arrow::Table`\n instance, and then converts it back to the original array of structs.\n \n .. literalinclude:: ../../../cpp/examples/arrow/row-wise-conversion-example.cc\n+\n+Conversion of range of ``std::tuple``-like to ``Table`` instances\n \n Review comment:\n   It might be more readable to put each example in a separate reST document?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-23T11:48:58.690+0000",
                    "updated": "2019-01-23T11:48:58.690+0000",
                    "started": "2019-01-23T11:48:58.689+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "188873",
                    "issueId": "13209655"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13209655/worklog/188874",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #3404: ARROW-4265: [C++] Automatic conversion between Table and std::vector<std::tuple<..>>\nURL: https://github.com/apache/arrow/pull/3404#discussion_r250157876\n \n \n\n ##########\n File path: cpp/src/arrow/stl-test.cc\n ##########\n @@ -80,5 +78,156 @@ TEST(TestSchemaFromTuple, NestedList) {\n   ASSERT_TRUE(expected_schema.Equals(*schema));\n }\n \n+TEST(TestTableFromTupleVector, PrimitiveTypes) {\n+  std::vector<std::string> names{\"column1\", \"column2\", \"column3\", \"column4\", \"column5\",\n+                                 \"column6\", \"column7\", \"column8\", \"column9\", \"column10\"};\n+  std::vector<primitive_types_tuple> rows{\n+      primitive_types_tuple(-1, -2, -3, -4, 1, 2, 3, 4, true, \"Tests\"),\n+      primitive_types_tuple(-10, -20, -30, -40, 10, 20, 30, 40, false, \"Other\")};\n+  std::shared_ptr<Table> table;\n+  ASSERT_OK(TableFromTupleRange(default_memory_pool(), rows, names, &table));\n+\n+  std::shared_ptr<Schema> expected_schema = std::shared_ptr<Schema>(\n \n Review comment:\n   Can you the `schema()` factory function.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-23T11:48:59.116+0000",
                    "updated": "2019-01-23T11:48:59.116+0000",
                    "started": "2019-01-23T11:48:59.116+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "188874",
                    "issueId": "13209655"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13209655/worklog/188875",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #3404: ARROW-4265: [C++] Automatic conversion between Table and std::vector<std::tuple<..>>\nURL: https://github.com/apache/arrow/pull/3404#discussion_r250159359\n \n \n\n ##########\n File path: cpp/src/arrow/stl.h\n ##########\n @@ -55,13 +67,55 @@ ARROW_STL_CONVERSION(uint32_t, UInt32Type)\n ARROW_STL_CONVERSION(uint64_t, UInt64Type)\n ARROW_STL_CONVERSION(float, FloatType)\n ARROW_STL_CONVERSION(double, DoubleType)\n-ARROW_STL_CONVERSION(std::string, StringType)\n+\n+template <>\n+struct ConversionTraits<std::string> {\n+  using ArrowType = StringType;\n+  static std::shared_ptr<DataType> arrow_type() { return std::make_shared<StringType>(); }\n+  static Status AppendRow(StringBuilder& builder, const std::string& cell) {\n+    return builder.Append(cell);\n+  }\n+  static std::string GetEntry(const StringArray& array, size_t j) {\n+    return array.GetString(j);\n+  }\n+  constexpr static bool nullable = false;\n+};\n \n template <typename value_c_type>\n struct ConversionTraits<std::vector<value_c_type>> {\n+  using ArrowType = ListType;\n   static std::shared_ptr<DataType> arrow_type() {\n     return list(ConversionTraits<value_c_type>::arrow_type());\n   }\n+\n+  static Status AppendRow(ListBuilder& builder, std::vector<value_c_type> cell) {\n+    using ElementBuilderType = typename TypeTraits<\n+        typename ConversionTraits<value_c_type>::ArrowType>::BuilderType;\n+    ARROW_RETURN_NOT_OK(builder.Append());\n+    ElementBuilderType& value_builder =\n+        static_cast<ElementBuilderType&>(*builder.value_builder());\n \n Review comment:\n   `checked_cast` perhaps?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-23T11:48:59.205+0000",
                    "updated": "2019-01-23T11:48:59.205+0000",
                    "started": "2019-01-23T11:48:59.205+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "188875",
                    "issueId": "13209655"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13209655/worklog/188876",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #3404: ARROW-4265: [C++] Automatic conversion between Table and std::vector<std::tuple<..>>\nURL: https://github.com/apache/arrow/pull/3404#discussion_r250158222\n \n \n\n ##########\n File path: cpp/src/arrow/stl-test.cc\n ##########\n @@ -80,5 +78,156 @@ TEST(TestSchemaFromTuple, NestedList) {\n   ASSERT_TRUE(expected_schema.Equals(*schema));\n }\n \n+TEST(TestTableFromTupleVector, PrimitiveTypes) {\n+  std::vector<std::string> names{\"column1\", \"column2\", \"column3\", \"column4\", \"column5\",\n+                                 \"column6\", \"column7\", \"column8\", \"column9\", \"column10\"};\n+  std::vector<primitive_types_tuple> rows{\n+      primitive_types_tuple(-1, -2, -3, -4, 1, 2, 3, 4, true, \"Tests\"),\n+      primitive_types_tuple(-10, -20, -30, -40, 10, 20, 30, 40, false, \"Other\")};\n+  std::shared_ptr<Table> table;\n+  ASSERT_OK(TableFromTupleRange(default_memory_pool(), rows, names, &table));\n+\n+  std::shared_ptr<Schema> expected_schema = std::shared_ptr<Schema>(\n+      new Schema({field(\"column1\", int8(), false), field(\"column2\", int16(), false),\n+                  field(\"column3\", int32(), false), field(\"column4\", int64(), false),\n+                  field(\"column5\", uint8(), false), field(\"column6\", uint16(), false),\n+                  field(\"column7\", uint32(), false), field(\"column8\", uint64(), false),\n+                  field(\"column9\", boolean(), false), field(\"column10\", utf8(), false)}));\n+\n+  // Construct expected arrays\n+  std::shared_ptr<Array> int8_array;\n+  ArrayFromVector<Int8Type, int8_t>({-1, -10}, &int8_array);\n \n Review comment:\n   These days you can write:\r\n   ```cpp\r\n   auto int8_array = ArrayFromJSON(int8(), \"[-1, -10]\");\r\n   ```\r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-23T11:48:59.230+0000",
                    "updated": "2019-01-23T11:48:59.230+0000",
                    "started": "2019-01-23T11:48:59.230+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "188876",
                    "issueId": "13209655"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13209655/worklog/188877",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #3404: ARROW-4265: [C++] Automatic conversion between Table and std::vector<std::tuple<..>>\nURL: https://github.com/apache/arrow/pull/3404#discussion_r250161179\n \n \n\n ##########\n File path: cpp/src/arrow/stl.h\n ##########\n @@ -150,7 +205,166 @@ struct SchemaFromTuple<Tuple, 0> {\n     return ret;\n   }\n };\n-/// @endcond\n+\n+namespace internal {\n+template <typename Tuple, std::size_t N = std::tuple_size<Tuple>::value>\n+struct CreateBuildersRecursive {\n+  static Status Make(MemoryPool* pool,\n+                     std::vector<std::unique_ptr<ArrayBuilder>>* builders) {\n+    using Element = typename std::tuple_element<N - 1, Tuple>::type;\n+    std::shared_ptr<DataType> type = ConversionTraits<Element>::arrow_type();\n+    ARROW_RETURN_NOT_OK(MakeBuilder(pool, type, &builders->at(N - 1)));\n+\n+    return CreateBuildersRecursive<Tuple, N - 1>::Make(pool, builders);\n+  }\n+};\n+\n+template <typename Tuple>\n+struct CreateBuildersRecursive<Tuple, 0> {\n+  static Status Make(MemoryPool*, std::vector<std::unique_ptr<ArrayBuilder>>*) {\n+    return Status::OK();\n+  }\n+};\n+\n+template <typename Tuple, std::size_t N = std::tuple_size<Tuple>::value>\n+struct RowIterator {\n+  static Status Append(const std::vector<std::unique_ptr<ArrayBuilder>>& builders,\n+                       const Tuple& row) {\n+    using std::get;\n+    using Element = typename std::tuple_element<N - 1, Tuple>::type;\n+    using BuilderType =\n+        typename TypeTraits<typename ConversionTraits<Element>::ArrowType>::BuilderType;\n+\n+    BuilderType& builder = static_cast<BuilderType&>(*builders[N - 1]);\n+    ARROW_RETURN_NOT_OK(ConversionTraits<Element>::AppendRow(builder, get<N - 1>(row)));\n+\n+    return RowIterator<Tuple, N - 1>::Append(builders, row);\n+  }\n+};\n+\n+template <typename Tuple>\n+struct RowIterator<Tuple, 0> {\n+  static Status Append(const std::vector<std::unique_ptr<ArrayBuilder>>& builders,\n+                       const Tuple& row) {\n+    return Status::OK();\n+  }\n+};\n+\n+template <typename Tuple, std::size_t N = std::tuple_size<Tuple>::value>\n+struct EnsureColumnTypes {\n+  static Status Cast(const Table& table, std::shared_ptr<Table>* table_owner,\n+                     const compute::CastOptions& cast_options,\n+                     compute::FunctionContext* ctx,\n+                     std::reference_wrapper<const ::arrow::Table>* result) {\n+    using Element = typename std::tuple_element<N - 1, Tuple>::type;\n+    std::shared_ptr<DataType> expected_type = ConversionTraits<Element>::arrow_type();\n+\n+    if (!table.schema()->field(N - 1)->type()->Equals(*expected_type)) {\n+      compute::Datum casted;\n+      ARROW_RETURN_NOT_OK(compute::Cast(ctx, compute::Datum(table.column(N - 1)->data()),\n+                                        expected_type, cast_options, &casted));\n+      std::shared_ptr<Column> new_column = std::make_shared<Column>(\n+          table.schema()->field(N - 1)->WithType(expected_type), casted.chunked_array());\n+      ARROW_RETURN_NOT_OK(table.SetColumn(N - 1, new_column, table_owner));\n+      *result = **table_owner;\n+    }\n+\n+    return EnsureColumnTypes<Tuple, N - 1>::Cast(result->get(), table_owner, cast_options,\n+                                                 ctx, result);\n+  }\n+};\n+\n+template <typename Tuple>\n+struct EnsureColumnTypes<Tuple, 0> {\n+  static Status Cast(const Table& table, std::shared_ptr<Table>* table_ownder,\n+                     const compute::CastOptions& cast_options,\n+                     compute::FunctionContext* ctx,\n+                     std::reference_wrapper<const ::arrow::Table>* result) {\n+    return Status::OK();\n+  }\n+};\n+\n+template <typename Range, typename Tuple, std::size_t N = std::tuple_size<Tuple>::value>\n+struct TupleSetter {\n+  static void Fill(const Table& table, Range* rows) {\n+    using std::get;\n+    using Element = typename std::tuple_element<N - 1, Tuple>::type;\n+    using ArrayType =\n+        typename TypeTraits<typename ConversionTraits<Element>::ArrowType>::ArrayType;\n+\n+    auto iter = rows->begin();\n+    const ChunkedArray& chunked_array = *table.column(N - 1)->data();\n+    for (int i = 0; i < chunked_array.num_chunks(); i++) {\n+      const ArrayType& array =\n+          ::arrow::internal::checked_cast<const ArrayType&>(*chunked_array.chunk(i));\n+      for (int64_t j = 0; j < array.length(); j++) {\n+        get<N - 1>(*iter++) = ConversionTraits<Element>::GetEntry(array, j);\n+      }\n+    }\n+\n+    return TupleSetter<Range, Tuple, N - 1>::Fill(table, rows);\n+  }\n+};\n+\n+template <typename Range, typename Tuple>\n+struct TupleSetter<Range, Tuple, 0> {\n+  static void Fill(const Table& table, Range* rows) {}\n+};\n+\n+}  // namespace internal\n+\n+template <typename Range>\n+Status TableFromTupleRange(MemoryPool* pool, const Range& rows,\n+                           const std::vector<std::string>& names,\n+                           std::shared_ptr<Table>* table) {\n+  using row_type = typename std::decay<decltype(*std::begin(rows))>::type;\n+  constexpr std::size_t n_columns = std::tuple_size<row_type>::value;\n+\n+  std::shared_ptr<Schema> schema = SchemaFromTuple<row_type>::MakeSchema(names);\n+\n+  std::vector<std::unique_ptr<ArrayBuilder>> builders(n_columns);\n+  ARROW_RETURN_NOT_OK(internal::CreateBuildersRecursive<row_type>::Make(pool, &builders));\n+\n+  for (auto const& row : rows) {\n+    ARROW_RETURN_NOT_OK(internal::RowIterator<row_type>::Append(builders, row));\n+  }\n+\n+  std::vector<std::shared_ptr<Array>> arrays;\n+  for (auto const& builder : builders) {\n+    std::shared_ptr<Array> array;\n+    ARROW_RETURN_NOT_OK(builder->Finish(&array));\n+    arrays.emplace_back(array);\n+  }\n+\n+  *table = Table::Make(schema, arrays);\n+\n+  return Status::OK();\n+}\n+\n+template <typename Range>\n+Status TupleRangeFromTable(const Table& table, const compute::CastOptions& cast_options,\n+                           compute::FunctionContext* ctx, Range* rows) {\n+  using row_type = typename std::decay<decltype(*std::begin(*rows))>::type;\n+  constexpr std::size_t n_columns = std::tuple_size<row_type>::value;\n+\n+  if (table.schema()->num_fields() != n_columns) {\n+    std::stringstream ss;\n+    ss << \"Number of columns in the table does not match the width of the target: \";\n+    ss << table.schema()->num_fields() << \" != \" << n_columns;\n+    return Status::Invalid(ss.str());\n+  }\n+\n+  // Check that all columns have the correct type, otherwise cast them.\n+  std::shared_ptr<Table> table_owner;\n+  std::reference_wrapper<const ::arrow::Table> current_table(table);\n+\n+  ARROW_RETURN_NOT_OK(internal::EnsureColumnTypes<row_type>::Cast(\n+      table, &table_owner, cast_options, ctx, &current_table));\n+\n+  internal::TupleSetter<Range, row_type>::Fill(current_table.get(), rows);\n \n Review comment:\n   I may be missing something, but shouldn't you check that `rows` has the right size for the table's number of rows?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-23T11:48:59.258+0000",
                    "updated": "2019-01-23T11:48:59.258+0000",
                    "started": "2019-01-23T11:48:59.257+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "188877",
                    "issueId": "13209655"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13209655/worklog/188878",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #3404: ARROW-4265: [C++] Automatic conversion between Table and std::vector<std::tuple<..>>\nURL: https://github.com/apache/arrow/pull/3404#discussion_r250159204\n \n \n\n ##########\n File path: cpp/src/arrow/stl.h\n ##########\n @@ -55,13 +67,55 @@ ARROW_STL_CONVERSION(uint32_t, UInt32Type)\n ARROW_STL_CONVERSION(uint64_t, UInt64Type)\n ARROW_STL_CONVERSION(float, FloatType)\n ARROW_STL_CONVERSION(double, DoubleType)\n-ARROW_STL_CONVERSION(std::string, StringType)\n+\n+template <>\n+struct ConversionTraits<std::string> {\n+  using ArrowType = StringType;\n+  static std::shared_ptr<DataType> arrow_type() { return std::make_shared<StringType>(); }\n+  static Status AppendRow(StringBuilder& builder, const std::string& cell) {\n+    return builder.Append(cell);\n+  }\n+  static std::string GetEntry(const StringArray& array, size_t j) {\n+    return array.GetString(j);\n \n Review comment:\n   Perhaps you can use `GetView` here. It also exists on numeric arrays, so you wouldn't need the `std::string` specialization.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-23T11:48:59.260+0000",
                    "updated": "2019-01-23T11:48:59.260+0000",
                    "started": "2019-01-23T11:48:59.260+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "188878",
                    "issueId": "13209655"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13209655/worklog/189512",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #3404: ARROW-4265: [C++] Automatic conversion between Table and std::vector<std::tuple<..>>\nURL: https://github.com/apache/arrow/pull/3404#issuecomment-457219772\n \n \n   > In lieu of std::optional, this could accept a range of std::bitset or similar to identity null fields\r\n   \r\n   I think we'll need a `std::optional` backport sooner or later.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-24T14:39:38.306+0000",
                    "updated": "2019-01-24T14:39:38.306+0000",
                    "started": "2019-01-24T14:39:38.306+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "189512",
                    "issueId": "13209655"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13209655/worklog/198607",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #3404: ARROW-4265: [C++] Automatic conversion between Table and std::vector<std::tuple<..>>\nURL: https://github.com/apache/arrow/pull/3404#issuecomment-463569484\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/3404?src=pr&el=h1) Report\n   > Merging [#3404](https://codecov.io/gh/apache/arrow/pull/3404?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/27ba26cad39d92713e17d811a65ad0b87c587610?src=pr&el=desc) will **increase** coverage by `0.03%`.\n   > The diff coverage is `97.28%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/3404/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/3404?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #3404      +/-   ##\n   ==========================================\n   + Coverage    87.7%   87.74%   +0.03%     \n   ==========================================\n     Files         685      689       +4     \n     Lines       83743    84060     +317     \n     Branches     1081     1081              \n   ==========================================\n   + Hits        73447    73756     +309     \n   - Misses      10181    10189       +8     \n     Partials      115      115\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/3404?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/type.h](https://codecov.io/gh/apache/arrow/pull/3404/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90eXBlLmg=) | `90.13% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/stl.h](https://codecov.io/gh/apache/arrow/pull/3404/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9zdGwuaA==) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/stl-test.cc](https://codecov.io/gh/apache/arrow/pull/3404/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9zdGwtdGVzdC5jYw==) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/type.cc](https://codecov.io/gh/apache/arrow/pull/3404/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90eXBlLmNj) | `90.06% <28.57%> (-1.46%)` | :arrow_down: |\n   | [js/src/ipc/metadata/json.ts](https://codecov.io/gh/apache/arrow/pull/3404/diff?src=pr&el=tree#diff-anMvc3JjL2lwYy9tZXRhZGF0YS9qc29uLnRz) | `92.39% <0%> (-4.35%)` | :arrow_down: |\n   | [cpp/src/arrow/flight/serialization-internal.cc](https://codecov.io/gh/apache/arrow/pull/3404/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9mbGlnaHQvc2VyaWFsaXphdGlvbi1pbnRlcm5hbC5jYw==) | `83.51% <0%> (-2.2%)` | :arrow_down: |\n   | [js/src/visitor/indexof.ts](https://codecov.io/gh/apache/arrow/pull/3404/diff?src=pr&el=tree#diff-anMvc3JjL3Zpc2l0b3IvaW5kZXhvZi50cw==) | `97.26% <0%> (-1.37%)` | :arrow_down: |\n   | [js/src/ipc/metadata/message.ts](https://codecov.io/gh/apache/arrow/pull/3404/diff?src=pr&el=tree#diff-anMvc3JjL2lwYy9tZXRhZGF0YS9tZXNzYWdlLnRz) | `90.12% <0%> (-1.28%)` | :arrow_down: |\n   | [cpp/src/arrow/flight/client.cc](https://codecov.io/gh/apache/arrow/pull/3404/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9mbGlnaHQvY2xpZW50LmNj) | `63.25% <0%> (-0.23%)` | :arrow_down: |\n   | [cpp/src/arrow/flight/internal.cc](https://codecov.io/gh/apache/arrow/pull/3404/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9mbGlnaHQvaW50ZXJuYWwuY2M=) | `80.34% <0%> (\u00f8)` | :arrow_up: |\n   | ... and [12 more](https://codecov.io/gh/apache/arrow/pull/3404/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/3404?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/3404?src=pr&el=footer). Last update [27ba26c...9b780a5](https://codecov.io/gh/apache/arrow/pull/3404?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-14T10:08:41.275+0000",
                    "updated": "2019-02-14T10:08:41.275+0000",
                    "started": "2019-02-14T10:08:41.274+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "198607",
                    "issueId": "13209655"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13209655/worklog/198608",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy commented on pull request #3404: ARROW-4265: [C++] Automatic conversion between Table and std::vector<std::tuple<..>>\nURL: https://github.com/apache/arrow/pull/3404#discussion_r256766466\n \n \n\n ##########\n File path: cpp/src/arrow/stl.h\n ##########\n @@ -55,13 +67,55 @@ ARROW_STL_CONVERSION(uint32_t, UInt32Type)\n ARROW_STL_CONVERSION(uint64_t, UInt64Type)\n ARROW_STL_CONVERSION(float, FloatType)\n ARROW_STL_CONVERSION(double, DoubleType)\n-ARROW_STL_CONVERSION(std::string, StringType)\n+\n+template <>\n+struct ConversionTraits<std::string> {\n+  using ArrowType = StringType;\n+  static std::shared_ptr<DataType> arrow_type() { return std::make_shared<StringType>(); }\n+  static Status AppendRow(StringBuilder& builder, const std::string& cell) {\n+    return builder.Append(cell);\n+  }\n+  static std::string GetEntry(const StringArray& array, size_t j) {\n+    return array.GetString(j);\n \n Review comment:\n   I still would need a specialization here as in the end I still want to have a `std::string` instance in the resulting vector.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-14T10:10:23.361+0000",
                    "updated": "2019-02-14T10:10:23.361+0000",
                    "started": "2019-02-14T10:10:23.360+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "198608",
                    "issueId": "13209655"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13209655/worklog/199270",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy commented on issue #3404: ARROW-4265: [C++] Automatic conversion between Table and std::vector<std::tuple<..>>\nURL: https://github.com/apache/arrow/pull/3404#issuecomment-464077377\n \n \n   @pitrou Can you give this a look again? I should have addressed all comments.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-15T14:52:37.812+0000",
                    "updated": "2019-02-15T14:52:37.812+0000",
                    "started": "2019-02-15T14:52:37.811+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "199270",
                    "issueId": "13209655"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13209655/worklog/200090",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy commented on pull request #3404: ARROW-4265: [C++] Automatic conversion between Table and std::vector<std::tuple<..>>\nURL: https://github.com/apache/arrow/pull/3404\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-18T15:04:42.349+0000",
                    "updated": "2019-02-18T15:04:42.349+0000",
                    "started": "2019-02-18T15:04:42.349+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "200090",
                    "issueId": "13209655"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 9000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@56734edb[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4b89ba1c[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6aac3396[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@6cf33d85[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@430526a7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@48cb675c[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@43f0cd50[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@361adfbe[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5cc0f7c4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@4fa29a87[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@a7d446e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@6a7a8db0[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 9000,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Feb 18 15:04:26 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-02-18T15:04:26.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4265/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-01-15T14:14:29.000+0000",
        "updated": "2019-02-18T15:04:42.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 9000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Automatic conversion between Table and std::vector<std::tuple<..>>",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13209655/comment/16771150",
                    "id": "16771150",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "body": "Issue resolved by pull request 3404\n[https://github.com/apache/arrow/pull/3404]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "created": "2019-02-18T15:04:26.117+0000",
                    "updated": "2019-02-18T15:04:26.117+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|y0010g:",
        "customfield_12314139": null
    }
}