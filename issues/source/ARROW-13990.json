{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13400883",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13400883",
    "key": "ARROW-13990",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350323",
                "id": "12350323",
                "description": "",
                "name": "6.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-10-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/2",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/critical.svg",
            "name": "Critical",
            "id": "2"
        },
        "labels": [
            "kernel",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=icook",
            "name": "icook",
            "key": "icook",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=icook&avatarId=29388",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=icook&avatarId=29388",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=icook&avatarId=29388",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=icook&avatarId=29388"
            },
            "displayName": "Ian Cook",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333008",
                "id": "12333008",
                "name": "R"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 11400,
            "total": 11400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 11400,
            "total": 11400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13990/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 19,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13400883/worklog/652441",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11176:\nURL: https://github.com/apache/arrow/pull/11176#issuecomment-922033638\n\n\n   https://issues.apache.org/jira/browse/ARROW-13990\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-17T19:34:05.181+0000",
                    "updated": "2021-09-17T19:34:05.181+0000",
                    "started": "2021-09-17T19:34:05.180+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "652441",
                    "issueId": "13400883"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13400883/worklog/652494",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "edponce commented on a change in pull request #11176:\nURL: https://github.com/apache/arrow/pull/11176#discussion_r711392053\n\n\n\n##########\nFile path: r/tests/testthat/test-dplyr.R\n##########\n@@ -989,19 +989,86 @@ test_that(\"sign()\", {\n   )\n })\n \n-test_that(\"ceiling(), floor(), trunc()\", {\n+test_that(\"ceiling(), floor(), trunc(), round()\", {\n   df <- tibble(x = c(-1, -0.55, -0.5, -0.1, 0, 0.1, 0.5, 0.55, 1, NA, NaN))\n \n   expect_dplyr_equal(\n     input %>%\n       mutate(\n         c = ceiling(x),\n         f = floor(x),\n-        t = trunc(x)\n+        t = trunc(x),\n+        r = round(x)\n       ) %>%\n       collect(),\n     df\n   )\n+\n+  # with digits set to 1\n+  expect_dplyr_equal(\n+    input %>%\n+      filter(x %% 0.5 == 0) %>%\n+      mutate(r = round(x, 1)) %>%\n+      collect(),\n+    df\n+  )\n+\n+  # with digits set to -1\n+  expect_dplyr_equal(\n+    input %>%\n+      mutate(\n+        rd = round(floor(x * 111), -1), # double\n+        y = ifelse(is.nan(x), NA_integer_, x),\n+        ri = round(as.integer(y * 111), -1) # integer (with the NaN removed)\n+      ) %>%\n+      collect(),\n+    df\n+  )\n+\n+  # round(x, -2) is equivalent to round_to_multiple(x, 100)\n+  expect_equal(\n+    Table$create(x = 1111.1) %>%\n+      mutate(r = round(x, -2)) %>%\n+      collect(),\n+    Table$create(x = 1111.1) %>%\n+      mutate(r = arrow_round_to_multiple(x, options = list(multiple = 100))) %>%\n+      collect()\n+  )\n+\n+  skip_on_os(\"windows\") # float representation error might cause inconsistency\n+\n+  expect_dplyr_equal(\n+    input %>%\n+      mutate(r = round(x, 1)) %>%\n+      collect(),\n+    df\n+  )\n+\n+  # verify that round mode HALF_TO_EVEN which is what the round() binding uses\n+  # yields results consistent with R...\n+  expect_equal(\n+    as.vector(\n+      call_function(\n+        \"round\",\n+        Array$create(df$x),\n+        options = list(ndigits = 1L, round_mode = RoundMode$HALF_TO_EVEN)\n+      )\n+    ),\n+    round(df$x, 1)\n+  )\n+  # ... but round mode HALF_TOWARDS_ZERO does not.\n\nReview comment:\n       Are these inconsistencies attributed to floating-point error propagation or true errors in the resulting calculation?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-17T23:01:06.620+0000",
                    "updated": "2021-09-17T23:01:06.620+0000",
                    "started": "2021-09-17T23:01:06.619+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "652494",
                    "issueId": "13400883"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13400883/worklog/652497",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "edponce commented on a change in pull request #11176:\nURL: https://github.com/apache/arrow/pull/11176#discussion_r711394671\n\n\n\n##########\nFile path: r/tests/testthat/test-dplyr.R\n##########\n@@ -989,19 +989,86 @@ test_that(\"sign()\", {\n   )\n })\n \n-test_that(\"ceiling(), floor(), trunc()\", {\n+test_that(\"ceiling(), floor(), trunc(), round()\", {\n   df <- tibble(x = c(-1, -0.55, -0.5, -0.1, 0, 0.1, 0.5, 0.55, 1, NA, NaN))\n \n   expect_dplyr_equal(\n     input %>%\n       mutate(\n         c = ceiling(x),\n         f = floor(x),\n-        t = trunc(x)\n+        t = trunc(x),\n+        r = round(x)\n       ) %>%\n       collect(),\n     df\n   )\n+\n+  # with digits set to 1\n+  expect_dplyr_equal(\n+    input %>%\n+      filter(x %% 0.5 == 0) %>%\n+      mutate(r = round(x, 1)) %>%\n+      collect(),\n+    df\n+  )\n+\n+  # with digits set to -1\n+  expect_dplyr_equal(\n+    input %>%\n+      mutate(\n+        rd = round(floor(x * 111), -1), # double\n+        y = ifelse(is.nan(x), NA_integer_, x),\n+        ri = round(as.integer(y * 111), -1) # integer (with the NaN removed)\n+      ) %>%\n+      collect(),\n+    df\n+  )\n+\n+  # round(x, -2) is equivalent to round_to_multiple(x, 100)\n+  expect_equal(\n+    Table$create(x = 1111.1) %>%\n+      mutate(r = round(x, -2)) %>%\n+      collect(),\n+    Table$create(x = 1111.1) %>%\n+      mutate(r = arrow_round_to_multiple(x, options = list(multiple = 100))) %>%\n+      collect()\n+  )\n+\n+  skip_on_os(\"windows\") # float representation error might cause inconsistency\n+\n+  expect_dplyr_equal(\n+    input %>%\n+      mutate(r = round(x, 1)) %>%\n+      collect(),\n+    df\n+  )\n+\n+  # verify that round mode HALF_TO_EVEN which is what the round() binding uses\n+  # yields results consistent with R...\n+  expect_equal(\n+    as.vector(\n+      call_function(\n+        \"round\",\n+        Array$create(df$x),\n+        options = list(ndigits = 1L, round_mode = RoundMode$HALF_TO_EVEN)\n+      )\n+    ),\n+    round(df$x, 1)\n+  )\n+  # ... but round mode HALF_TOWARDS_ZERO does not.\n\nReview comment:\n       Basically, how large are the difference? `all.equal()` has parameters for controlling the tolerance of \"approximate equality\". This tolerance should be adjusted relative to the magnitudes of the values...so I am curious if these inconsistencies are observed throughout different ranges of values.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-17T23:10:54.404+0000",
                    "updated": "2021-09-17T23:10:54.404+0000",
                    "started": "2021-09-17T23:10:54.404+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "652497",
                    "issueId": "13400883"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13400883/worklog/652610",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook commented on a change in pull request #11176:\nURL: https://github.com/apache/arrow/pull/11176#discussion_r711590187\n\n\n\n##########\nFile path: r/tests/testthat/test-dplyr.R\n##########\n@@ -989,19 +989,86 @@ test_that(\"sign()\", {\n   )\n })\n \n-test_that(\"ceiling(), floor(), trunc()\", {\n+test_that(\"ceiling(), floor(), trunc(), round()\", {\n   df <- tibble(x = c(-1, -0.55, -0.5, -0.1, 0, 0.1, 0.5, 0.55, 1, NA, NaN))\n \n   expect_dplyr_equal(\n     input %>%\n       mutate(\n         c = ceiling(x),\n         f = floor(x),\n-        t = trunc(x)\n+        t = trunc(x),\n+        r = round(x)\n       ) %>%\n       collect(),\n     df\n   )\n+\n+  # with digits set to 1\n+  expect_dplyr_equal(\n+    input %>%\n+      filter(x %% 0.5 == 0) %>%\n+      mutate(r = round(x, 1)) %>%\n+      collect(),\n+    df\n+  )\n+\n+  # with digits set to -1\n+  expect_dplyr_equal(\n+    input %>%\n+      mutate(\n+        rd = round(floor(x * 111), -1), # double\n+        y = ifelse(is.nan(x), NA_integer_, x),\n+        ri = round(as.integer(y * 111), -1) # integer (with the NaN removed)\n+      ) %>%\n+      collect(),\n+    df\n+  )\n+\n+  # round(x, -2) is equivalent to round_to_multiple(x, 100)\n+  expect_equal(\n+    Table$create(x = 1111.1) %>%\n+      mutate(r = round(x, -2)) %>%\n+      collect(),\n+    Table$create(x = 1111.1) %>%\n+      mutate(r = arrow_round_to_multiple(x, options = list(multiple = 100))) %>%\n+      collect()\n+  )\n+\n+  skip_on_os(\"windows\") # float representation error might cause inconsistency\n\nReview comment:\n       ```suggestion\r\n     skip_on_cran() # float representation error might cause inconsistency\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-18T13:24:11.108+0000",
                    "updated": "2021-09-18T13:24:11.108+0000",
                    "started": "2021-09-18T13:24:11.108+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "652610",
                    "issueId": "13400883"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13400883/worklog/652611",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook commented on a change in pull request #11176:\nURL: https://github.com/apache/arrow/pull/11176#discussion_r711590205\n\n\n\n##########\nFile path: r/tests/testthat/test-dplyr.R\n##########\n@@ -989,19 +989,86 @@ test_that(\"sign()\", {\n   )\n })\n \n-test_that(\"ceiling(), floor(), trunc()\", {\n+test_that(\"ceiling(), floor(), trunc(), round()\", {\n   df <- tibble(x = c(-1, -0.55, -0.5, -0.1, 0, 0.1, 0.5, 0.55, 1, NA, NaN))\n \n   expect_dplyr_equal(\n     input %>%\n       mutate(\n         c = ceiling(x),\n         f = floor(x),\n-        t = trunc(x)\n+        t = trunc(x),\n+        r = round(x)\n       ) %>%\n       collect(),\n     df\n   )\n+\n+  # with digits set to 1\n+  expect_dplyr_equal(\n+    input %>%\n+      filter(x %% 0.5 == 0) %>%\n+      mutate(r = round(x, 1)) %>%\n+      collect(),\n+    df\n+  )\n+\n+  # with digits set to -1\n+  expect_dplyr_equal(\n+    input %>%\n+      mutate(\n+        rd = round(floor(x * 111), -1), # double\n+        y = ifelse(is.nan(x), NA_integer_, x),\n+        ri = round(as.integer(y * 111), -1) # integer (with the NaN removed)\n+      ) %>%\n+      collect(),\n+    df\n+  )\n+\n+  # round(x, -2) is equivalent to round_to_multiple(x, 100)\n+  expect_equal(\n+    Table$create(x = 1111.1) %>%\n+      mutate(r = round(x, -2)) %>%\n+      collect(),\n+    Table$create(x = 1111.1) %>%\n+      mutate(r = arrow_round_to_multiple(x, options = list(multiple = 100))) %>%\n+      collect()\n+  )\n+\n+  skip_on_os(\"windows\") # float representation error might cause inconsistency\n\nReview comment:\n       Skip some test on CRAN, not on Windows\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-18T13:24:34.611+0000",
                    "updated": "2021-09-18T13:24:34.611+0000",
                    "started": "2021-09-18T13:24:34.611+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "652611",
                    "issueId": "13400883"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13400883/worklog/652612",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook commented on a change in pull request #11176:\nURL: https://github.com/apache/arrow/pull/11176#discussion_r711590655\n\n\n\n##########\nFile path: r/tests/testthat/test-dplyr.R\n##########\n@@ -989,19 +989,86 @@ test_that(\"sign()\", {\n   )\n })\n \n-test_that(\"ceiling(), floor(), trunc()\", {\n+test_that(\"ceiling(), floor(), trunc(), round()\", {\n   df <- tibble(x = c(-1, -0.55, -0.5, -0.1, 0, 0.1, 0.5, 0.55, 1, NA, NaN))\n \n   expect_dplyr_equal(\n     input %>%\n       mutate(\n         c = ceiling(x),\n         f = floor(x),\n-        t = trunc(x)\n+        t = trunc(x),\n+        r = round(x)\n       ) %>%\n       collect(),\n     df\n   )\n+\n+  # with digits set to 1\n+  expect_dplyr_equal(\n+    input %>%\n+      filter(x %% 0.5 == 0) %>%\n+      mutate(r = round(x, 1)) %>%\n+      collect(),\n+    df\n+  )\n+\n+  # with digits set to -1\n+  expect_dplyr_equal(\n+    input %>%\n+      mutate(\n+        rd = round(floor(x * 111), -1), # double\n+        y = ifelse(is.nan(x), NA_integer_, x),\n+        ri = round(as.integer(y * 111), -1) # integer (with the NaN removed)\n+      ) %>%\n+      collect(),\n+    df\n+  )\n+\n+  # round(x, -2) is equivalent to round_to_multiple(x, 100)\n+  expect_equal(\n+    Table$create(x = 1111.1) %>%\n+      mutate(r = round(x, -2)) %>%\n+      collect(),\n+    Table$create(x = 1111.1) %>%\n+      mutate(r = arrow_round_to_multiple(x, options = list(multiple = 100))) %>%\n+      collect()\n+  )\n+\n+  skip_on_os(\"windows\") # float representation error might cause inconsistency\n+\n+  expect_dplyr_equal(\n+    input %>%\n+      mutate(r = round(x, 1)) %>%\n+      collect(),\n+    df\n+  )\n+\n+  # verify that round mode HALF_TO_EVEN which is what the round() binding uses\n+  # yields results consistent with R...\n+  expect_equal(\n+    as.vector(\n+      call_function(\n+        \"round\",\n+        Array$create(df$x),\n+        options = list(ndigits = 1L, round_mode = RoundMode$HALF_TO_EVEN)\n+      )\n+    ),\n+    round(df$x, 1)\n+  )\n+  # ... but round mode HALF_TOWARDS_ZERO does not.\n\nReview comment:\n       The R docs say:\r\n   >Note that for rounding off a 5, the IEC 60559 standard (see also \u2018IEEE 754\u2019) is expected to be used, \u2018go to the even digit\u2019. Therefore round(0.5) is 0 and round(-1.5) is -2. However, this is dependent on OS services and on representation error (since e.g. 0.15 is not represented exactly, the rounding rule applies to the represented number and not to the printed number, and so round(0.15, 1) could be either 0.1 or 0.2).\r\n   \r\n   So R's rounding mode is equivalent to the `HALF_TO_EVEN` mode in Arrow. The expectation beginning on line 1049 tests that. The expectation beginning on line 1060 tests the test.\r\n   \r\n   The default tolerance is sufficient to detect that but not detect floating-point error propagation.\r\n   \r\n   These tests are skipped on CRAN to avoid possible failures on CRAN test machines that could hypothetically be caused by the dependency of R's rounding behavior on OS services.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-18T13:29:08.591+0000",
                    "updated": "2021-09-18T13:29:08.591+0000",
                    "started": "2021-09-18T13:29:08.591+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "652612",
                    "issueId": "13400883"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13400883/worklog/652613",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook commented on a change in pull request #11176:\nURL: https://github.com/apache/arrow/pull/11176#discussion_r711590655\n\n\n\n##########\nFile path: r/tests/testthat/test-dplyr.R\n##########\n@@ -989,19 +989,86 @@ test_that(\"sign()\", {\n   )\n })\n \n-test_that(\"ceiling(), floor(), trunc()\", {\n+test_that(\"ceiling(), floor(), trunc(), round()\", {\n   df <- tibble(x = c(-1, -0.55, -0.5, -0.1, 0, 0.1, 0.5, 0.55, 1, NA, NaN))\n \n   expect_dplyr_equal(\n     input %>%\n       mutate(\n         c = ceiling(x),\n         f = floor(x),\n-        t = trunc(x)\n+        t = trunc(x),\n+        r = round(x)\n       ) %>%\n       collect(),\n     df\n   )\n+\n+  # with digits set to 1\n+  expect_dplyr_equal(\n+    input %>%\n+      filter(x %% 0.5 == 0) %>%\n+      mutate(r = round(x, 1)) %>%\n+      collect(),\n+    df\n+  )\n+\n+  # with digits set to -1\n+  expect_dplyr_equal(\n+    input %>%\n+      mutate(\n+        rd = round(floor(x * 111), -1), # double\n+        y = ifelse(is.nan(x), NA_integer_, x),\n+        ri = round(as.integer(y * 111), -1) # integer (with the NaN removed)\n+      ) %>%\n+      collect(),\n+    df\n+  )\n+\n+  # round(x, -2) is equivalent to round_to_multiple(x, 100)\n+  expect_equal(\n+    Table$create(x = 1111.1) %>%\n+      mutate(r = round(x, -2)) %>%\n+      collect(),\n+    Table$create(x = 1111.1) %>%\n+      mutate(r = arrow_round_to_multiple(x, options = list(multiple = 100))) %>%\n+      collect()\n+  )\n+\n+  skip_on_os(\"windows\") # float representation error might cause inconsistency\n+\n+  expect_dplyr_equal(\n+    input %>%\n+      mutate(r = round(x, 1)) %>%\n+      collect(),\n+    df\n+  )\n+\n+  # verify that round mode HALF_TO_EVEN which is what the round() binding uses\n+  # yields results consistent with R...\n+  expect_equal(\n+    as.vector(\n+      call_function(\n+        \"round\",\n+        Array$create(df$x),\n+        options = list(ndigits = 1L, round_mode = RoundMode$HALF_TO_EVEN)\n+      )\n+    ),\n+    round(df$x, 1)\n+  )\n+  # ... but round mode HALF_TOWARDS_ZERO does not.\n\nReview comment:\n       The R docs say:\r\n   >Note that for rounding off a 5, the IEC 60559 standard (see also \u2018IEEE 754\u2019) is expected to be used, \u2018go to the even digit\u2019. Therefore round(0.5) is 0 and round(-1.5) is -2. However, this is dependent on OS services and on representation error (since e.g. 0.15 is not represented exactly, the rounding rule applies to the represented number and not to the printed number, and so round(0.15, 1) could be either 0.1 or 0.2).\r\n   \r\n   So R's rounding mode is equivalent to the `HALF_TO_EVEN` mode in Arrow. The expectation beginning on line 1049 tests that. The expectation beginning on line 1060 effectively tests the test.\r\n   \r\n   In other words: I want to verify here that if we use a different round mode (such as `HALF_TOWARDS_ZERO`) it should return results that are _not_ equal to R's rounding behavior when applied to the test data. If someone in the future messes around with the test data, or increases the default tolerance of `all.equal()`, then the test beginning on line 1049 might still succeed but effectively not test what we want it to test. So the test on line 1060 is designed to fail if that happens.\r\n   \r\n   The default tolerance of `all.equal()` is sufficient to detect that but not detect floating-point error propagation.\r\n   \r\n   These tests are skipped on CRAN to avoid possible failures on CRAN test machines that could hypothetically be caused by the dependency of R's rounding behavior on OS services.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-18T13:36:24.118+0000",
                    "updated": "2021-09-18T13:36:24.118+0000",
                    "started": "2021-09-18T13:36:24.118+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "652613",
                    "issueId": "13400883"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13400883/worklog/652614",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook commented on a change in pull request #11176:\nURL: https://github.com/apache/arrow/pull/11176#discussion_r711590655\n\n\n\n##########\nFile path: r/tests/testthat/test-dplyr.R\n##########\n@@ -989,19 +989,86 @@ test_that(\"sign()\", {\n   )\n })\n \n-test_that(\"ceiling(), floor(), trunc()\", {\n+test_that(\"ceiling(), floor(), trunc(), round()\", {\n   df <- tibble(x = c(-1, -0.55, -0.5, -0.1, 0, 0.1, 0.5, 0.55, 1, NA, NaN))\n \n   expect_dplyr_equal(\n     input %>%\n       mutate(\n         c = ceiling(x),\n         f = floor(x),\n-        t = trunc(x)\n+        t = trunc(x),\n+        r = round(x)\n       ) %>%\n       collect(),\n     df\n   )\n+\n+  # with digits set to 1\n+  expect_dplyr_equal(\n+    input %>%\n+      filter(x %% 0.5 == 0) %>%\n+      mutate(r = round(x, 1)) %>%\n+      collect(),\n+    df\n+  )\n+\n+  # with digits set to -1\n+  expect_dplyr_equal(\n+    input %>%\n+      mutate(\n+        rd = round(floor(x * 111), -1), # double\n+        y = ifelse(is.nan(x), NA_integer_, x),\n+        ri = round(as.integer(y * 111), -1) # integer (with the NaN removed)\n+      ) %>%\n+      collect(),\n+    df\n+  )\n+\n+  # round(x, -2) is equivalent to round_to_multiple(x, 100)\n+  expect_equal(\n+    Table$create(x = 1111.1) %>%\n+      mutate(r = round(x, -2)) %>%\n+      collect(),\n+    Table$create(x = 1111.1) %>%\n+      mutate(r = arrow_round_to_multiple(x, options = list(multiple = 100))) %>%\n+      collect()\n+  )\n+\n+  skip_on_os(\"windows\") # float representation error might cause inconsistency\n+\n+  expect_dplyr_equal(\n+    input %>%\n+      mutate(r = round(x, 1)) %>%\n+      collect(),\n+    df\n+  )\n+\n+  # verify that round mode HALF_TO_EVEN which is what the round() binding uses\n+  # yields results consistent with R...\n+  expect_equal(\n+    as.vector(\n+      call_function(\n+        \"round\",\n+        Array$create(df$x),\n+        options = list(ndigits = 1L, round_mode = RoundMode$HALF_TO_EVEN)\n+      )\n+    ),\n+    round(df$x, 1)\n+  )\n+  # ... but round mode HALF_TOWARDS_ZERO does not.\n\nReview comment:\n       The R docs say:\r\n   >Note that for rounding off a 5, the IEC 60559 standard (see also \u2018IEEE 754\u2019) is expected to be used, \u2018go to the even digit\u2019. Therefore round(0.5) is 0 and round(-1.5) is -2. However, this is dependent on OS services and on representation error (since e.g. 0.15 is not represented exactly, the rounding rule applies to the represented number and not to the printed number, and so round(0.15, 1) could be either 0.1 or 0.2).\r\n   \r\n   So R's rounding mode is equivalent to the `HALF_TO_EVEN` mode in Arrow. The expectation beginning on line 1049 tests that. The expectation beginning on line 1060 effectively tests the test.\r\n   \r\n   In other words: I want to verify here that if we use a different round mode (such as `HALF_TOWARDS_ZERO`) it should return results that are _not_ equal to R's rounding behavior when applied to the test data. If someone in the future messes around with the test data, or increases the default tolerance of `all.equal()`, then the test beginning on line 1049 might still succeed but effectively not test what we want it to test. So the test on line 1060 is designed to fail if that happens.\r\n   \r\n   Currently the default tolerance of `all.equal()` is sufficient to detect that but not detect floating-point error propagation.\r\n   \r\n   These tests are skipped on CRAN to avoid possible failures on CRAN test machines that could hypothetically be caused by the dependency of R's rounding behavior on OS services.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-18T13:37:17.422+0000",
                    "updated": "2021-09-18T13:37:17.422+0000",
                    "started": "2021-09-18T13:37:17.421+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "652614",
                    "issueId": "13400883"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13400883/worklog/652615",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook commented on a change in pull request #11176:\nURL: https://github.com/apache/arrow/pull/11176#discussion_r711590655\n\n\n\n##########\nFile path: r/tests/testthat/test-dplyr.R\n##########\n@@ -989,19 +989,86 @@ test_that(\"sign()\", {\n   )\n })\n \n-test_that(\"ceiling(), floor(), trunc()\", {\n+test_that(\"ceiling(), floor(), trunc(), round()\", {\n   df <- tibble(x = c(-1, -0.55, -0.5, -0.1, 0, 0.1, 0.5, 0.55, 1, NA, NaN))\n \n   expect_dplyr_equal(\n     input %>%\n       mutate(\n         c = ceiling(x),\n         f = floor(x),\n-        t = trunc(x)\n+        t = trunc(x),\n+        r = round(x)\n       ) %>%\n       collect(),\n     df\n   )\n+\n+  # with digits set to 1\n+  expect_dplyr_equal(\n+    input %>%\n+      filter(x %% 0.5 == 0) %>%\n+      mutate(r = round(x, 1)) %>%\n+      collect(),\n+    df\n+  )\n+\n+  # with digits set to -1\n+  expect_dplyr_equal(\n+    input %>%\n+      mutate(\n+        rd = round(floor(x * 111), -1), # double\n+        y = ifelse(is.nan(x), NA_integer_, x),\n+        ri = round(as.integer(y * 111), -1) # integer (with the NaN removed)\n+      ) %>%\n+      collect(),\n+    df\n+  )\n+\n+  # round(x, -2) is equivalent to round_to_multiple(x, 100)\n+  expect_equal(\n+    Table$create(x = 1111.1) %>%\n+      mutate(r = round(x, -2)) %>%\n+      collect(),\n+    Table$create(x = 1111.1) %>%\n+      mutate(r = arrow_round_to_multiple(x, options = list(multiple = 100))) %>%\n+      collect()\n+  )\n+\n+  skip_on_os(\"windows\") # float representation error might cause inconsistency\n+\n+  expect_dplyr_equal(\n+    input %>%\n+      mutate(r = round(x, 1)) %>%\n+      collect(),\n+    df\n+  )\n+\n+  # verify that round mode HALF_TO_EVEN which is what the round() binding uses\n+  # yields results consistent with R...\n+  expect_equal(\n+    as.vector(\n+      call_function(\n+        \"round\",\n+        Array$create(df$x),\n+        options = list(ndigits = 1L, round_mode = RoundMode$HALF_TO_EVEN)\n+      )\n+    ),\n+    round(df$x, 1)\n+  )\n+  # ... but round mode HALF_TOWARDS_ZERO does not.\n\nReview comment:\n       The R docs say:\r\n   >Note that for rounding off a 5, the IEC 60559 standard (see also \u2018IEEE 754\u2019) is expected to be used, \u2018go to the even digit\u2019. Therefore round(0.5) is 0 and round(-1.5) is -2.\r\n   \r\n   So R's rounding mode is equivalent to the `HALF_TO_EVEN` mode in Arrow. The expectation beginning on line 1049 tests that. The expectation beginning on line 1060 effectively tests the test.\r\n   \r\n   In other words: I want to verify here that if we use a different round mode (such as `HALF_TOWARDS_ZERO`) it should return results that are _not_ equal to R's rounding behavior when applied to the test data. If someone in the future messes around with the test data, or increases the default tolerance of `all.equal()`, then the test beginning on line 1049 might still succeed but effectively not test what we want it to test. So the test on line 1060 is designed to fail if that happens.\r\n   \r\n   Currently the default tolerance of `all.equal()` is sufficient to detect that but not detect floating-point error propagation.\r\n   \r\n   The R docs go on to say:\r\n   >However, this is dependent on OS services and on representation error (since e.g. 0.15 is not represented exactly, the rounding rule applies to the represented number and not to the printed number, and so round(0.15, 1) could be either 0.1 or 0.2).\r\n   \r\n   This does not seem to be causing any problems in our CI systems, but I set these tests to be skipped on CRAN to avoid possible failures on the CRAN test machines that could hypothetically be caused by the dependency of R's rounding behavior on OS services.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-18T13:45:25.968+0000",
                    "updated": "2021-09-18T13:45:25.968+0000",
                    "started": "2021-09-18T13:45:25.967+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "652615",
                    "issueId": "13400883"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13400883/worklog/652641",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook commented on a change in pull request #11176:\nURL: https://github.com/apache/arrow/pull/11176#discussion_r711610886\n\n\n\n##########\nFile path: r/tests/testthat/test-dplyr.R\n##########\n@@ -989,19 +989,86 @@ test_that(\"sign()\", {\n   )\n })\n \n-test_that(\"ceiling(), floor(), trunc()\", {\n+test_that(\"ceiling(), floor(), trunc(), round()\", {\n   df <- tibble(x = c(-1, -0.55, -0.5, -0.1, 0, 0.1, 0.5, 0.55, 1, NA, NaN))\n \n   expect_dplyr_equal(\n     input %>%\n       mutate(\n         c = ceiling(x),\n         f = floor(x),\n-        t = trunc(x)\n+        t = trunc(x),\n+        r = round(x)\n       ) %>%\n       collect(),\n     df\n   )\n+\n+  # with digits set to 1\n+  expect_dplyr_equal(\n+    input %>%\n+      filter(x %% 0.5 == 0) %>%\n+      mutate(r = round(x, 1)) %>%\n+      collect(),\n+    df\n+  )\n+\n+  # with digits set to -1\n+  expect_dplyr_equal(\n+    input %>%\n+      mutate(\n+        rd = round(floor(x * 111), -1), # double\n+        y = ifelse(is.nan(x), NA_integer_, x),\n+        ri = round(as.integer(y * 111), -1) # integer (with the NaN removed)\n+      ) %>%\n+      collect(),\n+    df\n+  )\n+\n+  # round(x, -2) is equivalent to round_to_multiple(x, 100)\n+  expect_equal(\n+    Table$create(x = 1111.1) %>%\n+      mutate(r = round(x, -2)) %>%\n+      collect(),\n+    Table$create(x = 1111.1) %>%\n+      mutate(r = arrow_round_to_multiple(x, options = list(multiple = 100))) %>%\n+      collect()\n+  )\n+\n+  skip_on_cran() # float representation error might cause inconsistency\n\nReview comment:\n       ```suggestion\n     # float representation error might cause inconsistency\n     skip_on_cran()\n     skip_on_os(\"windows\")\n   ```\n   \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-18T16:31:39.354+0000",
                    "updated": "2021-09-18T16:31:39.354+0000",
                    "started": "2021-09-18T16:31:39.354+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "652641",
                    "issueId": "13400883"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13400883/worklog/652642",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook commented on a change in pull request #11176:\nURL: https://github.com/apache/arrow/pull/11176#discussion_r711590655\n\n\n\n##########\nFile path: r/tests/testthat/test-dplyr.R\n##########\n@@ -989,19 +989,86 @@ test_that(\"sign()\", {\n   )\n })\n \n-test_that(\"ceiling(), floor(), trunc()\", {\n+test_that(\"ceiling(), floor(), trunc(), round()\", {\n   df <- tibble(x = c(-1, -0.55, -0.5, -0.1, 0, 0.1, 0.5, 0.55, 1, NA, NaN))\n \n   expect_dplyr_equal(\n     input %>%\n       mutate(\n         c = ceiling(x),\n         f = floor(x),\n-        t = trunc(x)\n+        t = trunc(x),\n+        r = round(x)\n       ) %>%\n       collect(),\n     df\n   )\n+\n+  # with digits set to 1\n+  expect_dplyr_equal(\n+    input %>%\n+      filter(x %% 0.5 == 0) %>%\n+      mutate(r = round(x, 1)) %>%\n+      collect(),\n+    df\n+  )\n+\n+  # with digits set to -1\n+  expect_dplyr_equal(\n+    input %>%\n+      mutate(\n+        rd = round(floor(x * 111), -1), # double\n+        y = ifelse(is.nan(x), NA_integer_, x),\n+        ri = round(as.integer(y * 111), -1) # integer (with the NaN removed)\n+      ) %>%\n+      collect(),\n+    df\n+  )\n+\n+  # round(x, -2) is equivalent to round_to_multiple(x, 100)\n+  expect_equal(\n+    Table$create(x = 1111.1) %>%\n+      mutate(r = round(x, -2)) %>%\n+      collect(),\n+    Table$create(x = 1111.1) %>%\n+      mutate(r = arrow_round_to_multiple(x, options = list(multiple = 100))) %>%\n+      collect()\n+  )\n+\n+  skip_on_os(\"windows\") # float representation error might cause inconsistency\n+\n+  expect_dplyr_equal(\n+    input %>%\n+      mutate(r = round(x, 1)) %>%\n+      collect(),\n+    df\n+  )\n+\n+  # verify that round mode HALF_TO_EVEN which is what the round() binding uses\n+  # yields results consistent with R...\n+  expect_equal(\n+    as.vector(\n+      call_function(\n+        \"round\",\n+        Array$create(df$x),\n+        options = list(ndigits = 1L, round_mode = RoundMode$HALF_TO_EVEN)\n+      )\n+    ),\n+    round(df$x, 1)\n+  )\n+  # ... but round mode HALF_TOWARDS_ZERO does not.\n\nReview comment:\n       The R docs say:\r\n   >Note that for rounding off a 5, the IEC 60559 standard (see also \u2018IEEE 754\u2019) is expected to be used, \u2018go to the even digit\u2019. Therefore round(0.5) is 0 and round(-1.5) is -2.\r\n   \r\n   So R's rounding mode is equivalent to the `HALF_TO_EVEN` mode in Arrow. The expectation beginning on line 1049 tests that. The expectation beginning on line 1060 effectively tests the test.\r\n   \r\n   In other words: I want to verify here that if we use a different round mode (such as `HALF_TOWARDS_ZERO`) it should return results that are _not_ equal to R's rounding behavior when applied to the test data. If someone in the future messes around with the test data, or increases the default tolerance of `all.equal()`, then the test beginning on line 1049 might still succeed but effectively not test what we want it to test. So the test on line 1060 is designed to fail if that happens.\r\n   \r\n   Currently the default tolerance of `all.equal()` is sufficient to detect that but not detect floating-point error propagation.\r\n   \r\n   The R docs go on to say:\r\n   >However, this is dependent on OS services and on representation error (since e.g. 0.15 is not represented exactly, the rounding rule applies to the represented number and not to the printed number, and so round(0.15, 1) could be either 0.1 or 0.2).\r\n   \r\n   As usual \"depending on OS services\" means Windows does it the unexpected way, so this is skipped on Windows. It's also skipped on CRAN to avoid possible failures on the CRAN test machines.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-18T16:33:55.031+0000",
                    "updated": "2021-09-18T16:33:55.031+0000",
                    "started": "2021-09-18T16:33:55.030+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "652642",
                    "issueId": "13400883"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13400883/worklog/652720",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #11176:\nURL: https://github.com/apache/arrow/pull/11176#discussion_r711753899\n\n\n\n##########\nFile path: r/tests/testthat/test-dplyr.R\n##########\n@@ -989,19 +989,86 @@ test_that(\"sign()\", {\n   )\n })\n \n-test_that(\"ceiling(), floor(), trunc()\", {\n+test_that(\"ceiling(), floor(), trunc(), round()\", {\n   df <- tibble(x = c(-1, -0.55, -0.5, -0.1, 0, 0.1, 0.5, 0.55, 1, NA, NaN))\n \n   expect_dplyr_equal(\n     input %>%\n       mutate(\n         c = ceiling(x),\n         f = floor(x),\n-        t = trunc(x)\n+        t = trunc(x),\n+        r = round(x)\n       ) %>%\n       collect(),\n     df\n   )\n+\n+  # with digits set to 1\n+  expect_dplyr_equal(\n+    input %>%\n+      filter(x %% 0.5 == 0) %>%\n+      mutate(r = round(x, 1)) %>%\n+      collect(),\n+    df\n+  )\n+\n+  # with digits set to -1\n+  expect_dplyr_equal(\n+    input %>%\n+      mutate(\n+        rd = round(floor(x * 111), -1), # double\n+        y = ifelse(is.nan(x), NA_integer_, x),\n+        ri = round(as.integer(y * 111), -1) # integer (with the NaN removed)\n+      ) %>%\n+      collect(),\n+    df\n+  )\n+\n+  # round(x, -2) is equivalent to round_to_multiple(x, 100)\n+  expect_equal(\n+    Table$create(x = 1111.1) %>%\n+      mutate(r = round(x, -2)) %>%\n+      collect(),\n+    Table$create(x = 1111.1) %>%\n+      mutate(r = arrow_round_to_multiple(x, options = list(multiple = 100))) %>%\n+      collect()\n+  )\n+\n+  skip_on_os(\"windows\") # float representation error might cause inconsistency\n+\n+  expect_dplyr_equal(\n+    input %>%\n+      mutate(r = round(x, 1)) %>%\n+      collect(),\n+    df\n+  )\n+\n+  # verify that round mode HALF_TO_EVEN which is what the round() binding uses\n+  # yields results consistent with R...\n+  expect_equal(\n+    as.vector(\n+      call_function(\n+        \"round\",\n+        Array$create(df$x),\n+        options = list(ndigits = 1L, round_mode = RoundMode$HALF_TO_EVEN)\n+      )\n+    ),\n+    round(df$x, 1)\n+  )\n+  # ... but round mode HALF_TOWARDS_ZERO does not.\n\nReview comment:\n       Should we include a (truncated) version of that explanation in a comment here? I see that's what it's doing \u2014 but I'm not sure I would have without this comment.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-19T14:38:23.327+0000",
                    "updated": "2021-09-19T14:38:23.327+0000",
                    "started": "2021-09-19T14:38:23.327+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "652720",
                    "issueId": "13400883"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13400883/worklog/652750",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "edponce commented on a change in pull request #11176:\nURL: https://github.com/apache/arrow/pull/11176#discussion_r711814286\n\n\n\n##########\nFile path: r/tests/testthat/test-dplyr.R\n##########\n@@ -989,19 +989,86 @@ test_that(\"sign()\", {\n   )\n })\n \n-test_that(\"ceiling(), floor(), trunc()\", {\n+test_that(\"ceiling(), floor(), trunc(), round()\", {\n   df <- tibble(x = c(-1, -0.55, -0.5, -0.1, 0, 0.1, 0.5, 0.55, 1, NA, NaN))\n \n   expect_dplyr_equal(\n     input %>%\n       mutate(\n         c = ceiling(x),\n         f = floor(x),\n-        t = trunc(x)\n+        t = trunc(x),\n+        r = round(x)\n       ) %>%\n       collect(),\n     df\n   )\n+\n+  # with digits set to 1\n+  expect_dplyr_equal(\n+    input %>%\n+      filter(x %% 0.5 == 0) %>%\n+      mutate(r = round(x, 1)) %>%\n+      collect(),\n+    df\n+  )\n+\n+  # with digits set to -1\n+  expect_dplyr_equal(\n+    input %>%\n+      mutate(\n+        rd = round(floor(x * 111), -1), # double\n+        y = ifelse(is.nan(x), NA_integer_, x),\n+        ri = round(as.integer(y * 111), -1) # integer (with the NaN removed)\n+      ) %>%\n+      collect(),\n+    df\n+  )\n+\n+  # round(x, -2) is equivalent to round_to_multiple(x, 100)\n+  expect_equal(\n+    Table$create(x = 1111.1) %>%\n+      mutate(r = round(x, -2)) %>%\n+      collect(),\n+    Table$create(x = 1111.1) %>%\n+      mutate(r = arrow_round_to_multiple(x, options = list(multiple = 100))) %>%\n+      collect()\n+  )\n+\n+  skip_on_os(\"windows\") # float representation error might cause inconsistency\n+\n+  expect_dplyr_equal(\n+    input %>%\n+      mutate(r = round(x, 1)) %>%\n+      collect(),\n+    df\n+  )\n+\n+  # verify that round mode HALF_TO_EVEN which is what the round() binding uses\n+  # yields results consistent with R...\n+  expect_equal(\n+    as.vector(\n+      call_function(\n+        \"round\",\n+        Array$create(df$x),\n+        options = list(ndigits = 1L, round_mode = RoundMode$HALF_TO_EVEN)\n+      )\n+    ),\n+    round(df$x, 1)\n+  )\n+  # ... but round mode HALF_TOWARDS_ZERO does not.\n\nReview comment:\n       @ianmcook Thanks for the clarification, I understand now the valid/invalid tests you set up. I previously thought that HALF_TOWARDS_ZERO was set for both approaches but errors were showing up. It was my mistake, I did not read carefully the comments.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-19T22:40:47.692+0000",
                    "updated": "2021-09-19T22:40:47.692+0000",
                    "started": "2021-09-19T22:40:47.692+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "652750",
                    "issueId": "13400883"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13400883/worklog/652751",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "edponce commented on pull request #11176:\nURL: https://github.com/apache/arrow/pull/11176#issuecomment-922548645\n\n\n   FWIW, there are descriptions of the `enum RoundMode` in the C++ [API code](https://github.com/apache/arrow/blob/master/cpp/src/arrow/compute/api_scalar.h#L56-L79) and [docs](https://github.com/apache/arrow/blob/master/docs/source/cpp/compute.rst#rounding-functions).\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-19T22:44:21.626+0000",
                    "updated": "2021-09-19T22:44:21.626+0000",
                    "started": "2021-09-19T22:44:21.626+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "652751",
                    "issueId": "13400883"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13400883/worklog/653177",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook commented on a change in pull request #11176:\nURL: https://github.com/apache/arrow/pull/11176#discussion_r712478432\n\n\n\n##########\nFile path: r/tests/testthat/test-dplyr.R\n##########\n@@ -989,19 +989,86 @@ test_that(\"sign()\", {\n   )\n })\n \n-test_that(\"ceiling(), floor(), trunc()\", {\n+test_that(\"ceiling(), floor(), trunc(), round()\", {\n   df <- tibble(x = c(-1, -0.55, -0.5, -0.1, 0, 0.1, 0.5, 0.55, 1, NA, NaN))\n \n   expect_dplyr_equal(\n     input %>%\n       mutate(\n         c = ceiling(x),\n         f = floor(x),\n-        t = trunc(x)\n+        t = trunc(x),\n+        r = round(x)\n       ) %>%\n       collect(),\n     df\n   )\n+\n+  # with digits set to 1\n+  expect_dplyr_equal(\n+    input %>%\n+      filter(x %% 0.5 == 0) %>%\n+      mutate(r = round(x, 1)) %>%\n+      collect(),\n+    df\n+  )\n+\n+  # with digits set to -1\n+  expect_dplyr_equal(\n+    input %>%\n+      mutate(\n+        rd = round(floor(x * 111), -1), # double\n+        y = ifelse(is.nan(x), NA_integer_, x),\n+        ri = round(as.integer(y * 111), -1) # integer (with the NaN removed)\n+      ) %>%\n+      collect(),\n+    df\n+  )\n+\n+  # round(x, -2) is equivalent to round_to_multiple(x, 100)\n+  expect_equal(\n+    Table$create(x = 1111.1) %>%\n+      mutate(r = round(x, -2)) %>%\n+      collect(),\n+    Table$create(x = 1111.1) %>%\n+      mutate(r = arrow_round_to_multiple(x, options = list(multiple = 100))) %>%\n+      collect()\n+  )\n+\n+  skip_on_os(\"windows\") # float representation error might cause inconsistency\n+\n+  expect_dplyr_equal(\n+    input %>%\n+      mutate(r = round(x, 1)) %>%\n+      collect(),\n+    df\n+  )\n+\n+  # verify that round mode HALF_TO_EVEN which is what the round() binding uses\n+  # yields results consistent with R...\n+  expect_equal(\n+    as.vector(\n+      call_function(\n+        \"round\",\n+        Array$create(df$x),\n+        options = list(ndigits = 1L, round_mode = RoundMode$HALF_TO_EVEN)\n+      )\n+    ),\n+    round(df$x, 1)\n+  )\n+  # ... but round mode HALF_TOWARDS_ZERO does not.\n\nReview comment:\n       Thanks @edponce and @jonkeane! I expanded the comments per these suggestions in c3d5d04\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-20T20:09:14.211+0000",
                    "updated": "2021-09-20T20:09:14.211+0000",
                    "started": "2021-09-20T20:09:14.210+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "653177",
                    "issueId": "13400883"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13400883/worklog/653185",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #11176:\nURL: https://github.com/apache/arrow/pull/11176#discussion_r712490536\n\n\n\n##########\nFile path: r/tests/testthat/test-dplyr.R\n##########\n@@ -989,19 +989,98 @@ test_that(\"sign()\", {\n   )\n })\n \n-test_that(\"ceiling(), floor(), trunc()\", {\n+test_that(\"ceiling(), floor(), trunc(), round()\", {\n   df <- tibble(x = c(-1, -0.55, -0.5, -0.1, 0, 0.1, 0.5, 0.55, 1, NA, NaN))\n \n   expect_dplyr_equal(\n     input %>%\n       mutate(\n         c = ceiling(x),\n         f = floor(x),\n-        t = trunc(x)\n+        t = trunc(x),\n+        r = round(x)\n       ) %>%\n       collect(),\n     df\n   )\n+\n+  # with digits set to 1\n+  expect_dplyr_equal(\n+    input %>%\n+      filter(x %% 0.5 == 0) %>% # filter out indeterminate cases (see below)\n+      mutate(r = round(x, 1)) %>%\n+      collect(),\n+    df\n+  )\n+\n+  # with digits set to -1\n+  expect_dplyr_equal(\n+    input %>%\n+      mutate(\n+        rd = round(floor(x * 111), -1), # double\n+        y = ifelse(is.nan(x), NA_integer_, x),\n+        ri = round(as.integer(y * 111), -1) # integer (with the NaN removed)\n+      ) %>%\n+      collect(),\n+    df\n+  )\n+\n+  # round(x, -2) is equivalent to round_to_multiple(x, 100)\n+  expect_equal(\n+    Table$create(x = 1111.1) %>%\n+      mutate(r = round(x, -2)) %>%\n+      collect(),\n+    Table$create(x = 1111.1) %>%\n+      mutate(r = arrow_round_to_multiple(x, options = list(multiple = 100))) %>%\n+      collect()\n+  )\n+\n+  # For consistency with base R, the binding for round() uses the Arrow\n+  # library's HALF_TO_EVEN round mode, but the expectations *above* would pass\n+  # even if another round mode were used. The expectations *below* should fail\n+  # with other round modes. However, some decimal numbers cannot be represented\n+  # exactly as floating point numbers, and for the ones that also end in 5 (such\n+  # as 0.55), R's rounding behavior is indeterminate: it will vary depending on\n\nReview comment:\n       \ud83e\udd2f  It's a wonder we ever get anything done\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-20T20:28:02.290+0000",
                    "updated": "2021-09-20T20:28:02.290+0000",
                    "started": "2021-09-20T20:28:02.289+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "653185",
                    "issueId": "13400883"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13400883/worklog/653192",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #11176:\nURL: https://github.com/apache/arrow/pull/11176#discussion_r712493931\n\n\n\n##########\nFile path: r/src/compute.cpp\n##########\n@@ -449,6 +449,34 @@ std::shared_ptr<arrow::compute::FunctionOptions> make_compute_options(\n     return std::make_shared<Options>(cpp11::as_cpp<int64_t>(options[\"pivot\"]));\n   }\n \n+  if (func_name == \"round\") {\n+    using Options = arrow::compute::RoundOptions;\n+    auto out = std::make_shared<Options>(Options::Defaults());\n+    if (!Rf_isNull(options[\"ndigits\"])) {\n+      out->ndigits = cpp11::as_cpp<int64_t>(options[\"ndigits\"]);\n+    }\n+    SEXP round_mode = options[\"round_mode\"];\n+    if (!Rf_isNull(round_mode) && TYPEOF(round_mode) == INTSXP &&\n+        XLENGTH(round_mode) == 1) {\n\nReview comment:\n       I _think_ you can get away without this validation here (and below) because `cpp11::as_cpp` should correctly reject bad input (and this validation check just silently ignores garbage anyway).\r\n   \r\n   ```suggestion\r\n       if (!Rf_isNull(round_mode)) {\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-20T20:33:43.136+0000",
                    "updated": "2021-09-20T20:33:43.136+0000",
                    "started": "2021-09-20T20:33:43.136+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "653192",
                    "issueId": "13400883"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13400883/worklog/653196",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #11176:\nURL: https://github.com/apache/arrow/pull/11176#discussion_r712499201\n\n\n\n##########\nFile path: r/src/compute.cpp\n##########\n@@ -449,6 +449,33 @@ std::shared_ptr<arrow::compute::FunctionOptions> make_compute_options(\n     return std::make_shared<Options>(cpp11::as_cpp<int64_t>(options[\"pivot\"]));\n   }\n \n+  if (func_name == \"round\") {\n+    using Options = arrow::compute::RoundOptions;\n+    auto out = std::make_shared<Options>(Options::Defaults());\n+    if (!Rf_isNull(options[\"ndigits\"])) {\n+      out->ndigits = cpp11::as_cpp<int64_t>(options[\"ndigits\"]);\n+    }\n+    SEXP round_mode = options[\"round_mode\"];\n+    if (!Rf_isNull(round_mode)) {\n+      out->round_mode = cpp11::as_cpp<enum arrow::compute::RoundMode>(round_mode);\n+    }\n+    return out;\n+  }\n+\n+  if (func_name == \"round_to_multiple\") {\n+    using Options = arrow::compute::RoundToMultipleOptions;\n+    auto out = std::make_shared<Options>(Options::Defaults());\n+    if (!Rf_isNull(options[\"multiple\"])) {\n+      out->multiple = cpp11::as_cpp<double>(options[\"multiple\"]);\n+    }\n+    SEXP round_mode = options[\"round_mode\"];\n+    if (!Rf_isNull(round_mode) && TYPEOF(round_mode) == INTSXP &&\n+        XLENGTH(round_mode) == 1) {\n\nReview comment:\n       same here\r\n   \r\n   ```suggestion\r\n       if (!Rf_isNull(round_mode)) {\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-20T20:41:38.241+0000",
                    "updated": "2021-09-20T20:41:38.241+0000",
                    "started": "2021-09-20T20:41:38.241+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "653196",
                    "issueId": "13400883"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13400883/worklog/653350",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook closed pull request #11176:\nURL: https://github.com/apache/arrow/pull/11176\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-21T02:34:09.130+0000",
                    "updated": "2021-09-21T02:34:09.130+0000",
                    "started": "2021-09-21T02:34:09.129+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "653350",
                    "issueId": "13400883"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 11400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@60be9fcf[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1e055df6[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@36c32d06[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@21d2cc5[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5071c641[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@4e8bc6dd[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@610f6917[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@a9f0af7[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5482862b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@44af1f48[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5e72911b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@2c48e090[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 11400,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Sep 21 02:34:01 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-09-21T02:34:01.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13990/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2021-09-13T21:03:57.000+0000",
        "updated": "2021-09-21T02:34:10.000+0000",
        "timeoriginalestimate": null,
        "description": "Followup to ARROW-12744",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 11400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[R] Bindings for round kernels",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13400883/comment/17417890",
                    "id": "17417890",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=icook",
                        "name": "icook",
                        "key": "icook",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=icook&avatarId=29388",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=icook&avatarId=29388",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=icook&avatarId=29388",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=icook&avatarId=29388"
                        },
                        "displayName": "Ian Cook",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 11176\n[https://github.com/apache/arrow/pull/11176]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=icook",
                        "name": "icook",
                        "key": "icook",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=icook&avatarId=29388",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=icook&avatarId=29388",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=icook&avatarId=29388",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=icook&avatarId=29388"
                        },
                        "displayName": "Ian Cook",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-09-21T02:34:01.083+0000",
                    "updated": "2021-09-21T02:34:01.083+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0uvg0:",
        "customfield_12314139": null
    }
}