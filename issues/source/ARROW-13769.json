{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13397610",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397610",
    "key": "ARROW-13769",
    "fields": {
        "fixVersions": [],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/10011",
            "id": "10011",
            "description": "Won't Do",
            "name": "Won't Do"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "good-first-issue",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": null,
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
            "name": "Closed",
            "id": "6",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "aggregateprogress": {
            "progress": 34200,
            "total": 34200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 34200,
            "total": 34200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13769/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 57,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397610/worklog/680172",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "9prady9 opened a new pull request #11674:\nURL: https://github.com/apache/arrow/pull/11674\n\n\n   Currently there are two versions of Bitmap operations in the API.\r\n   \r\n   1. Returns a Buffer object\r\n   2. Updates the output pointer passed in as function argument\r\n   \r\n   With this change, the second (2) version of the function can now return bitmap operation result's validity count. All bitmap ops are updated to reflect the same.\r\n   \r\n   This new output argument passed to the function should be pointer to single value (only first value is used if pointer to an array is passed). If this pointer is set to `nullptr`, the output validity count isn't calculated.\r\n   \r\n   When output validity count is calculated, there is a performance drop of 10-20% in number of bytes processed per second as per bit-util-benchmark.\r\n   \r\n   ![chart](https://user-images.githubusercontent.com/3270458/141252701-a406dde4-d0b0-4b6a-b392-d9e915ed34a0.png)\r\n   \r\n   In the aligned bitmapOp case, I wonder if running popcount of word instead of looking up each byte in hash is faster - unlikely I would think as a first thought.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-11T07:07:20.259+0000",
                    "updated": "2021-11-11T07:07:20.259+0000",
                    "started": "2021-11-11T07:07:20.258+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "680172",
                    "issueId": "13397610"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397610/worklog/680173",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11674:\nURL: https://github.com/apache/arrow/pull/11674#issuecomment-966044288\n\n\n   https://issues.apache.org/jira/browse/ARROW-13769\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-11T07:07:39.929+0000",
                    "updated": "2021-11-11T07:07:39.929+0000",
                    "started": "2021-11-11T07:07:39.928+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "680173",
                    "issueId": "13397610"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397610/worklog/680641",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on a change in pull request #11674:\nURL: https://github.com/apache/arrow/pull/11674#discussion_r747976508\n\n\n\n##########\nFile path: cpp/src/arrow/util/bit_util_benchmark.cc\n##########\n@@ -159,9 +159,11 @@ static void BenchmarkAndImpl(benchmark::State& state, DoAnd&& do_and) {\n \n static void BenchmarkBitmapAnd(benchmark::State& state) {\n   BenchmarkAndImpl(state, [](const internal::Bitmap(&bitmaps)[2], internal::Bitmap* out) {\n+    int64_t outPopCount = 0;\n     internal::BitmapAnd(bitmaps[0].buffer()->data(), bitmaps[0].offset(),\n                         bitmaps[1].buffer()->data(), bitmaps[1].offset(),\n-                        bitmaps[0].length(), 0, out->buffer()->mutable_data());\n+                        bitmaps[0].length(), 0, out->buffer()->mutable_data(),\n+                        &outPopCount);\n\nReview comment:\n       Will you append `benchmark::DoNotOptimize(outPopCount)`?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-12T04:45:30.942+0000",
                    "updated": "2021-11-12T04:45:30.942+0000",
                    "started": "2021-11-12T04:45:30.942+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "680641",
                    "issueId": "13397610"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397610/worklog/680646",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on a change in pull request #11674:\nURL: https://github.com/apache/arrow/pull/11674#discussion_r747979858\n\n\n\n##########\nFile path: cpp/src/arrow/util/bitmap_ops.cc\n##########\n@@ -249,59 +249,92 @@ void AlignedBitmapOp(const uint8_t* left, int64_t left_offset, const uint8_t* ri\n   left += left_offset / 8;\n   right += right_offset / 8;\n   out += out_offset / 8;\n+  uint64_t outPopCount = 0;\n   for (int64_t i = 0; i < nbytes; ++i) {\n     out[i] = op(left[i], right[i]);\n+    if (ComputeNewValidityCount) {\n+      outPopCount += BitUtil::kBytePopcount[out[i]];\n\nReview comment:\n       This extra line may disable compiler to vectorize the loop and cause big performance regression.[1]\r\n   But from your benchmark result, there's at most 20% difference.\r\n   Would you list the test names in your benchmark result graph? BitmapAnd related benchmark is about 9G/s on my test machine (no faster than most desktop pc), looks your test result is about 400M/s.\r\n   \r\n   [1] https://quick-bench.com/q/ko7aKpF3R2N8G2yqN3g5mUKgOPg\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-12T04:57:35.281+0000",
                    "updated": "2021-11-12T04:57:35.281+0000",
                    "started": "2021-11-12T04:57:35.281+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "680646",
                    "issueId": "13397610"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397610/worklog/680706",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "9prady9 commented on a change in pull request #11674:\nURL: https://github.com/apache/arrow/pull/11674#discussion_r748047932\n\n\n\n##########\nFile path: cpp/src/arrow/util/bitmap_ops.cc\n##########\n@@ -249,59 +249,92 @@ void AlignedBitmapOp(const uint8_t* left, int64_t left_offset, const uint8_t* ri\n   left += left_offset / 8;\n   right += right_offset / 8;\n   out += out_offset / 8;\n+  uint64_t outPopCount = 0;\n   for (int64_t i = 0; i < nbytes; ++i) {\n     out[i] = op(left[i], right[i]);\n+    if (ComputeNewValidityCount) {\n+      outPopCount += BitUtil::kBytePopcount[out[i]];\n\nReview comment:\n       I have checked it with clang shouldn't be different with gcc/msvc. Here is the godbolt snippet with vectorization flags showing same type of vectorization happening with pop-count and without. https://godbolt.org/z/bGhdGEjr6\r\n   \r\n   Yeah, M/s is my mistake. Those are numbers from debug build I did, I forgot to switch to release. With release, the  numbers are much higher. I shall update the description with new numbers soon and with benchmark labels.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-12T08:04:32.709+0000",
                    "updated": "2021-11-12T08:04:32.709+0000",
                    "started": "2021-11-12T08:04:32.709+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "680706",
                    "issueId": "13397610"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397610/worklog/680708",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "9prady9 commented on a change in pull request #11674:\nURL: https://github.com/apache/arrow/pull/11674#discussion_r748047932\n\n\n\n##########\nFile path: cpp/src/arrow/util/bitmap_ops.cc\n##########\n@@ -249,59 +249,92 @@ void AlignedBitmapOp(const uint8_t* left, int64_t left_offset, const uint8_t* ri\n   left += left_offset / 8;\n   right += right_offset / 8;\n   out += out_offset / 8;\n+  uint64_t outPopCount = 0;\n   for (int64_t i = 0; i < nbytes; ++i) {\n     out[i] = op(left[i], right[i]);\n+    if (ComputeNewValidityCount) {\n+      outPopCount += BitUtil::kBytePopcount[out[i]];\n\nReview comment:\n       I have checked it with clang shouldn't be different with gcc/msvc. Here is the godbolt snippet with vectorization flags showing same type of vectorization happening with pop-count and without. https://godbolt.org/z/bGhdGEjr6 But I will check with gcc/msvc too\r\n   \r\n   Yeah, M/s is my mistake. Those are numbers from debug build I did, I forgot to switch to release. With release, the  numbers are much higher. I shall update the description with new numbers soon and with benchmark labels.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-12T08:06:41.526+0000",
                    "updated": "2021-11-12T08:06:41.526+0000",
                    "started": "2021-11-12T08:06:41.526+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "680708",
                    "issueId": "13397610"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397610/worklog/680710",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on a change in pull request #11674:\nURL: https://github.com/apache/arrow/pull/11674#discussion_r748054816\n\n\n\n##########\nFile path: cpp/src/arrow/util/bitmap_ops.cc\n##########\n@@ -249,59 +249,92 @@ void AlignedBitmapOp(const uint8_t* left, int64_t left_offset, const uint8_t* ri\n   left += left_offset / 8;\n   right += right_offset / 8;\n   out += out_offset / 8;\n+  uint64_t outPopCount = 0;\n   for (int64_t i = 0; i < nbytes; ++i) {\n     out[i] = op(left[i], right[i]);\n+    if (ComputeNewValidityCount) {\n+      outPopCount += BitUtil::kBytePopcount[out[i]];\n\nReview comment:\n       > Here is the godbolt snippet with vectorization flags showing same type of vectorization happening with pop-count and without. https://godbolt.org/z/bGhdGEjr6 But I will check with gcc/msvc too\r\n   \r\n   In your test code, line 34~43.\r\n   The problem is that `v` is calculated but never used. So compiler will simply delete all the code calculating it.\r\n   Change the function to let it return `v`, the generated code will be totally different.\r\n   \r\n   ```cpp\r\n   void WithPopcount(const uint8_t* a, const uint8_t* b, const int N) {\r\n     std::vector<uint8_t> c;\r\n     c.reserve(N);\r\n   \r\n     unsigned int v = 0;\r\n     for (int i = 0; i < N; ++i) {\r\n       c[i] = a[i] & b[i];\r\n       v += table[c[i]];\r\n     }\r\n   }\r\n   ```\r\n   \r\n   > Yeah, M/s is my mistake. Those are numbers from debug build I did, I forgot to switch to release. With release, the numbers are much higher. I shall update the description with new numbers soon and with benchmark labels.\r\n   \r\n   No worry, it happens.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-12T08:17:31.798+0000",
                    "updated": "2021-11-12T08:17:31.798+0000",
                    "started": "2021-11-12T08:17:31.798+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "680710",
                    "issueId": "13397610"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397610/worklog/680712",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "9prady9 commented on a change in pull request #11674:\nURL: https://github.com/apache/arrow/pull/11674#discussion_r748060188\n\n\n\n##########\nFile path: cpp/src/arrow/util/bitmap_ops.cc\n##########\n@@ -249,59 +249,92 @@ void AlignedBitmapOp(const uint8_t* left, int64_t left_offset, const uint8_t* ri\n   left += left_offset / 8;\n   right += right_offset / 8;\n   out += out_offset / 8;\n+  uint64_t outPopCount = 0;\n   for (int64_t i = 0; i < nbytes; ++i) {\n     out[i] = op(left[i], right[i]);\n+    if (ComputeNewValidityCount) {\n+      outPopCount += BitUtil::kBytePopcount[out[i]];\n\nReview comment:\n       Upon quick check, similar isn't observed on gcc and msvc. Will push updates once they are ready. Thank you for the feedback!\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-12T08:26:57.071+0000",
                    "updated": "2021-11-12T08:26:57.071+0000",
                    "started": "2021-11-12T08:26:57.071+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "680712",
                    "issueId": "13397610"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397610/worklog/680714",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "9prady9 commented on a change in pull request #11674:\nURL: https://github.com/apache/arrow/pull/11674#discussion_r748060188\n\n\n\n##########\nFile path: cpp/src/arrow/util/bitmap_ops.cc\n##########\n@@ -249,59 +249,92 @@ void AlignedBitmapOp(const uint8_t* left, int64_t left_offset, const uint8_t* ri\n   left += left_offset / 8;\n   right += right_offset / 8;\n   out += out_offset / 8;\n+  uint64_t outPopCount = 0;\n   for (int64_t i = 0; i < nbytes; ++i) {\n     out[i] = op(left[i], right[i]);\n+    if (ComputeNewValidityCount) {\n+      outPopCount += BitUtil::kBytePopcount[out[i]];\n\nReview comment:\n       Upon quick check, similar behaviour isn't observed on gcc and msvc. Will push updates once they are ready. Thank you for the feedback!\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-12T08:27:34.859+0000",
                    "updated": "2021-11-12T08:27:34.859+0000",
                    "started": "2021-11-12T08:27:34.859+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "680714",
                    "issueId": "13397610"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397610/worklog/680762",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "9prady9 commented on a change in pull request #11674:\nURL: https://github.com/apache/arrow/pull/11674#discussion_r748163500\n\n\n\n##########\nFile path: cpp/src/arrow/util/bitmap_ops.cc\n##########\n@@ -249,59 +249,92 @@ void AlignedBitmapOp(const uint8_t* left, int64_t left_offset, const uint8_t* ri\n   left += left_offset / 8;\n   right += right_offset / 8;\n   out += out_offset / 8;\n+  uint64_t outPopCount = 0;\n   for (int64_t i = 0; i < nbytes; ++i) {\n     out[i] = op(left[i], right[i]);\n+    if (ComputeNewValidityCount) {\n+      outPopCount += BitUtil::kBytePopcount[out[i]];\n\nReview comment:\n       > The problem is that v is calculated but never used. So compiler will simply delete all the code calculating it.\r\n   > Change the function to let it return v, the generated code will be totally different.\r\n   \r\n   Makes sense. After playing with it for few minutes, saving result to register and then using that for other two calculations is what letting compiler vectorize the loop on all three compilers consistently.\r\n   \r\n   - clang - https://godbolt.org/z/sKvodGzbr\r\n   - gcc - https://godbolt.org/z/Kdc38P7fx\r\n   - msvc - https://godbolt.org/z/n1so9PbG3\r\n   \r\n   In any case, eventually I dropped the above approach. \r\n   \r\n   I had a version of CountSetBits earlier that was doing popcount on 64-bit words. But I removed that in favour of lookup during the bitmap op assuming lookup might be faster. It turned out just doing popcount finally on the whole array is more efficient than clubbing the pop-count with bitmapOp .\r\n   \r\n   Please check the updated description for new numbers\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-12T11:02:47.661+0000",
                    "updated": "2021-11-12T11:02:47.661+0000",
                    "started": "2021-11-12T11:02:47.660+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "680762",
                    "issueId": "13397610"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397610/worklog/680766",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "9prady9 commented on pull request #11674:\nURL: https://github.com/apache/arrow/pull/11674#issuecomment-967022729\n\n\n   The difference in performance is mostly with bitmap op code path that is optimized for aligned access.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-12T11:17:06.776+0000",
                    "updated": "2021-11-12T11:17:06.776+0000",
                    "started": "2021-11-12T11:17:06.776+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "680766",
                    "issueId": "13397610"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397610/worklog/680772",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "9prady9 edited a comment on pull request #11674:\nURL: https://github.com/apache/arrow/pull/11674#issuecomment-967022729\n\n\n   The difference in performance is mostly with bitmap op code path that is optimized for aligned access.\r\n   \r\n   I am looking into the test failures.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-12T11:34:17.342+0000",
                    "updated": "2021-11-12T11:34:17.342+0000",
                    "started": "2021-11-12T11:34:17.342+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "680772",
                    "issueId": "13397610"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397610/worklog/680788",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "9prady9 edited a comment on pull request #11674:\nURL: https://github.com/apache/arrow/pull/11674#issuecomment-967022729\n\n\n   The difference in performance is mostly with bitmap op code path that is optimized for aligned access.\r\n   \r\n   ~I am looking into the test failures.~ Trivial error, fixed it. The benchmark numbers stand good.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-12T12:13:57.913+0000",
                    "updated": "2021-11-12T12:13:57.913+0000",
                    "started": "2021-11-12T12:13:57.913+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "680788",
                    "issueId": "13397610"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397610/worklog/681088",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on a change in pull request #11674:\nURL: https://github.com/apache/arrow/pull/11674#discussion_r748706286\n\n\n\n##########\nFile path: cpp/src/arrow/util/bitmap_ops.cc\n##########\n@@ -237,71 +237,105 @@ bool OptionalBitmapEquals(const std::shared_ptr<Buffer>& left, int64_t left_offs\n \n namespace {\n \n-template <template <typename> class BitOp>\n-void AlignedBitmapOp(const uint8_t* left, int64_t left_offset, const uint8_t* right,\n-                     int64_t right_offset, uint8_t* out, int64_t out_offset,\n-                     int64_t length) {\n+template <template <typename> class BitOp, bool ComputeNewValidityCount>\n+int64_t AlignedBitmapOp(const uint8_t* left, int64_t left_offset, const uint8_t* right,\n+                        int64_t right_offset, uint8_t* out, int64_t out_offset,\n+                        int64_t length) {\n   BitOp<uint8_t> op;\n   DCHECK_EQ(left_offset % 8, right_offset % 8);\n   DCHECK_EQ(left_offset % 8, out_offset % 8);\n \n+  uint8_t* outFront = out;\n   const int64_t nbytes = BitUtil::BytesForBits(length + left_offset % 8);\n   left += left_offset / 8;\n   right += right_offset / 8;\n   out += out_offset / 8;\n+  uint64_t outPopCount = 0;\n   for (int64_t i = 0; i < nbytes; ++i) {\n     out[i] = op(left[i], right[i]);\n   }\n+  if (ComputeNewValidityCount) {\n+    outPopCount = CountSetBits(outFront, out_offset, length);\n+  }\n+  return outPopCount;\n }\n \n-template <template <typename> class BitOp>\n-void UnalignedBitmapOp(const uint8_t* left, int64_t left_offset, const uint8_t* right,\n-                       int64_t right_offset, uint8_t* out, int64_t out_offset,\n-                       int64_t length) {\n+template <template <typename> class BitOp, bool ComputeNewValidityCount>\n+int64_t UnalignedBitmapOp(const uint8_t* left, int64_t left_offset, const uint8_t* right,\n+                          int64_t right_offset, uint8_t* out, int64_t out_offset,\n+                          int64_t length) {\n   BitOp<uint64_t> op_word;\n   BitOp<uint8_t> op_byte;\n \n+  uint64_t outPopCount = 0;\n   auto left_reader = internal::BitmapWordReader<uint64_t>(left, left_offset, length);\n   auto right_reader = internal::BitmapWordReader<uint64_t>(right, right_offset, length);\n   auto writer = internal::BitmapWordWriter<uint64_t>(out, out_offset, length);\n \n   auto nwords = left_reader.words();\n   while (nwords--) {\n-    writer.PutNextWord(op_word(left_reader.NextWord(), right_reader.NextWord()));\n+    auto outWord = op_word(left_reader.NextWord(), right_reader.NextWord());\n+    if (ComputeNewValidityCount) {\n+      outPopCount += BitUtil::PopCount(outWord);\n+    }\n+    writer.PutNextWord(outWord);\n   }\n   auto nbytes = left_reader.trailing_bytes();\n   while (nbytes--) {\n     int left_valid_bits, right_valid_bits;\n     uint8_t left_byte = left_reader.NextTrailingByte(left_valid_bits);\n     uint8_t right_byte = right_reader.NextTrailingByte(right_valid_bits);\n     DCHECK_EQ(left_valid_bits, right_valid_bits);\n-    writer.PutNextTrailingByte(op_byte(left_byte, right_byte), left_valid_bits);\n+    auto outByte = op_byte(left_byte, right_byte);\n\nReview comment:\n       use snake case `out_byte`\n\n##########\nFile path: cpp/src/arrow/util/bitmap_ops.cc\n##########\n@@ -237,71 +237,105 @@ bool OptionalBitmapEquals(const std::shared_ptr<Buffer>& left, int64_t left_offs\n \n namespace {\n \n-template <template <typename> class BitOp>\n-void AlignedBitmapOp(const uint8_t* left, int64_t left_offset, const uint8_t* right,\n-                     int64_t right_offset, uint8_t* out, int64_t out_offset,\n-                     int64_t length) {\n+template <template <typename> class BitOp, bool ComputeNewValidityCount>\n+int64_t AlignedBitmapOp(const uint8_t* left, int64_t left_offset, const uint8_t* right,\n+                        int64_t right_offset, uint8_t* out, int64_t out_offset,\n+                        int64_t length) {\n   BitOp<uint8_t> op;\n   DCHECK_EQ(left_offset % 8, right_offset % 8);\n   DCHECK_EQ(left_offset % 8, out_offset % 8);\n \n+  uint8_t* outFront = out;\n   const int64_t nbytes = BitUtil::BytesForBits(length + left_offset % 8);\n   left += left_offset / 8;\n   right += right_offset / 8;\n   out += out_offset / 8;\n+  uint64_t outPopCount = 0;\n   for (int64_t i = 0; i < nbytes; ++i) {\n     out[i] = op(left[i], right[i]);\n   }\n+  if (ComputeNewValidityCount) {\n+    outPopCount = CountSetBits(outFront, out_offset, length);\n+  }\n+  return outPopCount;\n\nReview comment:\n       Move this new code to the caller side to avoid the additional template instance.\r\n   We konw the trivial c++ loop above generates non-trivial machine code due to auto vectorization.\n\n##########\nFile path: cpp/src/arrow/util/bitmap_ops.h\n##########\n@@ -124,7 +124,8 @@ Result<std::shared_ptr<Buffer>> BitmapAnd(MemoryPool* pool, const uint8_t* left,\n /// the results in out starting at the given bit-offset.\n ARROW_EXPORT\n void BitmapAnd(const uint8_t* left, int64_t left_offset, const uint8_t* right,\n-               int64_t right_offset, int64_t length, int64_t out_offset, uint8_t* out);\n+               int64_t right_offset, int64_t length, int64_t out_offset, uint8_t* out,\n+               int64_t* const out_pop_count);\n\nReview comment:\n       remove `const`, and make `nullptr` the default value as commented.\n\n##########\nFile path: cpp/src/arrow/util/bit_util_test.cc\n##########\n@@ -1357,10 +1372,15 @@ class BitmapOp : public TestBase {\n \n           // Clear out buffer and try non-allocating version\n           std::memset(out->mutable_data(), 0, out->size());\n+          int64_t expectedPopCount = 0;\n           ASSERT_OK(op.Call(left->mutable_data(), left_offset, right->mutable_data(),\n-                            right_offset, length, out_offset, out->mutable_data()));\n+                            right_offset, length, out_offset, out->mutable_data(),\n+                            &expectedPopCount));\n           reader = internal::BitmapReader(out->mutable_data(), out_offset, length);\n           ASSERT_READER_VALUES(reader, result_bits);\n+\n+          auto refPopCount = SlowCountBits(out->mutable_data(), out_offset, length);\n\nReview comment:\n       We usaully call this `expected_pop_count` in arrow unit tests.\n\n##########\nFile path: cpp/src/arrow/util/bitmap_ops.cc\n##########\n@@ -311,39 +345,49 @@ Result<std::shared_ptr<Buffer>> BitmapAnd(MemoryPool* pool, const uint8_t* left,\n                                           int64_t left_offset, const uint8_t* right,\n                                           int64_t right_offset, int64_t length,\n                                           int64_t out_offset) {\n+  // TODO(pradeep) Figure out the return type for this version of BitmapOps\n+  int64_t out_pop_count = 0;\n   return BitmapOp<std::bit_and>(pool, left, left_offset, right, right_offset, length,\n-                                out_offset);\n+                                out_offset, &out_pop_count);\n\nReview comment:\n       I don't understand why this `out_pop_count`. It looks useless.\n\n##########\nFile path: cpp/src/arrow/util/bitmap_ops.cc\n##########\n@@ -237,71 +237,105 @@ bool OptionalBitmapEquals(const std::shared_ptr<Buffer>& left, int64_t left_offs\n \n namespace {\n \n-template <template <typename> class BitOp>\n-void AlignedBitmapOp(const uint8_t* left, int64_t left_offset, const uint8_t* right,\n-                     int64_t right_offset, uint8_t* out, int64_t out_offset,\n-                     int64_t length) {\n+template <template <typename> class BitOp, bool ComputeNewValidityCount>\n+int64_t AlignedBitmapOp(const uint8_t* left, int64_t left_offset, const uint8_t* right,\n+                        int64_t right_offset, uint8_t* out, int64_t out_offset,\n+                        int64_t length) {\n   BitOp<uint8_t> op;\n   DCHECK_EQ(left_offset % 8, right_offset % 8);\n   DCHECK_EQ(left_offset % 8, out_offset % 8);\n \n+  uint8_t* outFront = out;\n   const int64_t nbytes = BitUtil::BytesForBits(length + left_offset % 8);\n   left += left_offset / 8;\n   right += right_offset / 8;\n   out += out_offset / 8;\n+  uint64_t outPopCount = 0;\n   for (int64_t i = 0; i < nbytes; ++i) {\n     out[i] = op(left[i], right[i]);\n   }\n+  if (ComputeNewValidityCount) {\n+    outPopCount = CountSetBits(outFront, out_offset, length);\n+  }\n+  return outPopCount;\n }\n \n-template <template <typename> class BitOp>\n-void UnalignedBitmapOp(const uint8_t* left, int64_t left_offset, const uint8_t* right,\n-                       int64_t right_offset, uint8_t* out, int64_t out_offset,\n-                       int64_t length) {\n+template <template <typename> class BitOp, bool ComputeNewValidityCount>\n\nReview comment:\n       From your test result, looks pop count calculation doesn't impact performance.\r\n   If that's the case, I think we should remove this new template argument and always calc and return pop count in this function. Caller can simply ignore the return value if it don't need it.\n\n##########\nFile path: cpp/src/arrow/array/array_nested.cc\n##########\n@@ -680,7 +680,7 @@ Result<std::shared_ptr<Array>> SparseUnionArray::GetFlattenedField(\n   if (child_null_bitmap) {\n     BitmapAnd(flattened_null_bitmap->data(), child_offset, child_null_bitmap->data(),\n               child_offset, child_data->length, child_offset,\n-              flattened_null_bitmap->mutable_data());\n+              flattened_null_bitmap->mutable_data(), /*out pop count*/ nullptr);\n\nReview comment:\n       Make`nullptr` the default value to this new argument to leave current code untouched if they don't care about pop count.\n\n##########\nFile path: cpp/src/arrow/util/bit_util_test.cc\n##########\n@@ -1357,10 +1372,15 @@ class BitmapOp : public TestBase {\n \n           // Clear out buffer and try non-allocating version\n           std::memset(out->mutable_data(), 0, out->size());\n+          int64_t expectedPopCount = 0;\n\nReview comment:\n       I think it should be simply `pop_count`, not expected.\n\n##########\nFile path: cpp/src/arrow/util/bit_util_benchmark.cc\n##########\n@@ -159,9 +159,12 @@ static void BenchmarkAndImpl(benchmark::State& state, DoAnd&& do_and) {\n \n static void BenchmarkBitmapAnd(benchmark::State& state) {\n   BenchmarkAndImpl(state, [](const internal::Bitmap(&bitmaps)[2], internal::Bitmap* out) {\n+    int64_t outPopCount = 0;\n\nReview comment:\n       use snake case\n\n##########\nFile path: cpp/src/arrow/util/bit_util_benchmark.cc\n##########\n@@ -159,9 +159,12 @@ static void BenchmarkAndImpl(benchmark::State& state, DoAnd&& do_and) {\n \n static void BenchmarkBitmapAnd(benchmark::State& state) {\n   BenchmarkAndImpl(state, [](const internal::Bitmap(&bitmaps)[2], internal::Bitmap* out) {\n+    int64_t outPopCount = 0;\n     internal::BitmapAnd(bitmaps[0].buffer()->data(), bitmaps[0].offset(),\n                         bitmaps[1].buffer()->data(), bitmaps[1].offset(),\n-                        bitmaps[0].length(), 0, out->buffer()->mutable_data());\n+                        bitmaps[0].length(), 0, out->buffer()->mutable_data(),\n+                        &outPopCount);\n+    benchmark::DoNotOptimize(outPopCount);\n\nReview comment:\n       Augment current benchmark to add PopCount tests. Popcount is not used in many cases.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-13T10:34:25.893+0000",
                    "updated": "2021-11-13T10:34:25.893+0000",
                    "started": "2021-11-13T10:34:25.893+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "681088",
                    "issueId": "13397610"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397610/worklog/681120",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "9prady9 commented on a change in pull request #11674:\nURL: https://github.com/apache/arrow/pull/11674#discussion_r748736842\n\n\n\n##########\nFile path: cpp/src/arrow/array/array_nested.cc\n##########\n@@ -680,7 +680,7 @@ Result<std::shared_ptr<Array>> SparseUnionArray::GetFlattenedField(\n   if (child_null_bitmap) {\n     BitmapAnd(flattened_null_bitmap->data(), child_offset, child_null_bitmap->data(),\n               child_offset, child_data->length, child_offset,\n-              flattened_null_bitmap->mutable_data());\n+              flattened_null_bitmap->mutable_data(), /*out pop count*/ nullptr);\n\nReview comment:\n       I did think about that, but wasn't sure if default arguments are used in exported functions, especially in the functions that had pointers and basic types compared to bitmap functions that returned class objects.\r\n   \r\n   Is there any C API in arrow where this would apply ? such as API's that are wrapped around from other languages like Rust ?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-13T15:56:11.744+0000",
                    "updated": "2021-11-13T15:56:11.744+0000",
                    "started": "2021-11-13T15:56:11.743+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "681120",
                    "issueId": "13397610"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397610/worklog/681122",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "9prady9 commented on a change in pull request #11674:\nURL: https://github.com/apache/arrow/pull/11674#discussion_r748737695\n\n\n\n##########\nFile path: cpp/src/arrow/util/bitmap_ops.cc\n##########\n@@ -311,39 +345,49 @@ Result<std::shared_ptr<Buffer>> BitmapAnd(MemoryPool* pool, const uint8_t* left,\n                                           int64_t left_offset, const uint8_t* right,\n                                           int64_t right_offset, int64_t length,\n                                           int64_t out_offset) {\n+  // TODO(pradeep) Figure out the return type for this version of BitmapOps\n+  int64_t out_pop_count = 0;\n   return BitmapOp<std::bit_and>(pool, left, left_offset, right, right_offset, length,\n-                                out_offset);\n+                                out_offset, &out_pop_count);\n\nReview comment:\n       Wanted to ask the arrow devs if the functions returning class objects also need to be modified to return pop count. It is an incomplete change ( I though I left this PR in draft mode, hm). Please share your thoughts - if you don't want to change these versions of bitmap API calls or otherwise. Hence left the TODO line above this function call https://github.com/apache/arrow/pull/11674/files#diff-1162624f731f4758d9b900e493a4551a266ea06d081f7ade43a21e333a63d8c0R348\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-13T16:05:22.825+0000",
                    "updated": "2021-11-13T16:05:22.825+0000",
                    "started": "2021-11-13T16:05:22.825+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "681122",
                    "issueId": "13397610"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397610/worklog/681124",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "9prady9 commented on a change in pull request #11674:\nURL: https://github.com/apache/arrow/pull/11674#discussion_r748737834\n\n\n\n##########\nFile path: cpp/src/arrow/util/bitmap_ops.cc\n##########\n@@ -237,71 +237,105 @@ bool OptionalBitmapEquals(const std::shared_ptr<Buffer>& left, int64_t left_offs\n \n namespace {\n \n-template <template <typename> class BitOp>\n-void AlignedBitmapOp(const uint8_t* left, int64_t left_offset, const uint8_t* right,\n-                     int64_t right_offset, uint8_t* out, int64_t out_offset,\n-                     int64_t length) {\n+template <template <typename> class BitOp, bool ComputeNewValidityCount>\n+int64_t AlignedBitmapOp(const uint8_t* left, int64_t left_offset, const uint8_t* right,\n+                        int64_t right_offset, uint8_t* out, int64_t out_offset,\n+                        int64_t length) {\n   BitOp<uint8_t> op;\n   DCHECK_EQ(left_offset % 8, right_offset % 8);\n   DCHECK_EQ(left_offset % 8, out_offset % 8);\n \n+  uint8_t* outFront = out;\n   const int64_t nbytes = BitUtil::BytesForBits(length + left_offset % 8);\n   left += left_offset / 8;\n   right += right_offset / 8;\n   out += out_offset / 8;\n+  uint64_t outPopCount = 0;\n   for (int64_t i = 0; i < nbytes; ++i) {\n     out[i] = op(left[i], right[i]);\n   }\n+  if (ComputeNewValidityCount) {\n+    outPopCount = CountSetBits(outFront, out_offset, length);\n+  }\n+  return outPopCount;\n }\n \n-template <template <typename> class BitOp>\n-void UnalignedBitmapOp(const uint8_t* left, int64_t left_offset, const uint8_t* right,\n-                       int64_t right_offset, uint8_t* out, int64_t out_offset,\n-                       int64_t length) {\n+template <template <typename> class BitOp, bool ComputeNewValidityCount>\n\nReview comment:\n       No, there is an performance difference, quite good I would think - for the aligned code-path. Hence, I added the template bool expecting the compiler to optimize out the validity count calculation when it is requested.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-13T16:06:51.715+0000",
                    "updated": "2021-11-13T16:06:51.715+0000",
                    "started": "2021-11-13T16:06:51.715+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "681124",
                    "issueId": "13397610"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397610/worklog/681125",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "9prady9 commented on a change in pull request #11674:\nURL: https://github.com/apache/arrow/pull/11674#discussion_r748737834\n\n\n\n##########\nFile path: cpp/src/arrow/util/bitmap_ops.cc\n##########\n@@ -237,71 +237,105 @@ bool OptionalBitmapEquals(const std::shared_ptr<Buffer>& left, int64_t left_offs\n \n namespace {\n \n-template <template <typename> class BitOp>\n-void AlignedBitmapOp(const uint8_t* left, int64_t left_offset, const uint8_t* right,\n-                     int64_t right_offset, uint8_t* out, int64_t out_offset,\n-                     int64_t length) {\n+template <template <typename> class BitOp, bool ComputeNewValidityCount>\n+int64_t AlignedBitmapOp(const uint8_t* left, int64_t left_offset, const uint8_t* right,\n+                        int64_t right_offset, uint8_t* out, int64_t out_offset,\n+                        int64_t length) {\n   BitOp<uint8_t> op;\n   DCHECK_EQ(left_offset % 8, right_offset % 8);\n   DCHECK_EQ(left_offset % 8, out_offset % 8);\n \n+  uint8_t* outFront = out;\n   const int64_t nbytes = BitUtil::BytesForBits(length + left_offset % 8);\n   left += left_offset / 8;\n   right += right_offset / 8;\n   out += out_offset / 8;\n+  uint64_t outPopCount = 0;\n   for (int64_t i = 0; i < nbytes; ++i) {\n     out[i] = op(left[i], right[i]);\n   }\n+  if (ComputeNewValidityCount) {\n+    outPopCount = CountSetBits(outFront, out_offset, length);\n+  }\n+  return outPopCount;\n }\n \n-template <template <typename> class BitOp>\n-void UnalignedBitmapOp(const uint8_t* left, int64_t left_offset, const uint8_t* right,\n-                       int64_t right_offset, uint8_t* out, int64_t out_offset,\n-                       int64_t length) {\n+template <template <typename> class BitOp, bool ComputeNewValidityCount>\n\nReview comment:\n       No, there is an performance difference, quite good I would think (first two columns) - for the aligned code-path. Hence, I added the template bool expecting the compiler to optimize out the validity count calculation when it is requested.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-13T16:10:36.873+0000",
                    "updated": "2021-11-13T16:10:36.873+0000",
                    "started": "2021-11-13T16:10:36.873+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "681125",
                    "issueId": "13397610"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397610/worklog/681128",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "9prady9 commented on a change in pull request #11674:\nURL: https://github.com/apache/arrow/pull/11674#discussion_r748739319\n\n\n\n##########\nFile path: cpp/src/arrow/util/bitmap_ops.h\n##########\n@@ -124,7 +124,8 @@ Result<std::shared_ptr<Buffer>> BitmapAnd(MemoryPool* pool, const uint8_t* left,\n /// the results in out starting at the given bit-offset.\n ARROW_EXPORT\n void BitmapAnd(const uint8_t* left, int64_t left_offset, const uint8_t* right,\n-               int64_t right_offset, int64_t length, int64_t out_offset, uint8_t* out);\n+               int64_t right_offset, int64_t length, int64_t out_offset, uint8_t* out,\n+               int64_t* const out_pop_count);\n\nReview comment:\n       I added this `const` qualifier to indicate pointer wouldn't change.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-13T16:20:47.419+0000",
                    "updated": "2021-11-13T16:20:47.419+0000",
                    "started": "2021-11-13T16:20:47.419+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "681128",
                    "issueId": "13397610"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397610/worklog/681130",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "9prady9 commented on a change in pull request #11674:\nURL: https://github.com/apache/arrow/pull/11674#discussion_r748739525\n\n\n\n##########\nFile path: cpp/src/arrow/util/bit_util_benchmark.cc\n##########\n@@ -159,9 +159,12 @@ static void BenchmarkAndImpl(benchmark::State& state, DoAnd&& do_and) {\n \n static void BenchmarkBitmapAnd(benchmark::State& state) {\n   BenchmarkAndImpl(state, [](const internal::Bitmap(&bitmaps)[2], internal::Bitmap* out) {\n+    int64_t outPopCount = 0;\n     internal::BitmapAnd(bitmaps[0].buffer()->data(), bitmaps[0].offset(),\n                         bitmaps[1].buffer()->data(), bitmaps[1].offset(),\n-                        bitmaps[0].length(), 0, out->buffer()->mutable_data());\n+                        bitmaps[0].length(), 0, out->buffer()->mutable_data(),\n+                        &outPopCount);\n+    benchmark::DoNotOptimize(outPopCount);\n\nReview comment:\n       I didn't quite understand, do you mean test for pop count results in bitmap ops tests ? I already added that portion.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-13T16:23:18.874+0000",
                    "updated": "2021-11-13T16:23:18.874+0000",
                    "started": "2021-11-13T16:23:18.874+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "681130",
                    "issueId": "13397610"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 34200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@230656a1[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3481820[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7e21cc70[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@3d6b528c[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@79e5cfde[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@ff364c9[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7fc17b0b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@18d9a94d[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4f150eb7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@5bd4feb0[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2f39cfe2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7a7f8889[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 34200,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Aug 27 14:42:03 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-11-22T04:02:15.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13769/watchers",
            "watchCount": 4,
            "isWatching": true
        },
        "created": "2021-08-26T16:58:08.000+0000",
        "updated": "2022-08-27T14:42:03.000+0000",
        "timeoriginalestimate": null,
        "description": "When updating a validity bitmap using a bitwise operation such as AND or OR, it can be useful to also know the new validity count. It is probably costless to compute the new popcount inside BitmapAnd and friends. Micro-benchmarks will have to be run to validate that assumption.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "9.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 34200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] BitmapAnd, BitmapOr... could return the number of set bits",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397610/comment/17405365",
                    "id": "17405365",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "cc [~lidavidm]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-08-26T16:58:16.236+0000",
                    "updated": "2021-08-26T16:58:16.236+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397610/comment/17405387",
                    "id": "17405387",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "This would let us pre-compute the null count in if_else/case_when/coalesce and friends? That would be useful.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-08-26T17:25:28.744+0000",
                    "updated": "2021-08-26T17:25:28.744+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397610/comment/17405393",
                    "id": "17405393",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Yes, that was my thought. We could also shortcut coalesce or case-when when all values have been set.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-08-26T17:49:17.440+0000",
                    "updated": "2021-08-26T17:49:17.440+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397610/comment/17441574",
                    "id": "17441574",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=edponce",
                        "name": "edponce",
                        "key": "edponce",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=edponce&avatarId=45496",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=edponce&avatarId=45496",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=edponce&avatarId=45496",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=edponce&avatarId=45496"
                        },
                        "displayName": "Eduardo Ponce",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I have been curious if it would be a better design to have a `Bitmap` class that tracks the null count. All other Arrow containers with state are implemented as classes instead of procedural functions. Obviously, this would be a major refactor and out-of-scope from this issue.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=edponce",
                        "name": "edponce",
                        "key": "edponce",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=edponce&avatarId=45496",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=edponce&avatarId=45496",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=edponce&avatarId=45496",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=edponce&avatarId=45496"
                        },
                        "displayName": "Eduardo Ponce",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-11-10T08:45:51.182+0000",
                    "updated": "2021-11-10T08:46:17.687+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397610/comment/17441614",
                    "id": "17441614",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pradeepgarigipati",
                        "name": "pradeepgarigipati",
                        "key": "pradeepgarigipati",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Pradeep Garigipati",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "body": "{{There are two versions of BitmapAnd and BitmapOr functions:}}\r\n\r\n{{1) Output is part of the function arguments}}\r\n\r\n{{ 2) Output buffer is return value - this version also takes memory pool argument.}}\r\n\r\n{{I see the the following approaches.}}\r\n\r\n{{1) The version of function that returns void and takes output as function argument can return out popcount instead of void}}\r\n{{2) Alternative to (1) is to add an additional out argument to the function that is set of the output null count while the function retains the void return type. [~edponce] suggests this approach.}}\r\n{{{}3) The version of the function that returns Result<shared_ptr<Buffer>> can now return Result<pair<int64_t, shared_ptr<Buffer>>>{}}}{{{}{}}}\r\n\r\n{{Since, I wasn't sure which one is preferred over the other in arrow, I post here. Please advice.}}\r\n\r\n{{Thank you!}}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pradeepgarigipati",
                        "name": "pradeepgarigipati",
                        "key": "pradeepgarigipati",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Pradeep Garigipati",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "created": "2021-11-10T09:58:07.946+0000",
                    "updated": "2021-11-10T09:58:07.946+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397610/comment/17442365",
                    "id": "17442365",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "[~pradeepgarigipati] I would favor 1) and 3). Hopefully we can make it so that performance doesn't suffer.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-11-11T17:10:03.527+0000",
                    "updated": "2021-11-11T17:10:03.527+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397610/comment/17447190",
                    "id": "17447190",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pradeepgarigipati",
                        "name": "pradeepgarigipati",
                        "key": "pradeepgarigipati",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Pradeep Garigipati",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "body": "In light of discussion comments based on benchmark results posted on the GitHub PR [https://github.com/apache/arrow/pull/11674] , it has been decided that calculating pop count on the output isn't beneficial as originally anticipated it to be. Please go through the PR comments for a detailed information and the benchmark results. Marking this issue as resolved.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pradeepgarigipati",
                        "name": "pradeepgarigipati",
                        "key": "pradeepgarigipati",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Pradeep Garigipati",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "created": "2021-11-22T04:02:15.442+0000",
                    "updated": "2021-11-22T04:02:15.442+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397610/comment/17447364",
                    "id": "17447364",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Thanks for doing the experiment [~pradeepgarigipati] !",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-11-22T12:12:23.802+0000",
                    "updated": "2021-11-22T12:12:23.802+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13397610/comment/17586010",
                    "id": "17586010",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=toddfarmer",
                        "name": "toddfarmer",
                        "key": "JIRAUSER288796",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39935",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39935",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39935",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39935"
                        },
                        "displayName": "Todd Farmer",
                        "active": true,
                        "timeZone": "America/Boise"
                    },
                    "body": "Transitioning issue from Resolved to Closed to based on resolution field value.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=toddfarmer",
                        "name": "toddfarmer",
                        "key": "JIRAUSER288796",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39935",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39935",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39935",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39935"
                        },
                        "displayName": "Todd Farmer",
                        "active": true,
                        "timeZone": "America/Boise"
                    },
                    "created": "2022-08-27T14:42:03.051+0000",
                    "updated": "2022-08-27T14:42:03.051+0000"
                }
            ],
            "maxResults": 9,
            "total": 9,
            "startAt": 0
        },
        "customfield_12311820": "0|z0ub94:",
        "customfield_12314139": null
    }
}