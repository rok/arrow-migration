{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13241626",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241626",
    "key": "ARROW-5736",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=mrkn",
            "name": "mrkn",
            "key": "mrkn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Kenta Murata",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328932",
                "id": "12328932",
                "name": "Format"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=mrkn",
            "name": "mrkn",
            "key": "mrkn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Kenta Murata",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=mrkn",
            "name": "mrkn",
            "key": "mrkn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Kenta Murata",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 13800,
            "total": 13800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 13800,
            "total": 13800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5736/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 28,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241626/worklog/307030",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on pull request #5290: WIP: ARROW-5736: [Format][C++] Support small bit-width indices in sparse tensor\nURL: https://github.com/apache/arrow/pull/5290\n \n \n   I'd like to enable all integer types to become the value type of sparse tensor index.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-05T09:36:47.069+0000",
                    "updated": "2019-09-05T09:36:47.069+0000",
                    "started": "2019-09-05T09:36:47.069+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "307030",
                    "issueId": "13241626"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241626/worklog/308370",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #5290: WIP: ARROW-5736: [Format][C++] Support small bit-width indices in sparse tensor\nURL: https://github.com/apache/arrow/pull/5290#issuecomment-529129422\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/5290?src=pr&el=h1) Report\n   > Merging [#5290](https://codecov.io/gh/apache/arrow/pull/5290?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/fb51ecf72f42e9af556b8ff01d879b9d2b5f127f?src=pr&el=desc) will **increase** coverage by `<.01%`.\n   > The diff coverage is `97.83%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/5290/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/5290?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #5290      +/-   ##\n   ==========================================\n   + Coverage   88.72%   88.72%   +<.01%     \n   ==========================================\n     Files         945      945              \n     Lines      124009   124086      +77     \n     Branches     1437     1437              \n   ==========================================\n   + Hits       110024   110093      +69     \n   - Misses      13623    13631       +8     \n     Partials      362      362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/5290?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/visitor\\_inline.h](https://codecov.io/gh/apache/arrow/pull/5290/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy92aXNpdG9yX2lubGluZS5o) | `88.78% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/ipc/metadata\\_internal.h](https://codecov.io/gh/apache/arrow/pull/5290/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pcGMvbWV0YWRhdGFfaW50ZXJuYWwuaA==) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/sparse\\_tensor.h](https://codecov.io/gh/apache/arrow/pull/5290/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9zcGFyc2VfdGVuc29yLmg=) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/ipc/reader.cc](https://codecov.io/gh/apache/arrow/pull/5290/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pcGMvcmVhZGVyLmNj) | `89.57% <100%> (+0.18%)` | :arrow_up: |\n   | [cpp/src/arrow/sparse\\_tensor\\_test.cc](https://codecov.io/gh/apache/arrow/pull/5290/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9zcGFyc2VfdGVuc29yX3Rlc3QuY2M=) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/ipc/metadata\\_internal.cc](https://codecov.io/gh/apache/arrow/pull/5290/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pcGMvbWV0YWRhdGFfaW50ZXJuYWwuY2M=) | `88.25% <100%> (+0.27%)` | :arrow_up: |\n   | [cpp/src/arrow/ipc/read\\_write\\_test.cc](https://codecov.io/gh/apache/arrow/pull/5290/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pcGMvcmVhZF93cml0ZV90ZXN0LmNj) | `99.85% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/sparse\\_tensor.cc](https://codecov.io/gh/apache/arrow/pull/5290/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9zcGFyc2VfdGVuc29yLmNj) | `88.27% <88.46%> (-3.4%)` | :arrow_down: |\n   | [cpp/src/arrow/util/thread\\_pool\\_test.cc](https://codecov.io/gh/apache/arrow/pull/5290/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL3RocmVhZF9wb29sX3Rlc3QuY2M=) | `97.66% <0%> (-0.94%)` | :arrow_down: |\n   | [cpp/src/arrow/compare.cc](https://codecov.io/gh/apache/arrow/pull/5290/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jb21wYXJlLmNj) | `81.09% <0%> (-0.15%)` | :arrow_down: |\n   | ... and [2 more](https://codecov.io/gh/apache/arrow/pull/5290/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/5290?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/5290?src=pr&el=footer). Last update [fb51ecf...7c33e35](https://codecov.io/gh/apache/arrow/pull/5290?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-07T17:43:25.487+0000",
                    "updated": "2019-09-07T17:43:25.487+0000",
                    "started": "2019-09-07T17:43:25.487+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "308370",
                    "issueId": "13241626"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241626/worklog/308857",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5290: ARROW-5736: [Format][C++] Support small bit-width indices in sparse tensor\nURL: https://github.com/apache/arrow/pull/5290#discussion_r322234978\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/reader.cc\n ##########\n @@ -860,27 +861,40 @@ Status ReadTensor(const Message& message, std::shared_ptr<Tensor>* out) {\n \n namespace {\n \n-Status ReadSparseCOOIndex(const flatbuf::SparseTensor* sparse_tensor, int64_t ndim,\n-                          int64_t non_zero_length, io::RandomAccessFile* file,\n-                          std::shared_ptr<SparseIndex>* out) {\n+Status ReadSparseCOOIndex(const flatbuf::SparseTensor* sparse_tensor,\n+                          const std::vector<int64_t>& shape, int64_t non_zero_length,\n+                          io::RandomAccessFile* file, std::shared_ptr<SparseIndex>* out) {\n   auto* sparse_index = sparse_tensor->sparseIndex_as_SparseTensorIndexCOO();\n+\n+  std::shared_ptr<DataType> indices_type;\n+  RETURN_NOT_OK(internal::GetSparseCOOIndexMetadata(sparse_index, &indices_type));\n+\n   auto* indices_buffer = sparse_index->indicesBuffer();\n   std::shared_ptr<Buffer> indices_data;\n   RETURN_NOT_OK(\n       file->ReadAt(indices_buffer->offset(), indices_buffer->length(), &indices_data));\n-  std::vector<int64_t> shape({non_zero_length, ndim});\n-  const int64_t elsize = sizeof(int64_t);\n-  std::vector<int64_t> strides({elsize, elsize * non_zero_length});\n+  std::vector<int64_t> indices_shape(\n+      {non_zero_length, static_cast<int64_t>(shape.size())});\n+  auto* indices_strides = sparse_index->indicesStrides();\n+  std::vector<int64_t> strides;\n+  if (indices_strides->size() > 0) {\n \n Review comment:\n   What if `indices_strides->size() != 2`? Shouldn't we validate input here?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-09T13:40:39.746+0000",
                    "updated": "2019-09-09T13:40:39.746+0000",
                    "started": "2019-09-09T13:40:39.745+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "308857",
                    "issueId": "13241626"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241626/worklog/308858",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5290: ARROW-5736: [Format][C++] Support small bit-width indices in sparse tensor\nURL: https://github.com/apache/arrow/pull/5290#discussion_r322244745\n \n \n\n ##########\n File path: cpp/src/arrow/sparse_tensor.cc\n ##########\n @@ -60,17 +66,23 @@ class SparseTensorConverter<TYPE, SparseCOOIndex>\n   using typename BaseClass::NumericTensorType;\n   using typename BaseClass::value_type;\n \n-  explicit SparseTensorConverter(const NumericTensorType& tensor) : BaseClass(tensor) {}\n+  explicit SparseTensorConverter(const NumericTensorType& tensor,\n+                                 const std::shared_ptr<DataType>& index_value_type)\n+      : BaseClass(tensor, index_value_type) {}\n \n+  template <typename IndexValueType>\n   Status Convert() {\n+    using c_index_value_type = typename IndexValueType::c_type;\n+    const int64_t indices_elsize = sizeof(c_index_value_type);\n+\n     const int64_t ndim = tensor_.ndim();\n     int64_t nonzero_count = -1;\n     RETURN_NOT_OK(tensor_.CountNonZero(&nonzero_count));\n \n     std::shared_ptr<Buffer> indices_buffer;\n-    RETURN_NOT_OK(\n-        AllocateBuffer(sizeof(int64_t) * ndim * nonzero_count, &indices_buffer));\n-    int64_t* indices = reinterpret_cast<int64_t*>(indices_buffer->mutable_data());\n+    RETURN_NOT_OK(AllocateBuffer(indices_elsize * ndim * nonzero_count, &indices_buffer));\n \n Review comment:\n   Not related to this PR, but at some point all buffer-allocating constructors should have a variant taking a MemoryPool argument.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-09T13:40:39.750+0000",
                    "updated": "2019-09-09T13:40:39.750+0000",
                    "started": "2019-09-09T13:40:39.749+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "308858",
                    "issueId": "13241626"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241626/worklog/308859",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5290: ARROW-5736: [Format][C++] Support small bit-width indices in sparse tensor\nURL: https://github.com/apache/arrow/pull/5290#discussion_r322237929\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/reader.cc\n ##########\n @@ -891,11 +905,12 @@ Status ReadSparseCSRIndex(const flatbuf::SparseTensor* sparse_tensor, int64_t nd\n   RETURN_NOT_OK(\n       file->ReadAt(indices_buffer->offset(), indices_buffer->length(), &indices_data));\n \n-  std::vector<int64_t> indptr_shape({ndim + 1});\n+  std::vector<int64_t> indptr_shape({shape[0] + 1});\n   std::vector<int64_t> indices_shape({non_zero_length});\n \n Review comment:\n   Same question here about validating `indptr_shape` against `indptr_data` and `indices_data` against `indices_data...\r\n   \r\n   Perhaps instead of calling the `Tensor` constructor directly, we need a Status-returning static factory function that validates input for consistency?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-09T13:40:39.777+0000",
                    "updated": "2019-09-09T13:40:39.777+0000",
                    "started": "2019-09-09T13:40:39.777+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "308859",
                    "issueId": "13241626"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241626/worklog/308860",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5290: ARROW-5736: [Format][C++] Support small bit-width indices in sparse tensor\nURL: https://github.com/apache/arrow/pull/5290#discussion_r322235975\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/reader.cc\n ##########\n @@ -860,27 +861,40 @@ Status ReadTensor(const Message& message, std::shared_ptr<Tensor>* out) {\n \n namespace {\n \n-Status ReadSparseCOOIndex(const flatbuf::SparseTensor* sparse_tensor, int64_t ndim,\n-                          int64_t non_zero_length, io::RandomAccessFile* file,\n-                          std::shared_ptr<SparseIndex>* out) {\n+Status ReadSparseCOOIndex(const flatbuf::SparseTensor* sparse_tensor,\n+                          const std::vector<int64_t>& shape, int64_t non_zero_length,\n+                          io::RandomAccessFile* file, std::shared_ptr<SparseIndex>* out) {\n   auto* sparse_index = sparse_tensor->sparseIndex_as_SparseTensorIndexCOO();\n+\n+  std::shared_ptr<DataType> indices_type;\n+  RETURN_NOT_OK(internal::GetSparseCOOIndexMetadata(sparse_index, &indices_type));\n+\n   auto* indices_buffer = sparse_index->indicesBuffer();\n   std::shared_ptr<Buffer> indices_data;\n   RETURN_NOT_OK(\n       file->ReadAt(indices_buffer->offset(), indices_buffer->length(), &indices_data));\n-  std::vector<int64_t> shape({non_zero_length, ndim});\n-  const int64_t elsize = sizeof(int64_t);\n-  std::vector<int64_t> strides({elsize, elsize * non_zero_length});\n+  std::vector<int64_t> indices_shape(\n+      {non_zero_length, static_cast<int64_t>(shape.size())});\n \n Review comment:\n   Perhaps not related with this PR, but is `non_zero_length` validated somewhere? What if it's not consistent with `indices_data`?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-09T13:40:39.802+0000",
                    "updated": "2019-09-09T13:40:39.802+0000",
                    "started": "2019-09-09T13:40:39.802+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "308860",
                    "issueId": "13241626"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241626/worklog/308861",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5290: ARROW-5736: [Format][C++] Support small bit-width indices in sparse tensor\nURL: https://github.com/apache/arrow/pull/5290#discussion_r322233195\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/reader.cc\n ##########\n @@ -19,6 +19,7 @@\n \n #include <cstdint>\n #include <cstring>\n+#include <iostream>\n \n Review comment:\n   Is this header actually used?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-09T13:40:39.805+0000",
                    "updated": "2019-09-09T13:40:39.805+0000",
                    "started": "2019-09-09T13:40:39.805+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "308861",
                    "issueId": "13241626"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241626/worklog/308862",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5290: ARROW-5736: [Format][C++] Support small bit-width indices in sparse tensor\nURL: https://github.com/apache/arrow/pull/5290#discussion_r322237071\n \n \n\n ##########\n File path: format/SparseTensor.fbs\n ##########\n @@ -25,36 +25,50 @@ namespace org.apache.arrow.flatbuf;\n /// ----------------------------------------------------------------------\n /// EXPERIMENTAL: Data structures for sparse tensors\n \n-/// Coodinate format of sparse tensor index.\n+/// Coodinate (COO) format of sparse tensor index.\n+///\n+/// COO's index list are represented as a NxM matrix,\n+/// where N is the number of non-zero values,\n+/// and M is the number of dimensions of a sparse tensor.\n+///\n+/// indicesBuffer stores the location and size of the data of this indices\n+/// matrix.  The value type and the stride of the indices matrix is\n+/// specified in indicesType and indicesStrides fields.\n+///\n+/// For example, let X be a 2x3x4x5 tensor, and it has the following\n+/// 6 non-zero values:\n+///\n+///   X[0, 1, 2, 0] := 1\n+///   X[1, 1, 2, 3] := 2\n+///   X[0, 2, 1, 0] := 3\n+///   X[0, 1, 3, 0] := 4\n+///   X[0, 1, 2, 1] := 5\n+///   X[1, 2, 0, 4] := 6\n+///\n+/// In COO format, the index matrix of X is the following 4x6 matrix:\n+///\n+///   [[0, 0, 0, 0, 1, 1],\n+///    [1, 1, 1, 2, 1, 2],\n+///    [2, 2, 3, 1, 2, 0],\n+///    [0, 1, 0, 0, 3, 4]]\n+///\n+/// Note that the indices are sorted in lexicographical order.\n table SparseTensorIndexCOO {\n-  /// COO's index list are represented as a NxM matrix,\n-  /// where N is the number of non-zero values,\n-  /// and M is the number of dimensions of a sparse tensor.\n-  /// indicesBuffer stores the location and size of this index matrix.\n-  /// The type of index value is long, so the stride for the index matrix is unnecessary.\n-  ///\n-  /// For example, let X be a 2x3x4x5 tensor, and it has the following 6 non-zero values:\n-  ///\n-  ///   X[0, 1, 2, 0] := 1\n-  ///   X[1, 1, 2, 3] := 2\n-  ///   X[0, 2, 1, 0] := 3\n-  ///   X[0, 1, 3, 0] := 4\n-  ///   X[0, 1, 2, 1] := 5\n-  ///   X[1, 2, 0, 4] := 6\n-  ///\n-  /// In COO format, the index matrix of X is the following 4x6 matrix:\n-  ///\n-  ///   [[0, 0, 0, 0, 1, 1],\n-  ///    [1, 1, 1, 2, 1, 2],\n-  ///    [2, 2, 3, 1, 2, 0],\n-  ///    [0, 1, 0, 0, 3, 4]]\n-  ///\n-  /// Note that the indices are sorted in lexicographical order.\n+  /// The type of values in indicesBuffer\n+  indicesType: Int;\n+\n+  /// Non-negative byte offsets to advance one value cell along each dimension\n+  indicesStrides: [long];\n+\n+  /// The location and size of the indices matrix's data\n   indicesBuffer: Buffer;\n \n Review comment:\n   A high-level question: if the indices are a tensor, why aren't they represented here as a `Tensor` object? Is it more convenient to outline its structure explicitly?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-09T13:40:39.805+0000",
                    "updated": "2019-09-09T13:40:39.805+0000",
                    "started": "2019-09-09T13:40:39.805+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "308862",
                    "issueId": "13241626"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241626/worklog/308863",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5290: ARROW-5736: [Format][C++] Support small bit-width indices in sparse tensor\nURL: https://github.com/apache/arrow/pull/5290#discussion_r322229073\n \n \n\n ##########\n File path: format/SparseTensor.fbs\n ##########\n @@ -79,6 +93,9 @@ table SparseMatrixIndexCSR {\n   ///   indptr(X) = [0, 2, 3, 5, 5, 8, 10].\n   indptrBuffer: Buffer;\n \n+  /// The type of values in indciesBuffer\n \n Review comment:\n   Typo: \"indicesBuffer\"\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-09T13:40:39.951+0000",
                    "updated": "2019-09-09T13:40:39.951+0000",
                    "started": "2019-09-09T13:40:39.948+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "308863",
                    "issueId": "13241626"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241626/worklog/308864",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5290: ARROW-5736: [Format][C++] Support small bit-width indices in sparse tensor\nURL: https://github.com/apache/arrow/pull/5290#discussion_r322246580\n \n \n\n ##########\n File path: cpp/src/arrow/sparse_tensor.cc\n ##########\n @@ -117,21 +129,36 @@ class SparseTensorConverter<TYPE, SparseCOOIndex>\n \n     // make results\n     const std::vector<int64_t> indices_shape = {nonzero_count, ndim};\n-    const int64_t indices_elsize = sizeof(int64_t);\n     const std::vector<int64_t> indices_strides = {indices_elsize,\n                                                   indices_elsize * nonzero_count};\n-    sparse_index =\n-        std::make_shared<SparseCOOIndex>(std::make_shared<SparseCOOIndex::CoordsTensor>(\n-            indices_buffer, indices_shape, indices_strides));\n+    sparse_index = std::make_shared<SparseCOOIndex>(std::make_shared<Tensor>(\n+        index_value_type_, indices_buffer, indices_shape, indices_strides));\n     data = values_buffer;\n \n     return Status::OK();\n   }\n \n+#define CALL_TYPE_SPECIFIC_CONVERT(TYPE_CLASS) \\\n+  case TYPE_CLASS##Type::type_id:              \\\n+    return Convert<TYPE_CLASS##Type>();\n+\n+  Status Convert() {\n+    switch (index_value_type_->id()) {\n+      ARROW_GENERATE_FOR_ALL_INTEGER_TYPES(CALL_TYPE_SPECIFIC_CONVERT);\n+      // LCOV_EXCL_START: The following invalid causes program failure.\n \n Review comment:\n   Not sure I understand: how does returning `Status::Invalid` cause program failure?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-09T13:40:39.954+0000",
                    "updated": "2019-09-09T13:40:39.954+0000",
                    "started": "2019-09-09T13:40:39.954+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "308864",
                    "issueId": "13241626"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241626/worklog/308865",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5290: ARROW-5736: [Format][C++] Support small bit-width indices in sparse tensor\nURL: https://github.com/apache/arrow/pull/5290#discussion_r322248041\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/reader.cc\n ##########\n @@ -891,11 +905,12 @@ Status ReadSparseCSRIndex(const flatbuf::SparseTensor* sparse_tensor, int64_t nd\n   RETURN_NOT_OK(\n       file->ReadAt(indices_buffer->offset(), indices_buffer->length(), &indices_data));\n \n-  std::vector<int64_t> indptr_shape({ndim + 1});\n+  std::vector<int64_t> indptr_shape({shape[0] + 1});\n   std::vector<int64_t> indices_shape({non_zero_length});\n \n Review comment:\n   That said, it seems we should then validate the indices _data_, which is much more expensive...\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-09T13:41:12.524+0000",
                    "updated": "2019-09-09T13:41:12.524+0000",
                    "started": "2019-09-09T13:41:12.524+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "308865",
                    "issueId": "13241626"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241626/worklog/309404",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on pull request #5290: ARROW-5736: [Format][C++] Support small bit-width indices in sparse tensor\nURL: https://github.com/apache/arrow/pull/5290#discussion_r322508686\n \n \n\n ##########\n File path: cpp/src/arrow/sparse_tensor.cc\n ##########\n @@ -117,21 +129,36 @@ class SparseTensorConverter<TYPE, SparseCOOIndex>\n \n     // make results\n     const std::vector<int64_t> indices_shape = {nonzero_count, ndim};\n-    const int64_t indices_elsize = sizeof(int64_t);\n     const std::vector<int64_t> indices_strides = {indices_elsize,\n                                                   indices_elsize * nonzero_count};\n-    sparse_index =\n-        std::make_shared<SparseCOOIndex>(std::make_shared<SparseCOOIndex::CoordsTensor>(\n-            indices_buffer, indices_shape, indices_strides));\n+    sparse_index = std::make_shared<SparseCOOIndex>(std::make_shared<Tensor>(\n+        index_value_type_, indices_buffer, indices_shape, indices_strides));\n     data = values_buffer;\n \n     return Status::OK();\n   }\n \n+#define CALL_TYPE_SPECIFIC_CONVERT(TYPE_CLASS) \\\n+  case TYPE_CLASS##Type::type_id:              \\\n+    return Convert<TYPE_CLASS##Type>();\n+\n+  Status Convert() {\n+    switch (index_value_type_->id()) {\n+      ARROW_GENERATE_FOR_ALL_INTEGER_TYPES(CALL_TYPE_SPECIFIC_CONVERT);\n+      // LCOV_EXCL_START: The following invalid causes program failure.\n \n Review comment:\n   Because the result of `Convert` function is checked by `ARROW_CHECK_OK` in `MakeSparseTensorFromTensor` function, and `ARROW_CHECK_OK` makes the fatal-level `ArrowLog` object that makes the program failure.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-10T00:31:01.893+0000",
                    "updated": "2019-09-10T00:31:01.893+0000",
                    "started": "2019-09-10T00:31:01.893+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "309404",
                    "issueId": "13241626"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241626/worklog/309405",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on pull request #5290: ARROW-5736: [Format][C++] Support small bit-width indices in sparse tensor\nURL: https://github.com/apache/arrow/pull/5290#discussion_r322508811\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/reader.cc\n ##########\n @@ -19,6 +19,7 @@\n \n #include <cstdint>\n #include <cstring>\n+#include <iostream>\n \n Review comment:\n   No, I used it for debugging, and it should be removed.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-10T00:31:45.633+0000",
                    "updated": "2019-09-10T00:31:45.633+0000",
                    "started": "2019-09-10T00:31:45.633+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "309405",
                    "issueId": "13241626"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241626/worklog/309409",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on pull request #5290: ARROW-5736: [Format][C++] Support small bit-width indices in sparse tensor\nURL: https://github.com/apache/arrow/pull/5290#discussion_r322509080\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/reader.cc\n ##########\n @@ -860,27 +861,40 @@ Status ReadTensor(const Message& message, std::shared_ptr<Tensor>* out) {\n \n namespace {\n \n-Status ReadSparseCOOIndex(const flatbuf::SparseTensor* sparse_tensor, int64_t ndim,\n-                          int64_t non_zero_length, io::RandomAccessFile* file,\n-                          std::shared_ptr<SparseIndex>* out) {\n+Status ReadSparseCOOIndex(const flatbuf::SparseTensor* sparse_tensor,\n+                          const std::vector<int64_t>& shape, int64_t non_zero_length,\n+                          io::RandomAccessFile* file, std::shared_ptr<SparseIndex>* out) {\n   auto* sparse_index = sparse_tensor->sparseIndex_as_SparseTensorIndexCOO();\n+\n+  std::shared_ptr<DataType> indices_type;\n+  RETURN_NOT_OK(internal::GetSparseCOOIndexMetadata(sparse_index, &indices_type));\n+\n   auto* indices_buffer = sparse_index->indicesBuffer();\n   std::shared_ptr<Buffer> indices_data;\n   RETURN_NOT_OK(\n       file->ReadAt(indices_buffer->offset(), indices_buffer->length(), &indices_data));\n-  std::vector<int64_t> shape({non_zero_length, ndim});\n-  const int64_t elsize = sizeof(int64_t);\n-  std::vector<int64_t> strides({elsize, elsize * non_zero_length});\n+  std::vector<int64_t> indices_shape(\n+      {non_zero_length, static_cast<int64_t>(shape.size())});\n+  auto* indices_strides = sparse_index->indicesStrides();\n+  std::vector<int64_t> strides;\n+  if (indices_strides->size() > 0) {\n \n Review comment:\n   Indeed.  This check should be done in the constructor of `SparseCOOIndex` class.  I'll fix it.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-10T00:33:22.172+0000",
                    "updated": "2019-09-10T00:33:22.172+0000",
                    "started": "2019-09-10T00:33:22.171+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "309409",
                    "issueId": "13241626"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241626/worklog/309424",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on pull request #5290: ARROW-5736: [Format][C++] Support small bit-width indices in sparse tensor\nURL: https://github.com/apache/arrow/pull/5290#discussion_r322513678\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/reader.cc\n ##########\n @@ -860,27 +861,40 @@ Status ReadTensor(const Message& message, std::shared_ptr<Tensor>* out) {\n \n namespace {\n \n-Status ReadSparseCOOIndex(const flatbuf::SparseTensor* sparse_tensor, int64_t ndim,\n-                          int64_t non_zero_length, io::RandomAccessFile* file,\n-                          std::shared_ptr<SparseIndex>* out) {\n+Status ReadSparseCOOIndex(const flatbuf::SparseTensor* sparse_tensor,\n+                          const std::vector<int64_t>& shape, int64_t non_zero_length,\n+                          io::RandomAccessFile* file, std::shared_ptr<SparseIndex>* out) {\n   auto* sparse_index = sparse_tensor->sparseIndex_as_SparseTensorIndexCOO();\n+\n+  std::shared_ptr<DataType> indices_type;\n+  RETURN_NOT_OK(internal::GetSparseCOOIndexMetadata(sparse_index, &indices_type));\n+\n   auto* indices_buffer = sparse_index->indicesBuffer();\n   std::shared_ptr<Buffer> indices_data;\n   RETURN_NOT_OK(\n       file->ReadAt(indices_buffer->offset(), indices_buffer->length(), &indices_data));\n-  std::vector<int64_t> shape({non_zero_length, ndim});\n-  const int64_t elsize = sizeof(int64_t);\n-  std::vector<int64_t> strides({elsize, elsize * non_zero_length});\n+  std::vector<int64_t> indices_shape(\n+      {non_zero_length, static_cast<int64_t>(shape.size())});\n \n Review comment:\n   `non_zero_length` links to `indices_shape[0]` in `SparseCOOIndex`.  On the other words, if `non_zero_length` is inconsistent with `indices_data`, it means `indices_shape` is inconsistent with `indices_data`.\r\n   \r\n   If we need to do validation somewhere, I guess the appropriate place is Tensor's constructor.\r\n   \r\n   And, I think we can remove `non_zero_length` attribute from the format, and we should do it.  I'll file the issue in JIRA.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-10T00:59:10.108+0000",
                    "updated": "2019-09-10T00:59:10.108+0000",
                    "started": "2019-09-10T00:59:10.107+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "309424",
                    "issueId": "13241626"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241626/worklog/309436",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on pull request #5290: ARROW-5736: [Format][C++] Support small bit-width indices in sparse tensor\nURL: https://github.com/apache/arrow/pull/5290#discussion_r322517838\n \n \n\n ##########\n File path: format/SparseTensor.fbs\n ##########\n @@ -25,36 +25,50 @@ namespace org.apache.arrow.flatbuf;\n /// ----------------------------------------------------------------------\n /// EXPERIMENTAL: Data structures for sparse tensors\n \n-/// Coodinate format of sparse tensor index.\n+/// Coodinate (COO) format of sparse tensor index.\n+///\n+/// COO's index list are represented as a NxM matrix,\n+/// where N is the number of non-zero values,\n+/// and M is the number of dimensions of a sparse tensor.\n+///\n+/// indicesBuffer stores the location and size of the data of this indices\n+/// matrix.  The value type and the stride of the indices matrix is\n+/// specified in indicesType and indicesStrides fields.\n+///\n+/// For example, let X be a 2x3x4x5 tensor, and it has the following\n+/// 6 non-zero values:\n+///\n+///   X[0, 1, 2, 0] := 1\n+///   X[1, 1, 2, 3] := 2\n+///   X[0, 2, 1, 0] := 3\n+///   X[0, 1, 3, 0] := 4\n+///   X[0, 1, 2, 1] := 5\n+///   X[1, 2, 0, 4] := 6\n+///\n+/// In COO format, the index matrix of X is the following 4x6 matrix:\n+///\n+///   [[0, 0, 0, 0, 1, 1],\n+///    [1, 1, 1, 2, 1, 2],\n+///    [2, 2, 3, 1, 2, 0],\n+///    [0, 1, 0, 0, 3, 4]]\n+///\n+/// Note that the indices are sorted in lexicographical order.\n table SparseTensorIndexCOO {\n-  /// COO's index list are represented as a NxM matrix,\n-  /// where N is the number of non-zero values,\n-  /// and M is the number of dimensions of a sparse tensor.\n-  /// indicesBuffer stores the location and size of this index matrix.\n-  /// The type of index value is long, so the stride for the index matrix is unnecessary.\n-  ///\n-  /// For example, let X be a 2x3x4x5 tensor, and it has the following 6 non-zero values:\n-  ///\n-  ///   X[0, 1, 2, 0] := 1\n-  ///   X[1, 1, 2, 3] := 2\n-  ///   X[0, 2, 1, 0] := 3\n-  ///   X[0, 1, 3, 0] := 4\n-  ///   X[0, 1, 2, 1] := 5\n-  ///   X[1, 2, 0, 4] := 6\n-  ///\n-  /// In COO format, the index matrix of X is the following 4x6 matrix:\n-  ///\n-  ///   [[0, 0, 0, 0, 1, 1],\n-  ///    [1, 1, 1, 2, 1, 2],\n-  ///    [2, 2, 3, 1, 2, 0],\n-  ///    [0, 1, 0, 0, 3, 4]]\n-  ///\n-  /// Note that the indices are sorted in lexicographical order.\n+  /// The type of values in indicesBuffer\n+  indicesType: Int;\n+\n+  /// Non-negative byte offsets to advance one value cell along each dimension\n+  indicesStrides: [long];\n+\n+  /// The location and size of the indices matrix's data\n   indicesBuffer: Buffer;\n \n Review comment:\n   There are two reasons that I didn't employ `Tensor` object here.\r\n   \r\n   (1) I want to strict the value type of indices tensor to integer types at the format level.\r\n   \r\n   (2) I can drop the shape field of `Tensor`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-10T01:23:08.308+0000",
                    "updated": "2019-09-10T01:23:08.308+0000",
                    "started": "2019-09-10T01:23:08.308+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "309436",
                    "issueId": "13241626"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241626/worklog/309448",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on pull request #5290: ARROW-5736: [Format][C++] Support small bit-width indices in sparse tensor\nURL: https://github.com/apache/arrow/pull/5290#discussion_r322519842\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/reader.cc\n ##########\n @@ -891,11 +905,12 @@ Status ReadSparseCSRIndex(const flatbuf::SparseTensor* sparse_tensor, int64_t nd\n   RETURN_NOT_OK(\n       file->ReadAt(indices_buffer->offset(), indices_buffer->length(), &indices_data));\n \n-  std::vector<int64_t> indptr_shape({ndim + 1});\n+  std::vector<int64_t> indptr_shape({shape[0] + 1});\n   std::vector<int64_t> indices_shape({non_zero_length});\n \n Review comment:\n   You mean that it's better if we have Status-returning factory function for `Tensor` class and it validates indices data?\r\n   \r\n   If so, it makes sense to me. SparseTensor should have Status-returning factory function, too.\r\n   \r\n   Do you think we need to discuss on mailing-list before changing these APIs?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-10T01:34:43.170+0000",
                    "updated": "2019-09-10T01:34:43.170+0000",
                    "started": "2019-09-10T01:34:43.170+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "309448",
                    "issueId": "13241626"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241626/worklog/309453",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on pull request #5290: ARROW-5736: [Format][C++] Support small bit-width indices in sparse tensor\nURL: https://github.com/apache/arrow/pull/5290#discussion_r322520437\n \n \n\n ##########\n File path: cpp/src/arrow/sparse_tensor.cc\n ##########\n @@ -60,17 +66,23 @@ class SparseTensorConverter<TYPE, SparseCOOIndex>\n   using typename BaseClass::NumericTensorType;\n   using typename BaseClass::value_type;\n \n-  explicit SparseTensorConverter(const NumericTensorType& tensor) : BaseClass(tensor) {}\n+  explicit SparseTensorConverter(const NumericTensorType& tensor,\n+                                 const std::shared_ptr<DataType>& index_value_type)\n+      : BaseClass(tensor, index_value_type) {}\n \n+  template <typename IndexValueType>\n   Status Convert() {\n+    using c_index_value_type = typename IndexValueType::c_type;\n+    const int64_t indices_elsize = sizeof(c_index_value_type);\n+\n     const int64_t ndim = tensor_.ndim();\n     int64_t nonzero_count = -1;\n     RETURN_NOT_OK(tensor_.CountNonZero(&nonzero_count));\n \n     std::shared_ptr<Buffer> indices_buffer;\n-    RETURN_NOT_OK(\n-        AllocateBuffer(sizeof(int64_t) * ndim * nonzero_count, &indices_buffer));\n-    int64_t* indices = reinterpret_cast<int64_t*>(indices_buffer->mutable_data());\n+    RETURN_NOT_OK(AllocateBuffer(indices_elsize * ndim * nonzero_count, &indices_buffer));\n \n Review comment:\n   Filed https://issues.apache.org/jira/browse/ARROW-6503\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-10T01:38:24.601+0000",
                    "updated": "2019-09-10T01:38:24.601+0000",
                    "started": "2019-09-10T01:38:24.601+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "309453",
                    "issueId": "13241626"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241626/worklog/309455",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on pull request #5290: ARROW-5736: [Format][C++] Support small bit-width indices in sparse tensor\nURL: https://github.com/apache/arrow/pull/5290#discussion_r322520669\n \n \n\n ##########\n File path: format/SparseTensor.fbs\n ##########\n @@ -79,6 +93,9 @@ table SparseMatrixIndexCSR {\n   ///   indptr(X) = [0, 2, 3, 5, 5, 8, 10].\n   indptrBuffer: Buffer;\n \n+  /// The type of values in indciesBuffer\n \n Review comment:\n   Fixed.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-10T01:39:50.459+0000",
                    "updated": "2019-09-10T01:39:50.459+0000",
                    "started": "2019-09-10T01:39:50.458+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "309455",
                    "issueId": "13241626"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241626/worklog/309462",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on pull request #5290: ARROW-5736: [Format][C++] Support small bit-width indices in sparse tensor\nURL: https://github.com/apache/arrow/pull/5290#discussion_r322521396\n \n \n\n ##########\n File path: format/SparseTensor.fbs\n ##########\n @@ -25,36 +25,50 @@ namespace org.apache.arrow.flatbuf;\n /// ----------------------------------------------------------------------\n /// EXPERIMENTAL: Data structures for sparse tensors\n \n-/// Coodinate format of sparse tensor index.\n+/// Coodinate (COO) format of sparse tensor index.\n+///\n+/// COO's index list are represented as a NxM matrix,\n+/// where N is the number of non-zero values,\n+/// and M is the number of dimensions of a sparse tensor.\n+///\n+/// indicesBuffer stores the location and size of the data of this indices\n+/// matrix.  The value type and the stride of the indices matrix is\n+/// specified in indicesType and indicesStrides fields.\n+///\n+/// For example, let X be a 2x3x4x5 tensor, and it has the following\n+/// 6 non-zero values:\n+///\n+///   X[0, 1, 2, 0] := 1\n+///   X[1, 1, 2, 3] := 2\n+///   X[0, 2, 1, 0] := 3\n+///   X[0, 1, 3, 0] := 4\n+///   X[0, 1, 2, 1] := 5\n+///   X[1, 2, 0, 4] := 6\n+///\n+/// In COO format, the index matrix of X is the following 4x6 matrix:\n+///\n+///   [[0, 0, 0, 0, 1, 1],\n+///    [1, 1, 1, 2, 1, 2],\n+///    [2, 2, 3, 1, 2, 0],\n+///    [0, 1, 0, 0, 3, 4]]\n+///\n+/// Note that the indices are sorted in lexicographical order.\n table SparseTensorIndexCOO {\n-  /// COO's index list are represented as a NxM matrix,\n-  /// where N is the number of non-zero values,\n-  /// and M is the number of dimensions of a sparse tensor.\n-  /// indicesBuffer stores the location and size of this index matrix.\n-  /// The type of index value is long, so the stride for the index matrix is unnecessary.\n-  ///\n-  /// For example, let X be a 2x3x4x5 tensor, and it has the following 6 non-zero values:\n-  ///\n-  ///   X[0, 1, 2, 0] := 1\n-  ///   X[1, 1, 2, 3] := 2\n-  ///   X[0, 2, 1, 0] := 3\n-  ///   X[0, 1, 3, 0] := 4\n-  ///   X[0, 1, 2, 1] := 5\n-  ///   X[1, 2, 0, 4] := 6\n-  ///\n-  /// In COO format, the index matrix of X is the following 4x6 matrix:\n-  ///\n-  ///   [[0, 0, 0, 0, 1, 1],\n-  ///    [1, 1, 1, 2, 1, 2],\n-  ///    [2, 2, 3, 1, 2, 0],\n-  ///    [0, 1, 0, 0, 3, 4]]\n-  ///\n-  /// Note that the indices are sorted in lexicographical order.\n+  /// The type of values in indicesBuffer\n+  indicesType: Int;\n+\n+  /// Non-negative byte offsets to advance one value cell along each dimension\n+  indicesStrides: [long];\n+\n+  /// The location and size of the indices matrix's data\n   indicesBuffer: Buffer;\n \n Review comment:\n   The previous comment doesn't mean I want to stick to this format.  Using `Tensor` object here is acceptable.\r\n   If we use `Tensor` here, we need a way to strict the value type of the tensor to integer types.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-10T01:44:10.296+0000",
                    "updated": "2019-09-10T01:44:10.296+0000",
                    "started": "2019-09-10T01:44:10.295+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "309462",
                    "issueId": "13241626"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 13800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6c07847f[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1f48a233[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@688dd307[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@320ebd1f[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@71a2ebb7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@54fa84c[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@35c4609[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@447df538[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@22645153[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@5a91809b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3b9ce9ce[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@10e30fb0[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 13800,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Sep 10 14:46:14 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-09-10T14:46:14.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5736/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-06-26T03:47:51.000+0000",
        "updated": "2019-09-10T14:46:39.000+0000",
        "timeoriginalestimate": null,
        "description": "Adding 32bit sparse index support is necessary to support non-copy data sharing with the existing systems such as SciPy.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 13800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Format][C++] Support small bit-width indices in sparse tensor",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241626/comment/16926703",
                    "id": "16926703",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 5290\n[https://github.com/apache/arrow/pull/5290]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2019-09-10T14:46:14.653+0000",
                    "updated": "2019-09-10T14:46:14.653+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z043vs:",
        "customfield_12314139": null
    }
}