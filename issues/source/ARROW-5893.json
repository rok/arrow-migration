{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13243940",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243940",
    "key": "ARROW-5893",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332430",
                "id": "12332430",
                "name": "GLib"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334213",
                "id": "12334213",
                "name": "MATLAB"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333008",
                "id": "12333008",
                "name": "R"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334104",
                "id": "12334104",
                "name": "Ruby"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 24000,
            "total": 24000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 24000,
            "total": 24000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5893/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 40,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243940/worklog/274576",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #4841: WIP ARROW-5893: [C++][Python] RFC: Remove arrow::Column class\nURL: https://github.com/apache/arrow/pull/4841\n \n \n   This completely removes `arrow::Column` from the C++ library and adapts the Python bindings to follow, to help assist with mailing list discussion.\r\n   \r\n   There are other places that this would touch:\r\n   \r\n   - [ ] GLib\r\n   - [ ] Ruby\r\n   - [ ] MATLAB\r\n   - [ ] R\r\n   \r\n   You can see the evident reduction of boilerplate and simplification in many places -- it is particularly pronounced in parquet/arrow/arrow-reader-writer-test.cc. This refactor also exposed a bug where a Column's data type did not match its Field type.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-10T01:15:20.091+0000",
                    "updated": "2019-07-10T01:15:20.091+0000",
                    "started": "2019-07-10T01:15:20.091+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "274576",
                    "issueId": "13243940"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243940/worklog/274904",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #4841: WIP ARROW-5893: [C++][Python] RFC: Remove arrow::Column class\nURL: https://github.com/apache/arrow/pull/4841#discussion_r302077346\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/feather.cc\n ##########\n @@ -434,35 +434,33 @@ class TableReader::TableReaderImpl {\n     return col_meta->name()->str();\n   }\n \n-  Status GetColumn(int i, std::shared_ptr<Column>* out) {\n+  Status GetColumn(int i, std::shared_ptr<Array>* out) {\n     const fbs::Column* col_meta = metadata_->column(i);\n \n     // auto user_meta = column->user_metadata();\n     // if (user_meta->size() > 0) { user_metadata_ = user_meta->str(); }\n \n     std::shared_ptr<Array> values;\n-    RETURN_NOT_OK(LoadValues(col_meta->values(), col_meta->metadata_type(),\n-                             col_meta->metadata(), &values));\n-    out->reset(new Column(col_meta->name()->str(), values));\n-    return Status::OK();\n+    return LoadValues(col_meta->values(), col_meta->metadata_type(), col_meta->metadata(),\n+                      out);\n   }\n \n   Status Read(std::shared_ptr<Table>* out) {\n     std::vector<std::shared_ptr<Field>> fields;\n-    std::vector<std::shared_ptr<Column>> columns;\n+    std::vector<std::shared_ptr<Array>> columns;\n     for (int i = 0; i < num_columns(); ++i) {\n-      std::shared_ptr<Column> column;\n+      std::shared_ptr<Array> column;\n       RETURN_NOT_OK(GetColumn(i, &column));\n       columns.push_back(column);\n-      fields.push_back(column->field());\n+      fields.push_back(::arrow::field(GetColumnName(i), column->type()));\n \n Review comment:\n   It's maybe not relevant here (I don't know if feather supports non-nullable fields), but wondering in general: wherever you replace a field with name/type combo, should you also check nullability?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-10T14:55:24.721+0000",
                    "updated": "2019-07-10T14:55:24.721+0000",
                    "started": "2019-07-10T14:55:24.721+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "274904",
                    "issueId": "13243940"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243940/worklog/274905",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #4841: WIP ARROW-5893: [C++][Python] RFC: Remove arrow::Column class\nURL: https://github.com/apache/arrow/pull/4841#discussion_r302087974\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/feather.cc\n ##########\n @@ -434,35 +434,33 @@ class TableReader::TableReaderImpl {\n     return col_meta->name()->str();\n   }\n \n-  Status GetColumn(int i, std::shared_ptr<Column>* out) {\n+  Status GetColumn(int i, std::shared_ptr<Array>* out) {\n     const fbs::Column* col_meta = metadata_->column(i);\n \n     // auto user_meta = column->user_metadata();\n     // if (user_meta->size() > 0) { user_metadata_ = user_meta->str(); }\n \n     std::shared_ptr<Array> values;\n-    RETURN_NOT_OK(LoadValues(col_meta->values(), col_meta->metadata_type(),\n-                             col_meta->metadata(), &values));\n-    out->reset(new Column(col_meta->name()->str(), values));\n-    return Status::OK();\n+    return LoadValues(col_meta->values(), col_meta->metadata_type(), col_meta->metadata(),\n+                      out);\n   }\n \n   Status Read(std::shared_ptr<Table>* out) {\n     std::vector<std::shared_ptr<Field>> fields;\n-    std::vector<std::shared_ptr<Column>> columns;\n+    std::vector<std::shared_ptr<Array>> columns;\n     for (int i = 0; i < num_columns(); ++i) {\n-      std::shared_ptr<Column> column;\n+      std::shared_ptr<Array> column;\n       RETURN_NOT_OK(GetColumn(i, &column));\n       columns.push_back(column);\n-      fields.push_back(column->field());\n+      fields.push_back(::arrow::field(GetColumnName(i), column->type()));\n \n Review comment:\n   (I see that the feather.fbs has no notion of nullabilty, so that answers my comment)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-10T14:55:24.767+0000",
                    "updated": "2019-07-10T14:55:24.767+0000",
                    "started": "2019-07-10T14:55:24.766+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "274905",
                    "issueId": "13243940"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243940/worklog/274906",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #4841: WIP ARROW-5893: [C++][Python] RFC: Remove arrow::Column class\nURL: https://github.com/apache/arrow/pull/4841#discussion_r302102067\n \n \n\n ##########\n File path: python/pyarrow/table.pxi\n ##########\n @@ -307,287 +345,10 @@ def chunked_array(arrays, type=None):\n     return pyarrow_wrap_chunked_array(sp_chunked_array)\n \n \n-def column(object field_or_name, arr):\n-    \"\"\"\n-    Create Column object from field/string and array-like data\n-\n-    Parameters\n-    ----------\n-    field_or_name : string or Field\n-    arr : Array, list of Arrays, or ChunkedArray\n-\n-    Returns\n-    -------\n-    column : Column\n-    \"\"\"\n-    cdef:\n-        Field boxed_field\n-        Array _arr\n-        ChunkedArray _carr\n-        shared_ptr[CColumn] sp_column\n-\n-    if isinstance(arr, list):\n-        arr = chunked_array(arr)\n-    elif not isinstance(arr, (Array, ChunkedArray)):\n-        arr = array(arr)\n-\n-    if isinstance(field_or_name, Field):\n-        boxed_field = field_or_name\n-        if arr.type != boxed_field.type:\n-            raise ValueError('Passed field type does not match array')\n-    else:\n-        boxed_field = field(field_or_name, arr.type)\n-\n-    if isinstance(arr, Array):\n-        _arr = arr\n-        sp_column.reset(new CColumn(boxed_field.sp_field, _arr.sp_array))\n-    elif isinstance(arr, ChunkedArray):\n-        _carr = arr\n-        sp_column.reset(new CColumn(boxed_field.sp_field,\n-                                    _carr.sp_chunked_array))\n-    else:\n-        raise ValueError(\"Unsupported type for column(...): {}\"\n-                         .format(type(arr)))\n-\n-    return pyarrow_wrap_column(sp_column)\n-\n-\n-cdef class Column(_PandasConvertible):\n-    \"\"\"\n-    Named vector of elements of equal type.\n-\n-    Warning\n-    -------\n-    Do not call this class's constructor directly.\n-    \"\"\"\n-\n-    def __cinit__(self):\n-        self.column = NULL\n-\n-    def __init__(self):\n-        raise TypeError(\"Do not call Column's constructor directly, use one \"\n-                        \"of the `Column.from_*` functions instead.\")\n-\n-    cdef void init(self, const shared_ptr[CColumn]& column):\n-        self.sp_column = column\n-        self.column = column.get()\n-\n-    def __reduce__(self):\n-        return column, (self.field, self.data)\n-\n-    def __repr__(self):\n-        from pyarrow.compat import StringIO\n-        result = StringIO()\n-        result.write('<Column name={0!r} type={1!r}>'\n-                     .format(self.name, self.type))\n-        result.write('\\n{}'.format(str(self.data)))\n-\n-        return result.getvalue()\n-\n-    def __getitem__(self, key):\n-        return self.data[key]\n-\n-    @staticmethod\n-    def from_array(*args):\n-        return column(*args)\n-\n-    def cast(self, object target_type, bint safe=True):\n-        \"\"\"\n-        Cast column values to another data type\n-\n-        Parameters\n-        ----------\n-        target_type : DataType\n-            Type to cast to\n-        safe : boolean, default True\n-            Check for overflows or other unsafe conversions\n-\n-        Returns\n-        -------\n-        casted : Column\n-        \"\"\"\n-        cdef:\n-            CCastOptions options = CCastOptions(safe)\n-            DataType type = ensure_type(target_type)\n-            shared_ptr[CArray] result\n-            CDatum out\n-\n-        with nogil:\n-            check_status(Cast(_context(), CDatum(self.column.data()),\n-                              type.sp_type, options, &out))\n-\n-        casted_data = pyarrow_wrap_chunked_array(out.chunked_array())\n-        return column(self.name, casted_data)\n-\n-    def dictionary_encode(self):\n-        \"\"\"\n-        Compute dictionary-encoded representation of array\n-\n-        Returns\n-        -------\n-        pyarrow.Column\n-            Same chunking as the input, all chunks share a common dictionary.\n-        \"\"\"\n-        ca = self.data.dictionary_encode()\n-        return column(self.name, ca)\n-\n-    def unique(self):\n-        \"\"\"\n-        Compute distinct elements in array\n-\n-        Returns\n-        -------\n-        pyarrow.Array\n-        \"\"\"\n-        return self.data.unique()\n-\n-    def flatten(self, MemoryPool memory_pool=None):\n \n Review comment:\n   Do we want to keep this on the Array/ChunkedArray as well? (similarly to how you moved Column.cast to ChunkedArray.cast)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-10T14:55:27.677+0000",
                    "updated": "2019-07-10T14:55:27.677+0000",
                    "started": "2019-07-10T14:55:27.676+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "274906",
                    "issueId": "13243940"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243940/worklog/274909",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #4841: WIP ARROW-5893: [C++][Python] RFC: Remove arrow::Column class\nURL: https://github.com/apache/arrow/pull/4841#discussion_r302117205\n \n \n\n ##########\n File path: python/pyarrow/table.pxi\n ##########\n @@ -307,287 +345,10 @@ def chunked_array(arrays, type=None):\n     return pyarrow_wrap_chunked_array(sp_chunked_array)\n \n \n-def column(object field_or_name, arr):\n-    \"\"\"\n-    Create Column object from field/string and array-like data\n-\n-    Parameters\n-    ----------\n-    field_or_name : string or Field\n-    arr : Array, list of Arrays, or ChunkedArray\n-\n-    Returns\n-    -------\n-    column : Column\n-    \"\"\"\n-    cdef:\n-        Field boxed_field\n-        Array _arr\n-        ChunkedArray _carr\n-        shared_ptr[CColumn] sp_column\n-\n-    if isinstance(arr, list):\n-        arr = chunked_array(arr)\n-    elif not isinstance(arr, (Array, ChunkedArray)):\n-        arr = array(arr)\n-\n-    if isinstance(field_or_name, Field):\n-        boxed_field = field_or_name\n-        if arr.type != boxed_field.type:\n-            raise ValueError('Passed field type does not match array')\n-    else:\n-        boxed_field = field(field_or_name, arr.type)\n-\n-    if isinstance(arr, Array):\n-        _arr = arr\n-        sp_column.reset(new CColumn(boxed_field.sp_field, _arr.sp_array))\n-    elif isinstance(arr, ChunkedArray):\n-        _carr = arr\n-        sp_column.reset(new CColumn(boxed_field.sp_field,\n-                                    _carr.sp_chunked_array))\n-    else:\n-        raise ValueError(\"Unsupported type for column(...): {}\"\n-                         .format(type(arr)))\n-\n-    return pyarrow_wrap_column(sp_column)\n-\n-\n-cdef class Column(_PandasConvertible):\n-    \"\"\"\n-    Named vector of elements of equal type.\n-\n-    Warning\n-    -------\n-    Do not call this class's constructor directly.\n-    \"\"\"\n-\n-    def __cinit__(self):\n-        self.column = NULL\n-\n-    def __init__(self):\n-        raise TypeError(\"Do not call Column's constructor directly, use one \"\n-                        \"of the `Column.from_*` functions instead.\")\n-\n-    cdef void init(self, const shared_ptr[CColumn]& column):\n-        self.sp_column = column\n-        self.column = column.get()\n-\n-    def __reduce__(self):\n-        return column, (self.field, self.data)\n-\n-    def __repr__(self):\n-        from pyarrow.compat import StringIO\n-        result = StringIO()\n-        result.write('<Column name={0!r} type={1!r}>'\n-                     .format(self.name, self.type))\n-        result.write('\\n{}'.format(str(self.data)))\n-\n-        return result.getvalue()\n-\n-    def __getitem__(self, key):\n-        return self.data[key]\n-\n-    @staticmethod\n-    def from_array(*args):\n-        return column(*args)\n-\n-    def cast(self, object target_type, bint safe=True):\n-        \"\"\"\n-        Cast column values to another data type\n-\n-        Parameters\n-        ----------\n-        target_type : DataType\n-            Type to cast to\n-        safe : boolean, default True\n-            Check for overflows or other unsafe conversions\n-\n-        Returns\n-        -------\n-        casted : Column\n-        \"\"\"\n-        cdef:\n-            CCastOptions options = CCastOptions(safe)\n-            DataType type = ensure_type(target_type)\n-            shared_ptr[CArray] result\n-            CDatum out\n-\n-        with nogil:\n-            check_status(Cast(_context(), CDatum(self.column.data()),\n-                              type.sp_type, options, &out))\n-\n-        casted_data = pyarrow_wrap_chunked_array(out.chunked_array())\n-        return column(self.name, casted_data)\n-\n-    def dictionary_encode(self):\n-        \"\"\"\n-        Compute dictionary-encoded representation of array\n-\n-        Returns\n-        -------\n-        pyarrow.Column\n-            Same chunking as the input, all chunks share a common dictionary.\n-        \"\"\"\n-        ca = self.data.dictionary_encode()\n-        return column(self.name, ca)\n-\n-    def unique(self):\n-        \"\"\"\n-        Compute distinct elements in array\n-\n-        Returns\n-        -------\n-        pyarrow.Array\n-        \"\"\"\n-        return self.data.unique()\n-\n-    def flatten(self, MemoryPool memory_pool=None):\n \n Review comment:\n   Yes, will do\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-10T15:06:26.584+0000",
                    "updated": "2019-07-10T15:06:26.584+0000",
                    "started": "2019-07-10T15:06:26.583+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "274909",
                    "issueId": "13243940"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243940/worklog/274922",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kevingurney commented on issue #4841: WIP ARROW-5893: [C++][Python] RFC: Remove arrow::Column class\nURL: https://github.com/apache/arrow/pull/4841#issuecomment-510111730\n \n \n   @wesm - This looks like a nice API change.\r\n   \r\n   Since the MATLAB `featherread`/`featherwrite` interfaces currently use `arrow::Column` under the hood (as you pointed out), should we try to include the MATLAB code changes as part of this pull request, or as a separate pull request?\r\n   \r\n   Either way, @rdmello and I are happy to help with making those changes.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-10T15:31:21.590+0000",
                    "updated": "2019-07-10T15:31:21.590+0000",
                    "started": "2019-07-10T15:31:21.589+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "274922",
                    "issueId": "13243940"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243940/worklog/275000",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #4841: WIP ARROW-5893: [C++][Python] RFC: Remove arrow::Column class\nURL: https://github.com/apache/arrow/pull/4841#issuecomment-510180701\n \n \n   @kevingurney feel free to post a link to a branch with any changes and I can cherry-pick them into this PR\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-10T18:41:19.626+0000",
                    "updated": "2019-07-10T18:41:19.626+0000",
                    "started": "2019-07-10T18:41:19.626+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "275000",
                    "issueId": "13243940"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243940/worklog/275002",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kevingurney commented on issue #4841: WIP ARROW-5893: [C++][Python] RFC: Remove arrow::Column class\nURL: https://github.com/apache/arrow/pull/4841#issuecomment-510181069\n \n \n   Sounds good - thanks!\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-10T18:42:34.629+0000",
                    "updated": "2019-07-10T18:42:34.629+0000",
                    "started": "2019-07-10T18:42:34.628+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "275002",
                    "issueId": "13243940"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243940/worklog/275005",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #4841: WIP ARROW-5893: [C++][Python] RFC: Remove arrow::Column class\nURL: https://github.com/apache/arrow/pull/4841#issuecomment-510184674\n \n \n   @kou @shiro615 I have just performed the changes to the GLib C++ code, but it would be much quicker for one of you to fix the unit tests. I wasn't sure how to get the `GARROW_AVAILABLE_IN_...` macros to work\r\n   \r\n   The Ruby library will have to have some minor modifications but it should not be too complicated\r\n   \r\n   I apologies for the disruption -- if you could say whether you support this change either here or in the mailing list thread that would be helpful.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-10T18:53:07.425+0000",
                    "updated": "2019-07-10T18:53:07.425+0000",
                    "started": "2019-07-10T18:53:07.424+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "275005",
                    "issueId": "13243940"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243940/worklog/275033",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #4841: WIP ARROW-5893: [C++][Python] RFC: Remove arrow::Column class\nURL: https://github.com/apache/arrow/pull/4841#discussion_r302228042\n \n \n\n ##########\n File path: cpp/src/arrow/table.h\n ##########\n @@ -265,7 +169,10 @@ class ARROW_EXPORT Table {\n   std::shared_ptr<Schema> schema() const { return schema_; }\n \n   /// Return a column by index\n-  virtual std::shared_ptr<Column> column(int i) const = 0;\n+  virtual std::shared_ptr<ChunkedArray> column(int i) const = 0;\n+\n+  /// Return a column's field by index\n+  virtual std::shared_ptr<Field> field(int i) const = 0;\n \n Review comment:\n   It seems unnecessary to make this virtual; won't it always be `schema_->field(i)`? Maybe this method can be elided altogether\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-10T20:02:01.722+0000",
                    "updated": "2019-07-10T20:02:01.722+0000",
                    "started": "2019-07-10T20:02:01.722+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "275033",
                    "issueId": "13243940"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243940/worklog/275034",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #4841: WIP ARROW-5893: [C++][Python] RFC: Remove arrow::Column class\nURL: https://github.com/apache/arrow/pull/4841#discussion_r302228731\n \n \n\n ##########\n File path: cpp/src/arrow/table.h\n ##########\n @@ -293,11 +200,13 @@ class ARROW_EXPORT Table {\n   virtual Status RemoveColumn(int i, std::shared_ptr<Table>* out) const = 0;\n \n   /// \\brief Add column to the table, producing a new Table\n-  virtual Status AddColumn(int i, const std::shared_ptr<Column>& column,\n+  virtual Status AddColumn(int i, std::shared_ptr<Field> field_arg,\n \n Review comment:\n   Why does this method take an index? `assert(i == schema_->num_fields())`?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-10T20:02:01.739+0000",
                    "updated": "2019-07-10T20:02:01.739+0000",
                    "started": "2019-07-10T20:02:01.739+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "275034",
                    "issueId": "13243940"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243940/worklog/275035",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #4841: WIP ARROW-5893: [C++][Python] RFC: Remove arrow::Column class\nURL: https://github.com/apache/arrow/pull/4841#discussion_r302244066\n \n \n\n ##########\n File path: python/pyarrow/feather.pxi\n ##########\n @@ -98,12 +98,12 @@ cdef class FeatherReader:\n         if i < 0 or i >= self.num_columns:\n             raise IndexError(i)\n \n-        cdef shared_ptr[CColumn] sp_column\n+        cdef shared_ptr[CArray] sp_array\n \n Review comment:\n   Everywhere else you've replaced Column by ChunkedArray, should that apply here as well?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-10T20:02:01.821+0000",
                    "updated": "2019-07-10T20:02:01.821+0000",
                    "started": "2019-07-10T20:02:01.820+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "275035",
                    "issueId": "13243940"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243940/worklog/275036",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #4841: WIP ARROW-5893: [C++][Python] RFC: Remove arrow::Column class\nURL: https://github.com/apache/arrow/pull/4841#discussion_r302245120\n \n \n\n ##########\n File path: python/pyarrow/table.pxi\n ##########\n @@ -1184,17 +963,16 @@ cdef class Table(_PandasConvertible):\n     @staticmethod\n     def from_arrays(arrays, names=None, schema=None, metadata=None):\n         \"\"\"\n-        Construct a Table from Arrow arrays or columns\n+        Construct a Table from Arrow arrays\n \n         Parameters\n         ----------\n-        arrays : list of pyarrow.Array or pyarrow.Column\n+        arrays : list of pyarrow.Array or pyarrow.ChunkedArray\n             Equal-length arrays that should form the table.\n         names : list of str, optional\n-            Names for the table columns. If Columns passed, will be\n-            inferred. If Arrays passed, this argument is required\n+            Names for the table columns. If not passed, schema must be passed\n         schema : Schema, default None\n-            If not passed, will be inferred from the arrays\n+            Must pass this or names\n \n Review comment:\n   ```suggestion\r\n               Schema for the created table. If not passed, names must be passed\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-10T20:02:01.914+0000",
                    "updated": "2019-07-10T20:02:01.914+0000",
                    "started": "2019-07-10T20:02:01.914+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "275036",
                    "issueId": "13243940"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243940/worklog/275037",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #4841: WIP ARROW-5893: [C++][Python] RFC: Remove arrow::Column class\nURL: https://github.com/apache/arrow/pull/4841#discussion_r302239831\n \n \n\n ##########\n File path: cpp/src/parquet/arrow/reader.cc\n ##########\n @@ -697,18 +690,13 @@ std::vector<int> FileReader::Impl::GetDictionaryIndices(const std::vector<int>&\n \n std::shared_ptr<::arrow::Schema> FileReader::Impl::FixSchema(\n     const ::arrow::Schema& old_schema, const std::vector<int>& dict_indices,\n-    std::vector<std::shared_ptr<::arrow::Column>>& columns) {\n+    const std::vector<std::shared_ptr<::arrow::ChunkedArray>>& columns) {\n   // Fix the schema with the actual DictionaryType that was read\n   auto fields = old_schema.fields();\n \n   for (int idx : dict_indices) {\n-    auto name = columns[idx]->name();\n-    auto dict_array = columns[idx]->data();\n-    auto dict_field = std::make_shared<::arrow::Field>(name, dict_array->type());\n-    fields[idx] = dict_field;\n-    columns[idx] = std::make_shared<Column>(dict_field, dict_array);\n+    fields[idx] = ::arrow::field(old_schema.field(idx)->name(), columns[idx]->type());\n \n Review comment:\n   ```suggestion\r\n       fields[idx] = old_schema.field(idx)->WithType(columns[idx]->type());\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-10T20:02:02.107+0000",
                    "updated": "2019-07-10T20:02:02.107+0000",
                    "started": "2019-07-10T20:02:02.106+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "275037",
                    "issueId": "13243940"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243940/worklog/275067",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kevingurney commented on issue #4841: WIP ARROW-5893: [C++][Python] RFC: Remove arrow::Column class\nURL: https://github.com/apache/arrow/pull/4841#issuecomment-510229942\n \n \n   @wesm - Changes for removing the use of `arrow::Column` under the hood in the MATLAB `featherread`/`featherwrite` interfaces can be found in the branch linked below:\r\n   \r\n   - https://github.com/mathworks/arrow/tree/arrow-5893\r\n   \r\n   I also updated `handle_status.cc` because of a build failure I encountered caused by recent changes to `arrow::StatusCode`.\r\n   \r\n   @rdmello - Can you take a quick look through these changes?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-10T21:09:08.905+0000",
                    "updated": "2019-07-10T21:09:08.905+0000",
                    "started": "2019-07-10T21:09:08.904+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "275067",
                    "issueId": "13243940"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243940/worklog/275120",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on issue #4841: WIP ARROW-5893: [C++][Python] RFC: Remove arrow::Column class\nURL: https://github.com/apache/arrow/pull/4841#issuecomment-510279742\n \n \n   @wesm No problem. I take over GLib related part.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-11T00:32:30.541+0000",
                    "updated": "2019-07-11T00:32:30.541+0000",
                    "started": "2019-07-11T00:32:30.540+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "275120",
                    "issueId": "13243940"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243940/worklog/275343",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rdmello commented on issue #4841: WIP ARROW-5893: [C++][Python] RFC: Remove arrow::Column class\nURL: https://github.com/apache/arrow/pull/4841#issuecomment-510497152\n \n \n   @kevingurney @wesm thanks for doing this. I have looked through the MATLAB changes and didn't see any issues.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-11T13:58:16.377+0000",
                    "updated": "2019-07-11T13:58:16.377+0000",
                    "started": "2019-07-11T13:58:16.376+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "275343",
                    "issueId": "13243940"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243940/worklog/275384",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #4841: WIP ARROW-5893: [C++][Python] RFC: Remove arrow::Column class\nURL: https://github.com/apache/arrow/pull/4841#discussion_r302623241\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/feather.cc\n ##########\n @@ -434,35 +434,33 @@ class TableReader::TableReaderImpl {\n     return col_meta->name()->str();\n   }\n \n-  Status GetColumn(int i, std::shared_ptr<Column>* out) {\n+  Status GetColumn(int i, std::shared_ptr<Array>* out) {\n     const fbs::Column* col_meta = metadata_->column(i);\n \n     // auto user_meta = column->user_metadata();\n     // if (user_meta->size() > 0) { user_metadata_ = user_meta->str(); }\n \n     std::shared_ptr<Array> values;\n-    RETURN_NOT_OK(LoadValues(col_meta->values(), col_meta->metadata_type(),\n-                             col_meta->metadata(), &values));\n-    out->reset(new Column(col_meta->name()->str(), values));\n-    return Status::OK();\n+    return LoadValues(col_meta->values(), col_meta->metadata_type(), col_meta->metadata(),\n+                      out);\n   }\n \n   Status Read(std::shared_ptr<Table>* out) {\n     std::vector<std::shared_ptr<Field>> fields;\n-    std::vector<std::shared_ptr<Column>> columns;\n+    std::vector<std::shared_ptr<Array>> columns;\n     for (int i = 0; i < num_columns(); ++i) {\n-      std::shared_ptr<Column> column;\n+      std::shared_ptr<Array> column;\n       RETURN_NOT_OK(GetColumn(i, &column));\n       columns.push_back(column);\n-      fields.push_back(column->field());\n+      fields.push_back(::arrow::field(GetColumnName(i), column->type()));\n \n Review comment:\n   @jorisvandenbossche @wesm definitely out of scope for this PR, but: should user_metadata get into the read table's fields?\r\n   \r\n   ```suggestion\r\n         fields.push_back(::arrow::field(GetColumnName(i), column->type(), true, {{\"user_metadata\"}, {user_metadata}}));\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-11T15:59:38.274+0000",
                    "updated": "2019-07-11T15:59:38.274+0000",
                    "started": "2019-07-11T15:59:38.273+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "275384",
                    "issueId": "13243940"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243940/worklog/275397",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #4841: WIP ARROW-5893: [C++][Python] RFC: Remove arrow::Column class\nURL: https://github.com/apache/arrow/pull/4841#discussion_r302636359\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/feather.cc\n ##########\n @@ -434,35 +434,33 @@ class TableReader::TableReaderImpl {\n     return col_meta->name()->str();\n   }\n \n-  Status GetColumn(int i, std::shared_ptr<Column>* out) {\n+  Status GetColumn(int i, std::shared_ptr<Array>* out) {\n     const fbs::Column* col_meta = metadata_->column(i);\n \n     // auto user_meta = column->user_metadata();\n     // if (user_meta->size() > 0) { user_metadata_ = user_meta->str(); }\n \n     std::shared_ptr<Array> values;\n-    RETURN_NOT_OK(LoadValues(col_meta->values(), col_meta->metadata_type(),\n-                             col_meta->metadata(), &values));\n-    out->reset(new Column(col_meta->name()->str(), values));\n-    return Status::OK();\n+    return LoadValues(col_meta->values(), col_meta->metadata_type(), col_meta->metadata(),\n+                      out);\n   }\n \n   Status Read(std::shared_ptr<Table>* out) {\n     std::vector<std::shared_ptr<Field>> fields;\n-    std::vector<std::shared_ptr<Column>> columns;\n+    std::vector<std::shared_ptr<Array>> columns;\n     for (int i = 0; i < num_columns(); ++i) {\n-      std::shared_ptr<Column> column;\n+      std::shared_ptr<Array> column;\n       RETURN_NOT_OK(GetColumn(i, &column));\n       columns.push_back(column);\n-      fields.push_back(column->field());\n+      fields.push_back(::arrow::field(GetColumnName(i), column->type()));\n \n Review comment:\n   Maybe so. Can you open a JIRA about this? The Feather format is effectively deprecated so not sure how much more energy we want to invest in it (versus having Feather be a wrapper for the primary IPC protocol)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-11T16:28:55.983+0000",
                    "updated": "2019-07-11T16:28:55.983+0000",
                    "started": "2019-07-11T16:28:55.982+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "275397",
                    "issueId": "13243940"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243940/worklog/275398",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #4841: WIP ARROW-5893: [C++][Python] RFC: Remove arrow::Column class\nURL: https://github.com/apache/arrow/pull/4841#issuecomment-510558598\n \n \n   OK, I'll cherry-pick the changes here then\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-11T16:29:13.370+0000",
                    "updated": "2019-07-11T16:29:13.370+0000",
                    "started": "2019-07-11T16:29:13.370+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "275398",
                    "issueId": "13243940"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 24000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@7ea3e6cc[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6513a5a8[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@210c30f0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@59caff9c[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@66d61f77[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@67f2251b[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@27b912a5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@29812fd1[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7f7ab031[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@9569838[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@66159f8d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@464adb39[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 24000,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Jul 17 04:00:19 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-07-17T04:00:19.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5893/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2019-07-09T18:13:12.000+0000",
        "updated": "2019-08-01T22:39:25.000+0000",
        "timeoriginalestimate": null,
        "description": "Opening JIRA per ongoing discussion on mailing list.\r\n\r\nThis class unfortunately touches a lot of places, so I'm going to start by removing it from the C++ and Python libraries to assist with discussion about its fate. ",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "6h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 24000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Remove arrow::Column class from C++ library",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243940/comment/16886661",
                    "id": "16886661",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 4841\n[https://github.com/apache/arrow/pull/4841]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-07-17T04:00:19.340+0000",
                    "updated": "2019-07-17T04:00:19.340+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z04i4w:",
        "customfield_12314139": null
    }
}