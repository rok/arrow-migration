{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13138708",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13138708",
    "key": "ARROW-2162",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341707",
                "id": "12341707",
                "description": "",
                "name": "0.9.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-03-19"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341352",
                "id": "12341352",
                "name": "0.8.0",
                "archived": false,
                "released": true,
                "releaseDate": "2017-12-18"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=cpcloud",
            "name": "cpcloud",
            "key": "cpcloud",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=cpcloud&avatarId=31265",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cpcloud&avatarId=31265",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cpcloud&avatarId=31265",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cpcloud&avatarId=31265"
            },
            "displayName": "Phillip Cloud",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=cpcloud",
            "name": "cpcloud",
            "key": "cpcloud",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=cpcloud&avatarId=31265",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cpcloud&avatarId=31265",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cpcloud&avatarId=31265",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cpcloud&avatarId=31265"
            },
            "displayName": "Phillip Cloud",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=cpcloud",
            "name": "cpcloud",
            "key": "cpcloud",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=cpcloud&avatarId=31265",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cpcloud&avatarId=31265",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cpcloud&avatarId=31265",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cpcloud&avatarId=31265"
            },
            "displayName": "Phillip Cloud",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2162/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@2b570a12[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@e384630[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@9ac1fc[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@4c5f1e19[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1a858957[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@7b9a0264[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2d59b9ca[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@1942c5ae[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2f3b28e0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@4198641[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@646ee8e1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@6b8e3e77[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Feb 21 18:42:50 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-02-21T18:42:29.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2162/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2018-02-15T06:17:45.000+0000",
        "updated": "2018-02-21T18:42:50.000+0000",
        "timeoriginalestimate": null,
        "description": "From GitHub:\r\n\r\nThis works as expected:\r\n\r\n{code}\r\n>>> pyarrow.array([decimal.Decimal('1.23')], pyarrow.decimal128(10,2))[0]\r\nDecimal('1.23')\r\n{code}\r\n\r\nStoring an extra digit of precision multiplies the stored value by a factor of 100:\r\n\r\n{code}\r\n>>> pyarrow.array([decimal.Decimal('1.234')], pyarrow.decimal128(10,2))[0]\r\nDecimal('123.40')\r\n{code}\r\n\r\nIdeally I would get an exception since the value I'm trying to store doesn't fit in the declared type of the array. It would be less good, but still ok, if the stored value were 1.23 (truncating the extra digit). I didn't expect pyarrow to silently store a value that differs from the original value by a factor of 100.\r\n\r\nI originally thought that the code was incorrectly multiplying through by an extra factor of 10**scale, but that doesn't seem to be the case. If I change the scale, it always seems to be a factor of 100\r\n\r\n{code}\r\n>>> pyarrow.array([decimal.Decimal('1.2345')], pyarrow.decimal128(10,3))[0]\r\nDecimal('123.450')\r\nI see the same behavior if I use floating point to initialize the array rather than Python's decimal type.\r\n{code}\r\n\r\nI searched for open github and JIRA for open issues but didn't find anything related to this. I am using pyarrow 0.8.0 on OS X 10.12.6 using python 2.7.14 installed via Homebrew",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python/C++] Decimal Values with too-high precision are multiplied by 100",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13138708/comment/16367870",
                    "id": "16367870",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=cpcloud",
                        "name": "cpcloud",
                        "key": "cpcloud",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=cpcloud&avatarId=31265",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cpcloud&avatarId=31265",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cpcloud&avatarId=31265",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cpcloud&avatarId=31265"
                        },
                        "displayName": "Phillip Cloud",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Taking a look at this.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=cpcloud",
                        "name": "cpcloud",
                        "key": "cpcloud",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=cpcloud&avatarId=31265",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cpcloud&avatarId=31265",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cpcloud&avatarId=31265",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cpcloud&avatarId=31265"
                        },
                        "displayName": "Phillip Cloud",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-02-16T20:58:44.215+0000",
                    "updated": "2018-02-16T20:58:44.215+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13138708/comment/16369489",
                    "id": "16369489",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on issue #1619: ARROW-2162: [Python/C++] Decimal Values with too-high precision are multiplied by 100\nURL: https://github.com/apache/arrow/pull/1619#issuecomment-366796399\n \n \n   @wesm @pitrou any comments here? otherwise, this is ready to go on my end\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-19T20:32:49.100+0000",
                    "updated": "2018-02-19T20:32:49.100+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13138708/comment/16369492",
                    "id": "16369492",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on a change in pull request #1619: ARROW-2162: [Python/C++] Decimal Values with too-high precision are multiplied by 100\nURL: https://github.com/apache/arrow/pull/1619#discussion_r169167969\n \n \n\n ##########\n File path: cpp/src/arrow/python/python-test.cc\n ##########\n @@ -167,5 +167,14 @@ TEST(BuiltinConversionTest, TestMixedTypeFails) {\n   ASSERT_RAISES(UnknownError, ConvertPySequence(list, pool, &arr));\n }\n \n+TEST_F(DecimalTest, FromPythonDecimalRescale) {\n+  Decimal128 value;\n+  OwnedRef python_decimal(this->CreatePythonDecimal(\"1.0134\"));\n+  auto type = ::arrow::decimal(10, 2);\n+  const auto& decimal_type = static_cast<const DecimalType&>(*type);\n+  ASSERT_RAISES(Invalid, internal::DecimalFromPythonDecimal(python_decimal.obj(),\n \n Review comment:\n   I guess this would truncate? Perhaps add a comment? :) \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-19T20:40:29.729+0000",
                    "updated": "2018-02-19T20:40:29.729+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13138708/comment/16369494",
                    "id": "16369494",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on a change in pull request #1619: ARROW-2162: [Python/C++] Decimal Values with too-high precision are multiplied by 100\nURL: https://github.com/apache/arrow/pull/1619#discussion_r169168022\n \n \n\n ##########\n File path: cpp/src/arrow/util/decimal.cc\n ##########\n @@ -857,19 +857,31 @@ static const Decimal128 ScaleMultipliers[] = {\n Status Decimal128::Rescale(int32_t original_scale, int32_t new_scale,\n                            Decimal128* out) const {\n   DCHECK_NE(out, NULLPTR);\n-  DCHECK_NE(original_scale, new_scale);\n-  const int32_t delta_scale = original_scale - new_scale;\n+  DCHECK_NE(original_scale, new_scale) << \"original_scale == new_scale\";\n+\n+  const int32_t delta_scale = new_scale - original_scale;\n+\n+  // Fail if rescaling would truncate\n \n Review comment:\n   Is it possible that all truncated digits be zero?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-19T20:40:55.568+0000",
                    "updated": "2018-02-19T20:40:55.568+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13138708/comment/16369511",
                    "id": "16369511",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on a change in pull request #1619: ARROW-2162: [Python/C++] Decimal Values with too-high precision are multiplied by 100\nURL: https://github.com/apache/arrow/pull/1619#discussion_r169170046\n \n \n\n ##########\n File path: cpp/src/arrow/python/python-test.cc\n ##########\n @@ -167,5 +167,14 @@ TEST(BuiltinConversionTest, TestMixedTypeFails) {\n   ASSERT_RAISES(UnknownError, ConvertPySequence(list, pool, &arr));\n }\n \n+TEST_F(DecimalTest, FromPythonDecimalRescale) {\n+  Decimal128 value;\n+  OwnedRef python_decimal(this->CreatePythonDecimal(\"1.0134\"));\n+  auto type = ::arrow::decimal(10, 2);\n+  const auto& decimal_type = static_cast<const DecimalType&>(*type);\n+  ASSERT_RAISES(Invalid, internal::DecimalFromPythonDecimal(python_decimal.obj(),\n \n Review comment:\n   No, this would fail. I'm asserting that it returns an `Invalid` status code.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-19T20:54:25.337+0000",
                    "updated": "2018-02-19T20:54:25.337+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13138708/comment/16369513",
                    "id": "16369513",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on a change in pull request #1619: ARROW-2162: [Python/C++] Decimal Values with too-high precision are multiplied by 100\nURL: https://github.com/apache/arrow/pull/1619#discussion_r169170225\n \n \n\n ##########\n File path: cpp/src/arrow/util/decimal.cc\n ##########\n @@ -857,19 +857,31 @@ static const Decimal128 ScaleMultipliers[] = {\n Status Decimal128::Rescale(int32_t original_scale, int32_t new_scale,\n                            Decimal128* out) const {\n   DCHECK_NE(out, NULLPTR);\n-  DCHECK_NE(original_scale, new_scale);\n-  const int32_t delta_scale = original_scale - new_scale;\n+  DCHECK_NE(original_scale, new_scale) << \"original_scale == new_scale\";\n+\n+  const int32_t delta_scale = new_scale - original_scale;\n+\n+  // Fail if rescaling would truncate\n \n Review comment:\n   Meaning something like `decimal128(10, 2)` is the requested type but the input is something like `1.000` (scale of 3, but all zeros).\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-19T20:55:35.159+0000",
                    "updated": "2018-02-19T20:55:35.159+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13138708/comment/16369514",
                    "id": "16369514",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on a change in pull request #1619: ARROW-2162: [Python/C++] Decimal Values with too-high precision are multiplied by 100\nURL: https://github.com/apache/arrow/pull/1619#discussion_r169170225\n \n \n\n ##########\n File path: cpp/src/arrow/util/decimal.cc\n ##########\n @@ -857,19 +857,31 @@ static const Decimal128 ScaleMultipliers[] = {\n Status Decimal128::Rescale(int32_t original_scale, int32_t new_scale,\n                            Decimal128* out) const {\n   DCHECK_NE(out, NULLPTR);\n-  DCHECK_NE(original_scale, new_scale);\n-  const int32_t delta_scale = original_scale - new_scale;\n+  DCHECK_NE(original_scale, new_scale) << \"original_scale == new_scale\";\n+\n+  const int32_t delta_scale = new_scale - original_scale;\n+\n+  // Fail if rescaling would truncate\n \n Review comment:\n   Meaning something like `decimal128(10, 2)` is the requested type but the input is something like `1.000` (scale of 3, but all zeros)?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-19T20:55:42.498+0000",
                    "updated": "2018-02-19T20:55:42.498+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13138708/comment/16369515",
                    "id": "16369515",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on a change in pull request #1619: ARROW-2162: [Python/C++] Decimal Values with too-high precision are multiplied by 100\nURL: https://github.com/apache/arrow/pull/1619#discussion_r169170314\n \n \n\n ##########\n File path: cpp/src/arrow/util/decimal.cc\n ##########\n @@ -857,19 +857,31 @@ static const Decimal128 ScaleMultipliers[] = {\n Status Decimal128::Rescale(int32_t original_scale, int32_t new_scale,\n                            Decimal128* out) const {\n   DCHECK_NE(out, NULLPTR);\n-  DCHECK_NE(original_scale, new_scale);\n-  const int32_t delta_scale = original_scale - new_scale;\n+  DCHECK_NE(original_scale, new_scale) << \"original_scale == new_scale\";\n+\n+  const int32_t delta_scale = new_scale - original_scale;\n+\n+  // Fail if rescaling would truncate\n \n Review comment:\n   Yes.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-19T20:56:11.535+0000",
                    "updated": "2018-02-19T20:56:11.535+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13138708/comment/16369516",
                    "id": "16369516",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on a change in pull request #1619: ARROW-2162: [Python/C++] Decimal Values with too-high precision are multiplied by 100\nURL: https://github.com/apache/arrow/pull/1619#discussion_r169170397\n \n \n\n ##########\n File path: cpp/src/arrow/python/python-test.cc\n ##########\n @@ -167,5 +167,14 @@ TEST(BuiltinConversionTest, TestMixedTypeFails) {\n   ASSERT_RAISES(UnknownError, ConvertPySequence(list, pool, &arr));\n }\n \n+TEST_F(DecimalTest, FromPythonDecimalRescale) {\n+  Decimal128 value;\n+  OwnedRef python_decimal(this->CreatePythonDecimal(\"1.0134\"));\n+  auto type = ::arrow::decimal(10, 2);\n+  const auto& decimal_type = static_cast<const DecimalType&>(*type);\n+  ASSERT_RAISES(Invalid, internal::DecimalFromPythonDecimal(python_decimal.obj(),\n \n Review comment:\n   Yes, I meant it would fail because it refuses to truncate. I'm just suggesting to add a comment to make it clearer to the reader.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-19T20:56:50.307+0000",
                    "updated": "2018-02-19T20:56:50.307+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13138708/comment/16369524",
                    "id": "16369524",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on a change in pull request #1619: ARROW-2162: [Python/C++] Decimal Values with too-high precision are multiplied by 100\nURL: https://github.com/apache/arrow/pull/1619#discussion_r169171377\n \n \n\n ##########\n File path: cpp/src/arrow/python/python-test.cc\n ##########\n @@ -167,5 +167,14 @@ TEST(BuiltinConversionTest, TestMixedTypeFails) {\n   ASSERT_RAISES(UnknownError, ConvertPySequence(list, pool, &arr));\n }\n \n+TEST_F(DecimalTest, FromPythonDecimalRescale) {\n+  Decimal128 value;\n+  OwnedRef python_decimal(this->CreatePythonDecimal(\"1.0134\"));\n+  auto type = ::arrow::decimal(10, 2);\n+  const auto& decimal_type = static_cast<const DecimalType&>(*type);\n+  ASSERT_RAISES(Invalid, internal::DecimalFromPythonDecimal(python_decimal.obj(),\n \n Review comment:\n   I see :) Sure\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-19T21:04:14.705+0000",
                    "updated": "2018-02-19T21:04:14.705+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13138708/comment/16369560",
                    "id": "16369560",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on a change in pull request #1619: ARROW-2162: [Python/C++] Decimal Values with too-high precision are multiplied by 100\nURL: https://github.com/apache/arrow/pull/1619#discussion_r169178775\n \n \n\n ##########\n File path: cpp/src/arrow/util/decimal.cc\n ##########\n @@ -854,22 +854,56 @@ static const Decimal128 ScaleMultipliers[] = {\n     Decimal128(\"10000000000000000000000000000000000000\"),\n     Decimal128(\"100000000000000000000000000000000000000\")};\n \n+static bool RescaleWouldCauseDataLoss(const Decimal128& value, int32_t delta_scale,\n+                                      int32_t abs_delta_scale) {\n+  if (delta_scale < 0) {\n+    Decimal128 remainder;\n+    Decimal128 result;\n+    Decimal128 multiplier(ScaleMultipliers[abs_delta_scale]);\n+    DCHECK_NE(multiplier, 0);\n+    Status status = value.Divide(multiplier, &result, &remainder);\n+    DCHECK(status.ok()) << status.message();\n+    return remainder != 0;\n+  }\n+  return false;\n+}\n+\n Status Decimal128::Rescale(int32_t original_scale, int32_t new_scale,\n                            Decimal128* out) const {\n   DCHECK_NE(out, NULLPTR);\n-  DCHECK_NE(original_scale, new_scale);\n-  const int32_t delta_scale = original_scale - new_scale;\n+  DCHECK_NE(original_scale, new_scale) << \"original_scale == new_scale\";\n+\n+  const int32_t delta_scale = new_scale - original_scale;\n   const int32_t abs_delta_scale = std::abs(delta_scale);\n+\n   DCHECK_GE(abs_delta_scale, 1);\n   DCHECK_LE(abs_delta_scale, 38);\n \n+  // Fail if rescaling would lose information\n+  const bool rescale_would_cause_data_loss =\n+      RescaleWouldCauseDataLoss(*this, delta_scale, abs_delta_scale);\n+  if (delta_scale < 0 && rescale_would_cause_data_loss) {\n+    std::stringstream buf;\n+    buf << \"Rescaling decimal value from original scale of \" << original_scale\n+        << \" to new scale of \" << new_scale << \" would truncate the value\";\n+    return Status::Invalid(buf.str());\n+  }\n+\n   const Decimal128 scale_multiplier = ScaleMultipliers[abs_delta_scale];\n-  const Decimal128 result = *this * scale_multiplier;\n \n-  if (ARROW_PREDICT_FALSE(result < *this)) {\n+  Decimal128 result(*this);\n+\n+  if (delta_scale < 0) {\n+    result /= scale_multiplier;\n+  } else {\n+    result *= scale_multiplier;\n+  }\n+\n+  // Fail if we overflow\n+  if (ARROW_PREDICT_FALSE(result < *this && rescale_would_cause_data_loss)) {\n \n Review comment:\n   This isn't handling overflow properly. I'll add a test.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-19T21:56:54.576+0000",
                    "updated": "2018-02-19T21:56:54.576+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13138708/comment/16369588",
                    "id": "16369588",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on issue #1619: ARROW-2162: [Python/C++] Decimal Values with too-high precision are multiplied by 100\nURL: https://github.com/apache/arrow/pull/1619#issuecomment-366821392\n \n \n   @pitrou I'm now allowing truncation if there's no loss of data (i.e., division of the underlying integer by the change in scale has no remainder) and added a test for overflow.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-19T22:52:30.802+0000",
                    "updated": "2018-02-19T22:52:30.802+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13138708/comment/16369589",
                    "id": "16369589",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on issue #1619: ARROW-2162: [Python/C++] Decimal Values with too-high precision are multiplied by 100\nURL: https://github.com/apache/arrow/pull/1619#issuecomment-366821392\n \n \n   @pitrou I'm now allowing truncation if there's no loss of data (i.e., division of the underlying integer by the change in scale has no remainder, if the change in scale is negative) and added a test for overflow.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-19T22:55:03.548+0000",
                    "updated": "2018-02-19T22:55:03.548+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13138708/comment/16371838",
                    "id": "16371838",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud closed pull request #1619: ARROW-2162: [Python/C++] Decimal Values with too-high precision are multiplied by 100\nURL: https://github.com/apache/arrow/pull/1619\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/python/python-test.cc b/cpp/src/arrow/python/python-test.cc\nindex a2b832bdb..b76caaece 100644\n--- a/cpp/src/arrow/python/python-test.cc\n+++ b/cpp/src/arrow/python/python-test.cc\n@@ -201,5 +201,45 @@ TEST(BuiltinConversionTest, TestMixedTypeFails) {\n   ASSERT_RAISES(UnknownError, ConvertPySequence(list, pool, &arr));\n }\n \n+TEST_F(DecimalTest, FromPythonDecimalRescaleNotTruncateable) {\n+  // We fail when truncating values that would lose data if cast to a decimal type with\n+  // lower scale\n+  Decimal128 value;\n+  OwnedRef python_decimal(this->CreatePythonDecimal(\"1.001\"));\n+  auto type = ::arrow::decimal(10, 2);\n+  const auto& decimal_type = static_cast<const DecimalType&>(*type);\n+  ASSERT_RAISES(Invalid, internal::DecimalFromPythonDecimal(python_decimal.obj(),\n+                                                            decimal_type, &value));\n+}\n+\n+TEST_F(DecimalTest, FromPythonDecimalRescaleTruncateable) {\n+  // We allow truncation of values that do not lose precision when dividing by 10 * the\n+  // difference between the scales, e.g., 1.000 -> 1.00\n+  Decimal128 value;\n+  OwnedRef python_decimal(this->CreatePythonDecimal(\"1.000\"));\n+  auto type = ::arrow::decimal(10, 2);\n+  const auto& decimal_type = static_cast<const DecimalType&>(*type);\n+  ASSERT_OK(\n+      internal::DecimalFromPythonDecimal(python_decimal.obj(), decimal_type, &value));\n+  ASSERT_EQ(100, value.low_bits());\n+}\n+\n+TEST_F(DecimalTest, TestOverflowFails) {\n+  Decimal128 value;\n+  int32_t precision;\n+  int32_t scale;\n+  OwnedRef python_decimal(\n+      this->CreatePythonDecimal(\"9999999999999999999999999999999999999.9\"));\n+  ASSERT_OK(\n+      internal::InferDecimalPrecisionAndScale(python_decimal.obj(), &precision, &scale));\n+  ASSERT_EQ(38, precision);\n+  ASSERT_EQ(1, scale);\n+\n+  auto type = ::arrow::decimal(38, 38);\n+  const auto& decimal_type = static_cast<const DecimalType&>(*type);\n+  ASSERT_RAISES(Invalid, internal::DecimalFromPythonDecimal(python_decimal.obj(),\n+                                                            decimal_type, &value));\n+}\n+\n }  // namespace py\n }  // namespace arrow\ndiff --git a/cpp/src/arrow/util/decimal.cc b/cpp/src/arrow/util/decimal.cc\nindex e999854b1..a3c8cda76 100644\n--- a/cpp/src/arrow/util/decimal.cc\n+++ b/cpp/src/arrow/util/decimal.cc\n@@ -854,26 +854,46 @@ static const Decimal128 ScaleMultipliers[] = {\n     Decimal128(\"10000000000000000000000000000000000000\"),\n     Decimal128(\"100000000000000000000000000000000000000\")};\n \n+static bool RescaleWouldCauseDataLoss(const Decimal128& value, int32_t delta_scale,\n+                                      int32_t abs_delta_scale, Decimal128* result) {\n+  Decimal128 multiplier(ScaleMultipliers[abs_delta_scale]);\n+\n+  if (delta_scale < 0) {\n+    DCHECK_NE(multiplier, 0);\n+    Decimal128 remainder;\n+    Status status = value.Divide(multiplier, result, &remainder);\n+    DCHECK(status.ok()) << status.message();\n+    return remainder != 0;\n+  }\n+\n+  *result = value * multiplier;\n+  return *result < value;\n+}\n+\n Status Decimal128::Rescale(int32_t original_scale, int32_t new_scale,\n                            Decimal128* out) const {\n-  DCHECK_NE(out, NULLPTR);\n-  DCHECK_NE(original_scale, new_scale);\n-  const int32_t delta_scale = original_scale - new_scale;\n+  DCHECK_NE(out, NULLPTR) << \"out is nullptr\";\n+  DCHECK_NE(original_scale, new_scale) << \"original_scale != new_scale\";\n+\n+  const int32_t delta_scale = new_scale - original_scale;\n   const int32_t abs_delta_scale = std::abs(delta_scale);\n+\n   DCHECK_GE(abs_delta_scale, 1);\n   DCHECK_LE(abs_delta_scale, 38);\n \n-  const Decimal128 scale_multiplier = ScaleMultipliers[abs_delta_scale];\n-  const Decimal128 result = *this * scale_multiplier;\n+  Decimal128 result(*this);\n+  const bool rescale_would_cause_data_loss =\n+      RescaleWouldCauseDataLoss(result, delta_scale, abs_delta_scale, out);\n \n-  if (ARROW_PREDICT_FALSE(result < *this)) {\n+  // Fail if we overflow or truncate\n+  if (ARROW_PREDICT_FALSE(rescale_would_cause_data_loss)) {\n     std::stringstream buf;\n-    buf << \"Rescaling decimal value from original scale \" << original_scale\n-        << \" to new scale \" << new_scale << \" would cause overflow\";\n+    buf << \"Rescaling decimal value \" << ToString(original_scale)\n+        << \" from original scale of \" << original_scale << \" to new scale of \"\n+        << new_scale << \" would cause data loss\";\n     return Status::Invalid(buf.str());\n   }\n \n-  *out = result;\n   return Status::OK();\n }\n \ndiff --git a/python/pyarrow/tests/test_convert_pandas.py b/python/pyarrow/tests/test_convert_pandas.py\nindex f7718f06a..ef5eaaabc 100644\n--- a/python/pyarrow/tests/test_convert_pandas.py\n+++ b/python/pyarrow/tests/test_convert_pandas.py\n@@ -1132,6 +1132,17 @@ def test_decimal_128_to_pandas(self):\n         df = converted.to_pandas()\n         tm.assert_frame_equal(df, expected)\n \n+    def test_decimal_fails_with_truncation(self):\n+        data1 = [decimal.Decimal('1.234')]\n+        type1 = pa.decimal128(10, 2)\n+        with pytest.raises(pa.ArrowException):\n+            pa.array(data1, type=type1)\n+\n+        data2 = [decimal.Decimal('1.2345')]\n+        type2 = pa.decimal128(10, 3)\n+        with pytest.raises(pa.ArrowException):\n+            pa.array(data2, type=type2)\n+\n \n class TestListTypes(object):\n     \"\"\"\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-21T18:42:23.500+0000",
                    "updated": "2018-02-21T18:42:23.500+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13138708/comment/16371839",
                    "id": "16371839",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=cpcloud",
                        "name": "cpcloud",
                        "key": "cpcloud",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=cpcloud&avatarId=31265",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cpcloud&avatarId=31265",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cpcloud&avatarId=31265",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cpcloud&avatarId=31265"
                        },
                        "displayName": "Phillip Cloud",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 1619\n[https://github.com/apache/arrow/pull/1619]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=cpcloud",
                        "name": "cpcloud",
                        "key": "cpcloud",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=cpcloud&avatarId=31265",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cpcloud&avatarId=31265",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cpcloud&avatarId=31265",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cpcloud&avatarId=31265"
                        },
                        "displayName": "Phillip Cloud",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-02-21T18:42:29.187+0000",
                    "updated": "2018-02-21T18:42:29.187+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13138708/comment/16371840",
                    "id": "16371840",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on issue #1619: ARROW-2162: [Python/C++] Decimal Values with too-high precision are multiplied by 100\nURL: https://github.com/apache/arrow/pull/1619#issuecomment-367427993\n \n \n   @pitrou thanks for the thorough review, much appreciated!\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-21T18:42:50.073+0000",
                    "updated": "2018-02-21T18:42:50.073+0000"
                }
            ],
            "maxResults": 16,
            "total": 16,
            "startAt": 0
        },
        "customfield_12311820": "0|i3q7sv:",
        "customfield_12314139": null
    }
}