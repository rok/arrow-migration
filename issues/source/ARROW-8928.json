{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13307110",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307110",
    "key": "ARROW-8928",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350323",
                "id": "12350323",
                "description": "",
                "name": "6.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-10-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available",
            "query-engine"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12589379",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12589379",
                "type": {
                    "id": "12310460",
                    "name": "Child-Issue",
                    "inward": "is a child of",
                    "outward": "is a parent of",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310460"
                },
                "inwardIssue": {
                    "id": "13306872",
                    "key": "ARROW-8894",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13306872",
                    "fields": {
                        "summary": "[C++] C++ array kernels framework and execution buildout (umbrella issue)",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                            "description": "The issue is open and ready for the assignee to start work on it.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                            "name": "Open",
                            "id": "1",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                                "id": 2,
                                "key": "new",
                                "colorName": "blue-gray",
                                "name": "To Do"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                            "id": "2",
                            "description": "A new feature of the product, which has yet to be developed.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                            "name": "New Feature",
                            "subtask": false,
                            "avatarId": 21141
                        }
                    }
                }
            },
            {
                "id": "12615163",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12615163",
                "type": {
                    "id": "12310460",
                    "name": "Child-Issue",
                    "inward": "is a child of",
                    "outward": "is a parent of",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310460"
                },
                "inwardIssue": {
                    "id": "13376404",
                    "key": "ARROW-12633",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376404",
                    "fields": {
                        "summary": "[C++] Query engine umbrella issue",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                            "description": "The issue is open and ready for the assignee to start work on it.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                            "name": "Open",
                            "id": "1",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                                "id": 2,
                                "key": "new",
                                "colorName": "blue-gray",
                                "name": "To Do"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                            "id": "2",
                            "description": "A new feature of the product, which has yet to be developed.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                            "name": "New Feature",
                            "subtask": false,
                            "avatarId": 21141
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 9000,
            "total": 9000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 9000,
            "total": 9000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8928/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 15,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307110/worklog/538784",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm opened a new pull request #9280:\nURL: https://github.com/apache/arrow/pull/9280\n\n\n   These are only preliminary benchmarks but may help in examining microperformance overhead related to `ExecBatch` and its implementation (as a `vector<Datum>`).\r\n   \r\n   It may be desirable to devise an \"array reference\" data structure with few or no heap-allocated data structures and no `shared_ptr` interactions required to obtain memory addresses and other array information.\r\n   \r\n   On my test machine (macOS i9-9880H 2.3ghz), I see about 472 CPU cycles per field overhead for each ExecBatch produced. These benchmarks take a record batch with 1M rows and 10 columns/fields and iterates through the rows in smaller ExecBatches of the indicated sizes\r\n   \r\n   ```\r\n   BM_ExecBatchIterator/256      8207877 ns      8204914 ns           81 items_per_second=121.878/s\r\n   BM_ExecBatchIterator/512      4421049 ns      4419958 ns          166 items_per_second=226.247/s\r\n   BM_ExecBatchIterator/1024     2056636 ns      2055369 ns          333 items_per_second=486.531/s\r\n   BM_ExecBatchIterator/2048     1056415 ns      1056264 ns          682 items_per_second=946.733/s\r\n   BM_ExecBatchIterator/4096      514276 ns       514136 ns         1246 items_per_second=1.94501k/s\r\n   BM_ExecBatchIterator/8192      262539 ns       262391 ns         2736 items_per_second=3.81111k/s\r\n   BM_ExecBatchIterator/16384     128995 ns       128974 ns         5398 items_per_second=7.75351k/s\r\n   BM_ExecBatchIterator/32768      64987 ns        64970 ns        10811 items_per_second=15.3917k/s\r\n   ```\r\n   \r\n   So for the 1024 case, it takes 2,055,367 ns to iterate through all 1024 batches. That seems a bit expensive to me (?) \u2014 I suspect we can do better while also improving compilation times and reducing generated code size by using simpler data structures in our compute internals.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-21T00:57:01.924+0000",
                    "updated": "2021-01-21T00:57:01.924+0000",
                    "started": "2021-01-21T00:57:01.923+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "538784",
                    "issueId": "13307110"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307110/worklog/538787",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #9280:\nURL: https://github.com/apache/arrow/pull/9280#issuecomment-764142561\n\n\n   https://issues.apache.org/jira/browse/ARROW-8928\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-21T01:07:53.250+0000",
                    "updated": "2021-01-21T01:07:53.250+0000",
                    "started": "2021-01-21T01:07:53.249+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "538787",
                    "issueId": "13307110"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307110/worklog/538847",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on a change in pull request #9280:\nURL: https://github.com/apache/arrow/pull/9280#discussion_r561589279\n\n\n\n##########\nFile path: cpp/src/arrow/compute/internals_benchmark.cc\n##########\n@@ -0,0 +1,86 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"benchmark/benchmark.h\"\n+\n+#include \"arrow/compute/exec_internal.h\"\n+#include \"arrow/testing/gtest_util.h\"\n+#include \"arrow/testing/random.h\"\n+#include \"arrow/util/benchmark_util.h\"\n+\n+namespace arrow {\n+namespace compute {\n+namespace detail {\n+\n+constexpr int32_t kSeed = 0xfede4a7e;\n+\n+void BM_ExecBatchIterator(benchmark::State& state) {\n+  // Measure overhead related to deconstructing vector<Datum> into a sequence of ExecBatch\n+  random::RandomArrayGenerator rag(kSeed);\n+\n+  const int64_t length = 1 << 20;\n+  const int num_fields = 10;\n+\n+  std::vector<Datum> args(num_fields);\n+  for (int i = 0; i < num_fields; ++i) {\n+    args[i] = rag.Int64(length, 0, 100)->data();\n+  }\n+\n+  for (auto _ : state) {\n+    std::unique_ptr<ExecBatchIterator> it =\n+        *ExecBatchIterator::Make(args, state.range(0));\n+    ExecBatch batch;\n+    while (it->Next(&batch)) {\n+      for (int i = 0; i < num_fields; ++i) {\n+        auto data = batch.values[i].array()->buffers[1]->data();\n+        benchmark::DoNotOptimize(data);\n+      }\n+      continue;\n\nReview comment:\n       remove it?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-21T04:06:34.788+0000",
                    "updated": "2021-01-21T04:06:34.788+0000",
                    "started": "2021-01-21T04:06:34.788+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "538847",
                    "issueId": "13307110"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307110/worklog/538848",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on a change in pull request #9280:\nURL: https://github.com/apache/arrow/pull/9280#discussion_r561589436\n\n\n\n##########\nFile path: cpp/src/arrow/compute/internals_benchmark.cc\n##########\n@@ -0,0 +1,86 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"benchmark/benchmark.h\"\n+\n+#include \"arrow/compute/exec_internal.h\"\n+#include \"arrow/testing/gtest_util.h\"\n+#include \"arrow/testing/random.h\"\n+#include \"arrow/util/benchmark_util.h\"\n+\n+namespace arrow {\n+namespace compute {\n+namespace detail {\n+\n+constexpr int32_t kSeed = 0xfede4a7e;\n+\n+void BM_ExecBatchIterator(benchmark::State& state) {\n+  // Measure overhead related to deconstructing vector<Datum> into a sequence of ExecBatch\n+  random::RandomArrayGenerator rag(kSeed);\n+\n+  const int64_t length = 1 << 20;\n+  const int num_fields = 10;\n+\n+  std::vector<Datum> args(num_fields);\n+  for (int i = 0; i < num_fields; ++i) {\n+    args[i] = rag.Int64(length, 0, 100)->data();\n+  }\n+\n+  for (auto _ : state) {\n+    std::unique_ptr<ExecBatchIterator> it =\n+        *ExecBatchIterator::Make(args, state.range(0));\n+    ExecBatch batch;\n+    while (it->Next(&batch)) {\n+      for (int i = 0; i < num_fields; ++i) {\n+        auto data = batch.values[i].array()->buffers[1]->data();\n+        benchmark::DoNotOptimize(data);\n+      }\n+      continue;\n+    }\n+    benchmark::DoNotOptimize(batch);\n+  }\n+\n+  state.SetItemsProcessed(state.iterations());\n+}\n+\n+void BM_DatumSlice(benchmark::State& state) {\n+  // Measure overhead related to deconstructing vector<Datum> into a sequence of ExecBatch\n+  random::RandomArrayGenerator rag(kSeed);\n+\n+  const int64_t length = 1000;\n+\n+  int num_datums = 1000;\n\nReview comment:\n       also define as const?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-21T04:07:18.353+0000",
                    "updated": "2021-01-21T04:07:18.353+0000",
                    "started": "2021-01-21T04:07:18.353+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "538848",
                    "issueId": "13307110"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307110/worklog/539206",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #9280:\nURL: https://github.com/apache/arrow/pull/9280#discussion_r562057646\n\n\n\n##########\nFile path: cpp/src/arrow/compute/internals_benchmark.cc\n##########\n@@ -0,0 +1,86 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n\nReview comment:\n       We already have `function_benchmark.cc` for such internals benchmarks.\n\n##########\nFile path: cpp/src/arrow/compute/internals_benchmark.cc\n##########\n@@ -0,0 +1,86 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"benchmark/benchmark.h\"\n+\n+#include \"arrow/compute/exec_internal.h\"\n+#include \"arrow/testing/gtest_util.h\"\n+#include \"arrow/testing/random.h\"\n+#include \"arrow/util/benchmark_util.h\"\n+\n+namespace arrow {\n+namespace compute {\n+namespace detail {\n+\n+constexpr int32_t kSeed = 0xfede4a7e;\n+\n+void BM_ExecBatchIterator(benchmark::State& state) {\n+  // Measure overhead related to deconstructing vector<Datum> into a sequence of ExecBatch\n+  random::RandomArrayGenerator rag(kSeed);\n+\n+  const int64_t length = 1 << 20;\n+  const int num_fields = 10;\n+\n+  std::vector<Datum> args(num_fields);\n+  for (int i = 0; i < num_fields; ++i) {\n+    args[i] = rag.Int64(length, 0, 100)->data();\n+  }\n+\n+  for (auto _ : state) {\n+    std::unique_ptr<ExecBatchIterator> it =\n+        *ExecBatchIterator::Make(args, state.range(0));\n+    ExecBatch batch;\n+    while (it->Next(&batch)) {\n+      for (int i = 0; i < num_fields; ++i) {\n+        auto data = batch.values[i].array()->buffers[1]->data();\n+        benchmark::DoNotOptimize(data);\n+      }\n+      continue;\n+    }\n+    benchmark::DoNotOptimize(batch);\n+  }\n+\n+  state.SetItemsProcessed(state.iterations());\n+}\n+\n+void BM_DatumSlice(benchmark::State& state) {\n+  // Measure overhead related to deconstructing vector<Datum> into a sequence of ExecBatch\n+  random::RandomArrayGenerator rag(kSeed);\n+\n+  const int64_t length = 1000;\n+\n+  int num_datums = 1000;\n+  std::vector<Datum> datums(num_datums);\n+  for (int i = 0; i < num_datums; ++i) {\n+    datums[i] = rag.Int64(length, 0, 100)->data();\n+  }\n+\n+  for (auto _ : state) {\n+    for (const Datum& datum : datums) {\n+      auto slice = datum.array()->Slice(16, 64);\n\nReview comment:\n       Is it significantly different from slicing an array? Otherwise, is there a point for the specific \"slice a datum\" operation?\n\n##########\nFile path: cpp/src/arrow/compute/internals_benchmark.cc\n##########\n@@ -0,0 +1,86 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"benchmark/benchmark.h\"\n+\n+#include \"arrow/compute/exec_internal.h\"\n+#include \"arrow/testing/gtest_util.h\"\n+#include \"arrow/testing/random.h\"\n+#include \"arrow/util/benchmark_util.h\"\n+\n+namespace arrow {\n+namespace compute {\n+namespace detail {\n+\n+constexpr int32_t kSeed = 0xfede4a7e;\n+\n+void BM_ExecBatchIterator(benchmark::State& state) {\n+  // Measure overhead related to deconstructing vector<Datum> into a sequence of ExecBatch\n+  random::RandomArrayGenerator rag(kSeed);\n+\n+  const int64_t length = 1 << 20;\n+  const int num_fields = 10;\n+\n+  std::vector<Datum> args(num_fields);\n+  for (int i = 0; i < num_fields; ++i) {\n+    args[i] = rag.Int64(length, 0, 100)->data();\n+  }\n+\n+  for (auto _ : state) {\n+    std::unique_ptr<ExecBatchIterator> it =\n+        *ExecBatchIterator::Make(args, state.range(0));\n+    ExecBatch batch;\n+    while (it->Next(&batch)) {\n+      for (int i = 0; i < num_fields; ++i) {\n+        auto data = batch.values[i].array()->buffers[1]->data();\n+        benchmark::DoNotOptimize(data);\n+      }\n+      continue;\n+    }\n+    benchmark::DoNotOptimize(batch);\n+  }\n+\n+  state.SetItemsProcessed(state.iterations());\n\nReview comment:\n       \"items\" is a bit ambiguous in this benchmark, but I would expect something else than the number of iterations. Perhaps the number of arrays yielded in the inner loop above?\n\n##########\nFile path: cpp/src/arrow/compute/internals_benchmark.cc\n##########\n@@ -0,0 +1,86 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"benchmark/benchmark.h\"\n+\n+#include \"arrow/compute/exec_internal.h\"\n+#include \"arrow/testing/gtest_util.h\"\n+#include \"arrow/testing/random.h\"\n+#include \"arrow/util/benchmark_util.h\"\n+\n+namespace arrow {\n+namespace compute {\n+namespace detail {\n+\n+constexpr int32_t kSeed = 0xfede4a7e;\n+\n+void BM_ExecBatchIterator(benchmark::State& state) {\n+  // Measure overhead related to deconstructing vector<Datum> into a sequence of ExecBatch\n+  random::RandomArrayGenerator rag(kSeed);\n+\n+  const int64_t length = 1 << 20;\n+  const int num_fields = 10;\n+\n+  std::vector<Datum> args(num_fields);\n+  for (int i = 0; i < num_fields; ++i) {\n+    args[i] = rag.Int64(length, 0, 100)->data();\n+  }\n+\n+  for (auto _ : state) {\n+    std::unique_ptr<ExecBatchIterator> it =\n+        *ExecBatchIterator::Make(args, state.range(0));\n+    ExecBatch batch;\n+    while (it->Next(&batch)) {\n+      for (int i = 0; i < num_fields; ++i) {\n+        auto data = batch.values[i].array()->buffers[1]->data();\n+        benchmark::DoNotOptimize(data);\n+      }\n+      continue;\n+    }\n+    benchmark::DoNotOptimize(batch);\n+  }\n+\n+  state.SetItemsProcessed(state.iterations());\n+}\n+\n+void BM_DatumSlice(benchmark::State& state) {\n+  // Measure overhead related to deconstructing vector<Datum> into a sequence of ExecBatch\n\nReview comment:\n       Looks like this was copy-pasted?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-21T17:23:56.399+0000",
                    "updated": "2021-01-21T17:23:56.399+0000",
                    "started": "2021-01-21T17:23:56.399+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "539206",
                    "issueId": "13307110"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307110/worklog/539262",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #9280:\nURL: https://github.com/apache/arrow/pull/9280#discussion_r562121639\n\n\n\n##########\nFile path: cpp/src/arrow/compute/internals_benchmark.cc\n##########\n@@ -0,0 +1,86 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n\nReview comment:\n       I can merge these together then. \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-21T18:55:32.331+0000",
                    "updated": "2021-01-21T18:55:32.331+0000",
                    "started": "2021-01-21T18:55:32.331+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "539262",
                    "issueId": "13307110"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307110/worklog/539589",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on a change in pull request #9280:\nURL: https://github.com/apache/arrow/pull/9280#discussion_r561589279\n\n\n\n##########\nFile path: cpp/src/arrow/compute/internals_benchmark.cc\n##########\n@@ -0,0 +1,86 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"benchmark/benchmark.h\"\n+\n+#include \"arrow/compute/exec_internal.h\"\n+#include \"arrow/testing/gtest_util.h\"\n+#include \"arrow/testing/random.h\"\n+#include \"arrow/util/benchmark_util.h\"\n+\n+namespace arrow {\n+namespace compute {\n+namespace detail {\n+\n+constexpr int32_t kSeed = 0xfede4a7e;\n+\n+void BM_ExecBatchIterator(benchmark::State& state) {\n+  // Measure overhead related to deconstructing vector<Datum> into a sequence of ExecBatch\n+  random::RandomArrayGenerator rag(kSeed);\n+\n+  const int64_t length = 1 << 20;\n+  const int num_fields = 10;\n+\n+  std::vector<Datum> args(num_fields);\n+  for (int i = 0; i < num_fields; ++i) {\n+    args[i] = rag.Int64(length, 0, 100)->data();\n+  }\n+\n+  for (auto _ : state) {\n+    std::unique_ptr<ExecBatchIterator> it =\n+        *ExecBatchIterator::Make(args, state.range(0));\n+    ExecBatch batch;\n+    while (it->Next(&batch)) {\n+      for (int i = 0; i < num_fields; ++i) {\n+        auto data = batch.values[i].array()->buffers[1]->data();\n+        benchmark::DoNotOptimize(data);\n+      }\n+      continue;\n\nReview comment:\n       remove it?\n\n##########\nFile path: cpp/src/arrow/compute/internals_benchmark.cc\n##########\n@@ -0,0 +1,86 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"benchmark/benchmark.h\"\n+\n+#include \"arrow/compute/exec_internal.h\"\n+#include \"arrow/testing/gtest_util.h\"\n+#include \"arrow/testing/random.h\"\n+#include \"arrow/util/benchmark_util.h\"\n+\n+namespace arrow {\n+namespace compute {\n+namespace detail {\n+\n+constexpr int32_t kSeed = 0xfede4a7e;\n+\n+void BM_ExecBatchIterator(benchmark::State& state) {\n+  // Measure overhead related to deconstructing vector<Datum> into a sequence of ExecBatch\n+  random::RandomArrayGenerator rag(kSeed);\n+\n+  const int64_t length = 1 << 20;\n+  const int num_fields = 10;\n+\n+  std::vector<Datum> args(num_fields);\n+  for (int i = 0; i < num_fields; ++i) {\n+    args[i] = rag.Int64(length, 0, 100)->data();\n+  }\n+\n+  for (auto _ : state) {\n+    std::unique_ptr<ExecBatchIterator> it =\n+        *ExecBatchIterator::Make(args, state.range(0));\n+    ExecBatch batch;\n+    while (it->Next(&batch)) {\n+      for (int i = 0; i < num_fields; ++i) {\n+        auto data = batch.values[i].array()->buffers[1]->data();\n+        benchmark::DoNotOptimize(data);\n+      }\n+      continue;\n+    }\n+    benchmark::DoNotOptimize(batch);\n+  }\n+\n+  state.SetItemsProcessed(state.iterations());\n+}\n+\n+void BM_DatumSlice(benchmark::State& state) {\n+  // Measure overhead related to deconstructing vector<Datum> into a sequence of ExecBatch\n+  random::RandomArrayGenerator rag(kSeed);\n+\n+  const int64_t length = 1000;\n+\n+  int num_datums = 1000;\n\nReview comment:\n       also define as const?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-22T05:47:00.424+0000",
                    "updated": "2021-01-22T05:47:00.424+0000",
                    "started": "2021-01-22T05:47:00.424+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "539589",
                    "issueId": "13307110"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307110/worklog/539687",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #9280:\nURL: https://github.com/apache/arrow/pull/9280#discussion_r562057646\n\n\n\n##########\nFile path: cpp/src/arrow/compute/internals_benchmark.cc\n##########\n@@ -0,0 +1,86 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n\nReview comment:\n       We already have `function_benchmark.cc` for such internals benchmarks.\n\n##########\nFile path: cpp/src/arrow/compute/internals_benchmark.cc\n##########\n@@ -0,0 +1,86 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"benchmark/benchmark.h\"\n+\n+#include \"arrow/compute/exec_internal.h\"\n+#include \"arrow/testing/gtest_util.h\"\n+#include \"arrow/testing/random.h\"\n+#include \"arrow/util/benchmark_util.h\"\n+\n+namespace arrow {\n+namespace compute {\n+namespace detail {\n+\n+constexpr int32_t kSeed = 0xfede4a7e;\n+\n+void BM_ExecBatchIterator(benchmark::State& state) {\n+  // Measure overhead related to deconstructing vector<Datum> into a sequence of ExecBatch\n+  random::RandomArrayGenerator rag(kSeed);\n+\n+  const int64_t length = 1 << 20;\n+  const int num_fields = 10;\n+\n+  std::vector<Datum> args(num_fields);\n+  for (int i = 0; i < num_fields; ++i) {\n+    args[i] = rag.Int64(length, 0, 100)->data();\n+  }\n+\n+  for (auto _ : state) {\n+    std::unique_ptr<ExecBatchIterator> it =\n+        *ExecBatchIterator::Make(args, state.range(0));\n+    ExecBatch batch;\n+    while (it->Next(&batch)) {\n+      for (int i = 0; i < num_fields; ++i) {\n+        auto data = batch.values[i].array()->buffers[1]->data();\n+        benchmark::DoNotOptimize(data);\n+      }\n+      continue;\n+    }\n+    benchmark::DoNotOptimize(batch);\n+  }\n+\n+  state.SetItemsProcessed(state.iterations());\n+}\n+\n+void BM_DatumSlice(benchmark::State& state) {\n+  // Measure overhead related to deconstructing vector<Datum> into a sequence of ExecBatch\n+  random::RandomArrayGenerator rag(kSeed);\n+\n+  const int64_t length = 1000;\n+\n+  int num_datums = 1000;\n+  std::vector<Datum> datums(num_datums);\n+  for (int i = 0; i < num_datums; ++i) {\n+    datums[i] = rag.Int64(length, 0, 100)->data();\n+  }\n+\n+  for (auto _ : state) {\n+    for (const Datum& datum : datums) {\n+      auto slice = datum.array()->Slice(16, 64);\n\nReview comment:\n       Is it significantly different from slicing an array? Otherwise, is there a point for the specific \"slice a datum\" operation?\n\n##########\nFile path: cpp/src/arrow/compute/internals_benchmark.cc\n##########\n@@ -0,0 +1,86 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"benchmark/benchmark.h\"\n+\n+#include \"arrow/compute/exec_internal.h\"\n+#include \"arrow/testing/gtest_util.h\"\n+#include \"arrow/testing/random.h\"\n+#include \"arrow/util/benchmark_util.h\"\n+\n+namespace arrow {\n+namespace compute {\n+namespace detail {\n+\n+constexpr int32_t kSeed = 0xfede4a7e;\n+\n+void BM_ExecBatchIterator(benchmark::State& state) {\n+  // Measure overhead related to deconstructing vector<Datum> into a sequence of ExecBatch\n+  random::RandomArrayGenerator rag(kSeed);\n+\n+  const int64_t length = 1 << 20;\n+  const int num_fields = 10;\n+\n+  std::vector<Datum> args(num_fields);\n+  for (int i = 0; i < num_fields; ++i) {\n+    args[i] = rag.Int64(length, 0, 100)->data();\n+  }\n+\n+  for (auto _ : state) {\n+    std::unique_ptr<ExecBatchIterator> it =\n+        *ExecBatchIterator::Make(args, state.range(0));\n+    ExecBatch batch;\n+    while (it->Next(&batch)) {\n+      for (int i = 0; i < num_fields; ++i) {\n+        auto data = batch.values[i].array()->buffers[1]->data();\n+        benchmark::DoNotOptimize(data);\n+      }\n+      continue;\n+    }\n+    benchmark::DoNotOptimize(batch);\n+  }\n+\n+  state.SetItemsProcessed(state.iterations());\n\nReview comment:\n       \"items\" is a bit ambiguous in this benchmark, but I would expect something else than the number of iterations. Perhaps the number of arrays yielded in the inner loop above?\n\n##########\nFile path: cpp/src/arrow/compute/internals_benchmark.cc\n##########\n@@ -0,0 +1,86 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"benchmark/benchmark.h\"\n+\n+#include \"arrow/compute/exec_internal.h\"\n+#include \"arrow/testing/gtest_util.h\"\n+#include \"arrow/testing/random.h\"\n+#include \"arrow/util/benchmark_util.h\"\n+\n+namespace arrow {\n+namespace compute {\n+namespace detail {\n+\n+constexpr int32_t kSeed = 0xfede4a7e;\n+\n+void BM_ExecBatchIterator(benchmark::State& state) {\n+  // Measure overhead related to deconstructing vector<Datum> into a sequence of ExecBatch\n+  random::RandomArrayGenerator rag(kSeed);\n+\n+  const int64_t length = 1 << 20;\n+  const int num_fields = 10;\n+\n+  std::vector<Datum> args(num_fields);\n+  for (int i = 0; i < num_fields; ++i) {\n+    args[i] = rag.Int64(length, 0, 100)->data();\n+  }\n+\n+  for (auto _ : state) {\n+    std::unique_ptr<ExecBatchIterator> it =\n+        *ExecBatchIterator::Make(args, state.range(0));\n+    ExecBatch batch;\n+    while (it->Next(&batch)) {\n+      for (int i = 0; i < num_fields; ++i) {\n+        auto data = batch.values[i].array()->buffers[1]->data();\n+        benchmark::DoNotOptimize(data);\n+      }\n+      continue;\n+    }\n+    benchmark::DoNotOptimize(batch);\n+  }\n+\n+  state.SetItemsProcessed(state.iterations());\n+}\n+\n+void BM_DatumSlice(benchmark::State& state) {\n+  // Measure overhead related to deconstructing vector<Datum> into a sequence of ExecBatch\n\nReview comment:\n       Looks like this was copy-pasted?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-22T06:01:29.224+0000",
                    "updated": "2021-01-22T06:01:29.224+0000",
                    "started": "2021-01-22T06:01:29.223+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "539687",
                    "issueId": "13307110"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307110/worklog/539698",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm opened a new pull request #9280:\nURL: https://github.com/apache/arrow/pull/9280\n\n\n   These are only preliminary benchmarks but may help in examining microperformance overhead related to `ExecBatch` and its implementation (as a `vector<Datum>`).\r\n   \r\n   It may be desirable to devise an \"array reference\" data structure with few or no heap-allocated data structures and no `shared_ptr` interactions required to obtain memory addresses and other array information.\r\n   \r\n   On my test machine (macOS i9-9880H 2.3ghz), I see about 472 CPU cycles per field overhead for each ExecBatch produced. These benchmarks take a record batch with 1M rows and 10 columns/fields and iterates through the rows in smaller ExecBatches of the indicated sizes\r\n   \r\n   ```\r\n   BM_ExecBatchIterator/256      8207877 ns      8204914 ns           81 items_per_second=121.878/s\r\n   BM_ExecBatchIterator/512      4421049 ns      4419958 ns          166 items_per_second=226.247/s\r\n   BM_ExecBatchIterator/1024     2056636 ns      2055369 ns          333 items_per_second=486.531/s\r\n   BM_ExecBatchIterator/2048     1056415 ns      1056264 ns          682 items_per_second=946.733/s\r\n   BM_ExecBatchIterator/4096      514276 ns       514136 ns         1246 items_per_second=1.94501k/s\r\n   BM_ExecBatchIterator/8192      262539 ns       262391 ns         2736 items_per_second=3.81111k/s\r\n   BM_ExecBatchIterator/16384     128995 ns       128974 ns         5398 items_per_second=7.75351k/s\r\n   BM_ExecBatchIterator/32768      64987 ns        64970 ns        10811 items_per_second=15.3917k/s\r\n   ```\r\n   \r\n   So for the 1024 case, it takes 2,055,367 ns to iterate through all 1024 batches. That seems a bit expensive to me (?) \u2014 I suspect we can do better while also improving compilation times and reducing generated code size by using simpler data structures in our compute internals.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-22T06:02:54.328+0000",
                    "updated": "2021-01-22T06:02:54.328+0000",
                    "started": "2021-01-22T06:02:54.327+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "539698",
                    "issueId": "13307110"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307110/worklog/539760",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #9280:\nURL: https://github.com/apache/arrow/pull/9280#issuecomment-764142561\n\n\n   https://issues.apache.org/jira/browse/ARROW-8928\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-22T06:11:35.448+0000",
                    "updated": "2021-01-22T06:11:35.448+0000",
                    "started": "2021-01-22T06:11:35.447+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "539760",
                    "issueId": "13307110"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307110/worklog/539915",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #9280:\nURL: https://github.com/apache/arrow/pull/9280#discussion_r562121639\n\n\n\n##########\nFile path: cpp/src/arrow/compute/internals_benchmark.cc\n##########\n@@ -0,0 +1,86 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n\nReview comment:\n       I can merge these together then. \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-22T06:35:24.624+0000",
                    "updated": "2021-01-22T06:35:24.624+0000",
                    "started": "2021-01-22T06:35:24.624+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "539915",
                    "issueId": "13307110"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307110/worklog/628811",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #9280:\nURL: https://github.com/apache/arrow/pull/9280#issuecomment-887924786\n\n\n   Some updated performance (gcc 9.3 locally on x86):\r\n   \r\n   ```\r\n   -------------------------------------------------------------------------------------\r\n   Benchmark                           Time             CPU   Iterations UserCounters...\r\n   -------------------------------------------------------------------------------------\r\n   BM_ExecBatchIterator/256     11314787 ns     11313272 ns           62 items_per_second=88.3918/s\r\n   BM_ExecBatchIterator/512      5670423 ns      5669598 ns          123 items_per_second=176.379/s\r\n   BM_ExecBatchIterator/1024     2903937 ns      2903272 ns          242 items_per_second=344.439/s\r\n   BM_ExecBatchIterator/2048     1461982 ns      1461711 ns          481 items_per_second=684.13/s\r\n   BM_ExecBatchIterator/4096      739382 ns       739235 ns          951 items_per_second=1.35275k/s\r\n   BM_ExecBatchIterator/8192      370264 ns       370207 ns         1892 items_per_second=2.70119k/s\r\n   BM_ExecBatchIterator/16384     186622 ns       186573 ns         3755 items_per_second=5.35983k/s\r\n   BM_ExecBatchIterator/32768      93581 ns        93567 ns         7437 items_per_second=10.6876k/s\r\n   ```\r\n   \r\n   The way to read this is that breaking `ExecBatch` with 32 primitive array fields into smaller ExecBatches (and then accessing a a data pointer in each batch) has an overhead of approximately:\r\n   \r\n   * 2800 nanoseconds per batch\r\n   * 88.6 nanoseconds per batch per field\r\n   \r\n   So if you wanted to break a batch with 1M elements into batches of size 1024 for finer-grained parallel processing, you would pay  2900 microseconds to do so. On this same machine, I have:\r\n   \r\n   ```\r\n   In [2]: arr = np.random.randn(1 << 20)                                                                                                                                                         \r\n   \r\n   In [3]: timeit arr * 2                                                                                                                                                                         \r\n   395 \u00b5s \u00b1 8.61 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 1000 loops each)\r\n   ```\r\n   \r\n   This seems problematic if we wish to enable array expression evaluation on smaller batch sizes to keep more data in CPU caches. I'll bring this up on the mailing list to see what people think. \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-28T00:40:04.862+0000",
                    "updated": "2021-07-28T00:40:04.862+0000",
                    "started": "2021-07-28T00:40:04.862+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "628811",
                    "issueId": "13307110"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307110/worklog/631242",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #9280:\nURL: https://github.com/apache/arrow/pull/9280#discussion_r679355446\n\n\n\n##########\nFile path: cpp/src/arrow/compute/internals_benchmark.cc\n##########\n@@ -0,0 +1,86 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"benchmark/benchmark.h\"\n+\n+#include \"arrow/compute/exec_internal.h\"\n+#include \"arrow/testing/gtest_util.h\"\n+#include \"arrow/testing/random.h\"\n+#include \"arrow/util/benchmark_util.h\"\n+\n+namespace arrow {\n+namespace compute {\n+namespace detail {\n+\n+constexpr int32_t kSeed = 0xfede4a7e;\n+\n+void BM_ExecBatchIterator(benchmark::State& state) {\n+  // Measure overhead related to deconstructing vector<Datum> into a sequence of ExecBatch\n+  random::RandomArrayGenerator rag(kSeed);\n+\n+  const int64_t length = 1 << 20;\n+  const int num_fields = 10;\n+\n+  std::vector<Datum> args(num_fields);\n+  for (int i = 0; i < num_fields; ++i) {\n+    args[i] = rag.Int64(length, 0, 100)->data();\n+  }\n+\n+  for (auto _ : state) {\n+    std::unique_ptr<ExecBatchIterator> it =\n+        *ExecBatchIterator::Make(args, state.range(0));\n+    ExecBatch batch;\n+    while (it->Next(&batch)) {\n+      for (int i = 0; i < num_fields; ++i) {\n+        auto data = batch.values[i].array()->buffers[1]->data();\n+        benchmark::DoNotOptimize(data);\n+      }\n+      continue;\n+    }\n+    benchmark::DoNotOptimize(batch);\n+  }\n+\n+  state.SetItemsProcessed(state.iterations());\n\nReview comment:\n       I added a comment to explain that iterations-per-second gives easier interpretation of the input-splitting overhead (so 300 iterations/second would mean 3.33ms of input splitting overhead for each use)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-29T17:36:24.726+0000",
                    "updated": "2021-07-29T17:36:24.726+0000",
                    "started": "2021-07-29T17:36:24.726+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "631242",
                    "issueId": "13307110"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307110/worklog/631245",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #9280:\nURL: https://github.com/apache/arrow/pull/9280#issuecomment-889333841\n\n\n   @cyb70289 @pitrou I addressed your comments, I think, could you take another look and then we can canonize this benchmark to help with the `ExecBatch` performance revamp? \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-29T17:37:17.016+0000",
                    "updated": "2021-07-29T17:37:17.016+0000",
                    "started": "2021-07-29T17:37:17.016+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "631245",
                    "issueId": "13307110"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307110/worklog/632496",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou closed pull request #9280:\nURL: https://github.com/apache/arrow/pull/9280\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-02T17:06:45.503+0000",
                    "updated": "2021-08-02T17:06:45.503+0000",
                    "started": "2021-08-02T17:06:45.502+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "632496",
                    "issueId": "13307110"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 9000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@7719a905[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@12591824[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@25f578f0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7fb7cc52[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@58912fcd[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@32b9e5db[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3c852984[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@7d91a71a[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2caf1022[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@51c5bf51[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@441965e4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@34c0a30a[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 9000,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Aug 02 17:06:30 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-08-02T17:06:30.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8928/watchers",
            "watchCount": 5,
            "isWatching": false
        },
        "created": "2020-05-25T01:37:27.000+0000",
        "updated": "2021-08-09T18:54:37.000+0000",
        "timeoriginalestimate": null,
        "description": "{{arrow::compute::ExecBatch}} uses a vector of {{arrow::Datum}} to contain a collection of ArrayData and Scalar objects for kernel execution. It would be helpful to know how many nanoseconds of overhead is associated with basic interactions with this data structure to know the cost of using our vendored variant, and other such issues. ",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 9000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Measure microperformance associated with ExecBatchIterator",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307110/comment/17339145",
                    "id": "17339145",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "ARROW-12010 adds KeyColumnData which is a simplified non-owning wrapper for non-nested ArrayData. Reusing it for ExecBatch's values would be a worthwhile optimization",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-05-04T16:55:24.715+0000",
                    "updated": "2021-05-04T16:55:40.765+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307110/comment/17386275",
                    "id": "17386275",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "[~bkietz][~michalno] either of you interested in picking this up? Or should we close?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-07-23T14:48:39.849+0000",
                    "updated": "2021-07-23T14:48:39.849+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307110/comment/17391706",
                    "id": "17391706",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 9280\n[https://github.com/apache/arrow/pull/9280]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-08-02T17:06:30.914+0000",
                    "updated": "2021-08-02T17:06:30.914+0000"
                }
            ],
            "maxResults": 3,
            "total": 3,
            "startAt": 0
        },
        "customfield_12311820": "0|z0f40g:",
        "customfield_12314139": null
    }
}