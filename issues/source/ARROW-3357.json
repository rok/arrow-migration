{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13188296",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188296",
    "key": "ARROW-3357",
    "fields": {
        "parent": {
            "id": "13179854",
            "key": "ARROW-3089",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/13179854",
            "fields": {
                "summary": "[Rust] Add ArrayBuilder for different Arrow arrays",
                "status": {
                    "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                    "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                    "name": "Resolved",
                    "id": "5",
                    "statusCategory": {
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                        "id": 3,
                        "key": "done",
                        "colorName": "green",
                        "name": "Done"
                    }
                },
                "priority": {
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                    "name": "Major",
                    "id": "3"
                },
                "issuetype": {
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                    "id": "2",
                    "description": "A new feature of the product, which has yet to be developed.",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                    "name": "New Feature",
                    "subtask": false,
                    "avatarId": 21141
                }
            }
        },
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343066",
                "id": "12343066",
                "description": "",
                "name": "0.11.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-10-08"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=csun",
            "name": "csun",
            "key": "csun",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=csun&avatarId=23340",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=csun&avatarId=23340",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=csun&avatarId=23340",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=csun&avatarId=23340"
            },
            "displayName": "Chao Sun",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=csun",
            "name": "csun",
            "key": "csun",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=csun&avatarId=23340",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=csun&avatarId=23340",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=csun&avatarId=23340",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=csun&avatarId=23340"
            },
            "displayName": "Chao Sun",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=csun",
            "name": "csun",
            "key": "csun",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=csun&avatarId=23340",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=csun&avatarId=23340",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=csun&avatarId=23340",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=csun&avatarId=23340"
            },
            "displayName": "Chao Sun",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 5400,
            "total": 5400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 5400,
            "total": 5400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3357/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 9,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188296/worklog/149571",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao opened a new pull request #2658: ARROW-3357: [Rust] Add a mutable buffer implementation\nURL: https://github.com/apache/arrow/pull/2658\n \n \n   Currently we only have a immutable buffer implementation (`Buffer`). To implement various array builders, it's better to also have a mutable version of this so that we can keep appending data to a buffer. This PR adds a `MutableBuffer` struct which is growable and can be mutated. A mutable buffer can also be consumed and converted into a immutable buffer.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-29T07:20:49.416+0000",
                    "updated": "2018-09-29T07:20:49.416+0000",
                    "started": "2018-09-29T07:20:49.415+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "149571",
                    "issueId": "13188296"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188296/worklog/149572",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on issue #2658: ARROW-3357: [Rust] Add a mutable buffer implementation\nURL: https://github.com/apache/arrow/pull/2658#issuecomment-425623377\n \n \n   cc @paddyhoran  @kszucs @crepererum @andygrove . It would be great if you can take a look at this PR. Thanks!\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-29T07:22:12.507+0000",
                    "updated": "2018-09-29T07:22:12.507+0000",
                    "started": "2018-09-29T07:22:12.506+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "149572",
                    "issueId": "13188296"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188296/worklog/149633",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paddyhoran commented on issue #2658: ARROW-3357: [Rust] Add a mutable buffer implementation\nURL: https://github.com/apache/arrow/pull/2658#issuecomment-425640253\n \n \n   +1, LGTM  I will re-base #2648 onto this once merged.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-29T12:11:58.440+0000",
                    "updated": "2018-09-29T12:11:58.440+0000",
                    "started": "2018-09-29T12:11:58.439+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "149633",
                    "issueId": "13188296"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188296/worklog/149647",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on issue #2658: ARROW-3357: [Rust] Add a mutable buffer implementation\nURL: https://github.com/apache/arrow/pull/2658#issuecomment-425657809\n \n \n   Nightly rustfmt fails: https://travis-ci.org/apache/arrow/jobs/434918653#L860\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-29T16:32:02.460+0000",
                    "updated": "2018-09-29T16:32:02.460+0000",
                    "started": "2018-09-29T16:32:02.459+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "149647",
                    "issueId": "13188296"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188296/worklog/149650",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on issue #2658: ARROW-3357: [Rust] Add a mutable buffer implementation\nURL: https://github.com/apache/arrow/pull/2658#issuecomment-425659050\n \n \n   Thanks @sunchao !\r\n   Merging on green.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-29T16:49:21.191+0000",
                    "updated": "2018-09-29T16:49:21.191+0000",
                    "started": "2018-09-29T16:49:21.191+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "149650",
                    "issueId": "13188296"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188296/worklog/149651",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on issue #2658: ARROW-3357: [Rust] Add a mutable buffer implementation\nURL: https://github.com/apache/arrow/pull/2658#issuecomment-425659058\n \n \n   Thanks @paddyhoran , @andygrove and @kszucs for the review! Fixed the lint issue (strange that it is not related to my change).\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-29T16:49:29.322+0000",
                    "updated": "2018-09-29T16:49:29.322+0000",
                    "started": "2018-09-29T16:49:29.320+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "149651",
                    "issueId": "13188296"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188296/worklog/149653",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on issue #2658: ARROW-3357: [Rust] Add a mutable buffer implementation\nURL: https://github.com/apache/arrow/pull/2658#issuecomment-425659524\n \n \n   That's because CI skips nightly [failures](https://github.com/apache/arrow/blob/master/.travis.yml#L228), it's just nicer without errors.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-29T16:55:47.799+0000",
                    "updated": "2018-09-29T16:55:47.799+0000",
                    "started": "2018-09-29T16:55:47.798+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "149653",
                    "issueId": "13188296"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188296/worklog/149654",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on issue #2658: ARROW-3357: [Rust] Add a mutable buffer implementation\nURL: https://github.com/apache/arrow/pull/2658#issuecomment-425660054\n \n \n   Ah I see. Thanks for pointing out.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-29T17:02:57.309+0000",
                    "updated": "2018-09-29T17:02:57.309+0000",
                    "started": "2018-09-29T17:02:57.308+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "149654",
                    "issueId": "13188296"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188296/worklog/149670",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs closed pull request #2658: ARROW-3357: [Rust] Add a mutable buffer implementation\nURL: https://github.com/apache/arrow/pull/2658\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/rust/src/array.rs b/rust/src/array.rs\nindex b3488f9d6e..5eb90f1b01 100644\n--- a/rust/src/array.rs\n+++ b/rust/src/array.rs\n@@ -181,9 +181,11 @@ macro_rules! def_primitive_array {\n                     let m = self.value(i as i64);\n                     match n {\n                         None => n = Some(m),\n-                        Some(nn) => if cmp(m, nn) {\n-                            n = Some(m)\n-                        },\n+                        Some(nn) => {\n+                            if cmp(m, nn) {\n+                                n = Some(m)\n+                            }\n+                        }\n                     }\n                 }\n                 n\ndiff --git a/rust/src/buffer.rs b/rust/src/buffer.rs\nindex 1cad425846..827d2d6d64 100644\n--- a/rust/src/buffer.rs\n+++ b/rust/src/buffer.rs\n@@ -15,10 +15,14 @@\n // specific language governing permissions and limitations\n // under the License.\n \n+use std::cmp;\n+use std::io::{Error as IoError, ErrorKind, Result as IoResult, Write};\n use std::mem;\n use std::sync::Arc;\n \n+use error::Result;\n use memory;\n+use util::bit_util;\n \n /// Buffer is a contiguous memory region of fixed size and is aligned at a 64-byte\n /// boundary. Buffer is immutable.\n@@ -135,12 +139,134 @@ impl<T: AsRef<[u8]>> From<T> for Buffer {\n unsafe impl Sync for Buffer {}\n unsafe impl Send for Buffer {}\n \n+/// Similar to `Buffer`, but is growable and can be mutated. A mutable buffer can be\n+/// converted into a immutable buffer via the `freeze` method.\n+#[derive(Debug)]\n+pub struct MutableBuffer {\n+    data: *mut u8,\n+    len: usize,\n+    capacity: usize,\n+}\n+\n+impl MutableBuffer {\n+    /// Allocate a new mutable buffer with initial capacity to be `capacity`.\n+    pub fn new(capacity: usize) -> Self {\n+        let new_capacity = bit_util::round_upto_multiple_of_64(capacity as i64);\n+        let ptr = memory::allocate_aligned(new_capacity).unwrap();\n+        Self {\n+            data: ptr,\n+            len: 0,\n+            capacity: new_capacity as usize,\n+        }\n+    }\n+\n+    /// Adjust the capacity of this buffer to be at least `new_capacity`.\n+    ///\n+    /// If the `new_capacity` is less than the current capacity, nothing is done and `Ok`\n+    /// will be returned. Otherwise, the new capacity value will be chosen between the\n+    /// larger one of the incoming `new_capacity` (after rounding up to the nearest 64)\n+    /// and the doubled value of the existing capacity.\n+    pub fn resize(&mut self, new_capacity: usize) -> Result<()> {\n+        if new_capacity <= self.capacity {\n+            return Ok(());\n+        }\n+        let new_capacity = bit_util::round_upto_multiple_of_64(new_capacity as i64);\n+        let new_capacity = cmp::max(new_capacity, self.capacity as i64 * 2);\n+        let new_data = memory::reallocate(self.capacity, new_capacity as usize, self.data)?;\n+        self.data = new_data as *mut u8;\n+        self.capacity = new_capacity as usize;\n+        Ok(())\n+    }\n+\n+    /// Returns whether this buffer is empty or not.\n+    pub fn is_empty(&self) -> bool {\n+        self.len == 0\n+    }\n+\n+    /// Returns the length (the number of bytes written) in this buffer.\n+    pub fn len(&self) -> usize {\n+        self.len\n+    }\n+\n+    /// Returns the total capacity in this buffer.\n+    pub fn capacity(&self) -> usize {\n+        self.capacity\n+    }\n+\n+    /// Clear all existing data from this buffer.\n+    pub fn clear(&mut self) {\n+        self.len = 0\n+    }\n+\n+    /// Returns the data stored in this buffer as a slice.\n+    pub fn data(&self) -> &[u8] {\n+        unsafe { ::std::slice::from_raw_parts(self.raw_data(), self.len()) }\n+    }\n+\n+    /// Returns a raw pointer for this buffer.\n+    ///\n+    /// Note that this should be used cautiously, and the returned pointer should not be\n+    /// stored anywhere, to avoid dangling pointers.\n+    pub fn raw_data(&self) -> *const u8 {\n+        self.data\n+    }\n+\n+    /// Freezes this buffer and return an immutable version of it.\n+    pub fn freeze(self) -> Buffer {\n+        let buffer_data = BufferData {\n+            ptr: self.data,\n+            len: self.len,\n+        };\n+        ::std::mem::forget(self);\n+        Buffer {\n+            data: Arc::new(buffer_data),\n+            offset: 0,\n+        }\n+    }\n+}\n+\n+impl Drop for MutableBuffer {\n+    fn drop(&mut self) {\n+        memory::free_aligned(self.data);\n+    }\n+}\n+\n+impl PartialEq for MutableBuffer {\n+    fn eq(&self, other: &MutableBuffer) -> bool {\n+        if self.len != other.len {\n+            return false;\n+        }\n+        unsafe { memory::memcmp(self.data, other.data, self.len as usize) == 0 }\n+    }\n+}\n+\n+impl Write for MutableBuffer {\n+    fn write(&mut self, buf: &[u8]) -> IoResult<usize> {\n+        let remaining_capacity = self.capacity - self.len;\n+        if buf.len() > remaining_capacity {\n+            return Err(IoError::new(ErrorKind::Other, \"Buffer not big enough\"));\n+        }\n+        unsafe {\n+            memory::memcpy(self.data.offset(self.len as isize), buf.as_ptr(), buf.len());\n+            self.len += buf.len();\n+            Ok(buf.len())\n+        }\n+    }\n+\n+    fn flush(&mut self) -> IoResult<()> {\n+        Ok(())\n+    }\n+}\n+\n+unsafe impl Sync for MutableBuffer {}\n+unsafe impl Send for MutableBuffer {}\n+\n #[cfg(test)]\n mod tests {\n     use std::ptr::null_mut;\n     use std::thread;\n \n-    use super::Buffer;\n+    use super::*;\n \n     #[test]\n     fn test_buffer_data_equality() {\n@@ -221,6 +347,68 @@ mod tests {\n         buf.slice(6);\n     }\n \n+    #[test]\n+    fn test_mutable_new() {\n+        let buf = MutableBuffer::new(63);\n+        assert_eq!(64, buf.capacity());\n+        assert_eq!(0, buf.len());\n+        assert!(buf.is_empty());\n+    }\n+\n+    #[test]\n+    fn test_mutable_write() {\n+        let mut buf = MutableBuffer::new(100);\n+        buf.write(\"hello\".as_bytes()).expect(\"Ok\");\n+        assert_eq!(5, buf.len());\n+        assert_eq!(\"hello\".as_bytes(), buf.data());\n+\n+        buf.write(\" world\".as_bytes()).expect(\"Ok\");\n+        assert_eq!(11, buf.len());\n+        assert_eq!(\"hello world\".as_bytes(), buf.data());\n+\n+        buf.clear();\n+        assert_eq!(0, buf.len());\n+        buf.write(\"hello arrow\".as_bytes()).expect(\"Ok\");\n+        assert_eq!(11, buf.len());\n+        assert_eq!(\"hello arrow\".as_bytes(), buf.data());\n+    }\n+\n+    #[test]\n+    #[should_panic(expected = \"Buffer not big enough\")]\n+    fn test_mutable_write_overflow() {\n+        let mut buf = MutableBuffer::new(1);\n+        assert_eq!(64, buf.capacity());\n+        for _ in 0..10 {\n+            buf.write(&[0, 0, 0, 0, 0, 0, 0, 0]).unwrap();\n+        }\n+    }\n+\n+    #[test]\n+    fn test_mutable_resize() {\n+        let mut buf = MutableBuffer::new(1);\n+        assert_eq!(64, buf.capacity());\n+\n+        // resizing to a smaller value should have no effect.\n+        buf.resize(10).expect(\"resize should be OK\");\n+        assert_eq!(64, buf.capacity());\n+\n+        buf.resize(100).expect(\"resize should be OK\");\n+        assert_eq!(128, buf.capacity());\n+    }\n+\n+    #[test]\n+    fn test_mutable_freeze() {\n+        let mut buf = MutableBuffer::new(1);\n+        buf.write(\"aaaa bbbb cccc dddd\".as_bytes())\n+            .expect(\"write should be OK\");\n+        assert_eq!(19, buf.len());\n+        assert_eq!(\"aaaa bbbb cccc dddd\".as_bytes(), buf.data());\n+\n+        let immutable_buf = buf.freeze();\n+        assert_eq!(19, immutable_buf.len());\n+        assert_eq!(\"aaaa bbbb cccc dddd\".as_bytes(), immutable_buf.data());\n+    }\n+\n     #[test]\n     fn test_access_concurrently() {\n         let buffer = Buffer::from(vec![1, 2, 3, 4, 5]);\ndiff --git a/rust/src/memory.rs b/rust/src/memory.rs\nindex d35de682c3..376499e9c2 100644\n--- a/rust/src/memory.rs\n+++ b/rust/src/memory.rs\n@@ -16,6 +16,7 @@\n // under the License.\n \n use libc;\n+use std::cmp;\n use std::mem;\n \n use super::error::{ArrowError, Result};\n@@ -68,6 +69,17 @@ pub fn free_aligned(p: *const u8) {\n     }\n }\n \n+pub fn reallocate(old_size: usize, new_size: usize, pointer: *const u8) -> Result<*const u8> {\n+    unsafe {\n+        let old_src = mem::transmute::<*const u8, *mut libc::c_void>(pointer);\n+        let result = allocate_aligned(new_size as i64)?;\n+        let dst = mem::transmute::<*const u8, *mut libc::c_void>(result);\n+        libc::memcpy(dst, old_src, cmp::min(old_size, new_size));\n+        free_aligned(pointer);\n+        Ok(result)\n+    }\n+}\n+\n pub unsafe fn memcpy(dst: *mut u8, src: *const u8, len: usize) {\n     let src = mem::transmute::<*const u8, *const libc::c_void>(src);\n     let dst = mem::transmute::<*mut u8, *mut libc::c_void>(dst);\ndiff --git a/rust/src/memory_pool.rs b/rust/src/memory_pool.rs\nindex baf02b73ae..33f3a6255b 100644\n--- a/rust/src/memory_pool.rs\n+++ b/rust/src/memory_pool.rs\n@@ -15,12 +15,8 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-use libc;\n-use std::cmp;\n-use std::mem;\n-\n-use super::error::Result;\n-use super::memory::{allocate_aligned, free_aligned};\n+use error::Result;\n+use memory::{allocate_aligned, free_aligned, reallocate};\n \n /// Memory pool for allocating memory. It's also responsible for tracking memory usage.\n pub trait MemoryPool {\n@@ -53,14 +49,7 @@ impl MemoryPool for LibcMemoryPool {\n         new_size: usize,\n         pointer: *const u8,\n     ) -> Result<*const u8> {\n-        unsafe {\n-            let old_src = mem::transmute::<*const u8, *mut libc::c_void>(pointer);\n-            let result = self.allocate(new_size)?;\n-            let dst = mem::transmute::<*const u8, *mut libc::c_void>(result);\n-            libc::memcpy(dst, old_src, cmp::min(old_size, new_size));\n-            free_aligned(pointer);\n-            Ok(result)\n-        }\n+        reallocate(old_size, new_size, pointer)\n     }\n \n     fn free(&self, ptr: *const u8) {\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-29T20:58:30.481+0000",
                    "updated": "2018-09-29T20:58:30.481+0000",
                    "started": "2018-09-29T20:58:30.480+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "149670",
                    "issueId": "13188296"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
            "id": "7",
            "description": "The sub-task of the issue",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
            "name": "Sub-task",
            "subtask": true,
            "avatarId": 21146
        },
        "timespent": 5400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5f19a370[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@59a1e6ad[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@697163f6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@3f3364fb[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5940074f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@283e96bb[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4a323e99[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@6e828f98[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@37a18778[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@6b764479[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@30eb7978[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@4a6fceb2[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 5400,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Sep 29 20:58:27 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-09-29T20:58:27.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3357/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-09-29T07:12:53.000+0000",
        "updated": "2018-09-29T20:58:30.000+0000",
        "timeoriginalestimate": null,
        "description": "Currently we only have a immutable buffer implementation ({{Buffer}}). To implement various array builders, it's better to also have a mutable version of this so that we can keep appending data to a buffer.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 5400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] Add a mutable buffer implementation",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188296/comment/16633119",
                    "id": "16633119",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "body": "Issue resolved by pull request 2658\n[https://github.com/apache/arrow/pull/2658]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "created": "2018-09-29T20:58:27.450+0000",
                    "updated": "2018-09-29T20:58:27.450+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|i3ymyf:",
        "customfield_12314139": null
    }
}