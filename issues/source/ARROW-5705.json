{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13241198",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241198",
    "key": "ARROW-5705",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12344925",
                "id": "12344925",
                "description": "",
                "name": "0.14.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-07-04"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
            "name": "tianchen92",
            "key": "tianchen92",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
            },
            "displayName": "Ji Liu",
            "active": true,
            "timeZone": "Asia/Gaza"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
            "name": "tianchen92",
            "key": "tianchen92",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
            },
            "displayName": "Ji Liu",
            "active": true,
            "timeZone": "Asia/Gaza"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
            "name": "tianchen92",
            "key": "tianchen92",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
            },
            "displayName": "Ji Liu",
            "active": true,
            "timeZone": "Asia/Gaza"
        },
        "aggregateprogress": {
            "progress": 15600,
            "total": 15600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 15600,
            "total": 15600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5705/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 27,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241198/worklog/265606",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4671: ARROW-5705: [Java] Optimize BaseValueVector#computeCombinedBufferSize logic\nURL: https://github.com/apache/arrow/pull/4671\n \n \n   Related to [ARROW-5705](https://issues.apache.org/jira/browse/ARROW-5705).\r\n   Now in BaseValueVector#computeCombinedBufferSize, it computes validity buffer size as follow:\r\n   \r\n   roundUp8(getValidityBufferSizeFromCount(valueCount))\r\n   \r\n   which can be be expanded to \r\n   \r\n   (((valueCount + 7) >> 3 + 7) / 8) * 8\r\n   \r\n   Seems there's no need to compute bufferSize first and expression above could be replaced with:\r\n   \r\n   (valueCount + 63) / 64 * 8\r\n   \r\n   In this way, performance of computeCombinedBufferSize would be improved. Performance test:\r\n   \r\n   Before:\r\n   BaseValueVectorBenchmarks.testC_omputeCombinedBufferSize_ avgt 5 4083.180 \u00b1 180.363 ns/op\r\n   \r\n   After:\r\n   \r\n   BaseValueVectorBenchmarks.testC_omputeCombinedBufferSize_ avgt 5 3808.635 \u00b1 162.347 ns/op\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-24T08:50:16.788+0000",
                    "updated": "2019-06-24T08:50:16.788+0000",
                    "started": "2019-06-24T08:50:16.787+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "265606",
                    "issueId": "13241198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241198/worklog/265646",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4671: ARROW-5705: [Java] Optimize BaseValueVector#computeCombinedBufferSize logic\nURL: https://github.com/apache/arrow/pull/4671#issuecomment-504954388\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4671?src=pr&el=h1) Report\n   > Merging [#4671](https://codecov.io/gh/apache/arrow/pull/4671?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/f180a53b4da5ed932ecb8aa1e56b961cba899e61?src=pr&el=desc) will **increase** coverage by `1.06%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4671/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4671?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4671      +/-   ##\n   ==========================================\n   + Coverage   88.41%   89.48%   +1.06%     \n   ==========================================\n     Files         905      658     -247     \n     Lines      112429    93830   -18599     \n     Branches     1420        0    -1420     \n   ==========================================\n   - Hits        99402    83960   -15442     \n   + Misses      12665     9870    -2795     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4671?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/plasma/thirdparty/ae/ae.c](https://codecov.io/gh/apache/arrow/pull/4671/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGhpcmRwYXJ0eS9hZS9hZS5j) | `70.75% <0%> (-0.95%)` | :arrow_down: |\n   | [r/src/recordbatch.cpp](https://codecov.io/gh/apache/arrow/pull/4671/diff?src=pr&el=tree#diff-ci9zcmMvcmVjb3JkYmF0Y2guY3Bw) | | |\n   | [r/R/Table.R](https://codecov.io/gh/apache/arrow/pull/4671/diff?src=pr&el=tree#diff-ci9SL1RhYmxlLlI=) | | |\n   | [go/arrow/math/uint64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/4671/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYW1kNjQuZ28=) | | |\n   | [r/src/symbols.cpp](https://codecov.io/gh/apache/arrow/pull/4671/diff?src=pr&el=tree#diff-ci9zcmMvc3ltYm9scy5jcHA=) | | |\n   | [r/R/Column.R](https://codecov.io/gh/apache/arrow/pull/4671/diff?src=pr&el=tree#diff-ci9SL0NvbHVtbi5S) | | |\n   | [go/arrow/ipc/file\\_reader.go](https://codecov.io/gh/apache/arrow/pull/4671/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaXBjL2ZpbGVfcmVhZGVyLmdv) | | |\n   | [js/src/builder/index.ts](https://codecov.io/gh/apache/arrow/pull/4671/diff?src=pr&el=tree#diff-anMvc3JjL2J1aWxkZXIvaW5kZXgudHM=) | | |\n   | [r/src/arrow\\_types.h](https://codecov.io/gh/apache/arrow/pull/4671/diff?src=pr&el=tree#diff-ci9zcmMvYXJyb3dfdHlwZXMuaA==) | | |\n   | [js/src/enum.ts](https://codecov.io/gh/apache/arrow/pull/4671/diff?src=pr&el=tree#diff-anMvc3JjL2VudW0udHM=) | | |\n   | ... and [240 more](https://codecov.io/gh/apache/arrow/pull/4671/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4671?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4671?src=pr&el=footer). Last update [f180a53...6df5f2a](https://codecov.io/gh/apache/arrow/pull/4671?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-24T10:32:39.985+0000",
                    "updated": "2019-06-24T10:32:39.985+0000",
                    "started": "2019-06-24T10:32:39.984+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "265646",
                    "issueId": "13241198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241198/worklog/266345",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4671: ARROW-5705: [Java] Optimize BaseValueVector#computeCombinedBufferSize logic\nURL: https://github.com/apache/arrow/pull/4671#discussion_r297014489\n \n \n\n ##########\n File path: java/performance/src/test/java/org/apache/arrow/vector/BaseValueVectorBenchmarks.java\n ##########\n @@ -0,0 +1,97 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.memory.RootAllocator;\n+import org.junit.Test;\n+import org.openjdk.jmh.annotations.Benchmark;\n+import org.openjdk.jmh.annotations.BenchmarkMode;\n+import org.openjdk.jmh.annotations.Mode;\n+import org.openjdk.jmh.annotations.OutputTimeUnit;\n+import org.openjdk.jmh.annotations.Scope;\n+import org.openjdk.jmh.annotations.Setup;\n+import org.openjdk.jmh.annotations.State;\n+import org.openjdk.jmh.annotations.TearDown;\n+import org.openjdk.jmh.runner.Runner;\n+import org.openjdk.jmh.runner.RunnerException;\n+import org.openjdk.jmh.runner.options.Options;\n+import org.openjdk.jmh.runner.options.OptionsBuilder;\n+\n+/**\n+ * Benchmarks for {@link BaseValueVector}.\n+ */\n+@State(Scope.Benchmark)\n+public class BaseValueVectorBenchmarks {\n+\n+  private static final int VECTOR_LENGTH = 1024;\n+\n+  private static final int ALLOCATOR_CAPACITY = 1024 * 1024;\n+\n+  private BufferAllocator allocator;\n+\n+  private IntVector vector;\n+\n+  /**\n+   * Setup benchmarks.\n+   */\n+  @Setup\n+  public void prepare() {\n+    allocator = new RootAllocator(ALLOCATOR_CAPACITY);\n+    vector = new IntVector(\"vector\", allocator);\n+    vector.allocateNew(VECTOR_LENGTH);\n+  }\n+\n+  /**\n+   * Tear down benchmarks.\n+   */\n+  @TearDown\n+  public void tearDown() {\n+    vector.close();\n+    allocator.close();\n+  }\n+\n+  /**\n+   * Test {@link BaseValueVector#computeCombinedBufferSize(int, int)}.\n+   * @return useless. To avoid DCE by JIT.\n+   */\n+  @Benchmark\n+  @BenchmarkMode(Mode.AverageTime)\n+  @OutputTimeUnit(TimeUnit.NANOSECONDS)\n+  public int testComputeCombinedBufferSize() {\n+    int totalSize = 0;\n+    for (int i = 0; i < VECTOR_LENGTH; i++) {\n+      totalSize += vector.computeCombinedBufferSize(i, 4);\n \n Review comment:\n   I think it might be better to benchmark reallocValidityAndOffsetBuffers to see if this actually impacts the higher level goal?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-25T05:48:40.737+0000",
                    "updated": "2019-06-25T05:48:40.737+0000",
                    "started": "2019-06-25T05:48:40.736+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "266345",
                    "issueId": "13241198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241198/worklog/266346",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4671: ARROW-5705: [Java] Optimize BaseValueVector#computeCombinedBufferSize logic\nURL: https://github.com/apache/arrow/pull/4671#discussion_r297014594\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BaseValueVector.java\n ##########\n @@ -122,12 +122,17 @@ private static long roundUp8(long size) {\n     return ((size + 7) / 8) * 8;\n   }\n \n+  /* round up bytes for the validity buffer for the given valueCount */\n+  private long roundUp8ForValidityBuffer(int valueCount) {\n \n Review comment:\n   `\r\n   ```suggestion\r\n     private static long roundUp8ForValidityBuffer(int valueCount) {\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-25T05:48:40.738+0000",
                    "updated": "2019-06-25T05:48:40.738+0000",
                    "started": "2019-06-25T05:48:40.738+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "266346",
                    "issueId": "13241198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241198/worklog/266347",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4671: ARROW-5705: [Java] Optimize BaseValueVector#computeCombinedBufferSize logic\nURL: https://github.com/apache/arrow/pull/4671#discussion_r297014868\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BaseValueVector.java\n ##########\n @@ -122,12 +122,17 @@ private static long roundUp8(long size) {\n     return ((size + 7) / 8) * 8;\n   }\n \n+  /* round up bytes for the validity buffer for the given valueCount */\n+  private long roundUp8ForValidityBuffer(int valueCount) {\n+    return (valueCount + 63) / 64 * 8;\n \n Review comment:\n   can this be replaced with:\r\n   ((valueCount + 63) >> 6) << 3\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-25T05:48:40.812+0000",
                    "updated": "2019-06-25T05:48:40.812+0000",
                    "started": "2019-06-25T05:48:40.812+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "266347",
                    "issueId": "13241198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241198/worklog/266397",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4671: ARROW-5705: [Java] Optimize BaseValueVector#computeCombinedBufferSize logic\nURL: https://github.com/apache/arrow/pull/4671#discussion_r297051464\n \n \n\n ##########\n File path: java/performance/src/test/java/org/apache/arrow/vector/BaseValueVectorBenchmarks.java\n ##########\n @@ -0,0 +1,97 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.memory.RootAllocator;\n+import org.junit.Test;\n+import org.openjdk.jmh.annotations.Benchmark;\n+import org.openjdk.jmh.annotations.BenchmarkMode;\n+import org.openjdk.jmh.annotations.Mode;\n+import org.openjdk.jmh.annotations.OutputTimeUnit;\n+import org.openjdk.jmh.annotations.Scope;\n+import org.openjdk.jmh.annotations.Setup;\n+import org.openjdk.jmh.annotations.State;\n+import org.openjdk.jmh.annotations.TearDown;\n+import org.openjdk.jmh.runner.Runner;\n+import org.openjdk.jmh.runner.RunnerException;\n+import org.openjdk.jmh.runner.options.Options;\n+import org.openjdk.jmh.runner.options.OptionsBuilder;\n+\n+/**\n+ * Benchmarks for {@link BaseValueVector}.\n+ */\n+@State(Scope.Benchmark)\n+public class BaseValueVectorBenchmarks {\n+\n+  private static final int VECTOR_LENGTH = 1024;\n+\n+  private static final int ALLOCATOR_CAPACITY = 1024 * 1024;\n+\n+  private BufferAllocator allocator;\n+\n+  private IntVector vector;\n+\n+  /**\n+   * Setup benchmarks.\n+   */\n+  @Setup\n+  public void prepare() {\n+    allocator = new RootAllocator(ALLOCATOR_CAPACITY);\n+    vector = new IntVector(\"vector\", allocator);\n+    vector.allocateNew(VECTOR_LENGTH);\n+  }\n+\n+  /**\n+   * Tear down benchmarks.\n+   */\n+  @TearDown\n+  public void tearDown() {\n+    vector.close();\n+    allocator.close();\n+  }\n+\n+  /**\n+   * Test {@link BaseValueVector#computeCombinedBufferSize(int, int)}.\n+   * @return useless. To avoid DCE by JIT.\n+   */\n+  @Benchmark\n+  @BenchmarkMode(Mode.AverageTime)\n+  @OutputTimeUnit(TimeUnit.NANOSECONDS)\n+  public int testComputeCombinedBufferSize() {\n+    int totalSize = 0;\n+    for (int i = 0; i < VECTOR_LENGTH; i++) {\n+      totalSize += vector.computeCombinedBufferSize(i, 4);\n \n Review comment:\n   Thanks a lot for your comments, I tested it and found the computeCombinedBufferSize time is too small in proportion within reallocValidityAndOffsettBuffers e2e time(even less than 1\u2030), seems benchmark reallocValidityAndOffsetBuffers doesn't make much sense.\r\n   However I think this PR makes sense since the computeCombinedBufferSize benchmark shows stable performance improvement. \r\n   Many thanks!\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-25T07:53:08.186+0000",
                    "updated": "2019-06-25T07:53:08.186+0000",
                    "started": "2019-06-25T07:53:08.184+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "266397",
                    "issueId": "13241198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241198/worklog/266398",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4671: ARROW-5705: [Java] Optimize BaseValueVector#computeCombinedBufferSize logic\nURL: https://github.com/apache/arrow/pull/4671#discussion_r297051725\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BaseValueVector.java\n ##########\n @@ -122,12 +122,17 @@ private static long roundUp8(long size) {\n     return ((size + 7) / 8) * 8;\n   }\n \n+  /* round up bytes for the validity buffer for the given valueCount */\n+  private long roundUp8ForValidityBuffer(int valueCount) {\n+    return (valueCount + 63) / 64 * 8;\n \n Review comment:\n   Sure, good point.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-25T07:53:43.486+0000",
                    "updated": "2019-06-25T07:53:43.486+0000",
                    "started": "2019-06-25T07:53:43.485+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "266398",
                    "issueId": "13241198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241198/worklog/266402",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4671: ARROW-5705: [Java] Optimize BaseValueVector#computeCombinedBufferSize logic\nURL: https://github.com/apache/arrow/pull/4671#discussion_r297051464\n \n \n\n ##########\n File path: java/performance/src/test/java/org/apache/arrow/vector/BaseValueVectorBenchmarks.java\n ##########\n @@ -0,0 +1,97 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.memory.RootAllocator;\n+import org.junit.Test;\n+import org.openjdk.jmh.annotations.Benchmark;\n+import org.openjdk.jmh.annotations.BenchmarkMode;\n+import org.openjdk.jmh.annotations.Mode;\n+import org.openjdk.jmh.annotations.OutputTimeUnit;\n+import org.openjdk.jmh.annotations.Scope;\n+import org.openjdk.jmh.annotations.Setup;\n+import org.openjdk.jmh.annotations.State;\n+import org.openjdk.jmh.annotations.TearDown;\n+import org.openjdk.jmh.runner.Runner;\n+import org.openjdk.jmh.runner.RunnerException;\n+import org.openjdk.jmh.runner.options.Options;\n+import org.openjdk.jmh.runner.options.OptionsBuilder;\n+\n+/**\n+ * Benchmarks for {@link BaseValueVector}.\n+ */\n+@State(Scope.Benchmark)\n+public class BaseValueVectorBenchmarks {\n+\n+  private static final int VECTOR_LENGTH = 1024;\n+\n+  private static final int ALLOCATOR_CAPACITY = 1024 * 1024;\n+\n+  private BufferAllocator allocator;\n+\n+  private IntVector vector;\n+\n+  /**\n+   * Setup benchmarks.\n+   */\n+  @Setup\n+  public void prepare() {\n+    allocator = new RootAllocator(ALLOCATOR_CAPACITY);\n+    vector = new IntVector(\"vector\", allocator);\n+    vector.allocateNew(VECTOR_LENGTH);\n+  }\n+\n+  /**\n+   * Tear down benchmarks.\n+   */\n+  @TearDown\n+  public void tearDown() {\n+    vector.close();\n+    allocator.close();\n+  }\n+\n+  /**\n+   * Test {@link BaseValueVector#computeCombinedBufferSize(int, int)}.\n+   * @return useless. To avoid DCE by JIT.\n+   */\n+  @Benchmark\n+  @BenchmarkMode(Mode.AverageTime)\n+  @OutputTimeUnit(TimeUnit.NANOSECONDS)\n+  public int testComputeCombinedBufferSize() {\n+    int totalSize = 0;\n+    for (int i = 0; i < VECTOR_LENGTH; i++) {\n+      totalSize += vector.computeCombinedBufferSize(i, 4);\n \n Review comment:\n   Thanks a lot for your comments, I tested it and found the computeCombinedBufferSize time is too small in proportion within reallocValidityAndOffsettBuffers time(even less than 1\u2030), seems benchmark reallocValidityAndOffsetBuffers doesn't make much sense.\r\n   However I think this PR makes sense since the computeCombinedBufferSize benchmark shows stable performance improvement. \r\n   Many thanks!\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-25T08:05:31.685+0000",
                    "updated": "2019-06-25T08:05:31.685+0000",
                    "started": "2019-06-25T08:05:31.685+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "266402",
                    "issueId": "13241198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241198/worklog/266403",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4671: ARROW-5705: [Java] Optimize BaseValueVector#computeCombinedBufferSize logic\nURL: https://github.com/apache/arrow/pull/4671#discussion_r297056675\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BaseValueVector.java\n ##########\n @@ -122,12 +122,17 @@ private static long roundUp8(long size) {\n     return ((size + 7) / 8) * 8;\n   }\n \n+  /* round up bytes for the validity buffer for the given valueCount */\n+  private long roundUp8ForValidityBuffer(int valueCount) {\n+    return (valueCount + 63) / 64 * 8;\n \n Review comment:\n   Actually would just shifting left by 3?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-25T08:05:59.854+0000",
                    "updated": "2019-06-25T08:05:59.854+0000",
                    "started": "2019-06-25T08:05:59.853+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "266403",
                    "issueId": "13241198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241198/worklog/266405",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4671: ARROW-5705: [Java] Optimize BaseValueVector#computeCombinedBufferSize logic\nURL: https://github.com/apache/arrow/pull/4671#discussion_r297058111\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BaseValueVector.java\n ##########\n @@ -122,12 +122,17 @@ private static long roundUp8(long size) {\n     return ((size + 7) / 8) * 8;\n   }\n \n+  /* round up bytes for the validity buffer for the given valueCount */\n+  private long roundUp8ForValidityBuffer(int valueCount) {\n+    return (valueCount + 63) / 64 * 8;\n \n Review comment:\n   Nope, in that way there is no guarantee that the result will be multiple of 8.\r\n   For example:\r\n   (15 + 63) >> 3 = 9 which is not correct.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-25T08:09:36.428+0000",
                    "updated": "2019-06-25T08:09:36.428+0000",
                    "started": "2019-06-25T08:09:36.427+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "266405",
                    "issueId": "13241198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241198/worklog/266453",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4671: ARROW-5705: [Java] Optimize BaseValueVector#computeCombinedBufferSize logic\nURL: https://github.com/apache/arrow/pull/4671#issuecomment-504954388\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4671?src=pr&el=h1) Report\n   > Merging [#4671](https://codecov.io/gh/apache/arrow/pull/4671?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/f180a53b4da5ed932ecb8aa1e56b961cba899e61?src=pr&el=desc) will **increase** coverage by `1.06%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4671/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4671?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4671      +/-   ##\n   ==========================================\n   + Coverage   88.41%   89.47%   +1.06%     \n   ==========================================\n     Files         905      658     -247     \n     Lines      112429    93960   -18469     \n     Branches     1420        0    -1420     \n   ==========================================\n   - Hits        99402    84074   -15328     \n   + Misses      12665     9886    -2779     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4671?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/gandiva/precompiled/string\\_ops.cc](https://codecov.io/gh/apache/arrow/pull/4671/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL3ByZWNvbXBpbGVkL3N0cmluZ19vcHMuY2M=) | `56.33% <0%> (-5.21%)` | :arrow_down: |\n   | [cpp/src/arrow/csv/converter.cc](https://codecov.io/gh/apache/arrow/pull/4671/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jc3YvY29udmVydGVyLmNj) | `96.65% <0%> (-1.09%)` | :arrow_down: |\n   | [cpp/src/gandiva/tests/date\\_time\\_test.cc](https://codecov.io/gh/apache/arrow/pull/4671/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL3Rlc3RzL2RhdGVfdGltZV90ZXN0LmNj) | `98.97% <0%> (-1.03%)` | :arrow_down: |\n   | [cpp/src/gandiva/function\\_registry\\_string.cc](https://codecov.io/gh/apache/arrow/pull/4671/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2Z1bmN0aW9uX3JlZ2lzdHJ5X3N0cmluZy5jYw==) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/csv/converter-test.cc](https://codecov.io/gh/apache/arrow/pull/4671/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jc3YvY29udmVydGVyLXRlc3QuY2M=) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [r/src/recordbatch.cpp](https://codecov.io/gh/apache/arrow/pull/4671/diff?src=pr&el=tree#diff-ci9zcmMvcmVjb3JkYmF0Y2guY3Bw) | | |\n   | [r/R/Table.R](https://codecov.io/gh/apache/arrow/pull/4671/diff?src=pr&el=tree#diff-ci9SL1RhYmxlLlI=) | | |\n   | [go/arrow/math/uint64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/4671/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYW1kNjQuZ28=) | | |\n   | [r/src/symbols.cpp](https://codecov.io/gh/apache/arrow/pull/4671/diff?src=pr&el=tree#diff-ci9zcmMvc3ltYm9scy5jcHA=) | | |\n   | [r/R/Column.R](https://codecov.io/gh/apache/arrow/pull/4671/diff?src=pr&el=tree#diff-ci9SL0NvbHVtbi5S) | | |\n   | ... and [249 more](https://codecov.io/gh/apache/arrow/pull/4671/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4671?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4671?src=pr&el=footer). Last update [f180a53...1999fde](https://codecov.io/gh/apache/arrow/pull/4671?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-25T08:50:37.004+0000",
                    "updated": "2019-06-25T08:50:37.004+0000",
                    "started": "2019-06-25T08:50:37.003+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "266453",
                    "issueId": "13241198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241198/worklog/268267",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4671: ARROW-5705: [Java] Optimize BaseValueVector#computeCombinedBufferSize logic\nURL: https://github.com/apache/arrow/pull/4671#discussion_r298017984\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BaseValueVector.java\n ##########\n @@ -122,12 +122,17 @@ private static long roundUp8(long size) {\n     return ((size + 7) / 8) * 8;\n   }\n \n+  /* round up bytes for the validity buffer for the given valueCount */\n+  private long roundUp8ForValidityBuffer(int valueCount) {\n+    return (valueCount + 63) / 64 * 8;\n \n Review comment:\n   What and mask out the least significant bits?  Does that provide better performance or is it the same?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-27T06:03:59.500+0000",
                    "updated": "2019-06-27T06:03:59.500+0000",
                    "started": "2019-06-27T06:03:59.499+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "268267",
                    "issueId": "13241198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241198/worklog/268269",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4671: ARROW-5705: [Java] Optimize BaseValueVector#computeCombinedBufferSize logic\nURL: https://github.com/apache/arrow/pull/4671#discussion_r298019904\n \n \n\n ##########\n File path: java/performance/src/test/java/org/apache/arrow/vector/BaseValueVectorBenchmarks.java\n ##########\n @@ -0,0 +1,97 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.memory.RootAllocator;\n+import org.junit.Test;\n+import org.openjdk.jmh.annotations.Benchmark;\n+import org.openjdk.jmh.annotations.BenchmarkMode;\n+import org.openjdk.jmh.annotations.Mode;\n+import org.openjdk.jmh.annotations.OutputTimeUnit;\n+import org.openjdk.jmh.annotations.Scope;\n+import org.openjdk.jmh.annotations.Setup;\n+import org.openjdk.jmh.annotations.State;\n+import org.openjdk.jmh.annotations.TearDown;\n+import org.openjdk.jmh.runner.Runner;\n+import org.openjdk.jmh.runner.RunnerException;\n+import org.openjdk.jmh.runner.options.Options;\n+import org.openjdk.jmh.runner.options.OptionsBuilder;\n+\n+/**\n+ * Benchmarks for {@link BaseValueVector}.\n+ */\n+@State(Scope.Benchmark)\n+public class BaseValueVectorBenchmarks {\n+\n+  private static final int VECTOR_LENGTH = 1024;\n+\n+  private static final int ALLOCATOR_CAPACITY = 1024 * 1024;\n+\n+  private BufferAllocator allocator;\n+\n+  private IntVector vector;\n+\n+  /**\n+   * Setup benchmarks.\n+   */\n+  @Setup\n+  public void prepare() {\n+    allocator = new RootAllocator(ALLOCATOR_CAPACITY);\n+    vector = new IntVector(\"vector\", allocator);\n+    vector.allocateNew(VECTOR_LENGTH);\n+  }\n+\n+  /**\n+   * Tear down benchmarks.\n+   */\n+  @TearDown\n+  public void tearDown() {\n+    vector.close();\n+    allocator.close();\n+  }\n+\n+  /**\n+   * Test {@link BaseValueVector#computeCombinedBufferSize(int, int)}.\n+   * @return useless. To avoid DCE by JIT.\n+   */\n+  @Benchmark\n+  @BenchmarkMode(Mode.AverageTime)\n+  @OutputTimeUnit(TimeUnit.NANOSECONDS)\n+  public int testComputeCombinedBufferSize() {\n+    int totalSize = 0;\n+    for (int i = 0; i < VECTOR_LENGTH; i++) {\n+      totalSize += vector.computeCombinedBufferSize(i, 4);\n \n Review comment:\n   If none of the methods that use this method actually show performance improvements it seems like we might not want to make the change (it looks like the method is package private).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-27T06:10:34.777+0000",
                    "updated": "2019-06-27T06:10:34.777+0000",
                    "started": "2019-06-27T06:10:34.776+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "268269",
                    "issueId": "13241198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241198/worklog/268270",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4671: ARROW-5705: [Java] Optimize BaseValueVector#computeCombinedBufferSize logic\nURL: https://github.com/apache/arrow/pull/4671#discussion_r298020131\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BaseValueVector.java\n ##########\n @@ -122,12 +122,17 @@ private static long roundUp8(long size) {\n     return ((size + 7) / 8) * 8;\n   }\n \n+  /* round up bytes for the validity buffer for the given valueCount */\n+  private static long roundUp8ForValidityBuffer(int valueCount) {\n \n Review comment:\n   you might want to make this package private or public, I think there are other vector classes that have the same roundUp8(getValidityBufferSizeFromCount(..)) logic\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-27T06:11:29.662+0000",
                    "updated": "2019-06-27T06:11:29.662+0000",
                    "started": "2019-06-27T06:11:29.662+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "268270",
                    "issueId": "13241198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241198/worklog/268274",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4671: ARROW-5705: [Java] Optimize BaseValueVector#computeCombinedBufferSize logic\nURL: https://github.com/apache/arrow/pull/4671#discussion_r298020935\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BaseValueVector.java\n ##########\n @@ -122,12 +122,17 @@ private static long roundUp8(long size) {\n     return ((size + 7) / 8) * 8;\n   }\n \n+  /* round up bytes for the validity buffer for the given valueCount */\n+  private long roundUp8ForValidityBuffer(int valueCount) {\n+    return (valueCount + 63) / 64 * 8;\n \n Review comment:\n   What do you mean by 'mask out least significant bits'?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-27T06:15:03.075+0000",
                    "updated": "2019-06-27T06:15:03.075+0000",
                    "started": "2019-06-27T06:15:03.074+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "268274",
                    "issueId": "13241198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241198/worklog/268276",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4671: ARROW-5705: [Java] Optimize BaseValueVector#computeCombinedBufferSize logic\nURL: https://github.com/apache/arrow/pull/4671#discussion_r298021524\n \n \n\n ##########\n File path: java/performance/src/test/java/org/apache/arrow/vector/BaseValueVectorBenchmarks.java\n ##########\n @@ -0,0 +1,97 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.memory.RootAllocator;\n+import org.junit.Test;\n+import org.openjdk.jmh.annotations.Benchmark;\n+import org.openjdk.jmh.annotations.BenchmarkMode;\n+import org.openjdk.jmh.annotations.Mode;\n+import org.openjdk.jmh.annotations.OutputTimeUnit;\n+import org.openjdk.jmh.annotations.Scope;\n+import org.openjdk.jmh.annotations.Setup;\n+import org.openjdk.jmh.annotations.State;\n+import org.openjdk.jmh.annotations.TearDown;\n+import org.openjdk.jmh.runner.Runner;\n+import org.openjdk.jmh.runner.RunnerException;\n+import org.openjdk.jmh.runner.options.Options;\n+import org.openjdk.jmh.runner.options.OptionsBuilder;\n+\n+/**\n+ * Benchmarks for {@link BaseValueVector}.\n+ */\n+@State(Scope.Benchmark)\n+public class BaseValueVectorBenchmarks {\n+\n+  private static final int VECTOR_LENGTH = 1024;\n+\n+  private static final int ALLOCATOR_CAPACITY = 1024 * 1024;\n+\n+  private BufferAllocator allocator;\n+\n+  private IntVector vector;\n+\n+  /**\n+   * Setup benchmarks.\n+   */\n+  @Setup\n+  public void prepare() {\n+    allocator = new RootAllocator(ALLOCATOR_CAPACITY);\n+    vector = new IntVector(\"vector\", allocator);\n+    vector.allocateNew(VECTOR_LENGTH);\n+  }\n+\n+  /**\n+   * Tear down benchmarks.\n+   */\n+  @TearDown\n+  public void tearDown() {\n+    vector.close();\n+    allocator.close();\n+  }\n+\n+  /**\n+   * Test {@link BaseValueVector#computeCombinedBufferSize(int, int)}.\n+   * @return useless. To avoid DCE by JIT.\n+   */\n+  @Benchmark\n+  @BenchmarkMode(Mode.AverageTime)\n+  @OutputTimeUnit(TimeUnit.NANOSECONDS)\n+  public int testComputeCombinedBufferSize() {\n+    int totalSize = 0;\n+    for (int i = 0; i < VECTOR_LENGTH; i++) {\n+      totalSize += vector.computeCombinedBufferSize(i, 4);\n \n Review comment:\n   Seems only like other operations in reallocValidityAndOffsetBuffers spent most of the time compared with time of computing validity buffer size. The performance of computeCombinedBufferSize has shown its improvement which I think makes sense already.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-27T06:17:27.250+0000",
                    "updated": "2019-06-27T06:17:27.250+0000",
                    "started": "2019-06-27T06:17:27.250+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "268276",
                    "issueId": "13241198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241198/worklog/268277",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4671: ARROW-5705: [Java] Optimize BaseValueVector#computeCombinedBufferSize logic\nURL: https://github.com/apache/arrow/pull/4671#discussion_r298021702\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BaseValueVector.java\n ##########\n @@ -122,12 +122,17 @@ private static long roundUp8(long size) {\n     return ((size + 7) / 8) * 8;\n   }\n \n+  /* round up bytes for the validity buffer for the given valueCount */\n+  private static long roundUp8ForValidityBuffer(int valueCount) {\n \n Review comment:\n   Make this method public makes sense?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-27T06:18:04.835+0000",
                    "updated": "2019-06-27T06:18:04.835+0000",
                    "started": "2019-06-27T06:18:04.834+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "268277",
                    "issueId": "13241198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241198/worklog/268284",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4671: ARROW-5705: [Java] Optimize BaseValueVector#computeCombinedBufferSize logic\nURL: https://github.com/apache/arrow/pull/4671#discussion_r298024888\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BaseValueVector.java\n ##########\n @@ -122,12 +122,17 @@ private static long roundUp8(long size) {\n     return ((size + 7) / 8) * 8;\n   }\n \n+  /* round up bytes for the validity buffer for the given valueCount */\n+  private static long roundUp8ForValidityBuffer(int valueCount) {\n \n Review comment:\n   > Make this method public makes sense? The least amount of visibility to replace other occurrences of the pattern\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-27T06:31:33.654+0000",
                    "updated": "2019-06-27T06:31:33.654+0000",
                    "started": "2019-06-27T06:31:33.653+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "268284",
                    "issueId": "13241198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241198/worklog/268287",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4671: ARROW-5705: [Java] Optimize BaseValueVector#computeCombinedBufferSize logic\nURL: https://github.com/apache/arrow/pull/4671#discussion_r298025125\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BaseValueVector.java\n ##########\n @@ -122,12 +122,17 @@ private static long roundUp8(long size) {\n     return ((size + 7) / 8) * 8;\n   }\n \n+  /* round up bytes for the validity buffer for the given valueCount */\n+  private long roundUp8ForValidityBuffer(int valueCount) {\n+    return (valueCount + 63) / 64 * 8;\n \n Review comment:\n   Something like: ((15+63) >> 3) & 0xfffffff8\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-27T06:32:29.168+0000",
                    "updated": "2019-06-27T06:32:29.168+0000",
                    "started": "2019-06-27T06:32:29.166+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "268287",
                    "issueId": "13241198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241198/worklog/268292",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on issue #4671: ARROW-5705: [Java] Optimize BaseValueVector#computeCombinedBufferSize logic\nURL: https://github.com/apache/arrow/pull/4671#issuecomment-506214353\n \n \n   thanks for fixing this.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-27T06:42:20.833+0000",
                    "updated": "2019-06-27T06:42:20.833+0000",
                    "started": "2019-06-27T06:42:20.832+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "268292",
                    "issueId": "13241198"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 15600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@367e3170[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7d8ec235[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@22653074[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@29f1d167[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@e82ce6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@5e21abe4[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@554cd6c4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@72115fe3[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@33dfd25b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@60f2314f[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@53bb2163[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@2b2d82b0[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 15600,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Jun 27 07:21:23 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-06-27T07:21:23.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5705/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-06-24T08:47:04.000+0000",
        "updated": "2019-06-27T07:21:23.000+0000",
        "timeoriginalestimate": null,
        "description": "Now in\u00a0BaseValueVector#computeCombinedBufferSize, it computes validity buffer size as follow:\r\n\r\n_roundUp8(getValidityBufferSizeFromCount(valueCount))_\r\n\r\nwhich can be\u00a0be expanded to\u00a0\r\n\r\n_(((valueCount + 7) >> 3 + 7) / 8) * 8_\r\n\r\nSeems there's no need to compute bufferSize first and expression above could be replaced with:\r\n\r\n_(valueCount + 63) / 64 * 8_\r\n\r\nIn this way, performance of\u00a0_computeCombinedBufferSize_ would be improved. Performance test:\r\n\r\nBefore:\r\nBaseValueVectorBenchmarks.testC_omputeCombinedBufferSize_ avgt 5\u00a04083.180 \u00b1 180.363 ns/op\r\n\r\nAfter:\r\n\r\nBaseValueVectorBenchmarks.testC_omputeCombinedBufferSize_\u00a0avgt 5 3808.635\u00a0\u00b1 162.347 ns/op\r\n\r\n\u00a0",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "4h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 15600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] Optimize BaseValueVector#computeCombinedBufferSize logic",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241198/comment/16873876",
                    "id": "16873876",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 4671\n[https://github.com/apache/arrow/pull/4671]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-06-27T07:21:23.684+0000",
                    "updated": "2019-06-27T07:21:23.684+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0418w:",
        "customfield_12314139": null
    }
}