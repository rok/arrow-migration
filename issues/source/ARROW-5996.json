{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13246238",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246238",
    "key": "ARROW-5996",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334621",
                "id": "12334621",
                "name": "FlightRPC"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "aggregateprogress": {
            "progress": 22200,
            "total": 22200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 22200,
            "total": 22200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5996/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 37,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246238/worklog/280241",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4916: [ARROW-5996][Java] Avoid resource leak in flight service\nURL: https://github.com/apache/arrow/pull/4916\n \n \n   1. In FlightService#doPutCustom, the flight stream must be closed, even if an exception is thrown during the call of responseObserver.onError\r\n   2. The exception occurred during the call to acceptPut should not be swallowed.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-22T06:44:20.549+0000",
                    "updated": "2019-07-22T06:44:20.549+0000",
                    "started": "2019-07-22T06:44:20.548+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "280241",
                    "issueId": "13246238"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246238/worklog/280253",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4916: ARROW-5996: [Java] Avoid resource leak in flight service\nURL: https://github.com/apache/arrow/pull/4916#issuecomment-513673225\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4916?src=pr&el=h1) Report\n   > Merging [#4916](https://codecov.io/gh/apache/arrow/pull/4916?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/85fe33653b6ba8b72e1af2d64abb759aa7aa50e7?src=pr&el=desc) will **increase** coverage by `2.15%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4916/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4916?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4916      +/-   ##\n   ==========================================\n   + Coverage   87.46%   89.61%   +2.15%     \n   ==========================================\n     Files         994      660     -334     \n     Lines      140389    96546   -43843     \n     Branches     1418        0    -1418     \n   ==========================================\n   - Hits       122785    86516   -36269     \n   + Misses      17242    10030    -7212     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4916?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/plasma/thirdparty/ae/ae.c](https://codecov.io/gh/apache/arrow/pull/4916/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGhpcmRwYXJ0eS9hZS9hZS5j) | `70.75% <0%> (-0.95%)` | :arrow_down: |\n   | [r/src/recordbatch.cpp](https://codecov.io/gh/apache/arrow/pull/4916/diff?src=pr&el=tree#diff-ci9zcmMvcmVjb3JkYmF0Y2guY3Bw) | | |\n   | [r/R/Table.R](https://codecov.io/gh/apache/arrow/pull/4916/diff?src=pr&el=tree#diff-ci9SL1RhYmxlLlI=) | | |\n   | [js/src/util/fn.ts](https://codecov.io/gh/apache/arrow/pull/4916/diff?src=pr&el=tree#diff-anMvc3JjL3V0aWwvZm4udHM=) | | |\n   | [go/arrow/array/bufferbuilder.go](https://codecov.io/gh/apache/arrow/pull/4916/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYnVmZmVyYnVpbGRlci5nbw==) | | |\n   | [r/src/symbols.cpp](https://codecov.io/gh/apache/arrow/pull/4916/diff?src=pr&el=tree#diff-ci9zcmMvc3ltYm9scy5jcHA=) | | |\n   | [rust/datafusion/src/execution/projection.rs](https://codecov.io/gh/apache/arrow/pull/4916/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vcHJvamVjdGlvbi5ycw==) | | |\n   | [rust/datafusion/src/execution/filter.rs](https://codecov.io/gh/apache/arrow/pull/4916/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vZmlsdGVyLnJz) | | |\n   | [rust/arrow/src/csv/writer.rs](https://codecov.io/gh/apache/arrow/pull/4916/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvY3N2L3dyaXRlci5ycw==) | | |\n   | [rust/datafusion/src/bin/main.rs](https://codecov.io/gh/apache/arrow/pull/4916/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9iaW4vbWFpbi5ycw==) | | |\n   | ... and [325 more](https://codecov.io/gh/apache/arrow/pull/4916/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4916?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4916?src=pr&el=footer). Last update [85fe336...42b5e54](https://codecov.io/gh/apache/arrow/pull/4916?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-22T07:25:15.021+0000",
                    "updated": "2019-07-22T07:25:15.021+0000",
                    "started": "2019-07-22T07:25:15.021+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "280253",
                    "issueId": "13246238"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246238/worklog/280263",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4916: ARROW-5996: [Java] Avoid resource leak in flight service\nURL: https://github.com/apache/arrow/pull/4916#issuecomment-513673225\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4916?src=pr&el=h1) Report\n   > Merging [#4916](https://codecov.io/gh/apache/arrow/pull/4916?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/85fe33653b6ba8b72e1af2d64abb759aa7aa50e7?src=pr&el=desc) will **increase** coverage by `2.14%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4916/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4916?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff            @@\n   ##           master   #4916      +/-   ##\n   =========================================\n   + Coverage   87.46%   89.6%   +2.14%     \n   =========================================\n     Files         994     660     -334     \n     Lines      140389   96546   -43843     \n     Branches     1418       0    -1418     \n   =========================================\n   - Hits       122785   86511   -36274     \n   + Misses      17242   10035    -7207     \n   + Partials      362       0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4916?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/json/converter.cc](https://codecov.io/gh/apache/arrow/pull/4916/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9qc29uL2NvbnZlcnRlci5jYw==) | `90.53% <0%> (-1.78%)` | :arrow_down: |\n   | [cpp/src/arrow/json/chunked-builder.cc](https://codecov.io/gh/apache/arrow/pull/4916/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9qc29uL2NodW5rZWQtYnVpbGRlci5jYw==) | `79.91% <0%> (-1.68%)` | :arrow_down: |\n   | [r/src/recordbatch.cpp](https://codecov.io/gh/apache/arrow/pull/4916/diff?src=pr&el=tree#diff-ci9zcmMvcmVjb3JkYmF0Y2guY3Bw) | | |\n   | [r/R/Table.R](https://codecov.io/gh/apache/arrow/pull/4916/diff?src=pr&el=tree#diff-ci9SL1RhYmxlLlI=) | | |\n   | [js/src/util/fn.ts](https://codecov.io/gh/apache/arrow/pull/4916/diff?src=pr&el=tree#diff-anMvc3JjL3V0aWwvZm4udHM=) | | |\n   | [go/arrow/array/bufferbuilder.go](https://codecov.io/gh/apache/arrow/pull/4916/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYnVmZmVyYnVpbGRlci5nbw==) | | |\n   | [r/src/symbols.cpp](https://codecov.io/gh/apache/arrow/pull/4916/diff?src=pr&el=tree#diff-ci9zcmMvc3ltYm9scy5jcHA=) | | |\n   | [rust/datafusion/src/execution/projection.rs](https://codecov.io/gh/apache/arrow/pull/4916/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vcHJvamVjdGlvbi5ycw==) | | |\n   | [rust/datafusion/src/execution/filter.rs](https://codecov.io/gh/apache/arrow/pull/4916/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vZmlsdGVyLnJz) | | |\n   | [rust/arrow/src/csv/writer.rs](https://codecov.io/gh/apache/arrow/pull/4916/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvY3N2L3dyaXRlci5ycw==) | | |\n   | ... and [326 more](https://codecov.io/gh/apache/arrow/pull/4916/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4916?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4916?src=pr&el=footer). Last update [85fe336...42b5e54](https://codecov.io/gh/apache/arrow/pull/4916?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-22T08:02:10.127+0000",
                    "updated": "2019-07-22T08:02:10.127+0000",
                    "started": "2019-07-22T08:02:10.127+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "280263",
                    "issueId": "13246238"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246238/worklog/280354",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lihalite commented on pull request #4916: ARROW-5996: [Java] Avoid resource leak in flight service\nURL: https://github.com/apache/arrow/pull/4916#discussion_r305808363\n \n \n\n ##########\n File path: java/flight/src/main/java/org/apache/arrow/flight/FlightService.java\n ##########\n @@ -191,17 +191,17 @@ public void completed() {\n             StreamPipe.wrap(responseObserver, PutResult::toProtocol)).run();\n         responseObserver.onCompleted();\n       } catch (Exception ex) {\n-        logger.error(\"Failed to process custom put.\", ex);\n         responseObserver.onError(ex);\n-        // The client may have terminated, so the exception here is effectively swallowed.\n         // Log the error as well so -something- makes it to the developer.\n         logger.error(\"Exception handling DoPut\", ex);\n-      }\n-      try {\n-        fs.close();\n-      } catch (Exception e) {\n-        logger.error(\"Exception closing Flight stream\", e);\n-        throw new RuntimeException(e);\n+        throw new RuntimeException(ex);\n+      } finally {\n \n Review comment:\n   FlightStream is AutoCloseable, so a try-with-resources here would make things cleaner.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-22T12:05:04.185+0000",
                    "updated": "2019-07-22T12:05:04.185+0000",
                    "started": "2019-07-22T12:05:04.185+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "280354",
                    "issueId": "13246238"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246238/worklog/280355",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lihalite commented on pull request #4916: ARROW-5996: [Java] Avoid resource leak in flight service\nURL: https://github.com/apache/arrow/pull/4916#discussion_r305808801\n \n \n\n ##########\n File path: java/flight/src/main/java/org/apache/arrow/flight/FlightService.java\n ##########\n @@ -191,17 +191,17 @@ public void completed() {\n             StreamPipe.wrap(responseObserver, PutResult::toProtocol)).run();\n         responseObserver.onCompleted();\n       } catch (Exception ex) {\n-        logger.error(\"Failed to process custom put.\", ex);\n         responseObserver.onError(ex);\n-        // The client may have terminated, so the exception here is effectively swallowed.\n         // Log the error as well so -something- makes it to the developer.\n         logger.error(\"Exception handling DoPut\", ex);\n-      }\n-      try {\n-        fs.close();\n-      } catch (Exception e) {\n-        logger.error(\"Exception closing Flight stream\", e);\n-        throw new RuntimeException(e);\n+        throw new RuntimeException(ex);\n \n Review comment:\n   What will actually handle or see this exception? gRPC should only need the `onError` call above.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-22T12:06:25.011+0000",
                    "updated": "2019-07-22T12:06:25.011+0000",
                    "started": "2019-07-22T12:06:25.010+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "280355",
                    "issueId": "13246238"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246238/worklog/280754",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4916: ARROW-5996: [Java] Avoid resource leak in flight service\nURL: https://github.com/apache/arrow/pull/4916#discussion_r306104868\n \n \n\n ##########\n File path: java/flight/src/main/java/org/apache/arrow/flight/FlightService.java\n ##########\n @@ -191,17 +191,17 @@ public void completed() {\n             StreamPipe.wrap(responseObserver, PutResult::toProtocol)).run();\n         responseObserver.onCompleted();\n       } catch (Exception ex) {\n-        logger.error(\"Failed to process custom put.\", ex);\n         responseObserver.onError(ex);\n-        // The client may have terminated, so the exception here is effectively swallowed.\n         // Log the error as well so -something- makes it to the developer.\n         logger.error(\"Exception handling DoPut\", ex);\n-      }\n-      try {\n-        fs.close();\n-      } catch (Exception e) {\n-        logger.error(\"Exception closing Flight stream\", e);\n-        throw new RuntimeException(e);\n+        throw new RuntimeException(ex);\n+      } finally {\n \n Review comment:\n   @lihalite thanks a lot for the comment.\r\n   It seems the FlightStream object is created in the method, but closed in a different thread. So try-with-resources may not be used here.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-23T02:21:45.552+0000",
                    "updated": "2019-07-23T02:21:45.552+0000",
                    "started": "2019-07-23T02:21:45.552+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "280754",
                    "issueId": "13246238"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246238/worklog/280755",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4916: ARROW-5996: [Java] Avoid resource leak in flight service\nURL: https://github.com/apache/arrow/pull/4916#discussion_r306105565\n \n \n\n ##########\n File path: java/flight/src/main/java/org/apache/arrow/flight/FlightService.java\n ##########\n @@ -191,17 +191,17 @@ public void completed() {\n             StreamPipe.wrap(responseObserver, PutResult::toProtocol)).run();\n         responseObserver.onCompleted();\n       } catch (Exception ex) {\n-        logger.error(\"Failed to process custom put.\", ex);\n         responseObserver.onError(ex);\n-        // The client may have terminated, so the exception here is effectively swallowed.\n         // Log the error as well so -something- makes it to the developer.\n         logger.error(\"Exception handling DoPut\", ex);\n-      }\n-      try {\n-        fs.close();\n-      } catch (Exception e) {\n-        logger.error(\"Exception closing Flight stream\", e);\n-        throw new RuntimeException(e);\n+        throw new RuntimeException(ex);\n \n Review comment:\n   Good question.\r\n   In addition to process the exception by onError, it is also desirable to process the exception by the Arrow framework, because that will make problem diagnosis much easier.\r\n   \r\n   Throwing an exception instead of swallowing it is the first step towards this goal.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-23T02:26:09.095+0000",
                    "updated": "2019-07-23T02:26:09.095+0000",
                    "started": "2019-07-23T02:26:09.095+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "280755",
                    "issueId": "13246238"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246238/worklog/280979",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lihalite commented on issue #4916: ARROW-5996: [Java] Avoid resource leak in flight service\nURL: https://github.com/apache/arrow/pull/4916#issuecomment-514176345\n \n \n   Sounds good to me, let's get this merged.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-23T11:48:30.281+0000",
                    "updated": "2019-07-23T11:48:30.281+0000",
                    "started": "2019-07-23T11:48:30.280+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "280979",
                    "issueId": "13246238"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246238/worklog/281444",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4916: ARROW-5996: [Java] Avoid resource leak in flight service\nURL: https://github.com/apache/arrow/pull/4916#discussion_r306608690\n \n \n\n ##########\n File path: java/flight/src/main/java/org/apache/arrow/flight/FlightService.java\n ##########\n @@ -191,17 +191,17 @@ public void completed() {\n             StreamPipe.wrap(responseObserver, PutResult::toProtocol)).run();\n         responseObserver.onCompleted();\n       } catch (Exception ex) {\n-        logger.error(\"Failed to process custom put.\", ex);\n         responseObserver.onError(ex);\n-        // The client may have terminated, so the exception here is effectively swallowed.\n         // Log the error as well so -something- makes it to the developer.\n         logger.error(\"Exception handling DoPut\", ex);\n-      }\n-      try {\n-        fs.close();\n-      } catch (Exception e) {\n-        logger.error(\"Exception closing Flight stream\", e);\n-        throw new RuntimeException(e);\n+        throw new RuntimeException(ex);\n+      } finally {\n \n Review comment:\n   @lihalite thanks a lot for the comment.\r\n   \r\n   > Sounds good to me, let's get this merged.\r\n   \r\n   Thanks a lot for your careful review.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-24T02:49:30.473+0000",
                    "updated": "2019-07-24T02:49:30.473+0000",
                    "started": "2019-07-24T02:49:30.473+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "281444",
                    "issueId": "13246238"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246238/worklog/281501",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4916: ARROW-5996: [Java] Avoid resource leak in flight service\nURL: https://github.com/apache/arrow/pull/4916#discussion_r306619133\n \n \n\n ##########\n File path: java/flight/src/main/java/org/apache/arrow/flight/FlightService.java\n ##########\n @@ -191,17 +191,17 @@ public void completed() {\n             StreamPipe.wrap(responseObserver, PutResult::toProtocol)).run();\n         responseObserver.onCompleted();\n       } catch (Exception ex) {\n-        logger.error(\"Failed to process custom put.\", ex);\n         responseObserver.onError(ex);\n-        // The client may have terminated, so the exception here is effectively swallowed.\n         // Log the error as well so -something- makes it to the developer.\n         logger.error(\"Exception handling DoPut\", ex);\n \n Review comment:\n   generally we should be throwing or logging, not both, is there a strong reason to do both here?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-24T04:00:01.640+0000",
                    "updated": "2019-07-24T04:00:01.640+0000",
                    "started": "2019-07-24T04:00:01.640+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "281501",
                    "issueId": "13246238"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246238/worklog/281502",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4916: ARROW-5996: [Java] Avoid resource leak in flight service\nURL: https://github.com/apache/arrow/pull/4916#discussion_r306619455\n \n \n\n ##########\n File path: java/flight/src/main/java/org/apache/arrow/flight/FlightService.java\n ##########\n @@ -191,17 +191,17 @@ public void completed() {\n             StreamPipe.wrap(responseObserver, PutResult::toProtocol)).run();\n         responseObserver.onCompleted();\n       } catch (Exception ex) {\n-        logger.error(\"Failed to process custom put.\", ex);\n         responseObserver.onError(ex);\n-        // The client may have terminated, so the exception here is effectively swallowed.\n         // Log the error as well so -something- makes it to the developer.\n         logger.error(\"Exception handling DoPut\", ex);\n-      }\n-      try {\n-        fs.close();\n-      } catch (Exception e) {\n-        logger.error(\"Exception closing Flight stream\", e);\n-        throw new RuntimeException(e);\n+        throw new RuntimeException(ex);\n+      } finally {\n \n Review comment:\n   Out of curiosity whatwhat exception was being thrown that we needed the finally?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-24T04:02:16.911+0000",
                    "updated": "2019-07-24T04:02:16.911+0000",
                    "started": "2019-07-24T04:02:16.910+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "281502",
                    "issueId": "13246238"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246238/worklog/281506",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4916: ARROW-5996: [Java] Avoid resource leak in flight service\nURL: https://github.com/apache/arrow/pull/4916#discussion_r306621483\n \n \n\n ##########\n File path: java/flight/src/main/java/org/apache/arrow/flight/FlightService.java\n ##########\n @@ -191,17 +191,17 @@ public void completed() {\n             StreamPipe.wrap(responseObserver, PutResult::toProtocol)).run();\n         responseObserver.onCompleted();\n       } catch (Exception ex) {\n-        logger.error(\"Failed to process custom put.\", ex);\n         responseObserver.onError(ex);\n-        // The client may have terminated, so the exception here is effectively swallowed.\n         // Log the error as well so -something- makes it to the developer.\n         logger.error(\"Exception handling DoPut\", ex);\n \n Review comment:\n   @emkornfield good question.\r\n   \r\n   I think there are two reasons:\r\n   \r\n   1. IMO, printing a log is not an appropriate way of handling an exception. The proper way should depend on the concrete exception, and we may decide to ignore it silently, print a log, or terminate the server, etc.\r\n   \r\n   2. For some scenario, the logger may not be properly set, which makes debugging extremely difficult. We have such a experience when resolving ARROW-5868. It seems this case is also prevalent in customer settings.\r\n   \r\n   About 1), it should be noted that, the exception thrown during a call to submit is silently swallowed due to the mechanism of Java thread pool. However, I think this is the first step towards the right path.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-24T04:17:09.513+0000",
                    "updated": "2019-07-24T04:17:09.513+0000",
                    "started": "2019-07-24T04:17:09.512+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "281506",
                    "issueId": "13246238"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246238/worklog/281509",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4916: ARROW-5996: [Java] Avoid resource leak in flight service\nURL: https://github.com/apache/arrow/pull/4916#discussion_r306622217\n \n \n\n ##########\n File path: java/flight/src/main/java/org/apache/arrow/flight/FlightService.java\n ##########\n @@ -191,17 +191,17 @@ public void completed() {\n             StreamPipe.wrap(responseObserver, PutResult::toProtocol)).run();\n         responseObserver.onCompleted();\n       } catch (Exception ex) {\n-        logger.error(\"Failed to process custom put.\", ex);\n         responseObserver.onError(ex);\n-        // The client may have terminated, so the exception here is effectively swallowed.\n         // Log the error as well so -something- makes it to the developer.\n         logger.error(\"Exception handling DoPut\", ex);\n-      }\n-      try {\n-        fs.close();\n-      } catch (Exception e) {\n-        logger.error(\"Exception closing Flight stream\", e);\n-        throw new RuntimeException(e);\n+        throw new RuntimeException(ex);\n+      } finally {\n \n Review comment:\n   Frankly speaking, I don't know. I am not an expert here. I just think it is a good way to avoid potential resource leak.\r\n   \r\n   It seems @lihalite is an expert here, so he may know more about it.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-24T04:21:59.154+0000",
                    "updated": "2019-07-24T04:21:59.154+0000",
                    "started": "2019-07-24T04:21:59.154+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "281509",
                    "issueId": "13246238"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246238/worklog/281516",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4916: ARROW-5996: [Java] Avoid potential resource leak in flight service\nURL: https://github.com/apache/arrow/pull/4916#discussion_r306625917\n \n \n\n ##########\n File path: java/flight/src/main/java/org/apache/arrow/flight/FlightService.java\n ##########\n @@ -191,17 +191,17 @@ public void completed() {\n             StreamPipe.wrap(responseObserver, PutResult::toProtocol)).run();\n         responseObserver.onCompleted();\n       } catch (Exception ex) {\n-        logger.error(\"Failed to process custom put.\", ex);\n         responseObserver.onError(ex);\n-        // The client may have terminated, so the exception here is effectively swallowed.\n         // Log the error as well so -something- makes it to the developer.\n         logger.error(\"Exception handling DoPut\", ex);\n-      }\n-      try {\n-        fs.close();\n-      } catch (Exception e) {\n-        logger.error(\"Exception closing Flight stream\", e);\n-        throw new RuntimeException(e);\n+        throw new RuntimeException(ex);\n+      } finally {\n+        try {\n+          fs.close();\n+        } catch (Exception e) {\n+          logger.error(\"Exception closing Flight stream\", e);\n+          throw new RuntimeException(e);\n \n Review comment:\n   I don't think we want to throw here, it would override the exception from the inner block which seems to the more important of the two?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-24T04:48:09.493+0000",
                    "updated": "2019-07-24T04:48:09.493+0000",
                    "started": "2019-07-24T04:48:09.493+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "281516",
                    "issueId": "13246238"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246238/worklog/281518",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4916: ARROW-5996: [Java] Avoid potential resource leak in flight service\nURL: https://github.com/apache/arrow/pull/4916#discussion_r306627759\n \n \n\n ##########\n File path: java/flight/src/main/java/org/apache/arrow/flight/FlightService.java\n ##########\n @@ -191,17 +191,17 @@ public void completed() {\n             StreamPipe.wrap(responseObserver, PutResult::toProtocol)).run();\n         responseObserver.onCompleted();\n       } catch (Exception ex) {\n-        logger.error(\"Failed to process custom put.\", ex);\n         responseObserver.onError(ex);\n-        // The client may have terminated, so the exception here is effectively swallowed.\n         // Log the error as well so -something- makes it to the developer.\n         logger.error(\"Exception handling DoPut\", ex);\n \n Review comment:\n   > About 1), it should be noted that, the exception thrown during a call to submit is silently swallowed due to the mechanism of Java thread pool. However, I think this is the first step towards the right path.\r\n   \r\n   Can you outline subsequent steps.  If the exception isn't propagated outside the pool, it seems like this isn't super useful?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-24T05:00:16.083+0000",
                    "updated": "2019-07-24T05:00:16.083+0000",
                    "started": "2019-07-24T05:00:16.083+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "281518",
                    "issueId": "13246238"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246238/worklog/281519",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4916: ARROW-5996: [Java] Avoid potential resource leak in flight service\nURL: https://github.com/apache/arrow/pull/4916#discussion_r306628104\n \n \n\n ##########\n File path: java/flight/src/main/java/org/apache/arrow/flight/FlightService.java\n ##########\n @@ -191,17 +191,17 @@ public void completed() {\n             StreamPipe.wrap(responseObserver, PutResult::toProtocol)).run();\n         responseObserver.onCompleted();\n       } catch (Exception ex) {\n-        logger.error(\"Failed to process custom put.\", ex);\n         responseObserver.onError(ex);\n-        // The client may have terminated, so the exception here is effectively swallowed.\n         // Log the error as well so -something- makes it to the developer.\n         logger.error(\"Exception handling DoPut\", ex);\n-      }\n-      try {\n-        fs.close();\n-      } catch (Exception e) {\n-        logger.error(\"Exception closing Flight stream\", e);\n-        throw new RuntimeException(e);\n+        throw new RuntimeException(ex);\n+      } finally {\n+        try {\n+          fs.close();\n+        } catch (Exception e) {\n+          logger.error(\"Exception closing Flight stream\", e);\n+          throw new RuntimeException(e);\n \n Review comment:\n   This is an interesting question: \r\n   \r\n   If we get an exception in the main logic, and before leaving the current stack, we enter the finally block. In the finally block, we get another exception.\r\n   \r\n   What will happen here? Should be see both exceptions, or the latter will override the former one?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-24T05:02:57.707+0000",
                    "updated": "2019-07-24T05:02:57.707+0000",
                    "started": "2019-07-24T05:02:57.706+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "281519",
                    "issueId": "13246238"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246238/worklog/281520",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4916: ARROW-5996: [Java] Avoid potential resource leak in flight service\nURL: https://github.com/apache/arrow/pull/4916#discussion_r306628104\n \n \n\n ##########\n File path: java/flight/src/main/java/org/apache/arrow/flight/FlightService.java\n ##########\n @@ -191,17 +191,17 @@ public void completed() {\n             StreamPipe.wrap(responseObserver, PutResult::toProtocol)).run();\n         responseObserver.onCompleted();\n       } catch (Exception ex) {\n-        logger.error(\"Failed to process custom put.\", ex);\n         responseObserver.onError(ex);\n-        // The client may have terminated, so the exception here is effectively swallowed.\n         // Log the error as well so -something- makes it to the developer.\n         logger.error(\"Exception handling DoPut\", ex);\n-      }\n-      try {\n-        fs.close();\n-      } catch (Exception e) {\n-        logger.error(\"Exception closing Flight stream\", e);\n-        throw new RuntimeException(e);\n+        throw new RuntimeException(ex);\n+      } finally {\n+        try {\n+          fs.close();\n+        } catch (Exception e) {\n+          logger.error(\"Exception closing Flight stream\", e);\n+          throw new RuntimeException(e);\n \n Review comment:\n   This is an interesting question: \r\n   \r\n   If we get an exception in the main logic, and before leaving the current stack, we enter the finally block. In the finally block, we get another exception.\r\n   \r\n   What will happen here? Should we see both exceptions, or the latter will override the former one?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-24T05:03:06.979+0000",
                    "updated": "2019-07-24T05:03:06.979+0000",
                    "started": "2019-07-24T05:03:06.979+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "281520",
                    "issueId": "13246238"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246238/worklog/281521",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4916: ARROW-5996: [Java] Avoid potential resource leak in flight service\nURL: https://github.com/apache/arrow/pull/4916#discussion_r306629110\n \n \n\n ##########\n File path: java/flight/src/main/java/org/apache/arrow/flight/FlightService.java\n ##########\n @@ -191,17 +191,17 @@ public void completed() {\n             StreamPipe.wrap(responseObserver, PutResult::toProtocol)).run();\n         responseObserver.onCompleted();\n       } catch (Exception ex) {\n-        logger.error(\"Failed to process custom put.\", ex);\n         responseObserver.onError(ex);\n-        // The client may have terminated, so the exception here is effectively swallowed.\n         // Log the error as well so -something- makes it to the developer.\n         logger.error(\"Exception handling DoPut\", ex);\n \n Review comment:\n   > > About 1), it should be noted that, the exception thrown during a call to submit is silently swallowed due to the mechanism of Java thread pool. However, I think this is the first step towards the right path.\r\n   > \r\n   > Can you outline subsequent steps. If the exception isn't propagated outside the pool, it seems like this isn't super useful?\r\n   \r\n   We can extend the ThreadExecutor to catch the exceptions. However, a more difficult problem arises: how to deal with each particular exception? When do we need to terminate the service/server? When do we need to neglect them?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-24T05:10:02.000+0000",
                    "updated": "2019-07-24T05:10:02.000+0000",
                    "started": "2019-07-24T05:10:01.999+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "281521",
                    "issueId": "13246238"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246238/worklog/281535",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4916: ARROW-5996: [Java] Avoid potential resource leak in flight service\nURL: https://github.com/apache/arrow/pull/4916#discussion_r306640772\n \n \n\n ##########\n File path: java/flight/src/main/java/org/apache/arrow/flight/FlightService.java\n ##########\n @@ -191,17 +191,17 @@ public void completed() {\n             StreamPipe.wrap(responseObserver, PutResult::toProtocol)).run();\n         responseObserver.onCompleted();\n       } catch (Exception ex) {\n-        logger.error(\"Failed to process custom put.\", ex);\n         responseObserver.onError(ex);\n-        // The client may have terminated, so the exception here is effectively swallowed.\n         // Log the error as well so -something- makes it to the developer.\n         logger.error(\"Exception handling DoPut\", ex);\n-      }\n-      try {\n-        fs.close();\n-      } catch (Exception e) {\n-        logger.error(\"Exception closing Flight stream\", e);\n-        throw new RuntimeException(e);\n+        throw new RuntimeException(ex);\n+      } finally {\n+        try {\n+          fs.close();\n+        } catch (Exception e) {\n+          logger.error(\"Exception closing Flight stream\", e);\n+          throw new RuntimeException(e);\n \n Review comment:\n   I conduct a small experiment, and the result shows that the exception in the finally block will override the exception in the main logic. You are right @emkornfield \r\n   \r\n   I think it is difficult to say which exception is more important. The exception in the main logic is more interesting to the user. However, the exception in the finally block is related to resource leak. In addition, it causes problems even if the main logic finishes successfully.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-24T06:10:55.741+0000",
                    "updated": "2019-07-24T06:10:55.741+0000",
                    "started": "2019-07-24T06:10:55.741+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "281535",
                    "issueId": "13246238"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246238/worklog/281895",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lihalite commented on pull request #4916: ARROW-5996: [Java] Avoid potential resource leak in flight service\nURL: https://github.com/apache/arrow/pull/4916#discussion_r306776956\n \n \n\n ##########\n File path: java/flight/src/main/java/org/apache/arrow/flight/FlightService.java\n ##########\n @@ -191,17 +191,17 @@ public void completed() {\n             StreamPipe.wrap(responseObserver, PutResult::toProtocol)).run();\n         responseObserver.onCompleted();\n       } catch (Exception ex) {\n-        logger.error(\"Failed to process custom put.\", ex);\n         responseObserver.onError(ex);\n-        // The client may have terminated, so the exception here is effectively swallowed.\n         // Log the error as well so -something- makes it to the developer.\n         logger.error(\"Exception handling DoPut\", ex);\n \n Review comment:\n   So this is why I originally asked above; any exception will just bubble up to gRPC's executor which will just also log it and discard it. There isn't much the developer can do at that point.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-24T12:15:27.999+0000",
                    "updated": "2019-07-24T12:15:27.999+0000",
                    "started": "2019-07-24T12:15:27.998+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "281895",
                    "issueId": "13246238"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 22200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@3380c636[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@786937c8[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@458b3cb2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@746d84bc[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@aa6cbb2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@5098768[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@19fb45d7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@12b7a30[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3d6cdafc[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@741738fe[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@37810e56[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@6d21186c[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 22200,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Jul 30 21:07:10 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-07-30T21:07:10.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5996/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-07-22T06:40:53.000+0000",
        "updated": "2019-08-01T22:39:21.000+0000",
        "timeoriginalestimate": null,
        "description": "# In FlightService#doPutCustom, the flight stream must be closed, even if an exception is thrown during the call of\u00a0responseObserver.onError\r\n # The exception occurred during the call to acceptPut should not be swallowed.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "6h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 22200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] Avoid resource leak in flight service",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246238/comment/16896524",
                    "id": "16896524",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 4916\n[https://github.com/apache/arrow/pull/4916]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-07-30T21:07:10.966+0000",
                    "updated": "2019-07-30T21:07:10.966+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z04vqw:",
        "customfield_12314139": null
    }
}