{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13435106",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435106",
    "key": "ARROW-16000",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351947",
                "id": "12351947",
                "description": "",
                "name": "10.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-10-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12636079",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12636079",
                "type": {
                    "id": "10032",
                    "name": "Blocker",
                    "inward": "is blocked by",
                    "outward": "blocks",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10032"
                },
                "outwardIssue": {
                    "id": "13435001",
                    "key": "ARROW-15992",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435001",
                    "fields": {
                        "summary": "[R] csv file encoding working for one file, but not a folder of files",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                            "description": "The issue is open and ready for the assignee to start work on it.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                            "name": "Open",
                            "id": "1",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                                "id": 2,
                                "key": "new",
                                "colorName": "blue-gray",
                                "name": "To Do"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
                            "id": "7",
                            "description": "The sub-task of the issue",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
                            "name": "Sub-task",
                            "subtask": true,
                            "avatarId": 21146
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=joosthooz",
            "name": "joosthooz",
            "key": "JIRAUSER280940",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joost Hoozemans",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
            "name": "thisisnic",
            "key": "thisisnic",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
            },
            "displayName": "Nicola Crane",
            "active": true,
            "timeZone": "Africa/Casablanca"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
            "name": "thisisnic",
            "key": "thisisnic",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
            },
            "displayName": "Nicola Crane",
            "active": true,
            "timeZone": "Africa/Casablanca"
        },
        "aggregateprogress": {
            "progress": 30600,
            "total": 30600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 30600,
            "total": 30600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-16000/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 51,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435106/worklog/796172",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13709:\nURL: https://github.com/apache/arrow/pull/13709#issuecomment-1198568694\n\n   https://issues.apache.org/jira/browse/ARROW-16000\n\n\n",
                    "created": "2022-07-28T19:55:22.449+0000",
                    "updated": "2022-07-28T19:55:22.449+0000",
                    "started": "2022-07-28T19:55:22.449+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "796172",
                    "issueId": "13435106"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435106/worklog/796173",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13709:\nURL: https://github.com/apache/arrow/pull/13709#issuecomment-1198568725\n\n   :warning: Ticket **has not been started in JIRA**, please click 'Start Progress'.\n\n\n",
                    "created": "2022-07-28T19:55:24.076+0000",
                    "updated": "2022-07-28T19:55:24.076+0000",
                    "started": "2022-07-28T19:55:24.076+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "796173",
                    "issueId": "13435106"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435106/worklog/796174",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "joosthooz commented on code in PR #13709:\nURL: https://github.com/apache/arrow/pull/13709#discussion_r932617253\n\n\n##########\npython/pyarrow/_dataset.pyx:\n##########\n@@ -1237,6 +1238,40 @@ cdef class CsvFileFormat(FileFormat):\n         return f\"<CsvFileFormat parse_options={self.parse_options}>\"\n \n \n+# From io.pxi\n+def py_buffer(object obj):\n\nReview Comment:\n   These duplicates have been removed, once I figured out how to move all relevant parts into `io.pxi`\n\n\n\n",
                    "created": "2022-07-28T19:56:15.338+0000",
                    "updated": "2022-07-28T19:56:15.338+0000",
                    "started": "2022-07-28T19:56:15.338+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "796174",
                    "issueId": "13435106"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435106/worklog/796175",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "joosthooz commented on code in PR #13709:\nURL: https://github.com/apache/arrow/pull/13709#discussion_r932617487\n\n\n##########\npython/pyarrow/_dataset.pyx:\n##########\n@@ -1237,6 +1238,40 @@ cdef class CsvFileFormat(FileFormat):\n         return f\"<CsvFileFormat parse_options={self.parse_options}>\"\n \n \n+# From io.pxi\n+def py_buffer(object obj):\n+    \"\"\"\n+    Construct an Arrow buffer from a Python bytes-like or buffer-like object\n+\n+    Parameters\n+    ----------\n+    obj : object\n+        the object from which the buffer should be constructed.\n+    \"\"\"\n+    cdef shared_ptr[CBuffer] buf\n+    buf = GetResultValue(PyBuffer.FromPyObject(obj))\n+    return pyarrow_wrap_buffer(buf)\n+\n+\n+# From io.pxi\n+cdef void _cb_transform(transform_func, const shared_ptr[CBuffer]& src,\n\nReview Comment:\n   Duplicate, was removed\n\n\n\n",
                    "created": "2022-07-28T19:56:35.354+0000",
                    "updated": "2022-07-28T19:56:35.354+0000",
                    "started": "2022-07-28T19:56:35.353+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "796175",
                    "issueId": "13435106"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435106/worklog/796176",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "joosthooz commented on code in PR #13709:\nURL: https://github.com/apache/arrow/pull/13709#discussion_r932617687\n\n\n##########\ncpp/src/arrow/python/io.h:\n##########\n@@ -112,5 +112,8 @@ std::shared_ptr<::arrow::io::InputStream> MakeTransformInputStream(\n     std::shared_ptr<::arrow::io::InputStream> wrapped, TransformInputStreamVTable vtable,\n     PyObject* arg);\n \n+std::function<Result<std::shared_ptr<io::InputStream>>(std::shared_ptr<io::InputStream>)>\n+makeStreamTransformFunc(TransformInputStreamVTable vtable, PyObject* handler);\n\nReview Comment:\n   Done, thanks for pointing this out!\n\n\n\n",
                    "created": "2022-07-28T19:56:55.342+0000",
                    "updated": "2022-07-28T19:56:55.342+0000",
                    "started": "2022-07-28T19:56:55.341+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "796176",
                    "issueId": "13435106"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435106/worklog/796177",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "joosthooz commented on code in PR #13709:\nURL: https://github.com/apache/arrow/pull/13709#discussion_r932621048\n\n\n##########\npython/pyarrow/_dataset.pyx:\n##########\n@@ -1237,6 +1238,40 @@ cdef class CsvFileFormat(FileFormat):\n         return f\"<CsvFileFormat parse_options={self.parse_options}>\"\n \n \n+# From io.pxi\n+def py_buffer(object obj):\n+    \"\"\"\n+    Construct an Arrow buffer from a Python bytes-like or buffer-like object\n+\n+    Parameters\n+    ----------\n+    obj : object\n+        the object from which the buffer should be constructed.\n+    \"\"\"\n+    cdef shared_ptr[CBuffer] buf\n+    buf = GetResultValue(PyBuffer.FromPyObject(obj))\n+    return pyarrow_wrap_buffer(buf)\n+\n+\n+# From io.pxi\n+cdef void _cb_transform(transform_func, const shared_ptr[CBuffer]& src,\n+                        shared_ptr[CBuffer]* dest) except *:\n+    py_dest = transform_func(pyarrow_wrap_buffer(src))\n+    dest[0] = pyarrow_unwrap_buffer(py_buffer(py_dest))\n+\n+\n+# from io.pxi\n+class Transcoder:\n\nReview Comment:\n   I hope to add that as a possibility in the future, but for now I wanted to mimic the behavior of `read_csv` as much as possible. We'll have to see how bad of a bottleneck this will create. But for scanning a single file it shouldn't matter, and that is good enough for my use case because I just want to be able to deal with files that are larger than memory (which pyarrow.dataset will allow me to do and read_csv will not)\n\n\n\n",
                    "created": "2022-07-28T20:01:35.579+0000",
                    "updated": "2022-07-28T20:01:35.579+0000",
                    "started": "2022-07-28T20:01:35.578+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "796177",
                    "issueId": "13435106"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435106/worklog/796178",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "joosthooz commented on PR #13709:\nURL: https://github.com/apache/arrow/pull/13709#issuecomment-1198576659\n\n   The current state is that it works, but it relies on the workaround of adding an `encoding` parameter to `pyarrow.dataset()`.\r\n   That needs to be dealt with before proceeding.\n\n\n",
                    "created": "2022-07-28T20:05:58.631+0000",
                    "updated": "2022-07-28T20:05:58.631+0000",
                    "started": "2022-07-28T20:05:58.630+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "796178",
                    "issueId": "13435106"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435106/worklog/796200",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on code in PR #13709:\nURL: https://github.com/apache/arrow/pull/13709#discussion_r932704893\n\n\n##########\npython/pyarrow/io.pxi:\n##########\n@@ -1547,6 +1547,33 @@ class Transcoder:\n         return self._encoder.encode(self._decoder.decode(buf, final), final)\n \n \n+cdef shared_ptr[function[StreamWrapFunc]] make_streamwrap_func(\n+        src_encoding, dest_encoding) except *:\n+    \"\"\"\n+    Create a function that will add a transcoding transformation to a stream.\n+    Data from that stream will be decoded according to ``src_encoding`` and\n+    then re-encoded according to ``dest_encoding``.\n+    The created function can be used to wrap streams once they are created.\n+\n+    Parameters\n+    ----------\n+    src_encoding : str\n+        The codec to use when reading data data.\n\nReview Comment:\n   ```suggestion\r\n           The codec to use when reading data.\r\n   ```\n\n\n\n##########\npython/pyarrow/io.pxi:\n##########\n@@ -1547,6 +1547,33 @@ class Transcoder:\n         return self._encoder.encode(self._decoder.decode(buf, final), final)\n \n \n+cdef shared_ptr[function[StreamWrapFunc]] make_streamwrap_func(\n+        src_encoding, dest_encoding) except *:\n+    \"\"\"\n+    Create a function that will add a transcoding transformation to a stream.\n+    Data from that stream will be decoded according to ``src_encoding`` and\n+    then re-encoded according to ``dest_encoding``.\n+    The created function can be used to wrap streams once they are created.\n\nReview Comment:\n   ```suggestion\r\n       The created function can be used to wrap streams.\r\n   ```\r\n   \n\n\n\n",
                    "created": "2022-07-28T22:03:01.427+0000",
                    "updated": "2022-07-28T22:03:01.427+0000",
                    "started": "2022-07-28T22:03:01.426+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "796200",
                    "issueId": "13435106"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435106/worklog/796389",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "joosthooz commented on PR #13709:\nURL: https://github.com/apache/arrow/pull/13709#issuecomment-1199314506\n\n   Thank you for the comments and suggestions. \r\n   I implemented Weston's suggestion and added an `encoding` field to `CsvFileFormat` instead of the added parameter to `dataset()`. This works, but I dislike it a lot. The field is a duplicate to the same one in `ReadOptions`. So when using `read_csv`, users need to use the field in `read_options`, but when using `dataset`, they need to use the field in `format`. They can also use both of them, 1 is silently discarded. Here's what this looks like:\r\n   ```\r\n   >>> fo = ds.CsvFileFormat(default_fragment_scan_options=ds.CsvFragmentScanOptions(read_options=csv.ReadOptions(encoding='iso-8259')), encoding='cp1252')\r\n   >>> fo.default_fragment_scan_options.read_options.encoding\r\n   'utf8'\r\n   >>> fo.encoding\r\n   'cp1252'\r\n   ```\n\n\n",
                    "created": "2022-07-29T13:54:22.135+0000",
                    "updated": "2022-07-29T13:54:22.135+0000",
                    "started": "2022-07-29T13:54:22.135+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "796389",
                    "issueId": "13435106"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435106/worklog/796417",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "joosthooz commented on PR #13709:\nURL: https://github.com/apache/arrow/pull/13709#issuecomment-1199493960\n\n   I pushed an alternative way of passing the encoding in https://github.com/apache/arrow/pull/13709/commits/22eff73806c8511288c16d87cbf64da26a7d941e. For the user it works the same way as in `read_csv`: it is a field in `read_options`. I store the value in `CsvFragmentScanOptions`, and then restore it.\r\n   How do you feel about this?\n\n\n",
                    "created": "2022-07-29T15:10:01.485+0000",
                    "updated": "2022-07-29T15:10:01.485+0000",
                    "started": "2022-07-29T15:10:01.485+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "796417",
                    "issueId": "13435106"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435106/worklog/796476",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on PR #13709:\nURL: https://github.com/apache/arrow/pull/13709#issuecomment-1199853722\n\n   > I store the value in CsvFragmentScanOptions, and then restore it.\r\n   > How do you feel about this?\r\n   \r\n   I like this approach if you can get it working.  Can you add this to the `CsvFileFormat` constructor?\r\n   \r\n   ```\r\n           else :\r\n               # default_fragment_scan_options is needed to add a transcoder\r\n               self.default_fragment_scan_options = CsvFragmentScanOptions()\r\n           if read_options is not None:\r\n               self.default_fragment_scan_options.encoding = read_options.encoding\r\n   ```\r\n   \r\n   >  Is it an option to add encoding as a field to the C struct ReadOptions?\r\n   \r\n   That seems undesirable.  The C++ csv reader doesn't have the field because it has no ability to handle encodings.  So I'm not sure we want to add a field that is completely ignored.\n\n\n",
                    "created": "2022-07-29T18:53:25.825+0000",
                    "updated": "2022-07-29T18:53:25.825+0000",
                    "started": "2022-07-29T18:53:25.825+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "796476",
                    "issueId": "13435106"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435106/worklog/796843",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "joosthooz commented on PR #13709:\nURL: https://github.com/apache/arrow/pull/13709#issuecomment-1201019805\n\n   I got it working but it isn't pretty. I had to duplicate the python-specific `encoding` field to both `CsvFileFormat` and `CsvFragmentScanOptions`, and modify the getter function `default_fragment_scan_options` in `FileFormat`!\r\n   From https://github.com/apache/arrow/pull/13709/commits/4d9802b60480180e8deab6dd162a72d837cccdeb:\r\n   ```It needs to be stored in both CsvFileFormat and CsvFragmentScanOptions because if the user has a reference to these separate objects, they would otherwise become inconsistent.\r\n   1 would report the default 'utf8' (forgetting the user's encoding choice), while the other would still properly report the requested encoding.\r\n   To the user it would be unclear which of these values would be eventually used by the transcoding.\r\n   ```\r\n   This also seems pretty undesirable. \r\n   What about if we added an option to allow the user to specify a library to do the transcoding in C++, that we then dynamically link to? Then we can just add the field to the C struct and the Python transcoding in this PR would also still work nicely. \n\n\n",
                    "created": "2022-08-01T10:32:20.364+0000",
                    "updated": "2022-08-01T10:32:20.364+0000",
                    "started": "2022-08-01T10:32:20.364+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "796843",
                    "issueId": "13435106"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435106/worklog/796912",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "joosthooz commented on PR #13709:\nURL: https://github.com/apache/arrow/pull/13709#issuecomment-1201278866\n\n   ([4d819aa](https://github.com/apache/arrow/pull/13709/commits/4d819aa9e01520911b250a6159e8f1815dc47839) should be `Removed encoding from CsvFragmentScanOptions.equals()`)\n\n\n",
                    "created": "2022-08-01T14:26:39.297+0000",
                    "updated": "2022-08-01T14:26:39.297+0000",
                    "started": "2022-08-01T14:26:39.296+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "796912",
                    "issueId": "13435106"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435106/worklog/796918",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "joosthooz commented on PR #13709:\nURL: https://github.com/apache/arrow/pull/13709#issuecomment-1201283801\n\n   Ok I pushed something completely different. I added encoding as a field in the C struct and some wrapper code that tries to `dlopen` the `libiconv` library. I haven't really tested it beyond seeing that it doesn't crash when I read some data from a dataset. Now the question is how do we let the user specify what they want to do? As in choose between a Python transcoder or a library on his system. And how do we show what libraries we have available? Should we create an example about how peopple can add their own wrappers?\n\n\n",
                    "created": "2022-08-01T14:30:37.146+0000",
                    "updated": "2022-08-01T14:30:37.146+0000",
                    "started": "2022-08-01T14:30:37.146+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "796918",
                    "issueId": "13435106"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435106/worklog/796921",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on PR #13709:\nURL: https://github.com/apache/arrow/pull/13709#issuecomment-1201290515\n\n   I think we're getting a bit far afield\u2026Dynamic linking needs platform-specific code and usually we configure optional dependencies with build flags.\r\n   \r\n   What if we add the C++-side field, have it error in C++ if not set to the default, and in python, we can reset the value to the default and configure the transcoder? That leaves us the path to upgrade and should avoid excessive python-side hacks. If we decide it's valuable to have built-in C++ side transcoding, then we have the option there already. \r\n   \r\n   An alternative would be to have the Python wrappers for these structs no longer actually wrap the C++ structs, so that we aren't limited to the C++ fields. But that would lead to some code duplication/messiness as well.\r\n   \r\n   I'm not sure we can avoid some messiness: the fundamental issue is that we have a Python-only field but are trying to directly wrap the C++ structs. That extra field needs to be mirrored _somewhere_. Either we do work to pass it around on the Python side or we give in and add it in C++.\n\n\n",
                    "created": "2022-08-01T14:36:12.117+0000",
                    "updated": "2022-08-01T14:36:12.117+0000",
                    "started": "2022-08-01T14:36:12.117+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "796921",
                    "issueId": "13435106"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435106/worklog/797359",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "joosthooz commented on PR #13709:\nURL: https://github.com/apache/arrow/pull/13709#issuecomment-1203123960\n\n   That sums it up very nicely. Both alternatives are fine with me. I just pushed an update that aims to do what you suggest, which is adding an `encoding` field to the C++ struct. The CSV reader returns an `Invalid` error when the user has specified an encoding other than UTF-8 but the `stream_transform_func` is empty. \r\n   Is that the right error type or would an `IOError` be more suitable?\r\n   How do you feel about the name of the `set_transcoder` function in `CsvFragmentScanOptions`? Should I add a docstring to it? Should the `stream_transform_func` be added to the equals() function? (in that case I think I need to add a getter/setting for it too)\n\n\n",
                    "created": "2022-08-02T19:26:12.159+0000",
                    "updated": "2022-08-02T19:26:12.159+0000",
                    "started": "2022-08-02T19:26:12.158+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "797359",
                    "issueId": "13435106"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435106/worklog/797410",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on code in PR #13709:\nURL: https://github.com/apache/arrow/pull/13709#discussion_r936052670\n\n\n##########\ncpp/src/arrow/csv/options.h:\n##########\n@@ -163,6 +163,9 @@ struct ARROW_EXPORT ReadOptions {\n   /// If false, column names will be read from the first CSV row after `skip_rows`.\n   bool autogenerate_column_names = false;\n \n+  /// Character encoding used\n+  std::string encoding = \"UTF-8\";\n\nReview Comment:\n   ```suggestion\r\n     /// Character encoding used. Only \"UTF-8\" is supported.\r\n     std::string encoding = \"UTF-8\";\r\n   ```\n\n\n\n##########\npython/pyarrow/io.pxi:\n##########\n@@ -1547,6 +1547,33 @@ class Transcoder:\n         return self._encoder.encode(self._decoder.decode(buf, final), final)\n \n \n+cdef shared_ptr[function[StreamWrapFunc]] make_streamwrap_func(\n+        src_encoding, dest_encoding) except *:\n+    \"\"\"\n+    Create a function that will add a transcoding transformation to a stream.\n+    Data from that stream will be decoded according to ``src_encoding`` and\n+    then re-encoded according to ``dest_encoding``.\n+    The created function can be used to wrap streams.\n+\n+    Parameters\n+    ----------\n+    src_encoding : str\n+        The codec to use when reading data.\n+    dest_encoding : str\n+        The codec to use for emitted data.\n+    \"\"\"\n+    cdef:\n+        shared_ptr[function[StreamWrapFunc]] empty_func\n+        CTransformInputStreamVTable vtable\n+\n+    vtable.transform = _cb_transform\n+    src_codec = codecs.lookup(src_encoding)\n+    dest_codec = codecs.lookup(dest_encoding)\n\nReview Comment:\n   Don't we want to skip this when src == dest?\n\n\n\n##########\ncpp/src/arrow/dataset/file_csv.cc:\n##########\n@@ -183,9 +183,19 @@ static inline Future<std::shared_ptr<csv::StreamingReader>> OpenReaderAsync(\n   auto tracer = arrow::internal::tracing::GetTracer();\n   auto span = tracer->StartSpan(\"arrow::dataset::CsvFileFormat::OpenReaderAsync\");\n #endif\n+  ARROW_ASSIGN_OR_RAISE(\n+      auto fragment_scan_options,\n+      GetFragmentScanOptions<CsvFragmentScanOptions>(\n+          kCsvTypeName, scan_options.get(), format.default_fragment_scan_options));\n   ARROW_ASSIGN_OR_RAISE(auto reader_options, GetReadOptions(format, scan_options));\n-\n   ARROW_ASSIGN_OR_RAISE(auto input, source.OpenCompressed());\n+  if (reader_options.encoding != \"UTF-8\") {\n+    if (fragment_scan_options->stream_transform_func) {\n+      ARROW_ASSIGN_OR_RAISE(input, fragment_scan_options->stream_transform_func(input));\n+    } else {\n+      return Status::Invalid(\"File encoding is not UTF-8, but no stream_transform_func has been provided.\");\n\nReview Comment:\n   Invalid is fine (IOError doesn't quite fit IMO)\r\n   \r\n   ```suggestion\r\n         return Status::Invalid(\"File encoding is not UTF-8, but no stream_transform_func has been provided\");\r\n   ```\n\n\n\n##########\ncpp/src/arrow/csv/options.h:\n##########\n@@ -163,6 +163,9 @@ struct ARROW_EXPORT ReadOptions {\n   /// If false, column names will be read from the first CSV row after `skip_rows`.\n   bool autogenerate_column_names = false;\n \n+  /// Character encoding used\n+  std::string encoding = \"UTF-8\";\n\nReview Comment:\n   nit: maybe a formal constant for the encoding? \n\n\n\n##########\ncpp/src/arrow/dataset/file_csv.cc:\n##########\n@@ -183,9 +183,19 @@ static inline Future<std::shared_ptr<csv::StreamingReader>> OpenReaderAsync(\n   auto tracer = arrow::internal::tracing::GetTracer();\n   auto span = tracer->StartSpan(\"arrow::dataset::CsvFileFormat::OpenReaderAsync\");\n #endif\n+  ARROW_ASSIGN_OR_RAISE(\n+      auto fragment_scan_options,\n+      GetFragmentScanOptions<CsvFragmentScanOptions>(\n+          kCsvTypeName, scan_options.get(), format.default_fragment_scan_options));\n   ARROW_ASSIGN_OR_RAISE(auto reader_options, GetReadOptions(format, scan_options));\n-\n   ARROW_ASSIGN_OR_RAISE(auto input, source.OpenCompressed());\n+  if (reader_options.encoding != \"UTF-8\") {\n\nReview Comment:\n   Somewhere in the CSV reader itself we should also validate the option\n\n\n\n##########\npython/pyarrow/dataset.py:\n##########\n@@ -433,6 +433,10 @@ def _filesystem_dataset(source, schema=None, filesystem=None,\n     FileSystemDataset\n     \"\"\"\n     format = _ensure_format(format or 'parquet')\n+    if isinstance(format, CsvFileFormat):\n\nReview Comment:\n   hmm, it feels like this needs to be placed \"lower\" (unless there aren't any other ways of building a filesystem dataset?)\n\n\n\n",
                    "created": "2022-08-02T21:49:12.744+0000",
                    "updated": "2022-08-02T21:49:12.744+0000",
                    "started": "2022-08-02T21:49:12.744+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "797410",
                    "issueId": "13435106"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435106/worklog/797411",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on PR #13709:\nURL: https://github.com/apache/arrow/pull/13709#issuecomment-1203247943\n\n   > How do you feel about the name of the set_transcoder function in CsvFragmentScanOptions? Should I add a docstring to it?\r\n   \r\n   It feels like it shouldn't be publicly accessible? Or else it should mirror the C++ side option name 1:1\r\n   \r\n   > Should the stream_transform_func be added to the equals() function? (in that case I think I need to add a getter/setting for it too)\r\n   \r\n   I guess we can only get pointer equality, but yes\n\n\n",
                    "created": "2022-08-02T21:49:54.424+0000",
                    "updated": "2022-08-02T21:49:54.424+0000",
                    "started": "2022-08-02T21:49:54.423+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "797411",
                    "issueId": "13435106"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435106/worklog/797653",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "joosthooz commented on code in PR #13709:\nURL: https://github.com/apache/arrow/pull/13709#discussion_r936757983\n\n\n##########\ncpp/src/arrow/csv/options.h:\n##########\n@@ -163,6 +163,9 @@ struct ARROW_EXPORT ReadOptions {\n   /// If false, column names will be read from the first CSV row after `skip_rows`.\n   bool autogenerate_column_names = false;\n \n+  /// Character encoding used\n+  std::string encoding = \"UTF-8\";\n\nReview Comment:\n   Done\n\n\n\n",
                    "created": "2022-08-03T14:46:55.046+0000",
                    "updated": "2022-08-03T14:46:55.046+0000",
                    "started": "2022-08-03T14:46:55.046+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "797653",
                    "issueId": "13435106"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435106/worklog/797921",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "joosthooz commented on PR #13709:\nURL: https://github.com/apache/arrow/pull/13709#issuecomment-1205010971\n\n   > Somewhere in the CSV reader itself we should also validate the option\r\n   \r\n   I tried this, but it doesn't work, because in that case we would need to re-set the field back to `utf8` when adding a transcoder in python. Otherwise, the error is triggered even though we are transcoding to utf8. But then, we will again run into the issue where the `ReadOptions` object that the user created is changed:\r\n   ```\r\n   >>> import pyarrow.dataset as ds\r\n   >>> import pyarrow.csv as csv\r\n   >>> ro =csv.ReadOptions(encoding='iso8859')\r\n   >>> fo = ds.CsvFileFormat(read_options=ro)\r\n   >>> dataset = ds.dataset(\"file.csv\", format=fo)\r\n   >>> ro.encoding\r\n   'utf8'\r\n   ```\r\n   This would be really strange if you ask me. And if we accept this strange behavior, we didn't need to add the `encoding` field in the first place.\r\n   So now, the field is basically ignored in the CSV reader, there only is the check in the dataset CSV reader that there must be a wrapping function set if the encoding is not utf8.\n\n\n",
                    "created": "2022-08-04T09:37:42.586+0000",
                    "updated": "2022-08-04T09:37:42.586+0000",
                    "started": "2022-08-04T09:37:42.585+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "797921",
                    "issueId": "13435106"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 30600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@56bb1a6b[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@735a9546[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3ac4954[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@24fb0cc2[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3d12c838[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@6310418c[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2175253[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@7e76d3cf[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@550e9731[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3473b03d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@c4ee92a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@44eeabc7[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 30600,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Sep 06 20:32:22 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-09-06T20:32:22.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-16000/watchers",
            "watchCount": 5,
            "isWatching": false
        },
        "created": "2022-03-22T11:02:15.000+0000",
        "updated": "2022-09-07T05:02:30.000+0000",
        "timeoriginalestimate": null,
        "description": "In ARROW-15992 a user is reporting issues with trying to read in files with Latin-1 encoding.\u00a0 I had a look through the docs for the Dataset API and I don't think this is currently supported.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "8.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 30600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Dataset] Support Latin-1 encoding",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435106/comment/17510462",
                    "id": "17510462",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "AFAIK, support for encodings isn't done in C++ at all (the C++ CSV reader has no such option, nor does Datasets) - it's done in the bindings by providing a file object wrapper that converts the encoding on the fly (e.g. [https://github.com/apache/arrow/blob/778b1772fd20766e52b2bdccbd37668726f67e0c/r/src/io.cpp#L368-L374]). This works for reading individual files, but probably doesn't work so well for datasets\u2026I wonder if what we need is a filesystem wrapper that'll decode different encodings.\r\n\r\nOr I suppose we could just hardcode this into the CSV Datasets support.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2022-03-22T12:30:12.451+0000",
                    "updated": "2022-03-22T12:30:49.718+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435106/comment/17510484",
                    "id": "17510484",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
                        "name": "thisisnic",
                        "key": "thisisnic",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
                        },
                        "displayName": "Nicola Crane",
                        "active": true,
                        "timeZone": "Africa/Casablanca"
                    },
                    "body": "[~lidavidm] OK, thanks for pointing this out; I've dug deeper into this and it looks like there's a function, {{{}MakeReencodeInputStream{}}}, in the R package which handles this for the single file CSV reading.\u00a0 Perhaps it might be possible to reuse that function for Datasets.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
                        "name": "thisisnic",
                        "key": "thisisnic",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
                        },
                        "displayName": "Nicola Crane",
                        "active": true,
                        "timeZone": "Africa/Casablanca"
                    },
                    "created": "2022-03-22T13:10:26.595+0000",
                    "updated": "2022-03-22T13:10:26.595+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435106/comment/17567275",
                    "id": "17567275",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=joosthooz",
                        "name": "joosthooz",
                        "key": "JIRAUSER280940",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joost Hoozemans",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Hi,\r\n\r\nI've come across a similar issue when using pyarrow.dataset on non-utf8 data. Using read_csv works, because a transcoding is performed on the fly using python codecs. But when using multi-file datasets, doing it that way would mean everything would have to go through a single python interpreter. And then it will still not work for other language bindings. Can we add transcoding on the C++ side?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=joosthooz",
                        "name": "joosthooz",
                        "key": "JIRAUSER280940",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joost Hoozemans",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-07-15T15:03:10.652+0000",
                    "updated": "2022-07-15T15:03:10.652+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435106/comment/17567345",
                    "id": "17567345",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "[~westonpace] [~apitrou] what do you think about (optionally?) depending on something like icu to support transcoding? It's a rather heavyweight dependency for just CSV, I suppose, but bindings at the Python/R layer mean we're subject to interop overhead and the interpreter lock.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2022-07-15T18:17:07.979+0000",
                    "updated": "2022-07-15T18:17:07.979+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435106/comment/17567364",
                    "id": "17567364",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "I would want to know first if there's actual contention due to the Python GIL and/or interpreter overhead.\r\n\r\nIn C++ the basic building block is {{TransformInputStream}}: https://arrow.apache.org/docs/cpp/api/io.html#transforming-input-wrapper , https://github.com/apache/arrow/blob/master/cpp/src/arrow/io/transform.h (sadly, it seems this lacks docstrings; my bad). It should be easy for a normally skilled C++ developer to use it to wrap their transcoding library of choice (some might want to use ICU, others libiconv, etc.).\r\n\r\nI think it would be ideal if we offered an optional header-only that would wrap ICU in a {{TransformInputStream}}, without actually requiring ICU to be present when compiling Arrow. Perhaps this can be through templates?\r\n\r\nAlso datasets needs to grow a dedicated configuration option to wrap all input streams, perhaps.\r\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2022-07-15T19:16:02.035+0000",
                    "updated": "2022-07-15T19:17:28.784+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435106/comment/17567372",
                    "id": "17567372",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Sounds reasonable. Maybe we should implement the option in Python/R first, and based on that, see if we need to push it down further. I wonder if the option should be at the filesystems layer (probably not?), dataset layer (probably, maybe as part of CsvFileFormat or CsvFragmentReadOptions), or CSV options layer (possibly) though.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2022-07-15T19:50:36.313+0000",
                    "updated": "2022-07-15T19:50:36.313+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435106/comment/17567374",
                    "id": "17567374",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Ah, but we're going to need some sort of C++ side hook to even make this possible.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2022-07-15T19:51:21.533+0000",
                    "updated": "2022-07-15T19:51:21.533+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435106/comment/17567384",
                    "id": "17567384",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "CsvFragmentReadOptions sounds like a reasonable place to me.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2022-07-15T20:36:43.020+0000",
                    "updated": "2022-07-15T20:36:43.020+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435106/comment/17568127",
                    "id": "17568127",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "I agree with Antoine's suggestion of {{CsvFragmentReadOptions}}.  This is essentially the same problem we have with compression too right?  We can auto-detect compression based on the file extension but if the compression doesn't match the file extension (or the file extension doesn't indicate compression) we have no way of wrapping the stream with a decompression transform.  It sounds like this solution might solve both problems.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2022-07-18T17:16:29.534+0000",
                    "updated": "2022-07-18T17:16:29.534+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435106/comment/17568154",
                    "id": "17568154",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "The comparison to compression is a good one. I agree it seems reasonable to put it there too.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2022-07-18T18:23:32.963+0000",
                    "updated": "2022-07-18T18:23:32.963+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435106/comment/17569009",
                    "id": "17569009",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=joosthooz",
                        "name": "joosthooz",
                        "key": "JIRAUSER280940",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joost Hoozemans",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Thanks everyone for the advice. What makes CsvFragmentScanOptions the preferred place over csv.ReadOptions? CsvFragmentScanOptions right now doesn't directly store any properties itself, it only carries a csv.ConvertOptions and csv.ReadOptions. And compression and encoding sound like properties of a whole file, not a fragment (although I don't know if that is what Fragment means here).\r\n\r\nWould it make sense as first attempt for me to add a TransformInputStream to CsvFragmentScanOptions or ReadOptions? Because then I can create 1 in python in the same way read_csv does it (with\u00a0MakeTransformInputStream, with a callback into en/decode functions in a python library). Then we can see if there is a performance problem. Then later we could add functionality that creates a TransformInputStream in c++ world with a callback to some external library as Antoine suggested",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=joosthooz",
                        "name": "joosthooz",
                        "key": "JIRAUSER280940",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joost Hoozemans",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-07-20T13:02:19.970+0000",
                    "updated": "2022-07-20T13:02:19.970+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435106/comment/17569018",
                    "id": "17569018",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "When using the CSV reader directly, no additional option is needed since you can pass whichever InputStream you want.\r\nIt's only with datasets that the user doesn't create the InputStream themselves, so some option must be made available to customize the stream wrapping strategy.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2022-07-20T13:22:26.179+0000",
                    "updated": "2022-07-20T13:22:26.179+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435106/comment/17569033",
                    "id": "17569033",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "So to be clear, I'm suggesting something like this:\r\nhttps://gist.github.com/pitrou/2c99e971c01d324fdf72b632ffacae7d\r\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2022-07-20T13:47:09.915+0000",
                    "updated": "2022-07-20T13:47:09.915+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435106/comment/17569152",
                    "id": "17569152",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "For more context.  A {{fragment}} is a term introduced by the datasets API.  The goal of the datasets API is to read data in from a collection on independently scannable fragments (in practice, fragment usually equals file).\r\n\r\nThe scanning process has its own set of options, ScanOptions, (e.g. use_threads, batch size, projection, etc.) which are independent of the file format.  Each file reader has its own set of options (e.g. ReadOptions) and it's completely unaware of any dataset scanner.\r\n\r\nNow, pretend you want to scan a collection of CSV files with a custom delimiter (e.g. |).  It doesn't make sense for delimiter to be a property of scan options because it is specific to CSV.\r\n\r\nAs a result, we have ScanOptions::fragment_scan_options.  This is an interface that each format provides an implementation for, which can be provided for the scan.\r\n\r\nSo, to read a CSV file with a custom delimiter, you just create ParseOptions with the correct delimiter.  To read a dataset of CSV files with a custom delimiter you first create scan options for the scan itself, and then a ParseOptions with the custom delimiter, and then link them via ScanOptions::fragment_scan_options.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2022-07-20T19:28:54.729+0000",
                    "updated": "2022-07-20T19:28:54.729+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435106/comment/17569153",
                    "id": "17569153",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Also, an arbitrary \"input stream transformation callback\" could also be a property of ScanOptions now that I think about it.  This might be more useful once we support scanning JSON files.  This could be used if the JSON files are compressed to add a decompressor to the stream.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2022-07-20T19:30:34.030+0000",
                    "updated": "2022-07-20T19:30:34.030+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435106/comment/17569157",
                    "id": "17569157",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Ideally it could, except that a FileSource is suppose to provide a RandomAccessFile, not an InputStream. A transformation callback can only work for those file formats (CSV for the moment, JSON later on) that read files in a purely streaming manner.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2022-07-20T19:46:55.456+0000",
                    "updated": "2022-07-20T19:47:16.343+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435106/comment/17571364",
                    "id": "17571364",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=joosthooz",
                        "name": "joosthooz",
                        "key": "JIRAUSER280940",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joost Hoozemans",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Hi all,\r\n\r\nWhile working on this I'm running into the following challenge: when creating a CsvFileFormat, the encoding is forced to utf8 by this line https://github.com/apache/arrow/blob/bbf249e056315af0a18d5c0834de9adef117a25f/python/pyarrow/_csv.pyx#L310\r\n\r\n>>> from pyarrow import dataset as ds\r\n>>> from pyarrow import csv as csv\r\n>>> f=ds.CsvFileFormat(read_options=csv.ReadOptions(encoding=\"cp1252\"), parse_options=csv.ParseOptions(delimiter='|'))\r\n>>> f.default_fragment_scan_options.read_options.encoding\r\n'utf8'\r\n\r\nSo when creating a dataset with that object, the code there does not know what encoding the user originally specified, and it cannot create the transform wrapper. Right now I'm working around this by just adding an additional 'encoding' parameter to dataset, but that is not a solution.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=joosthooz",
                        "name": "joosthooz",
                        "key": "JIRAUSER280940",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joost Hoozemans",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-07-26T11:36:07.675+0000",
                    "updated": "2022-07-26T11:36:07.675+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435106/comment/17571368",
                    "id": "17571368",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=joosthooz",
                        "name": "joosthooz",
                        "key": "JIRAUSER280940",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joost Hoozemans",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Hi all,\r\n\r\nI opened a PR with some WIP changes, and would be happy to receive comments.\r\n\r\n[https://github.com/apache/arrow/pull/13709]\r\n\r\nOn the Python side, I don't know how to include some code from io.pxi into _dataset.pyx, so I duplicated some code there. It segfaults during this function [https://github.com/apache/arrow/pull/13709/files#diff-704d642afd62c0e9577833149c45e3c9df38a31fc0f478eee5b68b359a9075baR1257]\r\n\r\nDoes anyone have any tips for debugging Cython?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=joosthooz",
                        "name": "joosthooz",
                        "key": "JIRAUSER280940",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joost Hoozemans",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-07-26T11:43:38.517+0000",
                    "updated": "2022-07-26T11:43:38.517+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435106/comment/17571402",
                    "id": "17571402",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "gdb works for me as usual; you'll have to place breakpoints and such in the generated Cython code, but that's not too bad since the Cython compiler annotates the output with the corresponding source line. ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2022-07-26T12:56:37.596+0000",
                    "updated": "2022-07-26T12:56:37.596+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435106/comment/17571406",
                    "id": "17571406",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Hmm, so CsvFileFormat stores only a C++ CCsvFileFormat and so there's no Python version of the ReadOptions to preserve the encoding. Not sure what a good way to fix that will be\u2026",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2022-07-26T13:01:52.177+0000",
                    "updated": "2022-07-26T13:01:52.177+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435106/comment/17572632",
                    "id": "17572632",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=joosthooz",
                        "name": "joosthooz",
                        "key": "JIRAUSER280940",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joost Hoozemans",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "I pushed some code that works but still relies on that workaround, now I need a way of storing the encoding. Maybe I wrap something around the ReadOptions.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=joosthooz",
                        "name": "joosthooz",
                        "key": "JIRAUSER280940",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joost Hoozemans",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-07-28T20:09:21.325+0000",
                    "updated": "2022-07-28T20:23:26.568+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435106/comment/17600970",
                    "id": "17600970",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 13820\n[https://github.com/apache/arrow/pull/13820]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2022-09-06T20:32:22.223+0000",
                    "updated": "2022-09-06T20:32:22.223+0000"
                }
            ],
            "maxResults": 22,
            "total": 22,
            "startAt": 0
        },
        "customfield_12311820": "0|z10pgw:",
        "customfield_12314139": null
    }
}