{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13171199",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13171199",
    "key": "ARROW-2826",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342562",
                "id": "12342562",
                "description": "",
                "name": "0.10.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-08-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341707",
                "id": "12341707",
                "description": "",
                "name": "0.9.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-03-19"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12539255",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12539255",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "inwardIssue": {
                    "id": "13173628",
                    "key": "ARROW-2893",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13173628",
                    "fields": {
                        "summary": "[C++] Remove PoolBuffer class from public API and hide implementation details behind factory functions",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "aggregateprogress": {
            "progress": 21600,
            "total": 21600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 21600,
            "total": 21600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2826/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 36,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13171199/worklog/126424",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm opened a new pull request #2315: ARROW-2826: [C++] Remove ArrayBuilder::Init method, clean up Resize code, docstrings\nURL: https://github.com/apache/arrow/pull/2315\n \n \n   This was an overdue cleanup. @pitrou let me know what you think.\r\n   \r\n   This causes an API break as a result of removing ArrayBuilder::Init. I can restore it for 0.10.0 and make it simply call the virtual `ArrayBuilder::Resize` if you believe it appropriate. Feel free to make that change if you're looking at the in the AM Europe time.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-24T04:05:31.593+0000",
                    "updated": "2018-07-24T04:05:31.593+0000",
                    "started": "2018-07-24T04:05:31.593+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "126424",
                    "issueId": "13171199"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13171199/worklog/126481",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2315: ARROW-2826: [C++] Remove ArrayBuilder::Init method, clean up Resize code, docstrings\nURL: https://github.com/apache/arrow/pull/2315#issuecomment-407301530\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2315?src=pr&el=h1) Report\n   > Merging [#2315](https://codecov.io/gh/apache/arrow/pull/2315?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/b0ac721d29389f7e91ef53388fab3fad592b65be?src=pr&el=desc) will **increase** coverage by `2.38%`.\n   > The diff coverage is `95.74%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2315/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/2315?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2315      +/-   ##\n   ==========================================\n   + Coverage   84.38%   86.76%   +2.38%     \n   ==========================================\n     Files         293      237      -56     \n     Lines       44784    41999    -2785     \n   ==========================================\n   - Hits        37790    36441    -1349     \n   + Misses       6963     5558    -1405     \n   + Partials       31        0      -31\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2315?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/builder.h](https://codecov.io/gh/apache/arrow/pull/2315/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9idWlsZGVyLmg=) | `97.26% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/ipc/test-common.h](https://codecov.io/gh/apache/arrow/pull/2315/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pcGMvdGVzdC1jb21tb24uaA==) | `93.13% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/table\\_builder.cc](https://codecov.io/gh/apache/arrow/pull/2315/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90YWJsZV9idWlsZGVyLmNj) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/array-test.cc](https://codecov.io/gh/apache/arrow/pull/2315/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hcnJheS10ZXN0LmNj) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/builder.cc](https://codecov.io/gh/apache/arrow/pull/2315/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9idWlsZGVyLmNj) | `79.23% <95.12%> (-0.49%)` | :arrow_down: |\n   | [cpp/src/arrow/util/thread-pool-test.cc](https://codecov.io/gh/apache/arrow/pull/2315/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL3RocmVhZC1wb29sLXRlc3QuY2M=) | `98.91% <0%> (-0.55%)` | :arrow_down: |\n   | [go/arrow/math/uint64.go](https://codecov.io/gh/apache/arrow/pull/2315/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjQuZ28=) | | |\n   | [go/arrow/math/math\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2315/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9tYXRoX2FtZDY0Lmdv) | | |\n   | [go/arrow/array/array.go](https://codecov.io/gh/apache/arrow/pull/2315/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYXJyYXkuZ28=) | | |\n   | [go/arrow/internal/testing/tools/bits.go](https://codecov.io/gh/apache/arrow/pull/2315/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaW50ZXJuYWwvdGVzdGluZy90b29scy9iaXRzLmdv) | | |\n   | ... and [52 more](https://codecov.io/gh/apache/arrow/pull/2315/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2315?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2315?src=pr&el=footer). Last update [b0ac721...8e7c898](https://codecov.io/gh/apache/arrow/pull/2315?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-24T06:55:50.272+0000",
                    "updated": "2018-07-24T06:55:50.272+0000",
                    "started": "2018-07-24T06:55:50.272+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "126481",
                    "issueId": "13171199"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13171199/worklog/126504",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alendit commented on a change in pull request #2315: ARROW-2826: [C++] Remove ArrayBuilder::Init method, clean up Resize code, docstrings\nURL: https://github.com/apache/arrow/pull/2315#discussion_r204667566\n \n \n\n ##########\n File path: cpp/src/arrow/builder.cc\n ##########\n @@ -81,35 +81,29 @@ Status ArrayBuilder::AppendToBitmap(const uint8_t* valid_bytes, int64_t length)\n   return Status::OK();\n }\n \n-Status ArrayBuilder::Init(int64_t capacity) {\n-  int64_t to_alloc = BitUtil::BytesForBits(capacity);\n-  null_bitmap_ = std::make_shared<PoolBuffer>(pool_);\n-  RETURN_NOT_OK(null_bitmap_->Resize(to_alloc));\n-\n-  // Buffers might allocate more then necessary to satisfy padding requirements\n-  const int64_t byte_capacity = null_bitmap_->capacity();\n-  capacity_ = capacity;\n-  null_bitmap_data_ = null_bitmap_->mutable_data();\n-  memset(null_bitmap_data_, 0, static_cast<size_t>(byte_capacity));\n-\n-  return Status::OK();\n-}\n-\n-Status ArrayBuilder::Resize(int64_t new_bits) {\n+Status ArrayBuilder::Resize(int64_t capacity) {\n   if (!null_bitmap_) {\n-    return Init(new_bits);\n-  }\n-  int64_t new_bytes = BitUtil::BytesForBits(new_bits);\n-  int64_t old_bytes = null_bitmap_->size();\n-  RETURN_NOT_OK(null_bitmap_->Resize(new_bytes));\n-  null_bitmap_data_ = null_bitmap_->mutable_data();\n-  // The buffer might be overpadded to deal with padding according to the spec\n-  const int64_t byte_capacity = null_bitmap_->capacity();\n-  capacity_ = new_bits;\n-  if (old_bytes < new_bytes) {\n-    memset(null_bitmap_data_ + old_bytes, 0,\n-           static_cast<size_t>(byte_capacity - old_bytes));\n+    int64_t to_alloc = BitUtil::BytesForBits(capacity);\n+    null_bitmap_ = std::make_shared<PoolBuffer>(pool_);\n \n Review comment:\n   Maybe use the `AllocateResizableBuffer` here? It will take care of zeroing, too.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-24T08:32:15.055+0000",
                    "updated": "2018-07-24T08:32:15.055+0000",
                    "started": "2018-07-24T08:32:15.055+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "126504",
                    "issueId": "13171199"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13171199/worklog/126505",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alendit commented on a change in pull request #2315: ARROW-2826: [C++] Remove ArrayBuilder::Init method, clean up Resize code, docstrings\nURL: https://github.com/apache/arrow/pull/2315#discussion_r204668176\n \n \n\n ##########\n File path: cpp/src/arrow/builder.cc\n ##########\n @@ -81,35 +81,29 @@ Status ArrayBuilder::AppendToBitmap(const uint8_t* valid_bytes, int64_t length)\n   return Status::OK();\n }\n \n-Status ArrayBuilder::Init(int64_t capacity) {\n-  int64_t to_alloc = BitUtil::BytesForBits(capacity);\n-  null_bitmap_ = std::make_shared<PoolBuffer>(pool_);\n-  RETURN_NOT_OK(null_bitmap_->Resize(to_alloc));\n-\n-  // Buffers might allocate more then necessary to satisfy padding requirements\n-  const int64_t byte_capacity = null_bitmap_->capacity();\n-  capacity_ = capacity;\n-  null_bitmap_data_ = null_bitmap_->mutable_data();\n-  memset(null_bitmap_data_, 0, static_cast<size_t>(byte_capacity));\n-\n-  return Status::OK();\n-}\n-\n-Status ArrayBuilder::Resize(int64_t new_bits) {\n+Status ArrayBuilder::Resize(int64_t capacity) {\n   if (!null_bitmap_) {\n-    return Init(new_bits);\n-  }\n-  int64_t new_bytes = BitUtil::BytesForBits(new_bits);\n-  int64_t old_bytes = null_bitmap_->size();\n-  RETURN_NOT_OK(null_bitmap_->Resize(new_bytes));\n-  null_bitmap_data_ = null_bitmap_->mutable_data();\n-  // The buffer might be overpadded to deal with padding according to the spec\n-  const int64_t byte_capacity = null_bitmap_->capacity();\n-  capacity_ = new_bits;\n-  if (old_bytes < new_bytes) {\n-    memset(null_bitmap_data_ + old_bytes, 0,\n-           static_cast<size_t>(byte_capacity - old_bytes));\n+    int64_t to_alloc = BitUtil::BytesForBits(capacity);\n+    null_bitmap_ = std::make_shared<PoolBuffer>(pool_);\n+    RETURN_NOT_OK(null_bitmap_->Resize(to_alloc));\n+\n+    // Buffers might allocate more then necessary to satisfy padding requirements\n+    const int64_t byte_capacity = null_bitmap_->capacity();\n+    null_bitmap_data_ = null_bitmap_->mutable_data();\n \n Review comment:\n   A little bit off topic, but: do we really need these `*_data_` pointers? Are they optimizations? I had the impression that smart_ptr dereferencing is zero-cost and the `data()` call afterward would be inlined afterwards. Did \"going the long way\" lead to problems?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-24T08:34:15.725+0000",
                    "updated": "2018-07-24T08:34:15.725+0000",
                    "started": "2018-07-24T08:34:15.725+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "126505",
                    "issueId": "13171199"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13171199/worklog/126507",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alendit commented on a change in pull request #2315: ARROW-2826: [C++] Remove ArrayBuilder::Init method, clean up Resize code, docstrings\nURL: https://github.com/apache/arrow/pull/2315#discussion_r204667566\n \n \n\n ##########\n File path: cpp/src/arrow/builder.cc\n ##########\n @@ -81,35 +81,29 @@ Status ArrayBuilder::AppendToBitmap(const uint8_t* valid_bytes, int64_t length)\n   return Status::OK();\n }\n \n-Status ArrayBuilder::Init(int64_t capacity) {\n-  int64_t to_alloc = BitUtil::BytesForBits(capacity);\n-  null_bitmap_ = std::make_shared<PoolBuffer>(pool_);\n-  RETURN_NOT_OK(null_bitmap_->Resize(to_alloc));\n-\n-  // Buffers might allocate more then necessary to satisfy padding requirements\n-  const int64_t byte_capacity = null_bitmap_->capacity();\n-  capacity_ = capacity;\n-  null_bitmap_data_ = null_bitmap_->mutable_data();\n-  memset(null_bitmap_data_, 0, static_cast<size_t>(byte_capacity));\n-\n-  return Status::OK();\n-}\n-\n-Status ArrayBuilder::Resize(int64_t new_bits) {\n+Status ArrayBuilder::Resize(int64_t capacity) {\n   if (!null_bitmap_) {\n-    return Init(new_bits);\n-  }\n-  int64_t new_bytes = BitUtil::BytesForBits(new_bits);\n-  int64_t old_bytes = null_bitmap_->size();\n-  RETURN_NOT_OK(null_bitmap_->Resize(new_bytes));\n-  null_bitmap_data_ = null_bitmap_->mutable_data();\n-  // The buffer might be overpadded to deal with padding according to the spec\n-  const int64_t byte_capacity = null_bitmap_->capacity();\n-  capacity_ = new_bits;\n-  if (old_bytes < new_bytes) {\n-    memset(null_bitmap_data_ + old_bytes, 0,\n-           static_cast<size_t>(byte_capacity - old_bytes));\n+    int64_t to_alloc = BitUtil::BytesForBits(capacity);\n+    null_bitmap_ = std::make_shared<PoolBuffer>(pool_);\n \n Review comment:\n   Maybe use the `AllocateResizableBuffer` here? ~~It will take care of zeroing, too.~~ Would still need zeroing, because we don't just zero the padding here.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-24T08:36:00.871+0000",
                    "updated": "2018-07-24T08:36:00.871+0000",
                    "started": "2018-07-24T08:36:00.871+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "126507",
                    "issueId": "13171199"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13171199/worklog/126514",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alendit commented on a change in pull request #2315: ARROW-2826: [C++] Remove ArrayBuilder::Init method, clean up Resize code, docstrings\nURL: https://github.com/apache/arrow/pull/2315#discussion_r204670398\n \n \n\n ##########\n File path: cpp/src/arrow/builder.cc\n ##########\n @@ -81,35 +81,29 @@ Status ArrayBuilder::AppendToBitmap(const uint8_t* valid_bytes, int64_t length)\n   return Status::OK();\n }\n \n-Status ArrayBuilder::Init(int64_t capacity) {\n-  int64_t to_alloc = BitUtil::BytesForBits(capacity);\n-  null_bitmap_ = std::make_shared<PoolBuffer>(pool_);\n-  RETURN_NOT_OK(null_bitmap_->Resize(to_alloc));\n-\n-  // Buffers might allocate more then necessary to satisfy padding requirements\n-  const int64_t byte_capacity = null_bitmap_->capacity();\n-  capacity_ = capacity;\n-  null_bitmap_data_ = null_bitmap_->mutable_data();\n-  memset(null_bitmap_data_, 0, static_cast<size_t>(byte_capacity));\n-\n-  return Status::OK();\n-}\n-\n-Status ArrayBuilder::Resize(int64_t new_bits) {\n+Status ArrayBuilder::Resize(int64_t capacity) {\n   if (!null_bitmap_) {\n-    return Init(new_bits);\n-  }\n-  int64_t new_bytes = BitUtil::BytesForBits(new_bits);\n-  int64_t old_bytes = null_bitmap_->size();\n-  RETURN_NOT_OK(null_bitmap_->Resize(new_bytes));\n-  null_bitmap_data_ = null_bitmap_->mutable_data();\n-  // The buffer might be overpadded to deal with padding according to the spec\n-  const int64_t byte_capacity = null_bitmap_->capacity();\n-  capacity_ = new_bits;\n-  if (old_bytes < new_bytes) {\n-    memset(null_bitmap_data_ + old_bytes, 0,\n-           static_cast<size_t>(byte_capacity - old_bytes));\n+    int64_t to_alloc = BitUtil::BytesForBits(capacity);\n+    null_bitmap_ = std::make_shared<PoolBuffer>(pool_);\n+    RETURN_NOT_OK(null_bitmap_->Resize(to_alloc));\n+\n+    // Buffers might allocate more then necessary to satisfy padding requirements\n+    const int64_t byte_capacity = null_bitmap_->capacity();\n+    null_bitmap_data_ = null_bitmap_->mutable_data();\n+    memset(null_bitmap_data_, 0, static_cast<size_t>(byte_capacity));\n+  } else {\n+    int64_t new_bytes = BitUtil::BytesForBits(capacity);\n+    int64_t old_bytes = null_bitmap_->size();\n \n Review comment:\n   I think `->capacity()` makes more sense here, since we are always zeroing up-to allocated capacity. It's doesn't lead to errors, just zeroes the padding twice.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-24T08:41:35.428+0000",
                    "updated": "2018-07-24T08:41:35.428+0000",
                    "started": "2018-07-24T08:41:35.427+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "126514",
                    "issueId": "13171199"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13171199/worklog/126515",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alendit commented on a change in pull request #2315: ARROW-2826: [C++] Remove ArrayBuilder::Init method, clean up Resize code, docstrings\nURL: https://github.com/apache/arrow/pull/2315#discussion_r204667566\n \n \n\n ##########\n File path: cpp/src/arrow/builder.cc\n ##########\n @@ -81,35 +81,29 @@ Status ArrayBuilder::AppendToBitmap(const uint8_t* valid_bytes, int64_t length)\n   return Status::OK();\n }\n \n-Status ArrayBuilder::Init(int64_t capacity) {\n-  int64_t to_alloc = BitUtil::BytesForBits(capacity);\n-  null_bitmap_ = std::make_shared<PoolBuffer>(pool_);\n-  RETURN_NOT_OK(null_bitmap_->Resize(to_alloc));\n-\n-  // Buffers might allocate more then necessary to satisfy padding requirements\n-  const int64_t byte_capacity = null_bitmap_->capacity();\n-  capacity_ = capacity;\n-  null_bitmap_data_ = null_bitmap_->mutable_data();\n-  memset(null_bitmap_data_, 0, static_cast<size_t>(byte_capacity));\n-\n-  return Status::OK();\n-}\n-\n-Status ArrayBuilder::Resize(int64_t new_bits) {\n+Status ArrayBuilder::Resize(int64_t capacity) {\n   if (!null_bitmap_) {\n-    return Init(new_bits);\n-  }\n-  int64_t new_bytes = BitUtil::BytesForBits(new_bits);\n-  int64_t old_bytes = null_bitmap_->size();\n-  RETURN_NOT_OK(null_bitmap_->Resize(new_bytes));\n-  null_bitmap_data_ = null_bitmap_->mutable_data();\n-  // The buffer might be overpadded to deal with padding according to the spec\n-  const int64_t byte_capacity = null_bitmap_->capacity();\n-  capacity_ = new_bits;\n-  if (old_bytes < new_bytes) {\n-    memset(null_bitmap_data_ + old_bytes, 0,\n-           static_cast<size_t>(byte_capacity - old_bytes));\n+    int64_t to_alloc = BitUtil::BytesForBits(capacity);\n+    null_bitmap_ = std::make_shared<PoolBuffer>(pool_);\n \n Review comment:\n   Maybe use the `AllocateResizableBuffer` here? ~~It will take care of zeroing, too.~~ Would still need zeroing, because we don't just zero the padding here. \r\n   \r\n   After writing the comment below: using `AllocateResizableBuffer` would zero the padding, and since we zero the whole thing anyways, the make_shared+Resize way might make more sense. Zeroing up-to size is also a possibility, but it might be confusing for the code reader afterwards.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-24T08:45:51.324+0000",
                    "updated": "2018-07-24T08:45:51.324+0000",
                    "started": "2018-07-24T08:45:51.323+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "126515",
                    "issueId": "13171199"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13171199/worklog/126518",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alendit commented on a change in pull request #2315: ARROW-2826: [C++] Remove ArrayBuilder::Init method, clean up Resize code, docstrings\nURL: https://github.com/apache/arrow/pull/2315#discussion_r204675137\n \n \n\n ##########\n File path: cpp/src/arrow/builder.cc\n ##########\n @@ -721,11 +671,19 @@ Status BooleanBuilder::Resize(int64_t capacity) {\n     capacity = kMinBuilderCapacity;\n   }\n \n+  const int64_t nbytes = BitUtil::BytesForBits(capacity);\n   if (capacity_ == 0) {\n-    RETURN_NOT_OK(Init(capacity));\n+    RETURN_NOT_OK(AllocateResizableBuffer(pool_, nbytes, &data_));\n+    raw_data_ = reinterpret_cast<uint8_t*>(data_->mutable_data());\n+\n+    // We zero the memory for booleans to keep things simple; for some reason if\n+    // we do not, even though we may write every bit (through in-place | or &),\n+    // valgrind will still show a warning. If we do not zero the bytes here, we\n+    // will have to be careful to zero them in AppendNull and AppendNulls. Also,\n+    // zeroing the bits results in deterministic bits when each byte may have a\n+    // mix of nulls and not nulls.\n+    memset(raw_data_, 0, static_cast<size_t>(nbytes));\n \n Review comment:\n   The same situation as in ArrayBuilder::Resize. Here we zero up-to size in the \"init phase\", instead of capacity, like in ArrayBuilder::Resize. Later we zero between the old size and new size. I'd say it doesn't matter that much if we zero padding twice, as long as it's done the same way everywhere. \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-24T08:56:15.583+0000",
                    "updated": "2018-07-24T08:56:15.583+0000",
                    "started": "2018-07-24T08:56:15.582+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "126518",
                    "issueId": "13171199"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13171199/worklog/126519",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alendit commented on a change in pull request #2315: ARROW-2826: [C++] Remove ArrayBuilder::Init method, clean up Resize code, docstrings\nURL: https://github.com/apache/arrow/pull/2315#discussion_r204676415\n \n \n\n ##########\n File path: cpp/src/arrow/builder.h\n ##########\n @@ -91,30 +91,31 @@ class ARROW_EXPORT ArrayBuilder {\n   /// Set the next length bits to not null (i.e. valid).\n   Status SetNotNull(int64_t length);\n \n-  /// Allocates initial capacity requirements for the builder.  In most\n-  /// cases subclasses should override and call their parent class's\n-  /// method as well.\n-  virtual Status Init(int64_t capacity);\n+  /// \\brief Ensure that at least the indicated number of elements can be appended to\n+  /// the builder without a reallocation. Does not account for reallocations\n+  /// that may be due to variable size data, like binary values.\n+  /// \\param[in] capacity the minimum number of additional array values\n+  /// \\return Status\n+  virtual Status Resize(int64_t capacity);\n \n-  /// Resizes the null_bitmap array.  In most\n-  /// cases subclasses should override and call their parent class's\n-  /// method as well.\n-  virtual Status Resize(int64_t new_bits);\n+  /// \\brief Ensure that there is enough space allocated to add the indicated\n \n Review comment:\n   Reserve reserves the capacity exponentially, too. Maybe it's also worth noting, to highlight that it's not just `Resize(length_+additional_capacity)`.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-24T09:00:20.087+0000",
                    "updated": "2018-07-24T09:00:20.087+0000",
                    "started": "2018-07-24T09:00:20.086+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "126519",
                    "issueId": "13171199"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13171199/worklog/126520",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2315: ARROW-2826: [C++] Remove ArrayBuilder::Init method, clean up Resize code, docstrings\nURL: https://github.com/apache/arrow/pull/2315#discussion_r204677119\n \n \n\n ##########\n File path: cpp/src/arrow/builder.cc\n ##########\n @@ -81,35 +81,29 @@ Status ArrayBuilder::AppendToBitmap(const uint8_t* valid_bytes, int64_t length)\n   return Status::OK();\n }\n \n-Status ArrayBuilder::Init(int64_t capacity) {\n-  int64_t to_alloc = BitUtil::BytesForBits(capacity);\n-  null_bitmap_ = std::make_shared<PoolBuffer>(pool_);\n-  RETURN_NOT_OK(null_bitmap_->Resize(to_alloc));\n-\n-  // Buffers might allocate more then necessary to satisfy padding requirements\n-  const int64_t byte_capacity = null_bitmap_->capacity();\n-  capacity_ = capacity;\n-  null_bitmap_data_ = null_bitmap_->mutable_data();\n-  memset(null_bitmap_data_, 0, static_cast<size_t>(byte_capacity));\n-\n-  return Status::OK();\n-}\n-\n-Status ArrayBuilder::Resize(int64_t new_bits) {\n+Status ArrayBuilder::Resize(int64_t capacity) {\n   if (!null_bitmap_) {\n-    return Init(new_bits);\n-  }\n-  int64_t new_bytes = BitUtil::BytesForBits(new_bits);\n-  int64_t old_bytes = null_bitmap_->size();\n-  RETURN_NOT_OK(null_bitmap_->Resize(new_bytes));\n-  null_bitmap_data_ = null_bitmap_->mutable_data();\n-  // The buffer might be overpadded to deal with padding according to the spec\n-  const int64_t byte_capacity = null_bitmap_->capacity();\n-  capacity_ = new_bits;\n-  if (old_bytes < new_bytes) {\n-    memset(null_bitmap_data_ + old_bytes, 0,\n-           static_cast<size_t>(byte_capacity - old_bytes));\n+    int64_t to_alloc = BitUtil::BytesForBits(capacity);\n+    null_bitmap_ = std::make_shared<PoolBuffer>(pool_);\n \n Review comment:\n   Aren't we supposed to make `PoolBuffer` a private class? I agree with using `AllocateResizableBuffer`, and zeroing up-to-size.\r\n   \r\n   (also ideally we don't have to zero up-to-size; is our logic for filling up the null bitmap defective?)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-24T09:02:41.708+0000",
                    "updated": "2018-07-24T09:02:41.708+0000",
                    "started": "2018-07-24T09:02:41.707+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "126520",
                    "issueId": "13171199"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13171199/worklog/126521",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alendit commented on issue #2315: ARROW-2826: [C++] Remove ArrayBuilder::Init method, clean up Resize code, docstrings\nURL: https://github.com/apache/arrow/pull/2315#issuecomment-407335079\n \n \n   The comments aren't meant to block the merging, of course. \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-24T09:02:55.256+0000",
                    "updated": "2018-07-24T09:02:55.256+0000",
                    "started": "2018-07-24T09:02:55.256+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "126521",
                    "issueId": "13171199"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13171199/worklog/126523",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2315: ARROW-2826: [C++] Remove ArrayBuilder::Init method, clean up Resize code, docstrings\nURL: https://github.com/apache/arrow/pull/2315#discussion_r204677903\n \n \n\n ##########\n File path: cpp/src/arrow/builder.h\n ##########\n @@ -91,30 +91,31 @@ class ARROW_EXPORT ArrayBuilder {\n   /// Set the next length bits to not null (i.e. valid).\n   Status SetNotNull(int64_t length);\n \n-  /// Allocates initial capacity requirements for the builder.  In most\n-  /// cases subclasses should override and call their parent class's\n-  /// method as well.\n-  virtual Status Init(int64_t capacity);\n+  /// \\brief Ensure that at least the indicated number of elements can be appended to\n+  /// the builder without a reallocation. Does not account for reallocations\n \n Review comment:\n   I find this wording a bit ambiguous. Does it mean that I can append `capacity` values to an already non-empty builder? I don't think so.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-24T09:05:04.819+0000",
                    "updated": "2018-07-24T09:05:04.819+0000",
                    "started": "2018-07-24T09:05:04.819+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "126523",
                    "issueId": "13171199"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13171199/worklog/126524",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alendit commented on a change in pull request #2315: ARROW-2826: [C++] Remove ArrayBuilder::Init method, clean up Resize code, docstrings\nURL: https://github.com/apache/arrow/pull/2315#discussion_r204677956\n \n \n\n ##########\n File path: cpp/src/arrow/builder.cc\n ##########\n @@ -81,35 +81,29 @@ Status ArrayBuilder::AppendToBitmap(const uint8_t* valid_bytes, int64_t length)\n   return Status::OK();\n }\n \n-Status ArrayBuilder::Init(int64_t capacity) {\n-  int64_t to_alloc = BitUtil::BytesForBits(capacity);\n-  null_bitmap_ = std::make_shared<PoolBuffer>(pool_);\n-  RETURN_NOT_OK(null_bitmap_->Resize(to_alloc));\n-\n-  // Buffers might allocate more then necessary to satisfy padding requirements\n-  const int64_t byte_capacity = null_bitmap_->capacity();\n-  capacity_ = capacity;\n-  null_bitmap_data_ = null_bitmap_->mutable_data();\n-  memset(null_bitmap_data_, 0, static_cast<size_t>(byte_capacity));\n-\n-  return Status::OK();\n-}\n-\n-Status ArrayBuilder::Resize(int64_t new_bits) {\n+Status ArrayBuilder::Resize(int64_t capacity) {\n   if (!null_bitmap_) {\n-    return Init(new_bits);\n-  }\n-  int64_t new_bytes = BitUtil::BytesForBits(new_bits);\n-  int64_t old_bytes = null_bitmap_->size();\n-  RETURN_NOT_OK(null_bitmap_->Resize(new_bytes));\n-  null_bitmap_data_ = null_bitmap_->mutable_data();\n-  // The buffer might be overpadded to deal with padding according to the spec\n-  const int64_t byte_capacity = null_bitmap_->capacity();\n-  capacity_ = new_bits;\n-  if (old_bytes < new_bytes) {\n-    memset(null_bitmap_data_ + old_bytes, 0,\n-           static_cast<size_t>(byte_capacity - old_bytes));\n+    int64_t to_alloc = BitUtil::BytesForBits(capacity);\n+    null_bitmap_ = std::make_shared<PoolBuffer>(pool_);\n \n Review comment:\n   About the zeroing: we either have to zero in appending bits, which is a little bit complicated logic, of we just zero upfront. I think there is comment about it in old BooleanBuilder::Init / new BooleanBuilder::Resize.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-24T09:05:18.644+0000",
                    "updated": "2018-07-24T09:05:18.644+0000",
                    "started": "2018-07-24T09:05:18.644+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "126524",
                    "issueId": "13171199"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13171199/worklog/126526",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2315: ARROW-2826: [C++] Remove ArrayBuilder::Init method, clean up Resize code, docstrings\nURL: https://github.com/apache/arrow/pull/2315#discussion_r204678080\n \n \n\n ##########\n File path: cpp/src/arrow/builder.h\n ##########\n @@ -91,30 +91,31 @@ class ARROW_EXPORT ArrayBuilder {\n   /// Set the next length bits to not null (i.e. valid).\n   Status SetNotNull(int64_t length);\n \n-  /// Allocates initial capacity requirements for the builder.  In most\n-  /// cases subclasses should override and call their parent class's\n-  /// method as well.\n-  virtual Status Init(int64_t capacity);\n+  /// \\brief Ensure that at least the indicated number of elements can be appended to\n+  /// the builder without a reallocation. Does not account for reallocations\n+  /// that may be due to variable size data, like binary values.\n+  /// \\param[in] capacity the minimum number of additional array values\n+  /// \\return Status\n+  virtual Status Resize(int64_t capacity);\n \n-  /// Resizes the null_bitmap array.  In most\n-  /// cases subclasses should override and call their parent class's\n-  /// method as well.\n-  virtual Status Resize(int64_t new_bits);\n+  /// \\brief Ensure that there is enough space allocated to add the indicated\n \n Review comment:\n   Agreed with @alendit.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-24T09:05:51.669+0000",
                    "updated": "2018-07-24T09:05:51.669+0000",
                    "started": "2018-07-24T09:05:51.668+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "126526",
                    "issueId": "13171199"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13171199/worklog/126527",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alendit commented on a change in pull request #2315: ARROW-2826: [C++] Remove ArrayBuilder::Init method, clean up Resize code, docstrings\nURL: https://github.com/apache/arrow/pull/2315#discussion_r204668176\n \n \n\n ##########\n File path: cpp/src/arrow/builder.cc\n ##########\n @@ -81,35 +81,29 @@ Status ArrayBuilder::AppendToBitmap(const uint8_t* valid_bytes, int64_t length)\n   return Status::OK();\n }\n \n-Status ArrayBuilder::Init(int64_t capacity) {\n-  int64_t to_alloc = BitUtil::BytesForBits(capacity);\n-  null_bitmap_ = std::make_shared<PoolBuffer>(pool_);\n-  RETURN_NOT_OK(null_bitmap_->Resize(to_alloc));\n-\n-  // Buffers might allocate more then necessary to satisfy padding requirements\n-  const int64_t byte_capacity = null_bitmap_->capacity();\n-  capacity_ = capacity;\n-  null_bitmap_data_ = null_bitmap_->mutable_data();\n-  memset(null_bitmap_data_, 0, static_cast<size_t>(byte_capacity));\n-\n-  return Status::OK();\n-}\n-\n-Status ArrayBuilder::Resize(int64_t new_bits) {\n+Status ArrayBuilder::Resize(int64_t capacity) {\n   if (!null_bitmap_) {\n-    return Init(new_bits);\n-  }\n-  int64_t new_bytes = BitUtil::BytesForBits(new_bits);\n-  int64_t old_bytes = null_bitmap_->size();\n-  RETURN_NOT_OK(null_bitmap_->Resize(new_bytes));\n-  null_bitmap_data_ = null_bitmap_->mutable_data();\n-  // The buffer might be overpadded to deal with padding according to the spec\n-  const int64_t byte_capacity = null_bitmap_->capacity();\n-  capacity_ = new_bits;\n-  if (old_bytes < new_bytes) {\n-    memset(null_bitmap_data_ + old_bytes, 0,\n-           static_cast<size_t>(byte_capacity - old_bytes));\n+    int64_t to_alloc = BitUtil::BytesForBits(capacity);\n+    null_bitmap_ = std::make_shared<PoolBuffer>(pool_);\n+    RETURN_NOT_OK(null_bitmap_->Resize(to_alloc));\n+\n+    // Buffers might allocate more then necessary to satisfy padding requirements\n+    const int64_t byte_capacity = null_bitmap_->capacity();\n+    null_bitmap_data_ = null_bitmap_->mutable_data();\n \n Review comment:\n   A little bit off topic, but: do we really need these `*_data_` pointers? Are they optimizations? I had the impression that smart_ptr dereferencing is zero-cost and the `data()` call afterward would be inlined. Did \"going the long way\" lead to problems?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-24T09:06:11.294+0000",
                    "updated": "2018-07-24T09:06:11.294+0000",
                    "started": "2018-07-24T09:06:11.293+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "126527",
                    "issueId": "13171199"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13171199/worklog/126528",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2315: ARROW-2826: [C++] Remove ArrayBuilder::Init method, clean up Resize code, docstrings\nURL: https://github.com/apache/arrow/pull/2315#discussion_r204678281\n \n \n\n ##########\n File path: cpp/src/arrow/builder.h\n ##########\n @@ -91,30 +91,31 @@ class ARROW_EXPORT ArrayBuilder {\n   /// Set the next length bits to not null (i.e. valid).\n   Status SetNotNull(int64_t length);\n \n-  /// Allocates initial capacity requirements for the builder.  In most\n-  /// cases subclasses should override and call their parent class's\n-  /// method as well.\n-  virtual Status Init(int64_t capacity);\n+  /// \\brief Ensure that at least the indicated number of elements can be appended to\n+  /// the builder without a reallocation. Does not account for reallocations\n+  /// that may be due to variable size data, like binary values.\n+  /// \\param[in] capacity the minimum number of additional array values\n+  /// \\return Status\n+  virtual Status Resize(int64_t capacity);\n \n-  /// Resizes the null_bitmap array.  In most\n-  /// cases subclasses should override and call their parent class's\n-  /// method as well.\n-  virtual Status Resize(int64_t new_bits);\n+  /// \\brief Ensure that there is enough space allocated to add the indicated\n+  /// number of elements without any further calls to Resize\n+  /// \\param[in] additional_capacity the number of additional array values\n+  /// \\return Status\n+  Status Reserve(int64_t additional_capacity);\n \n   /// Reset the builder.\n   virtual void Reset();\n \n-  /// Ensures there is enough space for adding the number of elements by checking\n-  /// capacity and calling Resize if necessary.\n-  Status Reserve(int64_t elements);\n-\n   /// For cases where raw data was memcpy'd into the internal buffers, allows us\n   /// to advance the length of the builder. It is your responsibility to use\n   /// this function responsibly.\n   Status Advance(int64_t elements);\n \n   ARROW_DEPRECATED(\"Use Finish instead\")\n-  std::shared_ptr<PoolBuffer> null_bitmap() const { return null_bitmap_; }\n+  std::shared_ptr<PoolBuffer> null_bitmap() const {\n \n Review comment:\n   Perhaps bite the bullet and return a `ResizableBuffer` here? `PoolBuffer` doesn't have any additional methods anyway.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-24T09:06:26.347+0000",
                    "updated": "2018-07-24T09:06:26.347+0000",
                    "started": "2018-07-24T09:06:26.347+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "126528",
                    "issueId": "13171199"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13171199/worklog/126530",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2315: ARROW-2826: [C++] Remove ArrayBuilder::Init method, clean up Resize code, docstrings\nURL: https://github.com/apache/arrow/pull/2315#discussion_r204679118\n \n \n\n ##########\n File path: cpp/src/arrow/builder.cc\n ##########\n @@ -81,35 +81,29 @@ Status ArrayBuilder::AppendToBitmap(const uint8_t* valid_bytes, int64_t length)\n   return Status::OK();\n }\n \n-Status ArrayBuilder::Init(int64_t capacity) {\n-  int64_t to_alloc = BitUtil::BytesForBits(capacity);\n-  null_bitmap_ = std::make_shared<PoolBuffer>(pool_);\n-  RETURN_NOT_OK(null_bitmap_->Resize(to_alloc));\n-\n-  // Buffers might allocate more then necessary to satisfy padding requirements\n-  const int64_t byte_capacity = null_bitmap_->capacity();\n-  capacity_ = capacity;\n-  null_bitmap_data_ = null_bitmap_->mutable_data();\n-  memset(null_bitmap_data_, 0, static_cast<size_t>(byte_capacity));\n-\n-  return Status::OK();\n-}\n-\n-Status ArrayBuilder::Resize(int64_t new_bits) {\n+Status ArrayBuilder::Resize(int64_t capacity) {\n   if (!null_bitmap_) {\n-    return Init(new_bits);\n-  }\n-  int64_t new_bytes = BitUtil::BytesForBits(new_bits);\n-  int64_t old_bytes = null_bitmap_->size();\n-  RETURN_NOT_OK(null_bitmap_->Resize(new_bytes));\n-  null_bitmap_data_ = null_bitmap_->mutable_data();\n-  // The buffer might be overpadded to deal with padding according to the spec\n-  const int64_t byte_capacity = null_bitmap_->capacity();\n-  capacity_ = new_bits;\n-  if (old_bytes < new_bytes) {\n-    memset(null_bitmap_data_ + old_bytes, 0,\n-           static_cast<size_t>(byte_capacity - old_bytes));\n+    int64_t to_alloc = BitUtil::BytesForBits(capacity);\n+    null_bitmap_ = std::make_shared<PoolBuffer>(pool_);\n \n Review comment:\n   I think that depends on the API which is being used. `FirstTimeBitmapWriter` and `GenerateBits` should be immune to Valgrind issues, but `SetBit` and friends are not.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-24T09:08:48.955+0000",
                    "updated": "2018-07-24T09:08:48.955+0000",
                    "started": "2018-07-24T09:08:48.954+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "126530",
                    "issueId": "13171199"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13171199/worklog/126534",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alendit commented on a change in pull request #2315: ARROW-2826: [C++] Remove ArrayBuilder::Init method, clean up Resize code, docstrings\nURL: https://github.com/apache/arrow/pull/2315#discussion_r204681837\n \n \n\n ##########\n File path: cpp/src/arrow/builder.cc\n ##########\n @@ -81,35 +81,29 @@ Status ArrayBuilder::AppendToBitmap(const uint8_t* valid_bytes, int64_t length)\n   return Status::OK();\n }\n \n-Status ArrayBuilder::Init(int64_t capacity) {\n-  int64_t to_alloc = BitUtil::BytesForBits(capacity);\n-  null_bitmap_ = std::make_shared<PoolBuffer>(pool_);\n-  RETURN_NOT_OK(null_bitmap_->Resize(to_alloc));\n-\n-  // Buffers might allocate more then necessary to satisfy padding requirements\n-  const int64_t byte_capacity = null_bitmap_->capacity();\n-  capacity_ = capacity;\n-  null_bitmap_data_ = null_bitmap_->mutable_data();\n-  memset(null_bitmap_data_, 0, static_cast<size_t>(byte_capacity));\n-\n-  return Status::OK();\n-}\n-\n-Status ArrayBuilder::Resize(int64_t new_bits) {\n+Status ArrayBuilder::Resize(int64_t capacity) {\n   if (!null_bitmap_) {\n-    return Init(new_bits);\n-  }\n-  int64_t new_bytes = BitUtil::BytesForBits(new_bits);\n-  int64_t old_bytes = null_bitmap_->size();\n-  RETURN_NOT_OK(null_bitmap_->Resize(new_bytes));\n-  null_bitmap_data_ = null_bitmap_->mutable_data();\n-  // The buffer might be overpadded to deal with padding according to the spec\n-  const int64_t byte_capacity = null_bitmap_->capacity();\n-  capacity_ = new_bits;\n-  if (old_bytes < new_bytes) {\n-    memset(null_bitmap_data_ + old_bytes, 0,\n-           static_cast<size_t>(byte_capacity - old_bytes));\n+    int64_t to_alloc = BitUtil::BytesForBits(capacity);\n+    null_bitmap_ = std::make_shared<PoolBuffer>(pool_);\n \n Review comment:\n   Right, might be worth it to switch away from `SetBit` to `FirstTimeBitmapWriter`.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-24T09:17:48.798+0000",
                    "updated": "2018-07-24T09:17:48.798+0000",
                    "started": "2018-07-24T09:17:48.798+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "126534",
                    "issueId": "13171199"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13171199/worklog/126681",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2315: ARROW-2826: [C++] Remove ArrayBuilder::Init method, clean up Resize code, docstrings\nURL: https://github.com/apache/arrow/pull/2315#issuecomment-407451344\n \n \n   I'll go through this feedback. Note I didn't make any material code changes, only moved the `Init` implementation inside of `Resize` where relevant\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-24T15:36:47.884+0000",
                    "updated": "2018-07-24T15:36:47.884+0000",
                    "started": "2018-07-24T15:36:47.884+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "126681",
                    "issueId": "13171199"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13171199/worklog/126900",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2315: ARROW-2826: [C++] Remove ArrayBuilder::Init method, clean up Resize code, docstrings\nURL: https://github.com/apache/arrow/pull/2315#discussion_r204918470\n \n \n\n ##########\n File path: cpp/src/arrow/builder.cc\n ##########\n @@ -81,35 +81,29 @@ Status ArrayBuilder::AppendToBitmap(const uint8_t* valid_bytes, int64_t length)\n   return Status::OK();\n }\n \n-Status ArrayBuilder::Init(int64_t capacity) {\n-  int64_t to_alloc = BitUtil::BytesForBits(capacity);\n-  null_bitmap_ = std::make_shared<PoolBuffer>(pool_);\n-  RETURN_NOT_OK(null_bitmap_->Resize(to_alloc));\n-\n-  // Buffers might allocate more then necessary to satisfy padding requirements\n-  const int64_t byte_capacity = null_bitmap_->capacity();\n-  capacity_ = capacity;\n-  null_bitmap_data_ = null_bitmap_->mutable_data();\n-  memset(null_bitmap_data_, 0, static_cast<size_t>(byte_capacity));\n-\n-  return Status::OK();\n-}\n-\n-Status ArrayBuilder::Resize(int64_t new_bits) {\n+Status ArrayBuilder::Resize(int64_t capacity) {\n   if (!null_bitmap_) {\n-    return Init(new_bits);\n-  }\n-  int64_t new_bytes = BitUtil::BytesForBits(new_bits);\n-  int64_t old_bytes = null_bitmap_->size();\n-  RETURN_NOT_OK(null_bitmap_->Resize(new_bytes));\n-  null_bitmap_data_ = null_bitmap_->mutable_data();\n-  // The buffer might be overpadded to deal with padding according to the spec\n-  const int64_t byte_capacity = null_bitmap_->capacity();\n-  capacity_ = new_bits;\n-  if (old_bytes < new_bytes) {\n-    memset(null_bitmap_data_ + old_bytes, 0,\n-           static_cast<size_t>(byte_capacity - old_bytes));\n+    int64_t to_alloc = BitUtil::BytesForBits(capacity);\n+    null_bitmap_ = std::make_shared<PoolBuffer>(pool_);\n \n Review comment:\n   I opened https://issues.apache.org/jira/browse/ARROW-2904. I think that change is a bit much for this PR\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-24T21:32:17.481+0000",
                    "updated": "2018-07-24T21:32:17.481+0000",
                    "started": "2018-07-24T21:32:17.481+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "126900",
                    "issueId": "13171199"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/5",
            "id": "5",
            "description": "General wishlist item.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Wish",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 21600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@4fec1183[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@516b3b[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7cd73c0c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@77d4881e[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2e288843[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@3f5e9d04[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7aace1bf[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@29eb028c[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@436bed62[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@896eeb6[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@152a5702[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@6424c849[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 21600,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Jul 25 17:47:48 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-07-25T17:47:48.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2826/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2018-07-10T16:37:01.000+0000",
        "updated": "2018-07-25T17:47:53.000+0000",
        "timeoriginalestimate": null,
        "description": "It's still not clear to me why we have three builder methods that seem to do essentially the same thing. This should be clarified somewhere in the docstrings.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "6h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 21600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Clarification needed between ArrayBuilder::Init(), Resize() and Reserve()",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13171199/comment/16539050",
                    "id": "16539050",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I'll take care of this. ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-07-10T18:10:51.798+0000",
                    "updated": "2018-07-10T18:10:51.798+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13171199/comment/16556045",
                    "id": "16556045",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 2315\n[https://github.com/apache/arrow/pull/2315]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-07-25T17:47:48.064+0000",
                    "updated": "2018-07-25T17:47:48.064+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|i3vqf3:",
        "customfield_12314139": null
    }
}