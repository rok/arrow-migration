{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13178613",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13178613",
    "key": "ARROW-3049",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343066",
                "id": "12343066",
                "description": "",
                "name": "0.11.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-10-08"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342562",
                "id": "12342562",
                "description": "",
                "name": "0.10.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-08-06"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "aggregateprogress": {
            "progress": 6600,
            "total": 6600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 6600,
            "total": 6600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3049/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 11,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13178613/worklog/136165",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou opened a new pull request #2449: ARROW-3049: [C++/Python] Fix reading empty ORC file\nURL: https://github.com/apache/arrow/pull/2449\n \n \n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-20T16:37:12.201+0000",
                    "updated": "2018-08-20T16:37:12.201+0000",
                    "started": "2018-08-20T16:37:12.200+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "136165",
                    "issueId": "13178613"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13178613/worklog/136196",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #2449: ARROW-3049: [C++/Python] Fix reading empty ORC file\nURL: https://github.com/apache/arrow/pull/2449#issuecomment-414405745\n \n \n   There's a crash in the Ruby tests that seems related (it occurs in test_orc.rb), but I'm not really able to understand whether the Ruby codebase needs adapting here. @kou would you like to give me a help?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-20T17:53:09.049+0000",
                    "updated": "2018-08-20T17:53:09.049+0000",
                    "started": "2018-08-20T17:53:09.048+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "136196",
                    "issueId": "13178613"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13178613/worklog/136368",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on issue #2449: ARROW-3049: [C++/Python] Fix reading empty ORC file\nURL: https://github.com/apache/arrow/pull/2449#issuecomment-414516032\n \n \n   Sure.\r\n   I'll look into this in a few days.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-21T01:07:37.580+0000",
                    "updated": "2018-08-21T01:07:37.580+0000",
                    "started": "2018-08-21T01:07:37.579+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "136368",
                    "issueId": "13178613"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13178613/worklog/136661",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #2449: ARROW-3049: [C++/Python] Fix reading empty ORC file\nURL: https://github.com/apache/arrow/pull/2449#issuecomment-414785462\n \n \n   I don't think it's specifically a C/glib problem, rather a general problem in the semantics and/or implementation of column selection. It's not obvious how Orc selects columns and the lack of documentation doesn't help. I'll leave it to @jcrist \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-21T18:59:53.067+0000",
                    "updated": "2018-08-21T18:59:53.067+0000",
                    "started": "2018-08-21T18:59:53.067+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "136661",
                    "issueId": "13178613"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13178613/worklog/137259",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on issue #2449: ARROW-3049: [C++/Python] Fix reading empty ORC file\nURL: https://github.com/apache/arrow/pull/2449#issuecomment-415299111\n \n \n   I've pushed a fix https://github.com/apache/arrow/pull/2449/commits/676175fbbecd1a7aeb6eca1a32bb6e96023eef16\r\n   \r\n   We need to use column selected schema not the original schema for table.\r\n   \r\n   It may be better that we pass the read schema for table to `ReadBatch` and reuse it for batches.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-23T05:48:57.744+0000",
                    "updated": "2018-08-23T05:48:57.744+0000",
                    "started": "2018-08-23T05:48:57.743+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "137259",
                    "issueId": "13178613"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13178613/worklog/137265",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2449: ARROW-3049: [C++/Python] Fix reading empty ORC file\nURL: https://github.com/apache/arrow/pull/2449#issuecomment-415306630\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2449?src=pr&el=h1) Report\n   > Merging [#2449](https://codecov.io/gh/apache/arrow/pull/2449?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/27f990a503f8d9370037bd12c235aae1c1378fb9?src=pr&el=desc) will **increase** coverage by `1.27%`.\n   > The diff coverage is `54.83%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2449/graphs/tree.svg?src=pr&token=LpTCFbqVT1&width=650&height=150)](https://codecov.io/gh/apache/arrow/pull/2449?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff            @@\n   ##           master   #2449      +/-   ##\n   =========================================\n   + Coverage   86.13%   87.4%   +1.27%     \n   =========================================\n     Files         306     244      -62     \n     Lines       46666   43048    -3618     \n   =========================================\n   - Hits        40197   37628    -2569     \n   + Misses       6395    5420     -975     \n   + Partials       74       0      -74\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2449?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [python/pyarrow/tests/test\\_orc.py](https://codecov.io/gh/apache/arrow/pull/2449/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9vcmMucHk=) | `98.76% <100%> (+0.11%)` | :arrow_up: |\n   | [cpp/src/arrow/adapters/orc/adapter.cc](https://codecov.io/gh/apache/arrow/pull/2449/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hZGFwdGVycy9vcmMvYWRhcHRlci5jYw==) | `73.36% <39.13%> (-2.12%)` | :arrow_down: |\n   | [python/pyarrow/plasma.py](https://codecov.io/gh/apache/arrow/pull/2449/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvcGxhc21hLnB5) | `87.5% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/util/parsing.h](https://codecov.io/gh/apache/arrow/pull/2449/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL3BhcnNpbmcuaA==) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/test/client\\_tests.cc](https://codecov.io/gh/apache/arrow/pull/2449/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGVzdC9jbGllbnRfdGVzdHMuY2M=) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [go/arrow/type\\_traits\\_boolean.go](https://codecov.io/gh/apache/arrow/pull/2449/diff?src=pr&el=tree#diff-Z28vYXJyb3cvdHlwZV90cmFpdHNfYm9vbGVhbi5nbw==) | | |\n   | [go/arrow/array/numericbuilder.gen.go](https://codecov.io/gh/apache/arrow/pull/2449/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvbnVtZXJpY2J1aWxkZXIuZ2VuLmdv) | | |\n   | [rust/src/record\\_batch.rs](https://codecov.io/gh/apache/arrow/pull/2449/diff?src=pr&el=tree#diff-cnVzdC9zcmMvcmVjb3JkX2JhdGNoLnJz) | | |\n   | [go/arrow/internal/testing/tools/bits.go](https://codecov.io/gh/apache/arrow/pull/2449/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaW50ZXJuYWwvdGVzdGluZy90b29scy9iaXRzLmdv) | | |\n   | [go/arrow/memory/memory.go](https://codecov.io/gh/apache/arrow/pull/2449/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L21lbW9yeS5nbw==) | | |\n   | ... and [60 more](https://codecov.io/gh/apache/arrow/pull/2449/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2449?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2449?src=pr&el=footer). Last update [27f990a...338c17b](https://codecov.io/gh/apache/arrow/pull/2449?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-23T06:29:31.368+0000",
                    "updated": "2018-08-23T06:29:31.368+0000",
                    "started": "2018-08-23T06:29:31.367+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "137265",
                    "issueId": "13178613"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13178613/worklog/137294",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #2449: ARROW-3049: [C++/Python] Fix reading empty ORC file\nURL: https://github.com/apache/arrow/pull/2449#issuecomment-415345595\n \n \n   That's what I did initially, but when I tried to write some selection tests on the Python side, I got bogus results (try e.g. reading only some columns in the `TestOrcFile.emptyFile` example). I'm not sure whether the issue is on the Python or C++ side.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-23T09:04:30.900+0000",
                    "updated": "2018-08-23T09:04:30.900+0000",
                    "started": "2018-08-23T09:04:30.899+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "137294",
                    "issueId": "13178613"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13178613/worklog/138679",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on issue #2449: ARROW-3049: [C++/Python] Fix reading empty ORC file\nURL: https://github.com/apache/arrow/pull/2449#issuecomment-415306630\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2449?src=pr&el=h1) Report\n   > Merging [#2449](https://codecov.io/gh/apache/arrow/pull/2449?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/27f990a503f8d9370037bd12c235aae1c1378fb9?src=pr&el=desc) will **increase** coverage by `1.3%`.\n   > The diff coverage is `57.5%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2449/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/2449?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff            @@\n   ##           master    #2449     +/-   ##\n   =========================================\n   + Coverage   86.13%   87.44%   +1.3%     \n   =========================================\n     Files         306      246     -60     \n     Lines       46666    43429   -3237     \n   =========================================\n   - Hits        40197    37976   -2221     \n   + Misses       6395     5453    -942     \n   + Partials       74        0     -74\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2449?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [python/pyarrow/tests/test\\_orc.py](https://codecov.io/gh/apache/arrow/pull/2449/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9vcmMucHk=) | `98.76% <100%> (+0.11%)` | :arrow_up: |\n   | [cpp/src/arrow/adapters/orc/adapter.cc](https://codecov.io/gh/apache/arrow/pull/2449/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hZGFwdGVycy9vcmMvYWRhcHRlci5jYw==) | `72.98% <46.87%> (-2.5%)` | :arrow_down: |\n   | [cpp/src/arrow/util/thread-pool.h](https://codecov.io/gh/apache/arrow/pull/2449/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL3RocmVhZC1wb29sLmg=) | `85.71% <0%> (-6.6%)` | :arrow_down: |\n   | [cpp/src/plasma/protocol.cc](https://codecov.io/gh/apache/arrow/pull/2449/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvcHJvdG9jb2wuY2M=) | `95.36% <0%> (-3.31%)` | :arrow_down: |\n   | [cpp/src/arrow/test-util.h](https://codecov.io/gh/apache/arrow/pull/2449/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90ZXN0LXV0aWwuaA==) | `76.74% <0%> (-1.56%)` | :arrow_down: |\n   | [cpp/src/plasma/common.cc](https://codecov.io/gh/apache/arrow/pull/2449/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvY29tbW9uLmNj) | `93.47% <0%> (-0.97%)` | :arrow_down: |\n   | [cpp/src/arrow/table.cc](https://codecov.io/gh/apache/arrow/pull/2449/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90YWJsZS5jYw==) | `93.54% <0%> (-0.56%)` | :arrow_down: |\n   | [cpp/src/plasma/store.cc](https://codecov.io/gh/apache/arrow/pull/2449/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvc3RvcmUuY2M=) | `89.14% <0%> (-0.5%)` | :arrow_down: |\n   | [cpp/src/arrow/compute/compute-test.cc](https://codecov.io/gh/apache/arrow/pull/2449/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jb21wdXRlL2NvbXB1dGUtdGVzdC5jYw==) | `99.34% <0%> (-0.21%)` | :arrow_down: |\n   | [cpp/src/plasma/thirdparty/dlmalloc.c](https://codecov.io/gh/apache/arrow/pull/2449/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGhpcmRwYXJ0eS9kbG1hbGxvYy5j) | `47.4% <0%> (-0.13%)` | :arrow_down: |\n   | ... and [81 more](https://codecov.io/gh/apache/arrow/pull/2449/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2449?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2449?src=pr&el=footer). Last update [27f990a...0ce0adc](https://codecov.io/gh/apache/arrow/pull/2449?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-28T06:52:45.071+0000",
                    "updated": "2018-08-28T06:52:45.071+0000",
                    "started": "2018-08-28T06:52:45.070+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "138679",
                    "issueId": "13178613"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13178613/worklog/138680",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on issue #2449: ARROW-3049: [C++/Python] Fix reading empty ORC file\nURL: https://github.com/apache/arrow/pull/2449#issuecomment-416471990\n \n \n   I tried to share the same schema in all record batches: https://github.com/apache/arrow/pull/2449/commits/0ce0adc0f3217741f41fd55bbeb47cb633060bf5\r\n   CI is green.\r\n   \r\n   Can we merge this pull request?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-28T06:55:20.784+0000",
                    "updated": "2018-08-28T06:55:20.784+0000",
                    "started": "2018-08-28T06:55:20.783+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "138680",
                    "issueId": "13178613"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13178613/worklog/138718",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #2449: ARROW-3049: [C++/Python] Fix reading empty ORC file\nURL: https://github.com/apache/arrow/pull/2449#issuecomment-416513699\n \n \n   +1 from me. Thanks a lot @kou :-)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-28T09:23:17.037+0000",
                    "updated": "2018-08-28T09:23:17.037+0000",
                    "started": "2018-08-28T09:23:17.036+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "138718",
                    "issueId": "13178613"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13178613/worklog/138720",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou closed pull request #2449: ARROW-3049: [C++/Python] Fix reading empty ORC file\nURL: https://github.com/apache/arrow/pull/2449\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/adapters/orc/adapter.cc b/cpp/src/arrow/adapters/orc/adapter.cc\nindex 1ad22790ea..9fdeb9c2ed 100644\n--- a/cpp/src/arrow/adapters/orc/adapter.cc\n+++ b/cpp/src/arrow/adapters/orc/adapter.cc\n@@ -259,6 +259,17 @@ class ORCFileReader::Impl {\n     return GetArrowSchema(type, out);\n   }\n \n+  Status ReadSchema(const liborc::RowReaderOptions& opts, std::shared_ptr<Schema>* out) {\n+    std::unique_ptr<liborc::RowReader> row_reader;\n+    try {\n+      row_reader = reader_->createRowReader(opts);\n+    } catch (const liborc::ParseError& e) {\n+      return Status::Invalid(e.what());\n+    }\n+    const liborc::Type& type = row_reader->getSelectedType();\n+    return GetArrowSchema(type, out);\n+  }\n+\n   Status GetArrowSchema(const liborc::Type& type, std::shared_ptr<Schema>* out) {\n     if (type.getKind() != liborc::STRUCT) {\n       return Status::NotImplemented(\n@@ -288,19 +299,37 @@ class ORCFileReader::Impl {\n \n   Status Read(std::shared_ptr<Table>* out) {\n     liborc::RowReaderOptions opts;\n-    return ReadTable(opts, out);\n+    std::shared_ptr<Schema> schema;\n+    RETURN_NOT_OK(ReadSchema(opts, &schema));\n+    return ReadTable(opts, schema, out);\n+  }\n+\n+  Status Read(const std::shared_ptr<Schema>& schema, std::shared_ptr<Table>* out) {\n+    liborc::RowReaderOptions opts;\n+    return ReadTable(opts, schema, out);\n   }\n \n   Status Read(const std::vector<int>& include_indices, std::shared_ptr<Table>* out) {\n     liborc::RowReaderOptions opts;\n     RETURN_NOT_OK(SelectIndices(&opts, include_indices));\n-    return ReadTable(opts, out);\n+    std::shared_ptr<Schema> schema;\n+    RETURN_NOT_OK(ReadSchema(opts, &schema));\n+    return ReadTable(opts, schema, out);\n+  }\n+\n+  Status Read(const std::shared_ptr<Schema>& schema,\n+              const std::vector<int>& include_indices, std::shared_ptr<Table>* out) {\n+    liborc::RowReaderOptions opts;\n+    RETURN_NOT_OK(SelectIndices(&opts, include_indices));\n+    return ReadTable(opts, schema, out);\n   }\n \n   Status ReadStripe(int64_t stripe, std::shared_ptr<RecordBatch>* out) {\n     liborc::RowReaderOptions opts;\n     RETURN_NOT_OK(SelectStripe(&opts, stripe));\n-    return ReadBatch(opts, stripes_[stripe].num_rows, out);\n+    std::shared_ptr<Schema> schema;\n+    RETURN_NOT_OK(ReadSchema(opts, &schema));\n+    return ReadBatch(opts, schema, stripes_[stripe].num_rows, out);\n   }\n \n   Status ReadStripe(int64_t stripe, const std::vector<int>& include_indices,\n@@ -308,7 +337,9 @@ class ORCFileReader::Impl {\n     liborc::RowReaderOptions opts;\n     RETURN_NOT_OK(SelectIndices(&opts, include_indices));\n     RETURN_NOT_OK(SelectStripe(&opts, stripe));\n-    return ReadBatch(opts, stripes_[stripe].num_rows, out);\n+    std::shared_ptr<Schema> schema;\n+    RETURN_NOT_OK(ReadSchema(opts, &schema));\n+    return ReadBatch(opts, schema, stripes_[stripe].num_rows, out);\n   }\n \n   Status SelectStripe(liborc::RowReaderOptions* opts, int64_t stripe) {\n@@ -335,17 +366,18 @@ class ORCFileReader::Impl {\n   }\n \n   Status ReadTable(const liborc::RowReaderOptions& row_opts,\n-                   std::shared_ptr<Table>* out) {\n+                   const std::shared_ptr<Schema>& schema, std::shared_ptr<Table>* out) {\n     liborc::RowReaderOptions opts(row_opts);\n     std::vector<std::shared_ptr<RecordBatch>> batches(stripes_.size());\n     for (size_t stripe = 0; stripe < stripes_.size(); stripe++) {\n       opts.range(stripes_[stripe].offset, stripes_[stripe].length);\n-      RETURN_NOT_OK(ReadBatch(opts, stripes_[stripe].num_rows, &batches[stripe]));\n+      RETURN_NOT_OK(ReadBatch(opts, schema, stripes_[stripe].num_rows, &batches[stripe]));\n     }\n-    return Table::FromRecordBatches(batches, out);\n+    return Table::FromRecordBatches(schema, batches, out);\n   }\n \n-  Status ReadBatch(const liborc::RowReaderOptions& opts, int64_t nrows,\n+  Status ReadBatch(const liborc::RowReaderOptions& opts,\n+                   const std::shared_ptr<Schema>& schema, int64_t nrows,\n                    std::shared_ptr<RecordBatch>* out) {\n     std::unique_ptr<liborc::RowReader> rowreader;\n     std::unique_ptr<liborc::ColumnVectorBatch> batch;\n@@ -355,16 +387,13 @@ class ORCFileReader::Impl {\n     } catch (const liborc::ParseError& e) {\n       return Status::Invalid(e.what());\n     }\n-    const liborc::Type& type = rowreader->getSelectedType();\n-    std::shared_ptr<Schema> schema;\n-    RETURN_NOT_OK(GetArrowSchema(type, &schema));\n-\n     std::unique_ptr<RecordBatchBuilder> builder;\n     RETURN_NOT_OK(RecordBatchBuilder::Make(schema, pool_, nrows, &builder));\n \n     // The top-level type must be a struct to read into an arrow table\n     const auto& struct_batch = checked_cast<liborc::StructVectorBatch&>(*batch);\n \n+    const liborc::Type& type = rowreader->getSelectedType();\n     while (rowreader->next(*batch)) {\n       for (int i = 0; i < builder->num_fields(); i++) {\n         RETURN_NOT_OK(AppendBatch(type.getSubtype(i), struct_batch.fields[i], 0,\n@@ -674,11 +703,22 @@ Status ORCFileReader::ReadSchema(std::shared_ptr<Schema>* out) {\n \n Status ORCFileReader::Read(std::shared_ptr<Table>* out) { return impl_->Read(out); }\n \n+Status ORCFileReader::Read(const std::shared_ptr<Schema>& schema,\n+                           std::shared_ptr<Table>* out) {\n+  return impl_->Read(schema, out);\n+}\n+\n Status ORCFileReader::Read(const std::vector<int>& include_indices,\n                            std::shared_ptr<Table>* out) {\n   return impl_->Read(include_indices, out);\n }\n \n+Status ORCFileReader::Read(const std::shared_ptr<Schema>& schema,\n+                           const std::vector<int>& include_indices,\n+                           std::shared_ptr<Table>* out) {\n+  return impl_->Read(schema, include_indices, out);\n+}\n+\n Status ORCFileReader::ReadStripe(int64_t stripe, std::shared_ptr<RecordBatch>* out) {\n   return impl_->ReadStripe(stripe, out);\n }\ndiff --git a/cpp/src/arrow/adapters/orc/adapter.h b/cpp/src/arrow/adapters/orc/adapter.h\nindex 6438658fd4..f482dee612 100644\n--- a/cpp/src/arrow/adapters/orc/adapter.h\n+++ b/cpp/src/arrow/adapters/orc/adapter.h\n@@ -59,17 +59,35 @@ class ARROW_EXPORT ORCFileReader {\n   ///\n   /// The table will be composed of one record batch per stripe.\n   ///\n-  /// \\param[out] out the returned RecordBatch\n+  /// \\param[out] out the returned Table\n   Status Read(std::shared_ptr<Table>* out);\n \n+  /// \\brief Read the file as a Table\n+  ///\n+  /// The table will be composed of one record batch per stripe.\n+  ///\n+  /// \\param[in] schema the Table schema\n+  /// \\param[out] out the returned Table\n+  Status Read(const std::shared_ptr<Schema>& schema, std::shared_ptr<Table>* out);\n+\n   /// \\brief Read the file as a Table\n   ///\n   /// The table will be composed of one record batch per stripe.\n   ///\n   /// \\param[in] include_indices the selected field indices to read\n-  /// \\param[out] out the returned RecordBatch\n+  /// \\param[out] out the returned Table\n   Status Read(const std::vector<int>& include_indices, std::shared_ptr<Table>* out);\n \n+  /// \\brief Read the file as a Table\n+  ///\n+  /// The table will be composed of one record batch per stripe.\n+  ///\n+  /// \\param[in] schema the Table schema\n+  /// \\param[in] include_indices the selected field indices to read\n+  /// \\param[out] out the returned Table\n+  Status Read(const std::shared_ptr<Schema>& schema,\n+              const std::vector<int>& include_indices, std::shared_ptr<Table>* out);\n+\n   /// \\brief Read a single stripe as a RecordBatch\n   ///\n   /// \\param[in] stripe the stripe index\ndiff --git a/python/pyarrow/tests/test_orc.py b/python/pyarrow/tests/test_orc.py\nindex 311a5d44cd..3e517773ff 100644\n--- a/python/pyarrow/tests/test_orc.py\n+++ b/python/pyarrow/tests/test_orc.py\n@@ -93,6 +93,7 @@ def check_example_file(orc_path, expected_df, need_fix=False):\n     # Exercise ORCFile.read()\n     table = orc_file.read()\n     assert isinstance(table, pa.Table)\n+    table._validate()\n \n     # This workaround needed because of ARROW-3080\n     orc_df = pd.DataFrame(table.to_pydict())\n@@ -138,9 +139,41 @@ def check_example_using_json(example_name):\n                        need_fix=True)\n \n \n-@pytest.mark.xfail(strict=True, reason=\"ARROW-3049\")\n def test_orcfile_empty():\n-    check_example_using_json('TestOrcFile.emptyFile')\n+    from pyarrow import orc\n+    f = orc.ORCFile(path_for_orc_example('TestOrcFile.emptyFile'))\n+    table = f.read()\n+    assert table.num_rows == 0\n+    schema = table.schema\n+    expected_schema = pa.schema([\n+        ('boolean1', pa.bool_()),\n+        ('byte1', pa.int8()),\n+        ('short1', pa.int16()),\n+        ('int1', pa.int32()),\n+        ('long1', pa.int64()),\n+        ('float1', pa.float32()),\n+        ('double1', pa.float64()),\n+        ('bytes1', pa.binary()),\n+        ('string1', pa.string()),\n+        ('middle', pa.struct([\n+            ('list', pa.list_(pa.struct([\n+                ('int1', pa.int32()),\n+                ('string1', pa.string()),\n+                ]))),\n+            ])),\n+        ('list', pa.list_(pa.struct([\n+            ('int1', pa.int32()),\n+            ('string1', pa.string()),\n+            ]))),\n+        ('map', pa.list_(pa.struct([\n+            ('key', pa.string()),\n+            ('value', pa.struct([\n+                ('int1', pa.int32()),\n+                ('string1', pa.string()),\n+                ])),\n+            ]))),\n+        ])\n+    assert schema == expected_schema\n \n \n def test_orcfile_test1_json():\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-28T09:24:09.656+0000",
                    "updated": "2018-08-28T09:24:09.656+0000",
                    "started": "2018-08-28T09:24:09.656+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "138720",
                    "issueId": "13178613"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 6600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@41732636[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3a5794cd[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1b623484[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@1d952ad9[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@49e29d57[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@4ddc1e00[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4790d52b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@7367fce2[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2e32dffc[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@333e824[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@42cb5ce4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@e0728b3[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 6600,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Aug 28 09:24:11 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-08-28T09:24:11.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3049/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2018-08-13T15:28:33.000+0000",
        "updated": "2018-08-28T09:24:27.000+0000",
        "timeoriginalestimate": null,
        "description": "{code}\r\nTraceback (most recent call last):\r\n  File \"/home/antoine/arrow/python/pyarrow/tests/test_orc.py\", line 83, in test_orcfile_empty\r\n    check_example('TestOrcFile.emptyFile')\r\n  File \"/home/antoine/arrow/python/pyarrow/tests/test_orc.py\", line 79, in check_example\r\n    os.path.join(orc_data_dir, '%s.jsn.gz' % name))\r\n  File \"/home/antoine/arrow/python/pyarrow/tests/test_orc.py\", line 62, in check_example_files\r\n    table = orc_file.read()\r\n  File \"/home/antoine/arrow/python/pyarrow/orc.py\", line 149, in read\r\n    return self.reader.read(include_indices=include_indices)\r\n  File \"pyarrow/_orc.pyx\", line 106, in pyarrow._orc.ORCReader.read\r\n    check_status(deref(self.reader).Read(&sp_table))\r\n  File \"pyarrow/error.pxi\", line 81, in pyarrow.lib.check_status\r\n    raise ArrowInvalid(message)\r\npyarrow.lib.ArrowInvalid: Must pass at least one record batch\r\n{code}\r\n\r\n[~jim.crist]",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 6600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++/Python] ORC reader fails on empty file",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13178613/comment/16587871",
                    "id": "16587871",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "[~jim.crist] should take a look here.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2018-08-21T19:01:32.236+0000",
                    "updated": "2018-08-21T19:01:32.236+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13178613/comment/16594747",
                    "id": "16594747",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 2449\n[https://github.com/apache/arrow/pull/2449]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2018-08-28T09:24:11.681+0000",
                    "updated": "2018-08-28T09:24:11.681+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|i3wzn3:",
        "customfield_12314139": null
    }
}