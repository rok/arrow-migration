{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13248363",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248363",
    "key": "ARROW-6097",
    "fields": {
        "parent": {
            "id": "13243176",
            "key": "ARROW-5845",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/13243176",
            "fields": {
                "summary": "[Java] Implement converter between Arrow record batches and Avro records",
                "status": {
                    "self": "https://issues.apache.org/jira/rest/api/2/status/4",
                    "description": "This issue was once resolved, but the resolution was deemed incorrect. From here issues are either marked assigned or resolved.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/reopened.png",
                    "name": "Reopened",
                    "id": "4",
                    "statusCategory": {
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                        "id": 2,
                        "key": "new",
                        "colorName": "blue-gray",
                        "name": "To Do"
                    }
                },
                "priority": {
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                    "name": "Major",
                    "id": "3"
                },
                "issuetype": {
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                    "id": "2",
                    "description": "A new feature of the product, which has yet to be developed.",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                    "name": "New Feature",
                    "subtask": false,
                    "avatarId": 21141
                }
            }
        },
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/2",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/critical.svg",
            "name": "Critical",
            "id": "2"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
            "name": "tianchen92",
            "key": "tianchen92",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
            },
            "displayName": "Ji Liu",
            "active": true,
            "timeZone": "Asia/Gaza"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
            "name": "tianchen92",
            "key": "tianchen92",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
            },
            "displayName": "Ji Liu",
            "active": true,
            "timeZone": "Asia/Gaza"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
            "name": "tianchen92",
            "key": "tianchen92",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
            },
            "displayName": "Ji Liu",
            "active": true,
            "timeZone": "Asia/Gaza"
        },
        "aggregateprogress": {
            "progress": 21000,
            "total": 21000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 21000,
            "total": 21000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6097/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 38,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248363/worklog/286758",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4984: ARROW-6097: [Java] Avro adapter implement unions type\nURL: https://github.com/apache/arrow/pull/4984\n \n \n   Related to [ARROW-6097](https://issues.apache.org/jira/browse/ARROW-6097).\r\n   Support convert unions type like [\"string\"], [\"string\", 'int\"] and nullable [\"string\", \"int\", \"null\"]\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-01T15:17:44.004+0000",
                    "updated": "2019-08-01T15:17:44.004+0000",
                    "started": "2019-08-01T15:17:44.003+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "286758",
                    "issueId": "13248363"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248363/worklog/288233",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4984: ARROW-6097: [Java] Avro adapter implement unions type\nURL: https://github.com/apache/arrow/pull/4984#discussion_r310288517\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/AvroToArrowUtils.java\n ##########\n @@ -123,25 +127,69 @@ private static Field getUnionField(Schema schema, String name) {\n     int size = schema.getTypes().size();\n     long nullCount = schema.getTypes().stream().filter(s -> s.getType() == Type.NULL).count();\n \n-    // avro schema not allow repeated type, so size == nullCount + 1 indicates nullable type.\n-    if (size == nullCount + 1) {\n+    // union only has one type, convert to primitive type\n+    if (size == 1) {\n+      Schema subSchema = schema.getTypes().get(0);\n+      return getArrowField(subSchema, name,true);\n \n Review comment:\n   ```suggestion\r\n         return getArrowField(subSchema, name, /*nullable=*/false);\r\n   ```\r\n   Shouldn't a single value be not nullable (unless the type in the union is null)?  \r\n   \r\n   I'm also not sure if we should collapse here always, it seems like a reasonable option for now, but it would prevent round-tripping (not that that is a use-case at the momement).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-02T20:33:23.712+0000",
                    "updated": "2019-08-02T20:33:23.712+0000",
                    "started": "2019-08-02T20:33:23.711+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "288233",
                    "issueId": "13248363"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248363/worklog/288247",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4984: ARROW-6097: [Java] Avro adapter implement unions type\nURL: https://github.com/apache/arrow/pull/4984#discussion_r310290101\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/consumers/AvroUnionsConsumer.java\n ##########\n @@ -0,0 +1,94 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.consumers;\n+\n+import java.io.IOException;\n+import java.util.Map;\n+\n+import org.apache.arrow.vector.complex.UnionVector;\n+import org.apache.arrow.vector.complex.impl.UnionWriter;\n+import org.apache.arrow.vector.types.Types;\n+import org.apache.avro.io.Decoder;\n+\n+/**\n+ * Consumer which consume unions type values from avro decoder.\n+ * Write the data to {@link org.apache.arrow.vector.complex.UnionVector}.\n+ */\n+public class AvroUnionsConsumer implements Consumer {\n \n Review comment:\n   ```suggestion\r\n   public class AvroUnionConsumer implements Consumer {\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-02T20:56:44.988+0000",
                    "updated": "2019-08-02T20:56:44.988+0000",
                    "started": "2019-08-02T20:56:44.988+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "288247",
                    "issueId": "13248363"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248363/worklog/288248",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4984: ARROW-6097: [Java] Avro adapter implement unions type\nURL: https://github.com/apache/arrow/pull/4984#discussion_r310289803\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/AvroToArrowUtils.java\n ##########\n @@ -178,10 +226,39 @@ private static Field getUnionField(Schema schema, String name) {\n     return new org.apache.arrow.vector.types.pojo.Schema(arrowFields, /*metadata=*/ metadata);\n   }\n \n+  private static Consumer createConsumer(ValueVector vector) {\n+    ArrowType arrowType = vector.getField().getType();\n+    if (!arrowType.isComplex()) {\n+      return createPrimitiveConsumer(vector);\n+    } else if (arrowType.getTypeID() == ArrowType.Union.TYPE_TYPE) {\n+      return createUnionConsumer(vector);\n+    } else {\n+      throw new UnsupportedOperationException();\n \n Review comment:\n   given details on what is unsupported.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-02T20:56:44.991+0000",
                    "updated": "2019-08-02T20:56:44.991+0000",
                    "started": "2019-08-02T20:56:44.990+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "288248",
                    "issueId": "13248363"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248363/worklog/288249",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4984: ARROW-6097: [Java] Avro adapter implement unions type\nURL: https://github.com/apache/arrow/pull/4984#discussion_r310290872\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/consumers/Consumer.java\n ##########\n @@ -33,8 +33,12 @@\n    */\n   void consume(Decoder decoder) throws IOException;\n \n+  void consume(Decoder decoder, int index) throws IOException;\n \n Review comment:\n   docs.  Also is there a reason that both overloads are necessary?  If they really are it would be nice to have one implementation delegate to different one.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-02T20:56:44.997+0000",
                    "updated": "2019-08-02T20:56:44.997+0000",
                    "started": "2019-08-02T20:56:44.996+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "288249",
                    "issueId": "13248363"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248363/worklog/288250",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4984: ARROW-6097: [Java] Avro adapter implement unions type\nURL: https://github.com/apache/arrow/pull/4984#discussion_r310292653\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/AvroToArrowUtils.java\n ##########\n @@ -62,6 +66,7 @@\n \n   private static final int DEFAULT_BUFFER_SIZE = 256;\n   public static final String NULL_INDEX = \"nullIndex\";\n+  public static final String Field_INDEX = \"index\";\n \n Review comment:\n   ```suggestion\r\n     public static final String FIELD_INDEX = \"index\";\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-02T20:56:45.019+0000",
                    "updated": "2019-08-02T20:56:45.019+0000",
                    "started": "2019-08-02T20:56:45.018+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "288250",
                    "issueId": "13248363"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248363/worklog/288251",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4984: ARROW-6097: [Java] Avro adapter implement unions type\nURL: https://github.com/apache/arrow/pull/4984#discussion_r310294428\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/AvroToArrowUtils.java\n ##########\n @@ -123,25 +127,69 @@ private static Field getUnionField(Schema schema, String name) {\n     int size = schema.getTypes().size();\n     long nullCount = schema.getTypes().stream().filter(s -> s.getType() == Type.NULL).count();\n \n-    // avro schema not allow repeated type, so size == nullCount + 1 indicates nullable type.\n-    if (size == nullCount + 1) {\n+    // union only has one type, convert to primitive type\n+    if (size == 1) {\n+      Schema subSchema = schema.getTypes().get(0);\n+      return getArrowField(subSchema, name,true);\n \n+      // size == 2 and has null type, convert to nullable primitive type\n+    } else if (size == 2 && nullCount == 1) {\n       Schema nullSchema = schema.getTypes().stream().filter(s -> s.getType() == Type.NULL).findFirst().get();\n       String nullIndex = String.valueOf(schema.getTypes().indexOf(nullSchema));\n+      Schema subSchema = schema.getTypes().stream().filter(s -> s.getType() != Type.NULL).findFirst().get();\n+      Preconditions.checkNotNull(subSchema);\n+      subSchema.addProp(NULL_INDEX, nullIndex);\n \n Review comment:\n   it seems odd to mutate schema here, can you provide more details on why this is necessary?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-02T20:56:45.045+0000",
                    "updated": "2019-08-02T20:56:45.045+0000",
                    "started": "2019-08-02T20:56:45.044+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "288251",
                    "issueId": "13248363"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248363/worklog/288252",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4984: ARROW-6097: [Java] Avro adapter implement unions type\nURL: https://github.com/apache/arrow/pull/4984#discussion_r310293492\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/consumers/AvroUnionsConsumer.java\n ##########\n @@ -0,0 +1,94 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.consumers;\n+\n+import java.io.IOException;\n+import java.util.Map;\n+\n+import org.apache.arrow.vector.complex.UnionVector;\n+import org.apache.arrow.vector.complex.impl.UnionWriter;\n+import org.apache.arrow.vector.types.Types;\n+import org.apache.avro.io.Decoder;\n+\n+/**\n+ * Consumer which consume unions type values from avro decoder.\n+ * Write the data to {@link org.apache.arrow.vector.complex.UnionVector}.\n+ */\n+public class AvroUnionsConsumer implements Consumer {\n+\n+  private Map<Integer, Consumer> indexDelegates;\n+  private Map<Integer, Types.MinorType> types;\n+\n+  private UnionWriter writer;\n+  private UnionVector vector;\n+\n+  /**\n+   * Instantiate a AvroUnionConsumer.\n+   */\n+  public AvroUnionsConsumer(UnionVector vector, Map<Integer, Consumer> indexDelegates,\n+      Map<Integer, Types.MinorType> types) {\n \n Review comment:\n   It seems like it might be more efficient to make these arrays instead?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-02T20:56:45.051+0000",
                    "updated": "2019-08-02T20:56:45.051+0000",
                    "started": "2019-08-02T20:56:45.050+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "288252",
                    "issueId": "13248363"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248363/worklog/288253",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4984: ARROW-6097: [Java] Avro adapter implement unions type\nURL: https://github.com/apache/arrow/pull/4984#discussion_r310294525\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/AvroToArrowUtils.java\n ##########\n @@ -123,25 +127,69 @@ private static Field getUnionField(Schema schema, String name) {\n     int size = schema.getTypes().size();\n     long nullCount = schema.getTypes().stream().filter(s -> s.getType() == Type.NULL).count();\n \n-    // avro schema not allow repeated type, so size == nullCount + 1 indicates nullable type.\n-    if (size == nullCount + 1) {\n+    // union only has one type, convert to primitive type\n+    if (size == 1) {\n+      Schema subSchema = schema.getTypes().get(0);\n+      return getArrowField(subSchema, name,true);\n \n+      // size == 2 and has null type, convert to nullable primitive type\n+    } else if (size == 2 && nullCount == 1) {\n       Schema nullSchema = schema.getTypes().stream().filter(s -> s.getType() == Type.NULL).findFirst().get();\n       String nullIndex = String.valueOf(schema.getTypes().indexOf(nullSchema));\n+      Schema subSchema = schema.getTypes().stream().filter(s -> s.getType() != Type.NULL).findFirst().get();\n+      Preconditions.checkNotNull(subSchema);\n \n Review comment:\n   provide a message\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-02T20:56:45.053+0000",
                    "updated": "2019-08-02T20:56:45.053+0000",
                    "started": "2019-08-02T20:56:45.053+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "288253",
                    "issueId": "13248363"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248363/worklog/288341",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4984: ARROW-6097: [Java] Avro adapter implement unions type\nURL: https://github.com/apache/arrow/pull/4984#discussion_r310331359\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/AvroToArrowUtils.java\n ##########\n @@ -123,25 +127,69 @@ private static Field getUnionField(Schema schema, String name) {\n     int size = schema.getTypes().size();\n     long nullCount = schema.getTypes().stream().filter(s -> s.getType() == Type.NULL).count();\n \n-    // avro schema not allow repeated type, so size == nullCount + 1 indicates nullable type.\n-    if (size == nullCount + 1) {\n+    // union only has one type, convert to primitive type\n+    if (size == 1) {\n+      Schema subSchema = schema.getTypes().get(0);\n+      return getArrowField(subSchema, name,true);\n \n Review comment:\n   Thanks, fixed. Not sure if we should implement a NullVector to hold null values(ZeroVector length always 0).\r\n   \r\n   >I'm also not sure if we should collapse here always, it seems like a reasonable option for now, but it would prevent round-tripping (not that that is a use-case at the momement).\r\n   \r\n   Not quite understand here :), but seems not a blocker now.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-03T00:42:48.012+0000",
                    "updated": "2019-08-03T00:42:48.012+0000",
                    "started": "2019-08-03T00:42:48.012+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "288341",
                    "issueId": "13248363"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248363/worklog/288342",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4984: ARROW-6097: [Java] Avro adapter implement unions type\nURL: https://github.com/apache/arrow/pull/4984#discussion_r310331375\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/AvroToArrowUtils.java\n ##########\n @@ -178,10 +226,39 @@ private static Field getUnionField(Schema schema, String name) {\n     return new org.apache.arrow.vector.types.pojo.Schema(arrowFields, /*metadata=*/ metadata);\n   }\n \n+  private static Consumer createConsumer(ValueVector vector) {\n+    ArrowType arrowType = vector.getField().getType();\n+    if (!arrowType.isComplex()) {\n+      return createPrimitiveConsumer(vector);\n+    } else if (arrowType.getTypeID() == ArrowType.Union.TYPE_TYPE) {\n+      return createUnionConsumer(vector);\n+    } else {\n+      throw new UnsupportedOperationException();\n \n Review comment:\n   fixed.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-03T00:42:55.618+0000",
                    "updated": "2019-08-03T00:42:55.618+0000",
                    "started": "2019-08-03T00:42:55.617+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "288342",
                    "issueId": "13248363"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248363/worklog/288343",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4984: ARROW-6097: [Java] Avro adapter implement unions type\nURL: https://github.com/apache/arrow/pull/4984#discussion_r310331420\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/consumers/AvroUnionsConsumer.java\n ##########\n @@ -0,0 +1,94 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.consumers;\n+\n+import java.io.IOException;\n+import java.util.Map;\n+\n+import org.apache.arrow.vector.complex.UnionVector;\n+import org.apache.arrow.vector.complex.impl.UnionWriter;\n+import org.apache.arrow.vector.types.Types;\n+import org.apache.avro.io.Decoder;\n+\n+/**\n+ * Consumer which consume unions type values from avro decoder.\n+ * Write the data to {@link org.apache.arrow.vector.complex.UnionVector}.\n+ */\n+public class AvroUnionsConsumer implements Consumer {\n \n Review comment:\n   Here respect the avro type name which calls \"Unions\".\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-03T00:43:25.487+0000",
                    "updated": "2019-08-03T00:43:25.487+0000",
                    "started": "2019-08-03T00:43:25.487+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "288343",
                    "issueId": "13248363"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248363/worklog/288344",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4984: ARROW-6097: [Java] Avro adapter implement unions type\nURL: https://github.com/apache/arrow/pull/4984#discussion_r310331681\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/consumers/Consumer.java\n ##########\n @@ -33,8 +33,12 @@\n    */\n   void consume(Decoder decoder) throws IOException;\n \n+  void consume(Decoder decoder, int index) throws IOException;\n \n Review comment:\n   This is mainly for union type, when write data to its subVector, the index for subVector is not   continuous, so when union consumer consume a value via delegate, the index should be specified.\r\n   You are right, two overloads seems ugly and not necessary, I add setPosition(int index) API to set index instead.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-03T00:48:03.948+0000",
                    "updated": "2019-08-03T00:48:03.948+0000",
                    "started": "2019-08-03T00:48:03.947+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "288344",
                    "issueId": "13248363"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248363/worklog/288345",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4984: ARROW-6097: [Java] Avro adapter implement unions type\nURL: https://github.com/apache/arrow/pull/4984#discussion_r310331693\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/AvroToArrowUtils.java\n ##########\n @@ -62,6 +66,7 @@\n \n   private static final int DEFAULT_BUFFER_SIZE = 256;\n   public static final String NULL_INDEX = \"nullIndex\";\n+  public static final String Field_INDEX = \"index\";\n \n Review comment:\n   fixed.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-03T00:48:19.900+0000",
                    "updated": "2019-08-03T00:48:19.900+0000",
                    "started": "2019-08-03T00:48:19.900+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "288345",
                    "issueId": "13248363"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248363/worklog/288346",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4984: ARROW-6097: [Java] Avro adapter implement unions type\nURL: https://github.com/apache/arrow/pull/4984#discussion_r310331705\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/consumers/AvroUnionsConsumer.java\n ##########\n @@ -0,0 +1,94 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.consumers;\n+\n+import java.io.IOException;\n+import java.util.Map;\n+\n+import org.apache.arrow.vector.complex.UnionVector;\n+import org.apache.arrow.vector.complex.impl.UnionWriter;\n+import org.apache.arrow.vector.types.Types;\n+import org.apache.avro.io.Decoder;\n+\n+/**\n+ * Consumer which consume unions type values from avro decoder.\n+ * Write the data to {@link org.apache.arrow.vector.complex.UnionVector}.\n+ */\n+public class AvroUnionsConsumer implements Consumer {\n+\n+  private Map<Integer, Consumer> indexDelegates;\n+  private Map<Integer, Types.MinorType> types;\n+\n+  private UnionWriter writer;\n+  private UnionVector vector;\n+\n+  /**\n+   * Instantiate a AvroUnionConsumer.\n+   */\n+  public AvroUnionsConsumer(UnionVector vector, Map<Integer, Consumer> indexDelegates,\n+      Map<Integer, Types.MinorType> types) {\n \n Review comment:\n   Thanks, fixed.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-03T00:48:33.464+0000",
                    "updated": "2019-08-03T00:48:33.464+0000",
                    "started": "2019-08-03T00:48:33.463+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "288346",
                    "issueId": "13248363"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248363/worklog/288347",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4984: ARROW-6097: [Java] Avro adapter implement unions type\nURL: https://github.com/apache/arrow/pull/4984#discussion_r310331997\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/AvroToArrowUtils.java\n ##########\n @@ -123,25 +127,69 @@ private static Field getUnionField(Schema schema, String name) {\n     int size = schema.getTypes().size();\n     long nullCount = schema.getTypes().stream().filter(s -> s.getType() == Type.NULL).count();\n \n-    // avro schema not allow repeated type, so size == nullCount + 1 indicates nullable type.\n-    if (size == nullCount + 1) {\n+    // union only has one type, convert to primitive type\n+    if (size == 1) {\n+      Schema subSchema = schema.getTypes().get(0);\n+      return getArrowField(subSchema, name,true);\n \n+      // size == 2 and has null type, convert to nullable primitive type\n+    } else if (size == 2 && nullCount == 1) {\n       Schema nullSchema = schema.getTypes().stream().filter(s -> s.getType() == Type.NULL).findFirst().get();\n       String nullIndex = String.valueOf(schema.getTypes().indexOf(nullSchema));\n+      Schema subSchema = schema.getTypes().stream().filter(s -> s.getType() != Type.NULL).findFirst().get();\n+      Preconditions.checkNotNull(subSchema);\n+      subSchema.addProp(NULL_INDEX, nullIndex);\n \n Review comment:\n   For nullable primitive consumer we need know the null type index in schema, so we could consume a real value or null value from decoder.\r\n   Similar for union type, we need know field index for each delegate.\r\n   These two data (NULL_INDEX and FIELD_INDEX) is set to avro schema metadata which will transfered in Arrow FieldType, and then we could get it from consumer.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-03T00:53:20.906+0000",
                    "updated": "2019-08-03T00:53:20.906+0000",
                    "started": "2019-08-03T00:53:20.905+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "288347",
                    "issueId": "13248363"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248363/worklog/288348",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4984: ARROW-6097: [Java] Avro adapter implement unions type\nURL: https://github.com/apache/arrow/pull/4984#discussion_r310332017\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/AvroToArrowUtils.java\n ##########\n @@ -123,25 +127,69 @@ private static Field getUnionField(Schema schema, String name) {\n     int size = schema.getTypes().size();\n     long nullCount = schema.getTypes().stream().filter(s -> s.getType() == Type.NULL).count();\n \n-    // avro schema not allow repeated type, so size == nullCount + 1 indicates nullable type.\n-    if (size == nullCount + 1) {\n+    // union only has one type, convert to primitive type\n+    if (size == 1) {\n+      Schema subSchema = schema.getTypes().get(0);\n+      return getArrowField(subSchema, name,true);\n \n+      // size == 2 and has null type, convert to nullable primitive type\n+    } else if (size == 2 && nullCount == 1) {\n       Schema nullSchema = schema.getTypes().stream().filter(s -> s.getType() == Type.NULL).findFirst().get();\n       String nullIndex = String.valueOf(schema.getTypes().indexOf(nullSchema));\n+      Schema subSchema = schema.getTypes().stream().filter(s -> s.getType() != Type.NULL).findFirst().get();\n+      Preconditions.checkNotNull(subSchema);\n \n Review comment:\n   fixed.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-03T00:53:39.357+0000",
                    "updated": "2019-08-03T00:53:39.357+0000",
                    "started": "2019-08-03T00:53:39.356+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "288348",
                    "issueId": "13248363"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248363/worklog/291701",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on issue #4984: ARROW-6097: [Java] Avro adapter implement unions type\nURL: https://github.com/apache/arrow/pull/4984#issuecomment-519750455\n \n \n   @emkornfield Hi Micah, do you have other comments on this PR?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T02:09:11.733+0000",
                    "updated": "2019-08-09T02:09:11.733+0000",
                    "started": "2019-08-09T02:09:11.732+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291701",
                    "issueId": "13248363"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248363/worklog/291808",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4984: ARROW-6097: [Java] Avro adapter implement unions type\nURL: https://github.com/apache/arrow/pull/4984#discussion_r312327836\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/AvroToArrowUtils.java\n ##########\n @@ -123,25 +127,69 @@ private static Field getUnionField(Schema schema, String name) {\n     int size = schema.getTypes().size();\n     long nullCount = schema.getTypes().stream().filter(s -> s.getType() == Type.NULL).count();\n \n-    // avro schema not allow repeated type, so size == nullCount + 1 indicates nullable type.\n-    if (size == nullCount + 1) {\n+    // union only has one type, convert to primitive type\n+    if (size == 1) {\n+      Schema subSchema = schema.getTypes().get(0);\n+      return getArrowField(subSchema, name,true);\n \n+      // size == 2 and has null type, convert to nullable primitive type\n+    } else if (size == 2 && nullCount == 1) {\n       Schema nullSchema = schema.getTypes().stream().filter(s -> s.getType() == Type.NULL).findFirst().get();\n       String nullIndex = String.valueOf(schema.getTypes().indexOf(nullSchema));\n+      Schema subSchema = schema.getTypes().stream().filter(s -> s.getType() != Type.NULL).findFirst().get();\n+      Preconditions.checkNotNull(subSchema);\n+      subSchema.addProp(NULL_INDEX, nullIndex);\n \n Review comment:\n   can't these be populated directly in the consumers though?  It seems like this information isn't useful beyond the translation process?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T04:48:29.223+0000",
                    "updated": "2019-08-09T04:48:29.223+0000",
                    "started": "2019-08-09T04:48:29.223+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291808",
                    "issueId": "13248363"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248363/worklog/291809",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4984: ARROW-6097: [Java] Avro adapter implement unions type\nURL: https://github.com/apache/arrow/pull/4984#discussion_r312328361\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/consumers/AvroUnionsConsumer.java\n ##########\n @@ -0,0 +1,78 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.consumers;\n+\n+import java.io.IOException;\n+\n+import org.apache.arrow.vector.complex.UnionVector;\n+import org.apache.arrow.vector.complex.impl.UnionWriter;\n+import org.apache.arrow.vector.types.Types;\n+import org.apache.avro.io.Decoder;\n+\n+/**\n+ * Consumer which consume unions type values from avro decoder.\n+ * Write the data to {@link org.apache.arrow.vector.complex.UnionVector}.\n+ */\n+public class AvroUnionsConsumer implements Consumer {\n+\n+  private Consumer[] indexDelegates;\n+  private Types.MinorType[] types;\n+\n+  private UnionWriter writer;\n+  private UnionVector vector;\n+\n+  /**\n+   * Instantiate a AvroUnionConsumer.\n+   */\n+  public AvroUnionsConsumer(UnionVector vector, Consumer[] indexDelegates, Types.MinorType[] types) {\n+\n+    this.writer = new UnionWriter(vector);\n+    this.vector = vector;\n+    this.indexDelegates = indexDelegates;\n+    this.types = types;\n+  }\n+\n+  @Override\n+  public void consume(Decoder decoder) throws IOException {\n+    int fieldIndex = decoder.readInt();\n+    int position = writer.getPosition();\n+\n+    Consumer delegate = indexDelegates[fieldIndex];\n+    // null value\n+    if (delegate == null) {\n+      // do nothing\n+    } else {\n+      vector.setType(position, types[fieldIndex]);\n+      delegate.setPosition(position);\n \n Review comment:\n   i think its worth document the intended logic here.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T04:52:27.335+0000",
                    "updated": "2019-08-09T04:52:27.335+0000",
                    "started": "2019-08-09T04:52:27.335+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291809",
                    "issueId": "13248363"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
            "id": "7",
            "description": "The sub-task of the issue",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
            "name": "Sub-task",
            "subtask": true,
            "avatarId": 21146
        },
        "timespent": 21000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@62fb80c3[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@65ffbfb6[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6d88f636[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7512f63e[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@307292a7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@3f7e3e94[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@156d560b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@77ace19e[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@53efb266[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1d2bac11[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@62097cb1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7239d17f[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 21000,
        "customfield_12312520": null,
        "customfield_12312521": "Sun Aug 11 03:57:30 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-08-11T03:57:30.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6097/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-08-01T15:14:35.000+0000",
        "updated": "2019-08-11T03:57:30.000+0000",
        "timeoriginalestimate": null,
        "description": "Support convert unions type like [\"string\"], [\"string\", 'int\"] and nullable [\"string\", \"int\", \"null\"]",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "5h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 21000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] Avro adapter implement unions type",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248363/comment/16904549",
                    "id": "16904549",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 4984\n[https://github.com/apache/arrow/pull/4984]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-08-11T03:57:30.942+0000",
                    "updated": "2019-08-11T03:57:30.942+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z058u8:",
        "customfield_12314139": null
    }
}