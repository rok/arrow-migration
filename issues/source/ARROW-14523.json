{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13409210",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409210",
    "key": "ARROW-14523",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350712",
                "id": "12350712",
                "description": "",
                "name": "6.0.1",
                "archived": false,
                "released": true,
                "releaseDate": "2021-11-18"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350591",
                "id": "12350591",
                "description": "",
                "name": "7.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-02-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/2",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/critical.svg",
            "name": "Critical",
            "id": "2"
        },
        "labels": [
            "AWS",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349983",
                "id": "12349983",
                "description": "",
                "name": "5.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-07-28"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=seittema",
            "name": "seittema",
            "key": "seittema",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
            },
            "displayName": "Mark Seitter",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=seittema",
            "name": "seittema",
            "key": "seittema",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
            },
            "displayName": "Mark Seitter",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 21600,
            "total": 21600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 21600,
            "total": 21600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14523/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 36,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409210/worklog/673706",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11594:\nURL: https://github.com/apache/arrow/pull/11594#issuecomment-957991078\n\n\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-02T18:26:59.743+0000",
                    "updated": "2021-11-02T18:26:59.743+0000",
                    "started": "2021-11-02T18:26:59.742+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "673706",
                    "issueId": "13409210"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409210/worklog/673708",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou opened a new pull request #11594:\nURL: https://github.com/apache/arrow/pull/11594\n\n\n   Work around a critical bug in the AWS SDK for C++ that fails to detect errors returned by CompleteMultipartUpload in the body of a 200 OK response:\r\n   https://github.com/aws/aws-sdk-cpp/issues/658\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-02T18:27:07.179+0000",
                    "updated": "2021-11-02T18:27:07.179+0000",
                    "started": "2021-11-02T18:27:07.178+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "673708",
                    "issueId": "13409210"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409210/worklog/673942",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #11594:\nURL: https://github.com/apache/arrow/pull/11594#discussion_r741433888\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/s3fs.cc\n##########\n@@ -563,6 +566,97 @@ class S3Client : public Aws::S3::S3Client {\n     req.SetBucket(ToAwsString(bucket));\n     return GetBucketRegion(req);\n   }\n+\n+  S3Model::CompleteMultipartUploadOutcome CompleteMultipartUploadWithErrorFixup(\n+      S3Model::CompleteMultipartUploadRequest&& request) const {\n+    // CompletedMultipartUpload can return a 200 OK response with an error\n+    // encoded in the response body, in which case we should either retry\n+    // or propagate the error to the user (see\n+    // https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html).\n+    //\n+    // Unfortunately the AWS SDK doesn't detect such situations but lets them\n+    // return successfully (see https://github.com/aws/aws-sdk-cpp/issues/658).\n+    //\n+    // We work around the issue by registering a DataReceivedEventHandler\n+    // which parses the XML response for embedded errors.\n+\n+    util::optional<AWSError<Aws::Client::CoreErrors>> aws_error;\n+\n+    auto handler = [&](const Aws::Http::HttpRequest* http_req,\n+                       Aws::Http::HttpResponse* http_resp,\n+                       long long) {  // NOLINT runtime/int\n+      auto& stream = http_resp->GetResponseBody();\n+      const auto pos = stream.tellg();\n+      const auto doc = Aws::Utils::Xml::XmlDocument::CreateFromXmlStream(stream);\n+      // Rewind stream for later\n+      stream.clear();\n+      stream.seekg(pos);\n+\n+      if (doc.WasParseSuccessful()) {\n+        auto root = doc.GetRootElement();\n+        if (!root.IsNull()) {\n+          ARROW_LOG(INFO) << \"... CompleteMultipartUpload XML response root node: \"\n+                          << root.GetName();\n+          if (root.GetName() != \"CompleteMultipartUploadResult\") {\n+            // It's not the expected XML response root node, so it should be an error.\n+            ARROW_LOG(INFO) << \"CompletedMultipartUpload got error: \"\n+                            << doc.ConvertToString();\n+            http_resp->SetResponseCode(\n+                Aws::Http::HttpResponseCode::INTERNAL_SERVER_ERROR);\n+            aws_error = GetErrorMarshaller()->Marshall(*http_resp);\n+            // Rewind stream for later\n+            stream.clear();\n+            stream.seekg(pos);\n\nReview comment:\n       Nit: I think this is redundant since you cleared above.\n\n##########\nFile path: cpp/src/arrow/filesystem/s3fs.cc\n##########\n@@ -563,6 +566,97 @@ class S3Client : public Aws::S3::S3Client {\n     req.SetBucket(ToAwsString(bucket));\n     return GetBucketRegion(req);\n   }\n+\n+  S3Model::CompleteMultipartUploadOutcome CompleteMultipartUploadWithErrorFixup(\n+      S3Model::CompleteMultipartUploadRequest&& request) const {\n+    // CompletedMultipartUpload can return a 200 OK response with an error\n+    // encoded in the response body, in which case we should either retry\n+    // or propagate the error to the user (see\n+    // https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html).\n+    //\n+    // Unfortunately the AWS SDK doesn't detect such situations but lets them\n+    // return successfully (see https://github.com/aws/aws-sdk-cpp/issues/658).\n+    //\n+    // We work around the issue by registering a DataReceivedEventHandler\n+    // which parses the XML response for embedded errors.\n+\n+    util::optional<AWSError<Aws::Client::CoreErrors>> aws_error;\n+\n+    auto handler = [&](const Aws::Http::HttpRequest* http_req,\n+                       Aws::Http::HttpResponse* http_resp,\n+                       long long) {  // NOLINT runtime/int\n+      auto& stream = http_resp->GetResponseBody();\n+      const auto pos = stream.tellg();\n+      const auto doc = Aws::Utils::Xml::XmlDocument::CreateFromXmlStream(stream);\n+      // Rewind stream for later\n+      stream.clear();\n+      stream.seekg(pos);\n+\n+      if (doc.WasParseSuccessful()) {\n+        auto root = doc.GetRootElement();\n+        if (!root.IsNull()) {\n+          ARROW_LOG(INFO) << \"... CompleteMultipartUpload XML response root node: \"\n+                          << root.GetName();\n+          if (root.GetName() != \"CompleteMultipartUploadResult\") {\n+            // It's not the expected XML response root node, so it should be an error.\n+            ARROW_LOG(INFO) << \"CompletedMultipartUpload got error: \"\n+                            << doc.ConvertToString();\n+            http_resp->SetResponseCode(\n+                Aws::Http::HttpResponseCode::INTERNAL_SERVER_ERROR);\n+            aws_error = GetErrorMarshaller()->Marshall(*http_resp);\n+            // Rewind stream for later\n+            stream.clear();\n+            stream.seekg(pos);\n+          }\n+        }\n+      }\n+    };\n+\n+    request.SetDataReceivedEventHandler(std::move(handler));\n+\n+    for (int64_t retries = 0;; retries++) {\n+      aws_error.reset();\n+      auto outcome = Aws::S3::S3Client::S3Client::CompleteMultipartUpload(request);\n+      if (!outcome.IsSuccess()) {\n+        // Error returned in HTTP headers (or client failure)\n+        return outcome;\n+      }\n+      if (!aws_error.has_value()) {\n+        // Genuinely successful outcome\n+        return outcome;\n+      }\n+\n+      // An error was returned in the XML body despite the 200 OK status code.\n+      // We don't have access to the AWS retry strategy (m_retryStrategy\n+      // is a private member of AwsClient), so don't use that.  Instead,\n+      // call our own if available; otherwise fall back on AWSError::ShouldRetry(),\n+      // but put a hardcoded cap on the number of retries.\n+      const auto detail = WrappedRetryStrategy::ErrorToDetail(*aws_error);\n+      const bool should_retry = s3_retry_strategy_\n+                                    ? s3_retry_strategy_->ShouldRetry(detail, retries)\n+                                    : (detail.should_retry && retries < 20);\n\nReview comment:\n       Maybe instead of `retries < 20` we could fallback to a default-constructed `Aws::Client::DefaultRetryStrategy` when constructing the request.\n\n##########\nFile path: cpp/src/arrow/filesystem/s3fs.cc\n##########\n@@ -505,7 +509,6 @@ class WrappedRetryStrategy : public Aws::Client::RetryStrategy {\n             detail, static_cast<int64_t>(attempted_retries)));\n   }\n \n- private:\n\nReview comment:\n       Nit: I think you can leave `s3_retry_strategy_` as private.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-02T21:23:00.350+0000",
                    "updated": "2021-11-02T21:23:00.350+0000",
                    "started": "2021-11-02T21:23:00.350+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "673942",
                    "issueId": "13409210"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409210/worklog/673957",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou opened a new pull request #11594:\nURL: https://github.com/apache/arrow/pull/11594\n\n\n   Work around a critical bug in the AWS SDK for C++ that fails to detect errors returned by CompleteMultipartUpload in the body of a 200 OK response:\r\n   https://github.com/aws/aws-sdk-cpp/issues/658\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-02T21:24:28.756+0000",
                    "updated": "2021-11-02T21:24:28.756+0000",
                    "started": "2021-11-02T21:24:28.756+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "673957",
                    "issueId": "13409210"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409210/worklog/674134",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11594:\nURL: https://github.com/apache/arrow/pull/11594#issuecomment-957991078\n\n\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-02T21:44:30.919+0000",
                    "updated": "2021-11-02T21:44:30.919+0000",
                    "started": "2021-11-02T21:44:30.919+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "674134",
                    "issueId": "13409210"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409210/worklog/674480",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #11594:\nURL: https://github.com/apache/arrow/pull/11594#issuecomment-958785770\n\n\n   @github-actions crossbow submit *wheel*\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-03T09:40:38.689+0000",
                    "updated": "2021-11-03T09:40:38.689+0000",
                    "started": "2021-11-03T09:40:38.689+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "674480",
                    "issueId": "13409210"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409210/worklog/674481",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11594:\nURL: https://github.com/apache/arrow/pull/11594#discussion_r741752805\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/s3fs.cc\n##########\n@@ -563,6 +566,97 @@ class S3Client : public Aws::S3::S3Client {\n     req.SetBucket(ToAwsString(bucket));\n     return GetBucketRegion(req);\n   }\n+\n+  S3Model::CompleteMultipartUploadOutcome CompleteMultipartUploadWithErrorFixup(\n+      S3Model::CompleteMultipartUploadRequest&& request) const {\n+    // CompletedMultipartUpload can return a 200 OK response with an error\n+    // encoded in the response body, in which case we should either retry\n+    // or propagate the error to the user (see\n+    // https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html).\n+    //\n+    // Unfortunately the AWS SDK doesn't detect such situations but lets them\n+    // return successfully (see https://github.com/aws/aws-sdk-cpp/issues/658).\n+    //\n+    // We work around the issue by registering a DataReceivedEventHandler\n+    // which parses the XML response for embedded errors.\n+\n+    util::optional<AWSError<Aws::Client::CoreErrors>> aws_error;\n+\n+    auto handler = [&](const Aws::Http::HttpRequest* http_req,\n+                       Aws::Http::HttpResponse* http_resp,\n+                       long long) {  // NOLINT runtime/int\n+      auto& stream = http_resp->GetResponseBody();\n+      const auto pos = stream.tellg();\n+      const auto doc = Aws::Utils::Xml::XmlDocument::CreateFromXmlStream(stream);\n+      // Rewind stream for later\n+      stream.clear();\n+      stream.seekg(pos);\n+\n+      if (doc.WasParseSuccessful()) {\n+        auto root = doc.GetRootElement();\n+        if (!root.IsNull()) {\n+          ARROW_LOG(INFO) << \"... CompleteMultipartUpload XML response root node: \"\n+                          << root.GetName();\n+          if (root.GetName() != \"CompleteMultipartUploadResult\") {\n+            // It's not the expected XML response root node, so it should be an error.\n+            ARROW_LOG(INFO) << \"CompletedMultipartUpload got error: \"\n+                            << doc.ConvertToString();\n+            http_resp->SetResponseCode(\n+                Aws::Http::HttpResponseCode::INTERNAL_SERVER_ERROR);\n+            aws_error = GetErrorMarshaller()->Marshall(*http_resp);\n+            // Rewind stream for later\n+            stream.clear();\n+            stream.seekg(pos);\n\nReview comment:\n       `GetErrorMarshaller()->Marshall` will involve XML parsing over the response stream again.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-03T09:41:36.563+0000",
                    "updated": "2021-11-03T09:41:36.563+0000",
                    "started": "2021-11-03T09:41:36.563+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "674481",
                    "issueId": "13409210"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409210/worklog/674482",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11594:\nURL: https://github.com/apache/arrow/pull/11594#issuecomment-958786516\n\n\n   Revision: 9ca9fd458febf6a4ba86df16ce6ca50da0b94ce7\n   \n   Submitted crossbow builds: [ursacomputing/crossbow @ actions-1076](https://github.com/ursacomputing/crossbow/branches/all?query=actions-1076)\n   \n   |Task|Status|\n   |----|------|\n   |verify-rc-wheels-linux-amd64|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1076-github-verify-rc-wheels-linux-amd64)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1076-github-verify-rc-wheels-linux-amd64)|\n   |verify-rc-wheels-macos-10.15-amd64|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1076-github-verify-rc-wheels-macos-10.15-amd64)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1076-github-verify-rc-wheels-macos-10.15-amd64)|\n   |verify-rc-wheels-macos-11-amd64|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1076-github-verify-rc-wheels-macos-11-amd64)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1076-github-verify-rc-wheels-macos-11-amd64)|\n   |verify-rc-wheels-macos-11-arm64|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1076-github-verify-rc-wheels-macos-11-arm64)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1076-github-verify-rc-wheels-macos-11-arm64)|\n   |verify-rc-wheels-windows|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1076-github-verify-rc-wheels-windows)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1076-github-verify-rc-wheels-windows)|\n   |wheel-macos-big-sur-cp310-arm64|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1076-github-wheel-macos-big-sur-cp310-arm64)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1076-github-wheel-macos-big-sur-cp310-arm64)|\n   |wheel-macos-big-sur-cp310-universal2|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1076-github-wheel-macos-big-sur-cp310-universal2)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1076-github-wheel-macos-big-sur-cp310-universal2)|\n   |wheel-macos-big-sur-cp38-arm64|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1076-github-wheel-macos-big-sur-cp38-arm64)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1076-github-wheel-macos-big-sur-cp38-arm64)|\n   |wheel-macos-big-sur-cp39-arm64|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1076-github-wheel-macos-big-sur-cp39-arm64)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1076-github-wheel-macos-big-sur-cp39-arm64)|\n   |wheel-macos-big-sur-cp39-universal2|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1076-github-wheel-macos-big-sur-cp39-universal2)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1076-github-wheel-macos-big-sur-cp39-universal2)|\n   |wheel-macos-high-sierra-cp310-amd64|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1076-github-wheel-macos-high-sierra-cp310-amd64)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1076-github-wheel-macos-high-sierra-cp310-amd64)|\n   |wheel-macos-high-sierra-cp36-amd64|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1076-github-wheel-macos-high-sierra-cp36-amd64)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1076-github-wheel-macos-high-sierra-cp36-amd64)|\n   |wheel-macos-high-sierra-cp37-amd64|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1076-github-wheel-macos-high-sierra-cp37-amd64)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1076-github-wheel-macos-high-sierra-cp37-amd64)|\n   |wheel-macos-high-sierra-cp38-amd64|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1076-github-wheel-macos-high-sierra-cp38-amd64)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1076-github-wheel-macos-high-sierra-cp38-amd64)|\n   |wheel-macos-high-sierra-cp39-amd64|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1076-github-wheel-macos-high-sierra-cp39-amd64)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1076-github-wheel-macos-high-sierra-cp39-amd64)|\n   |wheel-macos-mavericks-cp310-amd64|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1076-github-wheel-macos-mavericks-cp310-amd64)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1076-github-wheel-macos-mavericks-cp310-amd64)|\n   |wheel-macos-mavericks-cp36-amd64|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1076-github-wheel-macos-mavericks-cp36-amd64)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1076-github-wheel-macos-mavericks-cp36-amd64)|\n   |wheel-macos-mavericks-cp37-amd64|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1076-github-wheel-macos-mavericks-cp37-amd64)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1076-github-wheel-macos-mavericks-cp37-amd64)|\n   |wheel-macos-mavericks-cp38-amd64|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1076-github-wheel-macos-mavericks-cp38-amd64)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1076-github-wheel-macos-mavericks-cp38-amd64)|\n   |wheel-macos-mavericks-cp39-amd64|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1076-github-wheel-macos-mavericks-cp39-amd64)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1076-github-wheel-macos-mavericks-cp39-amd64)|\n   |wheel-manylinux2010-cp310-amd64|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1076-github-wheel-manylinux2010-cp310-amd64)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1076-github-wheel-manylinux2010-cp310-amd64)|\n   |wheel-manylinux2010-cp36-amd64|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1076-github-wheel-manylinux2010-cp36-amd64)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1076-github-wheel-manylinux2010-cp36-amd64)|\n   |wheel-manylinux2010-cp37-amd64|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1076-github-wheel-manylinux2010-cp37-amd64)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1076-github-wheel-manylinux2010-cp37-amd64)|\n   |wheel-manylinux2010-cp38-amd64|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1076-github-wheel-manylinux2010-cp38-amd64)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1076-github-wheel-manylinux2010-cp38-amd64)|\n   |wheel-manylinux2010-cp39-amd64|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1076-github-wheel-manylinux2010-cp39-amd64)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1076-github-wheel-manylinux2010-cp39-amd64)|\n   |wheel-manylinux2014-cp310-amd64|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1076-github-wheel-manylinux2014-cp310-amd64)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1076-github-wheel-manylinux2014-cp310-amd64)|\n   |wheel-manylinux2014-cp310-arm64|[![TravisCI](https://img.shields.io/travis/ursacomputing/crossbow/actions-1076-travis-wheel-manylinux2014-cp310-arm64.svg)](https://travis-ci.com/ursacomputing/crossbow/branches)|\n   |wheel-manylinux2014-cp36-amd64|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1076-github-wheel-manylinux2014-cp36-amd64)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1076-github-wheel-manylinux2014-cp36-amd64)|\n   |wheel-manylinux2014-cp36-arm64|[![TravisCI](https://img.shields.io/travis/ursacomputing/crossbow/actions-1076-travis-wheel-manylinux2014-cp36-arm64.svg)](https://travis-ci.com/ursacomputing/crossbow/branches)|\n   |wheel-manylinux2014-cp37-amd64|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1076-github-wheel-manylinux2014-cp37-amd64)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1076-github-wheel-manylinux2014-cp37-amd64)|\n   |wheel-manylinux2014-cp37-arm64|[![TravisCI](https://img.shields.io/travis/ursacomputing/crossbow/actions-1076-travis-wheel-manylinux2014-cp37-arm64.svg)](https://travis-ci.com/ursacomputing/crossbow/branches)|\n   |wheel-manylinux2014-cp38-amd64|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1076-github-wheel-manylinux2014-cp38-amd64)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1076-github-wheel-manylinux2014-cp38-amd64)|\n   |wheel-manylinux2014-cp38-arm64|[![TravisCI](https://img.shields.io/travis/ursacomputing/crossbow/actions-1076-travis-wheel-manylinux2014-cp38-arm64.svg)](https://travis-ci.com/ursacomputing/crossbow/branches)|\n   |wheel-manylinux2014-cp39-amd64|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1076-github-wheel-manylinux2014-cp39-amd64)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1076-github-wheel-manylinux2014-cp39-amd64)|\n   |wheel-manylinux2014-cp39-arm64|[![TravisCI](https://img.shields.io/travis/ursacomputing/crossbow/actions-1076-travis-wheel-manylinux2014-cp39-arm64.svg)](https://travis-ci.com/ursacomputing/crossbow/branches)|\n   |wheel-windows-cp310-amd64|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1076-github-wheel-windows-cp310-amd64)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1076-github-wheel-windows-cp310-amd64)|\n   |wheel-windows-cp36-amd64|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1076-github-wheel-windows-cp36-amd64)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1076-github-wheel-windows-cp36-amd64)|\n   |wheel-windows-cp37-amd64|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1076-github-wheel-windows-cp37-amd64)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1076-github-wheel-windows-cp37-amd64)|\n   |wheel-windows-cp38-amd64|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1076-github-wheel-windows-cp38-amd64)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1076-github-wheel-windows-cp38-amd64)|\n   |wheel-windows-cp39-amd64|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1076-github-wheel-windows-cp39-amd64)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1076-github-wheel-windows-cp39-amd64)|\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-03T09:41:49.978+0000",
                    "updated": "2021-11-03T09:41:49.978+0000",
                    "started": "2021-11-03T09:41:49.978+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "674482",
                    "issueId": "13409210"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409210/worklog/674483",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #11594:\nURL: https://github.com/apache/arrow/pull/11594#issuecomment-958787968\n\n\n   > I notice their own workaround looked for a case where the root element was correct but the first child was Error which isn't handled here.\r\n   \r\n   Hmm, I may try to detect that indeed.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-03T09:43:56.253+0000",
                    "updated": "2021-11-03T09:43:56.253+0000",
                    "started": "2021-11-03T09:43:56.252+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "674483",
                    "issueId": "13409210"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409210/worklog/674485",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11594:\nURL: https://github.com/apache/arrow/pull/11594#discussion_r741755367\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/s3fs.cc\n##########\n@@ -563,6 +566,97 @@ class S3Client : public Aws::S3::S3Client {\n     req.SetBucket(ToAwsString(bucket));\n     return GetBucketRegion(req);\n   }\n+\n+  S3Model::CompleteMultipartUploadOutcome CompleteMultipartUploadWithErrorFixup(\n+      S3Model::CompleteMultipartUploadRequest&& request) const {\n+    // CompletedMultipartUpload can return a 200 OK response with an error\n+    // encoded in the response body, in which case we should either retry\n+    // or propagate the error to the user (see\n+    // https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html).\n+    //\n+    // Unfortunately the AWS SDK doesn't detect such situations but lets them\n+    // return successfully (see https://github.com/aws/aws-sdk-cpp/issues/658).\n+    //\n+    // We work around the issue by registering a DataReceivedEventHandler\n+    // which parses the XML response for embedded errors.\n+\n+    util::optional<AWSError<Aws::Client::CoreErrors>> aws_error;\n+\n+    auto handler = [&](const Aws::Http::HttpRequest* http_req,\n+                       Aws::Http::HttpResponse* http_resp,\n+                       long long) {  // NOLINT runtime/int\n+      auto& stream = http_resp->GetResponseBody();\n+      const auto pos = stream.tellg();\n+      const auto doc = Aws::Utils::Xml::XmlDocument::CreateFromXmlStream(stream);\n+      // Rewind stream for later\n+      stream.clear();\n+      stream.seekg(pos);\n+\n+      if (doc.WasParseSuccessful()) {\n+        auto root = doc.GetRootElement();\n+        if (!root.IsNull()) {\n+          ARROW_LOG(INFO) << \"... CompleteMultipartUpload XML response root node: \"\n+                          << root.GetName();\n+          if (root.GetName() != \"CompleteMultipartUploadResult\") {\n+            // It's not the expected XML response root node, so it should be an error.\n+            ARROW_LOG(INFO) << \"CompletedMultipartUpload got error: \"\n+                            << doc.ConvertToString();\n+            http_resp->SetResponseCode(\n+                Aws::Http::HttpResponseCode::INTERNAL_SERVER_ERROR);\n+            aws_error = GetErrorMarshaller()->Marshall(*http_resp);\n+            // Rewind stream for later\n+            stream.clear();\n+            stream.seekg(pos);\n+          }\n+        }\n+      }\n+    };\n+\n+    request.SetDataReceivedEventHandler(std::move(handler));\n+\n+    for (int64_t retries = 0;; retries++) {\n+      aws_error.reset();\n+      auto outcome = Aws::S3::S3Client::S3Client::CompleteMultipartUpload(request);\n+      if (!outcome.IsSuccess()) {\n+        // Error returned in HTTP headers (or client failure)\n+        return outcome;\n+      }\n+      if (!aws_error.has_value()) {\n+        // Genuinely successful outcome\n+        return outcome;\n+      }\n+\n+      // An error was returned in the XML body despite the 200 OK status code.\n+      // We don't have access to the AWS retry strategy (m_retryStrategy\n+      // is a private member of AwsClient), so don't use that.  Instead,\n+      // call our own if available; otherwise fall back on AWSError::ShouldRetry(),\n+      // but put a hardcoded cap on the number of retries.\n+      const auto detail = WrappedRetryStrategy::ErrorToDetail(*aws_error);\n+      const bool should_retry = s3_retry_strategy_\n+                                    ? s3_retry_strategy_->ShouldRetry(detail, retries)\n+                                    : (detail.should_retry && retries < 20);\n\nReview comment:\n       Hmm, why not indeed.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-03T09:44:43.264+0000",
                    "updated": "2021-11-03T09:44:43.264+0000",
                    "started": "2021-11-03T09:44:43.264+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "674485",
                    "issueId": "13409210"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409210/worklog/674486",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11594:\nURL: https://github.com/apache/arrow/pull/11594#discussion_r741755769\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/s3fs.cc\n##########\n@@ -505,7 +509,6 @@ class WrappedRetryStrategy : public Aws::Client::RetryStrategy {\n             detail, static_cast<int64_t>(attempted_retries)));\n   }\n \n- private:\n\nReview comment:\n       Will do.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-03T09:45:16.935+0000",
                    "updated": "2021-11-03T09:45:16.935+0000",
                    "started": "2021-11-03T09:45:16.934+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "674486",
                    "issueId": "13409210"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409210/worklog/674620",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "seittema commented on a change in pull request #11594:\nURL: https://github.com/apache/arrow/pull/11594#discussion_r741961642\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/s3fs.cc\n##########\n@@ -563,6 +566,97 @@ class S3Client : public Aws::S3::S3Client {\n     req.SetBucket(ToAwsString(bucket));\n     return GetBucketRegion(req);\n   }\n+\n+  S3Model::CompleteMultipartUploadOutcome CompleteMultipartUploadWithErrorFixup(\n+      S3Model::CompleteMultipartUploadRequest&& request) const {\n+    // CompletedMultipartUpload can return a 200 OK response with an error\n+    // encoded in the response body, in which case we should either retry\n+    // or propagate the error to the user (see\n+    // https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html).\n+    //\n+    // Unfortunately the AWS SDK doesn't detect such situations but lets them\n+    // return successfully (see https://github.com/aws/aws-sdk-cpp/issues/658).\n+    //\n+    // We work around the issue by registering a DataReceivedEventHandler\n+    // which parses the XML response for embedded errors.\n+\n+    util::optional<AWSError<Aws::Client::CoreErrors>> aws_error;\n+\n+    auto handler = [&](const Aws::Http::HttpRequest* http_req,\n+                       Aws::Http::HttpResponse* http_resp,\n+                       long long) {  // NOLINT runtime/int\n+      auto& stream = http_resp->GetResponseBody();\n+      const auto pos = stream.tellg();\n+      const auto doc = Aws::Utils::Xml::XmlDocument::CreateFromXmlStream(stream);\n\nReview comment:\n       I know it's possible to get a partial XML response from S3 due to network failure, does this handle that and throw a 5xx/retry or will an XML error be thrown back up? https://github.com/boto/botocore/blob/04d1fae43b657952e49b21d16daa86378ddb4253/botocore/handlers.py#L141\r\n   Per AWS: \r\n   ```\r\n   # In cases of network disruptions, we may end up with a partial\r\n   # streamed response from S3. We need to treat these cases as\r\n   # 500 Service Errors and try again.\r\n   ```\r\n   \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-03T13:54:22.192+0000",
                    "updated": "2021-11-03T13:54:22.192+0000",
                    "started": "2021-11-03T13:54:22.192+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "674620",
                    "issueId": "13409210"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409210/worklog/674621",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11594:\nURL: https://github.com/apache/arrow/pull/11594#discussion_r741962741\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/s3fs.cc\n##########\n@@ -563,6 +566,97 @@ class S3Client : public Aws::S3::S3Client {\n     req.SetBucket(ToAwsString(bucket));\n     return GetBucketRegion(req);\n   }\n+\n+  S3Model::CompleteMultipartUploadOutcome CompleteMultipartUploadWithErrorFixup(\n+      S3Model::CompleteMultipartUploadRequest&& request) const {\n+    // CompletedMultipartUpload can return a 200 OK response with an error\n+    // encoded in the response body, in which case we should either retry\n+    // or propagate the error to the user (see\n+    // https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html).\n+    //\n+    // Unfortunately the AWS SDK doesn't detect such situations but lets them\n+    // return successfully (see https://github.com/aws/aws-sdk-cpp/issues/658).\n+    //\n+    // We work around the issue by registering a DataReceivedEventHandler\n+    // which parses the XML response for embedded errors.\n+\n+    util::optional<AWSError<Aws::Client::CoreErrors>> aws_error;\n+\n+    auto handler = [&](const Aws::Http::HttpRequest* http_req,\n+                       Aws::Http::HttpResponse* http_resp,\n+                       long long) {  // NOLINT runtime/int\n+      auto& stream = http_resp->GetResponseBody();\n+      const auto pos = stream.tellg();\n+      const auto doc = Aws::Utils::Xml::XmlDocument::CreateFromXmlStream(stream);\n\nReview comment:\n       This should be normally detected as an error by the AWS SDK, so no need to special-case this on our own (hopefully).\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-03T13:55:22.249+0000",
                    "updated": "2021-11-03T13:55:22.249+0000",
                    "started": "2021-11-03T13:55:22.249+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "674621",
                    "issueId": "13409210"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409210/worklog/674745",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #11594:\nURL: https://github.com/apache/arrow/pull/11594#issuecomment-959704653\n\n\n   @github-actions crossbow submit wheel-*-cp39-*\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-03T16:44:44.585+0000",
                    "updated": "2021-11-03T16:44:44.585+0000",
                    "started": "2021-11-03T16:44:44.584+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "674745",
                    "issueId": "13409210"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409210/worklog/674746",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11594:\nURL: https://github.com/apache/arrow/pull/11594#issuecomment-959709035\n\n\n   Revision: 958dc16e2bd5ac32e47206448b3c4457f500c05d\n   \n   Submitted crossbow builds: [ursacomputing/crossbow @ actions-1078](https://github.com/ursacomputing/crossbow/branches/all?query=actions-1078)\n   \n   |Task|Status|\n   |----|------|\n   |wheel-macos-big-sur-cp39-arm64|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1078-github-wheel-macos-big-sur-cp39-arm64)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1078-github-wheel-macos-big-sur-cp39-arm64)|\n   |wheel-macos-big-sur-cp39-universal2|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1078-github-wheel-macos-big-sur-cp39-universal2)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1078-github-wheel-macos-big-sur-cp39-universal2)|\n   |wheel-macos-high-sierra-cp39-amd64|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1078-github-wheel-macos-high-sierra-cp39-amd64)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1078-github-wheel-macos-high-sierra-cp39-amd64)|\n   |wheel-macos-mavericks-cp39-amd64|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1078-github-wheel-macos-mavericks-cp39-amd64)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1078-github-wheel-macos-mavericks-cp39-amd64)|\n   |wheel-manylinux2010-cp39-amd64|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1078-github-wheel-manylinux2010-cp39-amd64)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1078-github-wheel-manylinux2010-cp39-amd64)|\n   |wheel-manylinux2014-cp39-amd64|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1078-github-wheel-manylinux2014-cp39-amd64)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1078-github-wheel-manylinux2014-cp39-amd64)|\n   |wheel-manylinux2014-cp39-arm64|[![TravisCI](https://img.shields.io/travis/ursacomputing/crossbow/actions-1078-travis-wheel-manylinux2014-cp39-arm64.svg)](https://travis-ci.com/ursacomputing/crossbow/branches)|\n   |wheel-windows-cp39-amd64|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-1078-github-wheel-windows-cp39-amd64)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-1078-github-wheel-windows-cp39-amd64)|\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-03T16:45:58.979+0000",
                    "updated": "2021-11-03T16:45:58.979+0000",
                    "started": "2021-11-03T16:45:58.979+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "674746",
                    "issueId": "13409210"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409210/worklog/674779",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #11594:\nURL: https://github.com/apache/arrow/pull/11594#issuecomment-959758511\n\n\n   @seittema Could you try out one the wheels produced just above? You'll find the download URL in the \"upload artifacts\" step of the [corresponding build](https://github.com/apache/arrow/pull/11594#issuecomment-959709035).\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-03T17:27:51.696+0000",
                    "updated": "2021-11-03T17:27:51.696+0000",
                    "started": "2021-11-03T17:27:51.696+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "674779",
                    "issueId": "13409210"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409210/worklog/675058",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #11594:\nURL: https://github.com/apache/arrow/pull/11594#issuecomment-958785770\n\n\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-04T00:06:23.697+0000",
                    "updated": "2021-11-04T00:06:23.697+0000",
                    "started": "2021-11-04T00:06:23.696+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "675058",
                    "issueId": "13409210"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409210/worklog/675156",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11594:\nURL: https://github.com/apache/arrow/pull/11594#issuecomment-958786516\n\n\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-04T00:18:02.012+0000",
                    "updated": "2021-11-04T00:18:02.012+0000",
                    "started": "2021-11-04T00:18:02.012+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "675156",
                    "issueId": "13409210"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409210/worklog/675200",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11594:\nURL: https://github.com/apache/arrow/pull/11594#discussion_r741752805\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/s3fs.cc\n##########\n@@ -563,6 +566,97 @@ class S3Client : public Aws::S3::S3Client {\n     req.SetBucket(ToAwsString(bucket));\n     return GetBucketRegion(req);\n   }\n+\n+  S3Model::CompleteMultipartUploadOutcome CompleteMultipartUploadWithErrorFixup(\n+      S3Model::CompleteMultipartUploadRequest&& request) const {\n+    // CompletedMultipartUpload can return a 200 OK response with an error\n+    // encoded in the response body, in which case we should either retry\n+    // or propagate the error to the user (see\n+    // https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html).\n+    //\n+    // Unfortunately the AWS SDK doesn't detect such situations but lets them\n+    // return successfully (see https://github.com/aws/aws-sdk-cpp/issues/658).\n+    //\n+    // We work around the issue by registering a DataReceivedEventHandler\n+    // which parses the XML response for embedded errors.\n+\n+    util::optional<AWSError<Aws::Client::CoreErrors>> aws_error;\n+\n+    auto handler = [&](const Aws::Http::HttpRequest* http_req,\n+                       Aws::Http::HttpResponse* http_resp,\n+                       long long) {  // NOLINT runtime/int\n+      auto& stream = http_resp->GetResponseBody();\n+      const auto pos = stream.tellg();\n+      const auto doc = Aws::Utils::Xml::XmlDocument::CreateFromXmlStream(stream);\n+      // Rewind stream for later\n+      stream.clear();\n+      stream.seekg(pos);\n+\n+      if (doc.WasParseSuccessful()) {\n+        auto root = doc.GetRootElement();\n+        if (!root.IsNull()) {\n+          ARROW_LOG(INFO) << \"... CompleteMultipartUpload XML response root node: \"\n+                          << root.GetName();\n+          if (root.GetName() != \"CompleteMultipartUploadResult\") {\n+            // It's not the expected XML response root node, so it should be an error.\n+            ARROW_LOG(INFO) << \"CompletedMultipartUpload got error: \"\n+                            << doc.ConvertToString();\n+            http_resp->SetResponseCode(\n+                Aws::Http::HttpResponseCode::INTERNAL_SERVER_ERROR);\n+            aws_error = GetErrorMarshaller()->Marshall(*http_resp);\n+            // Rewind stream for later\n+            stream.clear();\n+            stream.seekg(pos);\n\nReview comment:\n       `GetErrorMarshaller()->Marshall` will involve XML parsing over the response stream again.\n\n##########\nFile path: cpp/src/arrow/filesystem/s3fs.cc\n##########\n@@ -563,6 +566,97 @@ class S3Client : public Aws::S3::S3Client {\n     req.SetBucket(ToAwsString(bucket));\n     return GetBucketRegion(req);\n   }\n+\n+  S3Model::CompleteMultipartUploadOutcome CompleteMultipartUploadWithErrorFixup(\n+      S3Model::CompleteMultipartUploadRequest&& request) const {\n+    // CompletedMultipartUpload can return a 200 OK response with an error\n+    // encoded in the response body, in which case we should either retry\n+    // or propagate the error to the user (see\n+    // https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html).\n+    //\n+    // Unfortunately the AWS SDK doesn't detect such situations but lets them\n+    // return successfully (see https://github.com/aws/aws-sdk-cpp/issues/658).\n+    //\n+    // We work around the issue by registering a DataReceivedEventHandler\n+    // which parses the XML response for embedded errors.\n+\n+    util::optional<AWSError<Aws::Client::CoreErrors>> aws_error;\n+\n+    auto handler = [&](const Aws::Http::HttpRequest* http_req,\n+                       Aws::Http::HttpResponse* http_resp,\n+                       long long) {  // NOLINT runtime/int\n+      auto& stream = http_resp->GetResponseBody();\n+      const auto pos = stream.tellg();\n+      const auto doc = Aws::Utils::Xml::XmlDocument::CreateFromXmlStream(stream);\n+      // Rewind stream for later\n+      stream.clear();\n+      stream.seekg(pos);\n+\n+      if (doc.WasParseSuccessful()) {\n+        auto root = doc.GetRootElement();\n+        if (!root.IsNull()) {\n+          ARROW_LOG(INFO) << \"... CompleteMultipartUpload XML response root node: \"\n+                          << root.GetName();\n+          if (root.GetName() != \"CompleteMultipartUploadResult\") {\n+            // It's not the expected XML response root node, so it should be an error.\n+            ARROW_LOG(INFO) << \"CompletedMultipartUpload got error: \"\n+                            << doc.ConvertToString();\n+            http_resp->SetResponseCode(\n+                Aws::Http::HttpResponseCode::INTERNAL_SERVER_ERROR);\n+            aws_error = GetErrorMarshaller()->Marshall(*http_resp);\n+            // Rewind stream for later\n+            stream.clear();\n+            stream.seekg(pos);\n+          }\n+        }\n+      }\n+    };\n+\n+    request.SetDataReceivedEventHandler(std::move(handler));\n+\n+    for (int64_t retries = 0;; retries++) {\n+      aws_error.reset();\n+      auto outcome = Aws::S3::S3Client::S3Client::CompleteMultipartUpload(request);\n+      if (!outcome.IsSuccess()) {\n+        // Error returned in HTTP headers (or client failure)\n+        return outcome;\n+      }\n+      if (!aws_error.has_value()) {\n+        // Genuinely successful outcome\n+        return outcome;\n+      }\n+\n+      // An error was returned in the XML body despite the 200 OK status code.\n+      // We don't have access to the AWS retry strategy (m_retryStrategy\n+      // is a private member of AwsClient), so don't use that.  Instead,\n+      // call our own if available; otherwise fall back on AWSError::ShouldRetry(),\n+      // but put a hardcoded cap on the number of retries.\n+      const auto detail = WrappedRetryStrategy::ErrorToDetail(*aws_error);\n+      const bool should_retry = s3_retry_strategy_\n+                                    ? s3_retry_strategy_->ShouldRetry(detail, retries)\n+                                    : (detail.should_retry && retries < 20);\n\nReview comment:\n       Hmm, why not indeed.\n\n##########\nFile path: cpp/src/arrow/filesystem/s3fs.cc\n##########\n@@ -505,7 +509,6 @@ class WrappedRetryStrategy : public Aws::Client::RetryStrategy {\n             detail, static_cast<int64_t>(attempted_retries)));\n   }\n \n- private:\n\nReview comment:\n       Will do.\n\n##########\nFile path: cpp/src/arrow/filesystem/s3fs.cc\n##########\n@@ -563,6 +566,97 @@ class S3Client : public Aws::S3::S3Client {\n     req.SetBucket(ToAwsString(bucket));\n     return GetBucketRegion(req);\n   }\n+\n+  S3Model::CompleteMultipartUploadOutcome CompleteMultipartUploadWithErrorFixup(\n+      S3Model::CompleteMultipartUploadRequest&& request) const {\n+    // CompletedMultipartUpload can return a 200 OK response with an error\n+    // encoded in the response body, in which case we should either retry\n+    // or propagate the error to the user (see\n+    // https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html).\n+    //\n+    // Unfortunately the AWS SDK doesn't detect such situations but lets them\n+    // return successfully (see https://github.com/aws/aws-sdk-cpp/issues/658).\n+    //\n+    // We work around the issue by registering a DataReceivedEventHandler\n+    // which parses the XML response for embedded errors.\n+\n+    util::optional<AWSError<Aws::Client::CoreErrors>> aws_error;\n+\n+    auto handler = [&](const Aws::Http::HttpRequest* http_req,\n+                       Aws::Http::HttpResponse* http_resp,\n+                       long long) {  // NOLINT runtime/int\n+      auto& stream = http_resp->GetResponseBody();\n+      const auto pos = stream.tellg();\n+      const auto doc = Aws::Utils::Xml::XmlDocument::CreateFromXmlStream(stream);\n\nReview comment:\n       This should be normally detected as an error by the AWS SDK, so no need to special-case this on our own (hopefully).\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-04T00:24:27.864+0000",
                    "updated": "2021-11-04T00:24:27.864+0000",
                    "started": "2021-11-04T00:24:27.864+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "675200",
                    "issueId": "13409210"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409210/worklog/675229",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "seittema commented on a change in pull request #11594:\nURL: https://github.com/apache/arrow/pull/11594#discussion_r741961642\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/s3fs.cc\n##########\n@@ -563,6 +566,97 @@ class S3Client : public Aws::S3::S3Client {\n     req.SetBucket(ToAwsString(bucket));\n     return GetBucketRegion(req);\n   }\n+\n+  S3Model::CompleteMultipartUploadOutcome CompleteMultipartUploadWithErrorFixup(\n+      S3Model::CompleteMultipartUploadRequest&& request) const {\n+    // CompletedMultipartUpload can return a 200 OK response with an error\n+    // encoded in the response body, in which case we should either retry\n+    // or propagate the error to the user (see\n+    // https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html).\n+    //\n+    // Unfortunately the AWS SDK doesn't detect such situations but lets them\n+    // return successfully (see https://github.com/aws/aws-sdk-cpp/issues/658).\n+    //\n+    // We work around the issue by registering a DataReceivedEventHandler\n+    // which parses the XML response for embedded errors.\n+\n+    util::optional<AWSError<Aws::Client::CoreErrors>> aws_error;\n+\n+    auto handler = [&](const Aws::Http::HttpRequest* http_req,\n+                       Aws::Http::HttpResponse* http_resp,\n+                       long long) {  // NOLINT runtime/int\n+      auto& stream = http_resp->GetResponseBody();\n+      const auto pos = stream.tellg();\n+      const auto doc = Aws::Utils::Xml::XmlDocument::CreateFromXmlStream(stream);\n\nReview comment:\n       I know it's possible to get a partial XML response from S3 due to network failure, does this handle that and throw a 5xx/retry or will an XML error be thrown back up? https://github.com/boto/botocore/blob/04d1fae43b657952e49b21d16daa86378ddb4253/botocore/handlers.py#L141\r\n   Per AWS: \r\n   ```\r\n   # In cases of network disruptions, we may end up with a partial\r\n   # streamed response from S3. We need to treat these cases as\r\n   # 500 Service Errors and try again.\r\n   ```\r\n   \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-04T00:28:29.374+0000",
                    "updated": "2021-11-04T00:28:29.374+0000",
                    "started": "2021-11-04T00:28:29.374+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "675229",
                    "issueId": "13409210"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 21600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@169cf118[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1192c920[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4c2edd4c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@4bf2c620[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@35e0c7aa[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@57b76bc5[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6d4918c2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3057108d[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3394cba[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@6f3ce65b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4a967c76[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@424dced1[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 21600,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Nov 04 15:15:03 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-11-04T15:15:03.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14523/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2021-10-29T22:24:54.000+0000",
        "updated": "2021-11-05T20:35:12.000+0000",
        "timeoriginalestimate": null,
        "description": "We have seen odd behavior in very rare occasions when writing a parquet table to s3 using the S3FileSystem ({color:#000080}from {color}pyarrow.fs {color:#000080}import {color}S3FileSystem).\u00a0 Even though the application returns without errors, data would be missing from the bucket.\u00a0 It appears that internally it's doing a S3 multipart upload, but it's not handling a special error condition and returning a 200.\u00a0 Per [AWS Docs |https://aws.amazon.com/premiumsupport/knowledge-center/s3-resolve-200-internalerror/] CompleteMultipartUpload (which is being called) can return a 200 response with an InternalError payload and needs to be treated as a 5XX. It appears this isn't happening with pyarrow and instead it's a success which is causing the caller to *think* their data was uploaded but actually it's not.\u00a0\r\n\r\nDoing a s3 list-parts call for the <upload-id> for the InternalError request shows the parts are still there and not completed.\r\n\r\nFrom our S3 access logs with <my-key> and <upload-id> sanitized for security\u00a0\r\n|operation|key|requesturi_operation|requesturi_key|requesturi_httpprotoversion|httpstatus|errorcode|\r\n|REST.PUT.PART|<my-key>-SNAPPY.parquet|PUT|/<my-key>-SNAPPY.parquet?partNumber=1&uploadId=<upload-id>|HTTP/1.1|200|-|\r\n|REST.POST.UPLOAD|<my-key>-SNAPPY.parquet|POST|/<my-key>-SNAPPY.parquet?uploadId=<upload-id>|HTTP/1.1|200|InternalError|\r\n|REST.POST.UPLOADS|<my-key>-SNAPPY.parquet|POST|/<my-key>-SNAPPY.parquet?uploads|HTTP/1.1|200|-|\r\n\r\n\u00a0",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "6h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 21600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Python] S3FileSystem write_table can lose data",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409210/comment/17436265",
                    "id": "17436265",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "How is this supposed to be done with the AWS C++ API? We're using this API:\r\n\r\n[https://sdk.amazonaws.com/cpp/api/LATEST/class_aws_1_1_s3_1_1_s3_client.html#ac4b5211a2b2e499d8094e4f13bb3c29c]\r\n\r\nAs you can see, either the API returns an error (and we propagate it to the caller), or it returns a {{CompleteMultipartUploadResult}} which doesn't have any attribute to check for errors in the response body.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-10-30T09:01:30.572+0000",
                    "updated": "2021-10-30T09:01:30.572+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409210/comment/17436266",
                    "id": "17436266",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "And it seems to be a bug in the AWS C++ SDK:\r\n\r\n[https://github.com/aws/aws-sdk-cpp/issues/658]\r\n\r\nYikes.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-10-30T09:05:09.318+0000",
                    "updated": "2021-10-30T09:05:09.318+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409210/comment/17436278",
                    "id": "17436278",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Workaround will probably be to reimplement {{CompleteMultipartUpload}} in our own\u00a0{{S3Client}} subclass:\r\n\r\n[https://github.com/aws/aws-sdk-cpp/blob/main/aws-cpp-sdk-s3/source/S3Client.cpp#L250-L275]\r\n\r\n\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-10-30T10:07:35.938+0000",
                    "updated": "2021-10-30T10:07:35.938+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409210/comment/17436541",
                    "id": "17436541",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=seittema",
                        "name": "seittema",
                        "key": "seittema",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
                        },
                        "displayName": "Mark Seitter",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "[~apitrou] Sorry I wasn't sure exactly how those calls are made (I will admit I'm new in this space).\u00a0 Nice find on the SDK bug, but like you said Yikes! they have never resolved it in c++ sdk.\u00a0 Out of curiosity, Is there a reason pyarrow is always multipart uploads and also putobject?\u00a0 Seems wasteful to upload via multipart if you only have 1 part (ie the object size is small) since it's making 3 API calls vs just one (more $$$ and latency too).\u00a0 I understand using multipart for very large files to break into parts, but analyzing all our calls it seems we never have more than 1 part number on an upload.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=seittema",
                        "name": "seittema",
                        "key": "seittema",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
                        },
                        "displayName": "Mark Seitter",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-10-31T19:56:44.527+0000",
                    "updated": "2021-10-31T19:56:44.527+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409210/comment/17436543",
                    "id": "17436543",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "The filesystem API doesn't know up front what the total file size will be, which is why it always uses multipart upload. Perhaps we could have a one-shot file write API that would use another API for shorter uploads. That said, that API probably wouldn't be used by the Parquet writer...",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-10-31T19:58:44.220+0000",
                    "updated": "2021-10-31T19:59:16.202+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409210/comment/17436571",
                    "id": "17436571",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=seittema",
                        "name": "seittema",
                        "key": "seittema",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
                        },
                        "displayName": "Mark Seitter",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Ahh ok that makes sense if you don't know the file size.\u00a0 Agreed, I think only thing maybe you could do is have a flag/option that would let you tell the filesystem API to use single-file upload that a user could pass in if they know the file is less than 5GB (max a single put can do).\u00a0 That would let someone like us who has a max file size of 30MB to reduce our cost and improvement performance by skipping multipart calls (and bypassing this current bug too :) ). But ultimately I'm very surprised AWS hasn't fixed this bug in their SDK yet.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=seittema",
                        "name": "seittema",
                        "key": "seittema",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
                        },
                        "displayName": "Mark Seitter",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-10-31T23:52:34.081+0000",
                    "updated": "2021-10-31T23:52:34.081+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409210/comment/17436996",
                    "id": "17436996",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Okay, I think a slightly gory workaround will be possible. Will continue tomorrow.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-11-01T19:32:26.260+0000",
                    "updated": "2021-11-01T19:32:26.260+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409210/comment/17437498",
                    "id": "17437498",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Which Python version do you use? Are you using binary wheel or conda packages? We may be able to produce a test package for you with the candidate fix.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-11-02T17:53:55.506+0000",
                    "updated": "2021-11-02T17:53:55.506+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409210/comment/17437563",
                    "id": "17437563",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=seittema",
                        "name": "seittema",
                        "key": "seittema",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
                        },
                        "displayName": "Mark Seitter",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "[~apitrou] We are using Python 3.9 and we install via pip today.\u00a0 Not entirely sure what we can test on our side though unfortunately since this is an edge case which we have yet to be able to reproduce on demand.\u00a0 We are in talks with AWS if there is a way to produce this issue for testing across our code (we use multipart in many places also).",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=seittema",
                        "name": "seittema",
                        "key": "seittema",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
                        },
                        "displayName": "Mark Seitter",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-11-02T20:14:42.971+0000",
                    "updated": "2021-11-02T20:14:42.971+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409210/comment/17438781",
                    "id": "17438781",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 11594\n[https://github.com/apache/arrow/pull/11594]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-11-04T15:15:03.181+0000",
                    "updated": "2021-11-04T15:15:03.181+0000"
                }
            ],
            "maxResults": 10,
            "total": 10,
            "startAt": 0
        },
        "customfield_12311820": "0|z0wasg:",
        "customfield_12314139": null
    }
}