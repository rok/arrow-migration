{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13437246",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437246",
    "key": "ARROW-16094",
    "fields": {
        "parent": {
            "id": "13437222",
            "key": "ARROW-16091",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/13437222",
            "fields": {
                "summary": "[Python] Continuation of improving Classes and Methods Docstrings ",
                "status": {
                    "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                    "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                    "name": "Closed",
                    "id": "6",
                    "statusCategory": {
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                        "id": 3,
                        "key": "done",
                        "colorName": "green",
                        "name": "Done"
                    }
                },
                "priority": {
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                    "name": "Major",
                    "id": "3"
                },
                "issuetype": {
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                    "id": "4",
                    "description": "An improvement or enhancement to an existing feature or task.",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                    "name": "Improvement",
                    "subtask": false,
                    "avatarId": 21140
                }
            }
        },
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351550",
                "id": "12351550",
                "name": "9.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-08-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=alenka",
            "name": "alenka",
            "key": "alenkaf",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
            },
            "displayName": "Alenka Frim",
            "active": true,
            "timeZone": "Europe/Ljubljana"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=alenka",
            "name": "alenka",
            "key": "alenkaf",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
            },
            "displayName": "Alenka Frim",
            "active": true,
            "timeZone": "Europe/Ljubljana"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=alenka",
            "name": "alenka",
            "key": "alenkaf",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
            },
            "displayName": "Alenka Frim",
            "active": true,
            "timeZone": "Europe/Ljubljana"
        },
        "aggregateprogress": {
            "progress": 7200,
            "total": 7200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 7200,
            "total": 7200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-16094/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 12,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437246/worklog/790027",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13582:\nURL: https://github.com/apache/arrow/pull/13582#issuecomment-1181731013\n\n   https://issues.apache.org/jira/browse/ARROW-16094\n\n\n",
                    "created": "2022-07-12T12:59:48.463+0000",
                    "updated": "2022-07-12T12:59:48.463+0000",
                    "started": "2022-07-12T12:59:48.463+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "790027",
                    "issueId": "13437246"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437246/worklog/790034",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13582:\nURL: https://github.com/apache/arrow/pull/13582#discussion_r918967631\n\n\n##########\npython/pyarrow/fs.py:\n##########\n@@ -227,16 +227,34 @@ def copy_files(source, destination,\n \n     Examples\n     --------\n-    Copy an S3 bucket's files to a local directory:\n+    Inspect an S3 bucket's files:\n \n-    >>> copy_files(\"s3://your-bucket-name\",\n-    ...            \"local-directory\") # doctest: +SKIP\n+    >>> s3, path = fs.FileSystem.from_uri(\n+    ...            \"s3://registry.opendata.aws/roda/ndjson/\")\n+    >>> selector = fs.FileSelector(\"registry.opendata.aws/roda/ndjson\")\n+    >>> s3.get_file_info(selector)\n+    [<FileInfo for 'registry.opendata.aws/roda/ndjson/index.ndjson':...]\n \n-    Using a FileSystem object:\n+    Create a LocalFIleSystem object and a new directory:\n \n-    >>> copy_files(\"your-bucket-name\", \"local-directory\",\n-    ...            source_filesystem=S3FileSystem(...)) # doctest: +SKIP\n+    >>> local = fs.LocalFileSystem()\n+    >>> local.create_dir('/tmp/copy-dir')\n\nReview Comment:\n   Is all this boilerplate really useful? Perhaps it's not important to make the examples executable, as long as they are informative? Here we want to showcase usage of `copy_files`, not the rest of the filesystem API.\n\n\n\n##########\npython/pyarrow/_s3fs.pyx:\n##########\n@@ -44,13 +44,22 @@ def initialize_s3(S3LogLevel log_level=S3LogLevel.Fatal):\n     ----------\n     log_level : S3LogLevel\n         level of logging\n+\n+    Examples\n+    --------\n+    >>> fs.initialize_s3(fs.S3LogLevel(5)) # doctest: +SKIP\n     \"\"\"\n     cdef CS3GlobalOptions options\n     options.log_level = <CS3LogLevel> log_level\n     check_status(CInitializeS3(options))\n \n \n def finalize_s3():\n+    \"\"\"\n\nReview Comment:\n   To be honest, I'm not sure how useful this function is, so perhaps we don't want to document it for now.\r\n   (for example, it isn't called anywhere in our source tree currently, even in tests)\n\n\n\n##########\npython/pyarrow/fs.py:\n##########\n@@ -227,16 +227,34 @@ def copy_files(source, destination,\n \n     Examples\n     --------\n-    Copy an S3 bucket's files to a local directory:\n+    Inspect an S3 bucket's files:\n \n-    >>> copy_files(\"s3://your-bucket-name\",\n-    ...            \"local-directory\") # doctest: +SKIP\n+    >>> s3, path = fs.FileSystem.from_uri(\n+    ...            \"s3://registry.opendata.aws/roda/ndjson/\")\n+    >>> selector = fs.FileSelector(\"registry.opendata.aws/roda/ndjson\")\n\nReview Comment:\n   Perhaps `path` should be used here?\n\n\n\n##########\npython/pyarrow/conftest.py:\n##########\n@@ -241,3 +242,26 @@ def _docdir(request):\n \n     else:\n         yield\n+\n+\n+# Define doctest_namespace for fs module docstring import\n+@pytest.fixture(autouse=True)\n+def add_fs(doctest_namespace, request):\n+\n+    # Trigger ONLY for the doctests\n+    doctest_m = request.config.option.doctestmodules\n+    doctest_c = getattr(request.config.option, \"doctest_cython\", False)\n+\n+    if doctest_m or doctest_c:\n+        # fs import\n+        doctest_namespace[\"fs\"] = fs\n+\n+        # Creation of an object and file with data\n+        local = fs.LocalFileSystem()\n+        with local.open_output_stream('/tmp/fileinfo.dat') as stream:\n+            stream.write(b'data')\n+        doctest_namespace[\"local\"] = local\n+        yield\n+\n+    else:\n+        yield\n\nReview Comment:\n   Perhaps simply\r\n   ```suggestion\r\n       yield\r\n   ```\n\n\n\n##########\npython/pyarrow/conftest.py:\n##########\n@@ -241,3 +242,26 @@ def _docdir(request):\n \n     else:\n         yield\n+\n+\n+# Define doctest_namespace for fs module docstring import\n+@pytest.fixture(autouse=True)\n+def add_fs(doctest_namespace, request):\n+\n+    # Trigger ONLY for the doctests\n+    doctest_m = request.config.option.doctestmodules\n+    doctest_c = getattr(request.config.option, \"doctest_cython\", False)\n+\n+    if doctest_m or doctest_c:\n+        # fs import\n+        doctest_namespace[\"fs\"] = fs\n+\n+        # Creation of an object and file with data\n+        local = fs.LocalFileSystem()\n+        with local.open_output_stream('/tmp/fileinfo.dat') as stream:\n\nReview Comment:\n   Hmm, it would be nice if we could avoid creating files without deleting them at the end...\n\n\n\n##########\npython/pyarrow/_s3fs.pyx:\n##########\n@@ -44,13 +44,22 @@ def initialize_s3(S3LogLevel log_level=S3LogLevel.Fatal):\n     ----------\n     log_level : S3LogLevel\n         level of logging\n+\n+    Examples\n+    --------\n+    >>> fs.initialize_s3(fs.S3LogLevel(5)) # doctest: +SKIP\n\nReview Comment:\n   It would be much better to showcase a symbolic constant, for example:\r\n   ```suggestion\r\n       >>> fs.initialize_s3(fs.S3LogLevel.Error) # doctest: +SKIP\r\n   ```\r\n   \n\n\n\n",
                    "created": "2022-07-12T13:26:41.755+0000",
                    "updated": "2022-07-12T13:26:41.755+0000",
                    "started": "2022-07-12T13:26:41.755+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "790034",
                    "issueId": "13437246"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437246/worklog/790046",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on code in PR #13582:\nURL: https://github.com/apache/arrow/pull/13582#discussion_r918985225\n\n\n##########\npython/pyarrow/_s3fs.pyx:\n##########\n@@ -44,13 +44,22 @@ def initialize_s3(S3LogLevel log_level=S3LogLevel.Fatal):\n     ----------\n     log_level : S3LogLevel\n         level of logging\n+\n+    Examples\n+    --------\n+    >>> fs.initialize_s3(fs.S3LogLevel(5)) # doctest: +SKIP\n     \"\"\"\n     cdef CS3GlobalOptions options\n     options.log_level = <CS3LogLevel> log_level\n     check_status(CInitializeS3(options))\n \n \n def finalize_s3():\n+    \"\"\"\n\nReview Comment:\n   Ok, will remove \ud83d\udc4d \n\n\n\n",
                    "created": "2022-07-12T13:40:28.304+0000",
                    "updated": "2022-07-12T13:40:28.304+0000",
                    "started": "2022-07-12T13:40:28.303+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "790046",
                    "issueId": "13437246"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437246/worklog/790048",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on code in PR #13582:\nURL: https://github.com/apache/arrow/pull/13582#discussion_r918986098\n\n\n##########\npython/pyarrow/conftest.py:\n##########\n@@ -241,3 +242,26 @@ def _docdir(request):\n \n     else:\n         yield\n+\n+\n+# Define doctest_namespace for fs module docstring import\n+@pytest.fixture(autouse=True)\n+def add_fs(doctest_namespace, request):\n+\n+    # Trigger ONLY for the doctests\n+    doctest_m = request.config.option.doctestmodules\n+    doctest_c = getattr(request.config.option, \"doctest_cython\", False)\n+\n+    if doctest_m or doctest_c:\n+        # fs import\n+        doctest_namespace[\"fs\"] = fs\n+\n+        # Creation of an object and file with data\n+        local = fs.LocalFileSystem()\n+        with local.open_output_stream('/tmp/fileinfo.dat') as stream:\n\nReview Comment:\n   Not sure how then to show copying files etc.?\n\n\n\n",
                    "created": "2022-07-12T13:41:08.402+0000",
                    "updated": "2022-07-12T13:41:08.402+0000",
                    "started": "2022-07-12T13:41:08.401+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "790048",
                    "issueId": "13437246"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437246/worklog/790050",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on code in PR #13582:\nURL: https://github.com/apache/arrow/pull/13582#discussion_r918987718\n\n\n##########\npython/pyarrow/fs.py:\n##########\n@@ -227,16 +227,34 @@ def copy_files(source, destination,\n \n     Examples\n     --------\n-    Copy an S3 bucket's files to a local directory:\n+    Inspect an S3 bucket's files:\n \n-    >>> copy_files(\"s3://your-bucket-name\",\n-    ...            \"local-directory\") # doctest: +SKIP\n+    >>> s3, path = fs.FileSystem.from_uri(\n+    ...            \"s3://registry.opendata.aws/roda/ndjson/\")\n+    >>> selector = fs.FileSelector(\"registry.opendata.aws/roda/ndjson\")\n+    >>> s3.get_file_info(selector)\n+    [<FileInfo for 'registry.opendata.aws/roda/ndjson/index.ndjson':...]\n \n-    Using a FileSystem object:\n+    Create a LocalFIleSystem object and a new directory:\n \n-    >>> copy_files(\"your-bucket-name\", \"local-directory\",\n-    ...            source_filesystem=S3FileSystem(...)) # doctest: +SKIP\n+    >>> local = fs.LocalFileSystem()\n+    >>> local.create_dir('/tmp/copy-dir')\n\nReview Comment:\n   I do agree with u, I guess I got the docstring examples idea wrong a bit. Will correct and see if I understand better.\n\n\n\n",
                    "created": "2022-07-12T13:42:28.673+0000",
                    "updated": "2022-07-12T13:42:28.673+0000",
                    "started": "2022-07-12T13:42:28.673+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "790050",
                    "issueId": "13437246"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437246/worklog/790051",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13582:\nURL: https://github.com/apache/arrow/pull/13582#discussion_r918990508\n\n\n##########\npython/pyarrow/fs.py:\n##########\n@@ -227,16 +227,34 @@ def copy_files(source, destination,\n \n     Examples\n     --------\n-    Copy an S3 bucket's files to a local directory:\n+    Inspect an S3 bucket's files:\n \n-    >>> copy_files(\"s3://your-bucket-name\",\n-    ...            \"local-directory\") # doctest: +SKIP\n+    >>> s3, path = fs.FileSystem.from_uri(\n+    ...            \"s3://registry.opendata.aws/roda/ndjson/\")\n+    >>> selector = fs.FileSelector(\"registry.opendata.aws/roda/ndjson\")\n+    >>> s3.get_file_info(selector)\n+    [<FileInfo for 'registry.opendata.aws/roda/ndjson/index.ndjson':...]\n \n-    Using a FileSystem object:\n+    Create a LocalFIleSystem object and a new directory:\n \n-    >>> copy_files(\"your-bucket-name\", \"local-directory\",\n-    ...            source_filesystem=S3FileSystem(...)) # doctest: +SKIP\n+    >>> local = fs.LocalFileSystem()\n+    >>> local.create_dir('/tmp/copy-dir')\n\nReview Comment:\n   My position would be: if it's difficult to make an example both readable and executable, then readability should take the upper hand. YMMV, though :-)\n\n\n\n",
                    "created": "2022-07-12T13:44:53.649+0000",
                    "updated": "2022-07-12T13:44:53.649+0000",
                    "started": "2022-07-12T13:44:53.648+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "790051",
                    "issueId": "13437246"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437246/worklog/790302",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on code in PR #13582:\nURL: https://github.com/apache/arrow/pull/13582#discussion_r919750986\n\n\n##########\npython/pyarrow/conftest.py:\n##########\n@@ -241,3 +242,26 @@ def _docdir(request):\n \n     else:\n         yield\n+\n+\n+# Define doctest_namespace for fs module docstring import\n+@pytest.fixture(autouse=True)\n+def add_fs(doctest_namespace, request):\n+\n+    # Trigger ONLY for the doctests\n+    doctest_m = request.config.option.doctestmodules\n+    doctest_c = getattr(request.config.option, \"doctest_cython\", False)\n+\n+    if doctest_m or doctest_c:\n+        # fs import\n+        doctest_namespace[\"fs\"] = fs\n+\n+        # Creation of an object and file with data\n+        local = fs.LocalFileSystem()\n+        with local.open_output_stream('/tmp/fileinfo.dat') as stream:\n\nReview Comment:\n   Oh, sorry. Misread \ud83e\udd26\u200d\u2640\ufe0f \r\n   Of course, will add the deleting part +1\n\n\n\n",
                    "created": "2022-07-13T07:41:01.125+0000",
                    "updated": "2022-07-13T07:41:01.125+0000",
                    "started": "2022-07-13T07:41:01.124+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "790302",
                    "issueId": "13437246"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437246/worklog/790306",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on code in PR #13582:\nURL: https://github.com/apache/arrow/pull/13582#discussion_r919750986\n\n\n##########\npython/pyarrow/conftest.py:\n##########\n@@ -241,3 +242,26 @@ def _docdir(request):\n \n     else:\n         yield\n+\n+\n+# Define doctest_namespace for fs module docstring import\n+@pytest.fixture(autouse=True)\n+def add_fs(doctest_namespace, request):\n+\n+    # Trigger ONLY for the doctests\n+    doctest_m = request.config.option.doctestmodules\n+    doctest_c = getattr(request.config.option, \"doctest_cython\", False)\n+\n+    if doctest_m or doctest_c:\n+        # fs import\n+        doctest_namespace[\"fs\"] = fs\n+\n+        # Creation of an object and file with data\n+        local = fs.LocalFileSystem()\n+        with local.open_output_stream('/tmp/fileinfo.dat') as stream:\n\nReview Comment:\n   Oh, sorry. Misread \ud83e\udd26\u200d\u2640\ufe0f \r\n   Of course, will add the deleting part/use `tmp_path` or similar.\r\n   +1 \n\n\n\n",
                    "created": "2022-07-13T07:43:41.275+0000",
                    "updated": "2022-07-13T07:43:41.275+0000",
                    "started": "2022-07-13T07:43:41.274+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "790306",
                    "issueId": "13437246"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437246/worklog/790486",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13582:\nURL: https://github.com/apache/arrow/pull/13582#discussion_r920233875\n\n\n##########\npython/pyarrow/fs.py:\n##########\n@@ -227,16 +227,28 @@ def copy_files(source, destination,\n \n     Examples\n     --------\n-    Copy an S3 bucket's files to a local directory:\n+    Inspect an S3 bucket's files:\n \n-    >>> copy_files(\"s3://your-bucket-name\",\n-    ...            \"local-directory\") # doctest: +SKIP\n+    >>> s3, path = fs.FileSystem.from_uri(\n+    ...            \"s3://registry.opendata.aws/roda/ndjson/\")\n+    >>> selector = fs.FileSelector(path)\n+    >>> s3.get_file_info(selector)\n+    [<FileInfo for 'registry.opendata.aws/roda/ndjson/index.ndjson':...]\n \n-    Using a FileSystem object:\n+    Copy one file from S3 bucket to a local directory:\n \n-    >>> copy_files(\"your-bucket-name\", \"local-directory\",\n-    ...            source_filesystem=S3FileSystem(...)) # doctest: +SKIP\n+    >>> fs.copy_files(\"s3://registry.opendata.aws/roda/ndjson/index.ndjson\",\n+    ...               \"file:///{}/index_copy.ndjson\".format(local_path))\n \n+    >>> selector2 = fs.FileSelector(str(local_path))\n+    >>> local.get_file_info(selector2)\n\nReview Comment:\n   The reader doesn't know what `local` is, so is this the best way of presenting this example?\r\n   Perhaps instantiate the filesystem explicitly?\r\n   Also, I think you can pass `local_path` directly instead of a selector.\r\n   \r\n   ```suggestion\r\n       >>> fs.LocalFileSystem().get_file_info(local_path)\r\n   ```\n\n\n\n",
                    "created": "2022-07-13T15:42:30.070+0000",
                    "updated": "2022-07-13T15:42:30.070+0000",
                    "started": "2022-07-13T15:42:30.070+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "790486",
                    "issueId": "13437246"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437246/worklog/791254",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on code in PR #13582:\nURL: https://github.com/apache/arrow/pull/13582#discussion_r921807196\n\n\n##########\npython/pyarrow/fs.py:\n##########\n@@ -227,16 +227,28 @@ def copy_files(source, destination,\n \n     Examples\n     --------\n-    Copy an S3 bucket's files to a local directory:\n+    Inspect an S3 bucket's files:\n \n-    >>> copy_files(\"s3://your-bucket-name\",\n-    ...            \"local-directory\") # doctest: +SKIP\n+    >>> s3, path = fs.FileSystem.from_uri(\n+    ...            \"s3://registry.opendata.aws/roda/ndjson/\")\n+    >>> selector = fs.FileSelector(path)\n+    >>> s3.get_file_info(selector)\n+    [<FileInfo for 'registry.opendata.aws/roda/ndjson/index.ndjson':...]\n \n-    Using a FileSystem object:\n+    Copy one file from S3 bucket to a local directory:\n \n-    >>> copy_files(\"your-bucket-name\", \"local-directory\",\n-    ...            source_filesystem=S3FileSystem(...)) # doctest: +SKIP\n+    >>> fs.copy_files(\"s3://registry.opendata.aws/roda/ndjson/index.ndjson\",\n+    ...               \"file:///{}/index_copy.ndjson\".format(local_path))\n \n+    >>> selector2 = fs.FileSelector(str(local_path))\n+    >>> local.get_file_info(selector2)\n\nReview Comment:\n   Corrected the proposed change.\r\n   Didn't explicitly created a local filesystem as now only `local_path` is included and I hope that from the name it can be understood what the path links to. Tried to focus more on `copy_files` method as I agree it makes more sense.\n\n\n\n",
                    "created": "2022-07-15T04:47:55.564+0000",
                    "updated": "2022-07-15T04:47:55.564+0000",
                    "started": "2022-07-15T04:47:55.562+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "791254",
                    "issueId": "13437246"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437246/worklog/793040",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche merged PR #13582:\nURL: https://github.com/apache/arrow/pull/13582\n\n\n",
                    "created": "2022-07-20T06:23:20.746+0000",
                    "updated": "2022-07-20T06:23:20.746+0000",
                    "started": "2022-07-20T06:23:20.746+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "793040",
                    "issueId": "13437246"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437246/worklog/793542",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on PR #13582:\nURL: https://github.com/apache/arrow/pull/13582#issuecomment-1191057080\n\n   Benchmark runs are scheduled for baseline = 85c0db74130394614dfdc41bece179bfd349d0dd and contender = 39980dcdbfbc74ee1bdd345591a728dbc6e21dfe. 39980dcdbfbc74ee1bdd345591a728dbc6e21dfe is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Failed :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/a180babf76f24b30bec11a9714aad038...14cbdfdd35df4bf9add736aac64d3853/)\n   [Failed :arrow_down:0.21% :arrow_up:0.0%] [test-mac-arm](https://conbench.ursa.dev/compare/runs/a47acdf898c241e695022d2da5a0cb12...dc123a514b864e75843f994f363cd6c0/)\n   [Failed :arrow_down:0.0% :arrow_up:0.0%] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/40c642e6ff8144c090a8eb9e533c57e2...3ffaea3794e14180a7779a399c270fd7/)\n   [Finished :arrow_down:0.25% :arrow_up:0.21%] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/10ee5bb7ab75484686424fba3040deff...19c734896f4f4477849aedc5391b8375/)\n   Buildkite builds:\n   [Failed] [`39980dcd` ec2-t3-xlarge-us-east-2](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ec2-t3-xlarge-us-east-2/builds/1154)\n   [Failed] [`39980dcd` test-mac-arm](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-test-mac-arm/builds/1159)\n   [Failed] [`39980dcd` ursa-i9-9960x](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-i9-9960x/builds/1148)\n   [Finished] [`39980dcd` ursa-thinkcentre-m75q](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-thinkcentre-m75q/builds/1165)\n   [Failed] [`85c0db74` ec2-t3-xlarge-us-east-2](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ec2-t3-xlarge-us-east-2/builds/1153)\n   [Failed] [`85c0db74` test-mac-arm](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-test-mac-arm/builds/1158)\n   [Failed] [`85c0db74` ursa-i9-9960x](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-i9-9960x/builds/1145)\n   [Finished] [`85c0db74` ursa-thinkcentre-m75q](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-thinkcentre-m75q/builds/1164)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python, R. Runs only benchmarks with cloud = True\n   test-mac-arm: Supported benchmark langs: C++, Python, R\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n",
                    "created": "2022-07-21T05:31:37.734+0000",
                    "updated": "2022-07-21T05:31:37.734+0000",
                    "started": "2022-07-21T05:31:37.733+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "793542",
                    "issueId": "13437246"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
            "id": "7",
            "description": "The sub-task of the issue",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
            "name": "Sub-task",
            "subtask": true,
            "avatarId": 21146
        },
        "timespent": 7200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5c50869d[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@561cf133[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3bcec6d2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@aea3df1[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@576bbc5c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@22eefe56[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6f5b448f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3485e920[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3e863ab0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@6b4f7f78[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5e0531a2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@45d21fab[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 7200,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Jul 20 06:23:21 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-07-20T06:23:21.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-16094/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2022-04-01T12:39:06.000+0000",
        "updated": "2022-07-21T05:31:37.000+0000",
        "timeoriginalestimate": null,
        "description": "Ensure docstrings for Filesystem Interface have an\u00a0{{Examples}}\u00a0section:\r\n * [https://arrow.apache.org/docs/python/generated/pyarrow.fs.copy_files.html#pyarrow.fs.copy_files]\r\n * [https://arrow.apache.org/docs/python/generated/pyarrow.fs.initialize_s3.html#pyarrow.fs.initialize_s3]\r\n * [https://arrow.apache.org/docs/python/generated/pyarrow.fs.finalize_s3.html#pyarrow.fs.finalize_s3]\r\n * [https://arrow.apache.org/docs/python/generated/pyarrow.fs.resolve_s3_region.html#pyarrow.fs.resolve_s3_region]\r\n * [https://arrow.apache.org/docs/python/generated/pyarrow.fs.S3LogLevel.html#pyarrow.fs.S3LogLevel]\u00a0",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 7200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Address docstrings in Filesystems (Utilities)",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437246/comment/17568856",
                    "id": "17568856",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "Issue resolved by pull request 13582\n[https://github.com/apache/arrow/pull/13582]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2022-07-20T06:23:21.293+0000",
                    "updated": "2022-07-20T06:23:21.293+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z1127s:",
        "customfield_12314139": null
    }
}