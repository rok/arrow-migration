{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13227078",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13227078",
    "key": "ARROW-5155",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12344925",
                "id": "12344925",
                "description": "",
                "name": "0.14.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-07-04"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=mrkn",
            "name": "mrkn",
            "key": "mrkn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Kenta Murata",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332430",
                "id": "12332430",
                "name": "GLib"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334104",
                "id": "12334104",
                "name": "Ruby"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=mrkn",
            "name": "mrkn",
            "key": "mrkn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Kenta Murata",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=mrkn",
            "name": "mrkn",
            "key": "mrkn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Kenta Murata",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 10200,
            "total": 10200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 10200,
            "total": 10200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5155/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 19,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13227078/worklog/225377",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on issue #4127: ARROW-5155: [GLib][Ruby]MakeDense and MakeSparse in UnionArray should accept a vector of Field\nURL: https://github.com/apache/arrow/pull/4127#issuecomment-481500912\n \n \n   @kou This is ready to review.\r\n   Could you please have a look this again?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-10T01:43:34.799+0000",
                    "updated": "2019-04-10T01:43:34.799+0000",
                    "started": "2019-04-10T01:43:34.798+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "225377",
                    "issueId": "13227078"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13227078/worklog/225857",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #4127: ARROW-5155: [GLib][Ruby]MakeDense and MakeSparse in UnionArray should accept a vector of Field\nURL: https://github.com/apache/arrow/pull/4127#discussion_r274183672\n \n \n\n ##########\n File path: c_glib/arrow-glib/composite-array.h\n ##########\n @@ -107,6 +107,10 @@ struct _GArrowSparseUnionArrayClass\n GArrowSparseUnionArray *\n garrow_sparse_union_array_new(GArrowInt8Array *type_ids,\n                               GList *fields,\n+                              gchar **field_names,\n+                              gsize n_field_names,\n+                              guint8 *type_codes,\n+                              gsize n_type_codes,\n \n Review comment:\n   I don't want to provide API that requires many arguments. Because the API isn't easy to use.\r\n   \r\n   How about using `GArrowSparseUnionDataType`?\r\n   \r\n   ```diff\r\n   diff --git a/c_glib/arrow-glib/composite-array.cpp b/c_glib/arrow-glib/composite-array.cpp\r\n   index b202fb45..aac3c24c 100644\r\n   --- a/c_glib/arrow-glib/composite-array.cpp\r\n   +++ b/c_glib/arrow-glib/composite-array.cpp\r\n   @@ -366,6 +366,54 @@ garrow_sparse_union_array_new(GArrowInt8Array *type_ids,\r\n      }\r\n    }\r\n    \r\n   +/**\r\n   + * garrow_sparse_union_array_new_data_type:\r\n   + * @data_type: The data type for the sparse array.\r\n   + * @type_ids: The field type IDs for each value as #GArrowInt8Array.\r\n   + * @fields: (element-type GArrowArray): The arrays for each field\r\n   + *   as #GList of #GArrowArray.\r\n   + * @error: (nullable): Return location for a #GError or %NULL.\r\n   + *\r\n   + * Returns: (nullable): A newly created #GArrowSparseUnionArray\r\n   + *   or %NULL on error.\r\n   + *\r\n   + * Since: 0.14.0\r\n   + */\r\n   +GArrowSparseUnionArray *\r\n   +garrow_sparse_union_array_new_data_type(GArrowSparseUnionDataType *data_type,\r\n   +                                        GArrowInt8Array *type_ids,\r\n   +                                        GList *fields,\r\n   +                                        GError **error)\r\n   +{\r\n   +  auto arrow_data_type = garrow_data_type_get_raw(GARROW_DATA_TYPE(data_type));\r\n   +  auto arrow_union_data_type =\r\n   +    std::static_pointer_cast<arrow::UnionType>(arrow_data_type);\r\n   +  std::vector<std::string> arrow_field_names;\r\n   +  for (const auto &arrow_field : arrow_union_data_type->children()) {\r\n   +    arrow_field_names.push_back(arrow_field->name());\r\n   +  }\r\n   +  std::vector<uint8_t> arrow_type_codes(arrow_union_data_type->type_codes());\r\n   +  auto arrow_type_ids = garrow_array_get_raw(GARROW_ARRAY(type_ids));\r\n   +  std::vector<std::shared_ptr<arrow::Array>> arrow_fields;\r\n   +  for (auto node = fields; node; node = node->next) {\r\n   +    auto *field = GARROW_ARRAY(node->data);\r\n   +    arrow_fields.push_back(garrow_array_get_raw(field));\r\n   +  }\r\n   +  std::shared_ptr<arrow::Array> arrow_union_array;\r\n   +  auto status = arrow::UnionArray::MakeSparse(*arrow_type_ids,\r\n   +                                              arrow_fields,\r\n   +                                              arrow_field_names,\r\n   +                                              arrow_type_codes,\r\n   +                                              &arrow_union_array);\r\n   +  if (garrow_error_check(error,\r\n   +                         status,\r\n   +                         \"[sparse-union-array][new][data-type]\")) {\r\n   +    return GARROW_SPARSE_UNION_ARRAY(garrow_array_new_raw(&arrow_union_array));\r\n   +  } else {\r\n   +    return NULL;\r\n   +  }\r\n   +}\r\n   +\r\n    \r\n    G_DEFINE_TYPE(GArrowDenseUnionArray,\r\n                  garrow_dense_union_array,\r\n   diff --git a/c_glib/arrow-glib/composite-array.h b/c_glib/arrow-glib/composite-array.h\r\n   index a181ffcc..c65c1d66 100644\r\n   --- a/c_glib/arrow-glib/composite-array.h\r\n   +++ b/c_glib/arrow-glib/composite-array.h\r\n   @@ -108,6 +108,11 @@ GArrowSparseUnionArray *\r\n    garrow_sparse_union_array_new(GArrowInt8Array *type_ids,\r\n                                  GList *fields,\r\n                                  GError **error);\r\n   +GArrowSparseUnionArray *\r\n   +garrow_sparse_union_array_new_data_type(GArrowSparseUnionDataType *data_type,\r\n   +                                        GArrowInt8Array *type_ids,\r\n   +                                        GList *fields,\r\n   +                                        GError **error);\r\n    \r\n    \r\n    #define GARROW_TYPE_DENSE_UNION_ARRAY (garrow_dense_union_array_get_type())\r\n   diff --git a/c_glib/test/test-sparse-union-array.rb b/c_glib/test/test-sparse-union-array.rb\r\n   index 721f95c1..4a9e7c81 100644\r\n   --- a/c_glib/test/test-sparse-union-array.rb\r\n   +++ b/c_glib/test/test-sparse-union-array.rb\r\n   @@ -18,32 +18,69 @@\r\n    class TestSparseUnionArray < Test::Unit::TestCase\r\n      include Helper::Buildable\r\n    \r\n   -  def setup\r\n   -    type_ids = build_int8_array([0, 1, nil, 1, 0])\r\n   -    fields = [\r\n   -      build_int16_array([1, nil, nil, nil, 5]),\r\n   -      build_string_array([nil, \"b\", nil, \"d\", nil]),\r\n   -    ]\r\n   -    @array = Arrow::SparseUnionArray.new(type_ids, fields)\r\n   -  end\r\n   +  sub_test_case(\".new\") do\r\n   +    sub_test_case(\"default\") do\r\n   +      def setup\r\n   +        type_ids = build_int8_array([0, 1, nil, 1, 0])\r\n   +        fields = [\r\n   +          build_int16_array([1, nil, nil, nil, 5]),\r\n   +          build_string_array([nil, \"b\", nil, \"d\", nil]),\r\n   +        ]\r\n   +        @array = Arrow::SparseUnionArray.new(type_ids, fields)\r\n   +      end\r\n    \r\n   -  def test_value_data_type\r\n   -    fields = [\r\n   -      Arrow::Field.new(\"0\", Arrow::Int16DataType.new),\r\n   -      Arrow::Field.new(\"1\", Arrow::StringDataType.new),\r\n   -    ]\r\n   -    assert_equal(Arrow::SparseUnionDataType.new(fields, [0, 1]),\r\n   -                 @array.value_data_type)\r\n   -  end\r\n   +      def test_value_data_type\r\n   +        fields = [\r\n   +          Arrow::Field.new(\"0\", Arrow::Int16DataType.new),\r\n   +          Arrow::Field.new(\"1\", Arrow::StringDataType.new),\r\n   +        ]\r\n   +        assert_equal(Arrow::SparseUnionDataType.new(fields, [0, 1]),\r\n   +                     @array.value_data_type)\r\n   +      end\r\n    \r\n   -  def test_field\r\n   -    assert_equal([\r\n   -                   build_int16_array([1, nil, nil, nil, 5]),\r\n   -                   build_string_array([nil, \"b\", nil, \"d\", nil]),\r\n   -                 ],\r\n   -                 [\r\n   -                   @array.get_field(0),\r\n   -                   @array.get_field(1),\r\n   -                 ])\r\n   +      def test_field\r\n   +        assert_equal([\r\n   +                       build_int16_array([1, nil, nil, nil, 5]),\r\n   +                       build_string_array([nil, \"b\", nil, \"d\", nil]),\r\n   +                     ],\r\n   +                     [\r\n   +                       @array.get_field(0),\r\n   +                       @array.get_field(1),\r\n   +                     ])\r\n   +      end\r\n   +    end\r\n   +\r\n   +    sub_test_case(\"DataType\") do\r\n   +      def setup\r\n   +        data_type_fields = [\r\n   +          Arrow::Field.new(\"number\", Arrow::Int16DataType.new),\r\n   +          Arrow::Field.new(\"text\", Arrow::StringDataType.new),\r\n   +        ]\r\n   +        type_codes = [11, 13]\r\n   +        @data_type = Arrow::SparseUnionDataType.new(data_type_fields, type_codes)\r\n   +        type_ids = build_int8_array([0, 1, nil, 1, 0])\r\n   +        fields = [\r\n   +          build_int16_array([1, nil, nil, nil, 5]),\r\n   +          build_string_array([nil, \"b\", nil, \"d\", nil]),\r\n   +        ]\r\n   +        @array = Arrow::SparseUnionArray.new(@data_type, type_ids, fields)\r\n   +      end\r\n   +\r\n   +      def test_value_data_type\r\n   +        assert_equal(@data_type,\r\n   +                     @array.value_data_type)\r\n   +      end\r\n   +\r\n   +      def test_field\r\n   +        assert_equal([\r\n   +                       build_int16_array([1, nil, nil, nil, 5]),\r\n   +                       build_string_array([nil, \"b\", nil, \"d\", nil]),\r\n   +                     ],\r\n   +                     [\r\n   +                       @array.get_field(0),\r\n   +                       @array.get_field(1),\r\n   +                     ])\r\n   +      end\r\n   +    end\r\n      end\r\n    end\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-10T22:08:29.489+0000",
                    "updated": "2019-04-10T22:08:29.489+0000",
                    "started": "2019-04-10T22:08:29.488+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "225857",
                    "issueId": "13227078"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13227078/worklog/230638",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on pull request #4127: ARROW-5155: [GLib][Ruby]MakeDense and MakeSparse in UnionArray should accept a vector of Field\nURL: https://github.com/apache/arrow/pull/4127#discussion_r277248662\n \n \n\n ##########\n File path: c_glib/arrow-glib/composite-array.h\n ##########\n @@ -107,6 +107,10 @@ struct _GArrowSparseUnionArrayClass\n GArrowSparseUnionArray *\n garrow_sparse_union_array_new(GArrowInt8Array *type_ids,\n                               GList *fields,\n+                              gchar **field_names,\n+                              gsize n_field_names,\n+                              guint8 *type_codes,\n+                              gsize n_type_codes,\n \n Review comment:\n   OK.  I'll rewrite the code to do so.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-22T09:31:02.095+0000",
                    "updated": "2019-04-22T09:31:02.095+0000",
                    "started": "2019-04-22T09:31:02.094+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "230638",
                    "issueId": "13227078"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13227078/worklog/231816",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on issue #4127: ARROW-5155: [GLib][Ruby]MakeDense and MakeSparse in UnionArray should accept a vector of Field\nURL: https://github.com/apache/arrow/pull/4127#issuecomment-486032036\n \n \n   @kou It's ready to review again.  Please have a look.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-24T01:27:58.988+0000",
                    "updated": "2019-04-24T01:27:58.988+0000",
                    "started": "2019-04-24T01:27:58.987+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "231816",
                    "issueId": "13227078"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13227078/worklog/231826",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4127: ARROW-5155: [GLib][Ruby]MakeDense and MakeSparse in UnionArray should accept a vector of Field\nURL: https://github.com/apache/arrow/pull/4127#issuecomment-486039334\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4127?src=pr&el=h1) Report\n   > Merging [#4127](https://codecov.io/gh/apache/arrow/pull/4127?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/532450d9cdf7c33206ae9a6215d74b020b3f9e80?src=pr&el=desc) will **increase** coverage by `1.41%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4127/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4127?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4127      +/-   ##\n   ==========================================\n   + Coverage   87.77%   89.19%   +1.41%     \n   ==========================================\n     Files         758      617     -141     \n     Lines       92506    82196   -10310     \n     Branches     1251        0    -1251     \n   ==========================================\n   - Hits        81201    73312    -7889     \n   + Misses      11188     8884    -2304     \n   + Partials      117        0     -117\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4127?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [go/arrow/math/uint64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/4127/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYW1kNjQuZ28=) | | |\n   | [go/arrow/memory/memory\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/4127/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L21lbW9yeV9hdngyX2FtZDY0Lmdv) | | |\n   | [go/arrow/ipc/file\\_reader.go](https://codecov.io/gh/apache/arrow/pull/4127/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaXBjL2ZpbGVfcmVhZGVyLmdv) | | |\n   | [js/src/enum.ts](https://codecov.io/gh/apache/arrow/pull/4127/diff?src=pr&el=tree#diff-anMvc3JjL2VudW0udHM=) | | |\n   | [go/arrow/array/builder.go](https://codecov.io/gh/apache/arrow/pull/4127/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYnVpbGRlci5nbw==) | | |\n   | [js/src/Arrow.node.ts](https://codecov.io/gh/apache/arrow/pull/4127/diff?src=pr&el=tree#diff-anMvc3JjL0Fycm93Lm5vZGUudHM=) | | |\n   | [js/src/schema.ts](https://codecov.io/gh/apache/arrow/pull/4127/diff?src=pr&el=tree#diff-anMvc3JjL3NjaGVtYS50cw==) | | |\n   | [go/arrow/type\\_traits\\_boolean.go](https://codecov.io/gh/apache/arrow/pull/4127/diff?src=pr&el=tree#diff-Z28vYXJyb3cvdHlwZV90cmFpdHNfYm9vbGVhbi5nbw==) | | |\n   | [js/src/ipc/node/writer.ts](https://codecov.io/gh/apache/arrow/pull/4127/diff?src=pr&el=tree#diff-anMvc3JjL2lwYy9ub2RlL3dyaXRlci50cw==) | | |\n   | [js/src/visitor/vectorloader.ts](https://codecov.io/gh/apache/arrow/pull/4127/diff?src=pr&el=tree#diff-anMvc3JjL3Zpc2l0b3IvdmVjdG9ybG9hZGVyLnRz) | | |\n   | ... and [134 more](https://codecov.io/gh/apache/arrow/pull/4127/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4127?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4127?src=pr&el=footer). Last update [532450d...606a04c](https://codecov.io/gh/apache/arrow/pull/4127?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-24T02:08:52.843+0000",
                    "updated": "2019-04-24T02:08:52.843+0000",
                    "started": "2019-04-24T02:08:52.843+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "231826",
                    "issueId": "13227078"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13227078/worklog/231850",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #4127: ARROW-5155: [GLib][Ruby]MakeDense and MakeSparse in UnionArray should accept a vector of Field\nURL: https://github.com/apache/arrow/pull/4127#discussion_r277937295\n \n \n\n ##########\n File path: c_glib/arrow-glib/composite-array.cpp\n ##########\n @@ -420,6 +468,57 @@ garrow_dense_union_array_new(GArrowInt8Array *type_ids,\n   }\n }\n \n+/**\n+ * garrow_dense_union_array_new_data_type:\n+ * @data_type: The data type for the sparse array.\n \n Review comment:\n   \"sparse\" -> \"dense\"\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-24T03:12:18.827+0000",
                    "updated": "2019-04-24T03:12:18.827+0000",
                    "started": "2019-04-24T03:12:18.826+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "231850",
                    "issueId": "13227078"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13227078/worklog/231851",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #4127: ARROW-5155: [GLib][Ruby]MakeDense and MakeSparse in UnionArray should accept a vector of Field\nURL: https://github.com/apache/arrow/pull/4127#discussion_r277941830\n \n \n\n ##########\n File path: c_glib/test/test-sparse-union-array.rb\n ##########\n @@ -18,32 +18,67 @@\n class TestSparseUnionArray < Test::Unit::TestCase\n   include Helper::Buildable\n \n-  def setup\n-    type_ids = build_int8_array([0, 1, nil, 1, 0])\n-    fields = [\n-      build_int16_array([1, nil, nil, nil, 5]),\n-      build_string_array([nil, \"b\", nil, \"d\", nil]),\n-    ]\n-    @array = Arrow::SparseUnionArray.new(type_ids, fields)\n-  end\n+  sub_test_case(\".new\") do\n+    def setup\n+      type_ids = build_int8_array([0, 1, nil, 1, 0])\n+      fields = [\n+        build_int16_array([1, nil, nil, nil, 5]),\n+        build_string_array([nil, \"b\", nil, \"d\", nil]),\n+      ]\n+      @array = Arrow::SparseUnionArray.new(type_ids, fields)\n+    end\n+\n+    def test_value_data_type\n+      fields = [\n+        Arrow::Field.new(\"0\", Arrow::Int16DataType.new),\n+        Arrow::Field.new(\"1\", Arrow::StringDataType.new),\n+      ]\n+      assert_equal(Arrow::SparseUnionDataType.new(fields, [0, 1]),\n+                   @array.value_data_type)\n+    end\n \n-  def test_value_data_type\n-    fields = [\n-      Arrow::Field.new(\"0\", Arrow::Int16DataType.new),\n-      Arrow::Field.new(\"1\", Arrow::StringDataType.new),\n-    ]\n-    assert_equal(Arrow::SparseUnionDataType.new(fields, [0, 1]),\n-                 @array.value_data_type)\n+    def test_field\n+      assert_equal([\n+                     build_int16_array([1, nil, nil, nil, 5]),\n+                     build_string_array([nil, \"b\", nil, \"d\", nil]),\n+                   ],\n+                   [\n+                     @array.get_field(0),\n+                     @array.get_field(1),\n+                   ])\n+    end\n   end\n \n-  def test_field\n-    assert_equal([\n-                   build_int16_array([1, nil, nil, nil, 5]),\n-                   build_string_array([nil, \"b\", nil, \"d\", nil]),\n-                 ],\n-                 [\n-                   @array.get_field(0),\n-                   @array.get_field(1),\n-                 ])\n+  sub_test_case(\"DataType\") do\n+    def setup\n+      data_type_fields = [\n+        Arrow::Field.new(\"number\", Arrow::Int16DataType.new),\n+        Arrow::Field.new(\"text\", Arrow::StringDataType.new),\n+      ]\n+      type_codes = [11, 13]\n+      @data_type = Arrow::SparseUnionDataType.new(data_type_fields, type_codes)\n+      type_ids = build_int8_array([0, 1, nil, 1, 0])\n \n Review comment:\n   Is this right?\r\n   `[11, 13, nil, 13, 11]`?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-24T03:12:18.829+0000",
                    "updated": "2019-04-24T03:12:18.829+0000",
                    "started": "2019-04-24T03:12:18.829+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "231851",
                    "issueId": "13227078"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13227078/worklog/231852",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #4127: ARROW-5155: [GLib][Ruby]MakeDense and MakeSparse in UnionArray should accept a vector of Field\nURL: https://github.com/apache/arrow/pull/4127#discussion_r277938169\n \n \n\n ##########\n File path: c_glib/test/test-dense-union-array.rb\n ##########\n @@ -18,33 +18,69 @@\n class TestDenseUnionArray < Test::Unit::TestCase\n   include Helper::Buildable\n \n-  def setup\n-    type_ids = build_int8_array([0, 1, nil, 1, 1])\n-    value_offsets = build_int32_array([0, 0, 0, 1, 2])\n-    fields = [\n-      build_int16_array([1]),\n-      build_string_array([\"a\", \"b\", \"c\"]),\n-    ]\n-    @array = Arrow::DenseUnionArray.new(type_ids, value_offsets, fields)\n-  end\n+  sub_test_case(\".new\") do\n+    def setup\n \n Review comment:\n   Could you put more sub test cases under \".new\" sub test case?\r\n   \r\n   ```ruby\r\n   sub_test_case(\".new\") do\r\n     sub_test_case(\"default\") do # or \"no DataType\"?\r\n     end\r\n   \r\n     sub_test_case(\"DataType\") do\r\n     end\r\n   end\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-24T03:12:18.831+0000",
                    "updated": "2019-04-24T03:12:18.831+0000",
                    "started": "2019-04-24T03:12:18.831+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "231852",
                    "issueId": "13227078"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13227078/worklog/231853",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #4127: ARROW-5155: [GLib][Ruby]MakeDense and MakeSparse in UnionArray should accept a vector of Field\nURL: https://github.com/apache/arrow/pull/4127#discussion_r277941727\n \n \n\n ##########\n File path: c_glib/test/test-dense-union-array.rb\n ##########\n @@ -18,33 +18,69 @@\n class TestDenseUnionArray < Test::Unit::TestCase\n   include Helper::Buildable\n \n-  def setup\n-    type_ids = build_int8_array([0, 1, nil, 1, 1])\n-    value_offsets = build_int32_array([0, 0, 0, 1, 2])\n-    fields = [\n-      build_int16_array([1]),\n-      build_string_array([\"a\", \"b\", \"c\"]),\n-    ]\n-    @array = Arrow::DenseUnionArray.new(type_ids, value_offsets, fields)\n-  end\n+  sub_test_case(\".new\") do\n+    def setup\n+      type_ids = build_int8_array([0, 1, nil, 1, 1])\n+      value_offsets = build_int32_array([0, 0, 0, 1, 2])\n+      fields = [\n+        build_int16_array([1]),\n+        build_string_array([\"a\", \"b\", \"c\"]),\n+      ]\n+      @array = Arrow::DenseUnionArray.new(type_ids, value_offsets, fields)\n+    end\n+\n+    def test_value_data_type\n+      fields = [\n+        Arrow::Field.new(\"0\", Arrow::Int16DataType.new),\n+        Arrow::Field.new(\"1\", Arrow::StringDataType.new),\n+      ]\n+      assert_equal(Arrow::DenseUnionDataType.new(fields, [0, 1]),\n+                   @array.value_data_type)\n+    end\n \n-  def test_value_data_type\n-    fields = [\n-      Arrow::Field.new(\"0\", Arrow::Int16DataType.new),\n-      Arrow::Field.new(\"1\", Arrow::StringDataType.new),\n-    ]\n-    assert_equal(Arrow::DenseUnionDataType.new(fields, [0, 1]),\n-                 @array.value_data_type)\n+    def test_field\n+      assert_equal([\n+                     build_int16_array([1]),\n+                     build_string_array([\"a\", \"b\", \"c\"]),\n+                   ],\n+                   [\n+                     @array.get_field(0),\n+                     @array.get_field(1),\n+                   ])\n+    end\n   end\n \n-  def test_field\n-    assert_equal([\n-                   build_int16_array([1]),\n-                   build_string_array([\"a\", \"b\", \"c\"]),\n-                 ],\n-                 [\n-                   @array.get_field(0),\n-                   @array.get_field(1),\n-                 ])\n+  sub_test_case(\"DataType\") do\n+    def setup\n+      data_type_fields = [\n+        Arrow::Field.new(\"number\", Arrow::Int16DataType.new),\n+        Arrow::Field.new(\"text\", Arrow::StringDataType.new),\n+      ]\n+      type_codes = [11, 13]\n+      @data_type = Arrow::DenseUnionDataType.new(data_type_fields, type_codes)\n+      type_ids = build_int8_array([0, 1, nil, 1, 0])\n \n Review comment:\n   Is this right?\r\n   `[11, 13, nil, 13, 13]`?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-24T03:12:18.886+0000",
                    "updated": "2019-04-24T03:12:18.886+0000",
                    "started": "2019-04-24T03:12:18.885+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "231853",
                    "issueId": "13227078"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13227078/worklog/231854",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #4127: ARROW-5155: [GLib][Ruby]MakeDense and MakeSparse in UnionArray should accept a vector of Field\nURL: https://github.com/apache/arrow/pull/4127#discussion_r277937252\n \n \n\n ##########\n File path: c_glib/arrow-glib/composite-array.cpp\n ##########\n @@ -366,6 +366,54 @@ garrow_sparse_union_array_new(GArrowInt8Array *type_ids,\n   }\n }\n \n+/**\n+ * garrow_sparse_union_array_new_data_type:\n+ * @data_type: The data type for the sparse array.\n+ * @type_ids: The field type IDs for each value as #GArrowInt8Array.\n+ * @fields: (element-type GArrowArray): The arrays for each field\n+ *   as #GList of #GArrowArray.\n+ * @error: (nullable): Return location for a #GError or %NULL.\n+ *\n+ * Returns: (nullable): A newly created #GArrowSparseUnionArray\n+ *   or %NULL on error.\n+ *\n+ * Since: 0.14.0\n+ */\n+GArrowSparseUnionArray *\n+garrow_sparse_union_array_new_data_type(GArrowSparseUnionDataType *data_type,\n+                                        GArrowInt8Array *type_ids,\n+                                        GList *fields,\n+                                        GError **error)\n+{\n+  auto arrow_data_type = garrow_data_type_get_raw(GARROW_DATA_TYPE(data_type));\n+  auto arrow_union_data_type =\n+    std::static_pointer_cast<arrow::UnionType>(arrow_data_type);\n+  std::vector<std::string> arrow_field_names;\n+  for (const auto &arrow_field : arrow_union_data_type->children()) {\n+    arrow_field_names.push_back(arrow_field->name());\n+  }\n+  std::vector<uint8_t> arrow_type_codes(arrow_union_data_type->type_codes());\n \n Review comment:\n   Can we use `arrow_union_data_type->type_codes()` directly for `arrow::UnionArray::MakeSparse()` instead of copying it?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-24T03:12:21.858+0000",
                    "updated": "2019-04-24T03:12:21.858+0000",
                    "started": "2019-04-24T03:12:21.857+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "231854",
                    "issueId": "13227078"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13227078/worklog/232472",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on pull request #4127: ARROW-5155: [GLib][Ruby]MakeDense and MakeSparse in UnionArray should accept a vector of Field\nURL: https://github.com/apache/arrow/pull/4127#discussion_r278371777\n \n \n\n ##########\n File path: c_glib/test/test-dense-union-array.rb\n ##########\n @@ -18,33 +18,69 @@\n class TestDenseUnionArray < Test::Unit::TestCase\n   include Helper::Buildable\n \n-  def setup\n-    type_ids = build_int8_array([0, 1, nil, 1, 1])\n-    value_offsets = build_int32_array([0, 0, 0, 1, 2])\n-    fields = [\n-      build_int16_array([1]),\n-      build_string_array([\"a\", \"b\", \"c\"]),\n-    ]\n-    @array = Arrow::DenseUnionArray.new(type_ids, value_offsets, fields)\n-  end\n+  sub_test_case(\".new\") do\n+    def setup\n+      type_ids = build_int8_array([0, 1, nil, 1, 1])\n+      value_offsets = build_int32_array([0, 0, 0, 1, 2])\n+      fields = [\n+        build_int16_array([1]),\n+        build_string_array([\"a\", \"b\", \"c\"]),\n+      ]\n+      @array = Arrow::DenseUnionArray.new(type_ids, value_offsets, fields)\n+    end\n+\n+    def test_value_data_type\n+      fields = [\n+        Arrow::Field.new(\"0\", Arrow::Int16DataType.new),\n+        Arrow::Field.new(\"1\", Arrow::StringDataType.new),\n+      ]\n+      assert_equal(Arrow::DenseUnionDataType.new(fields, [0, 1]),\n+                   @array.value_data_type)\n+    end\n \n-  def test_value_data_type\n-    fields = [\n-      Arrow::Field.new(\"0\", Arrow::Int16DataType.new),\n-      Arrow::Field.new(\"1\", Arrow::StringDataType.new),\n-    ]\n-    assert_equal(Arrow::DenseUnionDataType.new(fields, [0, 1]),\n-                 @array.value_data_type)\n+    def test_field\n+      assert_equal([\n+                     build_int16_array([1]),\n+                     build_string_array([\"a\", \"b\", \"c\"]),\n+                   ],\n+                   [\n+                     @array.get_field(0),\n+                     @array.get_field(1),\n+                   ])\n+    end\n   end\n \n-  def test_field\n-    assert_equal([\n-                   build_int16_array([1]),\n-                   build_string_array([\"a\", \"b\", \"c\"]),\n-                 ],\n-                 [\n-                   @array.get_field(0),\n-                   @array.get_field(1),\n-                 ])\n+  sub_test_case(\"DataType\") do\n+    def setup\n+      data_type_fields = [\n+        Arrow::Field.new(\"number\", Arrow::Int16DataType.new),\n+        Arrow::Field.new(\"text\", Arrow::StringDataType.new),\n+      ]\n+      type_codes = [11, 13]\n+      @data_type = Arrow::DenseUnionDataType.new(data_type_fields, type_codes)\n+      type_ids = build_int8_array([0, 1, nil, 1, 0])\n \n Review comment:\n   Yes, type ids must be `[11, 13, nil, 13, 11]`.\r\n   But, it doesn't affect the tests so I couldn't notice the mistake.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-25T01:32:23.847+0000",
                    "updated": "2019-04-25T01:32:23.847+0000",
                    "started": "2019-04-25T01:32:23.846+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "232472",
                    "issueId": "13227078"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13227078/worklog/232474",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on issue #4127: ARROW-5155: [GLib][Ruby]MakeDense and MakeSparse in UnionArray should accept a vector of Field\nURL: https://github.com/apache/arrow/pull/4127#issuecomment-486486288\n \n \n   @kou I've done to fix code for your comments.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-25T01:34:22.644+0000",
                    "updated": "2019-04-25T01:34:22.644+0000",
                    "started": "2019-04-25T01:34:22.644+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "232474",
                    "issueId": "13227078"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13227078/worklog/232492",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4127: ARROW-5155: [GLib][Ruby]MakeDense and MakeSparse in UnionArray should accept a vector of Field\nURL: https://github.com/apache/arrow/pull/4127#issuecomment-486039334\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4127?src=pr&el=h1) Report\n   > Merging [#4127](https://codecov.io/gh/apache/arrow/pull/4127?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/532450d9cdf7c33206ae9a6215d74b020b3f9e80?src=pr&el=desc) will **increase** coverage by `1.4%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4127/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4127?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4127      +/-   ##\n   ==========================================\n   + Coverage   87.77%   89.18%    +1.4%     \n   ==========================================\n     Files         758      617     -141     \n     Lines       92506    82202   -10304     \n     Branches     1251        0    -1251     \n   ==========================================\n   - Hits        81201    73313    -7888     \n   + Misses      11188     8889    -2299     \n   + Partials      117        0     -117\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4127?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/plasma/thirdparty/ae/ae.c](https://codecov.io/gh/apache/arrow/pull/4127/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGhpcmRwYXJ0eS9hZS9hZS5j) | `70.75% <0%> (-0.95%)` | :arrow_down: |\n   | [python/pyarrow/\\_plasma.pyx](https://codecov.io/gh/apache/arrow/pull/4127/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvX3BsYXNtYS5weXg=) | `91.27% <0%> (-0.06%)` | :arrow_down: |\n   | [python/pyarrow/pandas\\_compat.py](https://codecov.io/gh/apache/arrow/pull/4127/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvcGFuZGFzX2NvbXBhdC5weQ==) | `96.7% <0%> (-0.01%)` | :arrow_down: |\n   | [python/pyarrow/\\_csv.pyx](https://codecov.io/gh/apache/arrow/pull/4127/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvX2Nzdi5weXg=) | `99.15% <0%> (-0.01%)` | :arrow_down: |\n   | [cpp/src/arrow/array-test.cc](https://codecov.io/gh/apache/arrow/pull/4127/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hcnJheS10ZXN0LmNj) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/tests/test\\_array.py](https://codecov.io/gh/apache/arrow/pull/4127/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9hcnJheS5weQ==) | `96.79% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/array-binary-test.cc](https://codecov.io/gh/apache/arrow/pull/4127/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hcnJheS1iaW5hcnktdGVzdC5jYw==) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/types.pxi](https://codecov.io/gh/apache/arrow/pull/4127/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdHlwZXMucHhp) | `69.27% <0%> (\u00f8)` | :arrow_up: |\n   | [go/arrow/math/uint64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/4127/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYW1kNjQuZ28=) | | |\n   | [go/arrow/memory/memory\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/4127/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L21lbW9yeV9hdngyX2FtZDY0Lmdv) | | |\n   | ... and [144 more](https://codecov.io/gh/apache/arrow/pull/4127/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4127?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4127?src=pr&el=footer). Last update [532450d...f82ac3d](https://codecov.io/gh/apache/arrow/pull/4127?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-25T02:16:04.116+0000",
                    "updated": "2019-04-25T02:16:04.116+0000",
                    "started": "2019-04-25T02:16:04.115+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "232492",
                    "issueId": "13227078"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13227078/worklog/232499",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #4127: ARROW-5155: [GLib][Ruby]MakeDense and MakeSparse in UnionArray should accept a vector of Field\nURL: https://github.com/apache/arrow/pull/4127#discussion_r278378206\n \n \n\n ##########\n File path: c_glib/test/test-dense-union-array.rb\n ##########\n @@ -18,33 +18,71 @@\n class TestDenseUnionArray < Test::Unit::TestCase\n   include Helper::Buildable\n \n-  def setup\n-    type_ids = build_int8_array([0, 1, nil, 1, 1])\n-    value_offsets = build_int32_array([0, 0, 0, 1, 2])\n-    fields = [\n-      build_int16_array([1]),\n-      build_string_array([\"a\", \"b\", \"c\"]),\n-    ]\n-    @array = Arrow::DenseUnionArray.new(type_ids, value_offsets, fields)\n-  end\n+  sub_test_case(\".new\") do\n+    sub_test_case(\"default\") do\n+      def setup\n+        type_ids = build_int8_array([0, 1, nil, 1, 1])\n+        value_offsets = build_int32_array([0, 0, 0, 1, 2])\n+        fields = [\n+          build_int16_array([1]),\n+          build_string_array([\"a\", \"b\", \"c\"]),\n+        ]\n+        @array = Arrow::DenseUnionArray.new(type_ids, value_offsets, fields)\n+      end\n \n-  def test_value_data_type\n-    fields = [\n-      Arrow::Field.new(\"0\", Arrow::Int16DataType.new),\n-      Arrow::Field.new(\"1\", Arrow::StringDataType.new),\n-    ]\n-    assert_equal(Arrow::DenseUnionDataType.new(fields, [0, 1]),\n-                 @array.value_data_type)\n-  end\n+      def test_value_data_type\n+        fields = [\n+          Arrow::Field.new(\"0\", Arrow::Int16DataType.new),\n+          Arrow::Field.new(\"1\", Arrow::StringDataType.new),\n+        ]\n+        assert_equal(Arrow::DenseUnionDataType.new(fields, [0, 1]),\n+                     @array.value_data_type)\n+      end\n+\n+      def test_field\n+        assert_equal([\n+                       build_int16_array([1]),\n+                       build_string_array([\"a\", \"b\", \"c\"]),\n+                     ],\n+                     [\n+                       @array.get_field(0),\n+                       @array.get_field(1),\n+                     ])\n+      end\n+    end\n+\n+    sub_test_case(\"DataType\") do\n+      def setup\n+        data_type_fields = [\n+          Arrow::Field.new(\"number\", Arrow::Int16DataType.new),\n+          Arrow::Field.new(\"text\", Arrow::StringDataType.new),\n+        ]\n+        type_codes = [11, 13]\n+        @data_type = Arrow::DenseUnionDataType.new(data_type_fields, type_codes)\n+        type_ids = build_int8_array([11, 13, nil, 11, 13])\n \n Review comment:\n   `[11, 13, nil, 11, 13]` should be `[11, 13, nil, 13, 13]` because `number` field only has one element and `text` field has three elements.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-25T02:25:51.233+0000",
                    "updated": "2019-04-25T02:25:51.233+0000",
                    "started": "2019-04-25T02:25:51.232+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "232499",
                    "issueId": "13227078"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13227078/worklog/232501",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on pull request #4127: ARROW-5155: [GLib][Ruby]MakeDense and MakeSparse in UnionArray should accept a vector of Field\nURL: https://github.com/apache/arrow/pull/4127#discussion_r278378528\n \n \n\n ##########\n File path: c_glib/test/test-dense-union-array.rb\n ##########\n @@ -18,33 +18,71 @@\n class TestDenseUnionArray < Test::Unit::TestCase\n   include Helper::Buildable\n \n-  def setup\n-    type_ids = build_int8_array([0, 1, nil, 1, 1])\n-    value_offsets = build_int32_array([0, 0, 0, 1, 2])\n-    fields = [\n-      build_int16_array([1]),\n-      build_string_array([\"a\", \"b\", \"c\"]),\n-    ]\n-    @array = Arrow::DenseUnionArray.new(type_ids, value_offsets, fields)\n-  end\n+  sub_test_case(\".new\") do\n+    sub_test_case(\"default\") do\n+      def setup\n+        type_ids = build_int8_array([0, 1, nil, 1, 1])\n+        value_offsets = build_int32_array([0, 0, 0, 1, 2])\n+        fields = [\n+          build_int16_array([1]),\n+          build_string_array([\"a\", \"b\", \"c\"]),\n+        ]\n+        @array = Arrow::DenseUnionArray.new(type_ids, value_offsets, fields)\n+      end\n \n-  def test_value_data_type\n-    fields = [\n-      Arrow::Field.new(\"0\", Arrow::Int16DataType.new),\n-      Arrow::Field.new(\"1\", Arrow::StringDataType.new),\n-    ]\n-    assert_equal(Arrow::DenseUnionDataType.new(fields, [0, 1]),\n-                 @array.value_data_type)\n-  end\n+      def test_value_data_type\n+        fields = [\n+          Arrow::Field.new(\"0\", Arrow::Int16DataType.new),\n+          Arrow::Field.new(\"1\", Arrow::StringDataType.new),\n+        ]\n+        assert_equal(Arrow::DenseUnionDataType.new(fields, [0, 1]),\n+                     @array.value_data_type)\n+      end\n+\n+      def test_field\n+        assert_equal([\n+                       build_int16_array([1]),\n+                       build_string_array([\"a\", \"b\", \"c\"]),\n+                     ],\n+                     [\n+                       @array.get_field(0),\n+                       @array.get_field(1),\n+                     ])\n+      end\n+    end\n+\n+    sub_test_case(\"DataType\") do\n+      def setup\n+        data_type_fields = [\n+          Arrow::Field.new(\"number\", Arrow::Int16DataType.new),\n+          Arrow::Field.new(\"text\", Arrow::StringDataType.new),\n+        ]\n+        type_codes = [11, 13]\n+        @data_type = Arrow::DenseUnionDataType.new(data_type_fields, type_codes)\n+        type_ids = build_int8_array([11, 13, nil, 11, 13])\n \n Review comment:\n   !!\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-25T02:26:50.683+0000",
                    "updated": "2019-04-25T02:26:50.683+0000",
                    "started": "2019-04-25T02:26:50.682+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "232501",
                    "issueId": "13227078"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13227078/worklog/232502",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #4127: ARROW-5155: [GLib][Ruby]MakeDense and MakeSparse in UnionArray should accept a vector of Field\nURL: https://github.com/apache/arrow/pull/4127#discussion_r278378917\n \n \n\n ##########\n File path: c_glib/test/test-dense-union-array.rb\n ##########\n @@ -18,33 +18,69 @@\n class TestDenseUnionArray < Test::Unit::TestCase\n   include Helper::Buildable\n \n-  def setup\n-    type_ids = build_int8_array([0, 1, nil, 1, 1])\n-    value_offsets = build_int32_array([0, 0, 0, 1, 2])\n-    fields = [\n-      build_int16_array([1]),\n-      build_string_array([\"a\", \"b\", \"c\"]),\n-    ]\n-    @array = Arrow::DenseUnionArray.new(type_ids, value_offsets, fields)\n-  end\n+  sub_test_case(\".new\") do\n+    def setup\n+      type_ids = build_int8_array([0, 1, nil, 1, 1])\n+      value_offsets = build_int32_array([0, 0, 0, 1, 2])\n+      fields = [\n+        build_int16_array([1]),\n+        build_string_array([\"a\", \"b\", \"c\"]),\n+      ]\n+      @array = Arrow::DenseUnionArray.new(type_ids, value_offsets, fields)\n+    end\n+\n+    def test_value_data_type\n+      fields = [\n+        Arrow::Field.new(\"0\", Arrow::Int16DataType.new),\n+        Arrow::Field.new(\"1\", Arrow::StringDataType.new),\n+      ]\n+      assert_equal(Arrow::DenseUnionDataType.new(fields, [0, 1]),\n+                   @array.value_data_type)\n+    end\n \n-  def test_value_data_type\n-    fields = [\n-      Arrow::Field.new(\"0\", Arrow::Int16DataType.new),\n-      Arrow::Field.new(\"1\", Arrow::StringDataType.new),\n-    ]\n-    assert_equal(Arrow::DenseUnionDataType.new(fields, [0, 1]),\n-                 @array.value_data_type)\n+    def test_field\n+      assert_equal([\n+                     build_int16_array([1]),\n+                     build_string_array([\"a\", \"b\", \"c\"]),\n+                   ],\n+                   [\n+                     @array.get_field(0),\n+                     @array.get_field(1),\n+                   ])\n+    end\n   end\n \n-  def test_field\n-    assert_equal([\n-                   build_int16_array([1]),\n-                   build_string_array([\"a\", \"b\", \"c\"]),\n-                 ],\n-                 [\n-                   @array.get_field(0),\n-                   @array.get_field(1),\n-                 ])\n+  sub_test_case(\"DataType\") do\n+    def setup\n+      data_type_fields = [\n+        Arrow::Field.new(\"number\", Arrow::Int16DataType.new),\n+        Arrow::Field.new(\"text\", Arrow::StringDataType.new),\n+      ]\n+      type_codes = [11, 13]\n+      @data_type = Arrow::DenseUnionDataType.new(data_type_fields, type_codes)\n+      type_ids = build_int8_array([0, 1, nil, 1, 0])\n \n Review comment:\n   We should add element accessor to union arrays and test union array values later.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-25T02:29:36.995+0000",
                    "updated": "2019-04-25T02:29:36.995+0000",
                    "started": "2019-04-25T02:29:36.994+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "232502",
                    "issueId": "13227078"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13227078/worklog/232508",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4127: ARROW-5155: [GLib][Ruby]MakeDense and MakeSparse in UnionArray should accept a vector of Field\nURL: https://github.com/apache/arrow/pull/4127#issuecomment-486039334\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4127?src=pr&el=h1) Report\n   > Merging [#4127](https://codecov.io/gh/apache/arrow/pull/4127?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/532450d9cdf7c33206ae9a6215d74b020b3f9e80?src=pr&el=desc) will **increase** coverage by `1.4%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4127/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4127?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4127      +/-   ##\n   ==========================================\n   + Coverage   87.77%   89.18%    +1.4%     \n   ==========================================\n     Files         758      617     -141     \n     Lines       92506    82202   -10304     \n     Branches     1251        0    -1251     \n   ==========================================\n   - Hits        81201    73315    -7886     \n   + Misses      11188     8887    -2301     \n   + Partials      117        0     -117\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4127?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [python/pyarrow/\\_plasma.pyx](https://codecov.io/gh/apache/arrow/pull/4127/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvX3BsYXNtYS5weXg=) | `91.27% <0%> (-0.06%)` | :arrow_down: |\n   | [python/pyarrow/pandas\\_compat.py](https://codecov.io/gh/apache/arrow/pull/4127/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvcGFuZGFzX2NvbXBhdC5weQ==) | `96.7% <0%> (-0.01%)` | :arrow_down: |\n   | [python/pyarrow/\\_csv.pyx](https://codecov.io/gh/apache/arrow/pull/4127/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvX2Nzdi5weXg=) | `99.15% <0%> (-0.01%)` | :arrow_down: |\n   | [cpp/src/arrow/array-test.cc](https://codecov.io/gh/apache/arrow/pull/4127/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hcnJheS10ZXN0LmNj) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/tests/test\\_array.py](https://codecov.io/gh/apache/arrow/pull/4127/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9hcnJheS5weQ==) | `96.79% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/array-binary-test.cc](https://codecov.io/gh/apache/arrow/pull/4127/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hcnJheS1iaW5hcnktdGVzdC5jYw==) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/types.pxi](https://codecov.io/gh/apache/arrow/pull/4127/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdHlwZXMucHhp) | `69.27% <0%> (\u00f8)` | :arrow_up: |\n   | [go/arrow/math/uint64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/4127/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYW1kNjQuZ28=) | | |\n   | [go/arrow/memory/memory\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/4127/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L21lbW9yeV9hdngyX2FtZDY0Lmdv) | | |\n   | [go/arrow/ipc/file\\_reader.go](https://codecov.io/gh/apache/arrow/pull/4127/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaXBjL2ZpbGVfcmVhZGVyLmdv) | | |\n   | ... and [143 more](https://codecov.io/gh/apache/arrow/pull/4127/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4127?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4127?src=pr&el=footer). Last update [532450d...e625556](https://codecov.io/gh/apache/arrow/pull/4127?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-25T03:11:36.167+0000",
                    "updated": "2019-04-25T03:11:36.167+0000",
                    "started": "2019-04-25T03:11:36.167+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "232508",
                    "issueId": "13227078"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13227078/worklog/232598",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #4127: ARROW-5155: [GLib][Ruby] Add support for building union arrays from data type\nURL: https://github.com/apache/arrow/pull/4127\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-25T06:36:29.967+0000",
                    "updated": "2019-04-25T06:36:29.967+0000",
                    "started": "2019-04-25T06:36:29.966+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "232598",
                    "issueId": "13227078"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13227078/worklog/232600",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on pull request #4127: ARROW-5155: [GLib][Ruby] Add support for building union arrays from data type\nURL: https://github.com/apache/arrow/pull/4127#discussion_r278411900\n \n \n\n ##########\n File path: c_glib/test/test-dense-union-array.rb\n ##########\n @@ -18,33 +18,69 @@\n class TestDenseUnionArray < Test::Unit::TestCase\n   include Helper::Buildable\n \n-  def setup\n-    type_ids = build_int8_array([0, 1, nil, 1, 1])\n-    value_offsets = build_int32_array([0, 0, 0, 1, 2])\n-    fields = [\n-      build_int16_array([1]),\n-      build_string_array([\"a\", \"b\", \"c\"]),\n-    ]\n-    @array = Arrow::DenseUnionArray.new(type_ids, value_offsets, fields)\n-  end\n+  sub_test_case(\".new\") do\n+    def setup\n+      type_ids = build_int8_array([0, 1, nil, 1, 1])\n+      value_offsets = build_int32_array([0, 0, 0, 1, 2])\n+      fields = [\n+        build_int16_array([1]),\n+        build_string_array([\"a\", \"b\", \"c\"]),\n+      ]\n+      @array = Arrow::DenseUnionArray.new(type_ids, value_offsets, fields)\n+    end\n+\n+    def test_value_data_type\n+      fields = [\n+        Arrow::Field.new(\"0\", Arrow::Int16DataType.new),\n+        Arrow::Field.new(\"1\", Arrow::StringDataType.new),\n+      ]\n+      assert_equal(Arrow::DenseUnionDataType.new(fields, [0, 1]),\n+                   @array.value_data_type)\n+    end\n \n-  def test_value_data_type\n-    fields = [\n-      Arrow::Field.new(\"0\", Arrow::Int16DataType.new),\n-      Arrow::Field.new(\"1\", Arrow::StringDataType.new),\n-    ]\n-    assert_equal(Arrow::DenseUnionDataType.new(fields, [0, 1]),\n-                 @array.value_data_type)\n+    def test_field\n+      assert_equal([\n+                     build_int16_array([1]),\n+                     build_string_array([\"a\", \"b\", \"c\"]),\n+                   ],\n+                   [\n+                     @array.get_field(0),\n+                     @array.get_field(1),\n+                   ])\n+    end\n   end\n \n-  def test_field\n-    assert_equal([\n-                   build_int16_array([1]),\n-                   build_string_array([\"a\", \"b\", \"c\"]),\n-                 ],\n-                 [\n-                   @array.get_field(0),\n-                   @array.get_field(1),\n-                 ])\n+  sub_test_case(\"DataType\") do\n+    def setup\n+      data_type_fields = [\n+        Arrow::Field.new(\"number\", Arrow::Int16DataType.new),\n+        Arrow::Field.new(\"text\", Arrow::StringDataType.new),\n+      ]\n+      type_codes = [11, 13]\n+      @data_type = Arrow::DenseUnionDataType.new(data_type_fields, type_codes)\n+      type_ids = build_int8_array([0, 1, nil, 1, 0])\n \n Review comment:\n   I understand it.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-25T06:39:35.161+0000",
                    "updated": "2019-04-25T06:39:35.161+0000",
                    "started": "2019-04-25T06:39:35.160+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "232600",
                    "issueId": "13227078"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 10200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@3200a888[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5990dd11[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@798c5a9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@58bfe81e[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@38915bd3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@53ef865a[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@129bb403[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@35c34156[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7becbfe[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@284c4005[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6738d2a3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@48dee6e3[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 10200,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Apr 25 06:36:19 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-04-25T06:36:19.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5155/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-04-10T01:42:11.000+0000",
        "updated": "2019-04-25T06:39:35.000+0000",
        "timeoriginalestimate": null,
        "description": "This is a derivative issue\u00a0of\u00a0https://issues.apache.org/jira/browse/ARROW-4622",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 10200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[GLib][Ruby] Add support for building union arrays from data type",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13227078/comment/16825778",
                    "id": "16825778",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "body": "Issue resolved by pull request 4127\n[https://github.com/apache/arrow/pull/4127]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "created": "2019-04-25T06:36:19.938+0000",
                    "updated": "2019-04-25T06:36:19.938+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z01me8:",
        "customfield_12314139": null
    }
}