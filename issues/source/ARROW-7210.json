{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13269365",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13269365",
    "key": "ARROW-7210",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12340948",
                "id": "12340948",
                "description": "",
                "name": "0.16.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-02-07"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
            "name": "fsaintjacques",
            "key": "fsaintjacques",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
            },
            "displayName": "Francois Saint-Jacques",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
            "name": "fsaintjacques",
            "key": "fsaintjacques",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
            },
            "displayName": "Francois Saint-Jacques",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
            "name": "fsaintjacques",
            "key": "fsaintjacques",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
            },
            "displayName": "Francois Saint-Jacques",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 12000,
            "total": 12000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 12000,
            "total": 12000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7210/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 22,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13269365/worklog/350730",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5921: ARROW-7210: [C++][R] Allow Numeric <-> Temporal casts\nURL: https://github.com/apache/arrow/pull/5921\n \n \n   The end goal of this PR is to minimally support filtering in R on\r\n   temporal columns.\r\n   \r\n   - Refactor Scalar classes\r\n     - Follow the same hierarchy as the type hierarchy.\r\n     - Provide 2 constructor for each Scalar, one for constructing a Null value and one providing an explicit value. The is_valid flag is not required by caller anymore.\r\n     - All scalar types provide a non failing null constructor, i.e MakeNullScalar will not fail.\r\n     - Ensure that we can cast from a NumericScalar to a TemporalScalar\r\n   \r\n   - Add R unit test\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-27T23:41:41.435+0000",
                    "updated": "2019-11-27T23:41:41.435+0000",
                    "started": "2019-11-27T23:41:41.434+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "350730",
                    "issueId": "13269365"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13269365/worklog/350740",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #5921: ARROW-7210: [C++][R] Allow Numeric <-> Temporal Scalar casts\nURL: https://github.com/apache/arrow/pull/5921#issuecomment-559292087\n \n \n   https://issues.apache.org/jira/browse/ARROW-7210\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-28T00:09:39.295+0000",
                    "updated": "2019-11-28T00:09:39.295+0000",
                    "started": "2019-11-28T00:09:39.294+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "350740",
                    "issueId": "13269365"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13269365/worklog/350791",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #5921: ARROW-7210: [C++][R] Allow Numeric <-> Temporal Scalar casts\nURL: https://github.com/apache/arrow/pull/5921#issuecomment-559287756\n \n \n   <!--\n     Licensed to the Apache Software Foundation (ASF) under one\n     or more contributor license agreements.  See the NOTICE file\n     distributed with this work for additional information\n     regarding copyright ownership.  The ASF licenses this file\n     to you under the Apache License, Version 2.0 (the\n     \"License\"); you may not use this file except in compliance\n     with the License.  You may obtain a copy of the License at\n   \n       http://www.apache.org/licenses/LICENSE-2.0\n   \n     Unless required by applicable law or agreed to in writing,\n     software distributed under the License is distributed on an\n     \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n     KIND, either express or implied.  See the License for the\n     specific language governing permissions and limitations\n     under the License.\n   -->\n   \n   Thanks for opening a pull request!\n   \n   Could you open an issue for this pull request on JIRA?\n   https://issues.apache.org/jira/browse/ARROW\n   \n   Then could you also rename pull request title in the following format?\n   \n       ARROW-${JIRA_ID}: [${COMPONENT}] ${SUMMARY}\n   \n   See also:\n   \n     * [Other pull requests](https://github.com/apache/arrow/pulls/)\n     * [Contribution Guidelines - How to contribute patches](https://arrow.apache.org/docs/developers/contributing.html#how-to-contribute-patches)\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-28T02:02:19.503+0000",
                    "updated": "2019-11-28T02:02:19.503+0000",
                    "started": "2019-11-28T02:02:19.502+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "350791",
                    "issueId": "13269365"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13269365/worklog/352711",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5921: ARROW-7210: [C++][R] Allow Numeric <-> Temporal Scalar casts\nURL: https://github.com/apache/arrow/pull/5921#discussion_r353242282\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/filter.cc\n ##########\n @@ -846,6 +846,16 @@ Result<std::shared_ptr<DataType>> CastExpression::Validate(const Schema& schema)\n     ARROW_ASSIGN_OR_RAISE(to_type, like->Validate(schema));\n   }\n \n+  // Until expressions carry a shape, detect scalar and try to cast it. Works\n+  // if the operand is a scalar leaf.\n+  if (operand_->type() == ExpressionType::SCALAR) {\n+    auto scalar_expr = checked_pointer_cast<ScalarExpression>(operand_);\n+    auto result = scalar_expr->value()->CastTo(to_type);\n \n Review comment:\n   ```suggestion\r\n       // Test if the cast is implemented.\r\n       ARROW_ASSIGN_OR_RAISE(std::ignore, scalar_expr->value()->CastTo(to_type));\r\n       return to_type;\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-03T15:48:41.679+0000",
                    "updated": "2019-12-03T15:48:41.679+0000",
                    "started": "2019-12-03T15:48:41.679+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "352711",
                    "issueId": "13269365"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13269365/worklog/352712",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5921: ARROW-7210: [C++][R] Allow Numeric <-> Temporal Scalar casts\nURL: https://github.com/apache/arrow/pull/5921#discussion_r353244009\n \n \n\n ##########\n File path: cpp/src/arrow/scalar.cc\n ##########\n @@ -39,114 +39,67 @@ using internal::checked_pointer_cast;\n \n bool Scalar::Equals(const Scalar& other) const { return ScalarEquals(*this, other); }\n \n-Time32Scalar::Time32Scalar(int32_t value, const std::shared_ptr<DataType>& type,\n-                           bool is_valid)\n-    : internal::PrimitiveScalar{type, is_valid}, value(value) {\n-  ARROW_CHECK_EQ(Type::TIME32, type->id());\n-}\n-\n-Time64Scalar::Time64Scalar(int64_t value, const std::shared_ptr<DataType>& type,\n-                           bool is_valid)\n-    : internal::PrimitiveScalar{type, is_valid}, value(value) {\n-  ARROW_CHECK_EQ(Type::TIME64, type->id());\n-}\n-\n-TimestampScalar::TimestampScalar(int64_t value, const std::shared_ptr<DataType>& type,\n-                                 bool is_valid)\n-    : internal::PrimitiveScalar{type, is_valid}, value(value) {\n-  ARROW_CHECK_EQ(Type::TIMESTAMP, type->id());\n-}\n-\n-DurationScalar::DurationScalar(int64_t value, const std::shared_ptr<DataType>& type,\n-                               bool is_valid)\n-    : internal::PrimitiveScalar{type, is_valid}, value(value) {\n-  DCHECK_EQ(Type::DURATION, type->id());\n-}\n-\n-MonthIntervalScalar::MonthIntervalScalar(int32_t value, bool is_valid)\n-    : internal::PrimitiveScalar{month_interval(), is_valid}, value(value) {}\n-\n-MonthIntervalScalar::MonthIntervalScalar(int32_t value,\n-                                         const std::shared_ptr<DataType>& type,\n-                                         bool is_valid)\n-    : internal::PrimitiveScalar{type, is_valid}, value(value) {\n-  DCHECK_EQ(Type::INTERVAL, type->id());\n-  DCHECK_EQ(IntervalType::MONTHS,\n-            checked_cast<IntervalType*>(type.get())->interval_type());\n-}\n-\n-DayTimeIntervalScalar::DayTimeIntervalScalar(DayTimeIntervalType::DayMilliseconds value,\n-                                             bool is_valid)\n-    : internal::PrimitiveScalar{day_time_interval(), is_valid}, value(value) {}\n-\n-DayTimeIntervalScalar::DayTimeIntervalScalar(DayTimeIntervalType::DayMilliseconds value,\n-                                             const std::shared_ptr<DataType>& type,\n-                                             bool is_valid)\n-    : internal::PrimitiveScalar{type, is_valid}, value(value) {\n-  DCHECK_EQ(Type::INTERVAL, type->id());\n-  DCHECK_EQ(IntervalType::DAY_TIME,\n-            checked_cast<IntervalType*>(type.get())->interval_type());\n-}\n-\n StringScalar::StringScalar(std::string s)\n-    : StringScalar(Buffer::FromString(std::move(s)), true) {}\n+    : StringScalar(Buffer::FromString(std::move(s))) {}\n \n FixedSizeBinaryScalar::FixedSizeBinaryScalar(const std::shared_ptr<Buffer>& value,\n-                                             const std::shared_ptr<DataType>& type,\n-                                             bool is_valid)\n-    : BinaryScalar(value, type, is_valid) {\n+                                             const std::shared_ptr<DataType>& type)\n+    : BinaryScalar(value, type) {\n   ARROW_CHECK_EQ(checked_cast<const FixedSizeBinaryType&>(*type).byte_width(),\n                  value->size());\n }\n \n-Decimal128Scalar::Decimal128Scalar(const Decimal128& value,\n-                                   const std::shared_ptr<DataType>& type, bool is_valid)\n-    : Scalar{type, is_valid}, value(value) {}\n-\n BaseListScalar::BaseListScalar(const std::shared_ptr<Array>& value,\n-                               const std::shared_ptr<DataType>& type, bool is_valid)\n-    : Scalar{type, is_valid}, value(value) {}\n+                               const std::shared_ptr<DataType>& type)\n+    : Scalar{type, true}, value(value) {}\n \n-BaseListScalar::BaseListScalar(const std::shared_ptr<Array>& value, bool is_valid)\n-    : BaseListScalar(value, value->type(), is_valid) {}\n+BaseListScalar::BaseListScalar(const std::shared_ptr<Array>& value)\n+    : BaseListScalar(value, value->type()) {}\n \n FixedSizeListScalar::FixedSizeListScalar(const std::shared_ptr<Array>& value,\n-                                         const std::shared_ptr<DataType>& type,\n-                                         bool is_valid)\n-    : BaseListScalar(value, type, is_valid) {\n+                                         const std::shared_ptr<DataType>& type)\n+    : BaseListScalar(value, type) {\n   ARROW_CHECK_EQ(value->length(),\n                  checked_cast<const FixedSizeListType*>(type.get())->list_size());\n }\n \n+template <typename T>\n+using scalar_constructor_has_arrow_type =\n+    std::is_constructible<typename TypeTraits<T>::ScalarType, std::shared_ptr<DataType>>;\n+\n+template <typename T, typename R = void>\n+using enable_if_scalar_constructor_has_arrow_type =\n+    typename std::enable_if<scalar_constructor_has_arrow_type<T>::value, R>::type;\n+\n+template <typename T, typename R = void>\n+using enable_if_scalar_constructor_has_no_arrow_type =\n+    typename std::enable_if<!scalar_constructor_has_arrow_type<T>::value, R>::type;\n+\n // TODO(bkietz) This doesn't need a factory. Just rewrite all scalars to be generically\n \n Review comment:\n   This comment can be removed now\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-03T15:48:41.813+0000",
                    "updated": "2019-12-03T15:48:41.813+0000",
                    "started": "2019-12-03T15:48:41.812+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "352712",
                    "issueId": "13269365"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13269365/worklog/352713",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5921: ARROW-7210: [C++][R] Allow Numeric <-> Temporal Scalar casts\nURL: https://github.com/apache/arrow/pull/5921#discussion_r353246046\n \n \n\n ##########\n File path: cpp/src/arrow/scalar.cc\n ##########\n @@ -241,6 +194,32 @@ Status CastImpl(const BooleanScalar& from, NumericScalar<T>* to) {\n   return Status::OK();\n }\n \n+// numeric to temporal\n+template <typename From, typename To>\n+typename std::enable_if<std::is_base_of<TemporalType, To>::value &&\n+                            !std::is_same<DayTimeIntervalType, To>::value,\n+                        Status>::type\n+CastImpl(const NumericScalar<From>& from, TemporalScalar<To>* to) {\n+  to->value = static_cast<typename To::c_type>(from.value);\n+  return Status::OK();\n+}\n+\n+// temporal to numeric\n+template <typename From, typename To>\n+typename std::enable_if<std::is_base_of<TemporalType, From>::value &&\n+                            !std::is_same<DayTimeIntervalType, From>::value,\n+                        Status>::type\n+CastImpl(const TemporalScalar<From>& from, NumericScalar<To>* to) {\n+  to->value = static_cast<typename To::c_type>(from.value);\n+  return Status::OK();\n+}\n+\n+// timestamp to timestamp\n+Status CastImpl(const TimestampScalar& from, TimestampScalar* to) {\n+  to->value = from.value;\n \n Review comment:\n   Should this accomodate potential differences in units? For example, if `from` is microseconds while `to` is nanoseconds, then we should have \r\n   ```suggestion\r\n     to->value = from.value * 1000;\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-03T15:48:41.965+0000",
                    "updated": "2019-12-03T15:48:41.965+0000",
                    "started": "2019-12-03T15:48:41.965+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "352713",
                    "issueId": "13269365"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13269365/worklog/352714",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5921: ARROW-7210: [C++][R] Allow Numeric <-> Temporal Scalar casts\nURL: https://github.com/apache/arrow/pull/5921#discussion_r353244923\n \n \n\n ##########\n File path: cpp/src/arrow/scalar.cc\n ##########\n @@ -39,114 +39,67 @@ using internal::checked_pointer_cast;\n \n bool Scalar::Equals(const Scalar& other) const { return ScalarEquals(*this, other); }\n \n-Time32Scalar::Time32Scalar(int32_t value, const std::shared_ptr<DataType>& type,\n-                           bool is_valid)\n-    : internal::PrimitiveScalar{type, is_valid}, value(value) {\n-  ARROW_CHECK_EQ(Type::TIME32, type->id());\n-}\n-\n-Time64Scalar::Time64Scalar(int64_t value, const std::shared_ptr<DataType>& type,\n-                           bool is_valid)\n-    : internal::PrimitiveScalar{type, is_valid}, value(value) {\n-  ARROW_CHECK_EQ(Type::TIME64, type->id());\n-}\n-\n-TimestampScalar::TimestampScalar(int64_t value, const std::shared_ptr<DataType>& type,\n-                                 bool is_valid)\n-    : internal::PrimitiveScalar{type, is_valid}, value(value) {\n-  ARROW_CHECK_EQ(Type::TIMESTAMP, type->id());\n-}\n-\n-DurationScalar::DurationScalar(int64_t value, const std::shared_ptr<DataType>& type,\n-                               bool is_valid)\n-    : internal::PrimitiveScalar{type, is_valid}, value(value) {\n-  DCHECK_EQ(Type::DURATION, type->id());\n-}\n-\n-MonthIntervalScalar::MonthIntervalScalar(int32_t value, bool is_valid)\n-    : internal::PrimitiveScalar{month_interval(), is_valid}, value(value) {}\n-\n-MonthIntervalScalar::MonthIntervalScalar(int32_t value,\n-                                         const std::shared_ptr<DataType>& type,\n-                                         bool is_valid)\n-    : internal::PrimitiveScalar{type, is_valid}, value(value) {\n-  DCHECK_EQ(Type::INTERVAL, type->id());\n-  DCHECK_EQ(IntervalType::MONTHS,\n-            checked_cast<IntervalType*>(type.get())->interval_type());\n-}\n-\n-DayTimeIntervalScalar::DayTimeIntervalScalar(DayTimeIntervalType::DayMilliseconds value,\n-                                             bool is_valid)\n-    : internal::PrimitiveScalar{day_time_interval(), is_valid}, value(value) {}\n-\n-DayTimeIntervalScalar::DayTimeIntervalScalar(DayTimeIntervalType::DayMilliseconds value,\n-                                             const std::shared_ptr<DataType>& type,\n-                                             bool is_valid)\n-    : internal::PrimitiveScalar{type, is_valid}, value(value) {\n-  DCHECK_EQ(Type::INTERVAL, type->id());\n-  DCHECK_EQ(IntervalType::DAY_TIME,\n-            checked_cast<IntervalType*>(type.get())->interval_type());\n-}\n-\n StringScalar::StringScalar(std::string s)\n-    : StringScalar(Buffer::FromString(std::move(s)), true) {}\n+    : StringScalar(Buffer::FromString(std::move(s))) {}\n \n FixedSizeBinaryScalar::FixedSizeBinaryScalar(const std::shared_ptr<Buffer>& value,\n-                                             const std::shared_ptr<DataType>& type,\n-                                             bool is_valid)\n-    : BinaryScalar(value, type, is_valid) {\n+                                             const std::shared_ptr<DataType>& type)\n+    : BinaryScalar(value, type) {\n   ARROW_CHECK_EQ(checked_cast<const FixedSizeBinaryType&>(*type).byte_width(),\n                  value->size());\n }\n \n-Decimal128Scalar::Decimal128Scalar(const Decimal128& value,\n-                                   const std::shared_ptr<DataType>& type, bool is_valid)\n-    : Scalar{type, is_valid}, value(value) {}\n-\n BaseListScalar::BaseListScalar(const std::shared_ptr<Array>& value,\n-                               const std::shared_ptr<DataType>& type, bool is_valid)\n-    : Scalar{type, is_valid}, value(value) {}\n+                               const std::shared_ptr<DataType>& type)\n+    : Scalar{type, true}, value(value) {}\n \n-BaseListScalar::BaseListScalar(const std::shared_ptr<Array>& value, bool is_valid)\n-    : BaseListScalar(value, value->type(), is_valid) {}\n+BaseListScalar::BaseListScalar(const std::shared_ptr<Array>& value)\n+    : BaseListScalar(value, value->type()) {}\n \n FixedSizeListScalar::FixedSizeListScalar(const std::shared_ptr<Array>& value,\n-                                         const std::shared_ptr<DataType>& type,\n-                                         bool is_valid)\n-    : BaseListScalar(value, type, is_valid) {\n+                                         const std::shared_ptr<DataType>& type)\n+    : BaseListScalar(value, type) {\n   ARROW_CHECK_EQ(value->length(),\n                  checked_cast<const FixedSizeListType*>(type.get())->list_size());\n }\n \n+template <typename T>\n+using scalar_constructor_has_arrow_type =\n+    std::is_constructible<typename TypeTraits<T>::ScalarType, std::shared_ptr<DataType>>;\n+\n+template <typename T, typename R = void>\n+using enable_if_scalar_constructor_has_arrow_type =\n+    typename std::enable_if<scalar_constructor_has_arrow_type<T>::value, R>::type;\n+\n+template <typename T, typename R = void>\n+using enable_if_scalar_constructor_has_no_arrow_type =\n+    typename std::enable_if<!scalar_constructor_has_arrow_type<T>::value, R>::type;\n+\n // TODO(bkietz) This doesn't need a factory. Just rewrite all scalars to be generically\n // constructible (is_simple_scalar should apply to all scalars)\n struct MakeNullImpl {\n-  template <typename T, typename ScalarType = typename TypeTraits<T>::ScalarType,\n-            typename ValueType = typename ScalarType::ValueType,\n-            typename Enable = typename std::enable_if<\n-                internal::is_simple_scalar<ScalarType>::value>::type>\n-  Status Visit(const T&) {\n-    *out_ = std::make_shared<ScalarType>(ValueType(), type_, false);\n+  template <typename T, typename ScalarType = typename TypeTraits<T>::ScalarType>\n+  enable_if_scalar_constructor_has_arrow_type<T, Status> Visit(const T&) {\n+    *out_ = std::make_shared<ScalarType>(type_);\n     return Status::OK();\n   }\n \n-  Status Visit(const NullType&) {\n-    *out_ = std::make_shared<NullScalar>();\n+  template <typename T, typename ScalarType = typename TypeTraits<T>::ScalarType>\n+  enable_if_scalar_constructor_has_no_arrow_type<T, Status> Visit(const T&) {\n+    *out_ = std::make_shared<ScalarType>();\n     return Status::OK();\n   }\n \n-  Status Visit(const DataType& t) {\n-    return Status::NotImplemented(\"construcing null scalars of type \", t);\n-  }\n-\n   const std::shared_ptr<DataType>& type_;\n   std::shared_ptr<Scalar>* out_;\n };\n \n-Status MakeNullScalar(const std::shared_ptr<DataType>& type,\n-                      std::shared_ptr<Scalar>* null) {\n-  MakeNullImpl impl = {type, null};\n-  return VisitTypeInline(*type, &impl);\n+std::shared_ptr<Scalar> MakeNullScalar(const std::shared_ptr<DataType>& type) {\n+  std::shared_ptr<Scalar> out;\n+  MakeNullImpl impl = {type, &out};\n+  // Should not fail.\n \n Review comment:\n   ```suggestion\r\n     // If this fails (or a template instantiation error arises in MakeNullImpl), a Scalar subclass is malformed.\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-03T15:48:41.991+0000",
                    "updated": "2019-12-03T15:48:41.991+0000",
                    "started": "2019-12-03T15:48:41.991+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "352714",
                    "issueId": "13269365"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13269365/worklog/352715",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5921: ARROW-7210: [C++][R] Allow Numeric <-> Temporal Scalar casts\nURL: https://github.com/apache/arrow/pull/5921#discussion_r353247577\n \n \n\n ##########\n File path: cpp/src/arrow/scalar.h\n ##########\n @@ -46,11 +46,13 @@ class Array;\n struct ARROW_EXPORT Scalar {\n   virtual ~Scalar() = default;\n \n+  explicit Scalar(const std::shared_ptr<DataType>& type) : type(type), is_valid(false) {}\n \n Review comment:\n   This constructor should be protected since an instance of `Scalar` (not one of its subclasses) should never be constructed\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-03T15:48:41.994+0000",
                    "updated": "2019-12-03T15:48:41.994+0000",
                    "started": "2019-12-03T15:48:41.994+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "352715",
                    "issueId": "13269365"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13269365/worklog/352716",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5921: ARROW-7210: [C++][R] Allow Numeric <-> Temporal Scalar casts\nURL: https://github.com/apache/arrow/pull/5921#discussion_r353250335\n \n \n\n ##########\n File path: cpp/src/arrow/scalar_test.cc\n ##########\n @@ -153,26 +153,27 @@ TEST(TestFixedSizeBinaryScalar, MakeScalar) {\n   ASSERT_OK(MakeScalar(type, buf, &s));\n   ASSERT_TRUE(FixedSizeBinaryScalar(buf, type).Equals(s));\n \n+  /*\n \n Review comment:\n   Why is this commented out?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-03T15:48:42.046+0000",
                    "updated": "2019-12-03T15:48:42.046+0000",
                    "started": "2019-12-03T15:48:42.046+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "352716",
                    "issueId": "13269365"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13269365/worklog/352717",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5921: ARROW-7210: [C++][R] Allow Numeric <-> Temporal Scalar casts\nURL: https://github.com/apache/arrow/pull/5921#discussion_r353252690\n \n \n\n ##########\n File path: r/tests/testthat/test-dataset.R\n ##########\n @@ -128,6 +133,18 @@ test_that(\"filter() with %in%\", {\n   )\n })\n \n+test_that(\"filter() on timestamp columns\", {\n+  ds <- open_dataset(dataset_dir)\n+  expect_equivalent(\n+    ds %>%\n+      # Replace `0L` with a proper lubriate object.\n+      filter(ts >= 0L , part == 1) %>%\n \n Review comment:\n   If I'm reading this correctly, this is a trivial filter (date greater than the epoch) and it yields every row. I'd prefer if the filter returned (for example) only the last three rows.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-03T15:48:42.108+0000",
                    "updated": "2019-12-03T15:48:42.108+0000",
                    "started": "2019-12-03T15:48:42.108+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "352717",
                    "issueId": "13269365"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13269365/worklog/352725",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5921: ARROW-7210: [C++][R] Allow Numeric <-> Temporal Scalar casts\nURL: https://github.com/apache/arrow/pull/5921#discussion_r353262144\n \n \n\n ##########\n File path: cpp/src/arrow/scalar.h\n ##########\n @@ -46,11 +46,13 @@ class Array;\n struct ARROW_EXPORT Scalar {\n   virtual ~Scalar() = default;\n \n+  explicit Scalar(const std::shared_ptr<DataType>& type) : type(type), is_valid(false) {}\n \n Review comment:\n   Good point.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-03T15:53:30.445+0000",
                    "updated": "2019-12-03T15:53:30.445+0000",
                    "started": "2019-12-03T15:53:30.445+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "352725",
                    "issueId": "13269365"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13269365/worklog/353737",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5921: ARROW-7210: [C++][R] Allow Numeric <-> Temporal Scalar casts\nURL: https://github.com/apache/arrow/pull/5921#discussion_r353958103\n \n \n\n ##########\n File path: cpp/src/arrow/util/time.h\n ##########\n @@ -0,0 +1,57 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include <memory>\n+#include <utility>\n+\n+#include \"arrow/result.h\"\n+#include \"arrow/type.h\"\n+\n+namespace arrow {\n+namespace util {\n+\n+enum DivideOrMultiply {\n+  MULTIPLY,\n+  DIVIDE,\n+};\n+\n+// TimestampType -> TimestampType\n+static std::pair<DivideOrMultiply, int64_t> kTimestampConversionTable[4][4] = {\n \n Review comment:\n   ```suggestion\r\n   static std::pair<DivideOrMultiply, int64_t> kTimeUnitConversionTable[4][4] = {\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-04T20:16:50.228+0000",
                    "updated": "2019-12-04T20:16:50.228+0000",
                    "started": "2019-12-04T20:16:50.227+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "353737",
                    "issueId": "13269365"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13269365/worklog/353738",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5921: ARROW-7210: [C++][R] Allow Numeric <-> Temporal Scalar casts\nURL: https://github.com/apache/arrow/pull/5921#discussion_r353958349\n \n \n\n ##########\n File path: cpp/src/arrow/util/time.h\n ##########\n @@ -0,0 +1,57 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include <memory>\n+#include <utility>\n+\n+#include \"arrow/result.h\"\n+#include \"arrow/type.h\"\n+\n+namespace arrow {\n+namespace util {\n+\n+enum DivideOrMultiply {\n+  MULTIPLY,\n+  DIVIDE,\n+};\n+\n+// TimestampType -> TimestampType\n+static std::pair<DivideOrMultiply, int64_t> kTimestampConversionTable[4][4] = {\n+    // TimestampType::SECOND\n+    {{MULTIPLY, 1}, {MULTIPLY, 1000}, {MULTIPLY, 1000000}, {MULTIPLY, 1000000000}},\n+    // TimestampType::MILLI\n+    {{DIVIDE, 1000}, {MULTIPLY, 1}, {MULTIPLY, 1000}, {MULTIPLY, 1000000}},\n+    // TimestampType::MICRO\n+    {{DIVIDE, 1000000}, {DIVIDE, 1000}, {MULTIPLY, 1}, {MULTIPLY, 1000}},\n+    // TimestampType::NANO\n+    {{DIVIDE, 1000000000}, {DIVIDE, 1000000}, {DIVIDE, 1000}, {MULTIPLY, 1}},\n+};\n+\n+// Converts a Timestamp value into another Timestamp value.\n+//\n+// This function takes care of properly transforming from one unit to another.\n+//\n+// \\param[in] in, the input type. Must be TimestampType.\n \n Review comment:\n   Is it worthwhile to write `/ConvertTime(32|64)Value/`?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-04T20:16:50.233+0000",
                    "updated": "2019-12-04T20:16:50.233+0000",
                    "started": "2019-12-04T20:16:50.232+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "353738",
                    "issueId": "13269365"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13269365/worklog/357087",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5921: ARROW-7210: [C++][R] Allow Numeric <-> Temporal Scalar casts\nURL: https://github.com/apache/arrow/pull/5921#discussion_r356045767\n \n \n\n ##########\n File path: cpp/src/arrow/util/time.h\n ##########\n @@ -0,0 +1,57 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include <memory>\n+#include <utility>\n+\n+#include \"arrow/result.h\"\n+#include \"arrow/type.h\"\n+\n+namespace arrow {\n+namespace util {\n+\n+enum DivideOrMultiply {\n+  MULTIPLY,\n+  DIVIDE,\n+};\n+\n+// TimestampType -> TimestampType\n+static std::pair<DivideOrMultiply, int64_t> kTimestampConversionTable[4][4] = {\n+    // TimestampType::SECOND\n+    {{MULTIPLY, 1}, {MULTIPLY, 1000}, {MULTIPLY, 1000000}, {MULTIPLY, 1000000000}},\n+    // TimestampType::MILLI\n+    {{DIVIDE, 1000}, {MULTIPLY, 1}, {MULTIPLY, 1000}, {MULTIPLY, 1000000}},\n+    // TimestampType::MICRO\n+    {{DIVIDE, 1000000}, {DIVIDE, 1000}, {MULTIPLY, 1}, {MULTIPLY, 1000}},\n+    // TimestampType::NANO\n+    {{DIVIDE, 1000000000}, {DIVIDE, 1000000}, {DIVIDE, 1000}, {MULTIPLY, 1}},\n+};\n+\n+// Converts a Timestamp value into another Timestamp value.\n+//\n+// This function takes care of properly transforming from one unit to another.\n+//\n+// \\param[in] in, the input type. Must be TimestampType.\n \n Review comment:\n   Ideally yes (and all types).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-10T13:50:13.240+0000",
                    "updated": "2019-12-10T13:50:13.240+0000",
                    "started": "2019-12-10T13:50:13.240+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "357087",
                    "issueId": "13269365"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13269365/worklog/357089",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on issue #5921: ARROW-7210: [C++][R] Allow Numeric <-> Temporal Scalar casts\nURL: https://github.com/apache/arrow/pull/5921#issuecomment-564040870\n \n \n   @bkietz ready for another pass, the java failure is unrelated.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-10T13:50:25.933+0000",
                    "updated": "2019-12-10T13:50:25.933+0000",
                    "started": "2019-12-10T13:50:25.932+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "357089",
                    "issueId": "13269365"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13269365/worklog/358049",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5921: ARROW-7210: [C++][R] Allow Numeric <-> Temporal Scalar casts\nURL: https://github.com/apache/arrow/pull/5921\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-11T19:49:54.124+0000",
                    "updated": "2019-12-11T19:49:54.124+0000",
                    "started": "2019-12-11T19:49:54.123+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "358049",
                    "issueId": "13269365"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13269365/worklog/358519",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5921: ARROW-7210: [C++][R] Allow Numeric <-> Temporal Scalar casts\nURL: https://github.com/apache/arrow/pull/5921#discussion_r357054760\n \n \n\n ##########\n File path: cpp/src/arrow/util/time.h\n ##########\n @@ -0,0 +1,57 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include <memory>\n+#include <utility>\n+\n+#include \"arrow/result.h\"\n \n Review comment:\n   Was it possible to include `type_fwd.h` instead?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-12T10:00:21.703+0000",
                    "updated": "2019-12-12T10:00:21.703+0000",
                    "started": "2019-12-12T10:00:21.702+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "358519",
                    "issueId": "13269365"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13269365/worklog/358521",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5921: ARROW-7210: [C++][R] Allow Numeric <-> Temporal Scalar casts\nURL: https://github.com/apache/arrow/pull/5921#discussion_r357055440\n \n \n\n ##########\n File path: cpp/src/arrow/util/time.h\n ##########\n @@ -0,0 +1,57 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include <memory>\n+#include <utility>\n+\n+#include \"arrow/result.h\"\n+#include \"arrow/type.h\"\n+\n+namespace arrow {\n+namespace util {\n+\n+enum DivideOrMultiply {\n+  MULTIPLY,\n+  DIVIDE,\n+};\n+\n+// TimestampType -> TimestampType\n+static std::pair<DivideOrMultiply, int64_t> kTimestampConversionTable[4][4] = {\n \n Review comment:\n   What do you expose those values publicly and make the variable static, rather than extern? Is it out of hope that the compiler may conduct optimizations? (if so, you probably want to make it `const` or `constexpr` too)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-12T10:01:33.153+0000",
                    "updated": "2019-12-12T10:01:33.153+0000",
                    "started": "2019-12-12T10:01:33.153+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "358521",
                    "issueId": "13269365"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13269365/worklog/358522",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5921: ARROW-7210: [C++][R] Allow Numeric <-> Temporal Scalar casts\nURL: https://github.com/apache/arrow/pull/5921#discussion_r357055440\n \n \n\n ##########\n File path: cpp/src/arrow/util/time.h\n ##########\n @@ -0,0 +1,57 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include <memory>\n+#include <utility>\n+\n+#include \"arrow/result.h\"\n+#include \"arrow/type.h\"\n+\n+namespace arrow {\n+namespace util {\n+\n+enum DivideOrMultiply {\n+  MULTIPLY,\n+  DIVIDE,\n+};\n+\n+// TimestampType -> TimestampType\n+static std::pair<DivideOrMultiply, int64_t> kTimestampConversionTable[4][4] = {\n \n Review comment:\n   Why do you expose those values publicly and make the variable static, rather than extern? Is it out of hope that the compiler may conduct optimizations? (if so, you probably want to make it `const` or `constexpr` too)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-12T10:02:31.968+0000",
                    "updated": "2019-12-12T10:02:31.968+0000",
                    "started": "2019-12-12T10:02:31.968+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "358522",
                    "issueId": "13269365"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13269365/worklog/358672",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5921: ARROW-7210: [C++][R] Allow Numeric <-> Temporal Scalar casts\nURL: https://github.com/apache/arrow/pull/5921#discussion_r357129459\n \n \n\n ##########\n File path: cpp/src/arrow/util/time.h\n ##########\n @@ -0,0 +1,57 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include <memory>\n+#include <utility>\n+\n+#include \"arrow/result.h\"\n+#include \"arrow/type.h\"\n+\n+namespace arrow {\n+namespace util {\n+\n+enum DivideOrMultiply {\n+  MULTIPLY,\n+  DIVIDE,\n+};\n+\n+// TimestampType -> TimestampType\n+static std::pair<DivideOrMultiply, int64_t> kTimestampConversionTable[4][4] = {\n \n Review comment:\n   I originally did it with constexpr, but constexpr pair constructor is only supported in C++14, some compiler complained.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-12T12:56:20.942+0000",
                    "updated": "2019-12-12T12:56:20.942+0000",
                    "started": "2019-12-12T12:56:20.942+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "358672",
                    "issueId": "13269365"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 12000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6a0a24e[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@31d19bba[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@61bc67dd[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5c8d3c1b[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5e7ddff7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@54a28aa3[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@56228d65[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@63fa0e5e[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@53c8f7b1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@137f98f9[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@51747656[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@62cf0ad8[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 12000,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Dec 11 19:49:55 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-12-11T19:49:55.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7210/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-11-19T18:10:14.000+0000",
        "updated": "2019-12-12T13:53:32.000+0000",
        "timeoriginalestimate": null,
        "description": "This would allow supporting a minimum of expression evaluation on time-based arrays.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 12000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Scalar cast should support time-based types",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13269365/comment/16993858",
                    "id": "16993858",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 5921\n[https://github.com/apache/arrow/pull/5921]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-12-11T19:49:55.205+0000",
                    "updated": "2019-12-11T19:49:55.205+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z08sjc:",
        "customfield_12314139": null
    }
}