{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13377173",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377173",
    "key": "ARROW-12677",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349983",
                "id": "12349983",
                "description": "",
                "name": "5.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-07-28"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/5",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/trivial.svg",
            "name": "Trivial",
            "id": "5"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
            "name": "westonpace",
            "key": "westonpace",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Weston Pace",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=0x26dres",
            "name": "0x26dres",
            "key": "0x26dres",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=0x26dres&avatarId=50850",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=0x26dres&avatarId=50850",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=0x26dres&avatarId=50850",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=0x26dres&avatarId=50850"
            },
            "displayName": "&res",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=0x26dres",
            "name": "0x26dres",
            "key": "0x26dres",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=0x26dres&avatarId=50850",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=0x26dres&avatarId=50850",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=0x26dres&avatarId=50850",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=0x26dres&avatarId=50850"
            },
            "displayName": "&res",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 6000,
            "total": 6000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 6000,
            "total": 6000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12677/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 10,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377173/worklog/593563",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace opened a new pull request #10272:\nURL: https://github.com/apache/arrow/pull/10272\n\n\n   This allows the user to supply an optional `mask` when creating a struct array.\r\n   \r\n    * The mask requirements are pretty strict (must be a boolean arrow array without nulls) compared with some of the other functions (e.g. `array.mask` accepts a wide variety of inputs).  I think this should be ok since this use case is probably rarer and there are other plenty of existing ways to convert other datatypes to an arrow array.\r\n    * Unfortunately, StructArray::Make interprets the \"null buffer\" as more of a validity buffer (1 = valid, 0 = null).  This is the opposite of everywhere else a `mask` is used.  I was torn between inverting the input buffer to mimic the python API and passing through directly to the C interface for simplicity.  I chose the simpler option but could be convinced otherwise.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-07T21:46:54.054+0000",
                    "updated": "2021-05-07T21:46:54.054+0000",
                    "started": "2021-05-07T21:46:54.053+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "593563",
                    "issueId": "13377173"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377173/worklog/593564",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10272:\nURL: https://github.com/apache/arrow/pull/10272#issuecomment-834802529\n\n\n   https://issues.apache.org/jira/browse/ARROW-12677\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-07T21:47:08.026+0000",
                    "updated": "2021-05-07T21:47:08.026+0000",
                    "started": "2021-05-07T21:47:08.026+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "593564",
                    "issueId": "13377173"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377173/worklog/593858",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #10272:\nURL: https://github.com/apache/arrow/pull/10272#issuecomment-836283202\n\n\n   If we add such a `mask` keyword, I would say that it should match the `mask` keyword of `pa.array(..)` (and thus being an inverted mask, and not the validity mask as used internally). \r\n   \r\n   That means always some conversion of the data is needed (to invert the mask), and you cannot create a StructArray 100% cheaply from existing arrays with `from_arrays`, but for such a case you can still use `from_buffers` if you want.\r\n   \r\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-10T07:17:42.463+0000",
                    "updated": "2021-05-10T07:17:42.463+0000",
                    "started": "2021-05-10T07:17:42.463+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "593858",
                    "issueId": "13377173"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377173/worklog/596414",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on pull request #10272:\nURL: https://github.com/apache/arrow/pull/10272#issuecomment-840899285\n\n\n   I've added the call to invert.  I went ahead and added a `memory_pool` parameter per @&res suggestion on the JIRA.  I also verified that we can create null elements in a `ListArray` and added a test for `ListArray.from_arrays` since there was none.\r\n   \r\n   I believe I have addressed all PR comments and, pending CI, this is ready for review.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-13T23:51:41.445+0000",
                    "updated": "2021-05-13T23:51:41.445+0000",
                    "started": "2021-05-13T23:51:41.444+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "596414",
                    "issueId": "13377173"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377173/worklog/596720",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #10272:\nURL: https://github.com/apache/arrow/pull/10272#discussion_r632622802\n\n\n\n##########\nFile path: python/pyarrow/tests/test_array.py\n##########\n@@ -932,6 +954,24 @@ def test_fixed_size_list_from_arrays():\n         pa.FixedSizeListArray.from_arrays(values, 5)\n \n \n+def test_variable_list_from_arrays():\n+    values = pa.array([1, 2, 3, 4], pa.int64())\n+    offsets = pa.array([0, 2, 4])\n+    result = pa.ListArray.from_arrays(offsets, values)\n+    assert result.to_pylist() == [[1, 2], [3, 4]]\n+    assert result.type.equals(pa.list_(pa.int64()))\n+\n+    offsets = pa.array([0, None, 2, 4])\n+    result = pa.ListArray.from_arrays(offsets, values)\n+    assert result.to_pylist() == [[1, 2], None, [3, 4]]\n+\n+    # raise if offset out of bounds\n+    with pytest.raises(ValueError):\n+        pa.ListArray.from_arrays(pa.array([-1, 2, 4]), values)\n+\n+    with pytest.raises(ValueError):\n+        pa.ListArray.from_arrays(pa.array([0, 2, 5]), values)\n+\n\nReview comment:\n       ```suggestion\r\n   \r\n   \r\n   ```\n\n##########\nFile path: python/pyarrow/array.pxi\n##########\n@@ -2189,6 +2227,18 @@ cdef class StructArray(Array):\n         if names is not None and fields is not None:\n             raise ValueError('Must pass either names or fields, not both')\n \n+        if mask is None:\n+            c_mask = shared_ptr[CBuffer]()\n+        elif isinstance(mask, Array):\n+            if mask.type != bool_():\n\nReview comment:\n       nit: maybe pa.types.is_boolean?\n\n##########\nFile path: python/pyarrow/array.pxi\n##########\n@@ -2189,6 +2227,18 @@ cdef class StructArray(Array):\n         if names is not None and fields is not None:\n             raise ValueError('Must pass either names or fields, not both')\n \n+        if mask is None:\n+            c_mask = shared_ptr[CBuffer]()\n+        elif isinstance(mask, Array):\n+            if mask.type != bool_():\n+                raise ValueError('Mask must be a pyarray.Array of type bool')\n+            if mask.null_count != 0:\n+                raise ValueError('Mask must not contain nulls')\n+            inverted_mask = _pc().invert(mask, memory_pool=memory_pool)\n+            c_mask = pyarrow_unwrap_buffer(inverted_mask.buffers()[1])\n+        else:\n+            raise ValueError('Mask must be a pyarray.Array of type bool')\n\nReview comment:\n       ```suggestion\r\n               raise ValueError('Mask must be a pyarrow.Array of type bool')\r\n   ```\n\n##########\nFile path: python/pyarrow/array.pxi\n##########\n@@ -2189,6 +2227,18 @@ cdef class StructArray(Array):\n         if names is not None and fields is not None:\n             raise ValueError('Must pass either names or fields, not both')\n \n+        if mask is None:\n+            c_mask = shared_ptr[CBuffer]()\n+        elif isinstance(mask, Array):\n+            if mask.type != bool_():\n+                raise ValueError('Mask must be a pyarray.Array of type bool')\n+            if mask.null_count != 0:\n+                raise ValueError('Mask must not contain nulls')\n+            inverted_mask = _pc().invert(mask, memory_pool=memory_pool)\n+            c_mask = pyarrow_unwrap_buffer(inverted_mask.buffers()[1])\n+        else:\n+            raise ValueError('Mask must be a pyarray.Array of type bool')\n\nReview comment:\n       nit: maybe also include an `'(expected pyarrow.Array of type bool, got {type(mask)})'` (this is semi-consistently done in PyArrow)\n\n##########\nFile path: python/pyarrow/array.pxi\n##########\n@@ -2189,6 +2227,18 @@ cdef class StructArray(Array):\n         if names is not None and fields is not None:\n             raise ValueError('Must pass either names or fields, not both')\n \n+        if mask is None:\n+            c_mask = shared_ptr[CBuffer]()\n+        elif isinstance(mask, Array):\n+            if mask.type != bool_():\n+                raise ValueError('Mask must be a pyarray.Array of type bool')\n\nReview comment:\n       ```suggestion\r\n                   raise ValueError('Mask must be a pyarrow.Array of type bool')\r\n   ```\n\n##########\nFile path: python/pyarrow/tests/test_array.py\n##########\n@@ -932,6 +954,24 @@ def test_fixed_size_list_from_arrays():\n         pa.FixedSizeListArray.from_arrays(values, 5)\n \n \n+def test_variable_list_from_arrays():\n+    values = pa.array([1, 2, 3, 4], pa.int64())\n+    offsets = pa.array([0, 2, 4])\n+    result = pa.ListArray.from_arrays(offsets, values)\n+    assert result.to_pylist() == [[1, 2], [3, 4]]\n+    assert result.type.equals(pa.list_(pa.int64()))\n+\n+    offsets = pa.array([0, None, 2, 4])\n+    result = pa.ListArray.from_arrays(offsets, values)\n+    assert result.to_pylist() == [[1, 2], None, [3, 4]]\n+\n+    # raise if offset out of bounds\n+    with pytest.raises(ValueError):\n+        pa.ListArray.from_arrays(pa.array([-1, 2, 4]), values)\n+\n+    with pytest.raises(ValueError):\n+        pa.ListArray.from_arrays(pa.array([0, 2, 5]), values)\n+\n\nReview comment:\n       (just to fix the lint error)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-14T15:47:17.264+0000",
                    "updated": "2021-05-14T15:47:17.264+0000",
                    "started": "2021-05-14T15:47:17.263+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "596720",
                    "issueId": "13377173"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377173/worklog/596878",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #10272:\nURL: https://github.com/apache/arrow/pull/10272#discussion_r632767457\n\n\n\n##########\nFile path: python/pyarrow/array.pxi\n##########\n@@ -2189,6 +2227,18 @@ cdef class StructArray(Array):\n         if names is not None and fields is not None:\n             raise ValueError('Must pass either names or fields, not both')\n \n+        if mask is None:\n+            c_mask = shared_ptr[CBuffer]()\n+        elif isinstance(mask, Array):\n+            if mask.type != bool_():\n\nReview comment:\n       I couldn't figure out how to access `is_boolean` from the `pxi` file but I changed it to `mask.type.id != Type_BOOL` which is similar to the way other type comparisons are done in this file.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-14T20:03:37.154+0000",
                    "updated": "2021-05-14T20:03:37.154+0000",
                    "started": "2021-05-14T20:03:37.153+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "596878",
                    "issueId": "13377173"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377173/worklog/596895",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm closed pull request #10272:\nURL: https://github.com/apache/arrow/pull/10272\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-14T20:48:47.832+0000",
                    "updated": "2021-05-14T20:48:47.832+0000",
                    "started": "2021-05-14T20:48:47.832+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "596895",
                    "issueId": "13377173"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377173/worklog/597504",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #10272:\nURL: https://github.com/apache/arrow/pull/10272#discussion_r633344983\n\n\n\n##########\nFile path: python/pyarrow/array.pxi\n##########\n@@ -2153,7 +2186,8 @@ cdef class StructArray(Array):\n         return [pyarrow_wrap_array(arr) for arr in arrays]\n \n     @staticmethod\n-    def from_arrays(arrays, names=None, fields=None):\n+    def from_arrays(arrays, names=None, fields=None, mask=None,\n+                    memory_pool=None):\n\nReview comment:\n       It seems we are also inconsistent in the naming of this keyword, the `ListArray.from_arrays` above uses a `pool` keyword (but `memory_pool` is used more often, so this change is fine, will open a JIRA to make this consistent)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-17T08:47:10.613+0000",
                    "updated": "2021-05-17T08:47:10.613+0000",
                    "started": "2021-05-17T08:47:10.613+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "597504",
                    "issueId": "13377173"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377173/worklog/597509",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #10272:\nURL: https://github.com/apache/arrow/pull/10272#discussion_r633349425\n\n\n\n##########\nFile path: python/pyarrow/array.pxi\n##########\n@@ -2153,7 +2186,8 @@ cdef class StructArray(Array):\n         return [pyarrow_wrap_array(arr) for arr in arrays]\n \n     @staticmethod\n-    def from_arrays(arrays, names=None, fields=None):\n+    def from_arrays(arrays, names=None, fields=None, mask=None,\n+                    memory_pool=None):\n\nReview comment:\n       -> https://issues.apache.org/jira/browse/ARROW-12805\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-17T08:53:18.073+0000",
                    "updated": "2021-05-17T08:53:18.073+0000",
                    "started": "2021-05-17T08:53:18.072+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "597509",
                    "issueId": "13377173"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377173/worklog/597980",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #10272:\nURL: https://github.com/apache/arrow/pull/10272#discussion_r633344983\n\n\n\n##########\nFile path: python/pyarrow/array.pxi\n##########\n@@ -2153,7 +2186,8 @@ cdef class StructArray(Array):\n         return [pyarrow_wrap_array(arr) for arr in arrays]\n \n     @staticmethod\n-    def from_arrays(arrays, names=None, fields=None):\n+    def from_arrays(arrays, names=None, fields=None, mask=None,\n+                    memory_pool=None):\n\nReview comment:\n       It seems we are also inconsistent in the naming of this keyword, the `ListArray.from_arrays` above uses a `pool` keyword (but `memory_pool` is used more often, so this change is fine, will open a JIRA to make this consistent)\n\n##########\nFile path: python/pyarrow/array.pxi\n##########\n@@ -2153,7 +2186,8 @@ cdef class StructArray(Array):\n         return [pyarrow_wrap_array(arr) for arr in arrays]\n \n     @staticmethod\n-    def from_arrays(arrays, names=None, fields=None):\n+    def from_arrays(arrays, names=None, fields=None, mask=None,\n+                    memory_pool=None):\n\nReview comment:\n       -> https://issues.apache.org/jira/browse/ARROW-12805\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-17T18:19:44.421+0000",
                    "updated": "2021-05-17T18:19:44.421+0000",
                    "started": "2021-05-17T18:19:44.421+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "597980",
                    "issueId": "13377173"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 6000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@53443f8b[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5ab52a11[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1f51d0ff[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@6c4794a6[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@79826de3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@4cb9ee71[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5dfe0931[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@dcc448c[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@674bcda3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@64827d5d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4998577d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@269f92e6[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 6000,
        "customfield_12312520": null,
        "customfield_12312521": "Fri May 14 20:48:34 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-05-14T20:48:34.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12677/watchers",
            "watchCount": 4,
            "isWatching": false
        },
        "created": "2021-05-07T07:45:39.000+0000",
        "updated": "2021-05-17T18:19:45.000+0000",
        "timeoriginalestimate": null,
        "description": "The python API for creating StructArray from a list of array doesn't allow to pass a missing value mask. \r\n\r\nAt the moment the only way to create a StructArray with missing value is to use `pyarrow.array` and passing a vector of tuple.\r\n\r\n{code:python}\r\n>>> pyarrow.array(\r\n    [\r\n        None,\r\n        (1, \"foo\"),\r\n    ],\r\n    type=pyarrow.struct(\r\n        [pyarrow.field('col1', pyarrow.int64()), pyarrow.field(\"col2\", pyarrow.string())]\r\n    )\r\n)\r\n-- is_valid:\r\n  [\r\n    false,\r\n    true\r\n  ]\r\n-- child 0 type: int64\r\n  [\r\n    0,\r\n    1\r\n  ]\r\n-- child 1 type: string\r\n  [\r\n    \"\",\r\n    \"foo\"\r\n  ]\r\n>>> pyarrow.StructArray.from_arrays(\r\n    [\r\n        [None, 1],\r\n        [None, \"foo\"]\r\n    ],\r\n    fields=[pyarrow.field('col1', pyarrow.int64()), pyarrow.field(\"col2\", pyarrow.string())]\r\n)\r\n-- is_valid: all not null\r\n-- child 0 type: int64\r\n  [\r\n    null,\r\n    1\r\n  ]\r\n-- child 1 type: string\r\n  [\r\n    null,\r\n    \"foo\"\r\n  ]\r\n{code}\r\n\r\nThe C++ API allows it, so it should be easy to add.\r\n\r\n\r\nsee [this so question|https://stackoverflow.com/questions/67417110/]",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 6000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Add a mask argument to pyarrow.StructArray.from_arrays",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377173/comment/17341380",
                    "id": "17341380",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=0x26dres",
                        "name": "0x26dres",
                        "key": "0x26dres",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=0x26dres&avatarId=50850",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=0x26dres&avatarId=50850",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=0x26dres&avatarId=50850",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=0x26dres&avatarId=50850"
                        },
                        "displayName": "&res",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "[~westonpace] thanks for looking into this.\r\n\r\nI'm not sure if it's the right place to mention that, but I now have the same issue with ListArray, and I'm wondering if it'd be worth doing the same changes there.\r\n\r\n\u00a0\r\n\r\nHere's an example where I'm have a list of struct, but some of the list are null:\r\n\r\n\u00a0\r\n * Using pyarrow.array (works, but requires turning columns into rows)\r\n\r\n{code:python}\r\nlist_of_struct = pyarrow.list_(\r\n    pyarrow.struct([pyarrow.field(\"foo\", pyarrow.string())])\r\n)\r\narray = pyarrow.array(\r\n    [[(\"hello\",), (\"World\",)], [], None, [None, (\"foo\",), (\"bar\",)]],\r\n    type=list_of_struct,\r\n)\r\nprint(array) {code}\r\n{code:java}\r\n[\r\n  -- is_valid: all not null\r\n  -- child 0 type: string\r\n    [\r\n      \"hello\",\r\n      \"World\"\r\n    ],\r\n  -- is_valid: all not null\r\n  -- child 0 type: string\r\n    [],\r\n  null,\r\n  -- is_valid:\r\n      [\r\n      false,\r\n      true,\r\n      true\r\n    ]\r\n  -- child 0 type: string\r\n    [\r\n      \"\",\r\n      \"foo\",\r\n      \"bar\"\r\n    ]\r\n] {code}\r\n\u00a0\r\n\r\n * Using ListArray.from_array (it's not possible to mark a list a null (It falls back to empty)\r\n{code:python}\r\nstruct_type = pyarrow.struct([pyarrow.field(\"foo\", pyarrow.string())])\r\nfoo = pyarrow.array([\"hello\", \"World\", None, \"foo\", \"bar\"])\r\nvalidity_mask = pyarrow.array([True, True, False, True, True])\r\nvalidity_bitmask = validity_mask.buffers()[1]\r\nstruct_array = pyarrow.StructArray.from_buffers(\r\n    struct_type, len(foo), [validity_bitmask], children=[foo]\r\n)\r\nlist_array = pyarrow.ListArray.from_arrays(\r\n    offsets=[0, 2, 2, 2, 5], values=struct_array\r\n)\r\n{code}\r\n{code:java}\r\n[\r\n  -- is_valid: all not null\r\n  -- child 0 type: string\r\n    [\r\n      \"hello\",\r\n      \"World\"\r\n    ],\r\n  -- is_valid: all not null\r\n  -- child 0 type: string\r\n    [],\r\n  -- is_valid: all not null\r\n  -- child 0 type: string\r\n    [],\r\n  -- is_valid:\r\n      [\r\n      false,\r\n      true,\r\n      true\r\n    ]\r\n  -- child 0 type: string\r\n    [\r\n      null,\r\n      \"foo\",\r\n      \"bar\"\r\n    ]\r\n]\r\n{code}\r\n\u00a0\r\n\r\n * Using the \"from_buffers\" work around (it works, but not a great API):\r\n\r\n{code:python}\r\nstruct_type = pyarrow.struct([pyarrow.field(\"foo\", pyarrow.string())])\r\nfoo_values = pyarrow.array([\"hello\", \"World\", None, \"foo\", \"bar\"])\r\nstruct_validity_mask = pyarrow.array([True, True, False, True, True])\r\nstruct_validity_bitmask = struct_validity_mask.buffers()[1]\r\nstruct_array = pyarrow.StructArray.from_buffers(\r\n    struct_type,\r\n    len(foo_values),\r\n    [struct_validity_bitmask],\r\n    children=[foo_values],\r\n)\r\n\r\nlist_validity_mask = pyarrow.array([True, True, False, True])\r\nlist_validity_buffer = list_validity_mask.buffers()[1]\r\nlist_offsets_buffer = pyarrow.array([0, 2, 2, 2, 5], pyarrow.int32()).buffers()[1]\r\n\r\nlist_array = pyarrow.ListArray.from_buffers(\r\n    type=pyarrow.list_(struct_type),\r\n    length=4,\r\n    buffers=[list_validity_buffer, list_offsets_buffer, ],\r\n    children=[struct_array],\r\n)\r\nprint(list_array)\r\n{code}\r\n{code:java}\r\n  -- is_valid: all not null\r\n  -- child 0 type: string\r\n    [\r\n      \"hello\",\r\n      \"World\"\r\n    ],\r\n  -- is_valid: all not null\r\n  -- child 0 type: string\r\n    [],\r\n  null,\r\n  -- is_valid:\r\n      [\r\n      false,\r\n      true,\r\n      true\r\n    ]\r\n  -- child 0 type: string\r\n    [\r\n      null,\r\n      \"foo\",\r\n      \"bar\"\r\n    ]\r\n]\r\n{code}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=0x26dres",
                        "name": "0x26dres",
                        "key": "0x26dres",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=0x26dres&avatarId=50850",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=0x26dres&avatarId=50850",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=0x26dres&avatarId=50850",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=0x26dres&avatarId=50850"
                        },
                        "displayName": "&res",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-05-08T17:58:00.442+0000",
                    "updated": "2021-05-08T17:58:00.442+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377173/comment/17341770",
                    "id": "17341770",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=0x26dres",
                        "name": "0x26dres",
                        "key": "0x26dres",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=0x26dres&avatarId=50850",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=0x26dres&avatarId=50850",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=0x26dres&avatarId=50850",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=0x26dres&avatarId=50850"
                        },
                        "displayName": "&res",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "> StructArray 100% cheaply from existing arrays with `from_arrays`\r\n\r\nAre you saying this because a copy of the inverted mask array is required? Or is there another overhead.\r\n\r\nI guess if we have to do a copy of the array, than memory_pool shoud be added to 'from_arrays' to be consistent, but it would make things confusing.\r\n\r\nPersonally I'm happy with using from_buffer. The API isn't great, but once you've figured it out it's fine.\r\n\r\n\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=0x26dres",
                        "name": "0x26dres",
                        "key": "0x26dres",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=0x26dres&avatarId=50850",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=0x26dres&avatarId=50850",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=0x26dres&avatarId=50850",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=0x26dres&avatarId=50850"
                        },
                        "displayName": "&res",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-05-10T08:20:17.691+0000",
                    "updated": "2021-05-10T08:20:17.691+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377173/comment/17341955",
                    "id": "17341955",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "bq. Are you saying this because a copy of the inverted mask array is required? \r\n\r\nIndeed, inverting the mask is indeed the \"overhead\" I was pointing at.\r\n\r\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2021-05-10T15:14:09.368+0000",
                    "updated": "2021-05-10T15:14:09.368+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377173/comment/17344192",
                    "id": "17344192",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "> Using ListArray.from_array (it's not possible to mark a list a null (It falls back to empty)\u00a0\r\n\r\nIt's odd, but you can do it by putting a null in the offsets array.\u00a0 I added some examples to ListArray.from_arrays as part of the PR.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-05-13T23:55:04.722+0000",
                    "updated": "2021-05-13T23:55:04.722+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377173/comment/17344193",
                    "id": "17344193",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Although I'm not opposed to accepting a mask as well.\u00a0 I could probably raise invalid if offsets.null_count > 0 and a mask is specified.\u00a0 [~jorisvandenbossche] any opinion?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-05-13T23:56:41.505+0000",
                    "updated": "2021-05-13T23:56:41.505+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377173/comment/17344876",
                    "id": "17344876",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 10272\n[https://github.com/apache/arrow/pull/10272]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-05-14T20:48:34.940+0000",
                    "updated": "2021-05-14T20:48:34.940+0000"
                }
            ],
            "maxResults": 6,
            "total": 6,
            "startAt": 0
        },
        "customfield_12311820": "0|z0qtbk:",
        "customfield_12314139": null
    }
}