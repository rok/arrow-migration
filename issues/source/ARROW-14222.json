{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13404987",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13404987",
    "key": "ARROW-14222",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350323",
                "id": "12350323",
                "description": "",
                "name": "6.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-10-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12624157",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12624157",
                "type": {
                    "id": "12310460",
                    "name": "Child-Issue",
                    "inward": "is a child of",
                    "outward": "is a parent of",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310460"
                },
                "inwardIssue": {
                    "id": "13087660",
                    "key": "ARROW-1231",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13087660",
                    "fields": {
                        "summary": "[C++] Add filesystem / IO implementation for Google Cloud Storage",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                            "id": "2",
                            "description": "A new feature of the product, which has yet to be developed.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                            "name": "New Feature",
                            "subtask": false,
                            "avatarId": 21141
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=coryan",
            "name": "coryan",
            "key": "coryan",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Carlos O'Ryan",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=coryan",
            "name": "coryan",
            "key": "coryan",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Carlos O'Ryan",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=coryan",
            "name": "coryan",
            "key": "coryan",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Carlos O'Ryan",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 23400,
            "total": 23400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 23400,
            "total": 23400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14222/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 39,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13404987/worklog/660618",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11331:\nURL: https://github.com/apache/arrow/pull/11331#issuecomment-934938139\n\n\n   https://issues.apache.org/jira/browse/ARROW-14222\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-05T22:22:20.710+0000",
                    "updated": "2021-10-05T22:22:20.710+0000",
                    "started": "2021-10-05T22:22:20.710+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "660618",
                    "issueId": "13404987"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13404987/worklog/660636",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #11331:\nURL: https://github.com/apache/arrow/pull/11331#discussion_r722780827\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/gcsfs.h\n##########\n@@ -0,0 +1,111 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <memory>\n+#include <string>\n+#include <vector>\n+\n+#include \"arrow/filesystem/filesystem.h\"\n+\n+namespace arrow {\n+namespace fs {\n+class GCSFileSystem;\n+struct GCSOptions;\n+namespace internal {\n+// TODO(ARROW-1231) - during development only tests should create a GCSFileSystem.\n+//     Remove before declaring the feature complete.\n+std::shared_ptr<GCSFileSystem> MakeGCSFileSystemForTest(const GCSOptions& options);\n+}  // namespace internal\n+\n+struct ARROW_EXPORT GCSOptions {\n+  std::string endpoint_override;\n+  std::string scheme;\n+\n+  bool Equals(const GCSOptions& other) const;\n+\n+  /// \\brief Initialize with default credentials provider chain\n+  ///\n+  /// This is recommended if you use the standard AWS environment variables\n+  /// and/or configuration file.\n+  static GCSOptions Defaults();\n+\n+  /// \\brief Initialize with anonymous credentials.\n+  ///\n+  /// This will only let you access public buckets.\n+  static GCSOptions Anonymous();\n+};\n+\n+class ARROW_EXPORT GCSFileSystem : public FileSystem {\n\nReview comment:\n       small nit: GcsFileSystem? Also add docstring?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-05T23:36:10.016+0000",
                    "updated": "2021-10-05T23:36:10.016+0000",
                    "started": "2021-10-05T23:36:10.016+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "660636",
                    "issueId": "13404987"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13404987/worklog/660676",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "coryan commented on a change in pull request #11331:\nURL: https://github.com/apache/arrow/pull/11331#discussion_r722814545\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/gcsfs.h\n##########\n@@ -0,0 +1,111 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <memory>\n+#include <string>\n+#include <vector>\n+\n+#include \"arrow/filesystem/filesystem.h\"\n+\n+namespace arrow {\n+namespace fs {\n+class GCSFileSystem;\n+struct GCSOptions;\n+namespace internal {\n+// TODO(ARROW-1231) - during development only tests should create a GCSFileSystem.\n+//     Remove before declaring the feature complete.\n+std::shared_ptr<GCSFileSystem> MakeGCSFileSystemForTest(const GCSOptions& options);\n+}  // namespace internal\n+\n+struct ARROW_EXPORT GCSOptions {\n+  std::string endpoint_override;\n+  std::string scheme;\n+\n+  bool Equals(const GCSOptions& other) const;\n+\n+  /// \\brief Initialize with default credentials provider chain\n+  ///\n+  /// This is recommended if you use the standard AWS environment variables\n+  /// and/or configuration file.\n+  static GCSOptions Defaults();\n+\n+  /// \\brief Initialize with anonymous credentials.\n+  ///\n+  /// This will only let you access public buckets.\n+  static GCSOptions Anonymous();\n+};\n+\n+class ARROW_EXPORT GCSFileSystem : public FileSystem {\n\nReview comment:\n       I was wondering what was the style in this project. Fixed.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-06T01:13:13.169+0000",
                    "updated": "2021-10-06T01:13:13.169+0000",
                    "started": "2021-10-06T01:13:13.169+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "660676",
                    "issueId": "13404987"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13404987/worklog/661702",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "coryan commented on pull request #11331:\nURL: https://github.com/apache/arrow/pull/11331#issuecomment-937884476\n\n\n   Ping?\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-07T15:07:55.521+0000",
                    "updated": "2021-10-07T15:07:55.521+0000",
                    "started": "2021-10-07T15:07:55.521+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "661702",
                    "issueId": "13404987"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13404987/worklog/661726",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #11331:\nURL: https://github.com/apache/arrow/pull/11331#discussion_r724314084\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/gcsfs.cc\n##########\n@@ -0,0 +1,143 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/filesystem/gcsfs.h\"\n+\n+#include <google/cloud/storage/client.h>\n+\n+#include <sstream>\n+\n+#include \"arrow/filesystem/path_util.h\"\n+#include \"arrow/result.h\"\n+#include \"arrow/util/checked_cast.h\"\n+\n+namespace arrow {\n+namespace fs {\n+\n+namespace gcs = google::cloud::storage;\n+\n+google::cloud::Options AsGoogleCloudOptions(GcsOptions const& o) {\n+  auto options = google::cloud::Options{};\n\nReview comment:\n       Is there a reason to prefer this over `google::cloud::Options options`; ?\n\n##########\nFile path: cpp/src/arrow/filesystem/gcsfs.cc\n##########\n@@ -0,0 +1,143 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/filesystem/gcsfs.h\"\n+\n+#include <google/cloud/storage/client.h>\n+\n+#include <sstream>\n+\n+#include \"arrow/filesystem/path_util.h\"\n+#include \"arrow/result.h\"\n+#include \"arrow/util/checked_cast.h\"\n+\n+namespace arrow {\n+namespace fs {\n+\n+namespace gcs = google::cloud::storage;\n+\n+google::cloud::Options AsGoogleCloudOptions(GcsOptions const& o) {\n+  auto options = google::cloud::Options{};\n+  if (!o.endpoint_override.empty()) {\n+    auto scheme = o.scheme;\n+    if (scheme.empty()) scheme = \"https\";\n+    options.set<gcs::RestEndpointOption>(scheme + \"://\" + o.endpoint_override);\n+  }\n+  return options;\n+}\n+\n+class GcsFileSystem::Impl {\n+ public:\n+  explicit Impl(GcsOptions const& o) : client_(AsGoogleCloudOptions(o)) {}\n+\n+ private:\n+  gcs::Client client_;\n+};\n+\n+std::string GcsFileSystem::type_name() const { return \"gcs\"; }\n+\n+bool GcsFileSystem::Equals(const FileSystem& other) const {\n+  if (this == &other) {\n+    return true;\n+  }\n+  if (other.type_name() != type_name()) {\n+    return false;\n+  }\n+  const auto& fs = ::arrow::internal::checked_cast<const GcsFileSystem&>(other);\n+  return impl_ == fs.impl_;\n+}\n+\n+Result<FileInfo> GcsFileSystem::GetFileInfo(const std::string& path) {\n+  return Status::NotImplemented(\"The GCS FileSystem is not fully implemented\");\n+}\n+\n+Result<FileInfoVector> GcsFileSystem::GetFileInfo(const FileSelector& select) {\n+  return Status::NotImplemented(\"The GCS FileSystem is not fully implemented\");\n+}\n+\n+Status GcsFileSystem::CreateDir(const std::string& path, bool recursive) {\n+  return Status::NotImplemented(\"The GCS FileSystem is not fully implemented\");\n+}\n+\n+Status GcsFileSystem::DeleteDir(const std::string& path) {\n+  return Status::NotImplemented(\"The GCS FileSystem is not fully implemented\");\n+}\n+\n+Status GcsFileSystem::DeleteDirContents(const std::string& path) {\n+  return Status::NotImplemented(\"The GCS FileSystem is not fully implemented\");\n+}\n+\n+Status GcsFileSystem::DeleteRootDirContents() {\n+  return Status::NotImplemented(\"The GCS FileSystem is not fully implemented\");\n+}\n+\n+Status GcsFileSystem::DeleteFile(const std::string& path) {\n+  return Status::NotImplemented(\"The GCS FileSystem is not fully implemented\");\n+}\n+\n+Status GcsFileSystem::Move(const std::string& src, const std::string& dest) {\n+  return Status::NotImplemented(\"The GCS FileSystem is not fully implemented\");\n+}\n+\n+Status GcsFileSystem::CopyFile(const std::string& src, const std::string& dest) {\n+  return Status::NotImplemented(\"The GCS FileSystem is not fully implemented\");\n+}\n+\n+Result<std::shared_ptr<io::InputStream>> GcsFileSystem::OpenInputStream(\n+    const std::string& path) {\n+  return Status::NotImplemented(\"The GCS FileSystem is not fully implemented\");\n+}\n+\n+Result<std::shared_ptr<io::InputStream>> GcsFileSystem::OpenInputStream(\n+    const FileInfo& info) {\n+  return Status::NotImplemented(\"The GCS FileSystem is not fully implemented\");\n+}\n+\n+Result<std::shared_ptr<io::RandomAccessFile>> GcsFileSystem::OpenInputFile(\n+    const std::string& path) {\n+  return Status::NotImplemented(\"The GCS FileSystem is not fully implemented\");\n+}\n+\n+Result<std::shared_ptr<io::RandomAccessFile>> GcsFileSystem::OpenInputFile(\n+    const FileInfo& info) {\n+  return Status::NotImplemented(\"The GCS FileSystem is not fully implemented\");\n+}\n+\n+Result<std::shared_ptr<io::OutputStream>> GcsFileSystem::OpenOutputStream(\n+    const std::string& path, const std::shared_ptr<const KeyValueMetadata>& metadata) {\n+  return Status::NotImplemented(\"The GCS FileSystem is not fully implemented\");\n+}\n+\n+Result<std::shared_ptr<io::OutputStream>> GcsFileSystem::OpenAppendStream(\n+    const std::string&, const std::shared_ptr<const KeyValueMetadata>&) {\n+  return Status::NotImplemented(\"Append is not supported in GCS\");\n+}\n+\n+GcsFileSystem::GcsFileSystem(const GcsOptions& options, const io::IOContext& context)\n+    : FileSystem(context), impl_(std::make_shared<Impl>(options)) {}\n+\n+namespace internal {\n+\n+std::shared_ptr<GcsFileSystem> MakeGcsFileSystemForTest(const GcsOptions& options) {\n+  return std::shared_ptr<GcsFileSystem>(\n\nReview comment:\n       maybe comment on why std::make_shared isn't used.\n\n##########\nFile path: cpp/src/arrow/filesystem/gcsfs_test.cc\n##########\n@@ -0,0 +1,51 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/filesystem/gcsfs.h\"\n+\n+#include <gmock/gmock-matchers.h>\n+#include <gmock/gmock-more-matchers.h>\n+#include <gtest/gtest.h>\n+\n+#include <string>\n+\n+#include \"arrow/testing/gtest_util.h\"\n+#include \"arrow/testing/util.h\"\n+\n+namespace arrow {\n+namespace fs {\n+namespace {\n+\n+using ::testing::IsEmpty;\n+using ::testing::Not;\n+using ::testing::NotNull;\n+\n+TEST(GCSFileSystem, Compare) {\n+  auto a = internal::MakeGcsFileSystemForTest(GcsOptions{});\n+  EXPECT_THAT(a.get(), NotNull());\n+  EXPECT_EQ(a, a);\n+\n+  auto b = internal::MakeGcsFileSystemForTest(GcsOptions{});\n+  EXPECT_THAT(b.get(), NotNull());\n+  EXPECT_EQ(b, b);\n+\n+  EXPECT_NE(a, b);\n\nReview comment:\n       I think Equals here is mean logically equal, shouldn't this be equal?\n\n##########\nFile path: cpp/src/arrow/filesystem/gcsfs_test.cc\n##########\n@@ -0,0 +1,51 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/filesystem/gcsfs.h\"\n+\n+#include <gmock/gmock-matchers.h>\n+#include <gmock/gmock-more-matchers.h>\n+#include <gtest/gtest.h>\n+\n+#include <string>\n+\n+#include \"arrow/testing/gtest_util.h\"\n+#include \"arrow/testing/util.h\"\n+\n+namespace arrow {\n+namespace fs {\n+namespace {\n+\n+using ::testing::IsEmpty;\n+using ::testing::Not;\n+using ::testing::NotNull;\n+\n+TEST(GCSFileSystem, Compare) {\n+  auto a = internal::MakeGcsFileSystemForTest(GcsOptions{});\n+  EXPECT_THAT(a.get(), NotNull());\n+  EXPECT_EQ(a, a);\n\nReview comment:\n       should this be comparing the objects `EXPECT_EQ(*a, *a)`\n\n##########\nFile path: cpp/src/arrow/filesystem/gcsfs.cc\n##########\n@@ -0,0 +1,143 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/filesystem/gcsfs.h\"\n+\n+#include <google/cloud/storage/client.h>\n+\n+#include <sstream>\n+\n+#include \"arrow/filesystem/path_util.h\"\n+#include \"arrow/result.h\"\n+#include \"arrow/util/checked_cast.h\"\n+\n+namespace arrow {\n+namespace fs {\n+\n+namespace gcs = google::cloud::storage;\n+\n+google::cloud::Options AsGoogleCloudOptions(GcsOptions const& o) {\n+  auto options = google::cloud::Options{};\n+  if (!o.endpoint_override.empty()) {\n+    auto scheme = o.scheme;\n\nReview comment:\n       please spell out the type.\n\n##########\nFile path: cpp/src/arrow/filesystem/gcsfs_test.cc\n##########\n@@ -0,0 +1,51 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/filesystem/gcsfs.h\"\n+\n+#include <gmock/gmock-matchers.h>\n+#include <gmock/gmock-more-matchers.h>\n+#include <gtest/gtest.h>\n+\n+#include <string>\n+\n+#include \"arrow/testing/gtest_util.h\"\n+#include \"arrow/testing/util.h\"\n+\n+namespace arrow {\n+namespace fs {\n+namespace {\n+\n+using ::testing::IsEmpty;\n+using ::testing::Not;\n+using ::testing::NotNull;\n+\n+TEST(GCSFileSystem, Compare) {\n+  auto a = internal::MakeGcsFileSystemForTest(GcsOptions{});\n+  EXPECT_THAT(a.get(), NotNull());\n+  EXPECT_EQ(a, a);\n+\n+  auto b = internal::MakeGcsFileSystemForTest(GcsOptions{});\n+  EXPECT_THAT(b.get(), NotNull());\n\nReview comment:\n       I don't think .get() is necessary here and above.\n\n##########\nFile path: cpp/src/arrow/filesystem/gcsfs.cc\n##########\n@@ -0,0 +1,143 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/filesystem/gcsfs.h\"\n+\n+#include <google/cloud/storage/client.h>\n+\n+#include <sstream>\n+\n+#include \"arrow/filesystem/path_util.h\"\n+#include \"arrow/result.h\"\n+#include \"arrow/util/checked_cast.h\"\n+\n+namespace arrow {\n+namespace fs {\n+\n+namespace gcs = google::cloud::storage;\n+\n+google::cloud::Options AsGoogleCloudOptions(GcsOptions const& o) {\n\nReview comment:\n       const should be in front of GcsOptions?\n\n##########\nFile path: cpp/src/arrow/filesystem/gcsfs.h\n##########\n@@ -0,0 +1,130 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <memory>\n+#include <string>\n+#include <vector>\n+\n+#include \"arrow/filesystem/filesystem.h\"\n+\n+namespace arrow {\n+namespace fs {\n+class GcsFileSystem;\n+struct GcsOptions;\n+namespace internal {\n+// TODO(ARROW-1231) - during development only tests should create a GcsFileSystem.\n+//     Remove, and provide a public API, before declaring the feature complete.\n+std::shared_ptr<GcsFileSystem> MakeGcsFileSystemForTest(const GcsOptions& options);\n\nReview comment:\n       The TODO covers make a static method [Make](https://github.com/apache/arrow/blob/master/cpp/src/arrow/filesystem/s3fs.h#L281) on GcsFileSystem\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-07T15:59:55.826+0000",
                    "updated": "2021-10-07T15:59:55.826+0000",
                    "started": "2021-10-07T15:59:55.825+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "661726",
                    "issueId": "13404987"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13404987/worklog/661728",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #11331:\nURL: https://github.com/apache/arrow/pull/11331#discussion_r724322268\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/gcsfs.h\n##########\n@@ -0,0 +1,111 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <memory>\n+#include <string>\n+#include <vector>\n+\n+#include \"arrow/filesystem/filesystem.h\"\n+\n+namespace arrow {\n+namespace fs {\n+class GCSFileSystem;\n+struct GCSOptions;\n+namespace internal {\n+// TODO(ARROW-1231) - during development only tests should create a GCSFileSystem.\n+//     Remove before declaring the feature complete.\n+std::shared_ptr<GCSFileSystem> MakeGCSFileSystemForTest(const GCSOptions& options);\n+}  // namespace internal\n+\n+struct ARROW_EXPORT GCSOptions {\n+  std::string endpoint_override;\n+  std::string scheme;\n+\n+  bool Equals(const GCSOptions& other) const;\n+\n+  /// \\brief Initialize with default credentials provider chain\n+  ///\n+  /// This is recommended if you use the standard AWS environment variables\n+  /// and/or configuration file.\n+  static GCSOptions Defaults();\n+\n+  /// \\brief Initialize with anonymous credentials.\n+  ///\n+  /// This will only let you access public buckets.\n+  static GCSOptions Anonymous();\n+};\n+\n+class ARROW_EXPORT GCSFileSystem : public FileSystem {\n\nReview comment:\n       Generally, google style,  There are some cases where we've used the all caps spelling though (e.g. CSV)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-07T16:00:48.457+0000",
                    "updated": "2021-10-07T16:00:48.457+0000",
                    "started": "2021-10-07T16:00:48.457+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "661728",
                    "issueId": "13404987"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13404987/worklog/661817",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "coryan commented on a change in pull request #11331:\nURL: https://github.com/apache/arrow/pull/11331#discussion_r724421894\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/gcsfs.cc\n##########\n@@ -0,0 +1,143 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/filesystem/gcsfs.h\"\n+\n+#include <google/cloud/storage/client.h>\n+\n+#include <sstream>\n+\n+#include \"arrow/filesystem/path_util.h\"\n+#include \"arrow/result.h\"\n+#include \"arrow/util/checked_cast.h\"\n+\n+namespace arrow {\n+namespace fs {\n+\n+namespace gcs = google::cloud::storage;\n+\n+google::cloud::Options AsGoogleCloudOptions(GcsOptions const& o) {\n\nReview comment:\n       Thanks.  I did not mean to restart the \"east const\" vs. \"const west\" holy way, but muscle memory is what it is.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-07T18:14:26.622+0000",
                    "updated": "2021-10-07T18:14:26.622+0000",
                    "started": "2021-10-07T18:14:26.622+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "661817",
                    "issueId": "13404987"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13404987/worklog/661821",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "coryan commented on a change in pull request #11331:\nURL: https://github.com/apache/arrow/pull/11331#discussion_r724423189\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/gcsfs.cc\n##########\n@@ -0,0 +1,143 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/filesystem/gcsfs.h\"\n+\n+#include <google/cloud/storage/client.h>\n+\n+#include <sstream>\n+\n+#include \"arrow/filesystem/path_util.h\"\n+#include \"arrow/result.h\"\n+#include \"arrow/util/checked_cast.h\"\n+\n+namespace arrow {\n+namespace fs {\n+\n+namespace gcs = google::cloud::storage;\n+\n+google::cloud::Options AsGoogleCloudOptions(GcsOptions const& o) {\n+  auto options = google::cloud::Options{};\n\nReview comment:\n       \"Almost Always Auto\", another holy war. I can change it if you think it is confusing.\r\n   \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-07T18:16:19.125+0000",
                    "updated": "2021-10-07T18:16:19.125+0000",
                    "started": "2021-10-07T18:16:19.125+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "661821",
                    "issueId": "13404987"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13404987/worklog/661822",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "coryan commented on a change in pull request #11331:\nURL: https://github.com/apache/arrow/pull/11331#discussion_r724423446\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/gcsfs.cc\n##########\n@@ -0,0 +1,143 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/filesystem/gcsfs.h\"\n+\n+#include <google/cloud/storage/client.h>\n+\n+#include <sstream>\n+\n+#include \"arrow/filesystem/path_util.h\"\n+#include \"arrow/result.h\"\n+#include \"arrow/util/checked_cast.h\"\n+\n+namespace arrow {\n+namespace fs {\n+\n+namespace gcs = google::cloud::storage;\n+\n+google::cloud::Options AsGoogleCloudOptions(GcsOptions const& o) {\n+  auto options = google::cloud::Options{};\n+  if (!o.endpoint_override.empty()) {\n+    auto scheme = o.scheme;\n\nReview comment:\n       Done.\n\n##########\nFile path: cpp/src/arrow/filesystem/gcsfs.h\n##########\n@@ -0,0 +1,130 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <memory>\n+#include <string>\n+#include <vector>\n+\n+#include \"arrow/filesystem/filesystem.h\"\n+\n+namespace arrow {\n+namespace fs {\n+class GcsFileSystem;\n+struct GcsOptions;\n+namespace internal {\n+// TODO(ARROW-1231) - during development only tests should create a GcsFileSystem.\n+//     Remove, and provide a public API, before declaring the feature complete.\n+std::shared_ptr<GcsFileSystem> MakeGcsFileSystemForTest(const GcsOptions& options);\n\nReview comment:\n       Fixed to make the TODO more explicit\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-07T18:16:43.841+0000",
                    "updated": "2021-10-07T18:16:43.841+0000",
                    "started": "2021-10-07T18:16:43.840+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "661822",
                    "issueId": "13404987"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13404987/worklog/661823",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "coryan commented on a change in pull request #11331:\nURL: https://github.com/apache/arrow/pull/11331#discussion_r724423574\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/gcsfs.h\n##########\n@@ -0,0 +1,130 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <memory>\n+#include <string>\n+#include <vector>\n+\n+#include \"arrow/filesystem/filesystem.h\"\n+\n+namespace arrow {\n+namespace fs {\n+class GcsFileSystem;\n+struct GcsOptions;\n+namespace internal {\n+// TODO(ARROW-1231) - during development only tests should create a GcsFileSystem.\n+//     Remove, and provide a public API, before declaring the feature complete.\n+std::shared_ptr<GcsFileSystem> MakeGcsFileSystemForTest(const GcsOptions& options);\n\nReview comment:\n       I hope that is what you had in mind.\r\n   \n\n##########\nFile path: cpp/src/arrow/filesystem/gcsfs.cc\n##########\n@@ -0,0 +1,143 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/filesystem/gcsfs.h\"\n+\n+#include <google/cloud/storage/client.h>\n+\n+#include <sstream>\n+\n+#include \"arrow/filesystem/path_util.h\"\n+#include \"arrow/result.h\"\n+#include \"arrow/util/checked_cast.h\"\n+\n+namespace arrow {\n+namespace fs {\n+\n+namespace gcs = google::cloud::storage;\n+\n+google::cloud::Options AsGoogleCloudOptions(GcsOptions const& o) {\n+  auto options = google::cloud::Options{};\n+  if (!o.endpoint_override.empty()) {\n+    auto scheme = o.scheme;\n+    if (scheme.empty()) scheme = \"https\";\n+    options.set<gcs::RestEndpointOption>(scheme + \"://\" + o.endpoint_override);\n+  }\n+  return options;\n+}\n+\n+class GcsFileSystem::Impl {\n+ public:\n+  explicit Impl(GcsOptions const& o) : client_(AsGoogleCloudOptions(o)) {}\n+\n+ private:\n+  gcs::Client client_;\n+};\n+\n+std::string GcsFileSystem::type_name() const { return \"gcs\"; }\n+\n+bool GcsFileSystem::Equals(const FileSystem& other) const {\n+  if (this == &other) {\n+    return true;\n+  }\n+  if (other.type_name() != type_name()) {\n+    return false;\n+  }\n+  const auto& fs = ::arrow::internal::checked_cast<const GcsFileSystem&>(other);\n+  return impl_ == fs.impl_;\n+}\n+\n+Result<FileInfo> GcsFileSystem::GetFileInfo(const std::string& path) {\n+  return Status::NotImplemented(\"The GCS FileSystem is not fully implemented\");\n+}\n+\n+Result<FileInfoVector> GcsFileSystem::GetFileInfo(const FileSelector& select) {\n+  return Status::NotImplemented(\"The GCS FileSystem is not fully implemented\");\n+}\n+\n+Status GcsFileSystem::CreateDir(const std::string& path, bool recursive) {\n+  return Status::NotImplemented(\"The GCS FileSystem is not fully implemented\");\n+}\n+\n+Status GcsFileSystem::DeleteDir(const std::string& path) {\n+  return Status::NotImplemented(\"The GCS FileSystem is not fully implemented\");\n+}\n+\n+Status GcsFileSystem::DeleteDirContents(const std::string& path) {\n+  return Status::NotImplemented(\"The GCS FileSystem is not fully implemented\");\n+}\n+\n+Status GcsFileSystem::DeleteRootDirContents() {\n+  return Status::NotImplemented(\"The GCS FileSystem is not fully implemented\");\n+}\n+\n+Status GcsFileSystem::DeleteFile(const std::string& path) {\n+  return Status::NotImplemented(\"The GCS FileSystem is not fully implemented\");\n+}\n+\n+Status GcsFileSystem::Move(const std::string& src, const std::string& dest) {\n+  return Status::NotImplemented(\"The GCS FileSystem is not fully implemented\");\n+}\n+\n+Status GcsFileSystem::CopyFile(const std::string& src, const std::string& dest) {\n+  return Status::NotImplemented(\"The GCS FileSystem is not fully implemented\");\n+}\n+\n+Result<std::shared_ptr<io::InputStream>> GcsFileSystem::OpenInputStream(\n+    const std::string& path) {\n+  return Status::NotImplemented(\"The GCS FileSystem is not fully implemented\");\n+}\n+\n+Result<std::shared_ptr<io::InputStream>> GcsFileSystem::OpenInputStream(\n+    const FileInfo& info) {\n+  return Status::NotImplemented(\"The GCS FileSystem is not fully implemented\");\n+}\n+\n+Result<std::shared_ptr<io::RandomAccessFile>> GcsFileSystem::OpenInputFile(\n+    const std::string& path) {\n+  return Status::NotImplemented(\"The GCS FileSystem is not fully implemented\");\n+}\n+\n+Result<std::shared_ptr<io::RandomAccessFile>> GcsFileSystem::OpenInputFile(\n+    const FileInfo& info) {\n+  return Status::NotImplemented(\"The GCS FileSystem is not fully implemented\");\n+}\n+\n+Result<std::shared_ptr<io::OutputStream>> GcsFileSystem::OpenOutputStream(\n+    const std::string& path, const std::shared_ptr<const KeyValueMetadata>& metadata) {\n+  return Status::NotImplemented(\"The GCS FileSystem is not fully implemented\");\n+}\n+\n+Result<std::shared_ptr<io::OutputStream>> GcsFileSystem::OpenAppendStream(\n+    const std::string&, const std::shared_ptr<const KeyValueMetadata>&) {\n+  return Status::NotImplemented(\"Append is not supported in GCS\");\n+}\n+\n+GcsFileSystem::GcsFileSystem(const GcsOptions& options, const io::IOContext& context)\n+    : FileSystem(context), impl_(std::make_shared<Impl>(options)) {}\n+\n+namespace internal {\n+\n+std::shared_ptr<GcsFileSystem> MakeGcsFileSystemForTest(const GcsOptions& options) {\n+  return std::shared_ptr<GcsFileSystem>(\n\nReview comment:\n       Done.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-07T18:16:57.003+0000",
                    "updated": "2021-10-07T18:16:57.003+0000",
                    "started": "2021-10-07T18:16:57.003+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "661823",
                    "issueId": "13404987"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13404987/worklog/661825",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "coryan commented on a change in pull request #11331:\nURL: https://github.com/apache/arrow/pull/11331#discussion_r724423893\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/gcsfs_test.cc\n##########\n@@ -0,0 +1,51 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/filesystem/gcsfs.h\"\n+\n+#include <gmock/gmock-matchers.h>\n+#include <gmock/gmock-more-matchers.h>\n+#include <gtest/gtest.h>\n+\n+#include <string>\n+\n+#include \"arrow/testing/gtest_util.h\"\n+#include \"arrow/testing/util.h\"\n+\n+namespace arrow {\n+namespace fs {\n+namespace {\n+\n+using ::testing::IsEmpty;\n+using ::testing::Not;\n+using ::testing::NotNull;\n+\n+TEST(GCSFileSystem, Compare) {\n+  auto a = internal::MakeGcsFileSystemForTest(GcsOptions{});\n+  EXPECT_THAT(a.get(), NotNull());\n+  EXPECT_EQ(a, a);\n+\n+  auto b = internal::MakeGcsFileSystemForTest(GcsOptions{});\n+  EXPECT_THAT(b.get(), NotNull());\n+  EXPECT_EQ(b, b);\n+\n+  EXPECT_NE(a, b);\n\nReview comment:\n       I do not know what \"logically equals\" means.  At a guess something like \"modulo transient errors, both produce the same results\"?  If so, I am not sure there is a reliable way to do that: consider `storage.googleapis.com` vs. `private.googleapis.com` as endpoint overrides, different strings, but depending on your environment, exactly the same behavior (or not!).\r\n   \r\n   Anyway, implemented something closer to the current implementation for the S3 FileSystem.\n\n##########\nFile path: cpp/src/arrow/filesystem/gcsfs_test.cc\n##########\n@@ -0,0 +1,51 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/filesystem/gcsfs.h\"\n+\n+#include <gmock/gmock-matchers.h>\n+#include <gmock/gmock-more-matchers.h>\n+#include <gtest/gtest.h>\n+\n+#include <string>\n+\n+#include \"arrow/testing/gtest_util.h\"\n+#include \"arrow/testing/util.h\"\n+\n+namespace arrow {\n+namespace fs {\n+namespace {\n+\n+using ::testing::IsEmpty;\n+using ::testing::Not;\n+using ::testing::NotNull;\n+\n+TEST(GCSFileSystem, Compare) {\n+  auto a = internal::MakeGcsFileSystemForTest(GcsOptions{});\n+  EXPECT_THAT(a.get(), NotNull());\n+  EXPECT_EQ(a, a);\n+\n+  auto b = internal::MakeGcsFileSystemForTest(GcsOptions{});\n+  EXPECT_THAT(b.get(), NotNull());\n\nReview comment:\n       Doh, fixed.\n\n##########\nFile path: cpp/src/arrow/filesystem/gcsfs_test.cc\n##########\n@@ -0,0 +1,51 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/filesystem/gcsfs.h\"\n+\n+#include <gmock/gmock-matchers.h>\n+#include <gmock/gmock-more-matchers.h>\n+#include <gtest/gtest.h>\n+\n+#include <string>\n+\n+#include \"arrow/testing/gtest_util.h\"\n+#include \"arrow/testing/util.h\"\n+\n+namespace arrow {\n+namespace fs {\n+namespace {\n+\n+using ::testing::IsEmpty;\n+using ::testing::Not;\n+using ::testing::NotNull;\n+\n+TEST(GCSFileSystem, Compare) {\n+  auto a = internal::MakeGcsFileSystemForTest(GcsOptions{});\n+  EXPECT_THAT(a.get(), NotNull());\n+  EXPECT_EQ(a, a);\n\nReview comment:\n       Actually we want `a->Equals()` fixed.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-07T18:17:33.655+0000",
                    "updated": "2021-10-07T18:17:33.655+0000",
                    "started": "2021-10-07T18:17:33.655+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "661825",
                    "issueId": "13404987"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13404987/worklog/661826",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #11331:\nURL: https://github.com/apache/arrow/pull/11331#discussion_r724424342\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/gcsfs.cc\n##########\n@@ -0,0 +1,143 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/filesystem/gcsfs.h\"\n+\n+#include <google/cloud/storage/client.h>\n+\n+#include <sstream>\n+\n+#include \"arrow/filesystem/path_util.h\"\n+#include \"arrow/result.h\"\n+#include \"arrow/util/checked_cast.h\"\n+\n+namespace arrow {\n+namespace fs {\n+\n+namespace gcs = google::cloud::storage;\n+\n+google::cloud::Options AsGoogleCloudOptions(GcsOptions const& o) {\n+  auto options = google::cloud::Options{};\n\nReview comment:\n       Yeah, the almost always use auto (my undertanding this is from effective C++) directly contradicts the style guide in use (which is only use auto if type is obvious).  In this case type is  obvious, it just seems like there is more text in this case.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-07T18:18:07.870+0000",
                    "updated": "2021-10-07T18:18:07.870+0000",
                    "started": "2021-10-07T18:18:07.870+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "661826",
                    "issueId": "13404987"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13404987/worklog/661827",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #11331:\nURL: https://github.com/apache/arrow/pull/11331#discussion_r724317465\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/gcsfs.h\n##########\n@@ -0,0 +1,130 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <memory>\n+#include <string>\n+#include <vector>\n+\n+#include \"arrow/filesystem/filesystem.h\"\n+\n+namespace arrow {\n+namespace fs {\n+class GcsFileSystem;\n+struct GcsOptions;\n+namespace internal {\n+// TODO(ARROW-1231) - during development only tests should create a GcsFileSystem.\n+//     Remove, and provide a public API, before declaring the feature complete.\n+std::shared_ptr<GcsFileSystem> MakeGcsFileSystemForTest(const GcsOptions& options);\n\nReview comment:\n       The TODO covers make a static method [Make](https://github.com/apache/arrow/blob/master/cpp/src/arrow/filesystem/s3fs.h#L281) on GcsFileSystem?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-07T18:18:41.249+0000",
                    "updated": "2021-10-07T18:18:41.249+0000",
                    "started": "2021-10-07T18:18:41.249+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "661827",
                    "issueId": "13404987"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13404987/worklog/661828",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #11331:\nURL: https://github.com/apache/arrow/pull/11331#issuecomment-938042370\n\n\n   C++ looks good to me.  I'll wait and see if there are any comments on CMake (I'll merge later today if nothing comes up)\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-07T18:20:04.461+0000",
                    "updated": "2021-10-07T18:20:04.461+0000",
                    "started": "2021-10-07T18:20:04.461+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "661828",
                    "issueId": "13404987"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13404987/worklog/661830",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #11331:\nURL: https://github.com/apache/arrow/pull/11331#discussion_r724427662\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/gcsfs_test.cc\n##########\n@@ -0,0 +1,51 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/filesystem/gcsfs.h\"\n+\n+#include <gmock/gmock-matchers.h>\n+#include <gmock/gmock-more-matchers.h>\n+#include <gtest/gtest.h>\n+\n+#include <string>\n+\n+#include \"arrow/testing/gtest_util.h\"\n+#include \"arrow/testing/util.h\"\n+\n+namespace arrow {\n+namespace fs {\n+namespace {\n+\n+using ::testing::IsEmpty;\n+using ::testing::Not;\n+using ::testing::NotNull;\n+\n+TEST(GCSFileSystem, Compare) {\n+  auto a = internal::MakeGcsFileSystemForTest(GcsOptions{});\n+  EXPECT_THAT(a.get(), NotNull());\n+  EXPECT_EQ(a, a);\n+\n+  auto b = internal::MakeGcsFileSystemForTest(GcsOptions{});\n+  EXPECT_THAT(b.get(), NotNull());\n+  EXPECT_EQ(b, b);\n+\n+  EXPECT_NE(a, b);\n\nReview comment:\n       yeah, I meant configuration parameters are equal.  Before this looked like it was using solely memory address equality.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-07T18:23:15.793+0000",
                    "updated": "2021-10-07T18:23:15.793+0000",
                    "started": "2021-10-07T18:23:15.793+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "661830",
                    "issueId": "13404987"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13404987/worklog/661832",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #11331:\nURL: https://github.com/apache/arrow/pull/11331#discussion_r724430639\n\n\n\n##########\nFile path: cpp/CMakeLists.txt\n##########\n@@ -801,7 +801,11 @@ endif()\n set(ARROW_SHARED_PRIVATE_LINK_LIBS ${ARROW_STATIC_LINK_LIBS})\n \n # boost::filesystem is needed for S3 and Flight tests as a boost::process dependency.\n-if(((ARROW_FLIGHT OR ARROW_S3) AND (ARROW_BUILD_TESTS OR ARROW_BUILD_INTEGRATION)))\n+if(((ARROW_FLIGHT\n+     OR ARROW_S3\n\nReview comment:\n       Not sure if the mac build is a transient error or somehow due to this?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-07T18:27:37.800+0000",
                    "updated": "2021-10-07T18:27:37.800+0000",
                    "started": "2021-10-07T18:27:37.799+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "661832",
                    "issueId": "13404987"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13404987/worklog/661840",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "coryan commented on a change in pull request #11331:\nURL: https://github.com/apache/arrow/pull/11331#discussion_r724437957\n\n\n\n##########\nFile path: cpp/CMakeLists.txt\n##########\n@@ -801,7 +801,11 @@ endif()\n set(ARROW_SHARED_PRIVATE_LINK_LIBS ${ARROW_STATIC_LINK_LIBS})\n \n # boost::filesystem is needed for S3 and Flight tests as a boost::process dependency.\n-if(((ARROW_FLIGHT OR ARROW_S3) AND (ARROW_BUILD_TESTS OR ARROW_BUILD_INTEGRATION)))\n+if(((ARROW_FLIGHT\n+     OR ARROW_S3\n\nReview comment:\n       I do not think is this change, as the build has `-DARROW_GCS=OFF`:\r\n   \r\n   https://github.com/apache/arrow/pull/11331/checks?check_run_id=3830637295#step:9:62\r\n   \r\n   and the change is (modulo reformatting) changing `(ARROW_FLIGHT OR ARROW_S3)` to `(ARROW_FLIGHT OR ARROW_S3 OR ARROW_GCS)`.  In addition, this change has been there since the first commit in the branch. \r\n   \r\n   At a guess this is either a transient or the point in `master` where I based the branch has a problem, I can rebase if you think that would help.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-07T18:38:42.239+0000",
                    "updated": "2021-10-07T18:38:42.239+0000",
                    "started": "2021-10-07T18:38:42.239+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "661840",
                    "issueId": "13404987"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13404987/worklog/661842",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #11331:\nURL: https://github.com/apache/arrow/pull/11331#discussion_r724439765\n\n\n\n##########\nFile path: cpp/CMakeLists.txt\n##########\n@@ -801,7 +801,11 @@ endif()\n set(ARROW_SHARED_PRIVATE_LINK_LIBS ${ARROW_STATIC_LINK_LIBS})\n \n # boost::filesystem is needed for S3 and Flight tests as a boost::process dependency.\n-if(((ARROW_FLIGHT OR ARROW_S3) AND (ARROW_BUILD_TESTS OR ARROW_BUILD_INTEGRATION)))\n+if(((ARROW_FLIGHT\n+     OR ARROW_S3\n\nReview comment:\n       yeah, lets try a rebase.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-07T18:41:20.378+0000",
                    "updated": "2021-10-07T18:41:20.378+0000",
                    "started": "2021-10-07T18:41:20.377+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "661842",
                    "issueId": "13404987"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13404987/worklog/661843",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "coryan commented on a change in pull request #11331:\nURL: https://github.com/apache/arrow/pull/11331#discussion_r724440172\n\n\n\n##########\nFile path: cpp/CMakeLists.txt\n##########\n@@ -801,7 +801,11 @@ endif()\n set(ARROW_SHARED_PRIVATE_LINK_LIBS ${ARROW_STATIC_LINK_LIBS})\n \n # boost::filesystem is needed for S3 and Flight tests as a boost::process dependency.\n-if(((ARROW_FLIGHT OR ARROW_S3) AND (ARROW_BUILD_TESTS OR ARROW_BUILD_INTEGRATION)))\n+if(((ARROW_FLIGHT\n+     OR ARROW_S3\n\nReview comment:\n       Looking at the builds at `master`, I do not think a rebase would help, and it seems even less likely that these changes caused the build breaks:\r\n   \r\n   https://github.com/apache/arrow/actions/runs/1317260919\r\n   \r\n   https://github.com/apache/arrow/actions?query=event%3Apush+branch%3Amaster\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-07T18:42:04.020+0000",
                    "updated": "2021-10-07T18:42:04.020+0000",
                    "started": "2021-10-07T18:42:04.020+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "661843",
                    "issueId": "13404987"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13404987/worklog/661844",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "coryan commented on pull request #11331:\nURL: https://github.com/apache/arrow/pull/11331#issuecomment-938060730\n\n\n   Rebased anyway.  At least that makes it easier to understand what build problems are coming from where.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-07T18:46:31.217+0000",
                    "updated": "2021-10-07T18:46:31.217+0000",
                    "started": "2021-10-07T18:46:31.217+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "661844",
                    "issueId": "13404987"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 23400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@4561d12a[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2200b4c3[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1a2732a2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@3d262b89[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@303e508c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@4340523b[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6051dad3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@6c27cf33[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2e5f480b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@6f4f0671[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@126ce09[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@532ad749[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 23400,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Oct 09 00:41:15 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-10-09T00:41:15.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14222/watchers",
            "watchCount": 0,
            "isWatching": false
        },
        "created": "2021-10-05T13:06:17.000+0000",
        "updated": "2021-10-11T07:56:29.000+0000",
        "timeoriginalestimate": null,
        "description": "Implement a skeleton for GCSFileSystem. All functions would return `Status::NotImplemented()`. This will keep the future changes smaller, and allow me to verify all CI builds are working in a smaller PR.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "6.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 23400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Create GcsFileSystem skeleton",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13404987/comment/17426429",
                    "id": "17426429",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "body": "Issue resolved by pull request 11331\n[https://github.com/apache/arrow/pull/11331]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "created": "2021-10-09T00:41:15.448+0000",
                    "updated": "2021-10-09T00:41:15.448+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0vkrc:",
        "customfield_12314139": null
    }
}