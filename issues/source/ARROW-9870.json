{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13324723",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13324723",
    "key": "ARROW-9870",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345977",
                "id": "12345977",
                "description": "",
                "name": "2.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-10-19"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333008",
                "id": "12333008",
                "name": "R"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 3600,
            "total": 3600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 3600,
            "total": 3600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9870/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 6,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13324723/worklog/495626",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson opened a new pull request #8351:\nURL: https://github.com/apache/arrow/pull/8351\n\n\n   Goals:\r\n   \r\n   * Make it easy to copy/move files from one fs to another (e.g. copy from/to S3)\r\n   * Simplify the ability to use a FileSystem + path to point to a file(s), without having to carry a `filesystem` argument through all functions\r\n   * Helpers to make it easier to work with S3 buckets\r\n   \r\n   Very rough WIP right now but see vignettes/fs.Rmd for the direction I'm going. Will push through this more and then post a list of questions/dilemmas.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-05T22:41:17.301+0000",
                    "updated": "2020-10-05T22:41:17.301+0000",
                    "started": "2020-10-05T22:41:17.301+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "495626",
                    "issueId": "13324723"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13324723/worklog/495627",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #8351:\nURL: https://github.com/apache/arrow/pull/8351#issuecomment-703929272\n\n\n   https://issues.apache.org/jira/browse/ARROW-9870\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-05T22:46:56.810+0000",
                    "updated": "2020-10-05T22:46:56.810+0000",
                    "started": "2020-10-05T22:46:56.809+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "495627",
                    "issueId": "13324723"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13324723/worklog/496930",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #8351:\nURL: https://github.com/apache/arrow/pull/8351#discussion_r501234407\n\n\n\n##########\nFile path: r/vignettes/fs.Rmd\n##########\n@@ -44,41 +44,46 @@ the cost of reading the data over the network should be much lower.\n \n ## Creating a FileSystem object\n \n-Another way to connect to S3 is to create an `S3FileSystem` object once and pass\n-that to the read/write functions. This may be a convenience when dealing with\n+Another way to connect to S3 is to create an `FileSystem` object once and pass\n\nReview comment:\n       ```suggestion\r\n   Another way to connect to S3 is to create a `FileSystem` object once and pass\r\n   ```\n\n##########\nFile path: r/vignettes/dataset.Rmd\n##########\n@@ -26,9 +26,27 @@ The total file size is around 37 gigabytes, even in the efficient Parquet file f\n That's bigger than memory on most people's computers,\n so we can't just read it all in and stack it into a single data frame.\n \n-In a future release, you'll be able to point your R session at S3 and query\n-the dataset from there. For now, datasets need to be on your local file system.\n-To download the files,\n+If you've installed a binary macOS or Windows `arrow` package, you should have\n+support for S3 built in. If you do, you can query datasets directly on S3 without\n+first copying the files locally. To check, run\n+\n+```{r}\n+arrow::arrow_with_s3()\n+```\n+\n+Even with S3 support enabled, unless your machine is located in the same AWS\n+region as the data, network speed will be a bottleneck. So, for this vignette,\n+we assume that the NYC taxi dataset has been downloaded locally in a \"nyc-taxi\"\n+directory.\n\nReview comment:\n       ```suggestion\r\n   Even with S3 support enabled network speed will be a bottleneck unless your\r\n   machine is located in the same AWS region as the data. So, for this vignette,\r\n   we assume that the NYC taxi dataset has been downloaded locally in a \"nyc-taxi\"\r\n   directory. Following are two possible ways to download all of it but neither is\r\n   evaluated; if you want to run with live data, you'll have to do it yourself\r\n   separately. Given the size, if you're running this locally and don't have a fast\r\n   connection, you may want to grab just a year or two of data.\r\n   ```\n\n##########\nFile path: r/vignettes/fs.Rmd\n##########\n@@ -44,41 +44,46 @@ the cost of reading the data over the network should be much lower.\n \n ## Creating a FileSystem object\n \n-Another way to connect to S3 is to create an `S3FileSystem` object once and pass\n-that to the read/write functions. This may be a convenience when dealing with\n+Another way to connect to S3 is to create an `FileSystem` object once and pass\n+that to the read/write functions.\n+`s3_bucket()` is a convenience function to create an `S3FileSystem` object,\n+automatically detecting the bucket's AWS region and holding onto the bucket's\n+relative path.\n+This may be a convenience when dealing with\n long URIs, and it's necessary for some options and authentication methods\n\nReview comment:\n       ```suggestion\r\n   This may be convenient when dealing with\r\n   long URIs, and it's necessary for some options and authentication methods\r\n   ```\n\n##########\nFile path: r/R/io.R\n##########\n@@ -230,6 +230,10 @@ mmap_open <- function(path, mode = c(\"read\", \"write\", \"readwrite\")) {\n #' @return An `InputStream` or a subclass of one.\n #' @keywords internal\n make_readable_file <- function(file, mmap = TRUE, compression = NULL, filesystem = NULL) {\n+  if (inherits(file, \"SubTreeFileSystem\")) {\n+    filesystem <- file$base_fs\n+    file <- file$base_path\n+  }\n\nReview comment:\n       ```suggestion\r\n     if (inherits(file, \"FileLocator\")) {\r\n       filesystem <- file$filesystem\r\n       file <- file$path\r\n     }\r\n   ```\n\n##########\nFile path: r/R/arrow-package.R\n##########\n@@ -53,18 +53,28 @@\n \n #' Is the C++ Arrow library available?\n #'\n-#' You won't generally need to call this function, but it's here in case it\n-#' helps for development purposes.\n+#' You won't generally need to call these function, but they're here\n+#' for diagnostic purposes.\n #' @return `TRUE` or `FALSE` depending on whether the package was installed\n-#' with the Arrow C++ library. If `FALSE`, you'll need to install the C++\n-#' library and then reinstall the R package. See [install_arrow()] for help.\n+#' with the Arrow C++ library `arrow_available()` or with S3 support enabled\n+#' `arrow_with_s3()`.\n\nReview comment:\n       ```suggestion\r\n   #' with the Arrow C++ library (check with `arrow_available()`) or with S3\r\n   #' support enabled (check with `arrow_with_s3()`).\r\n   ```\n\n##########\nFile path: r/R/arrow-package.R\n##########\n@@ -53,18 +53,28 @@\n \n #' Is the C++ Arrow library available?\n #'\n-#' You won't generally need to call this function, but it's here in case it\n-#' helps for development purposes.\n+#' You won't generally need to call these function, but they're here\n\nReview comment:\n       ```suggestion\r\n   #' You won't generally need to call these function, but they're made available\r\n   ```\n\n##########\nFile path: r/R/filesystem.R\n##########\n@@ -263,7 +271,10 @@ FileSystem <- R6Class(\"FileSystem\", inherit = ArrowObject,\n     },\n     OpenAppendStream = function(path) {\n       shared_ptr(OutputStream, fs___FileSystem__OpenAppendStream(self, clean_path_rel(path)))\n-    }\n+    },\n+\n+    # Friendlier R user interface\n+    path = function(x) SubTreeFileSystem$create(x, self)\n\nReview comment:\n       I think you called this method `cd` in the docs. My two cents: name it `chroot`\n\n##########\nFile path: r/vignettes/fs.Rmd\n##########\n@@ -44,41 +44,46 @@ the cost of reading the data over the network should be much lower.\n \n ## Creating a FileSystem object\n \n-Another way to connect to S3 is to create an `S3FileSystem` object once and pass\n-that to the read/write functions. This may be a convenience when dealing with\n+Another way to connect to S3 is to create an `FileSystem` object once and pass\n+that to the read/write functions.\n+`s3_bucket()` is a convenience function to create an `S3FileSystem` object,\n+automatically detecting the bucket's AWS region and holding onto the bucket's\n+relative path.\n\nReview comment:\n       ```suggestion\r\n   `S3FileSystem` objects can be created with the `s3_bucket()` function, which\r\n   automatically detects the bucket's AWS region. Additionally, the resulting\r\n   `FileSystem` will consider paths relative to the bucket's path (so for example\r\n   you don't need to prefix the bucket path when listing a directory).\r\n   ```\n\n##########\nFile path: r/R/feather.R\n##########\n@@ -24,9 +24,8 @@\n #' and the version 2 specification, which is the Apache Arrow IPC file format.\n #'\n #' @param x `data.frame`, [RecordBatch], or [Table]\n-#' @param sink A string file path, URI, or [OutputStream]\n-#' @param filesystem A [FileSystem] where `sink` should be written if it is a\n-#' string file path; default is the local file system\n+#' @param sink A string file path, URI, or [OutputStream], or path in a file\n+#' system (`SubTreeFileSystem`)\n\nReview comment:\n       ```suggestion\r\n   #' @param sink A string file path, URI, or [OutputStream]\r\n   ```\r\n   I think it's highly unintuitive to use a SubTreeFileSystem's base_path to point to a file rather than a directory. If we want to support an (fs, path) pair then I think we should name it consistently with C++ (`FileLocator`) if we want a distinct class for it. This can be constructed with `fs$loc(path)`\n\n##########\nFile path: r/R/filesystem.R\n##########\n@@ -185,6 +185,14 @@ FileSelector$create <- function(base_dir, allow_not_found = FALSE, recursive = F\n #' - `$OpenAppendStream(path)`: Open an [output stream][OutputStream] for\n #'    appending.\n #'\n+#' @section Active bindings:\n+#'\n+#' - `$type_name`: string filesystem type name, such as \"local\", \"s3\", etc.\n+#' - `$region`: string AWS region, for `S3FileSystem` and `SubTreeFileSystem`\n+#'    containing a `S3FileSystem`\n+#' - `$base_fs`: for `SubTreeFileSystem`, the `FileSystem` it contains\n+#' - `$base_path`: for `SubTreeFileSystem`, the string file path it contains\n\nReview comment:\n       ```suggestion\r\n   #' - `$base_path`: for `SubTreeFileSystem`, the path in `$base_fs` which is considered\r\n   #'    root in this `SubTreeFileSystem`.\r\n   ```\n\n##########\nFile path: r/vignettes/fs.Rmd\n##########\n@@ -44,41 +44,46 @@ the cost of reading the data over the network should be much lower.\n \n ## Creating a FileSystem object\n \n-Another way to connect to S3 is to create an `S3FileSystem` object once and pass\n-that to the read/write functions. This may be a convenience when dealing with\n+Another way to connect to S3 is to create an `FileSystem` object once and pass\n+that to the read/write functions.\n+`s3_bucket()` is a convenience function to create an `S3FileSystem` object,\n+automatically detecting the bucket's AWS region and holding onto the bucket's\n+relative path.\n+This may be a convenience when dealing with\n long URIs, and it's necessary for some options and authentication methods\n that aren't supported in the URI format.\n \n+With a `FileSystem` object, we can point to specific files in it with the `$path()` method.\n In the previous example, this would look like:\n \n ```r\n-fs <- S3FileSystem$create(region = \"us-east-2\")\n-df <- read_parquet(\"ursa-labs-taxi-data/2019/06/data.parquet\", filesystem = fs)\n+bucket <- s3_bucket(\"ursa-labs-taxi-data\")\n+df <- read_parquet(bucket$path(\"2019/06/data.parquet\"))\n ```\n \n-See the help for `FileSystem` for a list of options that `S3FileSystem$create()`\n+See the help for `FileSystem` for a list of options that `s3_bucket()` and `S3FileSystem$create()`\n can take. `region`, `scheme`, and `endpoint_override` can be encoded as query\n-parameters in the URI (though `region` will be auto-detected the bucket URI if omitted),\n-and `access_key` and `secret_key` can also be included,\n+parameters in the URI (though `region` will be auto-detected in `s3_bucket()` or from the URI if omitted).\n+`access_key` and `secret_key` can also be included,\n but other options are not supported in the URI.\n \n-Using the `SubTreeFileSystem` class, you can represent an S3 bucket or\n-subdirectory inside of one.\n+The object that `s3_bucket()` returns is technically a `SubTreeFileSystem`, which holds a path and a file system to which it corresponds. `SubTreeFileSystem`s can be useful for holding a reference to a subdirectory somewhere, on S3 or elsewhere.\n+\n+One way to get a subtree is to call the `$cd()` method on a `FileSystem`\n\nReview comment:\n       ```suggestion\r\n   A `SubTreeFileSystem` wraps a directory in another `FileSystem`, using that directory\r\n   as its own root. One way to get a subtree is to call the `$chroot()` method on a\r\n   `FileSystem`. `SubTreeFileSystem`s can be useful for holding a reference to a subdirectory\r\n   somewhere, on S3 or elsewhere. The object that `s3_bucket()` returns is technically a\r\n   `SubTreeFileSystem`, scoped to the given bucket.\r\n   \r\n   \r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-07T20:37:56.234+0000",
                    "updated": "2020-10-07T20:37:56.234+0000",
                    "started": "2020-10-07T20:37:56.234+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "496930",
                    "issueId": "13324723"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13324723/worklog/497572",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #8351:\nURL: https://github.com/apache/arrow/pull/8351#discussion_r501998550\n\n\n\n##########\nFile path: r/R/feather.R\n##########\n@@ -24,9 +24,8 @@\n #' and the version 2 specification, which is the Apache Arrow IPC file format.\n #'\n #' @param x `data.frame`, [RecordBatch], or [Table]\n-#' @param sink A string file path, URI, or [OutputStream]\n-#' @param filesystem A [FileSystem] where `sink` should be written if it is a\n-#' string file path; default is the local file system\n+#' @param sink A string file path, URI, or [OutputStream], or path in a file\n+#' system (`SubTreeFileSystem`)\n\nReview comment:\n       It is unintuitive, but here's how I ended up here. (1) STFS is a (fs, path) pair that already exists so why invent something else and have to define all the methods for it; (2) if `fs$path(string)` is how you \"point\" to a file or directory to pass to a reader, the end user need not know what kind of object that produces; (2b) that same user isn't going to understand the originally intended purpose of STFS anyway, so they wouldn't necessarily see it as being misappropriated, just a funny name for something; (3) for datasets, where I am pointing at a directory--such as an S3 bucket--an STFS actually is an appropriate vehicle. So I figured I'd work with what I had until it didn't make sense (i.e. I could answer the \"why\" in point 1)\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-08T20:39:27.928+0000",
                    "updated": "2020-10-08T20:39:27.928+0000",
                    "started": "2020-10-08T20:39:27.927+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "497572",
                    "issueId": "13324723"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13324723/worklog/498455",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #8351:\nURL: https://github.com/apache/arrow/pull/8351#discussion_r501998550\n\n\n\n##########\nFile path: r/R/feather.R\n##########\n@@ -24,9 +24,8 @@\n #' and the version 2 specification, which is the Apache Arrow IPC file format.\n #'\n #' @param x `data.frame`, [RecordBatch], or [Table]\n-#' @param sink A string file path, URI, or [OutputStream]\n-#' @param filesystem A [FileSystem] where `sink` should be written if it is a\n-#' string file path; default is the local file system\n+#' @param sink A string file path, URI, or [OutputStream], or path in a file\n+#' system (`SubTreeFileSystem`)\n\nReview comment:\n       It is unintuitive, but here's how I ended up here. (1) STFS is a (fs, path) pair that already exists so why invent something else and have to define all the methods for it; (2) if `fs$path(string)` is how you \"point\" to a file or directory to pass to a reader, the end user need not know what kind of object that produces; (2b) that same user isn't going to understand the originally intended purpose of STFS anyway, so they wouldn't necessarily see it as being misappropriated, just a funny name for something; (3) for datasets, where I am pointing at a directory--such as an S3 bucket--an STFS actually is an appropriate vehicle. So I figured I'd work with what I had until it didn't make sense (i.e. I could answer the \"why\" in point 1)\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-09T14:08:44.305+0000",
                    "updated": "2020-10-09T14:08:44.305+0000",
                    "started": "2020-10-09T14:08:44.305+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "498455",
                    "issueId": "13324723"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13324723/worklog/498786",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson closed pull request #8351:\nURL: https://github.com/apache/arrow/pull/8351\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-09T23:15:38.235+0000",
                    "updated": "2020-10-09T23:15:38.235+0000",
                    "started": "2020-10-09T23:15:38.235+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "498786",
                    "issueId": "13324723"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 3600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@40b63d2c[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@382e17e6[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@12985aea[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5ac1ee78[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4c5b17e2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1d1bb338[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4d84e57b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@18e3709d[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@c138064[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@4cd160ad[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2614eb71[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@25f000b6[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 3600,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Oct 09 23:15:33 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-10-09T23:15:33.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9870/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-08-26T22:04:22.000+0000",
        "updated": "2020-10-09T23:15:39.000+0000",
        "timeoriginalestimate": null,
        "description": "The Filesystem methods don't provide a human-friendly interface for basic operations like ls, mkdir, etc. Since we provide access to S3 and potentially other cloud storage, it would be nice to have simple methods for exploring it.\r\n\r\nAdditional ideas:\r\n\r\n* S3Bucket class/constructor: it's basically a SubTreeFileSystem containing S3FS and a path, except that we can auto-detect a bucket's region.\r\n* Add a class like the FileLocator C++ struct list(fs, path). _also_ kinda like a SubTreeFileSystem, but with different methods and intents. Aside from use in ls/mkdir/cp, it could be used in file reader/writers instead of having an extra {{filesystem}} argument added everywhere, e.g. {{fs$path(\"path/to/file\")}}. See https://github.com/apache/arrow/pull/8197#discussion_r494325934",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 3600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[R] Friendly interface for filesystems (S3)",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13324723/comment/17211462",
                    "id": "17211462",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Issue resolved by pull request 8351\n[https://github.com/apache/arrow/pull/8351]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2020-10-09T23:15:33.708+0000",
                    "updated": "2020-10-09T23:15:33.708+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0i46w:",
        "customfield_12314139": null
    }
}