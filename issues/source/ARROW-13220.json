{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13386828",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386828",
    "key": "ARROW-13220",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350323",
                "id": "12350323",
                "description": "",
                "name": "6.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-10-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "kernel",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12618411",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12618411",
                "type": {
                    "id": "12310460",
                    "name": "Child-Issue",
                    "inward": "is a child of",
                    "outward": "is a parent of",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310460"
                },
                "inwardIssue": {
                    "id": "13306872",
                    "key": "ARROW-8894",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13306872",
                    "fields": {
                        "summary": "[C++] C++ array kernels framework and execution buildout (umbrella issue)",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                            "description": "The issue is open and ready for the assignee to start work on it.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                            "name": "Open",
                            "id": "1",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                                "id": 2,
                                "key": "new",
                                "colorName": "blue-gray",
                                "name": "To Do"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                            "id": "2",
                            "description": "A new feature of the product, which has yet to be developed.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                            "name": "New Feature",
                            "subtask": false,
                            "avatarId": 21141
                        }
                    }
                }
            },
            {
                "id": "12618504",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12618504",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "inwardIssue": {
                    "id": "13341287",
                    "key": "ARROW-10640",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13341287",
                    "fields": {
                        "summary": "[C++] An \"if_else\" kernel to combine two arrays based on a mask",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                            "id": "2",
                            "description": "A new feature of the product, which has yet to be developed.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                            "name": "New Feature",
                            "subtask": false,
                            "avatarId": 21141
                        }
                    }
                }
            },
            {
                "id": "12618505",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12618505",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "inwardIssue": {
                    "id": "13383508",
                    "key": "ARROW-13064",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13383508",
                    "fields": {
                        "summary": "[C++] Add a general \"if, ifelse, ..., else\" kernel (\"CASE WHEN\")",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 9000,
            "total": 9000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 9000,
            "total": 9000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13220/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 15,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386828/worklog/618142",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10642:\nURL: https://github.com/apache/arrow/pull/10642#issuecomment-873055556\n\n\n   https://issues.apache.org/jira/browse/ARROW-13220\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-02T14:49:17.129+0000",
                    "updated": "2021-07-02T14:49:17.129+0000",
                    "started": "2021-07-02T14:49:17.129+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "618142",
                    "issueId": "13386828"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386828/worklog/618143",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] removed a comment on pull request #10642:\nURL: https://github.com/apache/arrow/pull/10642#issuecomment-872441663\n\n\n   https://issues.apache.org/jira/browse/ARROW-13064\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-02T14:49:30.954+0000",
                    "updated": "2021-07-02T14:49:30.954+0000",
                    "started": "2021-07-02T14:49:30.954+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "618143",
                    "issueId": "13386828"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386828/worklog/622136",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #10642:\nURL: https://github.com/apache/arrow/pull/10642#issuecomment-879288317\n\n\n   @ursabot please benchmark lang=C++\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-13T17:59:11.631+0000",
                    "updated": "2021-07-13T17:59:11.631+0000",
                    "started": "2021-07-13T17:59:11.631+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "622136",
                    "issueId": "13386828"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386828/worklog/622137",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on pull request #10642:\nURL: https://github.com/apache/arrow/pull/10642#issuecomment-879288474\n\n\n   Benchmark runs are scheduled for baseline = ca50cd1243a83bc784bdf26ff2c0b85bfe9dd916 and contender = 3c1182c9bdaf656c2ef1c0311e5078f45b87eb78. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Skipped :warning: Provided benchmark filters do not have any benchmark groups to be executed on ec2-t3-xlarge-us-east-2] [ec2-t3-xlarge-us-east-2 (mimalloc)](https://conbench.ursa.dev/compare/runs/638dffcf69224c05815fe46235e59889...2b6ac7896cc04d64bd368dbc10cecc47/)\n   [Skipped :warning: Only ['Python', 'R'] langs are supported on ursa-i9-9960x] [ursa-i9-9960x (mimalloc)](https://conbench.ursa.dev/compare/runs/2af85aae2538430084c81b4ed83d8ddd...b67bfd7a2e474903a2071ab08396ffa9/)\n   [Scheduled] [ursa-thinkcentre-m75q (mimalloc)](https://conbench.ursa.dev/compare/runs/d3f9221e3c554e1bb2204f538a22b422...4bbf5d3fd7624cdc981cecab30c023f0/)\n   Supported benchmarks:\n   ursa-i9-9960x: langs = Python, R\n   ursa-thinkcentre-m75q: langs = C++, Java\n   ec2-t3-xlarge-us-east-2: cloud = True\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-13T17:59:24.794+0000",
                    "updated": "2021-07-13T17:59:24.794+0000",
                    "started": "2021-07-13T17:59:24.793+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "622137",
                    "issueId": "13386828"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386828/worklog/622154",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #10642:\nURL: https://github.com/apache/arrow/pull/10642#issuecomment-879288474\n\n\n   Benchmark runs are scheduled for baseline = ca50cd1243a83bc784bdf26ff2c0b85bfe9dd916 and contender = 3c1182c9bdaf656c2ef1c0311e5078f45b87eb78. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Skipped :warning: Provided benchmark filters do not have any benchmark groups to be executed on ec2-t3-xlarge-us-east-2] [ec2-t3-xlarge-us-east-2 (mimalloc)](https://conbench.ursa.dev/compare/runs/638dffcf69224c05815fe46235e59889...2b6ac7896cc04d64bd368dbc10cecc47/)\n   [Skipped :warning: Only ['Python', 'R'] langs are supported on ursa-i9-9960x] [ursa-i9-9960x (mimalloc)](https://conbench.ursa.dev/compare/runs/2af85aae2538430084c81b4ed83d8ddd...b67bfd7a2e474903a2071ab08396ffa9/)\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ursa-thinkcentre-m75q (mimalloc)](https://conbench.ursa.dev/compare/runs/d3f9221e3c554e1bb2204f538a22b422...4bbf5d3fd7624cdc981cecab30c023f0/)\n   Supported benchmarks:\n   ursa-i9-9960x: langs = Python, R\n   ursa-thinkcentre-m75q: langs = C++, Java\n   ec2-t3-xlarge-us-east-2: cloud = True\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-13T18:46:27.194+0000",
                    "updated": "2021-07-13T18:46:27.194+0000",
                    "started": "2021-07-13T18:46:27.194+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "622154",
                    "issueId": "13386828"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386828/worklog/623703",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #10642:\nURL: https://github.com/apache/arrow/pull/10642#issuecomment-881549994\n\n\n   This needs a lot of merge conflict resolving, so moving to draft for now until #10608 is also merged.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-16T15:56:00.115+0000",
                    "updated": "2021-07-16T15:56:00.115+0000",
                    "started": "2021-07-16T15:56:00.115+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623703",
                    "issueId": "13386828"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386828/worklog/628289",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #10642:\nURL: https://github.com/apache/arrow/pull/10642#discussion_r677253863\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_if_else.cc\n##########\n@@ -1182,6 +1182,20 @@ void CopyOneArrayValue(const DataType& type, const uint8_t* in_valid,\n                                   out_offset);\n }\n \n+template <typename Type>\n+void CopyOneValue(const Datum& in_values, const int64_t in_offset, uint8_t* out_valid,\n+                  uint8_t* out_values, const int64_t out_offset) {\n+  if (in_values.is_array()) {\n+    const ArrayData& array = *in_values.array();\n+    CopyOneArrayValue<Type>(*array.type, array.GetValues<uint8_t>(0, 0),\n+                            array.GetValues<uint8_t>(1, 0), array.offset + in_offset,\n+                            out_valid, out_values, out_offset);\n+  } else {\n+    CopyValues<Type>(in_values, in_offset, /*length=*/1, out_valid, out_values,\n\nReview comment:\n       Should we factor out the scalar copy from `CopyValues<Type>` into a `CopyScalarValue<Type>`?\n\n##########\nFile path: docs/source/cpp/compute.rst\n##########\n@@ -917,36 +919,43 @@ Structural transforms\n   the first value datum for which the corresponding Boolean is true, or the\n   corresponding value from the 'default' input, or null otherwise.\n \n-* \\(2) Each row of the output will be the corresponding value of the first\n+* \\(2) The first input must be an integral type. The rest of the arguments can be\n+  any type, but must all be the same type or promotable to a common type. Each\n+  value of the first input (the 'index') is used as a zero-based index into the\n+  remaining arguments (i.e. index 0 is the second argument, index 1 is the third\n+  argument, etc.), and the value of the output for that row will be the\n+  corresponding value of the selected input at that row.\n\nReview comment:\n       Mention behaviour for null indices?\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_if_else.cc\n##########\n@@ -1606,6 +1620,203 @@ struct CoalesceFunctor<Type, enable_if_base_binary<Type>> {\n   }\n };\n \n+template <typename Type>\n+Status ExecScalarChoose(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+  const auto& index_scalar = *batch[0].scalar();\n+  if (!index_scalar.is_valid) {\n+    if (out->is_array()) {\n+      auto source = MakeNullScalar(out->type());\n+      ArrayData* output = out->mutable_array();\n+      CopyValues<Type>(source, /*row=*/0, batch.length,\n+                       output->GetMutableValues<uint8_t>(0, /*absolute_offset=*/0),\n+                       output->GetMutableValues<uint8_t>(1, /*absolute_offset=*/0),\n+                       output->offset);\n+    }\n+    return Status::OK();\n+  }\n+  auto index = UnboxScalar<Int64Type>::Unbox(index_scalar);\n+  if (index < 0 || static_cast<size_t>(index + 1) >= batch.values.size()) {\n+    return Status::IndexError(\"choose: index \", index, \" out of range\");\n+  }\n+  auto source = batch.values[index + 1];\n+  if (out->is_scalar()) {\n+    *out = source;\n+  } else {\n+    ArrayData* output = out->mutable_array();\n+    CopyValues<Type>(source, /*row=*/0, batch.length,\n+                     output->GetMutableValues<uint8_t>(0, /*absolute_offset=*/0),\n+                     output->GetMutableValues<uint8_t>(1, /*absolute_offset=*/0),\n+                     output->offset);\n+  }\n+  return Status::OK();\n+}\n+\n+template <typename Type>\n+Status ExecArrayChoose(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+  ArrayData* output = out->mutable_array();\n+  const int64_t out_offset = output->offset;\n+  // Need a null bitmap if any input has nulls\n+  uint8_t* out_valid = nullptr;\n+  if (std::any_of(batch.values.begin(), batch.values.end(),\n+                  [](const Datum& d) { return d.null_count() > 0; })) {\n+    out_valid = output->buffers[0]->mutable_data();\n+  } else {\n+    BitUtil::SetBitsTo(output->buffers[0]->mutable_data(), out_offset, batch.length,\n+                       true);\n+  }\n+  uint8_t* out_values = output->buffers[1]->mutable_data();\n+  int64_t row = 0;\n+  return VisitArrayValuesInline<Int64Type>(\n+      *batch[0].array(),\n+      [&](int64_t index) {\n+        if (index < 0 || static_cast<size_t>(index + 1) >= batch.values.size()) {\n+          return Status::IndexError(\"choose: index \", index, \" out of range\");\n+        }\n+        const auto& source = batch.values[index + 1];\n+        CopyOneValue<Type>(source, row, out_valid, out_values, out_offset + row);\n+        row++;\n+        return Status::OK();\n+      },\n+      [&]() {\n+        // Index is null, but we should still initialize the output with some value\n+        const auto& source = batch.values[1];\n+        CopyOneValue<Type>(source, row, out_valid, out_values, out_offset + row);\n+        BitUtil::ClearBit(out_valid, out_offset + row);\n+        row++;\n+        return Status::OK();\n+      });\n+}\n+\n+template <typename Type, typename Enable = void>\n+struct ChooseFunctor {\n+  static Status Exec(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+    if (batch.values[0].is_scalar()) {\n+      return ExecScalarChoose<Type>(ctx, batch, out);\n+    }\n+    return ExecArrayChoose<Type>(ctx, batch, out);\n+  }\n+};\n+\n+template <>\n+struct ChooseFunctor<NullType> {\n+  static Status Exec(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+    return Status::OK();\n+  }\n+};\n+\n+template <typename Type>\n+struct ChooseFunctor<Type, enable_if_base_binary<Type>> {\n+  using offset_type = typename Type::offset_type;\n+  using BuilderType = typename TypeTraits<Type>::BuilderType;\n+\n+  static Status Exec(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+    if (batch.values[0].is_scalar()) {\n+      const auto& index_scalar = *batch[0].scalar();\n+      if (!index_scalar.is_valid) {\n+        if (out->is_array()) {\n+          auto null_scalar = MakeNullScalar(out->type());\n+          ARROW_ASSIGN_OR_RAISE(\n+              auto temp_array,\n+              MakeArrayFromScalar(*null_scalar, batch.length, ctx->memory_pool()));\n\nReview comment:\n       Why not reuse `MakeArrayOfNull`?\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_if_else.cc\n##########\n@@ -1723,6 +1963,22 @@ void RegisterScalarIfElse(FunctionRegistry* registry) {\n     }\n     DCHECK_OK(registry->AddFunction(std::move(func)));\n   }\n+  {\n+    auto func = std::make_shared<ChooseFunction>(\"choose\", Arity::VarArgs(/*min_args=*/2),\n+                                                 &choose_doc);\n+    AddPrimitiveChooseKernels(func, NumericTypes());\n+    AddPrimitiveChooseKernels(func, TemporalTypes());\n+    AddPrimitiveChooseKernels(func,\n+                              {boolean(), null(), day_time_interval(), month_interval()});\n+    AddChooseKernel(func, Type::FIXED_SIZE_BINARY,\n+                    ChooseFunctor<FixedSizeBinaryType>::Exec);\n+    AddChooseKernel(func, Type::DECIMAL128, ChooseFunctor<Decimal128Type>::Exec);\n+    AddChooseKernel(func, Type::DECIMAL256, ChooseFunctor<Decimal256Type>::Exec);\n\nReview comment:\n       Perhaps we want a `GenerateTypeAgnosticFixedSizeBinaryBase`?\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_if_else_test.cc\n##########\n@@ -1040,5 +1040,192 @@ TEST(TestCoalesce, FixedSizeBinary) {\n               ArrayFromJSON(type, R\"([\"abc\", \"abc\", \"abc\", \"abc\"])\"));\n }\n \n+template <typename Type>\n+class TestChooseNumeric : public ::testing::Test {};\n+template <typename Type>\n+class TestChooseBinary : public ::testing::Test {};\n+\n+TYPED_TEST_SUITE(TestChooseNumeric, NumericBasedTypes);\n+TYPED_TEST_SUITE(TestChooseBinary, BinaryTypes);\n+\n+TYPED_TEST(TestChooseNumeric, FixedSize) {\n+  auto type = default_type_instance<TypeParam>();\n+  auto indices1 = ArrayFromJSON(int64(), \"[0, 1, 0, 1, null]\");\n+  auto values1 = ArrayFromJSON(type, \"[10, 11, null, null, 14]\");\n+  auto values2 = ArrayFromJSON(type, \"[20, 21, null, null, 24]\");\n+  auto nulls = ArrayFromJSON(type, \"[null, null, null, null, null]\");\n+  CheckScalar(\"choose\", {indices1, values1, values2},\n+              ArrayFromJSON(type, \"[10, 21, null, null, null]\"));\n+  // Mixed scalar and array (note CheckScalar checks all-scalar cases for us)\n+  CheckScalar(\"choose\", {ScalarFromJSON(int64(), \"0\"), values1, values2}, values1);\n+  CheckScalar(\"choose\", {ScalarFromJSON(int64(), \"1\"), values1, values2}, values2);\n+  CheckScalar(\"choose\", {ScalarFromJSON(int64(), \"null\"), values1, values2}, nulls);\n+  auto scalar1 = ScalarFromJSON(type, \"42\");\n+  CheckScalar(\"choose\", {ScalarFromJSON(int64(), \"0\"), scalar1, values2},\n+              *MakeArrayFromScalar(*scalar1, 5));\n+  CheckScalar(\"choose\", {ScalarFromJSON(int64(), \"1\"), scalar1, values2}, values2);\n+  CheckScalar(\"choose\", {ScalarFromJSON(int64(), \"null\"), values1, values2}, nulls);\n+  auto scalar_null = ScalarFromJSON(type, \"null\");\n+  CheckScalar(\"choose\", {ScalarFromJSON(int64(), \"0\"), scalar_null, values2},\n+              *MakeArrayOfNull(type, 5));\n\nReview comment:\n       Can you also test where the indices are an array but one of the values is a scalar?\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_if_else.cc\n##########\n@@ -1723,6 +1963,22 @@ void RegisterScalarIfElse(FunctionRegistry* registry) {\n     }\n     DCHECK_OK(registry->AddFunction(std::move(func)));\n   }\n+  {\n+    auto func = std::make_shared<ChooseFunction>(\"choose\", Arity::VarArgs(/*min_args=*/2),\n+                                                 &choose_doc);\n+    AddPrimitiveChooseKernels(func, NumericTypes());\n+    AddPrimitiveChooseKernels(func, TemporalTypes());\n+    AddPrimitiveChooseKernels(func,\n+                              {boolean(), null(), day_time_interval(), month_interval()});\n+    AddChooseKernel(func, Type::FIXED_SIZE_BINARY,\n+                    ChooseFunctor<FixedSizeBinaryType>::Exec);\n+    AddChooseKernel(func, Type::DECIMAL128, ChooseFunctor<Decimal128Type>::Exec);\n+    AddChooseKernel(func, Type::DECIMAL256, ChooseFunctor<Decimal256Type>::Exec);\n\nReview comment:\n       Can decimal types uses `ChooseFunctor<FixedSizeBinaryType>` instead?\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_if_else_benchmark.cc\n##########\n@@ -312,5 +343,8 @@ BENCHMARK(CoalesceBench64)->Args({elems, 99});\n BENCHMARK(CoalesceNonNullBench64)->Args({elems, 0});\n BENCHMARK(CoalesceNonNullBench64)->Args({elems, 99});\n \n+BENCHMARK(ChooseBench64)->Args({elems, 0});\n+BENCHMARK(ChooseBench64)->Args({elems, 99});\n\nReview comment:\n       Since we are at it, can we rename `elems` to `kNumItems` or something similar?\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_if_else.cc\n##########\n@@ -1723,6 +1963,22 @@ void RegisterScalarIfElse(FunctionRegistry* registry) {\n     }\n     DCHECK_OK(registry->AddFunction(std::move(func)));\n   }\n+  {\n+    auto func = std::make_shared<ChooseFunction>(\"choose\", Arity::VarArgs(/*min_args=*/2),\n+                                                 &choose_doc);\n+    AddPrimitiveChooseKernels(func, NumericTypes());\n+    AddPrimitiveChooseKernels(func, TemporalTypes());\n+    AddPrimitiveChooseKernels(func,\n+                              {boolean(), null(), day_time_interval(), month_interval()});\n\nReview comment:\n       Should we have a `IntervalTypes()` helper?\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_if_else.cc\n##########\n@@ -1606,6 +1620,203 @@ struct CoalesceFunctor<Type, enable_if_base_binary<Type>> {\n   }\n };\n \n+template <typename Type>\n+Status ExecScalarChoose(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+  const auto& index_scalar = *batch[0].scalar();\n+  if (!index_scalar.is_valid) {\n+    if (out->is_array()) {\n+      auto source = MakeNullScalar(out->type());\n+      ArrayData* output = out->mutable_array();\n+      CopyValues<Type>(source, /*row=*/0, batch.length,\n+                       output->GetMutableValues<uint8_t>(0, /*absolute_offset=*/0),\n+                       output->GetMutableValues<uint8_t>(1, /*absolute_offset=*/0),\n+                       output->offset);\n+    }\n+    return Status::OK();\n+  }\n+  auto index = UnboxScalar<Int64Type>::Unbox(index_scalar);\n+  if (index < 0 || static_cast<size_t>(index + 1) >= batch.values.size()) {\n+    return Status::IndexError(\"choose: index \", index, \" out of range\");\n+  }\n+  auto source = batch.values[index + 1];\n+  if (out->is_scalar()) {\n+    *out = source;\n+  } else {\n+    ArrayData* output = out->mutable_array();\n+    CopyValues<Type>(source, /*row=*/0, batch.length,\n+                     output->GetMutableValues<uint8_t>(0, /*absolute_offset=*/0),\n+                     output->GetMutableValues<uint8_t>(1, /*absolute_offset=*/0),\n+                     output->offset);\n+  }\n+  return Status::OK();\n+}\n+\n+template <typename Type>\n+Status ExecArrayChoose(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+  ArrayData* output = out->mutable_array();\n+  const int64_t out_offset = output->offset;\n+  // Need a null bitmap if any input has nulls\n+  uint8_t* out_valid = nullptr;\n+  if (std::any_of(batch.values.begin(), batch.values.end(),\n+                  [](const Datum& d) { return d.null_count() > 0; })) {\n+    out_valid = output->buffers[0]->mutable_data();\n+  } else {\n+    BitUtil::SetBitsTo(output->buffers[0]->mutable_data(), out_offset, batch.length,\n+                       true);\n\nReview comment:\n       Also set `output->null_count` to 0?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-27T09:16:21.959+0000",
                    "updated": "2021-07-27T09:16:21.959+0000",
                    "started": "2021-07-27T09:16:21.959+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "628289",
                    "issueId": "13386828"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386828/worklog/628457",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #10642:\nURL: https://github.com/apache/arrow/pull/10642#discussion_r677468073\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_if_else.cc\n##########\n@@ -1723,6 +1963,22 @@ void RegisterScalarIfElse(FunctionRegistry* registry) {\n     }\n     DCHECK_OK(registry->AddFunction(std::move(func)));\n   }\n+  {\n+    auto func = std::make_shared<ChooseFunction>(\"choose\", Arity::VarArgs(/*min_args=*/2),\n+                                                 &choose_doc);\n+    AddPrimitiveChooseKernels(func, NumericTypes());\n+    AddPrimitiveChooseKernels(func, TemporalTypes());\n+    AddPrimitiveChooseKernels(func,\n+                              {boolean(), null(), day_time_interval(), month_interval()});\n+    AddChooseKernel(func, Type::FIXED_SIZE_BINARY,\n+                    ChooseFunctor<FixedSizeBinaryType>::Exec);\n+    AddChooseKernel(func, Type::DECIMAL128, ChooseFunctor<Decimal128Type>::Exec);\n+    AddChooseKernel(func, Type::DECIMAL256, ChooseFunctor<Decimal256Type>::Exec);\n\nReview comment:\n       This unfortunately gets a little annoying as the scalar representations are different (Buffer vs Decimal{128,256}).\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-27T13:48:59.696+0000",
                    "updated": "2021-07-27T13:48:59.696+0000",
                    "started": "2021-07-27T13:48:59.695+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "628457",
                    "issueId": "13386828"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386828/worklog/630477",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #10642:\nURL: https://github.com/apache/arrow/pull/10642#discussion_r678224469\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_if_else.cc\n##########\n@@ -1723,6 +1963,22 @@ void RegisterScalarIfElse(FunctionRegistry* registry) {\n     }\n     DCHECK_OK(registry->AddFunction(std::move(func)));\n   }\n+  {\n+    auto func = std::make_shared<ChooseFunction>(\"choose\", Arity::VarArgs(/*min_args=*/2),\n+                                                 &choose_doc);\n+    AddPrimitiveChooseKernels(func, NumericTypes());\n+    AddPrimitiveChooseKernels(func, TemporalTypes());\n+    AddPrimitiveChooseKernels(func,\n+                              {boolean(), null(), day_time_interval(), month_interval()});\n+    AddChooseKernel(func, Type::FIXED_SIZE_BINARY,\n+                    ChooseFunctor<FixedSizeBinaryType>::Exec);\n+    AddChooseKernel(func, Type::DECIMAL128, ChooseFunctor<Decimal128Type>::Exec);\n+    AddChooseKernel(func, Type::DECIMAL256, ChooseFunctor<Decimal256Type>::Exec);\n\nReview comment:\n       Ah, too bad :-(\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-28T12:34:18.770+0000",
                    "updated": "2021-07-28T12:34:18.770+0000",
                    "started": "2021-07-28T12:34:18.770+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "630477",
                    "issueId": "13386828"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386828/worklog/633597",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #10642:\nURL: https://github.com/apache/arrow/pull/10642#discussion_r682685254\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_if_else.cc\n##########\n@@ -1606,6 +1620,203 @@ struct CoalesceFunctor<Type, enable_if_base_binary<Type>> {\n   }\n };\n \n+template <typename Type>\n+Status ExecScalarChoose(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+  const auto& index_scalar = *batch[0].scalar();\n+  if (!index_scalar.is_valid) {\n+    if (out->is_array()) {\n+      auto source = MakeNullScalar(out->type());\n+      ArrayData* output = out->mutable_array();\n+      CopyValues<Type>(source, /*row=*/0, batch.length,\n+                       output->GetMutableValues<uint8_t>(0, /*absolute_offset=*/0),\n+                       output->GetMutableValues<uint8_t>(1, /*absolute_offset=*/0),\n+                       output->offset);\n+    }\n+    return Status::OK();\n+  }\n+  auto index = UnboxScalar<Int64Type>::Unbox(index_scalar);\n+  if (index < 0 || static_cast<size_t>(index + 1) >= batch.values.size()) {\n+    return Status::IndexError(\"choose: index \", index, \" out of range\");\n+  }\n+  auto source = batch.values[index + 1];\n+  if (out->is_scalar()) {\n+    *out = source;\n+  } else {\n+    ArrayData* output = out->mutable_array();\n+    CopyValues<Type>(source, /*row=*/0, batch.length,\n+                     output->GetMutableValues<uint8_t>(0, /*absolute_offset=*/0),\n+                     output->GetMutableValues<uint8_t>(1, /*absolute_offset=*/0),\n+                     output->offset);\n+  }\n+  return Status::OK();\n+}\n+\n+template <typename Type>\n+Status ExecArrayChoose(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+  ArrayData* output = out->mutable_array();\n+  const int64_t out_offset = output->offset;\n+  // Need a null bitmap if any input has nulls\n+  uint8_t* out_valid = nullptr;\n+  if (std::any_of(batch.values.begin(), batch.values.end(),\n+                  [](const Datum& d) { return d.null_count() > 0; })) {\n+    out_valid = output->buffers[0]->mutable_data();\n+  } else {\n+    BitUtil::SetBitsTo(output->buffers[0]->mutable_data(), out_offset, batch.length,\n+                       true);\n\nReview comment:\n       Even if we start with all-valid, we might select a null later on, so we don't truly know the final null count at this point.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-04T14:44:29.248+0000",
                    "updated": "2021-08-04T14:44:29.248+0000",
                    "started": "2021-08-04T14:44:29.248+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "633597",
                    "issueId": "13386828"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386828/worklog/633693",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #10642:\nURL: https://github.com/apache/arrow/pull/10642#discussion_r682798937\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_if_else.cc\n##########\n@@ -1606,6 +1620,203 @@ struct CoalesceFunctor<Type, enable_if_base_binary<Type>> {\n   }\n };\n \n+template <typename Type>\n+Status ExecScalarChoose(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+  const auto& index_scalar = *batch[0].scalar();\n+  if (!index_scalar.is_valid) {\n+    if (out->is_array()) {\n+      auto source = MakeNullScalar(out->type());\n+      ArrayData* output = out->mutable_array();\n+      CopyValues<Type>(source, /*row=*/0, batch.length,\n+                       output->GetMutableValues<uint8_t>(0, /*absolute_offset=*/0),\n+                       output->GetMutableValues<uint8_t>(1, /*absolute_offset=*/0),\n+                       output->offset);\n+    }\n+    return Status::OK();\n+  }\n+  auto index = UnboxScalar<Int64Type>::Unbox(index_scalar);\n+  if (index < 0 || static_cast<size_t>(index + 1) >= batch.values.size()) {\n+    return Status::IndexError(\"choose: index \", index, \" out of range\");\n+  }\n+  auto source = batch.values[index + 1];\n+  if (out->is_scalar()) {\n+    *out = source;\n+  } else {\n+    ArrayData* output = out->mutable_array();\n+    CopyValues<Type>(source, /*row=*/0, batch.length,\n+                     output->GetMutableValues<uint8_t>(0, /*absolute_offset=*/0),\n+                     output->GetMutableValues<uint8_t>(1, /*absolute_offset=*/0),\n+                     output->offset);\n+  }\n+  return Status::OK();\n+}\n+\n+template <typename Type>\n+Status ExecArrayChoose(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+  ArrayData* output = out->mutable_array();\n+  const int64_t out_offset = output->offset;\n+  // Need a null bitmap if any input has nulls\n+  uint8_t* out_valid = nullptr;\n+  if (std::any_of(batch.values.begin(), batch.values.end(),\n+                  [](const Datum& d) { return d.null_count() > 0; })) {\n+    out_valid = output->buffers[0]->mutable_data();\n+  } else {\n+    BitUtil::SetBitsTo(output->buffers[0]->mutable_data(), out_offset, batch.length,\n+                       true);\n\nReview comment:\n       I see, thanks.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-04T17:00:55.716+0000",
                    "updated": "2021-08-04T17:00:55.716+0000",
                    "started": "2021-08-04T17:00:55.715+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "633693",
                    "issueId": "13386828"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386828/worklog/633695",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou closed pull request #10642:\nURL: https://github.com/apache/arrow/pull/10642\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-04T17:04:21.793+0000",
                    "updated": "2021-08-04T17:04:21.793+0000",
                    "started": "2021-08-04T17:04:21.793+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "633695",
                    "issueId": "13386828"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386828/worklog/634133",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #10642:\nURL: https://github.com/apache/arrow/pull/10642#discussion_r682685254\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_if_else.cc\n##########\n@@ -1606,6 +1620,203 @@ struct CoalesceFunctor<Type, enable_if_base_binary<Type>> {\n   }\n };\n \n+template <typename Type>\n+Status ExecScalarChoose(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+  const auto& index_scalar = *batch[0].scalar();\n+  if (!index_scalar.is_valid) {\n+    if (out->is_array()) {\n+      auto source = MakeNullScalar(out->type());\n+      ArrayData* output = out->mutable_array();\n+      CopyValues<Type>(source, /*row=*/0, batch.length,\n+                       output->GetMutableValues<uint8_t>(0, /*absolute_offset=*/0),\n+                       output->GetMutableValues<uint8_t>(1, /*absolute_offset=*/0),\n+                       output->offset);\n+    }\n+    return Status::OK();\n+  }\n+  auto index = UnboxScalar<Int64Type>::Unbox(index_scalar);\n+  if (index < 0 || static_cast<size_t>(index + 1) >= batch.values.size()) {\n+    return Status::IndexError(\"choose: index \", index, \" out of range\");\n+  }\n+  auto source = batch.values[index + 1];\n+  if (out->is_scalar()) {\n+    *out = source;\n+  } else {\n+    ArrayData* output = out->mutable_array();\n+    CopyValues<Type>(source, /*row=*/0, batch.length,\n+                     output->GetMutableValues<uint8_t>(0, /*absolute_offset=*/0),\n+                     output->GetMutableValues<uint8_t>(1, /*absolute_offset=*/0),\n+                     output->offset);\n+  }\n+  return Status::OK();\n+}\n+\n+template <typename Type>\n+Status ExecArrayChoose(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+  ArrayData* output = out->mutable_array();\n+  const int64_t out_offset = output->offset;\n+  // Need a null bitmap if any input has nulls\n+  uint8_t* out_valid = nullptr;\n+  if (std::any_of(batch.values.begin(), batch.values.end(),\n+                  [](const Datum& d) { return d.null_count() > 0; })) {\n+    out_valid = output->buffers[0]->mutable_data();\n+  } else {\n+    BitUtil::SetBitsTo(output->buffers[0]->mutable_data(), out_offset, batch.length,\n+                       true);\n\nReview comment:\n       Even if we start with all-valid, we might select a null later on, so we don't truly know the final null count at this point.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-05T11:17:02.135+0000",
                    "updated": "2021-08-05T11:17:02.135+0000",
                    "started": "2021-08-05T11:17:02.134+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "634133",
                    "issueId": "13386828"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386828/worklog/634232",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou closed pull request #10642:\nURL: https://github.com/apache/arrow/pull/10642\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-05T11:28:02.945+0000",
                    "updated": "2021-08-05T11:28:02.945+0000",
                    "started": "2021-08-05T11:28:02.944+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "634232",
                    "issueId": "13386828"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386828/worklog/634436",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #10642:\nURL: https://github.com/apache/arrow/pull/10642#discussion_r682798937\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_if_else.cc\n##########\n@@ -1606,6 +1620,203 @@ struct CoalesceFunctor<Type, enable_if_base_binary<Type>> {\n   }\n };\n \n+template <typename Type>\n+Status ExecScalarChoose(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+  const auto& index_scalar = *batch[0].scalar();\n+  if (!index_scalar.is_valid) {\n+    if (out->is_array()) {\n+      auto source = MakeNullScalar(out->type());\n+      ArrayData* output = out->mutable_array();\n+      CopyValues<Type>(source, /*row=*/0, batch.length,\n+                       output->GetMutableValues<uint8_t>(0, /*absolute_offset=*/0),\n+                       output->GetMutableValues<uint8_t>(1, /*absolute_offset=*/0),\n+                       output->offset);\n+    }\n+    return Status::OK();\n+  }\n+  auto index = UnboxScalar<Int64Type>::Unbox(index_scalar);\n+  if (index < 0 || static_cast<size_t>(index + 1) >= batch.values.size()) {\n+    return Status::IndexError(\"choose: index \", index, \" out of range\");\n+  }\n+  auto source = batch.values[index + 1];\n+  if (out->is_scalar()) {\n+    *out = source;\n+  } else {\n+    ArrayData* output = out->mutable_array();\n+    CopyValues<Type>(source, /*row=*/0, batch.length,\n+                     output->GetMutableValues<uint8_t>(0, /*absolute_offset=*/0),\n+                     output->GetMutableValues<uint8_t>(1, /*absolute_offset=*/0),\n+                     output->offset);\n+  }\n+  return Status::OK();\n+}\n+\n+template <typename Type>\n+Status ExecArrayChoose(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+  ArrayData* output = out->mutable_array();\n+  const int64_t out_offset = output->offset;\n+  // Need a null bitmap if any input has nulls\n+  uint8_t* out_valid = nullptr;\n+  if (std::any_of(batch.values.begin(), batch.values.end(),\n+                  [](const Datum& d) { return d.null_count() > 0; })) {\n+    out_valid = output->buffers[0]->mutable_data();\n+  } else {\n+    BitUtil::SetBitsTo(output->buffers[0]->mutable_data(), out_offset, batch.length,\n+                       true);\n\nReview comment:\n       I see, thanks.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-05T11:50:18.849+0000",
                    "updated": "2021-08-05T11:50:18.849+0000",
                    "started": "2021-08-05T11:50:18.849+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "634436",
                    "issueId": "13386828"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 9000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@1e971c00[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2944b790[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7cf7e538[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@70033501[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@36819c73[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@586282c6[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1bff62d7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@72bde794[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@48e58fb4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@45d40dc[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@64d4635a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@79c8b913[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 9000,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Aug 04 17:04:20 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-08-04T17:04:20.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13220/watchers",
            "watchCount": 4,
            "isWatching": false
        },
        "created": "2021-06-30T15:12:06.000+0000",
        "updated": "2021-08-09T18:53:47.000+0000",
        "timeoriginalestimate": null,
        "description": "Emulate SQL's choose or (a very limited subset of) NumPy's choose.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 9000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Add a 'choose' kernel/scalar compute function",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386828/comment/17373328",
                    "id": "17373328",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "Linking ARROW-10640 which also had some discussion on the \"choose\" topic (vs \"select/case_when\")",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2021-07-02T08:22:38.487+0000",
                    "updated": "2021-07-02T08:22:38.487+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386828/comment/17382638",
                    "id": "17382638",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=icook",
                        "name": "icook",
                        "key": "icook",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=icook&avatarId=29388",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=icook&avatarId=29388",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=icook&avatarId=29388",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=icook&avatarId=29388"
                        },
                        "displayName": "Ian Cook",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "For the R bindings: I'm not aware of any existing R function that we should bind to this. [~jonkeane]\u00a0can you think of any?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=icook",
                        "name": "icook",
                        "key": "icook",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=icook&avatarId=29388",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=icook&avatarId=29388",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=icook&avatarId=29388",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=icook&avatarId=29388"
                        },
                        "displayName": "Ian Cook",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-07-17T18:12:58.667+0000",
                    "updated": "2021-07-17T18:12:58.667+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386828/comment/17382652",
                    "id": "17382652",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jonkeane",
                        "name": "jonkeane",
                        "key": "jonkeane",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34057",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34057",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34057",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34057"
                        },
                        "displayName": "Jonathan Keane",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "I can't think of anything that does something like this in R to bind to either.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jonkeane",
                        "name": "jonkeane",
                        "key": "jonkeane",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34057",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34057",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34057",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34057"
                        },
                        "displayName": "Jonathan Keane",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-07-17T18:20:36.758+0000",
                    "updated": "2021-07-17T18:20:36.758+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386828/comment/17393339",
                    "id": "17393339",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 10642\n[https://github.com/apache/arrow/pull/10642]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-08-04T17:04:20.564+0000",
                    "updated": "2021-08-04T17:04:20.564+0000"
                }
            ],
            "maxResults": 4,
            "total": 4,
            "startAt": 0
        },
        "customfield_12311820": "0|z0sgso:",
        "customfield_12314139": null
    }
}