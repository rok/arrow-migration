{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13188503",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188503",
    "key": "ARROW-3383",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343858",
                "id": "12343858",
                "description": "",
                "name": "0.12.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-01-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
            "name": "pravindra",
            "key": "pravindra",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
            },
            "displayName": "Pindikura Ravindra",
            "active": true,
            "timeZone": "Asia/Kolkata"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334626",
                "id": "12334626",
                "name": "C++ - Gandiva"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=praveenbingo",
            "name": "praveenbingo",
            "key": "praveenbingo",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Praveen Kumar",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=praveenbingo",
            "name": "praveenbingo",
            "key": "praveenbingo",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Praveen Kumar",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 7200,
            "total": 7200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 7200,
            "total": 7200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3383/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 12,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188503/worklog/152218",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra opened a new pull request #2720: ARROW-3383: fix java build\nURL: https://github.com/apache/arrow/pull/2720\n \n \n   - set arrow as parent project, use same style as arrow java\r\n   - fix lots of checkctyle violations\r\n   - add java build/tests to CI\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-08T12:10:06.800+0000",
                    "updated": "2018-10-08T12:10:06.800+0000",
                    "started": "2018-10-08T12:10:06.799+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "152218",
                    "issueId": "13188503"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188503/worklog/152220",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "praveenbingo commented on a change in pull request #2720: ARROW-3383: fix java build\nURL: https://github.com/apache/arrow/pull/2720#discussion_r223344820\n \n \n\n ##########\n File path: .travis.yml\n ##########\n @@ -93,21 +93,21 @@ matrix:\n     - export PLASMA_VALGRIND=1\n     - $TRAVIS_BUILD_DIR/ci/travis_script_python.sh 3.6\n     - $TRAVIS_BUILD_DIR/ci/travis_upload_cpp_coverage.sh\n-  # Gandiva C++ w/ gcc 4.9\n+  # Gandiva C++ w/ gcc 4.9 and Java\n   - compiler: gcc\n     language: cpp\n     os: linux\n     jdk: openjdk8\n     env:\n+    - ARROW_TRAVIS_GANDIVA=1\n     - ARROW_TRAVIS_USE_TOOLCHAIN=1\n     - ARROW_TRAVIS_VALGRIND=1\n     - ARROW_TRAVIS_CLANG_FORMAT=1\n     - ARROW_BUILD_WARNING_LEVEL=CHECKIN\n-    - ARROW_TRAVIS_GANDIVA=1\n     - MATRIX_EVAL=\"CC=gcc-4.9 && CXX=g++-4.9\"\n     before_script:\n-    # Run if something changed in CPP.\n-    - if [ $ARROW_CI_CPP_AFFECTED != \"1\" ]; then exit; fi\n+    # Run if something changed in CPP or Java.\n+    - if [ $ARROW_CI_CPP_AFFECTED != \"1\" && $ARROW_CI_JAVA_AFFECTED != \"1\" ]; then exit; fi\n \n Review comment:\n   Or?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-08T12:28:49.831+0000",
                    "updated": "2018-10-08T12:28:49.831+0000",
                    "started": "2018-10-08T12:28:49.830+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "152220",
                    "issueId": "13188503"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188503/worklog/152539",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "praveenbingo commented on a change in pull request #2720: ARROW-3383: fix java build\nURL: https://github.com/apache/arrow/pull/2720#discussion_r223570343\n \n \n\n ##########\n File path: .travis.yml\n ##########\n @@ -93,21 +93,21 @@ matrix:\n     - export PLASMA_VALGRIND=1\n     - $TRAVIS_BUILD_DIR/ci/travis_script_python.sh 3.6\n     - $TRAVIS_BUILD_DIR/ci/travis_upload_cpp_coverage.sh\n-  # Gandiva C++ w/ gcc 4.9\n+  # Gandiva C++ w/ gcc 4.9 and Java\n   - compiler: gcc\n     language: cpp\n     os: linux\n     jdk: openjdk8\n     env:\n+    - ARROW_TRAVIS_GANDIVA=1\n     - ARROW_TRAVIS_USE_TOOLCHAIN=1\n     - ARROW_TRAVIS_VALGRIND=1\n     - ARROW_TRAVIS_CLANG_FORMAT=1\n     - ARROW_BUILD_WARNING_LEVEL=CHECKIN\n-    - ARROW_TRAVIS_GANDIVA=1\n     - MATRIX_EVAL=\"CC=gcc-4.9 && CXX=g++-4.9\"\n     before_script:\n-    # Run if something changed in CPP.\n-    - if [ $ARROW_CI_CPP_AFFECTED != \"1\" ]; then exit; fi\n+    # Run if something changed in CPP or Java.\n+    - if [ $ARROW_CI_CPP_AFFECTED != \"1\" && $ARROW_CI_JAVA_AFFECTED != \"1\" ]; then exit; fi\n \n Review comment:\n   never mind..read it wrong the first time..\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-09T06:15:12.965+0000",
                    "updated": "2018-10-09T06:15:12.965+0000",
                    "started": "2018-10-09T06:15:12.965+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "152539",
                    "issueId": "13188503"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188503/worklog/152674",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2720: ARROW-3383: [Gandiva][Java] Fix java build\nURL: https://github.com/apache/arrow/pull/2720#issuecomment-428197005\n \n \n   Just rebased, so the build should pass now (unless we hit ARROW-3343)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-09T13:43:31.374+0000",
                    "updated": "2018-10-09T13:43:31.374+0000",
                    "started": "2018-10-09T13:43:31.373+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "152674",
                    "issueId": "13188503"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188503/worklog/152675",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2720: ARROW-3383: [Gandiva][Java] Fix java build\nURL: https://github.com/apache/arrow/pull/2720#issuecomment-428197886\n \n \n   Does this have any conflict with https://github.com/apache/arrow/pull/2717? I should probably merge that first\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-09T13:45:51.857+0000",
                    "updated": "2018-10-09T13:45:51.857+0000",
                    "started": "2018-10-09T13:45:51.857+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "152675",
                    "issueId": "13188503"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188503/worklog/152684",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on issue #2720: ARROW-3383: [Gandiva][Java] Fix java build\nURL: https://github.com/apache/arrow/pull/2720#issuecomment-428217398\n \n \n   No conflict with #2717 but it\u2019s likely that will show up checkstyle errors (this PR switches to arrow checkstyle) in the new java code. Please merge that one first. I\u2019ll fix the checkstyle errors.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-09T14:36:22.895+0000",
                    "updated": "2018-10-09T14:36:22.895+0000",
                    "started": "2018-10-09T14:36:22.893+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "152684",
                    "issueId": "13188503"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188503/worklog/152685",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra edited a comment on issue #2720: ARROW-3383: [Gandiva][Java] Fix java build\nURL: https://github.com/apache/arrow/pull/2720#issuecomment-428217398\n \n \n   No conflict with #2717 but it\u2019s likely this change will show up checkstyle errors (this PR switches to arrow checkstyle) in the new java code. Please merge that one first. I\u2019ll fix the checkstyle errors.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-09T14:36:53.710+0000",
                    "updated": "2018-10-09T14:36:53.710+0000",
                    "started": "2018-10-09T14:36:53.709+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "152685",
                    "issueId": "13188503"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188503/worklog/152689",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2720: ARROW-3383: [Gandiva][Java] Fix java build\nURL: https://github.com/apache/arrow/pull/2720#issuecomment-428220299\n \n \n   OK, merged #2717\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-09T14:43:34.809+0000",
                    "updated": "2018-10-09T14:43:34.809+0000",
                    "started": "2018-10-09T14:43:34.808+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "152689",
                    "issueId": "13188503"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188503/worklog/153061",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2720: ARROW-3383: [Gandiva][Java] Fix java build\nURL: https://github.com/apache/arrow/pull/2720#issuecomment-428476724\n \n \n   I had forgotten to push the Gandiva commits to apache/master. Should be good now\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-10T08:03:03.617+0000",
                    "updated": "2018-10-10T08:03:03.617+0000",
                    "started": "2018-10-10T08:03:03.616+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "153061",
                    "issueId": "13188503"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188503/worklog/153123",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on issue #2720: ARROW-3383: [Gandiva][Java] Fix java build\nURL: https://github.com/apache/arrow/pull/2720#issuecomment-428556880\n \n \n   @wesm can you please merge now ? \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-10T12:43:39.726+0000",
                    "updated": "2018-10-10T12:43:39.726+0000",
                    "started": "2018-10-10T12:43:39.726+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "153123",
                    "issueId": "13188503"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188503/worklog/153134",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2720: ARROW-3383: [Gandiva][Java] Fix java build\nURL: https://github.com/apache/arrow/pull/2720#issuecomment-428575228\n \n \n   Yep! merging now\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-10T13:39:15.924+0000",
                    "updated": "2018-10-10T13:39:15.924+0000",
                    "started": "2018-10-10T13:39:15.923+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "153134",
                    "issueId": "13188503"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188503/worklog/153135",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm closed pull request #2720: ARROW-3383: [Gandiva][Java] Fix java build\nURL: https://github.com/apache/arrow/pull/2720\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/.travis.yml b/.travis.yml\nindex 24fde86ab0..2115218dd8 100644\n--- a/.travis.yml\n+++ b/.travis.yml\n@@ -93,21 +93,21 @@ matrix:\n     - export PLASMA_VALGRIND=1\n     - $TRAVIS_BUILD_DIR/ci/travis_script_python.sh 3.6\n     - $TRAVIS_BUILD_DIR/ci/travis_upload_cpp_coverage.sh\n-  # Gandiva C++ w/ gcc 4.9\n+  # Gandiva C++ w/ gcc 4.9 and Java\n   - compiler: gcc\n     language: cpp\n     os: linux\n     jdk: openjdk8\n     env:\n+    - ARROW_TRAVIS_GANDIVA=1\n     - ARROW_TRAVIS_USE_TOOLCHAIN=1\n     - ARROW_TRAVIS_VALGRIND=1\n     - ARROW_TRAVIS_CLANG_FORMAT=1\n     - ARROW_BUILD_WARNING_LEVEL=CHECKIN\n-    - ARROW_TRAVIS_GANDIVA=1\n     - MATRIX_EVAL=\"CC=gcc-4.9 && CXX=g++-4.9\"\n     before_script:\n-    # Run if something changed in CPP.\n-    - if [ $ARROW_CI_CPP_AFFECTED != \"1\" ]; then exit; fi\n+    # Run if something changed in CPP or Java.\n+    - if [ $ARROW_CI_CPP_AFFECTED != \"1\" && $ARROW_CI_JAVA_AFFECTED != \"1\" ]; then exit; fi\n     - $TRAVIS_BUILD_DIR/ci/travis_install_linux.sh\n     - $TRAVIS_BUILD_DIR/ci/travis_install_clang_tools.sh\n     - $TRAVIS_BUILD_DIR/ci/travis_lint.sh\n@@ -115,7 +115,8 @@ matrix:\n     - git submodule update --init\n     - $TRAVIS_BUILD_DIR/ci/travis_before_script_cpp.sh --only-library\n     script:\n-    - $TRAVIS_BUILD_DIR/ci/travis_script_gandiva.sh\n+    - $TRAVIS_BUILD_DIR/ci/travis_script_gandiva_cpp.sh\n+    - $TRAVIS_BUILD_DIR/ci/travis_script_gandiva_java.sh\n   # [OS X] C++ & Python w/ XCode 6.4\n   - compiler: clang\n     language: cpp\ndiff --git a/ci/travis_script_gandiva.sh b/ci/travis_script_gandiva_cpp.sh\nsimilarity index 100%\nrename from ci/travis_script_gandiva.sh\nrename to ci/travis_script_gandiva_cpp.sh\ndiff --git a/ci/travis_script_gandiva_java.sh b/ci/travis_script_gandiva_java.sh\nnew file mode 100755\nindex 0000000000..8c26e5c859\n--- /dev/null\n+++ b/ci/travis_script_gandiva_java.sh\n@@ -0,0 +1,35 @@\n+#!/usr/bin/env bash\n+\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+set -e\n+\n+source $TRAVIS_BUILD_DIR/ci/travis_env_common.sh\n+JAVA_DIR=${TRAVIS_BUILD_DIR}/java\n+\n+pushd $JAVA_DIR\n+\n+export MAVEN_OPTS=\"$MAVEN_OPTS -Dorg.slf4j.simpleLogger.defaultLogLevel=warn\"\n+\n+# build with gandiva profile\n+mvn -P gandiva -B install -DskipTests -Dgandiva.cpp.build.dir=$CPP_BUILD_DIR\n+\n+# run gandiva tests\n+mvn test -P gandiva -pl gandiva -Dgandiva.cpp.build.dir=$CPP_BUILD_DIR\n+\n+popd\ndiff --git a/ci/travis_script_java.sh b/ci/travis_script_java.sh\nindex 9553dd52da..8a71fdc4d0 100755\n--- a/ci/travis_script_java.sh\n+++ b/ci/travis_script_java.sh\n@@ -20,7 +20,6 @@\n set -e\n \n JAVA_DIR=${TRAVIS_BUILD_DIR}/java\n-\n pushd $JAVA_DIR\n \n export MAVEN_OPTS=\"$MAVEN_OPTS -Dorg.slf4j.simpleLogger.defaultLogLevel=warn\"\ndiff --git a/java/gandiva/dev/checkstyle/checkstyle.license b/java/gandiva/dev/checkstyle/checkstyle.license\ndeleted file mode 100644\nindex 8cf41b0314..0000000000\n--- a/java/gandiva/dev/checkstyle/checkstyle.license\n+++ /dev/null\n@@ -1,17 +0,0 @@\n-/**\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- * http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n\\ No newline at end of file\ndiff --git a/java/gandiva/dev/checkstyle/checkstyle.xml b/java/gandiva/dev/checkstyle/checkstyle.xml\ndeleted file mode 100644\nindex c081d95072..0000000000\n--- a/java/gandiva/dev/checkstyle/checkstyle.xml\n+++ /dev/null\n@@ -1,259 +0,0 @@\n-<!--\n-  ~ Licensed to the Apache Software Foundation (ASF) under one or more\n-  ~ contributor license agreements.  See the NOTICE file distributed with\n-  ~ this work for additional information regarding copyright ownership.\n-  ~ The ASF licenses this file to You under the Apache License, Version 2.0\n-  ~ (the \"License\"); you may not use this file except in compliance with\n-  ~ the License.  You may obtain a copy of the License at\n-  ~\n-  ~    http://www.apache.org/licenses/LICENSE-2.0\n-  ~\n-  ~ Unless required by applicable law or agreed to in writing, software\n-  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-  ~ See the License for the specific language governing permissions and\n-  ~ limitations under the License.\n-  -->\n-\n-<!DOCTYPE module PUBLIC\n-        \"-//Puppy Crawl//DTD Check Configuration 1.3//EN\"\n-        \"http://www.puppycrawl.com/dtds/configuration_1_3.dtd\">\n-\n-<!--\n-    Checkstyle configuration that checks the Google coding conventions from Google Java Style\n-    that can be found at https://google.github.io/styleguide/javaguide.html.\n-\n-    Checkstyle is very configurable. Be sure to read the documentation at\n-    http://checkstyle.sf.net (or in your downloaded distribution).\n-\n-    To completely disable a check, just comment it out or delete it from the file.\n-\n-    Authors: Max Vetrenko, Ruslan Diachenko, Roman Ivanov.\n- -->\n-\n-<module name=\"Checker\">\n-    <property name=\"charset\" value=\"UTF-8\"/>\n-\n-    <property name=\"severity\" value=\"warning\"/>\n-\n-    <property name=\"fileExtensions\" value=\"java, properties, xml\"/>\n-\n-    <!-- Arrow specific modules -->\n-\n-    <module name=\"Header\">\n-        <property name=\"headerFile\" value=\"${checkstyle.header.file}\"/>\n-    </module>\n-\n-    <module name=\"SuppressionFilter\">\n-        <property name=\"file\" value=\"${checkstyle.suppressions.file}\"/>\n-    </module>\n-\n-    <module name=\"NewlineAtEndOfFile\"/>\n-\n-    <!--\n-    If you wish to turn off checking for a section of code, you can put a comment in the source\n-    before and after the section, with the following syntax:\n-    // checkstyle:off no.XXX (such as checkstyle.off: NoFinalizer)\n-    ...  // stuff that breaks the styles\n-    // checkstyle:on\n-    -->\n-    <module name=\"SuppressionCommentFilter\">\n-        <property name=\"offCommentFormat\" value=\"checkstyle.off\\: ([\\w\\|]+)\"/>\n-        <property name=\"onCommentFormat\" value=\"checkstyle.on\\: ([\\w\\|]+)\"/>\n-        <property name=\"checkFormat\" value=\"$1\"/>\n-    </module>\n-\n-    <!-- Google style modules -->\n-\n-    <!-- Checks for whitespace                               -->\n-    <!-- See http://checkstyle.sf.net/config_whitespace.html -->\n-    <module name=\"FileTabCharacter\">\n-        <property name=\"eachLine\" value=\"true\"/>\n-    </module>\n-\n-    <module name=\"TreeWalker\">\n-        <module name=\"OuterTypeFilename\"/>\n-        <module name=\"IllegalTokenText\">\n-            <property name=\"tokens\" value=\"STRING_LITERAL, CHAR_LITERAL\"/>\n-            <property name=\"format\"\n-                      value=\"\\\\u00(08|09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\\\(0(10|11|12|14|15|42|47)|134)\"/>\n-            <property name=\"message\" value=\"Avoid using corresponding octal or Unicode escape.\"/>\n-        </module>\n-        <module name=\"AvoidEscapedUnicodeCharacters\">\n-            <property name=\"allowEscapesForControlCharacters\" value=\"true\"/>\n-            <property name=\"allowByTailComment\" value=\"true\"/>\n-            <property name=\"allowNonPrintableEscapes\" value=\"true\"/>\n-        </module>\n-        <module name=\"LineLength\">\n-            <property name=\"max\" value=\"100\"/>\n-            <property name=\"ignorePattern\" value=\"^package.*|^import.*|a href|href|http://|https://|ftp://\"/>\n-        </module>\n-        <module name=\"AvoidStarImport\"/>\n-        <module name=\"OneTopLevelClass\"/>\n-        <module name=\"NoLineWrap\"/>\n-        <module name=\"EmptyBlock\">\n-            <property name=\"option\" value=\"TEXT\"/>\n-            <property name=\"tokens\" value=\"LITERAL_TRY, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH\"/>\n-        </module>\n-        <module name=\"NeedBraces\"/>\n-        <module name=\"LeftCurly\">\n-            <property name=\"maxLineLength\" value=\"100\"/>\n-        </module>\n-        <module name=\"RightCurly\"/>\n-        <module name=\"RightCurly\">\n-            <property name=\"option\" value=\"alone\"/>\n-            <property name=\"tokens\"\n-                      value=\"CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, LITERAL_DO, STATIC_INIT, INSTANCE_INIT\"/>\n-        </module>\n-        <module name=\"WhitespaceAround\">\n-            <property name=\"allowEmptyConstructors\" value=\"true\"/>\n-            <property name=\"allowEmptyMethods\" value=\"true\"/>\n-            <property name=\"allowEmptyTypes\" value=\"true\"/>\n-            <property name=\"allowEmptyLoops\" value=\"true\"/>\n-            <message key=\"ws.notFollowed\"\n-                     value=\"WhitespaceAround: ''{0}'' is not followed by whitespace. Empty blocks may only be represented as '{}' when not part of a multi-block statement (4.1.3)\"/>\n-            <message key=\"ws.notPreceded\"\n-                     value=\"WhitespaceAround: ''{0}'' is not preceded with whitespace.\"/>\n-        </module>\n-        <module name=\"OneStatementPerLine\"/>\n-        <module name=\"MultipleVariableDeclarations\"/>\n-        <module name=\"ArrayTypeStyle\"/>\n-        <module name=\"MissingSwitchDefault\"/>\n-        <module name=\"FallThrough\"/>\n-        <module name=\"UpperEll\"/>\n-        <module name=\"ModifierOrder\"/>\n-        <module name=\"EmptyLineSeparator\">\n-            <property name=\"allowNoEmptyLineBetweenFields\" value=\"true\"/>\n-        </module>\n-        <module name=\"SeparatorWrap\">\n-            <property name=\"tokens\" value=\"DOT\"/>\n-            <property name=\"option\" value=\"nl\"/>\n-        </module>\n-        <module name=\"SeparatorWrap\">\n-            <property name=\"tokens\" value=\"COMMA\"/>\n-            <property name=\"option\" value=\"EOL\"/>\n-        </module>\n-        <module name=\"PackageName\">\n-            <property name=\"format\" value=\"^[a-z]+(\\.[a-z][a-z0-9]*)*$\"/>\n-            <message key=\"name.invalidPattern\"\n-                     value=\"Package name ''{0}'' must match pattern ''{1}''.\"/>\n-        </module>\n-        <module name=\"TypeName\">\n-            <message key=\"name.invalidPattern\"\n-                     value=\"Type name ''{0}'' must match pattern ''{1}''.\"/>\n-        </module>\n-        <module name=\"MemberName\">\n-            <property name=\"format\" value=\"^[a-z][a-z0-9][a-zA-Z0-9]*$\"/>\n-            <message key=\"name.invalidPattern\"\n-                     value=\"Member name ''{0}'' must match pattern ''{1}''.\"/>\n-        </module>\n-        <module name=\"ParameterName\">\n-            <property name=\"format\" value=\"^[a-z][a-z0-9][a-zA-Z0-9]*$\"/>\n-            <message key=\"name.invalidPattern\"\n-                     value=\"Parameter name ''{0}'' must match pattern ''{1}''.\"/>\n-        </module>\n-        <module name=\"CatchParameterName\">\n-            <property name=\"format\" value=\"^[a-z][a-z0-9][a-zA-Z0-9]*$\"/>\n-            <message key=\"name.invalidPattern\"\n-                     value=\"Catch parameter name ''{0}'' must match pattern ''{1}''.\"/>\n-        </module>\n-        <module name=\"LocalVariableName\">\n-            <property name=\"tokens\" value=\"VARIABLE_DEF\"/>\n-            <property name=\"format\" value=\"^[a-z][a-z0-9][a-zA-Z0-9]*$\"/>\n-            <property name=\"allowOneCharVarInForLoop\" value=\"true\"/>\n-            <message key=\"name.invalidPattern\"\n-                     value=\"Local variable name ''{0}'' must match pattern ''{1}''.\"/>\n-        </module>\n-        <module name=\"ClassTypeParameterName\">\n-            <property name=\"format\" value=\"(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)\"/>\n-            <message key=\"name.invalidPattern\"\n-                     value=\"Class type name ''{0}'' must match pattern ''{1}''.\"/>\n-        </module>\n-        <module name=\"MethodTypeParameterName\">\n-            <property name=\"format\" value=\"(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)\"/>\n-            <message key=\"name.invalidPattern\"\n-                     value=\"Method type name ''{0}'' must match pattern ''{1}''.\"/>\n-        </module>\n-        <module name=\"InterfaceTypeParameterName\">\n-            <property name=\"format\" value=\"(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)\"/>\n-            <message key=\"name.invalidPattern\"\n-                     value=\"Interface type name ''{0}'' must match pattern ''{1}''.\"/>\n-        </module>\n-        <module name=\"NoFinalizer\"/>\n-        <module name=\"GenericWhitespace\">\n-            <message key=\"ws.followed\"\n-                     value=\"GenericWhitespace ''{0}'' is followed by whitespace.\"/>\n-            <message key=\"ws.preceded\"\n-                     value=\"GenericWhitespace ''{0}'' is preceded with whitespace.\"/>\n-            <message key=\"ws.illegalFollow\"\n-                     value=\"GenericWhitespace ''{0}'' should followed by whitespace.\"/>\n-            <message key=\"ws.notPreceded\"\n-                     value=\"GenericWhitespace ''{0}'' is not preceded with whitespace.\"/>\n-        </module>\n-        <module name=\"Indentation\">\n-            <property name=\"basicOffset\" value=\"2\"/>\n-            <property name=\"braceAdjustment\" value=\"0\"/>\n-            <property name=\"caseIndent\" value=\"2\"/>\n-            <property name=\"throwsIndent\" value=\"4\"/>\n-            <property name=\"lineWrappingIndentation\" value=\"4\"/>\n-            <property name=\"arrayInitIndent\" value=\"2\"/>\n-        </module>\n-        <module name=\"AbbreviationAsWordInName\">\n-            <property name=\"ignoreFinal\" value=\"false\"/>\n-            <property name=\"allowedAbbreviationLength\" value=\"1\"/>\n-        </module>\n-        <module name=\"OverloadMethodsDeclarationOrder\"/>\n-        <module name=\"VariableDeclarationUsageDistance\"/>\n-        <module name=\"CustomImportOrder\">\n-            <property name=\"specialImportsRegExp\" value=\"com.google\"/>\n-            <property name=\"sortImportsInGroupAlphabetically\" value=\"true\"/>\n-            <property name=\"customImportOrderRules\"\n-                      value=\"STATIC###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE###STANDARD_JAVA_PACKAGE\"/>\n-        </module>\n-        <module name=\"MethodParamPad\"/>\n-        <module name=\"OperatorWrap\">\n-            <property name=\"option\" value=\"NL\"/>\n-            <property name=\"tokens\"\n-                      value=\"BAND, BOR, BSR, BXOR, DIV, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF, LOR, LT, MINUS, MOD, NOT_EQUAL, PLUS, QUESTION, SL, SR, STAR \"/>\n-        </module>\n-        <module name=\"AnnotationLocation\">\n-            <property name=\"tokens\" value=\"CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF\"/>\n-        </module>\n-        <module name=\"AnnotationLocation\">\n-            <property name=\"tokens\" value=\"VARIABLE_DEF\"/>\n-            <property name=\"allowSamelineMultipleAnnotations\" value=\"true\"/>\n-        </module>\n-        <module name=\"NonEmptyAtclauseDescription\"/>\n-        <module name=\"JavadocTagContinuationIndentation\"/>\n-        <module name=\"SummaryJavadoc\">\n-            <property name=\"forbiddenSummaryFragments\"\n-                      value=\"^@return the *|^This method returns |^A [{]@code [a-zA-Z0-9]+[}]( is a )\"/>\n-        </module>\n-        <module name=\"JavadocParagraph\"/>\n-        <module name=\"AtclauseOrder\">\n-            <property name=\"tagOrder\" value=\"@param, @return, @throws, @deprecated\"/>\n-            <property name=\"target\" value=\"CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF\"/>\n-        </module>\n-        <module name=\"JavadocMethod\">\n-            <property name=\"scope\" value=\"public\"/>\n-            <property name=\"allowMissingParamTags\" value=\"true\"/>\n-            <property name=\"allowMissingThrowsTags\" value=\"true\"/>\n-            <property name=\"allowMissingReturnTag\" value=\"true\"/>\n-            <property name=\"minLineCount\" value=\"2\"/>\n-            <property name=\"allowedAnnotations\" value=\"Override, Test\"/>\n-            <property name=\"allowThrowsTagsForSubclasses\" value=\"true\"/>\n-        </module>\n-        <module name=\"MethodName\">\n-            <property name=\"format\" value=\"^[a-z][a-z0-9][a-zA-Z0-9_]*$\"/>\n-            <message key=\"name.invalidPattern\"\n-                     value=\"Method name ''{0}'' must match pattern ''{1}''.\"/>\n-        </module>\n-        <module name=\"SingleLineJavadoc\">\n-            <property name=\"ignoreInlineTags\" value=\"false\"/>\n-        </module>\n-        <module name=\"EmptyCatchBlock\">\n-            <property name=\"exceptionVariableName\" value=\"expected\"/>\n-        </module>\n-        <module name=\"CommentsIndentation\"/>\n-    </module>\n-</module>\ndiff --git a/java/gandiva/dev/checkstyle/suppressions.xml b/java/gandiva/dev/checkstyle/suppressions.xml\ndeleted file mode 100644\nindex 6fd92fb5dd..0000000000\n--- a/java/gandiva/dev/checkstyle/suppressions.xml\n+++ /dev/null\n@@ -1,33 +0,0 @@\n-<!--\n-  ~ Licensed to the Apache Software Foundation (ASF) under one or more\n-  ~ contributor license agreements.  See the NOTICE file distributed with\n-  ~ this work for additional information regarding copyright ownership.\n-  ~ The ASF licenses this file to You under the Apache License, Version 2.0\n-  ~ (the \"License\"); you may not use this file except in compliance with\n-  ~ the License.  You may obtain a copy of the License at\n-  ~\n-  ~    http://www.apache.org/licenses/LICENSE-2.0\n-  ~\n-  ~ Unless required by applicable law or agreed to in writing, software\n-  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-  ~ See the License for the specific language governing permissions and\n-  ~ limitations under the License.\n-  -->\n-\n-<!DOCTYPE suppressions PUBLIC\n-        \"-//Puppy Crawl//DTD Suppressions 1.1//EN\"\n-        \"http://www.puppycrawl.com/dtds/suppressions_1_1.dtd\">\n-\n-<suppressions>\n-    <suppress checks=\"JavadocPackage\" files=\".*[\\\\/]src[\\\\/]test[\\\\/].*\"/>\n-    <suppress checks=\"JavadocPackage\" files=\".*[\\\\/]maven-archetypes[\\\\/].*\"/>\n-    <suppress checks=\"JavadocPackage\" files=\".*[\\\\/]examples[\\\\/].*\"/>\n-\n-    <!-- suppress all checks in the generated directories -->\n-    <suppress checks=\".*\" files=\".+[\\\\/]generated[\\\\/].+\\.java\"/>\n-    <suppress checks=\".*\" files=\".+[\\\\/]generated-sources[\\\\/].+\\.java\"/>\n-    <suppress checks=\".*\" files=\".+[\\\\/]generated-test-sources[\\\\/].+\\.java\"/>\n-\n-    <suppress checks=\".*\" files=\".*\\.properties\"/>\n-</suppressions>\ndiff --git a/java/gandiva/pom.xml b/java/gandiva/pom.xml\nindex 0fd8d01da0..ab883515ea 100644\n--- a/java/gandiva/pom.xml\n+++ b/java/gandiva/pom.xml\n@@ -13,36 +13,34 @@\n          xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n          xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n     <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+      <groupId>org.apache.arrow</groupId>\n+      <artifactId>arrow-java-root</artifactId>\n+      <version>0.12.0-SNAPSHOT</version>\n+    </parent>\n \n     <groupId>org.apache.arrow.gandiva</groupId>\n-    <artifactId>gandiva-java</artifactId>\n-    <version>0.1-SNAPSHOT</version>\n+    <artifactId>arrow-gandiva</artifactId>\n     <packaging>jar</packaging>\n-    <name>Gandiva Java Project</name>\n+    <name>Arrow Gandiva</name>\n     <properties>\n-        <arrow.version>0.9.0</arrow.version>\n-        <protobuf.version>2.5.0</protobuf.version>\n         <maven.compiler.source>1.8</maven.compiler.source>\n         <maven.compiler.target>1.8</maven.compiler.target>\n+        <protobuf.version>2.5.0</protobuf.version>\n         <dep.guava.version>18.0</dep.guava.version>\n         <checkstyle.failOnViolation>true</checkstyle.failOnViolation>\n-        <gandiva.cpp.build.dir>../cpp/debug</gandiva.cpp.build.dir>\n+        <gandiva.cpp.build.dir>../../cpp/debug</gandiva.cpp.build.dir>\n     </properties>\n     <dependencies>\n-        <dependency>\n-            <groupId>org.apache.arrow</groupId>\n-            <artifactId>arrow-format</artifactId>\n-            <version>${arrow.version}</version>\n-        </dependency>\n         <dependency>\n             <groupId>org.apache.arrow</groupId>\n             <artifactId>arrow-memory</artifactId>\n-            <version>${arrow.version}</version>\n+            <version>${project.version}</version>\n         </dependency>\n         <dependency>\n             <groupId>org.apache.arrow</groupId>\n             <artifactId>arrow-vector</artifactId>\n-            <version>${arrow.version}</version>\n+            <version>${project.version}</version>\n         </dependency>\n         <dependency>\n             <groupId>com.google.protobuf</groupId>\n@@ -60,6 +58,16 @@\n             <artifactId>guava</artifactId>\n             <version>23.0</version>\n         </dependency>\n+        <dependency>\n+            <groupId>org.slf4j</groupId>\n+            <artifactId>slf4j-api</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>joda-time</groupId>\n+            <artifactId>joda-time</artifactId>\n+            <version>2.10</version>\n+            <scope>test</scope>\n+        </dependency>\n     </dependencies>\n     <profiles>\n         <profile>\n@@ -158,51 +166,6 @@\n                     </execution>\n                 </executions>\n             </plugin>\n-            <plugin>\n-                <groupId>org.apache.maven.plugins</groupId>\n-                <artifactId>maven-checkstyle-plugin</artifactId>\n-                <version>2.17</version>\n-                <dependencies>\n-                    <dependency>\n-                        <groupId>com.puppycrawl.tools</groupId>\n-                        <artifactId>checkstyle</artifactId>\n-                        <version>6.19</version>\n-                    </dependency>\n-                    <dependency>\n-                        <groupId>com.google.guava</groupId>\n-                        <artifactId>guava</artifactId>\n-                        <version>${dep.guava.version}</version>\n-                    </dependency>\n-                    <dependency>\n-                        <groupId>org.slf4j</groupId>\n-                        <artifactId>jcl-over-slf4j</artifactId>\n-                        <version>1.7.5</version>\n-                    </dependency>\n-                </dependencies>\n-                <executions>\n-                    <execution>\n-                        <id>validate</id>\n-                        <phase>validate</phase>\n-                        <goals>\n-                            <goal>check</goal>\n-                        </goals>\n-                    </execution>\n-                </executions>\n-                <configuration>\n-                    <configLocation>dev/checkstyle/checkstyle.xml</configLocation>\n-                    <headerLocation>dev/checkstyle/checkstyle.license</headerLocation>\n-                    <suppressionsLocation>dev/checkstyle/suppressions.xml</suppressionsLocation>\n-                    <encoding>UTF-8</encoding>\n-                    <consoleOutput>true</consoleOutput>\n-                    <failsOnError>${checkstyle.failOnViolation}</failsOnError>\n-                    <failOnViolation>${checkstyle.failOnViolation}</failOnViolation>\n-                    <violationSeverity>warning</violationSeverity>\n-                    <format>xml</format>\n-                    <format>html</format>\n-                    <outputFile>${project.build.directory}/test/checkstyle-errors.xml</outputFile>\n-                    <linkXRef>false</linkXRef>\n-                </configuration>\n-            </plugin>\n         </plugins>\n     </build>\n \ndiff --git a/java/gandiva/src/main/java/org/apache/arrow/gandiva/evaluator/ExpressionRegistry.java b/java/gandiva/src/main/java/org/apache/arrow/gandiva/evaluator/ExpressionRegistry.java\nindex ad473ee8df..abaf8ffdd7 100644\n--- a/java/gandiva/src/main/java/org/apache/arrow/gandiva/evaluator/ExpressionRegistry.java\n+++ b/java/gandiva/src/main/java/org/apache/arrow/gandiva/evaluator/ExpressionRegistry.java\n@@ -18,9 +18,8 @@\n \n package org.apache.arrow.gandiva.evaluator;\n \n-import com.google.common.collect.Lists;\n-import com.google.common.collect.Sets;\n-import com.google.protobuf.InvalidProtocolBufferException;\n+import java.util.List;\n+import java.util.Set;\n \n import org.apache.arrow.gandiva.exceptions.GandivaException;\n import org.apache.arrow.gandiva.ipc.GandivaTypes;\n@@ -33,8 +32,9 @@\n import org.apache.arrow.vector.types.TimeUnit;\n import org.apache.arrow.vector.types.pojo.ArrowType;\n \n-import java.util.List;\n-import java.util.Set;\n+import com.google.common.collect.Lists;\n+import com.google.common.collect.Sets;\n+import com.google.protobuf.InvalidProtocolBufferException;\n \n /**\n  * Used to get the functions and data types supported by\ndiff --git a/java/gandiva/src/main/java/org/apache/arrow/gandiva/evaluator/Filter.java b/java/gandiva/src/main/java/org/apache/arrow/gandiva/evaluator/Filter.java\nindex 02de6e5afd..e401f95720 100644\n--- a/java/gandiva/src/main/java/org/apache/arrow/gandiva/evaluator/Filter.java\n+++ b/java/gandiva/src/main/java/org/apache/arrow/gandiva/evaluator/Filter.java\n@@ -18,7 +18,8 @@\n \n package org.apache.arrow.gandiva.evaluator;\n \n-import io.netty.buffer.ArrowBuf;\n+import java.util.ArrayList;\n+import java.util.List;\n \n import org.apache.arrow.gandiva.exceptions.EvaluatorClosedException;\n import org.apache.arrow.gandiva.exceptions.GandivaException;\n@@ -31,18 +32,16 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import java.util.ArrayList;\n-import java.util.List;\n+import io.netty.buffer.ArrowBuf;\n \n /**\n  * This class provides a mechanism to filter a RecordBatch by evaluating a condition expression.\n- * Follow these steps to use this class:\n- * 1) Use the static method make() to create an instance of this class that evaluates a\n- * condition.\n- * 2) Invoke the method evaluate() to evaluate the filter against a RecordBatch\n- * 3) Invoke close() to release resources\n+ * Follow these steps to use this class: 1) Use the static method make() to create an instance of\n+ * this class that evaluates a condition. 2) Invoke the method evaluate() to evaluate the filter\n+ * against a RecordBatch 3) Invoke close() to release resources\n  */\n public class Filter {\n+\n   private static final Logger logger = LoggerFactory.getLogger(Filter.class);\n \n   private final long moduleId;\n@@ -56,12 +55,11 @@ private Filter(long moduleId, Schema schema) {\n   }\n \n   /**\n-   * Invoke this function to generate LLVM code to evaluate the condition expression.\n-   * Invoke Filter::Evaluate() against a RecordBatch to evaluate the filter on\n-   * this record batch\n+   * Invoke this function to generate LLVM code to evaluate the condition expression. Invoke\n+   * Filter::Evaluate() against a RecordBatch to evaluate the filter on this record batch\n    *\n-   * @param schema    Table schema. The field names in the schema should match the fields used\n-   *                  to create the TreeNodes\n+   * @param schema Table schema. The field names in the schema should match the fields used to\n+   * create the TreeNodes\n    * @param condition condition to be evaluated against data\n    * @return A native filter object that can be used to invoke on a RecordBatch\n    */\n@@ -70,13 +68,12 @@ public static Filter make(Schema schema, Condition condition) throws GandivaExce\n   }\n \n   /**\n-   * Invoke this function to generate LLVM code to evaluate the condition expression.\n-   * Invoke Filter::Evaluate() against a RecordBatch to evaluate the filter on\n-   * this record batch\n+   * Invoke this function to generate LLVM code to evaluate the condition expression. Invoke\n+   * Filter::Evaluate() against a RecordBatch to evaluate the filter on this record batch\n    *\n-   * @param schema          Table schema. The field names in the schema should match the fields used\n-   *                        to create the TreeNodes\n-   * @param condition       condition to be evaluated against data\n+   * @param schema Table schema. The field names in the schema should match the fields used to\n+   * create the TreeNodes\n+   * @param condition condition to be evaluated against data\n    * @param configurationId Custom configuration created through config builder.\n    * @return A native evaluator object that can be used to invoke these projections on a RecordBatch\n    */\n@@ -96,7 +93,7 @@ public static Filter make(Schema schema, Condition condition, long configuration\n    * Invoke this function to evaluate a filter against a recordBatch.\n    *\n    * @param recordBatch Record batch including the data\n-   * @param selectionVector  Result of applying the filter on the data\n+   * @param selectionVector Result of applying the filter on the data\n    */\n   public void evaluate(ArrowRecordBatch recordBatch, SelectionVector selectionVector)\n       throws GandivaException {\n@@ -105,15 +102,15 @@ public void evaluate(ArrowRecordBatch recordBatch, SelectionVector selectionVect\n   }\n \n   /**\n-   * Invoke this function to evaluate filter against a set of arrow buffers.\n-   * (this is an optimised version that skips taking references).\n+   * Invoke this function to evaluate filter against a set of arrow buffers. (this is an optimised\n+   * version that skips taking references).\n    *\n    * @param numRows number of rows.\n    * @param buffers List of input arrow buffers\n-   * @param selectionVector  Result of applying the filter on the data\n+   * @param selectionVector Result of applying the filter on the data\n    */\n   public void evaluate(int numRows, List<ArrowBuf> buffers,\n-                       SelectionVector selectionVector) throws GandivaException {\n+      SelectionVector selectionVector) throws GandivaException {\n     List<ArrowBuffer> buffersLayout = new ArrayList<>();\n     long offset = 0;\n     for (ArrowBuf arrowBuf : buffers) {\n@@ -125,13 +122,13 @@ public void evaluate(int numRows, List<ArrowBuf> buffers,\n   }\n \n   private void evaluate(int numRows, List<ArrowBuf> buffers, List<ArrowBuffer> buffersLayout,\n-                       SelectionVector selectionVector) throws GandivaException {\n+      SelectionVector selectionVector) throws GandivaException {\n     if (this.closed) {\n       throw new EvaluatorClosedException();\n     }\n     if (selectionVector.getMaxRecords() < numRows) {\n-      logger.error(\"selectionVector has capacity for \" + selectionVector.getMaxRecords()\n-          + \" rows, minimum required \" + numRows);\n+      logger.error(\"selectionVector has capacity for \" + selectionVector.getMaxRecords() +\n+          \" rows, minimum required \" + numRows);\n       throw new GandivaException(\"SelectionVector too small\");\n     }\n \ndiff --git a/java/gandiva/src/main/java/org/apache/arrow/gandiva/evaluator/FunctionSignature.java b/java/gandiva/src/main/java/org/apache/arrow/gandiva/evaluator/FunctionSignature.java\nindex 6414a5d820..baa44952a7 100644\n--- a/java/gandiva/src/main/java/org/apache/arrow/gandiva/evaluator/FunctionSignature.java\n+++ b/java/gandiva/src/main/java/org/apache/arrow/gandiva/evaluator/FunctionSignature.java\n@@ -18,12 +18,12 @@\n \n package org.apache.arrow.gandiva.evaluator;\n \n-import com.google.common.base.MoreObjects;\n-import com.google.common.base.Objects;\n+import java.util.List;\n \n import org.apache.arrow.vector.types.pojo.ArrowType;\n \n-import java.util.List;\n+import com.google.common.base.MoreObjects;\n+import com.google.common.base.Objects;\n \n /**\n  * POJO to define a function signature.\n@@ -70,9 +70,9 @@ public boolean equals(Object signature) {\n       return false;\n     }\n     final FunctionSignature other = (FunctionSignature) signature;\n-    return Objects.equal(this.name, other.name)\n-            && Objects.equal(this.returnType, other.returnType)\n-            && Objects.equal(this.paramTypes, other.paramTypes);\n+    return Objects.equal(this.name, other.name) &&\n+        Objects.equal(this.returnType, other.returnType) &&\n+        Objects.equal(this.paramTypes, other.paramTypes);\n   }\n \n   @Override\ndiff --git a/java/gandiva/src/main/java/org/apache/arrow/gandiva/evaluator/JniWrapper.java b/java/gandiva/src/main/java/org/apache/arrow/gandiva/evaluator/JniWrapper.java\nindex 9a8a106dbb..bc75d9e4f3 100644\n--- a/java/gandiva/src/main/java/org/apache/arrow/gandiva/evaluator/JniWrapper.java\n+++ b/java/gandiva/src/main/java/org/apache/arrow/gandiva/evaluator/JniWrapper.java\n@@ -20,14 +20,14 @@\n \n import static java.util.UUID.randomUUID;\n \n-import org.apache.arrow.gandiva.exceptions.GandivaException;\n-\n import java.io.File;\n import java.io.IOException;\n import java.io.InputStream;\n import java.nio.file.Files;\n import java.nio.file.StandardCopyOption;\n \n+import org.apache.arrow.gandiva.exceptions.GandivaException;\n+\n /**\n  * This class is implemented in JNI. This provides the Java interface\n  * to invoke functions in JNI\n@@ -101,12 +101,12 @@ private static File setupFile(String tmpDir, String libraryToLoad)\n     final String randomizeFileName = libraryToLoad + randomUUID();\n     final File temp = new File(tmpDir, randomizeFileName);\n     if (temp.exists() && !temp.delete()) {\n-      throw new GandivaException(\"File: \" + temp.getAbsolutePath()\n-              + \" already exists and cannot be removed.\");\n+      throw new GandivaException(\"File: \" + temp.getAbsolutePath() +\n+          \" already exists and cannot be removed.\");\n     }\n     if (!temp.createNewFile()) {\n-      throw new GandivaException(\"File: \" + temp.getAbsolutePath()\n-              + \" could not be created.\");\n+      throw new GandivaException(\"File: \" + temp.getAbsolutePath() +\n+          \" could not be created.\");\n     }\n     temp.deleteOnExit();\n     return temp;\ndiff --git a/java/gandiva/src/main/java/org/apache/arrow/gandiva/evaluator/Projector.java b/java/gandiva/src/main/java/org/apache/arrow/gandiva/evaluator/Projector.java\nindex 246f71c2bc..cde0071256 100644\n--- a/java/gandiva/src/main/java/org/apache/arrow/gandiva/evaluator/Projector.java\n+++ b/java/gandiva/src/main/java/org/apache/arrow/gandiva/evaluator/Projector.java\n@@ -18,7 +18,9 @@\n \n package org.apache.arrow.gandiva.evaluator;\n \n-import io.netty.buffer.ArrowBuf;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n import org.apache.arrow.gandiva.exceptions.EvaluatorClosedException;\n import org.apache.arrow.gandiva.exceptions.GandivaException;\n import org.apache.arrow.gandiva.exceptions.UnsupportedTypeException;\n@@ -31,8 +33,7 @@\n import org.apache.arrow.vector.ipc.message.ArrowRecordBatch;\n import org.apache.arrow.vector.types.pojo.Schema;\n \n-import java.util.ArrayList;\n-import java.util.List;\n+import io.netty.buffer.ArrowBuf;\n \n /**\n  * This class provides a mechanism to evaluate a set of expressions against a RecordBatch.\ndiff --git a/java/gandiva/src/main/java/org/apache/arrow/gandiva/evaluator/SelectionVector.java b/java/gandiva/src/main/java/org/apache/arrow/gandiva/evaluator/SelectionVector.java\nindex 52390d34a2..da9316db1e 100644\n--- a/java/gandiva/src/main/java/org/apache/arrow/gandiva/evaluator/SelectionVector.java\n+++ b/java/gandiva/src/main/java/org/apache/arrow/gandiva/evaluator/SelectionVector.java\n@@ -18,9 +18,10 @@\n \n package org.apache.arrow.gandiva.evaluator;\n \n-import io.netty.buffer.ArrowBuf;\n import org.apache.arrow.gandiva.ipc.GandivaTypes.SelectionVectorType;\n \n+import io.netty.buffer.ArrowBuf;\n+\n /**\n  * A selection vector contains the indexes of \"selected\" records in a row batch. It is backed by an\n  * arrow buffer.\n@@ -57,9 +58,9 @@ public final int getRecordCount() {\n    */\n   final void setRecordCount(int recordCount) {\n     if (recordCount * getRecordSize() > buffer.capacity()) {\n-      throw new IllegalArgumentException(\"recordCount \" + recordCount\n-        + \" of size \" + getRecordSize()\n-        + \" exceeds buffer capacity \" + buffer.capacity());\n+      throw new IllegalArgumentException(\"recordCount \" + recordCount +\n+          \" of size \" + getRecordSize() +\n+          \" exceeds buffer capacity \" + buffer.capacity());\n     }\n \n     this.recordCount = recordCount;\ndiff --git a/java/gandiva/src/main/java/org/apache/arrow/gandiva/evaluator/SelectionVectorInt16.java b/java/gandiva/src/main/java/org/apache/arrow/gandiva/evaluator/SelectionVectorInt16.java\nindex 0341cc8459..3826702094 100644\n--- a/java/gandiva/src/main/java/org/apache/arrow/gandiva/evaluator/SelectionVectorInt16.java\n+++ b/java/gandiva/src/main/java/org/apache/arrow/gandiva/evaluator/SelectionVectorInt16.java\n@@ -18,9 +18,10 @@\n \n package org.apache.arrow.gandiva.evaluator;\n \n-import io.netty.buffer.ArrowBuf;\n import org.apache.arrow.gandiva.ipc.GandivaTypes.SelectionVectorType;\n \n+import io.netty.buffer.ArrowBuf;\n+\n /*\n  * Selection vector with records of arrow type INT16.\n  */\ndiff --git a/java/gandiva/src/main/java/org/apache/arrow/gandiva/evaluator/SelectionVectorInt32.java b/java/gandiva/src/main/java/org/apache/arrow/gandiva/evaluator/SelectionVectorInt32.java\nindex c2cf57c2fa..0e8a1c4133 100644\n--- a/java/gandiva/src/main/java/org/apache/arrow/gandiva/evaluator/SelectionVectorInt32.java\n+++ b/java/gandiva/src/main/java/org/apache/arrow/gandiva/evaluator/SelectionVectorInt32.java\n@@ -18,9 +18,10 @@\n \n package org.apache.arrow.gandiva.evaluator;\n \n-import io.netty.buffer.ArrowBuf;\n import org.apache.arrow.gandiva.ipc.GandivaTypes.SelectionVectorType;\n \n+import io.netty.buffer.ArrowBuf;\n+\n /*\n  * Selection vector with records of arrow type INT32.\n  */\ndiff --git a/java/gandiva/src/main/java/org/apache/arrow/gandiva/expression/AndNode.java b/java/gandiva/src/main/java/org/apache/arrow/gandiva/expression/AndNode.java\nindex 304cf208c0..1dc5dc47f8 100644\n--- a/java/gandiva/src/main/java/org/apache/arrow/gandiva/expression/AndNode.java\n+++ b/java/gandiva/src/main/java/org/apache/arrow/gandiva/expression/AndNode.java\n@@ -18,11 +18,11 @@\n \n package org.apache.arrow.gandiva.expression;\n \n+import java.util.List;\n+\n import org.apache.arrow.gandiva.exceptions.GandivaException;\n import org.apache.arrow.gandiva.ipc.GandivaTypes;\n \n-import java.util.List;\n-\n class AndNode implements TreeNode {\n   private final List<TreeNode> children;\n \ndiff --git a/java/gandiva/src/main/java/org/apache/arrow/gandiva/expression/ArrowTypeHelper.java b/java/gandiva/src/main/java/org/apache/arrow/gandiva/expression/ArrowTypeHelper.java\nindex de2dc20706..51104e8e7e 100644\n--- a/java/gandiva/src/main/java/org/apache/arrow/gandiva/expression/ArrowTypeHelper.java\n+++ b/java/gandiva/src/main/java/org/apache/arrow/gandiva/expression/ArrowTypeHelper.java\n@@ -34,9 +34,8 @@\n   static final int WIDTH_32 = 32;\n   static final int WIDTH_64 = 64;\n \n-  private static void initArrowTypeInt(ArrowType.Int intType,\n-                                       GandivaTypes.ExtGandivaType.Builder builder)\n-          throws GandivaException {\n+  private static void initArrowTypeInt(\n+      ArrowType.Int intType, GandivaTypes.ExtGandivaType.Builder builder) throws GandivaException {\n     int width = intType.getBitWidth();\n \n     if (intType.getIsSigned()) {\n@@ -87,9 +86,9 @@ private static void initArrowTypeInt(ArrowType.Int intType,\n     }\n   }\n \n-  private static void initArrowTypeFloat(ArrowType.FloatingPoint floatType,\n-                                         GandivaTypes.ExtGandivaType.Builder builder)\n-          throws GandivaException {\n+  private static void initArrowTypeFloat(\n+      ArrowType.FloatingPoint floatType, GandivaTypes.ExtGandivaType.Builder builder)\n+      throws GandivaException {\n     switch (floatType.getPrecision()) {\n       case HALF: {\n         builder.setType(GandivaTypes.GandivaType.HALF_FLOAT);\n@@ -197,11 +196,12 @@ private static void initArrowTypeTimestamp(ArrowType.Timestamp timestampType,\n \n   /**\n    * Converts an arrow type into a protobuf.\n+   *\n    * @param arrowType Arrow type to be converted\n    * @return Protobuf representing the arrow type\n    */\n   public static GandivaTypes.ExtGandivaType arrowTypeToProtobuf(ArrowType arrowType)\n-          throws GandivaException {\n+      throws GandivaException {\n     GandivaTypes.ExtGandivaType.Builder builder = GandivaTypes.ExtGandivaType.newBuilder();\n \n     byte typeId = arrowType.getTypeID().getFlatbufID();\ndiff --git a/java/gandiva/src/main/java/org/apache/arrow/gandiva/expression/BinaryNode.java b/java/gandiva/src/main/java/org/apache/arrow/gandiva/expression/BinaryNode.java\nindex 0725ab2619..5da9a315ee 100644\n--- a/java/gandiva/src/main/java/org/apache/arrow/gandiva/expression/BinaryNode.java\n+++ b/java/gandiva/src/main/java/org/apache/arrow/gandiva/expression/BinaryNode.java\n@@ -18,11 +18,11 @@\n \n package org.apache.arrow.gandiva.expression;\n \n-import com.google.protobuf.ByteString;\n-\n import org.apache.arrow.gandiva.exceptions.GandivaException;\n import org.apache.arrow.gandiva.ipc.GandivaTypes;\n \n+import com.google.protobuf.ByteString;\n+\n /**\n  * Used to represent expression tree nodes representing binary constants.\n  */\ndiff --git a/java/gandiva/src/main/java/org/apache/arrow/gandiva/expression/FunctionNode.java b/java/gandiva/src/main/java/org/apache/arrow/gandiva/expression/FunctionNode.java\nindex c20851523e..9f0d6a9546 100644\n--- a/java/gandiva/src/main/java/org/apache/arrow/gandiva/expression/FunctionNode.java\n+++ b/java/gandiva/src/main/java/org/apache/arrow/gandiva/expression/FunctionNode.java\n@@ -18,12 +18,12 @@\n \n package org.apache.arrow.gandiva.expression;\n \n+import java.util.List;\n+\n import org.apache.arrow.gandiva.exceptions.GandivaException;\n import org.apache.arrow.gandiva.ipc.GandivaTypes;\n import org.apache.arrow.vector.types.pojo.ArrowType;\n \n-import java.util.List;\n-\n class FunctionNode implements TreeNode {\n   private final String function;\n   private final List<TreeNode> children;\ndiff --git a/java/gandiva/src/main/java/org/apache/arrow/gandiva/expression/OrNode.java b/java/gandiva/src/main/java/org/apache/arrow/gandiva/expression/OrNode.java\nindex aed12b525b..f684188c44 100644\n--- a/java/gandiva/src/main/java/org/apache/arrow/gandiva/expression/OrNode.java\n+++ b/java/gandiva/src/main/java/org/apache/arrow/gandiva/expression/OrNode.java\n@@ -18,11 +18,11 @@\n \n package org.apache.arrow.gandiva.expression;\n \n+import java.util.List;\n+\n import org.apache.arrow.gandiva.exceptions.GandivaException;\n import org.apache.arrow.gandiva.ipc.GandivaTypes;\n \n-import java.util.List;\n-\n class OrNode implements TreeNode {\n   private final List<TreeNode> children;\n \ndiff --git a/java/gandiva/src/main/java/org/apache/arrow/gandiva/expression/StringNode.java b/java/gandiva/src/main/java/org/apache/arrow/gandiva/expression/StringNode.java\nindex 3281674f6f..2a754f4c38 100644\n--- a/java/gandiva/src/main/java/org/apache/arrow/gandiva/expression/StringNode.java\n+++ b/java/gandiva/src/main/java/org/apache/arrow/gandiva/expression/StringNode.java\n@@ -18,12 +18,12 @@\n \n package org.apache.arrow.gandiva.expression;\n \n-import com.google.protobuf.ByteString;\n+import java.nio.charset.Charset;\n \n import org.apache.arrow.gandiva.exceptions.GandivaException;\n import org.apache.arrow.gandiva.ipc.GandivaTypes;\n \n-import java.nio.charset.Charset;\n+import com.google.protobuf.ByteString;\n \n /**\n  * Used to represent expression tree nodes representing utf8 constants.\ndiff --git a/java/gandiva/src/main/java/org/apache/arrow/gandiva/expression/TreeBuilder.java b/java/gandiva/src/main/java/org/apache/arrow/gandiva/expression/TreeBuilder.java\nindex 8f1fbae485..aec6808e59 100644\n--- a/java/gandiva/src/main/java/org/apache/arrow/gandiva/expression/TreeBuilder.java\n+++ b/java/gandiva/src/main/java/org/apache/arrow/gandiva/expression/TreeBuilder.java\n@@ -18,12 +18,12 @@\n \n package org.apache.arrow.gandiva.expression;\n \n-import org.apache.arrow.vector.types.pojo.ArrowType;\n-import org.apache.arrow.vector.types.pojo.Field;\n-\n import java.util.ArrayList;\n import java.util.List;\n \n+import org.apache.arrow.vector.types.pojo.ArrowType;\n+import org.apache.arrow.vector.types.pojo.Field;\n+\n public class TreeBuilder {\n   /**\n    * Helper functions to create literal constants.\ndiff --git a/java/gandiva/src/test/java/org/apache/arrow/gandiva/evaluator/BaseEvaluatorTest.java b/java/gandiva/src/test/java/org/apache/arrow/gandiva/evaluator/BaseEvaluatorTest.java\nindex 33f7649d59..cdf601a560 100644\n--- a/java/gandiva/src/test/java/org/apache/arrow/gandiva/evaluator/BaseEvaluatorTest.java\n+++ b/java/gandiva/src/test/java/org/apache/arrow/gandiva/evaluator/BaseEvaluatorTest.java\n@@ -18,7 +18,11 @@\n \n package org.apache.arrow.gandiva.evaluator;\n \n-import io.netty.buffer.ArrowBuf;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Random;\n+import java.util.concurrent.TimeUnit;\n+\n import org.apache.arrow.gandiva.exceptions.GandivaException;\n import org.apache.arrow.gandiva.expression.Condition;\n import org.apache.arrow.gandiva.expression.ExpressionTree;\n@@ -35,18 +39,17 @@\n import org.junit.After;\n import org.junit.Before;\n \n-import java.util.ArrayList;\n-import java.util.List;\n-import java.util.Random;\n-import java.util.concurrent.TimeUnit;\n+import io.netty.buffer.ArrowBuf;\n \n interface BaseEvaluator {\n+\n   void evaluate(ArrowRecordBatch recordBatch, BufferAllocator allocator) throws GandivaException;\n \n   long getElapsedMillis();\n }\n \n class ProjectEvaluator implements BaseEvaluator {\n+\n   private Projector projector;\n   private DataAndVectorGenerator generator;\n   private int numExprs;\n@@ -55,9 +58,9 @@\n   private List<ValueVector> outputVectors = new ArrayList<>();\n \n   public ProjectEvaluator(Projector projector,\n-                          DataAndVectorGenerator generator,\n-                          int numExprs,\n-                          int maxRowsInBatch) {\n+      DataAndVectorGenerator generator,\n+      int numExprs,\n+      int maxRowsInBatch) {\n     this.projector = projector;\n     this.generator = generator;\n     this.numExprs = numExprs;\n@@ -66,7 +69,7 @@ public ProjectEvaluator(Projector projector,\n \n   @Override\n   public void evaluate(ArrowRecordBatch recordBatch,\n-                       BufferAllocator allocator) throws GandivaException {\n+      BufferAllocator allocator) throws GandivaException {\n     // set up output vectors\n     // for each expression, generate the output vector\n     for (int i = 0; i < numExprs; i++) {\n@@ -94,6 +97,7 @@ public long getElapsedMillis() {\n }\n \n class FilterEvaluator implements BaseEvaluator {\n+\n   private Filter filter;\n   private long elapsedTime = 0;\n \n@@ -103,7 +107,7 @@ public FilterEvaluator(Filter filter) {\n \n   @Override\n   public void evaluate(ArrowRecordBatch recordBatch,\n-                       BufferAllocator allocator) throws GandivaException {\n+      BufferAllocator allocator) throws GandivaException {\n     ArrowBuf selectionBuffer = allocator.buffer(recordBatch.getLength() * 2);\n     SelectionVectorInt16 selectionVector = new SelectionVectorInt16(selectionBuffer);\n \n@@ -124,11 +128,14 @@ public long getElapsedMillis() {\n }\n \n interface DataAndVectorGenerator {\n+\n   public void writeData(ArrowBuf buffer);\n+\n   public ValueVector generateOutputVector(int numRowsInBatch);\n }\n \n class Int32DataAndVectorGenerator implements DataAndVectorGenerator {\n+\n   protected final BufferAllocator allocator;\n   protected final Random rand;\n \n@@ -151,6 +158,7 @@ public ValueVector generateOutputVector(int numRowsInBatch) {\n }\n \n class BoundedInt32DataAndVectorGenerator extends Int32DataAndVectorGenerator {\n+\n   private final int upperBound;\n \n   BoundedInt32DataAndVectorGenerator(BufferAllocator allocator, int upperBound) {\n@@ -165,10 +173,11 @@ public void writeData(ArrowBuf buffer) {\n }\n \n class BaseEvaluatorTest {\n-  protected final static int THOUSAND = 1000;\n-  protected final static int MILLION = THOUSAND * THOUSAND;\n \n-  protected final static String EMPTY_SCHEMA_PATH = \"\";\n+  protected static final int THOUSAND = 1000;\n+  protected static final int MILLION = THOUSAND * THOUSAND;\n+\n+  protected static final String EMPTY_SCHEMA_PATH = \"\";\n \n   protected BufferAllocator allocator;\n   protected ArrowType boolType;\n@@ -206,7 +215,7 @@ ArrowBuf buf(byte[] bytes) {\n   ArrowBuf arrowBufWithAllValid(int size) {\n     int bufLen = (size + 7) / 8;\n     ArrowBuf buffer = allocator.buffer(bufLen);\n-    for(int i = 0; i < bufLen; i++) {\n+    for (int i = 0; i < bufLen; i++) {\n       buffer.writeByte(255);\n     }\n \n@@ -240,7 +249,7 @@ ArrowBuf doubleBuf(double[] data) {\n \n   ArrowBuf stringToMillis(String[] dates) {\n     ArrowBuf buffer = allocator.buffer(dates.length * 8);\n-    for(int i = 0; i < dates.length; i++) {\n+    for (int i = 0; i < dates.length; i++) {\n       Instant instant = Instant.parse(dates[i]);\n       buffer.writeLong(instant.getMillis());\n     }\n@@ -254,29 +263,29 @@ void releaseRecordBatch(ArrowRecordBatch recordBatch) {\n     // One in the allocator - release that explicitly\n     List<ArrowBuf> buffers = recordBatch.getBuffers();\n     recordBatch.close();\n-    for(ArrowBuf buf : buffers) {\n+    for (ArrowBuf buf : buffers) {\n       buf.release();\n     }\n   }\n \n   void releaseValueVectors(List<ValueVector> valueVectors) {\n-    for(ValueVector valueVector : valueVectors) {\n+    for (ValueVector valueVector : valueVectors) {\n       valueVector.close();\n     }\n   }\n \n   void generateData(DataAndVectorGenerator generator, int numRecords, ArrowBuf buffer) {\n-    for(int i = 0; i < numRecords; i++) {\n+    for (int i = 0; i < numRecords; i++) {\n       generator.writeData(buffer);\n     }\n   }\n \n   private void generateDataAndEvaluate(DataAndVectorGenerator generator,\n-                                       BaseEvaluator evaluator,\n-                                       int numFields,\n-                                       int numRows, int maxRowsInBatch,\n-                                       int inputFieldSize)\n-    throws GandivaException, Exception {\n+      BaseEvaluator evaluator,\n+      int numFields,\n+      int numRows, int maxRowsInBatch,\n+      int inputFieldSize)\n+      throws GandivaException, Exception {\n     int numRemaining = numRows;\n     List<ArrowBuf> inputData = new ArrayList<ArrowBuf>();\n     List<ArrowFieldNode> fieldNodes = new ArrayList<ArrowFieldNode>();\n@@ -316,16 +325,16 @@ private void generateDataAndEvaluate(DataAndVectorGenerator generator,\n   }\n \n   long timedProject(DataAndVectorGenerator generator,\n-                    Schema schema, List<ExpressionTree> exprs,\n-                    int numRows, int maxRowsInBatch,\n-                    int inputFieldSize)\n-  throws GandivaException, Exception {\n+      Schema schema, List<ExpressionTree> exprs,\n+      int numRows, int maxRowsInBatch,\n+      int inputFieldSize)\n+      throws GandivaException, Exception {\n     Projector projector = Projector.make(schema, exprs);\n     try {\n       ProjectEvaluator evaluator =\n-        new ProjectEvaluator(projector, generator, exprs.size(), maxRowsInBatch);\n+          new ProjectEvaluator(projector, generator, exprs.size(), maxRowsInBatch);\n       generateDataAndEvaluate(generator, evaluator,\n-        schema.getFields().size(), numRows, maxRowsInBatch, inputFieldSize);\n+          schema.getFields().size(), numRows, maxRowsInBatch, inputFieldSize);\n       return evaluator.getElapsedMillis();\n     } finally {\n       projector.close();\n@@ -333,16 +342,16 @@ long timedProject(DataAndVectorGenerator generator,\n   }\n \n   long timedFilter(DataAndVectorGenerator generator,\n-                   Schema schema, Condition condition,\n-                    int numRows, int maxRowsInBatch,\n-                    int inputFieldSize)\n-    throws GandivaException, Exception {\n+      Schema schema, Condition condition,\n+      int numRows, int maxRowsInBatch,\n+      int inputFieldSize)\n+      throws GandivaException, Exception {\n \n     Filter filter = Filter.make(schema, condition);\n     try {\n       FilterEvaluator evaluator = new FilterEvaluator(filter);\n       generateDataAndEvaluate(generator, evaluator,\n-        schema.getFields().size(), numRows, maxRowsInBatch, inputFieldSize);\n+          schema.getFields().size(), numRows, maxRowsInBatch, inputFieldSize);\n       return evaluator.getElapsedMillis();\n     } finally {\n       filter.close();\ndiff --git a/java/gandiva/src/test/java/org/apache/arrow/gandiva/evaluator/ExpressionRegistryTest.java b/java/gandiva/src/test/java/org/apache/arrow/gandiva/evaluator/ExpressionRegistryTest.java\nindex 95cecc9158..1fc271324e 100644\n--- a/java/gandiva/src/test/java/org/apache/arrow/gandiva/evaluator/ExpressionRegistryTest.java\n+++ b/java/gandiva/src/test/java/org/apache/arrow/gandiva/evaluator/ExpressionRegistryTest.java\n@@ -18,14 +18,14 @@\n \n package org.apache.arrow.gandiva.evaluator;\n \n-import com.google.common.collect.Lists;\n+import java.util.Set;\n \n import org.apache.arrow.gandiva.exceptions.GandivaException;\n import org.apache.arrow.vector.types.pojo.ArrowType;\n import org.junit.Assert;\n import org.junit.Test;\n \n-import java.util.Set;\n+import com.google.common.collect.Lists;\n \n public class ExpressionRegistryTest {\n \n@@ -34,13 +34,13 @@ public void testTypes() throws GandivaException {\n     Set<ArrowType> types = ExpressionRegistry.getInstance().getSupportedTypes();\n     ArrowType.Int UINT8 = new ArrowType.Int(8, false);\n     Assert.assertTrue(types.contains(UINT8));\n-\n   }\n \n   @Test\n   public void testFunctions() throws GandivaException {\n     ArrowType.Int UINT8 = new ArrowType.Int(8, false);\n-    FunctionSignature signature = new FunctionSignature(\"add\", UINT8,Lists.newArrayList(UINT8,UINT8));\n+    FunctionSignature signature =\n+        new FunctionSignature(\"add\", UINT8, Lists.newArrayList(UINT8, UINT8));\n     Set<FunctionSignature> functions = ExpressionRegistry.getInstance().getSupportedFunctions();\n     Assert.assertTrue(functions.contains(signature));\n   }\ndiff --git a/java/gandiva/src/test/java/org/apache/arrow/gandiva/evaluator/FilterTest.java b/java/gandiva/src/test/java/org/apache/arrow/gandiva/evaluator/FilterTest.java\nindex 8c89fe7591..fc6c767b56 100644\n--- a/java/gandiva/src/test/java/org/apache/arrow/gandiva/evaluator/FilterTest.java\n+++ b/java/gandiva/src/test/java/org/apache/arrow/gandiva/evaluator/FilterTest.java\n@@ -48,7 +48,7 @@\n \n   private int[] selectionVectorToArray(SelectionVector vector) {\n     int[] actual = new int[vector.getRecordCount()];\n-    for (int i = 0; i < vector.getRecordCount(); ++i ) {\n+    for (int i = 0; i < vector.getRecordCount(); ++i) {\n       actual[i] = vector.getIndex(i);\n     }\n     return actual;\n@@ -66,10 +66,10 @@ public void testSimpleSV16() throws GandivaException, Exception {\n     Filter filter = Filter.make(schema, condition);\n \n     int numRows = 16;\n-    byte[] validity = new byte[]{(byte) 255, 0};\n+    byte[] validity = new byte[] {(byte) 255, 0};\n     // second half is \"undefined\"\n-    int[] values_a = new int[]{1, 2, 3, 4, 5, 6, 7, 8,  9, 10, 11, 12, 13, 14, 15, 16};\n-    int[] values_b = new int[]{2, 1, 4, 3, 6, 5, 8, 7, 10,  9, 12, 11, 14, 13, 14, 15};\n+    int[] values_a = new int[] {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16};\n+    int[] values_b = new int[] {2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 14, 15};\n     int[] expected = {0, 2, 4, 6};\n \n     verifyTestCase(filter, numRows, validity, values_a, values_b, expected);\n@@ -88,15 +88,15 @@ public void testSimpleSV16_AllMatched() throws GandivaException, Exception {\n \n     int numRows = 32;\n \n-    byte [] validity= new byte[numRows/8];\n+    byte[] validity = new byte[numRows / 8];\n \n-    IntStream.range(0,numRows/8).forEach(i -> validity[i] = (byte)255);\n+    IntStream.range(0, numRows / 8).forEach(i -> validity[i] = (byte) 255);\n \n     int[] values_a = new int[numRows];\n     IntStream.range(0, numRows).forEach(i -> values_a[i] = i);\n \n     int[] values_b = new int[numRows];\n-    IntStream.range(0, numRows).forEach(i -> values_b[i] = i+1);\n+    IntStream.range(0, numRows).forEach(i -> values_b[i] = i + 1);\n \n     int[] expected = new int[numRows];\n     IntStream.range(0, numRows).forEach(i -> expected[i] = i);\n@@ -117,15 +117,15 @@ public void testSimpleSV16_GreaterThan64Recs() throws GandivaException, Exceptio\n \n     int numRows = 1000;\n \n-    byte [] validity= new byte[numRows/8];\n+    byte[] validity = new byte[numRows / 8];\n \n-    IntStream.range(0,numRows/8).forEach(i -> validity[i] = (byte)255);\n+    IntStream.range(0, numRows / 8).forEach(i -> validity[i] = (byte) 255);\n \n     int[] values_a = new int[numRows];\n     IntStream.range(0, numRows).forEach(i -> values_a[i] = i);\n \n     int[] values_b = new int[numRows];\n-    IntStream.range(0, numRows).forEach(i -> values_b[i] = i+1);\n+    IntStream.range(0, numRows).forEach(i -> values_b[i] = i + 1);\n \n     values_a[0] = 5;\n     values_b[0] = 0;\n@@ -147,22 +147,24 @@ public void testSimpleSV32() throws GandivaException, Exception {\n     Filter filter = Filter.make(schema, condition);\n \n     int numRows = 16;\n-    byte[] validity = new byte[]{(byte) 255, 0};\n+    byte[] validity = new byte[] {(byte) 255, 0};\n     // second half is \"undefined\"\n-    int[] values_a = new int[]{1, 2, 3, 4, 5, 6, 7, 8,  9, 10, 11, 12, 13, 14, 15, 16};\n-    int[] values_b = new int[]{2, 1, 4, 3, 6, 5, 8, 7, 10,  9, 12, 11, 14, 13, 14, 15};\n+    int[] values_a = new int[] {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16};\n+    int[] values_b = new int[] {2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 14, 15};\n     int[] expected = {0, 2, 4, 6};\n \n     verifyTestCase(filter, numRows, validity, values_a, values_b, expected);\n   }\n \n-  private void verifyTestCase(Filter filter, int numRows, byte[] validity,\n-                              int[] values_a, int[] values_b, int[] expected) throws GandivaException {\n+  private void verifyTestCase(\n+      Filter filter, int numRows, byte[] validity, int[] values_a, int[] values_b, int[] expected)\n+      throws GandivaException {\n     ArrowBuf validitya = buf(validity);\n     ArrowBuf valuesa = intBuf(values_a);\n     ArrowBuf validityb = buf(validity);\n     ArrowBuf valuesb = intBuf(values_b);\n-    ArrowRecordBatch batch = new ArrowRecordBatch(\n+    ArrowRecordBatch batch =\n+        new ArrowRecordBatch(\n             numRows,\n             Lists.newArrayList(new ArrowFieldNode(numRows, 0), new ArrowFieldNode(numRows, 0)),\n             Lists.newArrayList(validitya, valuesa, validityb, valuesb));\ndiff --git a/java/gandiva/src/test/java/org/apache/arrow/gandiva/evaluator/MicroBenchmarkTest.java b/java/gandiva/src/test/java/org/apache/arrow/gandiva/evaluator/MicroBenchmarkTest.java\nindex c8609633d9..a14f5968f2 100644\n--- a/java/gandiva/src/test/java/org/apache/arrow/gandiva/evaluator/MicroBenchmarkTest.java\n+++ b/java/gandiva/src/test/java/org/apache/arrow/gandiva/evaluator/MicroBenchmarkTest.java\n@@ -18,7 +18,7 @@\n \n package org.apache.arrow.gandiva.evaluator;\n \n-import com.google.common.collect.Lists;\n+import java.util.List;\n \n import org.apache.arrow.gandiva.expression.Condition;\n import org.apache.arrow.gandiva.expression.ExpressionTree;\n@@ -29,9 +29,10 @@\n import org.junit.Assert;\n import org.junit.Test;\n \n-import java.util.List;\n+import com.google.common.collect.Lists;\n \n public class MicroBenchmarkTest extends BaseEvaluatorTest {\n+\n   private double toleranceRatio = 4.0;\n \n   @Test\n@@ -41,18 +42,22 @@ public void testAdd3() throws Exception {\n     Field N3x = Field.nullable(\"N3x\", int32);\n \n     // x + N2x + N3x\n-    TreeNode add1 = TreeBuilder.makeFunction(\"add\", Lists.newArrayList(TreeBuilder.makeField(x), TreeBuilder.makeField(N2x)), int32);\n-    TreeNode add = TreeBuilder.makeFunction(\"add\", Lists.newArrayList(add1, TreeBuilder.makeField(N3x)), int32);\n+    TreeNode add1 =\n+        TreeBuilder.makeFunction(\n+            \"add\", Lists.newArrayList(TreeBuilder.makeField(x), TreeBuilder.makeField(N2x)), int32);\n+    TreeNode add =\n+        TreeBuilder.makeFunction(\n+            \"add\", Lists.newArrayList(add1, TreeBuilder.makeField(N3x)), int32);\n     ExpressionTree expr = TreeBuilder.makeExpression(add, x);\n \n     List<Field> cols = Lists.newArrayList(x, N2x, N3x);\n     Schema schema = new Schema(cols);\n \n     long timeTaken = timedProject(new Int32DataAndVectorGenerator(allocator),\n-            schema,\n-            Lists.newArrayList(expr),\n-            1 * MILLION, 16 * THOUSAND,\n-            4);\n+        schema,\n+        Lists.newArrayList(expr),\n+        1 * MILLION, 16 * THOUSAND,\n+        4);\n     System.out.println(\"Time taken for projecting 1m records of add3 is \" + timeTaken + \"ms\");\n     Assert.assertTrue(timeTaken <= 10 * toleranceRatio);\n   }\n@@ -91,13 +96,16 @@ public void testIf() throws Exception {\n     int compareWith = 200;\n     while (compareWith >= 10) {\n       // cond (x < compareWith)\n-      TreeNode condNode = TreeBuilder.makeFunction(\"less_than\",\n+      TreeNode condNode =\n+          TreeBuilder.makeFunction(\n+              \"less_than\",\n               Lists.newArrayList(x_node, TreeBuilder.makeLiteral(compareWith)),\n               boolType);\n-      topNode = TreeBuilder.makeIf(\n-              condNode,                             // cond (x < compareWith)\n+      topNode =\n+          TreeBuilder.makeIf(\n+              condNode, // cond (x < compareWith)\n               TreeBuilder.makeLiteral(returnValue), // then returnValue\n-              topNode,                              // else topNode\n+              topNode, // else topNode\n               int32);\n       compareWith -= 10;\n       returnValue--;\n@@ -107,10 +115,10 @@ public void testIf() throws Exception {\n     Schema schema = new Schema(Lists.newArrayList(x));\n \n     long timeTaken = timedProject(new BoundedInt32DataAndVectorGenerator(allocator, 250),\n-            schema,\n-            Lists.newArrayList(expr),\n-            1 * MILLION, 16 * THOUSAND,\n-            4);\n+        schema,\n+        Lists.newArrayList(expr),\n+        1 * MILLION, 16 * THOUSAND,\n+        4);\n     System.out.println(\"Time taken for projecting 10m records of nestedIf is \" + timeTaken + \"ms\");\n     Assert.assertTrue(timeTaken <= 15 * toleranceRatio);\n   }\n@@ -122,20 +130,21 @@ public void testFilterAdd2() throws Exception {\n     Field N3x = Field.nullable(\"N3x\", int32);\n \n     // x + N2x < N3x\n-    TreeNode add = TreeBuilder.makeFunction(\"add\", Lists.newArrayList(TreeBuilder.makeField(x), TreeBuilder.makeField(N2x)), int32);\n-    TreeNode less_than = TreeBuilder.makeFunction(\"less_than\", Lists.newArrayList(add, TreeBuilder.makeField(N3x)), boolType);\n+    TreeNode add = TreeBuilder.makeFunction(\"add\",\n+        Lists.newArrayList(TreeBuilder.makeField(x), TreeBuilder.makeField(N2x)), int32);\n+    TreeNode less_than = TreeBuilder\n+        .makeFunction(\"less_than\", Lists.newArrayList(add, TreeBuilder.makeField(N3x)), boolType);\n     Condition condition = TreeBuilder.makeCondition(less_than);\n \n     List<Field> cols = Lists.newArrayList(x, N2x, N3x);\n     Schema schema = new Schema(cols);\n \n     long timeTaken = timedFilter(new Int32DataAndVectorGenerator(allocator),\n-      schema,\n-      condition,\n-      1 * MILLION, 16 * THOUSAND,\n-      4);\n+        schema,\n+        condition,\n+        1 * MILLION, 16 * THOUSAND,\n+        4);\n     System.out.println(\"Time taken for filtering 10m records of a+b<c is \" + timeTaken + \"ms\");\n     Assert.assertTrue(timeTaken <= 12 * toleranceRatio);\n   }\n-\n-}\n\\ No newline at end of file\n+}\ndiff --git a/java/gandiva/src/test/java/org/apache/arrow/gandiva/evaluator/ProjectorTest.java b/java/gandiva/src/test/java/org/apache/arrow/gandiva/evaluator/ProjectorTest.java\nindex 6ed3d56c51..f75fe786f3 100644\n--- a/java/gandiva/src/test/java/org/apache/arrow/gandiva/evaluator/ProjectorTest.java\n+++ b/java/gandiva/src/test/java/org/apache/arrow/gandiva/evaluator/ProjectorTest.java\n@@ -18,8 +18,19 @@\n \n package org.apache.arrow.gandiva.evaluator;\n \n-import com.google.common.collect.Lists;\n-import io.netty.buffer.ArrowBuf;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+import java.nio.charset.Charset;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.atomic.AtomicInteger;\n+import java.util.stream.IntStream;\n+\n import org.apache.arrow.gandiva.exceptions.GandivaException;\n import org.apache.arrow.gandiva.expression.ExpressionTree;\n import org.apache.arrow.gandiva.expression.TreeBuilder;\n@@ -40,20 +51,12 @@\n import org.junit.Ignore;\n import org.junit.Test;\n \n-import java.nio.charset.Charset;\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.List;\n-import java.util.concurrent.ExecutorService;\n-import java.util.concurrent.Executors;\n-import java.util.concurrent.atomic.AtomicInteger;\n-import java.util.stream.IntStream;\n+import com.google.common.collect.Lists;\n \n-import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertFalse;\n-import static org.junit.Assert.assertTrue;\n+import io.netty.buffer.ArrowBuf;\n \n public class ProjectorTest extends BaseEvaluatorTest {\n+\n   private Charset utf8Charset = Charset.forName(\"UTF-8\");\n   private Charset utf16Charset = Charset.forName(\"UTF-16\");\n \n@@ -88,17 +91,18 @@ public void testMakeProjectorParallel() throws GandivaException, InterruptedExce\n     List<Schema> schemas = Lists.newArrayList();\n     Field a = Field.nullable(\"a\", int64);\n     Field b = Field.nullable(\"b\", int64);\n-    IntStream.range(0, 1000).forEach(i -> {\n-      Field c = Field.nullable(\"\" + i, int64);\n-      List<Field> cols = Lists.newArrayList(a, b, c);\n-      schemas.add(new Schema(cols));\n-    });\n+    IntStream.range(0, 1000)\n+        .forEach(\n+            i -> {\n+              Field c = Field.nullable(\"\" + i, int64);\n+              List<Field> cols = Lists.newArrayList(a, b, c);\n+              schemas.add(new Schema(cols));\n+            });\n \n     TreeNode aNode = TreeBuilder.makeField(a);\n     TreeNode bNode = TreeBuilder.makeField(b);\n     List<TreeNode> args = Lists.newArrayList(aNode, bNode);\n \n-\n     TreeNode cond = TreeBuilder.makeFunction(\"greater_than\", args, boolType);\n     TreeNode ifNode = TreeBuilder.makeIf(cond, aNode, bNode, int64);\n \n@@ -110,17 +114,20 @@ public void testMakeProjectorParallel() throws GandivaException, InterruptedExce\n     // any threading issues.\n     ExecutorService executors = Executors.newFixedThreadPool(16);\n \n-    IntStream.range(0, 1000).forEach(i -> {\n-      executors.submit(() -> {\n-        try {\n-          Projector evaluator = Projector.make(schemas.get((int) (Math.random() * 100)),\n-                  exprs);\n-          evaluator.close();\n-        } catch (GandivaException e) {\n-          e.printStackTrace();\n-        }\n-      });\n-    });\n+    IntStream.range(0, 1000)\n+        .forEach(\n+            i -> {\n+              executors.submit(\n+                  () -> {\n+                    try {\n+                      Projector evaluator =\n+                          Projector.make(schemas.get((int) (Math.random() * 100)), exprs);\n+                      evaluator.close();\n+                    } catch (GandivaException e) {\n+                      e.printStackTrace();\n+                    }\n+                  });\n+            });\n     executors.shutdown();\n     executors.awaitTermination(100, java.util.concurrent.TimeUnit.SECONDS);\n   }\n@@ -144,10 +151,12 @@ public void testMakeProjector() throws GandivaException {\n \n     long startTime = System.currentTimeMillis();\n     Projector evaluator1 = Projector.make(schema, exprs);\n-    System.out.println(\"Projector build: iteration 1 took \" + (System.currentTimeMillis() - startTime) + \" ms\");\n+    System.out.println(\n+        \"Projector build: iteration 1 took \" + (System.currentTimeMillis() - startTime) + \" ms\");\n     startTime = System.currentTimeMillis();\n     Projector evaluator2 = Projector.make(schema, exprs);\n-    System.out.println(\"Projector build: iteration 2 took \" + (System.currentTimeMillis() - startTime) + \" ms\");\n+    System.out.println(\n+        \"Projector build: iteration 2 took \" + (System.currentTimeMillis() - startTime) + \" ms\");\n     startTime = System.currentTimeMillis();\n     Projector evaluator3 = Projector.make(schema, exprs);\n     long timeToMakeProjector = (System.currentTimeMillis() - startTime);\n@@ -186,7 +195,7 @@ public void testMakeProjectorValidationError() throws InterruptedException {\n \n     // allow GC to collect any temp resources.\n     Thread.sleep(1000);\n-    \n+\n     // try again to ensure no temporary resources.\n     exceptionThrown = false;\n     try {\n@@ -222,7 +231,8 @@ public void testEvaluate() throws GandivaException, Exception {\n     ArrowBuf valuesa = intBuf(values_a);\n     ArrowBuf validityb = buf(validity);\n     ArrowBuf valuesb = intBuf(values_b);\n-    ArrowRecordBatch batch = new ArrowRecordBatch(\n+    ArrowRecordBatch batch =\n+        new ArrowRecordBatch(\n             numRows,\n             Lists.newArrayList(new ArrowFieldNode(numRows, 8), new ArrowFieldNode(numRows, 8)),\n             Lists.newArrayList(validitya, valuesa, validityb, valuesb));\n@@ -273,9 +283,9 @@ public void testEvaluateDivZero() throws GandivaException, Exception {\n     ArrowBuf validityb = buf(validity);\n     ArrowBuf valuesb = intBuf(values_b);\n     ArrowRecordBatch batch = new ArrowRecordBatch(\n-            numRows,\n-            Lists.newArrayList(new ArrowFieldNode(numRows, 0), new ArrowFieldNode(numRows, 0)),\n-            Lists.newArrayList(validitya, valuesa, validityb, valuesb));\n+        numRows,\n+        Lists.newArrayList(new ArrowFieldNode(numRows, 0), new ArrowFieldNode(numRows, 0)),\n+        Lists.newArrayList(validitya, valuesa, validityb, valuesb));\n \n     IntVector intVector = new IntVector(EMPTY_SCHEMA_PATH, allocator);\n     intVector.allocateNew(numRows);\n@@ -307,7 +317,6 @@ public void testDivZeroParallel() throws GandivaException, InterruptedException\n \n     List<Field> args = Lists.newArrayList(a, b);\n \n-\n     ExpressionTree expr = TreeBuilder.makeExpression(\"divide\", args, c);\n     List<ExpressionTree> exprs = Lists.newArrayList(expr);\n \n@@ -326,7 +335,7 @@ public void testDivZeroParallel() throws GandivaException, InterruptedException\n           byte[] validity = new byte[]{(byte) 255};\n           int[] values_a = new int[]{2, 2};\n           int[] values_b;\n-          if (i%2 == 0) {\n+          if (i % 2 == 0) {\n             errorCountExp.incrementAndGet();\n             values_b = new int[]{1, 0};\n           } else {\n@@ -338,10 +347,10 @@ public void testDivZeroParallel() throws GandivaException, InterruptedException\n           ArrowBuf validityb = buf(validity);\n           ArrowBuf valuesb = intBuf(values_b);\n           ArrowRecordBatch batch = new ArrowRecordBatch(\n-                  numRows,\n-                  Lists.newArrayList(new ArrowFieldNode(numRows, 0), new ArrowFieldNode(numRows,\n-                          0)),\n-                  Lists.newArrayList(validitya, valuesa, validityb, valuesb));\n+              numRows,\n+              Lists.newArrayList(new ArrowFieldNode(numRows, 0), new ArrowFieldNode(numRows,\n+                  0)),\n+              Lists.newArrayList(validitya, valuesa, validityb, valuesb));\n \n           IntVector intVector = new IntVector(EMPTY_SCHEMA_PATH, allocator);\n           intVector.allocateNew(numRows);\n@@ -375,8 +384,12 @@ public void testAdd3() throws GandivaException, Exception {\n     List<TreeNode> args = new ArrayList<TreeNode>();\n \n     // x + N2x + N3x\n-    TreeNode add1 = TreeBuilder.makeFunction(\"add\", Lists.newArrayList(TreeBuilder.makeField(x), TreeBuilder.makeField(N2x)), int32);\n-    TreeNode add = TreeBuilder.makeFunction(\"add\", Lists.newArrayList(add1, TreeBuilder.makeField(N3x)), int32);\n+    TreeNode add1 =\n+        TreeBuilder.makeFunction(\n+            \"add\", Lists.newArrayList(TreeBuilder.makeField(x), TreeBuilder.makeField(N2x)), int32);\n+    TreeNode add =\n+        TreeBuilder.makeFunction(\n+            \"add\", Lists.newArrayList(add1, TreeBuilder.makeField(N3x)), int32);\n     ExpressionTree expr = TreeBuilder.makeExpression(add, x);\n \n     List<Field> cols = Lists.newArrayList(x, N2x, N3x);\n@@ -401,7 +414,8 @@ public void testAdd3() throws GandivaException, Exception {\n     ArrowBuf data_N3x = intBuf(values_N3x);\n \n     ArrowFieldNode fieldNode = new ArrowFieldNode(numRows, 8);\n-    ArrowRecordBatch batch = new ArrowRecordBatch(\n+    ArrowRecordBatch batch =\n+        new ArrowRecordBatch(\n             numRows,\n             Lists.newArrayList(fieldNode, fieldNode, fieldNode),\n             Lists.newArrayList(validity_x, data_x, validity_N2x, data_N2x, validity_N3x, data_N3x));\n@@ -439,18 +453,20 @@ public void testStringFields() throws GandivaException {\n \n     ArrowType retType = new ArrowType.Int(32, true);\n \n-    TreeNode cond = TreeBuilder.makeFunction(\"less_than\",\n-      Lists.newArrayList(TreeBuilder.makeField(x), TreeBuilder.makeStringLiteral(\"hello\")),\n-      boolType);\n-    TreeNode octetLenFuncNode = TreeBuilder.makeFunction(\"octet_length\",\n-      Lists.newArrayList(TreeBuilder.makeField(x)),\n-      retType);\n-    TreeNode octetLenPlusANode = TreeBuilder.makeFunction(\"add\",\n-      Lists.newArrayList(TreeBuilder.makeField(a), octetLenFuncNode),\n-      retType);\n-    TreeNode octetLenPlusBNode = TreeBuilder.makeFunction(\"add\",\n-      Lists.newArrayList(TreeBuilder.makeField(b), octetLenFuncNode),\n-      retType);\n+    TreeNode cond =\n+        TreeBuilder.makeFunction(\n+            \"less_than\",\n+            Lists.newArrayList(TreeBuilder.makeField(x), TreeBuilder.makeStringLiteral(\"hello\")),\n+            boolType);\n+    TreeNode octetLenFuncNode =\n+        TreeBuilder.makeFunction(\n+            \"octet_length\", Lists.newArrayList(TreeBuilder.makeField(x)), retType);\n+    TreeNode octetLenPlusANode =\n+        TreeBuilder.makeFunction(\n+            \"add\", Lists.newArrayList(TreeBuilder.makeField(a), octetLenFuncNode), retType);\n+    TreeNode octetLenPlusBNode =\n+        TreeBuilder.makeFunction(\n+            \"add\", Lists.newArrayList(TreeBuilder.makeField(b), octetLenFuncNode), retType);\n \n     TreeNode ifHello = TreeBuilder.makeIf(cond, octetLenPlusANode, octetLenPlusBNode, retType);\n \n@@ -461,7 +477,7 @@ public void testStringFields() throws GandivaException {\n     int numRows = 5;\n     byte[] validity = new byte[]{(byte) 255, 0};\n     // \"A fun\u00e7\u00e3o\" means \"The function\" in portugese\n-    String[] valuesX = new String[]{\"hell\", \"abc\", \"hellox\", \"ijk\", \"A fun\u00e7\u00e3o\" };\n+    String[] valuesX = new String[]{\"hell\", \"abc\", \"hellox\", \"ijk\", \"A fun\u00e7\u00e3o\"};\n     int[] valuesA = new int[]{10, 20, 30, 40, 50};\n     int[] valuesB = new int[]{110, 120, 130, 140, 150};\n     int[] expected = new int[]{14, 23, 136, 143, 60};\n@@ -473,10 +489,12 @@ public void testStringFields() throws GandivaException {\n     ArrowBuf validityB = buf(validity);\n     ArrowBuf dataB = intBuf(valuesB);\n \n-    ArrowRecordBatch batch = new ArrowRecordBatch(\n+    ArrowRecordBatch batch =\n+        new ArrowRecordBatch(\n             numRows,\n             Lists.newArrayList(new ArrowFieldNode(numRows, 0), new ArrowFieldNode(numRows, 0)),\n-            Lists.newArrayList(validityA, dataA, validityX, dataBufsX.get(0), dataBufsX.get(1), validityB, dataB));\n+            Lists.newArrayList(\n+                validityA, dataA, validityX, dataBufsX.get(0), dataBufsX.get(1), validityB, dataB));\n \n     IntVector intVector = new IntVector(EMPTY_SCHEMA_PATH, allocator);\n     intVector.allocateNew(numRows);\n@@ -503,22 +521,25 @@ public void testRegex() throws GandivaException {\n \n     Field x = Field.nullable(\"x\", new ArrowType.Utf8());\n \n-    TreeNode cond = TreeBuilder.makeFunction(\"like\",\n-      Lists.newArrayList(TreeBuilder.makeField(x), TreeBuilder.makeStringLiteral(\"map%\")),\n-      boolType);\n+    TreeNode cond =\n+        TreeBuilder.makeFunction(\n+            \"like\",\n+            Lists.newArrayList(TreeBuilder.makeField(x), TreeBuilder.makeStringLiteral(\"map%\")),\n+            boolType);\n     ExpressionTree expr = TreeBuilder.makeExpression(cond, Field.nullable(\"res\", boolType));\n     Schema schema = new Schema(Lists.newArrayList(x));\n     Projector eval = Projector.make(schema, Lists.newArrayList(expr));\n \n     int numRows = 5;\n     byte[] validity = new byte[]{(byte) 255, 0};\n-    String[] valuesX = new String[]{\"mapD\", \"maps\", \"google maps\", \"map\", \"MapR\" };\n+    String[] valuesX = new String[]{\"mapD\", \"maps\", \"google maps\", \"map\", \"MapR\"};\n     boolean[] expected = new boolean[]{true, true, false, true, false};\n \n     ArrowBuf validityX = buf(validity);\n     List<ArrowBuf> dataBufsX = stringBufs(valuesX);\n \n-    ArrowRecordBatch batch = new ArrowRecordBatch(\n+    ArrowRecordBatch batch =\n+        new ArrowRecordBatch(\n             numRows,\n             Lists.newArrayList(new ArrowFieldNode(numRows, 0)),\n             Lists.newArrayList(validityX, dataBufsX.get(0), dataBufsX.get(1)));\n@@ -547,8 +568,7 @@ public void testBinaryFields() throws GandivaException {\n     List<Field> args = Lists.newArrayList(a, b);\n \n     ArrowType retType = new ArrowType.Bool();\n-    ExpressionTree expr = TreeBuilder.makeExpression(\"equal\", args,\n-      Field.nullable(\"res\", retType));\n+    ExpressionTree expr = TreeBuilder.makeExpression(\"equal\", args, Field.nullable(\"res\", retType));\n \n     Schema schema = new Schema(Lists.newArrayList(args));\n     Projector eval = Projector.make(schema, Lists.newArrayList(expr));\n@@ -564,10 +584,17 @@ public void testBinaryFields() throws GandivaException {\n     List<ArrowBuf> inBufsA = binaryBufs(valuesA);\n     List<ArrowBuf> inBufsB = binaryBufs(valuesB);\n \n-    ArrowRecordBatch batch = new ArrowRecordBatch(\n+    ArrowRecordBatch batch =\n+        new ArrowRecordBatch(\n             numRows,\n             Lists.newArrayList(new ArrowFieldNode(numRows, 8), new ArrowFieldNode(numRows, 8)),\n-            Lists.newArrayList(validitya, inBufsA.get(0), inBufsA.get(1), validityb, inBufsB.get(0), inBufsB.get(1)));\n+            Lists.newArrayList(\n+                validitya,\n+                inBufsA.get(0),\n+                inBufsA.get(1),\n+                validityb,\n+                inBufsB.get(0),\n+                inBufsB.get(1)));\n \n     BitVector bitVector = new BitVector(EMPTY_SCHEMA_PATH, allocator);\n     bitVector.allocateNew(numRows);\n@@ -587,23 +614,19 @@ public void testBinaryFields() throws GandivaException {\n   }\n \n   private TreeNode makeLongLessThanCond(TreeNode arg, long value) {\n-    return TreeBuilder.makeFunction(\"less_than\",\n-      Lists.newArrayList(arg, TreeBuilder.makeLiteral(value)),\n-      boolType);\n+    return TreeBuilder.makeFunction(\n+        \"less_than\", Lists.newArrayList(arg, TreeBuilder.makeLiteral(value)), boolType);\n   }\n \n   private TreeNode makeLongGreaterThanCond(TreeNode arg, long value) {\n-    return TreeBuilder.makeFunction(\"greater_than\",\n-      Lists.newArrayList(arg, TreeBuilder.makeLiteral(value)),\n-      boolType);\n+    return TreeBuilder.makeFunction(\n+        \"greater_than\", Lists.newArrayList(arg, TreeBuilder.makeLiteral(value)), boolType);\n   }\n \n-  private TreeNode ifLongLessThanElse(TreeNode arg, long value, long then_value, TreeNode elseNode, ArrowType type) {\n+  private TreeNode ifLongLessThanElse(\n+      TreeNode arg, long value, long then_value, TreeNode elseNode, ArrowType type) {\n     return TreeBuilder.makeIf(\n-            makeLongLessThanCond(arg, value),\n-            TreeBuilder.makeLiteral(then_value),\n-            elseNode,\n-            type);\n+        makeLongLessThanCond(arg, value), TreeBuilder.makeLiteral(then_value), elseNode, type);\n   }\n \n   @Test\n@@ -658,10 +681,9 @@ public void testIf() throws GandivaException, Exception {\n     ArrowBuf data_x = longBuf(values_x);\n \n     ArrowFieldNode fieldNode = new ArrowFieldNode(numRows, 0);\n-    ArrowRecordBatch batch = new ArrowRecordBatch(\n-            numRows,\n-            Lists.newArrayList(fieldNode),\n-            Lists.newArrayList(validity_buf, data_x));\n+    ArrowRecordBatch batch =\n+        new ArrowRecordBatch(\n+            numRows, Lists.newArrayList(fieldNode), Lists.newArrayList(validity_buf, data_x));\n \n     BigIntVector bigIntVector = new BigIntVector(EMPTY_SCHEMA_PATH, allocator);\n     bigIntVector.allocateNew(numRows);\n@@ -708,10 +730,9 @@ public void testAnd() throws GandivaException, Exception {\n     ArrowBuf data_x = longBuf(values_x);\n \n     ArrowFieldNode fieldNode = new ArrowFieldNode(numRows, 0);\n-    ArrowRecordBatch batch = new ArrowRecordBatch(\n-      numRows,\n-      Lists.newArrayList(fieldNode),\n-      Lists.newArrayList(validity_buf, data_x));\n+    ArrowRecordBatch batch =\n+        new ArrowRecordBatch(\n+            numRows, Lists.newArrayList(fieldNode), Lists.newArrayList(validity_buf, data_x));\n \n     BitVector bitVector = new BitVector(EMPTY_SCHEMA_PATH, allocator);\n     bitVector.allocateNew(numRows);\n@@ -758,10 +779,9 @@ public void testOr() throws GandivaException, Exception {\n     ArrowBuf data_x = longBuf(values_x);\n \n     ArrowFieldNode fieldNode = new ArrowFieldNode(numRows, 0);\n-    ArrowRecordBatch batch = new ArrowRecordBatch(\n-      numRows,\n-      Lists.newArrayList(fieldNode),\n-      Lists.newArrayList(validity_buf, data_x));\n+    ArrowRecordBatch batch =\n+        new ArrowRecordBatch(\n+            numRows, Lists.newArrayList(fieldNode), Lists.newArrayList(validity_buf, data_x));\n \n     BitVector bitVector = new BitVector(EMPTY_SCHEMA_PATH, allocator);\n     bitVector.allocateNew(numRows);\n@@ -807,10 +827,9 @@ public void testNull() throws GandivaException, Exception {\n     ArrowBuf data_x = longBuf(values_x);\n \n     ArrowFieldNode fieldNode = new ArrowFieldNode(numRows, 0);\n-    ArrowRecordBatch batch = new ArrowRecordBatch(\n-      numRows,\n-      Lists.newArrayList(fieldNode),\n-      Lists.newArrayList(validity_buf, data_x));\n+    ArrowRecordBatch batch =\n+        new ArrowRecordBatch(\n+            numRows, Lists.newArrayList(fieldNode), Lists.newArrayList(validity_buf, data_x));\n \n     BigIntVector bigIntVector = new BigIntVector(EMPTY_SCHEMA_PATH, allocator);\n     bigIntVector.allocateNew(numRows);\n@@ -851,10 +870,9 @@ public void testTimeNull() throws GandivaException, Exception {\n     ArrowBuf data_x = intBuf(values_x);\n \n     ArrowFieldNode fieldNode = new ArrowFieldNode(numRows, 0);\n-    ArrowRecordBatch batch = new ArrowRecordBatch(\n-            numRows,\n-            Lists.newArrayList(fieldNode),\n-            Lists.newArrayList(validity_buf, data_x));\n+    ArrowRecordBatch batch =\n+        new ArrowRecordBatch(\n+            numRows, Lists.newArrayList(fieldNode), Lists.newArrayList(validity_buf, data_x));\n \n     BigIntVector bigIntVector = new BigIntVector(EMPTY_SCHEMA_PATH, allocator);\n     bigIntVector.allocateNew(numRows);\n@@ -883,13 +901,13 @@ public void testTimeEquals() throws GandivaException, Exception {    /*\n     TreeNode y_node = TreeBuilder.makeField(y);\n \n     // if isnotnull(x) then x else y\n-    TreeNode condition = TreeBuilder.makeFunction(\"isnotnull\",Lists.newArrayList(x_node) ,\n-            boolType);\n+    TreeNode condition = TreeBuilder.makeFunction(\"isnotnull\", Lists.newArrayList(x_node),\n+        boolType);\n     TreeNode if_coalesce = TreeBuilder.makeIf(\n-            condition,\n-            x_node,\n-            y_node,\n-            new ArrowType.Time(TimeUnit.MILLISECOND, 32));\n+        condition,\n+        x_node,\n+        y_node,\n+        new ArrowType.Time(TimeUnit.MILLISECOND, 32));\n \n     ExpressionTree expr = TreeBuilder.makeExpression(if_coalesce, x);\n     Schema schema = new Schema(Lists.newArrayList(x, y));\n@@ -905,15 +923,14 @@ public void testTimeEquals() throws GandivaException, Exception {    /*\n     ArrowBuf validity_buf = buf(validity);\n     ArrowBuf data_x = intBuf(values_x);\n \n-\n     ArrowBuf validity_buf_y = buf(validity_y);\n     ArrowBuf data_y = intBuf(values_y);\n \n     ArrowFieldNode fieldNode = new ArrowFieldNode(numRows, 0);\n     ArrowRecordBatch batch = new ArrowRecordBatch(\n-            numRows,\n-            Lists.newArrayList(fieldNode),\n-            Lists.newArrayList(validity_buf, data_x, validity_buf_y, data_y));\n+        numRows,\n+        Lists.newArrayList(fieldNode),\n+        Lists.newArrayList(validity_buf, data_x, validity_buf_y, data_y));\n \n     IntVector intVector = new IntVector(EMPTY_SCHEMA_PATH, allocator);\n     intVector.allocateNew(numRows);\n@@ -944,16 +961,18 @@ public void testIsNull() throws GandivaException, Exception {\n \n     int numRows = 16;\n     byte[] validity = new byte[]{(byte) 255, 0};\n-    double[] values_x = new double[]{1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0};\n+    double[] values_x =\n+        new double[]{\n+            1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0\n+        };\n \n     ArrowBuf validity_buf = buf(validity);\n     ArrowBuf data_x = doubleBuf(values_x);\n \n     ArrowFieldNode fieldNode = new ArrowFieldNode(numRows, 0);\n-    ArrowRecordBatch batch = new ArrowRecordBatch(\n-            numRows,\n-            Lists.newArrayList(fieldNode),\n-            Lists.newArrayList(validity_buf, data_x));\n+    ArrowRecordBatch batch =\n+        new ArrowRecordBatch(\n+            numRows, Lists.newArrayList(fieldNode), Lists.newArrayList(validity_buf, data_x));\n \n     BitVector bitVector = new BitVector(EMPTY_SCHEMA_PATH, allocator);\n     bitVector.allocateNew(numRows);\n@@ -981,7 +1000,8 @@ public void testEquals() throws GandivaException, Exception {\n \n     TreeNode c1_Node = TreeBuilder.makeField(c1);\n     TreeNode c2_Node = TreeBuilder.makeField(c2);\n-    TreeNode equals = TreeBuilder.makeFunction(\"equal\", Lists.newArrayList(c1_Node, c2_Node), boolType);\n+    TreeNode equals =\n+        TreeBuilder.makeFunction(\"equal\", Lists.newArrayList(c1_Node, c2_Node), boolType);\n     ExpressionTree expr = TreeBuilder.makeExpression(equals, Field.nullable(\"result\", boolType));\n     Schema schema = new Schema(Lists.newArrayList(c1, c2));\n     Projector eval = Projector.make(schema, Lists.newArrayList(expr));\n@@ -997,7 +1017,8 @@ public void testEquals() throws GandivaException, Exception {\n     ArrowBuf data_c2 = intBuf(values_c2);\n \n     ArrowFieldNode fieldNode = new ArrowFieldNode(numRows, 0);\n-    ArrowRecordBatch batch = new ArrowRecordBatch(\n+    ArrowRecordBatch batch =\n+        new ArrowRecordBatch(\n             numRows,\n             Lists.newArrayList(fieldNode, fieldNode),\n             Lists.newArrayList(validity_c1, data_c1, validity_c2, data_c2));\n@@ -1048,7 +1069,8 @@ public void testSmallOutputVectors() throws GandivaException, Exception {\n     ArrowBuf data_a = intBuf(values_a);\n     ArrowBuf validity_b = buf(validity);\n     ArrowBuf data_b = intBuf(values_b);\n-    ArrowRecordBatch batch = new ArrowRecordBatch(\n+    ArrowRecordBatch batch =\n+        new ArrowRecordBatch(\n             numRows,\n             Lists.newArrayList(new ArrowFieldNode(numRows, 8), new ArrowFieldNode(numRows, 8)),\n             Lists.newArrayList(validity_a, data_a, validity_b, data_b));\n@@ -1080,11 +1102,11 @@ public void testSmallOutputVectors() throws GandivaException, Exception {\n   @Test\n   public void testDateTime() throws GandivaException, Exception {\n     ArrowType date64 = new ArrowType.Date(DateUnit.MILLISECOND);\n-    //ArrowType time32 = new ArrowType.Time(TimeUnit.MILLISECOND, 32);\n+    // ArrowType time32 = new ArrowType.Time(TimeUnit.MILLISECOND, 32);\n     ArrowType timeStamp = new ArrowType.Timestamp(TimeUnit.MILLISECOND, \"TZ\");\n \n     Field dateField = Field.nullable(\"date\", date64);\n-    //Field timeField = Field.nullable(\"time\", time32);\n+    // Field timeField = Field.nullable(\"time\", time32);\n     Field tsField = Field.nullable(\"timestamp\", timeStamp);\n \n     TreeNode dateNode = TreeBuilder.makeField(dateField);\n@@ -1105,7 +1127,8 @@ public void testDateTime() throws GandivaException, Exception {\n     TreeNode tsToMin = TreeBuilder.makeFunction(\"extractMinute\", tsArgs, int64);\n \n     Field resultField = Field.nullable(\"result\", int64);\n-    List<ExpressionTree> exprs = Lists.newArrayList(\n+    List<ExpressionTree> exprs =\n+        Lists.newArrayList(\n             TreeBuilder.makeExpression(dateToYear, resultField),\n             TreeBuilder.makeExpression(dateToMonth, resultField),\n             TreeBuilder.makeExpression(dateToDay, resultField),\n@@ -1115,15 +1138,15 @@ public void testDateTime() throws GandivaException, Exception {\n             TreeBuilder.makeExpression(tsToMonth, resultField),\n             TreeBuilder.makeExpression(tsToDay, resultField),\n             TreeBuilder.makeExpression(tsToHour, resultField),\n-            TreeBuilder.makeExpression(tsToMin, resultField)\n-    );\n+            TreeBuilder.makeExpression(tsToMin, resultField));\n \n     Schema schema = new Schema(Lists.newArrayList(dateField, tsField));\n     Projector eval = Projector.make(schema, exprs);\n \n     int numRows = 8;\n     byte[] validity = new byte[]{(byte) 255};\n-    String[] values = new String[]{\n+    String[] values =\n+        new String[]{\n             \"2007-01-01T01:00:00.00Z\",\n             \"2007-03-05T03:40:00.00Z\",\n             \"2008-05-31T13:55:00.00Z\",\n@@ -1132,20 +1155,17 @@ public void testDateTime() throws GandivaException, Exception {\n             \"2000-08-20T00:14:00.00Z\",\n             \"2000-09-30T02:29:00.00Z\",\n             \"2000-10-31T05:33:00.00Z\"\n-    };\n+        };\n     long[] expYearFromDate = new long[]{2007, 2007, 2008, 2000, 2000, 2000, 2000, 2000};\n     long[] expMonthFromDate = new long[]{1, 3, 5, 6, 7, 8, 9, 10};\n     long[] expDayFromDate = new long[]{1, 5, 31, 30, 10, 20, 30, 31};\n     long[] expHourFromDate = new long[]{1, 3, 13, 23, 20, 0, 2, 5};\n     long[] expMinFromDate = new long[]{0, 40, 55, 20, 30, 14, 29, 33};\n \n-    long[][] expValues = new long[][]{\n-            expYearFromDate,\n-            expMonthFromDate,\n-            expDayFromDate,\n-            expHourFromDate,\n-            expMinFromDate\n-    };\n+    long[][] expValues =\n+        new long[][]{\n+            expYearFromDate, expMonthFromDate, expDayFromDate, expHourFromDate, expMinFromDate\n+        };\n \n     ArrowBuf validity_buf = buf(validity);\n     ArrowBuf data_millis = stringToMillis(values);\n@@ -1153,13 +1173,14 @@ public void testDateTime() throws GandivaException, Exception {\n     ArrowBuf data_millis2 = stringToMillis(values);\n \n     ArrowFieldNode fieldNode = new ArrowFieldNode(numRows, 0);\n-    ArrowRecordBatch batch = new ArrowRecordBatch(\n+    ArrowRecordBatch batch =\n+        new ArrowRecordBatch(\n             numRows,\n             Lists.newArrayList(fieldNode, fieldNode),\n             Lists.newArrayList(validity_buf, data_millis, validity_buf2, data_millis2));\n \n     List<ValueVector> output = new ArrayList<ValueVector>();\n-    for(int i = 0; i < exprs.size(); i++) {\n+    for (int i = 0; i < exprs.size(); i++) {\n       BigIntVector bigIntVector = new BigIntVector(EMPTY_SCHEMA_PATH, allocator);\n       bigIntVector.allocateNew(numRows);\n       output.add(bigIntVector);\n@@ -1167,9 +1188,9 @@ public void testDateTime() throws GandivaException, Exception {\n     eval.evaluate(batch, output);\n     eval.close();\n \n-    for(int i = 0; i < output.size(); i++) {\n+    for (int i = 0; i < output.size(); i++) {\n       long[] expected = expValues[i % 5];\n-      BigIntVector bigIntVector = (BigIntVector)output.get(i);\n+      BigIntVector bigIntVector = (BigIntVector) output.get(i);\n \n       for (int j = 0; j < numRows; j++) {\n         assertFalse(bigIntVector.isNull(j));\n@@ -1189,7 +1210,8 @@ public void testUnknownFunction() {\n     TreeNode c1_Node = TreeBuilder.makeField(c1);\n     TreeNode c2_Node = TreeBuilder.makeField(c2);\n \n-    TreeNode unknown = TreeBuilder.makeFunction(\"xxx_yyy\", Lists.newArrayList(c1_Node, c2_Node), int8);\n+    TreeNode unknown =\n+        TreeBuilder.makeFunction(\"xxx_yyy\", Lists.newArrayList(c1_Node, c2_Node), int8);\n     ExpressionTree expr = TreeBuilder.makeExpression(unknown, Field.nullable(\"result\", int8));\n     Schema schema = new Schema(Lists.newArrayList(c1, c2));\n     boolean caughtException = false;\ndiff --git a/java/gandiva/src/test/java/org/apache/arrow/gandiva/expression/ArrowTypeHelperTest.java b/java/gandiva/src/test/java/org/apache/arrow/gandiva/expression/ArrowTypeHelperTest.java\nindex a79922cb13..c8a52b9dce 100644\n--- a/java/gandiva/src/test/java/org/apache/arrow/gandiva/expression/ArrowTypeHelperTest.java\n+++ b/java/gandiva/src/test/java/org/apache/arrow/gandiva/expression/ArrowTypeHelperTest.java\n@@ -18,6 +18,11 @@\n \n package org.apache.arrow.gandiva.expression;\n \n+import static org.junit.Assert.assertEquals;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n import org.apache.arrow.gandiva.exceptions.GandivaException;\n import org.apache.arrow.gandiva.ipc.GandivaTypes;\n import org.apache.arrow.vector.types.FloatingPointPrecision;\n@@ -26,11 +31,6 @@\n import org.apache.arrow.vector.types.pojo.Schema;\n import org.junit.Test;\n \n-import java.util.ArrayList;\n-import java.util.List;\n-\n-import static org.junit.Assert.assertEquals;\n-\n public class ArrowTypeHelperTest {\n \n   private void testInt(int width, boolean isSigned, int expected) throws GandivaException {\n@@ -104,4 +104,3 @@ public void testSchema() throws GandivaException {\n     }\n   }\n }\n-\ndiff --git a/java/gandiva/src/test/java/org/apache/arrow/gandiva/expression/TreeBuilderTest.java b/java/gandiva/src/test/java/org/apache/arrow/gandiva/expression/TreeBuilderTest.java\nindex aa90e4aa79..390d720660 100644\n--- a/java/gandiva/src/test/java/org/apache/arrow/gandiva/expression/TreeBuilderTest.java\n+++ b/java/gandiva/src/test/java/org/apache/arrow/gandiva/expression/TreeBuilderTest.java\n@@ -18,6 +18,12 @@\n \n package org.apache.arrow.gandiva.expression;\n \n+import static org.junit.Assert.*;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+\n import org.apache.arrow.gandiva.exceptions.GandivaException;\n import org.apache.arrow.gandiva.ipc.GandivaTypes;\n import org.apache.arrow.vector.types.FloatingPointPrecision;\n@@ -25,12 +31,6 @@\n import org.apache.arrow.vector.types.pojo.Field;\n import org.junit.Test;\n \n-import java.util.Arrays;\n-import java.util.List;\n-import java.util.ArrayList;\n-\n-import static org.junit.Assert.*;\n-\n public class TreeBuilderTest {\n \n   @Test\n@@ -73,19 +73,23 @@ public void testMakeLiteral() throws GandivaException {\n   public void testMakeNull() throws GandivaException {\n     TreeNode n = TreeBuilder.makeNull(new ArrowType.Bool());\n     GandivaTypes.TreeNode node = n.toProtobuf();\n-    assertEquals(GandivaTypes.GandivaType.BOOL_VALUE, node.getNullNode().getType().getType().getNumber());\n+    assertEquals(\n+        GandivaTypes.GandivaType.BOOL_VALUE, node.getNullNode().getType().getType().getNumber());\n \n     n = TreeBuilder.makeNull(new ArrowType.Int(32, true));\n     node = n.toProtobuf();\n-    assertEquals(GandivaTypes.GandivaType.INT32_VALUE, node.getNullNode().getType().getType().getNumber());\n+    assertEquals(\n+        GandivaTypes.GandivaType.INT32_VALUE, node.getNullNode().getType().getType().getNumber());\n \n     n = TreeBuilder.makeNull(new ArrowType.Int(64, false));\n     node = n.toProtobuf();\n-    assertEquals(GandivaTypes.GandivaType.UINT64_VALUE, node.getNullNode().getType().getType().getNumber());\n+    assertEquals(\n+        GandivaTypes.GandivaType.UINT64_VALUE, node.getNullNode().getType().getType().getNumber());\n \n     n = TreeBuilder.makeNull(new ArrowType.FloatingPoint(FloatingPointPrecision.SINGLE));\n     node = n.toProtobuf();\n-    assertEquals(GandivaTypes.GandivaType.FLOAT_VALUE, node.getNullNode().getType().getType().getNumber());\n+    assertEquals(\n+        GandivaTypes.GandivaType.FLOAT_VALUE, node.getNullNode().getType().getType().getNumber());\n   }\n \n   @Test\n@@ -94,7 +98,9 @@ public void testMakeField() throws GandivaException {\n     GandivaTypes.TreeNode node = n.toProtobuf();\n \n     assertEquals(\"a\", node.getFieldNode().getField().getName());\n-    assertEquals(GandivaTypes.GandivaType.INT32_VALUE, node.getFieldNode().getField().getType().getType().getNumber());\n+    assertEquals(\n+        GandivaTypes.GandivaType.INT32_VALUE,\n+        node.getFieldNode().getField().getType().getType().getNumber());\n   }\n \n   @Test\n@@ -112,7 +118,9 @@ public void testMakeFunction() throws GandivaException {\n     assertEquals(\"add\", node.getFnNode().getFunctionName());\n     assertEquals(\"a\", node.getFnNode().getInArgsList().get(0).getFieldNode().getField().getName());\n     assertEquals(\"b\", node.getFnNode().getInArgsList().get(1).getFieldNode().getField().getName());\n-    assertEquals(GandivaTypes.GandivaType.UINT64_VALUE, node.getFnNode().getReturnType().getType().getNumber());\n+    assertEquals(\n+        GandivaTypes.GandivaType.UINT64_VALUE,\n+        node.getFnNode().getReturnType().getType().getNumber());\n   }\n \n   @Test\n@@ -135,7 +143,9 @@ public void testMakeIf() throws GandivaException {\n     assertEquals(\"greater_than\", node.getIfNode().getCond().getFnNode().getFunctionName());\n     assertEquals(a.getName(), node.getIfNode().getThenNode().getFieldNode().getField().getName());\n     assertEquals(b.getName(), node.getIfNode().getElseNode().getFieldNode().getField().getName());\n-    assertEquals(GandivaTypes.GandivaType.BOOL_VALUE, node.getIfNode().getReturnType().getType().getNumber());\n+    assertEquals(\n+        GandivaTypes.GandivaType.BOOL_VALUE,\n+        node.getIfNode().getReturnType().getType().getNumber());\n   }\n \n   @Test\n@@ -191,9 +201,11 @@ public void testExpression() throws GandivaException {\n     GandivaTypes.ExpressionRoot root = expr.toProtobuf();\n \n     assertTrue(root.getRoot().hasIfNode());\n-    assertEquals(\"greater_than\", root.getRoot().getIfNode().getCond().getFnNode().getFunctionName());\n+    assertEquals(\n+        \"greater_than\", root.getRoot().getIfNode().getCond().getFnNode().getFunctionName());\n     assertEquals(\"c\", root.getResultType().getName());\n-    assertEquals(GandivaTypes.GandivaType.BOOL_VALUE, root.getResultType().getType().getType().getNumber());\n+    assertEquals(\n+        GandivaTypes.GandivaType.BOOL_VALUE, root.getResultType().getType().getType().getNumber());\n   }\n \n   @Test\n@@ -215,7 +227,9 @@ public void testExpression2() throws GandivaException {\n     assertEquals(\"add\", node.getFnNode().getFunctionName());\n     assertEquals(\"a\", node.getFnNode().getInArgsList().get(0).getFieldNode().getField().getName());\n     assertEquals(\"b\", node.getFnNode().getInArgsList().get(1).getFieldNode().getField().getName());\n-    assertEquals(GandivaTypes.GandivaType.UINT64_VALUE, node.getFnNode().getReturnType().getType().getNumber());\n+    assertEquals(\n+        GandivaTypes.GandivaType.UINT64_VALUE,\n+        node.getFnNode().getReturnType().getType().getNumber());\n   }\n \n   @Test\n@@ -227,14 +241,18 @@ public void testExpressionWithAnd() throws GandivaException {\n     args.add(b);\n \n     TreeNode andNode = TreeBuilder.makeAnd(args);\n-    ExpressionTree expr = TreeBuilder.makeExpression(andNode, Field.nullable(\"c\", new ArrowType.Bool()));\n+    ExpressionTree expr =\n+        TreeBuilder.makeExpression(andNode, Field.nullable(\"c\", new ArrowType.Bool()));\n     GandivaTypes.ExpressionRoot root = expr.toProtobuf();\n \n     assertTrue(root.getRoot().hasAndNode());\n-    assertEquals(\"a\", root.getRoot().getAndNode().getArgsList().get(0).getFieldNode().getField().getName());\n-    assertEquals(\"b\", root.getRoot().getAndNode().getArgsList().get(1).getFieldNode().getField().getName());\n+    assertEquals(\n+        \"a\", root.getRoot().getAndNode().getArgsList().get(0).getFieldNode().getField().getName());\n+    assertEquals(\n+        \"b\", root.getRoot().getAndNode().getArgsList().get(1).getFieldNode().getField().getName());\n     assertEquals(\"c\", root.getResultType().getName());\n-    assertEquals(GandivaTypes.GandivaType.BOOL_VALUE, root.getResultType().getType().getType().getNumber());\n+    assertEquals(\n+        GandivaTypes.GandivaType.BOOL_VALUE, root.getResultType().getType().getType().getNumber());\n   }\n \n   @Test\n@@ -246,14 +264,18 @@ public void testExpressionWithOr() throws GandivaException {\n     args.add(b);\n \n     TreeNode orNode = TreeBuilder.makeOr(args);\n-    ExpressionTree expr = TreeBuilder.makeExpression(orNode, Field.nullable(\"c\", new ArrowType.Bool()));\n+    ExpressionTree expr =\n+        TreeBuilder.makeExpression(orNode, Field.nullable(\"c\", new ArrowType.Bool()));\n     GandivaTypes.ExpressionRoot root = expr.toProtobuf();\n \n     assertTrue(root.getRoot().hasOrNode());\n-    assertEquals(\"a\", root.getRoot().getOrNode().getArgsList().get(0).getFieldNode().getField().getName());\n-    assertEquals(\"b\", root.getRoot().getOrNode().getArgsList().get(1).getFieldNode().getField().getName());\n+    assertEquals(\n+        \"a\", root.getRoot().getOrNode().getArgsList().get(0).getFieldNode().getField().getName());\n+    assertEquals(\n+        \"b\", root.getRoot().getOrNode().getArgsList().get(1).getFieldNode().getField().getName());\n     assertEquals(\"c\", root.getResultType().getName());\n-    assertEquals(GandivaTypes.GandivaType.BOOL_VALUE, root.getResultType().getType().getType().getNumber());\n+    assertEquals(\n+        GandivaTypes.GandivaType.BOOL_VALUE, root.getResultType().getType().getType().getNumber());\n   }\n \n   @Test\n@@ -273,8 +295,26 @@ public void testCondition() throws GandivaException {\n     GandivaTypes.Condition conditionProto = condition.toProtobuf();\n     assertTrue(conditionProto.getRoot().hasFnNode());\n     assertEquals(\"greater_than\", conditionProto.getRoot().getFnNode().getFunctionName());\n-    assertEquals(\"a\", conditionProto.getRoot().getFnNode().getInArgsList().get(0).getFieldNode().getField().getName());\n-    assertEquals(\"b\", conditionProto.getRoot().getFnNode().getInArgsList().get(1).getFieldNode().getField().getName());\n+    assertEquals(\n+        \"a\",\n+        conditionProto\n+            .getRoot()\n+            .getFnNode()\n+            .getInArgsList()\n+            .get(0)\n+            .getFieldNode()\n+            .getField()\n+            .getName());\n+    assertEquals(\n+        \"b\",\n+        conditionProto\n+            .getRoot()\n+            .getFnNode()\n+            .getInArgsList()\n+            .get(1)\n+            .getFieldNode()\n+            .getField()\n+            .getName());\n   }\n \n   @Test\n@@ -287,8 +327,25 @@ public void testCondition2() throws GandivaException {\n     GandivaTypes.Condition conditionProto = condition.toProtobuf();\n     assertTrue(conditionProto.getRoot().hasFnNode());\n     assertEquals(\"greater_than\", conditionProto.getRoot().getFnNode().getFunctionName());\n-    assertEquals(\"a\", conditionProto.getRoot().getFnNode().getInArgsList().get(0).getFieldNode().getField().getName());\n-    assertEquals(\"b\", conditionProto.getRoot().getFnNode().getInArgsList().get(1).getFieldNode().getField().getName());\n+    assertEquals(\n+        \"a\",\n+        conditionProto\n+            .getRoot()\n+            .getFnNode()\n+            .getInArgsList()\n+            .get(0)\n+            .getFieldNode()\n+            .getField()\n+            .getName());\n+    assertEquals(\n+        \"b\",\n+        conditionProto\n+            .getRoot()\n+            .getFnNode()\n+            .getInArgsList()\n+            .get(1)\n+            .getFieldNode()\n+            .getField()\n+            .getName());\n   }\n }\n-\ndiff --git a/java/gandiva/src/test/resources/logback.xml b/java/gandiva/src/test/resources/logback.xml\nnew file mode 100644\nindex 0000000000..9e23b555fe\n--- /dev/null\n+++ b/java/gandiva/src/test/resources/logback.xml\n@@ -0,0 +1,19 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n+<!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor\n+  license agreements. See the NOTICE file distributed with this work for additional\n+  information regarding copyright ownership. The ASF licenses this file to\n+  You under the Apache License, Version 2.0 (the \"License\"); you may not use\n+  this file except in compliance with the License. You may obtain a copy of\n+  the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required\n+  by applicable law or agreed to in writing, software distributed under the\n+  License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS\n+  OF ANY KIND, either express or implied. See the License for the specific\n+  language governing permissions and limitations under the License. -->\n+\n+<configuration>\n+  <logger name=\"org.apache.arrow\" additivity=\"false\">\n+    <level value=\"info\" />\n+    <appender-ref ref=\"FILE\" />\n+  </logger>\n+\n+</configuration>\ndiff --git a/java/pom.xml b/java/pom.xml\nindex de35ff207d..f6847ae7ac 100644\n--- a/java/pom.xml\n+++ b/java/pom.xml\n@@ -643,6 +643,21 @@\n \t<additionalparam>-Xdoclint:none</additionalparam>\n       </properties>\n     </profile>\n+\n+    <profile>\n+      <!-- gandiva java depends on gandiva cpp, and gandiva cpp isn't enabled by default yet -->\n+      <id>gandiva</id>\n+      <modules>\n+        <module>format</module>\n+        <module>memory</module>\n+        <module>vector</module>\n+        <module>tools</module>\n+        <module>adapter/jdbc</module>\n+        <module>plasma</module>\n+        <module>flight</module>\n+        <module>gandiva</module>\n+      </modules>\n+    </profile>\n   </profiles>\n \n </project>\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-10T13:40:35.907+0000",
                    "updated": "2018-10-10T13:40:35.907+0000",
                    "started": "2018-10-10T13:40:35.907+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "153135",
                    "issueId": "13188503"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/3",
            "id": "3",
            "description": "A task that needs to be done.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21148&avatarType=issuetype",
            "name": "Task",
            "subtask": false,
            "avatarId": 21148
        },
        "timespent": 7200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@1898deae[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@730186f3[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4cd56a14[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@331c4b63[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7caf449d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@5b340cab[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3c565813[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@6d404ba9[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6b4d6130[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@106779a6[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1e7f3d79[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@710d201c[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 7200,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Oct 10 13:40:30 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-10-10T13:40:30.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3383/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2018-10-01T12:15:40.000+0000",
        "updated": "2018-10-10T13:40:35.000+0000",
        "timeoriginalestimate": null,
        "description": "Enable and test for gandiva java in travis ci.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 7200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] Run Gandiva tests in Travis CI",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188503/comment/16643118",
                    "id": "16643118",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
                        "name": "pravindra",
                        "key": "pravindra",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
                        },
                        "displayName": "Pindikura Ravindra",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "body": "@wesm @praveenbingo - can you please review this PR ?\u00a0\r\n\r\n\u00a0\r\n\r\nThe travis build for gandiva went through fine. There was an unrelated failure in the arrow travis build (python core dump).",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
                        "name": "pravindra",
                        "key": "pravindra",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
                        },
                        "displayName": "Pindikura Ravindra",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "created": "2018-10-09T10:58:16.481+0000",
                    "updated": "2018-10-09T10:58:16.481+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188503/comment/16644968",
                    "id": "16644968",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 2720\n[https://github.com/apache/arrow/pull/2720]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-10-10T13:40:30.753+0000",
                    "updated": "2018-10-10T13:40:30.753+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|i3yo8f:",
        "customfield_12314139": null
    }
}