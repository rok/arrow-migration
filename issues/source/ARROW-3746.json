{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13197557",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197557",
    "key": "ARROW-3746",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343858",
                "id": "12343858",
                "description": "",
                "name": "0.12.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-01-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pcmoritz",
            "name": "pcmoritz",
            "key": "pcmoritz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Philipp Moritz",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334626",
                "id": "12334626",
                "name": "C++ - Gandiva"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pcmoritz",
            "name": "pcmoritz",
            "key": "pcmoritz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Philipp Moritz",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pcmoritz",
            "name": "pcmoritz",
            "key": "pcmoritz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Philipp Moritz",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 4800,
            "total": 4800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 4800,
            "total": 4800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3746/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 8,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197557/worklog/164650",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz opened a new pull request #2933: ARROW-3746: [Gandiva] [Python] Print list of functions registered with gandiva\nURL: https://github.com/apache/arrow/pull/2933\n \n \n   I'm also making the iterators of the Function registry static, can you check if that's ok @praveenbingo and @pravindra \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-10T05:20:49.742+0000",
                    "updated": "2018-11-10T05:20:49.742+0000",
                    "started": "2018-11-10T05:20:49.741+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "164650",
                    "issueId": "13197557"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197557/worklog/164730",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz commented on issue #2933: ARROW-3746: [Gandiva] [Python] Print list of functions registered with gandiva\nURL: https://github.com/apache/arrow/pull/2933#issuecomment-437638674\n \n \n   Thanks, I made that change!\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-11T02:37:51.760+0000",
                    "updated": "2018-11-11T02:37:51.760+0000",
                    "started": "2018-11-11T02:37:51.759+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "164730",
                    "issueId": "13197557"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197557/worklog/164732",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on a change in pull request #2933: ARROW-3746: [Gandiva] [Python] Print list of functions registered with gandiva\nURL: https://github.com/apache/arrow/pull/2933#discussion_r232473811\n \n \n\n ##########\n File path: cpp/src/gandiva/expression_registry.h\n ##########\n @@ -61,5 +61,9 @@ class ExpressionRegistry {\n   static void AddArrowTypesToVector(arrow::Type::type& type, DataTypeVector& vector);\n   std::unique_ptr<FunctionRegistry> function_registry_;\n };\n+\n+void GetRegisteredFunctionSignatures(\n \n Review comment:\n   curious - why not \r\n   \r\n   std::vector<std::shared_ptr<FunctionSignature>>* signatures) GetRegisteredFunctions() ?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-11T04:10:02.510+0000",
                    "updated": "2018-11-11T04:10:02.510+0000",
                    "started": "2018-11-11T04:10:02.509+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "164732",
                    "issueId": "13197557"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197557/worklog/164733",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on a change in pull request #2933: ARROW-3746: [Gandiva] [Python] Print list of functions registered with gandiva\nURL: https://github.com/apache/arrow/pull/2933#discussion_r232473811\n \n \n\n ##########\n File path: cpp/src/gandiva/expression_registry.h\n ##########\n @@ -61,5 +61,9 @@ class ExpressionRegistry {\n   static void AddArrowTypesToVector(arrow::Type::type& type, DataTypeVector& vector);\n   std::unique_ptr<FunctionRegistry> function_registry_;\n };\n+\n+void GetRegisteredFunctionSignatures(\n \n Review comment:\n   curious - why not \r\n   \r\n   std::vector<std::shared_ptr<FunctionSignature>>* signatures> GetRegisteredFunctions() ?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-11T04:10:25.101+0000",
                    "updated": "2018-11-11T04:10:25.101+0000",
                    "started": "2018-11-11T04:10:25.100+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "164733",
                    "issueId": "13197557"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197557/worklog/164734",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on a change in pull request #2933: ARROW-3746: [Gandiva] [Python] Print list of functions registered with gandiva\nURL: https://github.com/apache/arrow/pull/2933#discussion_r232473811\n \n \n\n ##########\n File path: cpp/src/gandiva/expression_registry.h\n ##########\n @@ -61,5 +61,9 @@ class ExpressionRegistry {\n   static void AddArrowTypesToVector(arrow::Type::type& type, DataTypeVector& vector);\n   std::unique_ptr<FunctionRegistry> function_registry_;\n };\n+\n+void GetRegisteredFunctionSignatures(\n \n Review comment:\n   curious - why not \r\n   \r\n   std::vector<std::shared_ptr<FunctionSignature>>> GetRegisteredFunctions() ?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-11T04:11:26.852+0000",
                    "updated": "2018-11-11T04:11:26.852+0000",
                    "started": "2018-11-11T04:11:26.851+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "164734",
                    "issueId": "13197557"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197557/worklog/164781",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz commented on a change in pull request #2933: ARROW-3746: [Gandiva] [Python] Print list of functions registered with gandiva\nURL: https://github.com/apache/arrow/pull/2933#discussion_r232503184\n \n \n\n ##########\n File path: cpp/src/gandiva/expression_registry.h\n ##########\n @@ -61,5 +61,9 @@ class ExpressionRegistry {\n   static void AddArrowTypesToVector(arrow::Type::type& type, DataTypeVector& vector);\n   std::unique_ptr<FunctionRegistry> function_registry_;\n };\n+\n+void GetRegisteredFunctionSignatures(\n \n Review comment:\n   In general I like the pattern where the client allocates the vector and the function pushes onto it, it allows adding elements to an existing vector. In this case I agree it's not necessary, I changed it to your suggestion.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-11T20:30:25.990+0000",
                    "updated": "2018-11-11T20:30:25.990+0000",
                    "started": "2018-11-11T20:30:25.989+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "164781",
                    "issueId": "13197557"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197557/worklog/164794",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2933: ARROW-3746: [Gandiva] [Python] Print list of functions registered with gandiva\nURL: https://github.com/apache/arrow/pull/2933#issuecomment-437706407\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2933?src=pr&el=h1) Report\n   > Merging [#2933](https://codecov.io/gh/apache/arrow/pull/2933?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/f63b3e2794feb6ab941648647e50c497aef20a48?src=pr&el=desc) will **increase** coverage by `3.09%`.\n   > The diff coverage is `70.73%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2933/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/2933?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2933      +/-   ##\n   ==========================================\n   + Coverage   84.29%   87.39%   +3.09%     \n   ==========================================\n     Files         490      422      -68     \n     Lines       68830    63706    -5124     \n   ==========================================\n   - Hits        58023    55674    -2349     \n   + Misses      10717     8032    -2685     \n   + Partials       90        0      -90\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2933?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [python/pyarrow/types.py](https://codecov.io/gh/apache/arrow/pull/2933/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdHlwZXMucHk=) | `98.8% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/gandiva/expression\\_registry.h](https://codecov.io/gh/apache/arrow/pull/2933/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2V4cHJlc3Npb25fcmVnaXN0cnkuaA==) | `100% <\u00f8> (+100%)` | :arrow_up: |\n   | [cpp/src/gandiva/expression\\_registry.cc](https://codecov.io/gh/apache/arrow/pull/2933/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2V4cHJlc3Npb25fcmVnaXN0cnkuY2M=) | `91.25% <100%> (+20.01%)` | :arrow_up: |\n   | [python/pyarrow/tests/test\\_gandiva.py](https://codecov.io/gh/apache/arrow/pull/2933/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9nYW5kaXZhLnB5) | `100% <100%> (+91.66%)` | :arrow_up: |\n   | [python/pyarrow/gandiva.pyx](https://codecov.io/gh/apache/arrow/pull/2933/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvZ2FuZGl2YS5weXg=) | `66.21% <57.14%> (+62.67%)` | :arrow_up: |\n   | [cpp/src/arrow/status.h](https://codecov.io/gh/apache/arrow/pull/2933/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9zdGF0dXMuaA==) | `89.01% <0%> (\u00f8)` | :arrow_up: |\n   | [rust/src/record\\_batch.rs](https://codecov.io/gh/apache/arrow/pull/2933/diff?src=pr&el=tree#diff-cnVzdC9zcmMvcmVjb3JkX2JhdGNoLnJz) | | |\n   | [go/arrow/array/table.go](https://codecov.io/gh/apache/arrow/pull/2933/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvdGFibGUuZ28=) | | |\n   | [rust/src/array.rs](https://codecov.io/gh/apache/arrow/pull/2933/diff?src=pr&el=tree#diff-cnVzdC9zcmMvYXJyYXkucnM=) | | |\n   | [go/arrow/math/uint64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2933/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYW1kNjQuZ28=) | | |\n   | ... and [127 more](https://codecov.io/gh/apache/arrow/pull/2933/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2933?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2933?src=pr&el=footer). Last update [f63b3e2...58fb14b](https://codecov.io/gh/apache/arrow/pull/2933?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-11T21:25:50.622+0000",
                    "updated": "2018-11-11T21:25:50.622+0000",
                    "started": "2018-11-11T21:25:50.621+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "164794",
                    "issueId": "13197557"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197557/worklog/164795",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz closed pull request #2933: ARROW-3746: [Gandiva] [Python] Print list of functions registered with gandiva\nURL: https://github.com/apache/arrow/pull/2933\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/gandiva/expression_registry.cc b/cpp/src/gandiva/expression_registry.cc\nindex c17c5b3cdc..fb5a45e779 100644\n--- a/cpp/src/gandiva/expression_registry.cc\n+++ b/cpp/src/gandiva/expression_registry.cc\n@@ -150,4 +150,15 @@ void ExpressionRegistry::AddArrowTypesToVector(arrow::Type::type& type,\n   }\n }\n \n+std::vector<std::shared_ptr<FunctionSignature>> GetRegisteredFunctionSignatures() {\n+  ExpressionRegistry registry;\n+  std::vector<std::shared_ptr<FunctionSignature>> signatures;\n+  for (auto iter = registry.function_signature_begin();\n+       iter != registry.function_signature_end(); iter++) {\n+    signatures.push_back(std::make_shared<FunctionSignature>(\n+        (*iter).base_name(), (*iter).param_types(), (*iter).ret_type()));\n+  }\n+  return signatures;\n+}\n+\n }  // namespace gandiva\ndiff --git a/cpp/src/gandiva/expression_registry.h b/cpp/src/gandiva/expression_registry.h\nindex fde0449cad..a03deab91c 100644\n--- a/cpp/src/gandiva/expression_registry.h\n+++ b/cpp/src/gandiva/expression_registry.h\n@@ -61,5 +61,8 @@ class ExpressionRegistry {\n   static void AddArrowTypesToVector(arrow::Type::type& type, DataTypeVector& vector);\n   std::unique_ptr<FunctionRegistry> function_registry_;\n };\n+\n+std::vector<std::shared_ptr<FunctionSignature>> GetRegisteredFunctionSignatures();\n+\n }  // namespace gandiva\n #endif  // GANDIVA_TYPES_H\ndiff --git a/python/pyarrow/gandiva.pyx b/python/pyarrow/gandiva.pyx\nindex 7a6c09e8ed..2cd0e16f04 100644\n--- a/python/pyarrow/gandiva.pyx\n+++ b/python/pyarrow/gandiva.pyx\n@@ -29,7 +29,8 @@ from pyarrow.includes.libarrow cimport *\n from pyarrow.compat import frombytes\n from pyarrow.types import _as_type\n from pyarrow.lib cimport (Array, DataType, Field, MemoryPool, RecordBatch,\n-                          Schema, check_status, pyarrow_wrap_array)\n+                          Schema, check_status, pyarrow_wrap_array,\n+                          pyarrow_wrap_data_type)\n \n from pyarrow.includes.libgandiva cimport (CCondition, CExpression,\n                                           CNode, CProjector, CFilter,\n@@ -54,7 +55,9 @@ from pyarrow.includes.libgandiva cimport (CCondition, CExpression,\n                                           TreeExprBuilder_MakeCondition,\n                                           SelectionVector_MakeInt32,\n                                           Projector_Make,\n-                                          Filter_Make)\n+                                          Filter_Make,\n+                                          CFunctionSignature,\n+                                          GetRegisteredFunctionSignatures)\n \n \n cdef class Node:\n@@ -244,3 +247,60 @@ cpdef make_filter(Schema schema, Condition condition):\n     cdef shared_ptr[CFilter] result\n     check_status(Filter_Make(schema.sp_schema, condition.condition, &result))\n     return Filter.create(result)\n+\n+cdef class FunctionSignature:\n+    \"\"\"\n+    Signature of a Gandiva function including name, parameter types\n+    and return type.\n+    \"\"\"\n+\n+    cdef:\n+        shared_ptr[CFunctionSignature] signature\n+\n+    def __init__(self):\n+        raise TypeError(\"Do not call {}'s constructor directly.\"\n+                        .format(self.__class__.__name__))\n+\n+    @staticmethod\n+    cdef create(shared_ptr[CFunctionSignature] signature):\n+        cdef FunctionSignature self = FunctionSignature.__new__(\n+            FunctionSignature)\n+        self.signature = signature\n+        return self\n+\n+    def return_type(self):\n+        return pyarrow_wrap_data_type(self.signature.get().ret_type())\n+\n+    def param_types(self):\n+        result = []\n+        cdef vector[shared_ptr[CDataType]] types = \\\n+            self.signature.get().param_types()\n+        for t in types:\n+            result.append(pyarrow_wrap_data_type(t))\n+        return result\n+\n+    def name(self):\n+        return self.signature.get().base_name().decode()\n+\n+    def __repr__(self):\n+        signature = self.signature.get().ToString().decode()\n+        return \"FunctionSignature(\" + signature + \")\"\n+\n+\n+def get_registered_function_signatures():\n+    \"\"\"\n+    Return the function in Gandiva's ExpressionRegistry.\n+\n+    Returns\n+    -------\n+    registry: a list of registered function signatures\n+    \"\"\"\n+    results = []\n+\n+    cdef vector[shared_ptr[CFunctionSignature]] signatures = \\\n+        GetRegisteredFunctionSignatures()\n+\n+    for signature in signatures:\n+        results.append(FunctionSignature.create(signature))\n+\n+    return results\ndiff --git a/python/pyarrow/includes/libgandiva.pxd b/python/pyarrow/includes/libgandiva.pxd\nindex f8106bcf3f..3d41a7c1a0 100644\n--- a/python/pyarrow/includes/libgandiva.pxd\n+++ b/python/pyarrow/includes/libgandiva.pxd\n@@ -141,3 +141,24 @@ cdef extern from \"gandiva/filter.h\" namespace \"gandiva\" nogil:\n         \"gandiva::Filter::Make\"(\n             shared_ptr[CSchema] schema, shared_ptr[CCondition] condition,\n             shared_ptr[CFilter]* filter)\n+\n+cdef extern from \"gandiva/function_signature.h\" namespace \"gandiva\" nogil:\n+\n+    cdef cppclass CFunctionSignature\" gandiva::FunctionSignature\":\n+\n+        CFunctionSignature(const c_string& base_name,\n+                           vector[shared_ptr[CDataType]] param_types,\n+                           shared_ptr[CDataType] ret_type)\n+\n+        shared_ptr[CDataType] ret_type() const\n+\n+        const c_string& base_name() const\n+\n+        vector[shared_ptr[CDataType]] param_types() const\n+\n+        c_string ToString() const\n+\n+cdef extern from \"gandiva/expression_registry.h\" namespace \"gandiva\" nogil:\n+\n+    cdef vector[shared_ptr[CFunctionSignature]] \\\n+        GetRegisteredFunctionSignatures()\ndiff --git a/python/pyarrow/tests/test_gandiva.py b/python/pyarrow/tests/test_gandiva.py\nindex 579f88d32d..dd94ecd5c3 100644\n--- a/python/pyarrow/tests/test_gandiva.py\n+++ b/python/pyarrow/tests/test_gandiva.py\n@@ -162,3 +162,13 @@ def test_regex():\n     r, = projector.evaluate(table.to_batches()[0])\n     b = pa.array([False, True, True, True], type=pa.bool_())\n     assert r.equals(b)\n+\n+\n+@pytest.mark.gandiva\n+def test_get_registered_function_signatures():\n+    import pyarrow.gandiva as gandiva\n+    signatures = gandiva.get_registered_function_signatures()\n+\n+    assert type(signatures[0].return_type()) is pa.DataType\n+    assert type(signatures[0].param_types()) is list\n+    assert hasattr(signatures[0], \"name\")\ndiff --git a/python/pyarrow/types.py b/python/pyarrow/types.py\nindex 2bd70276e7..d07dccaedf 100644\n--- a/python/pyarrow/types.py\n+++ b/python/pyarrow/types.py\n@@ -19,7 +19,8 @@\n \n from pyarrow.lib import (is_boolean_value,  # noqa\n                          is_integer_value,\n-                         is_float_value)\n+                         is_float_value,\n+                         _as_type)\n \n import pyarrow.lib as lib\n \n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-11T21:31:05.667+0000",
                    "updated": "2018-11-11T21:31:05.667+0000",
                    "started": "2018-11-11T21:31:05.667+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "164795",
                    "issueId": "13197557"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 4800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6614b3e4[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6897a26b[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6b8b975e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@3e5ae4be[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5216b0cc[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@66b0aaad[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@51b6f042[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@382091de[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5fd7c6c6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3cd1fa53[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5a03296b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@6611fd94[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 4800,
        "customfield_12312520": null,
        "customfield_12312521": "Sun Nov 11 21:30:57 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-11-11T21:30:57.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3746/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-11-10T05:16:15.000+0000",
        "updated": "2019-06-03T12:33:07.000+0000",
        "timeoriginalestimate": null,
        "description": "This will also be useful for documentation purposes (right now it is not very easy to get a list of all the functions that are registered).",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 4800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Gandiva] [Python] Make it possible to list all functions registered with Gandiva",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197557/comment/16683016",
                    "id": "16683016",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pcmoritz",
                        "name": "pcmoritz",
                        "key": "pcmoritz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Philipp Moritz",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 2933\n[https://github.com/apache/arrow/pull/2933]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pcmoritz",
                        "name": "pcmoritz",
                        "key": "pcmoritz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Philipp Moritz",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-11-11T21:30:57.126+0000",
                    "updated": "2018-11-11T21:30:57.126+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|s00cm0:",
        "customfield_12314139": null
    }
}