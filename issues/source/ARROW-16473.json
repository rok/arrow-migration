{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13443218",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13443218",
    "key": "ARROW-16473",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351550",
                "id": "12351550",
                "name": "9.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-08-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=minyoung",
            "name": "minyoung",
            "key": "JIRAUSER286643",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Min-Young Wu",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333772",
                "id": "12333772",
                "name": "Go"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12337837",
                "id": "12337837",
                "name": "Parquet"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=minyoung",
            "name": "minyoung",
            "key": "JIRAUSER286643",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Min-Young Wu",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=minyoung",
            "name": "minyoung",
            "key": "JIRAUSER286643",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Min-Young Wu",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 8400,
            "total": 8400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 8400,
            "total": 8400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-16473/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 14,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13443218/worklog/766343",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "minyoung opened a new pull request, #13068:\nURL: https://github.com/apache/arrow/pull/13068\n\n   `parquet/file.serializedPageReader` has a [memory.Buffer](https://github.com/apache/arrow/blob/8bd5514f52bf9cc542a389edaf697cbc2c97b752/go/parquet/file/page_reader.go#L299) attribute (presumably to reuse across page reads). But at the end of `serializedPageReader.Next` (in the non-error case), a new `memory.Buffer` is [created](https://github.com/apache/arrow/blob/8bd5514f52bf9cc542a389edaf697cbc2c97b752/go/parquet/file/page_reader.go#L615) without releasing the pre-existing `p.buf`, thus resulting in a leak.\r\n   \r\n   Existing tests updated to test and catch this (`parquet/file` now uses `CheckedAllocator).\n\n\n",
                    "created": "2022-05-04T23:47:53.817+0000",
                    "updated": "2022-05-04T23:47:53.817+0000",
                    "started": "2022-05-04T23:47:53.817+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "766343",
                    "issueId": "13443218"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13443218/worklog/766344",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13068:\nURL: https://github.com/apache/arrow/pull/13068#issuecomment-1118031933\n\n   https://issues.apache.org/jira/browse/ARROW-16473\n\n\n",
                    "created": "2022-05-04T23:48:12.419+0000",
                    "updated": "2022-05-04T23:48:12.419+0000",
                    "started": "2022-05-04T23:48:12.419+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "766344",
                    "issueId": "13443218"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13443218/worklog/766345",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13068:\nURL: https://github.com/apache/arrow/pull/13068#issuecomment-1118031945\n\n   :warning: Ticket **has not been started in JIRA**, please click 'Start Progress'.\n\n\n",
                    "created": "2022-05-04T23:48:14.261+0000",
                    "updated": "2022-05-04T23:48:14.261+0000",
                    "started": "2022-05-04T23:48:14.260+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "766345",
                    "issueId": "13443218"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13443218/worklog/766346",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "minyoung commented on code in PR #13068:\nURL: https://github.com/apache/arrow/pull/13068#discussion_r865467660\n\n\n##########\ngo/parquet/file/page_reader.go:\n##########\n@@ -611,8 +610,6 @@ func (p *serializedPageReader) Next() bool {\n \t\t\t// we don't know this page type, we're allowed to skip non-data pages\n \t\t\tcontinue\n \t\t}\n-\n-\t\tp.buf = memory.NewResizableBuffer(p.mem)\n\nReview Comment:\n   Since a new `memory.Buffer` was created at the end here, I opted to create (and release) a new buffer at the start of the function instead.\r\n   \r\n   Alternative fix would be:\r\n   * remove this, so that the buffer is reused across calls to `serializedPageReader.Next` (is this safe?)\r\n   * add a `Release` method to the `PageReader` interface\r\n   * have the `primitiveRecordReader` release the `PageReader`\n\n\n\n",
                    "created": "2022-05-04T23:53:10.023+0000",
                    "updated": "2022-05-04T23:53:10.023+0000",
                    "started": "2022-05-04T23:53:10.021+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "766346",
                    "issueId": "13443218"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13443218/worklog/766679",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on code in PR #13068:\nURL: https://github.com/apache/arrow/pull/13068#discussion_r865950160\n\n\n##########\ngo/parquet/file/page_reader.go:\n##########\n@@ -611,8 +610,6 @@ func (p *serializedPageReader) Next() bool {\n \t\t\t// we don't know this page type, we're allowed to skip non-data pages\n \t\t\tcontinue\n \t\t}\n-\n-\t\tp.buf = memory.NewResizableBuffer(p.mem)\n\nReview Comment:\n   Ah I see what was happening. I passed the raw bytes as a *new* buffer to the page itself. So technically even though the accounting in the memory allocator is now correct, if the allocator isn't a Go allocator this will actually end up using the buffer after it's been freed. if you look at line 596, it calls `memory.NewBufferBytes(data)` to pass the buffer to the datapage itself. `NewBufferBytes` constructs a buffer which wraps around a byte slice, but it doesn't attempt to *free* that slice when it is garbage collected and assumes that the Go garbage collector will handle it. \r\n   \r\n   This is all fine for a byteslice that is allocated by Go itself, but since this is a buffer coming from the resizable buffer allocated using the `memory.Allocator` it's possible that this memory wasn't allocated by Go at all.\r\n   \r\n   Because data pages were always created using `NewBufferBytes` I don't believe I added a `Release` function to them. At this point I think the safest solution is to add a `Release` to the `DataPage` interface and corresponding structs, ensure it gets called by the page reader when it sets the current page to nil or otherwise, and just pass the buffer as is to the page rather than calling `NewBufferBytes`.\n\n\n\n",
                    "created": "2022-05-05T14:09:32.605+0000",
                    "updated": "2022-05-05T14:09:32.605+0000",
                    "started": "2022-05-05T14:09:32.605+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "766679",
                    "issueId": "13443218"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13443218/worklog/766824",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "minyoung commented on code in PR #13068:\nURL: https://github.com/apache/arrow/pull/13068#discussion_r866177642\n\n\n##########\ngo/parquet/file/page_reader.go:\n##########\n@@ -611,8 +610,6 @@ func (p *serializedPageReader) Next() bool {\n \t\t\t// we don't know this page type, we're allowed to skip non-data pages\n \t\t\tcontinue\n \t\t}\n-\n-\t\tp.buf = memory.NewResizableBuffer(p.mem)\n\nReview Comment:\n   Well, we can't simply pass the buffer as is to the page because the buffer itself may or may not be compressed. If the page is compressed, this function decompresses the page, and creates a new buffer with the decompressed data. Or are you proposing that we overwrite `buf` with the decompressed data in that case?\r\n   \r\n   Also, if we pass the buffer as is, is there a risk that `io.ReadFull(p.r, p.buf.Bytes())` will modify the data for the 'previous' page? Or should we do what I do now and create a new buffer for each call to `Next` (as we were doing previously but at the end of the function instead).\n\n\n\n",
                    "created": "2022-05-05T18:01:56.396+0000",
                    "updated": "2022-05-05T18:01:56.396+0000",
                    "started": "2022-05-05T18:01:56.395+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "766824",
                    "issueId": "13443218"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13443218/worklog/767352",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on code in PR #13068:\nURL: https://github.com/apache/arrow/pull/13068#discussion_r867062398\n\n\n##########\ngo/parquet/file/page_reader.go:\n##########\n@@ -611,8 +610,6 @@ func (p *serializedPageReader) Next() bool {\n \t\t\t// we don't know this page type, we're allowed to skip non-data pages\n \t\t\tcontinue\n \t\t}\n-\n-\t\tp.buf = memory.NewResizableBuffer(p.mem)\n\nReview Comment:\n   Ok, looking back at the code I notice something: In all cases *except* for a V2 DataPage, even if the data isn't compressed, we end up copying it out of `buf` into memory allocated by the `decompressBuffer`. This has two effects:\r\n   \r\n   1. It separates the connection between `p.buf` and the `data` variable we pass to the data page.\r\n   2. It *ensures* that we can't possibly have a situation of leaking memory because we're not using the passed in memory allocator to create that copy. We know for a fact that Go allocated that memory for the page (Not necessarily a good thing, but sure, we can go with that for now. a larger refactor may be a future idea to improve this). The only time this isn't the case is line 586, where we do `io.ReadFull(p.r p.buf.Bytes())`. \r\n   \r\n   My original idea here was that we'd utilize the same buffer where possible, creating a new buffer for `p.buf` each time. This is exemplified by the `Release` that exists on the `Page` interface. So the easy solution I can see is to keep your change to create a New buffer for each call into Next, and make a slight modification in the `DataPageV2` case:\r\n   \r\n   Currently it looks like this in your change.\r\n   \r\n   ```go\r\n   var data []byte\r\n   if compressed {\r\n           if levelsBytelen > 0 {\r\n                   io.ReadFull(p.r, buf.Bytes()[:levelsBytelen])\r\n           }\r\n   \tif data, p.err = p.decompress(lenCompressed-levelsBytelen, buf.Bytes()[levelsBytelen:]); p.err != nil {\r\n   \t        return false\r\n           }\r\n   } else {\r\n           io.ReadFull(p.r, buf.Bytes())\r\n   \tdata = buf.Bytes()\r\n   }\r\n   ```\r\n   \r\n   And then we call `NewBufferBytes(data)` when creating the page. We can likely solve the issue by instead doing this:\r\n   \r\n   ```go\r\n   var pagebuf *memory.Buffer\r\n   if compressed {\r\n           if levelsBytelen > 0 {\r\n                   io.ReadFull(p.r, buf.Bytes()[:levelsBytelen])\r\n           }\r\n           var data []byte\r\n   \tif data, p.err = p.decompress(lenCompressed-levelsBytelen, buf.Bytes()[levelsBytelen:]); p.err != nil {\r\n   \t        return false\r\n           }\r\n           pagebuf = memory.NewBufferBytes(data)\r\n   } else {\r\n           io.ReadFull(p.r, buf.Bytes())\r\n           pagebuf = buf\r\n           pagebuf.Retain()\r\n   }\r\n   ```\r\n   \r\n   And then use pagebuf to construct the `DataPageV2`. That should be sufficient, it'll still make a new buffer for each call to `Next` and allow the defer to release the memory, but it allows us to avoid the copy in this case by just passing the buffer to the Page safely.\r\n   \r\n   Does all of that make sense? I kind of rambled a bit but I hope it all made sense and came across well.\n\n\n\n",
                    "created": "2022-05-06T18:13:26.824+0000",
                    "updated": "2022-05-06T18:13:26.824+0000",
                    "started": "2022-05-06T18:13:26.824+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "767352",
                    "issueId": "13443218"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13443218/worklog/768059",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "minyoung commented on code in PR #13068:\nURL: https://github.com/apache/arrow/pull/13068#discussion_r868254860\n\n\n##########\ngo/parquet/file/page_reader.go:\n##########\n@@ -611,8 +610,6 @@ func (p *serializedPageReader) Next() bool {\n \t\t\t// we don't know this page type, we're allowed to skip non-data pages\n \t\t\tcontinue\n \t\t}\n-\n-\t\tp.buf = memory.NewResizableBuffer(p.mem)\n\nReview Comment:\n   Yes, that makes sense. PR updated.\r\n   \r\n   I just wonder if `memory.NewBufferBytes(buf.Bytes())` would end up copying the `[]byte` or not? Since both `memory.NewBufferBytes` and `buf.Bytes` both use/pass references to the underlying `[]byte` and does not do any `copy`'s\n\n\n\n",
                    "created": "2022-05-09T17:37:34.062+0000",
                    "updated": "2022-05-09T17:37:34.062+0000",
                    "started": "2022-05-09T17:37:34.062+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "768059",
                    "issueId": "13443218"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13443218/worklog/768061",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "minyoung commented on code in PR #13068:\nURL: https://github.com/apache/arrow/pull/13068#discussion_r868254860\n\n\n##########\ngo/parquet/file/page_reader.go:\n##########\n@@ -611,8 +610,6 @@ func (p *serializedPageReader) Next() bool {\n \t\t\t// we don't know this page type, we're allowed to skip non-data pages\n \t\t\tcontinue\n \t\t}\n-\n-\t\tp.buf = memory.NewResizableBuffer(p.mem)\n\nReview Comment:\n   Yes, that makes sense. PR rebased and updated.\r\n   \r\n   I just wonder if `memory.NewBufferBytes(buf.Bytes())` would end up copying the `[]byte` or not? Since both `memory.NewBufferBytes` and `buf.Bytes` both use/pass references to the underlying `[]byte` and does not do any `copy`'s\n\n\n\n",
                    "created": "2022-05-09T17:38:39.105+0000",
                    "updated": "2022-05-09T17:38:39.105+0000",
                    "started": "2022-05-09T17:38:39.105+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "768061",
                    "issueId": "13443218"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13443218/worklog/769270",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on code in PR #13068:\nURL: https://github.com/apache/arrow/pull/13068#discussion_r870693634\n\n\n##########\ngo/parquet/file/page_reader.go:\n##########\n@@ -611,8 +610,6 @@ func (p *serializedPageReader) Next() bool {\n \t\t\t// we don't know this page type, we're allowed to skip non-data pages\n \t\t\tcontinue\n \t\t}\n-\n-\t\tp.buf = memory.NewResizableBuffer(p.mem)\n\nReview Comment:\n   `NewBufferBytes(buf.Bytes())` just creates a `*memory.Buffer` which references the existing slice, it doesn't copy the contents of the slice. So there's no copying happening.\n\n\n\n",
                    "created": "2022-05-11T19:54:28.297+0000",
                    "updated": "2022-05-11T19:54:28.297+0000",
                    "started": "2022-05-11T19:54:28.296+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "769270",
                    "issueId": "13443218"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13443218/worklog/769271",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade closed pull request #13068: ARROW-16473: [Go] fixing memory leak in serializedPageReader\nURL: https://github.com/apache/arrow/pull/13068\n\n\n",
                    "created": "2022-05-11T19:55:49.758+0000",
                    "updated": "2022-05-11T19:55:49.758+0000",
                    "started": "2022-05-11T19:55:49.758+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "769271",
                    "issueId": "13443218"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13443218/worklog/769272",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on PR #13068:\nURL: https://github.com/apache/arrow/pull/13068#issuecomment-1124230142\n\n   Thanks @minyoung!\n\n\n",
                    "created": "2022-05-11T19:56:03.927+0000",
                    "updated": "2022-05-11T19:56:03.927+0000",
                    "started": "2022-05-11T19:56:03.926+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "769272",
                    "issueId": "13443218"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13443218/worklog/769297",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "minyoung commented on PR #13068:\nURL: https://github.com/apache/arrow/pull/13068#issuecomment-1124286633\n\n   Thanks for the thorough review and comments @zeroshade!\n\n\n",
                    "created": "2022-05-11T20:55:21.507+0000",
                    "updated": "2022-05-11T20:55:21.507+0000",
                    "started": "2022-05-11T20:55:21.507+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "769297",
                    "issueId": "13443218"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13443218/worklog/770204",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on PR #13068:\nURL: https://github.com/apache/arrow/pull/13068#issuecomment-1126115204\n\n   Benchmark runs are scheduled for baseline = 21de30e881d941ceba5fbe8b8768e80dd0b27721 and contender = bb190bbc345547aefe4aec3e1bc878c645c2cc50. bb190bbc345547aefe4aec3e1bc878c645c2cc50 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/54fc771083084b1d85d53c826bd7d0f3...498eb302ebd4454bb77499a4afc78cca/)\n   [Failed :arrow_down:0.08% :arrow_up:0.04%] [test-mac-arm](https://conbench.ursa.dev/compare/runs/5f435bb59ede488b9ffbf3fa4ae8d399...2a1ef32e05cd47748269cf63c99105d1/)\n   [Failed :arrow_down:0.0% :arrow_up:0.36%] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/5aa8f6e382bb463289829fd5cd85051a...a9a0a705d10544c481b3334217c24a66/)\n   [Finished :arrow_down:1.34% :arrow_up:0.08%] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/a465389b462b4cceb1bfe297873357db...d6c31744607140f5910589b41147104e/)\n   Buildkite builds:\n   [Finished] [`bb190bbc` ec2-t3-xlarge-us-east-2](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ec2-t3-xlarge-us-east-2/builds/742)\n   [Failed] [`bb190bbc` test-mac-arm](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-test-mac-arm/builds/739)\n   [Finished] [`bb190bbc` ursa-i9-9960x](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-i9-9960x/builds/729)\n   [Finished] [`bb190bbc` ursa-thinkcentre-m75q](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-thinkcentre-m75q/builds/744)\n   [Finished] [`21de30e8` ec2-t3-xlarge-us-east-2](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ec2-t3-xlarge-us-east-2/builds/741)\n   [Finished] [`21de30e8` test-mac-arm](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-test-mac-arm/builds/738)\n   [Failed] [`21de30e8` ursa-i9-9960x](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-i9-9960x/builds/728)\n   [Finished] [`21de30e8` ursa-thinkcentre-m75q](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-thinkcentre-m75q/builds/743)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python, R. Runs only benchmarks with cloud = True\n   test-mac-arm: Supported benchmark langs: C++, Python, R\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n",
                    "created": "2022-05-13T14:21:57.093+0000",
                    "updated": "2022-05-13T14:21:57.093+0000",
                    "started": "2022-05-13T14:21:57.092+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "770204",
                    "issueId": "13443218"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 8400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@19e5eb[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5b3ba932[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@77606b8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@1025d5d[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2a4fec1e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1ed32dd4[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@29a7bb70[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3adcf3ac[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6f26c7f5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@689cea48[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7c74b010[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@21e86da1[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 8400,
        "customfield_12312520": null,
        "customfield_12312521": "Wed May 11 19:55:48 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": [
            "Go"
        ],
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-05-11T19:55:48.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-16473/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2022-05-04T23:47:17.000+0000",
        "updated": "2022-05-13T14:21:57.000+0000",
        "timeoriginalestimate": null,
        "description": "{code:go}\r\npackage main_test\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"os\"\r\n\t\"testing\"\r\n\r\n\t\"github.com/apache/arrow/go/v8/arrow/memory\"\r\n\t\"github.com/apache/arrow/go/v8/parquet\"\r\n\t\"github.com/apache/arrow/go/v8/parquet/file\"\r\n\t\"github.com/apache/arrow/go/v8/parquet/pqarrow\"\r\n)\r\n\r\nfunc TestParquetReading(t *testing.T) {\r\n\tctx := context.Background()\r\n\tmem := memory.NewCheckedAllocator(memory.DefaultAllocator)\r\n\tdefer mem.AssertSize(t, 0)\r\n\r\n\tf, err := os.Open(\"test.parquet\")\r\n\tif err != nil {\r\n\t\tt.Fatal(err)\r\n\t}\r\n\tdefer f.Close()\r\n\r\n\tpf, err := file.NewParquetReader(\r\n\t\tf,\r\n\t\t// Note: use the provided memory allocator\r\n\t\tfile.WithReadProps(parquet.NewReaderProperties(mem)),\r\n\t)\r\n\tif err != nil {\r\n\t\tt.Fatal(err)\r\n\t}\r\n\tdefer pf.Close()\r\n\r\n\tr, err := pqarrow.NewFileReader(pf, pqarrow.ArrowReadProperties{}, mem)\r\n\tif err != nil {\r\n\t\tt.Fatal(err)\r\n\t}\r\n\r\n\ttable, err := r.ReadTable(ctx)\r\n\tif err != nil {\r\n\t\tt.Fatal(err)\r\n\t}\r\n\tdefer table.Release()\r\n}\r\n{code}\r\n",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 8400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Go] Memory leak in parquet page reading",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13443218/comment/17535087",
                    "id": "17535087",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=zeroshade",
                        "name": "zeroshade",
                        "key": "zeroshade",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=zeroshade&avatarId=31230",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zeroshade&avatarId=31230",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zeroshade&avatarId=31230",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zeroshade&avatarId=31230"
                        },
                        "displayName": "Matthew Topol",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 13068\n[https://github.com/apache/arrow/pull/13068]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=zeroshade",
                        "name": "zeroshade",
                        "key": "zeroshade",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=zeroshade&avatarId=31230",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zeroshade&avatarId=31230",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zeroshade&avatarId=31230",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zeroshade&avatarId=31230"
                        },
                        "displayName": "Matthew Topol",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2022-05-11T19:55:48.852+0000",
                    "updated": "2022-05-11T19:55:48.852+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z122g0:",
        "customfield_12314139": null
    }
}