{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13442672",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13442672",
    "key": "ARROW-16430",
    "fields": {
        "fixVersions": [],
        "resolution": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350591",
                "id": "12350591",
                "description": "",
                "name": "7.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-02-03"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12639106",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12639106",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "outwardIssue": {
                    "id": "13438052",
                    "key": "ARROW-16131",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13438052",
                    "fields": {
                        "summary": "[C++] Record batch specific metadata is not saved in IPC file",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                            "id": "1",
                            "description": "A problem which impairs or prevents the functions of the product.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                            "name": "Bug",
                            "subtask": false,
                            "avatarId": 21133
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=niyue",
            "name": "niyue",
            "key": "niyue",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=niyue&avatarId=48220",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=niyue&avatarId=48220",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=niyue&avatarId=48220",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=niyue&avatarId=48220"
            },
            "displayName": "Yue Ni",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/3",
            "description": "This issue is being actively worked on at the moment by the assignee.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/inprogress.png",
            "name": "In Progress",
            "id": "3",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/4",
                "id": 4,
                "key": "indeterminate",
                "colorName": "yellow",
                "name": "In Progress"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=niyue",
            "name": "niyue",
            "key": "niyue",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=niyue&avatarId=48220",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=niyue&avatarId=48220",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=niyue&avatarId=48220",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=niyue&avatarId=48220"
            },
            "displayName": "Yue Ni",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=niyue",
            "name": "niyue",
            "key": "niyue",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=niyue&avatarId=48220",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=niyue&avatarId=48220",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=niyue&avatarId=48220",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=niyue&avatarId=48220"
            },
            "displayName": "Yue Ni",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "aggregateprogress": {
            "progress": 29400,
            "total": 29400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 29400,
            "total": 29400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-16430/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 49,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13442672/worklog/764737",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "niyue opened a new pull request, #13041:\nURL: https://github.com/apache/arrow/pull/13041\n\n   In ARROW-16131, C++ APIs were added so that users can read/write record batch custom metadata for IPC file. In this PR, pyarrow APIs are added so that python users can take advantage of these APIs.\n\n\n",
                    "created": "2022-05-01T06:31:08.253+0000",
                    "updated": "2022-05-01T06:31:08.253+0000",
                    "started": "2022-05-01T06:31:08.252+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "764737",
                    "issueId": "13442672"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13442672/worklog/764738",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13041:\nURL: https://github.com/apache/arrow/pull/13041#issuecomment-1114147489\n\n   https://issues.apache.org/jira/browse/ARROW-16430\n\n\n",
                    "created": "2022-05-01T06:31:26.667+0000",
                    "updated": "2022-05-01T06:31:26.667+0000",
                    "started": "2022-05-01T06:31:26.667+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "764738",
                    "issueId": "13442672"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13442672/worklog/764739",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13041:\nURL: https://github.com/apache/arrow/pull/13041#issuecomment-1114147497\n\n   :warning: Ticket **has not been started in JIRA**, please click 'Start Progress'.\n\n\n",
                    "created": "2022-05-01T06:31:28.517+0000",
                    "updated": "2022-05-01T06:31:28.517+0000",
                    "started": "2022-05-01T06:31:28.517+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "764739",
                    "issueId": "13442672"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13442672/worklog/764742",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "niyue commented on code in PR #13041:\nURL: https://github.com/apache/arrow/pull/13041#discussion_r862430522\n\n\n##########\ncpp/src/arrow/ipc/writer.h:\n##########\n@@ -104,8 +104,7 @@ class ARROW_EXPORT RecordBatchWriter {\n   virtual Status WriteRecordBatch(\n       const RecordBatch& batch,\n       const std::shared_ptr<const KeyValueMetadata>& custom_metadata) {\n-    return Status::NotImplemented(\n-        \"Write record batch with custom metadata not implemented\");\n+    return WriteRecordBatch(batch);\n\nReview Comment:\n   In https://github.com/apache/arrow/pull/12812, @pitrou suggested to ignore the custom_metadata by default. By I somehow missed that part and the default implementation is throwing an error. When I was adding this API in pyarrow, I found one test case failed (https://github.com/apache/arrow/blob/master/python/pyarrow/tests/test_csv.py#L1895). And in this csv test case, it uses the `CsvWriter` which doesn't implement this API signature.\r\n   \r\n   Since storing custom metadata is an IPC feature, probably other serialization won't support this so far, I realize probably we should switch the default implementation to discarding the provided custom_metadata.\n\n\n\n",
                    "created": "2022-05-01T06:40:53.952+0000",
                    "updated": "2022-05-01T06:40:53.952+0000",
                    "started": "2022-05-01T06:40:53.952+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "764742",
                    "issueId": "13442672"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13442672/worklog/764743",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "niyue commented on code in PR #13041:\nURL: https://github.com/apache/arrow/pull/13041#discussion_r862430522\n\n\n##########\ncpp/src/arrow/ipc/writer.h:\n##########\n@@ -104,8 +104,7 @@ class ARROW_EXPORT RecordBatchWriter {\n   virtual Status WriteRecordBatch(\n       const RecordBatch& batch,\n       const std::shared_ptr<const KeyValueMetadata>& custom_metadata) {\n-    return Status::NotImplemented(\n-        \"Write record batch with custom metadata not implemented\");\n+    return WriteRecordBatch(batch);\n\nReview Comment:\n   In https://github.com/apache/arrow/pull/12812, @pitrou [suggested](https://github.com/apache/arrow/pull/12812#issuecomment-1097832538) to ignore the custom_metadata by default. By I somehow missed that part and the default implementation is throwing an error. When I was adding this API in pyarrow, I found one test case failed (https://github.com/apache/arrow/blob/master/python/pyarrow/tests/test_csv.py#L1895). And in this csv test case, it uses the `CsvWriter` which doesn't implement this API signature.\r\n   \r\n   Since storing custom metadata is an IPC feature, probably other serialization won't support this so far, I realize probably we should switch the default implementation to discarding the provided custom_metadata.\n\n\n\n",
                    "created": "2022-05-01T06:41:23.999+0000",
                    "updated": "2022-05-01T06:41:23.999+0000",
                    "started": "2022-05-01T06:41:23.999+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "764743",
                    "issueId": "13442672"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13442672/worklog/764744",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "niyue commented on code in PR #13041:\nURL: https://github.com/apache/arrow/pull/13041#discussion_r862431242\n\n\n##########\npython/pyarrow/includes/libarrow.pxd:\n##########\n@@ -794,6 +794,10 @@ cdef extern from \"arrow/api.h\" namespace \"arrow\" nogil:\n         shared_ptr[CRecordBatch] Slice(int64_t offset)\n         shared_ptr[CRecordBatch] Slice(int64_t offset, int64_t length)\n \n+    cdef cppclass CRecordBatchWithMetadata\" arrow::RecordBatchWithMetadata\":\n+        shared_ptr[CRecordBatch] batch\n+        const shared_ptr[const CKeyValueMetadata] custom_metadata\n\nReview Comment:\n   In C++, there is no `const` qualifier for this field. However, Cython reports some const assignment failure due to this, I read the code, and found several similar TODO items (https://github.com/apache/arrow/blob/2a2c0873b3ae62d2d08225cc88e53ae004864a7f/python/pyarrow/includes/libarrow.pxd#L415, https://github.com/apache/arrow/blob/2a2c0873b3ae62d2d08225cc88e53ae004864a7f/python/pyarrow/includes/libarrow.pxd#L462) about this part. \r\n   \r\n   I am not familiar with Cython at all, and have to add the `const` qualifier to make it work at first. Please advise how this could be revised. Thanks.\n\n\n\n",
                    "created": "2022-05-01T06:47:05.148+0000",
                    "updated": "2022-05-01T06:47:05.148+0000",
                    "started": "2022-05-01T06:47:05.148+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "764744",
                    "issueId": "13442672"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13442672/worklog/764745",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "niyue commented on code in PR #13041:\nURL: https://github.com/apache/arrow/pull/13041#discussion_r862431242\n\n\n##########\npython/pyarrow/includes/libarrow.pxd:\n##########\n@@ -794,6 +794,10 @@ cdef extern from \"arrow/api.h\" namespace \"arrow\" nogil:\n         shared_ptr[CRecordBatch] Slice(int64_t offset)\n         shared_ptr[CRecordBatch] Slice(int64_t offset, int64_t length)\n \n+    cdef cppclass CRecordBatchWithMetadata\" arrow::RecordBatchWithMetadata\":\n+        shared_ptr[CRecordBatch] batch\n+        const shared_ptr[const CKeyValueMetadata] custom_metadata\n\nReview Comment:\n   In C++, there is no `const` qualifier for this field. However, Cython reports some const assignment failure due to this, I read the code, and found several similar TODO items about this part:\r\n   https://github.com/apache/arrow/blob/2a2c0873b3ae62d2d08225cc88e53ae004864a7f/python/pyarrow/includes/libarrow.pxd#L415, https://github.com/apache/arrow/blob/2a2c0873b3ae62d2d08225cc88e53ae004864a7f/python/pyarrow/includes/libarrow.pxd#L462\r\n   \r\n   I am not familiar with Cython at all, and have to add the `const` qualifier to make it work at first. Please advise how this could be revised. Thanks.\n\n\n\n",
                    "created": "2022-05-01T06:47:40.063+0000",
                    "updated": "2022-05-01T06:47:40.063+0000",
                    "started": "2022-05-01T06:47:40.062+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "764745",
                    "issueId": "13442672"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13442672/worklog/765873",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13041:\nURL: https://github.com/apache/arrow/pull/13041#discussion_r864589296\n\n\n##########\ncpp/src/arrow/ipc/writer.h:\n##########\n@@ -104,8 +104,7 @@ class ARROW_EXPORT RecordBatchWriter {\n   virtual Status WriteRecordBatch(\n       const RecordBatch& batch,\n       const std::shared_ptr<const KeyValueMetadata>& custom_metadata) {\n-    return Status::NotImplemented(\n-        \"Write record batch with custom metadata not implemented\");\n+    return WriteRecordBatch(batch);\n\nReview Comment:\n   I think it's ok to return `Status::NotImplemented`, but of course as long as there are no regressions in other components :-)\n\n\n\n",
                    "created": "2022-05-04T08:48:27.991+0000",
                    "updated": "2022-05-04T08:48:27.991+0000",
                    "started": "2022-05-04T08:48:27.990+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "765873",
                    "issueId": "13442672"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13442672/worklog/765874",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13041:\nURL: https://github.com/apache/arrow/pull/13041#discussion_r864590676\n\n\n##########\npython/pyarrow/includes/libarrow.pxd:\n##########\n@@ -794,6 +794,10 @@ cdef extern from \"arrow/api.h\" namespace \"arrow\" nogil:\n         shared_ptr[CRecordBatch] Slice(int64_t offset)\n         shared_ptr[CRecordBatch] Slice(int64_t offset, int64_t length)\n \n+    cdef cppclass CRecordBatchWithMetadata\" arrow::RecordBatchWithMetadata\":\n+        shared_ptr[CRecordBatch] batch\n+        const shared_ptr[const CKeyValueMetadata] custom_metadata\n\nReview Comment:\n   I think it's ok to add the `const`. You can add a comment explaining this trick.\n\n\n\n",
                    "created": "2022-05-04T08:50:03.023+0000",
                    "updated": "2022-05-04T08:50:03.023+0000",
                    "started": "2022-05-04T08:50:03.022+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "765874",
                    "issueId": "13442672"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13442672/worklog/767483",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "niyue commented on code in PR #13041:\nURL: https://github.com/apache/arrow/pull/13041#discussion_r867283915\n\n\n##########\ncpp/src/arrow/ipc/writer.h:\n##########\n@@ -104,8 +104,7 @@ class ARROW_EXPORT RecordBatchWriter {\n   virtual Status WriteRecordBatch(\n       const RecordBatch& batch,\n       const std::shared_ptr<const KeyValueMetadata>& custom_metadata) {\n-    return Status::NotImplemented(\n-        \"Write record batch with custom metadata not implemented\");\n+    return WriteRecordBatch(batch);\n\nReview Comment:\n   It won't cause crash but this default implementation (ignoring custom_metadata if not supported) seems making higher level binding easier to write. Otherwise, for example, pyarrow's implementation will need to choose which API to use like this:\r\n   ```\r\n   def write_batch(self, batch, custom_metadata=None):\r\n      if (custom_metadata):\r\n        WriteRecordBatch(batch, custom_metadata);\r\n      else:\r\n        WriteRecordBatch(batch);\r\n   ```\r\n   It seems this will be a pattern for all higher level bindings, which I think probably indicates this could be handled in lower level API, so that higher level binding could always be implemented like this:\r\n   ```\r\n    def write_batch(self, batch, custom_metadata=None):\r\n        WriteRecordBatch(batch, custom_metadata);\r\n   ```\r\n   What do you think?\n\n\n\n",
                    "created": "2022-05-07T01:27:18.887+0000",
                    "updated": "2022-05-07T01:27:18.887+0000",
                    "started": "2022-05-07T01:27:18.887+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "767483",
                    "issueId": "13442672"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13442672/worklog/767484",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "niyue commented on code in PR #13041:\nURL: https://github.com/apache/arrow/pull/13041#discussion_r867284969\n\n\n##########\npython/pyarrow/includes/libarrow.pxd:\n##########\n@@ -794,6 +794,10 @@ cdef extern from \"arrow/api.h\" namespace \"arrow\" nogil:\n         shared_ptr[CRecordBatch] Slice(int64_t offset)\n         shared_ptr[CRecordBatch] Slice(int64_t offset, int64_t length)\n \n+    cdef cppclass CRecordBatchWithMetadata\" arrow::RecordBatchWithMetadata\":\n+        shared_ptr[CRecordBatch] batch\n+        const shared_ptr[const CKeyValueMetadata] custom_metadata\n\nReview Comment:\n   Thanks. Comment is added to explain this.\n\n\n\n",
                    "created": "2022-05-07T01:36:34.758+0000",
                    "updated": "2022-05-07T01:36:34.758+0000",
                    "started": "2022-05-07T01:36:34.758+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "767484",
                    "issueId": "13442672"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13442672/worklog/768412",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13041:\nURL: https://github.com/apache/arrow/pull/13041#discussion_r869082265\n\n\n##########\ncpp/src/arrow/ipc/writer.h:\n##########\n@@ -104,8 +104,7 @@ class ARROW_EXPORT RecordBatchWriter {\n   virtual Status WriteRecordBatch(\n       const RecordBatch& batch,\n       const std::shared_ptr<const KeyValueMetadata>& custom_metadata) {\n-    return Status::NotImplemented(\n-        \"Write record batch with custom metadata not implemented\");\n+    return WriteRecordBatch(batch);\n\nReview Comment:\n   Well, the default implementation can then be:\r\n   ```c++\r\n     virtual Status WriteRecordBatch(\r\n         const RecordBatch& batch,\r\n         const std::shared_ptr<const KeyValueMetadata>& custom_metadata) {\r\n       if (custom_metadata == nullptr) {\r\n         return WriteRecordBatch(batch);\r\n       }\r\n       return Status::NotImplemented(\r\n           \"Write record batch with custom metadata not implemented\");\r\n     }\r\n   ```\n\n\n\n",
                    "created": "2022-05-10T10:35:31.176+0000",
                    "updated": "2022-05-10T10:35:31.176+0000",
                    "started": "2022-05-10T10:35:31.176+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "768412",
                    "issueId": "13442672"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13442672/worklog/768415",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13041:\nURL: https://github.com/apache/arrow/pull/13041#discussion_r869084288\n\n\n##########\npython/pyarrow/_flight.pyx:\n##########\n@@ -977,22 +977,28 @@ cdef class MetadataRecordBatchWriter(_CRecordBatchWriter):\n             check_flight_status(\n                 self._writer().WriteMetadata(c_buf))\n \n-    def write_batch(self, RecordBatch batch):\n+    def write_batch(self, RecordBatch batch, custom_metadata=None):\n         \"\"\"\n         Write RecordBatch to stream.\n \n         Parameters\n         ----------\n         batch : RecordBatch\n         \"\"\"\n+\n         # Override superclass method to use check_flight_status so we\n         # can generate FlightWriteSizeExceededError. We don't do this\n         # for write_table as callers who intend to handle the error\n         # and retry with a smaller batch should be working with\n         # individual batches to have control.\n+\n+        if not (custom_metadata is None or isinstance(custom_metadata, KeyValueMetadata)):\n+            custom_metadata = KeyValueMetadata(custom_metadata)\n\nReview Comment:\n   I think you can use `ensure_metadata` to abstract these checks away.\n\n\n\n",
                    "created": "2022-05-10T10:38:06.444+0000",
                    "updated": "2022-05-10T10:38:06.444+0000",
                    "started": "2022-05-10T10:38:06.444+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "768415",
                    "issueId": "13442672"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13442672/worklog/768416",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13041:\nURL: https://github.com/apache/arrow/pull/13041#discussion_r869085032\n\n\n##########\npython/pyarrow/ipc.pxi:\n##########\n@@ -471,17 +471,22 @@ cdef class _CRecordBatchWriter(_Weakrefable):\n         else:\n             raise ValueError(type(table_or_batch))\n \n-    def write_batch(self, RecordBatch batch):\n+    def write_batch(self, RecordBatch batch, custom_metadata=None):\n         \"\"\"\n         Write RecordBatch to stream.\n \n         Parameters\n         ----------\n         batch : RecordBatch\n+        custom_metadata : dict\n\nReview Comment:\n   Should this be perhaps\r\n   ```suggestion\r\n           custom_metadata : KeyValueMetadata or dict\r\n   ```\n\n\n\n",
                    "created": "2022-05-10T10:39:02.509+0000",
                    "updated": "2022-05-10T10:39:02.509+0000",
                    "started": "2022-05-10T10:39:02.509+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "768416",
                    "issueId": "13442672"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13442672/worklog/768418",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13041:\nURL: https://github.com/apache/arrow/pull/13041#discussion_r869085637\n\n\n##########\npython/pyarrow/ipc.pxi:\n##########\n@@ -900,6 +925,31 @@ cdef class _RecordBatchFileReader(_Weakrefable):\n     # time has passed\n     get_record_batch = get_batch\n \n+    def get_batch_with_custom_metadata(self, int i):\n+        \"\"\"\n+        Read the record batch with the given index along with its custom metadata\n+\n+        Parameters\n+        ----------\n+        i : int\n+            The index of the record batch in the IPC file.\n+\n+        Returns\n+        -------\n+        batch : RecordBatch\n+        custom_metadata: dict\n\nReview Comment:\n   @jorisvandenbossche Is this the right Numpydoc syntax when a namedtuple is returned?\n\n\n\n",
                    "created": "2022-05-10T10:39:51.616+0000",
                    "updated": "2022-05-10T10:39:51.616+0000",
                    "started": "2022-05-10T10:39:51.616+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "768418",
                    "issueId": "13442672"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13442672/worklog/768419",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13041:\nURL: https://github.com/apache/arrow/pull/13041#discussion_r869087167\n\n\n##########\npython/pyarrow/tests/test_flight.py:\n##########\n@@ -2027,6 +2027,27 @@ def test_large_descriptor():\n             client.do_exchange(large_descriptor)\n \n \n+def test_write_batch_custom_metadata():\n+    data = pa.Table.from_arrays([\n+        pa.array(range(0, 10 * 1024))\n+    ], names=[\"a\"])\n+    batches = data.to_batches()\n+\n+    with ExchangeFlightServer() as server, \\\n+            FlightClient((\"localhost\", server.port)) as client:\n+        descriptor = flight.FlightDescriptor.for_command(b\"put\")\n+        writer, reader = client.do_exchange(descriptor)\n+        with writer:\n+            writer.begin(data.schema)\n+            for i, batch in enumerate(batches):\n+                writer.write_batch(batch, {\"batch_id\": str(i)})\n+            writer.done_writing()\n+            chunk = reader.read_chunk()\n+            assert chunk.data is None\n+            expected_buf = str(len(batches)).encode(\"utf-8\")\n+            assert chunk.app_metadata == expected_buf\n\nReview Comment:\n   It's not clear to me this test is actually ensuring the metadata was sent and received, am I missing something?\n\n\n\n",
                    "created": "2022-05-10T10:41:31.845+0000",
                    "updated": "2022-05-10T10:41:31.845+0000",
                    "started": "2022-05-10T10:41:31.845+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "768419",
                    "issueId": "13442672"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13442672/worklog/768421",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on PR #13041:\nURL: https://github.com/apache/arrow/pull/13041#issuecomment-1122225926\n\n   By the way, this PR addresses `RecordBatchFileReader` but not `RecordBatchReader`. Do you plan to do that as well?\n\n\n",
                    "created": "2022-05-10T10:45:53.318+0000",
                    "updated": "2022-05-10T10:45:53.318+0000",
                    "started": "2022-05-10T10:45:53.318+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "768421",
                    "issueId": "13442672"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13442672/worklog/769426",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "niyue commented on code in PR #13041:\nURL: https://github.com/apache/arrow/pull/13041#discussion_r870968050\n\n\n##########\ncpp/src/arrow/ipc/writer.h:\n##########\n@@ -104,8 +104,7 @@ class ARROW_EXPORT RecordBatchWriter {\n   virtual Status WriteRecordBatch(\n       const RecordBatch& batch,\n       const std::shared_ptr<const KeyValueMetadata>& custom_metadata) {\n-    return Status::NotImplemented(\n-        \"Write record batch with custom metadata not implemented\");\n+    return WriteRecordBatch(batch);\n\nReview Comment:\n   Change the default implementation according to suggestion.\n\n\n\n",
                    "created": "2022-05-12T05:42:32.020+0000",
                    "updated": "2022-05-12T05:42:32.020+0000",
                    "started": "2022-05-12T05:42:32.020+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "769426",
                    "issueId": "13442672"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13442672/worklog/769427",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "niyue commented on code in PR #13041:\nURL: https://github.com/apache/arrow/pull/13041#discussion_r870968165\n\n\n##########\npython/pyarrow/ipc.pxi:\n##########\n@@ -471,17 +471,22 @@ cdef class _CRecordBatchWriter(_Weakrefable):\n         else:\n             raise ValueError(type(table_or_batch))\n \n-    def write_batch(self, RecordBatch batch):\n+    def write_batch(self, RecordBatch batch, custom_metadata=None):\n         \"\"\"\n         Write RecordBatch to stream.\n \n         Parameters\n         ----------\n         batch : RecordBatch\n+        custom_metadata : dict\n\nReview Comment:\n   Fixed\n\n\n\n",
                    "created": "2022-05-12T05:42:47.047+0000",
                    "updated": "2022-05-12T05:42:47.047+0000",
                    "started": "2022-05-12T05:42:47.045+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "769427",
                    "issueId": "13442672"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13442672/worklog/769429",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "niyue commented on code in PR #13041:\nURL: https://github.com/apache/arrow/pull/13041#discussion_r870974565\n\n\n##########\npython/pyarrow/tests/test_flight.py:\n##########\n@@ -2027,6 +2027,27 @@ def test_large_descriptor():\n             client.do_exchange(large_descriptor)\n \n \n+def test_write_batch_custom_metadata():\n+    data = pa.Table.from_arrays([\n+        pa.array(range(0, 10 * 1024))\n+    ], names=[\"a\"])\n+    batches = data.to_batches()\n+\n+    with ExchangeFlightServer() as server, \\\n+            FlightClient((\"localhost\", server.port)) as client:\n+        descriptor = flight.FlightDescriptor.for_command(b\"put\")\n+        writer, reader = client.do_exchange(descriptor)\n+        with writer:\n+            writer.begin(data.schema)\n+            for i, batch in enumerate(batches):\n+                writer.write_batch(batch, {\"batch_id\": str(i)})\n+            writer.done_writing()\n+            chunk = reader.read_chunk()\n+            assert chunk.data is None\n+            expected_buf = str(len(batches)).encode(\"utf-8\")\n+            assert chunk.app_metadata == expected_buf\n\nReview Comment:\n   You are correct here I didn't verify the metadata was received. I really should point this out earlier. \r\n   \r\n   Initially, I don't want to change the API in arrow flight because it is not that relevant for this PR, but Cython complained the number of arguments were incorrect in one of arrow flight's usage after I added an overloaded `WriteRecordBatch` API to the `CRecordBatchWriter`, so I made a slight change to the `write_batch` API in arrow flight implementation, and I would like to write a test case to cover this change but I didn't want to make too much change about other readers in C++ in this PR so I wasn't able to add more assertion in this test case.\r\n   \r\n   Now I rolled back the API change to the arrow flight's `write_batch` and removed this test case completely. I am not very familiar with arrow flight's API about this part yet and may have to submit other PR later if needed.\n\n\n\n",
                    "created": "2022-05-12T05:55:48.016+0000",
                    "updated": "2022-05-12T05:55:48.016+0000",
                    "started": "2022-05-12T05:55:48.016+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "769429",
                    "issueId": "13442672"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 29400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@f18332d[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2be6ca04[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@24482971[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@39637116[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@251a8dc3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@70ba3af1[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@15dc9636[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3795be5a[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@469049fe[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@675c8e6f[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@16c0c994[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@cbdd278[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 29400,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Sep 30 16:24:58 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": null,
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-16430/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2022-05-01T06:26:17.000+0000",
        "updated": "2022-11-02T09:05:22.000+0000",
        "timeoriginalestimate": null,
        "description": "In https://issues.apache.org/jira/browse/ARROW-16131,\u00a0Arrow C++ APIs were added so that users can read/write record batch custom metadata for IPC file.\u00a0But pyarrow still lacks corresponding APIs for doing this.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "8h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 29400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Read/Write record batch custom metadata API in pyarrow",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13442672/comment/17611673",
                    "id": "17611673",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=chairmank",
                        "name": "chairmank",
                        "key": "chairmank",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Steve M. Kim",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "ARROW-2022 introduced a related problem with {{Schema}} messages. I am not sure whether the related problem ought to be tracked in this issue or in a separate issue, or discussed further on the mailing list.\r\n\r\nThe current [documentation|https://arrow.apache.org/docs/format/Columnar.html#custom-application-metadata] for the IPC format says\r\n{quote}We provide a\u00a0{{custom_metadata}}\u00a0field at three levels to provide a mechanism for developers to pass application-specific metadata in Arrow protocol messages. This includes\u00a0{{{}Field{}}},\u00a0{{{}Schema{}}}, and\u00a0{{{}Message{}}}.\r\n{quote}\r\nConsistent with the documentation, the FlatBuffer definitions have\u00a0two different {{custom_metadata}} fields that appear in an encapsulated message of type Schema:\r\n* The {{custom_metadata}} field within the {{Schema}} table\r\n* The {{custom_metadata}} field within the parent {{Message}} table\r\n\r\n\u00a0\r\n\r\nCurrently, the pyarrow implementation recognizes only the custom_metadata field in the Schema table and is unaware of the custom_metadata field in the parent Message table. The proposed change [https://github.com/apache/arrow/pull/13041] will use the custom_metadata field in the parent Message table for RecordBatch messages, but it won't address this ambiguity with Schema messages.\r\n\r\nI think that it is useful for {{pyarrow.Schema}} object and {{pyarrow.RecordBatch}} object to carry custom metadata, independent of their IPC message serialization. I also think that perhaps {{pyarrow.Table}} ought to carry its own custom metadata that is separate from the metadata of its {{{}Schema{}}}, because a {{Table}} is like a\u00a0{{{}RecordBatch{}}}. In the current implementation, attempting to instantiate a {{Table}} with both a metadata-enriched {{Schema}} and a separate metadata dict raises {{{}ValueError: Cannot pass both schema and metadata{}}}. This behavior is inconsistent with the documentation, which distinguishes the metadata of a Schema from the metadata of a Message.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=chairmank",
                        "name": "chairmank",
                        "key": "chairmank",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Steve M. Kim",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-09-30T16:13:14.327+0000",
                    "updated": "2022-09-30T16:13:14.327+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13442672/comment/17611680",
                    "id": "17611680",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=chairmank",
                        "name": "chairmank",
                        "key": "chairmank",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Steve M. Kim",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "After further thought and re-reading the flatbuffer definitions and c++ implementation, I rescind my statement about custom metadata on a RecordBatch. The {{RecordBatch}} table doesn't have a {{custom_metadata}} field.\r\n\r\nHowever, I still think that there is a confusion between the metadata of a {{pyarrow.Schema}} versus the metadata of a {{pyarrow.Message}} that contains a {{{}Schema{}}}. It ought to be possible to specify custom metadata when serializing a {{Schema}} as a IPC message, in exactly the same way that it ought to be possible to specify custom metadata when serializing a {{RecordBatch}} or {{DictionaryBatch}} as a IPC message.\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=chairmank",
                        "name": "chairmank",
                        "key": "chairmank",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Steve M. Kim",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-09-30T16:24:58.261+0000",
                    "updated": "2022-09-30T16:25:23.131+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|z11z2w:",
        "customfield_12314139": null
    }
}