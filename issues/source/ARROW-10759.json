{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13343113",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13343113",
    "key": "ARROW-10759",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12348823",
                "id": "12348823",
                "description": "",
                "name": "3.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-01-25"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345977",
                "id": "12345977",
                "description": "",
                "name": "2.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-10-19"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=yordan-pavlov",
            "name": "yordan-pavlov",
            "key": "yordan-pavlov",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Yordan Pavlov",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12335005",
                "id": "12335005",
                "name": "Rust - DataFusion"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=yordan-pavlov",
            "name": "yordan-pavlov",
            "key": "yordan-pavlov",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Yordan Pavlov",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=yordan-pavlov",
            "name": "yordan-pavlov",
            "key": "yordan-pavlov",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Yordan Pavlov",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 11400,
            "total": 11400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 11400,
            "total": 11400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-10759/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 19,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13343113/worklog/517550",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "yordan-pavlov opened a new pull request #8794:\nURL: https://github.com/apache/arrow/pull/8794\n\n\n   This PR implements casting string (Utf8) to date (Date32(Day)) for a more user-friendly and readable way for creating date literals in SQL queries using an expression such as `CAST('2019-01-01' AS DATE)`\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-28T18:47:25.615+0000",
                    "updated": "2020-11-28T18:47:25.615+0000",
                    "started": "2020-11-28T18:47:25.615+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "517550",
                    "issueId": "13343113"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13343113/worklog/517552",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on a change in pull request #8794:\nURL: https://github.com/apache/arrow/pull/8794#discussion_r532094059\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/cast.rs\n##########\n@@ -376,6 +378,27 @@ pub fn cast(array: &ArrayRef, to_type: &DataType) -> Result<ArrayRef> {\n             Int64 => cast_string_to_numeric::<Int64Type>(array),\n             Float32 => cast_string_to_numeric::<Float32Type>(array),\n             Float64 => cast_string_to_numeric::<Float64Type>(array),\n+            Date32(DateUnit::Day) => {\n+                use chrono::{NaiveDate, NaiveTime};\n+                let zero_time = NaiveTime::from_hms(0, 0, 0);\n\nReview comment:\n       We don't yet have convention around timezone, should we be using `Utc` instead of `NaiveTime` here? Or does it not make a difference because `Date32` only considers days since epoch?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-28T18:55:23.136+0000",
                    "updated": "2020-11-28T18:55:23.136+0000",
                    "started": "2020-11-28T18:55:23.135+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "517552",
                    "issueId": "13343113"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13343113/worklog/517553",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "yordan-pavlov commented on a change in pull request #8794:\nURL: https://github.com/apache/arrow/pull/8794#discussion_r532094849\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/cast.rs\n##########\n@@ -376,6 +378,27 @@ pub fn cast(array: &ArrayRef, to_type: &DataType) -> Result<ArrayRef> {\n             Int64 => cast_string_to_numeric::<Int64Type>(array),\n             Float32 => cast_string_to_numeric::<Float32Type>(array),\n             Float64 => cast_string_to_numeric::<Float64Type>(array),\n+            Date32(DateUnit::Day) => {\n+                use chrono::{NaiveDate, NaiveTime};\n+                let zero_time = NaiveTime::from_hms(0, 0, 0);\n\nReview comment:\n       `.and_time(zero_time)` is only necessary because the `timestamp()` method is only available on `NaiveDateTime`; time zone shouldn't mater for dates.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-28T19:04:11.658+0000",
                    "updated": "2020-11-28T19:04:11.658+0000",
                    "started": "2020-11-28T19:04:11.658+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "517553",
                    "issueId": "13343113"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13343113/worklog/517554",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #8794:\nURL: https://github.com/apache/arrow/pull/8794#issuecomment-735277538\n\n\n   https://issues.apache.org/jira/browse/ARROW-10759\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-28T19:04:44.962+0000",
                    "updated": "2020-11-28T19:04:44.962+0000",
                    "started": "2020-11-28T19:04:44.962+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "517554",
                    "issueId": "13343113"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13343113/worklog/517673",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "yordan-pavlov commented on pull request #8794:\nURL: https://github.com/apache/arrow/pull/8794#issuecomment-735429232\n\n\n   sadly one of the automated checks has failed with the following error in the GitHub runner: \"Unhandled exception. System.IO.IOException: No space left on device\" and I don't think I can retry that failed task\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-29T17:38:04.409+0000",
                    "updated": "2020-11-29T17:38:04.409+0000",
                    "started": "2020-11-29T17:38:04.408+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "517673",
                    "issueId": "13343113"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13343113/worklog/518202",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on a change in pull request #8794:\nURL: https://github.com/apache/arrow/pull/8794#discussion_r532995916\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/cast.rs\n##########\n@@ -2720,6 +2743,42 @@ mod tests {\n             .collect()\n     }\n \n+    #[test]\n+    fn test_cast_utf8_to_date32() {\n+        use chrono::{NaiveDate, NaiveTime};\n+\n+        let a = StringArray::from(vec![\n+            \"2000-01-01\",\n+            \"2000-2-2\",\n+            \"2000-00-00\",\n+            \"2000-01-01T12:00:00\",\n+            \"2000\",\n+        ]);\n+        let array = Arc::new(a) as ArrayRef;\n+        let b = cast(&array, &DataType::Date32(DateUnit::Day)).unwrap();\n+        let c = b.as_any().downcast_ref::<Date32Array>().unwrap();\n+\n+        let zero_time = NaiveTime::from_hms(0, 0, 0);\n+\n+        let date_value = (NaiveDate::from_ymd(2000, 1, 1)\n+            .and_time(zero_time)\n+            .timestamp()\n+            / SECONDS_IN_DAY) as i32;\n+        assert_eq!(true, c.is_valid(0));\n+        assert_eq!(date_value, c.value(0));\n+\n+        let date_value = (NaiveDate::from_ymd(2000, 2, 2)\n+            .and_time(zero_time)\n+            .timestamp()\n+            / SECONDS_IN_DAY) as i32;\n+        assert_eq!(true, c.is_valid(1));\n+        assert_eq!(date_value, c.value(1));\n+\n+        assert_eq!(false, c.is_valid(2));\n+        assert_eq!(false, c.is_valid(3));\n+        assert_eq!(false, c.is_valid(4));\n\nReview comment:\n       This looks great. Could we get some tests added for invalid inputs as well?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-01T00:37:46.165+0000",
                    "updated": "2020-12-01T00:37:46.165+0000",
                    "started": "2020-12-01T00:37:46.165+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "518202",
                    "issueId": "13343113"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13343113/worklog/518203",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on a change in pull request #8794:\nURL: https://github.com/apache/arrow/pull/8794#discussion_r532995916\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/cast.rs\n##########\n@@ -2720,6 +2743,42 @@ mod tests {\n             .collect()\n     }\n \n+    #[test]\n+    fn test_cast_utf8_to_date32() {\n+        use chrono::{NaiveDate, NaiveTime};\n+\n+        let a = StringArray::from(vec![\n+            \"2000-01-01\",\n+            \"2000-2-2\",\n+            \"2000-00-00\",\n+            \"2000-01-01T12:00:00\",\n+            \"2000\",\n+        ]);\n+        let array = Arc::new(a) as ArrayRef;\n+        let b = cast(&array, &DataType::Date32(DateUnit::Day)).unwrap();\n+        let c = b.as_any().downcast_ref::<Date32Array>().unwrap();\n+\n+        let zero_time = NaiveTime::from_hms(0, 0, 0);\n+\n+        let date_value = (NaiveDate::from_ymd(2000, 1, 1)\n+            .and_time(zero_time)\n+            .timestamp()\n+            / SECONDS_IN_DAY) as i32;\n+        assert_eq!(true, c.is_valid(0));\n+        assert_eq!(date_value, c.value(0));\n+\n+        let date_value = (NaiveDate::from_ymd(2000, 2, 2)\n+            .and_time(zero_time)\n+            .timestamp()\n+            / SECONDS_IN_DAY) as i32;\n+        assert_eq!(true, c.is_valid(1));\n+        assert_eq!(date_value, c.value(1));\n+\n+        assert_eq!(false, c.is_valid(2));\n+        assert_eq!(false, c.is_valid(3));\n+        assert_eq!(false, c.is_valid(4));\n\nReview comment:\n       ~This looks great. Could we get some tests added for invalid inputs as well?~ Never mind, I was misreading this.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-01T00:38:09.360+0000",
                    "updated": "2020-12-01T00:38:09.360+0000",
                    "started": "2020-12-01T00:38:09.359+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "518203",
                    "issueId": "13343113"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13343113/worklog/518205",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on a change in pull request #8794:\nURL: https://github.com/apache/arrow/pull/8794#discussion_r532996931\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/cast.rs\n##########\n@@ -376,6 +378,27 @@ pub fn cast(array: &ArrayRef, to_type: &DataType) -> Result<ArrayRef> {\n             Int64 => cast_string_to_numeric::<Int64Type>(array),\n             Float32 => cast_string_to_numeric::<Float32Type>(array),\n             Float64 => cast_string_to_numeric::<Float64Type>(array),\n+            Date32(DateUnit::Day) => {\n+                use chrono::{NaiveDate, NaiveTime};\n+                let zero_time = NaiveTime::from_hms(0, 0, 0);\n+                let string_array = array.as_any().downcast_ref::<StringArray>().unwrap();\n\nReview comment:\n       It would be nice to use `expect` rather than `unwrap` here so that we can provide an error message e.g. `.expect(\"failed to downcast to string in CAST from String to Date\")`\r\n   \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-01T00:41:01.546+0000",
                    "updated": "2020-12-01T00:41:01.546+0000",
                    "started": "2020-12-01T00:41:01.546+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "518205",
                    "issueId": "13343113"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13343113/worklog/518623",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "yordan-pavlov commented on a change in pull request #8794:\nURL: https://github.com/apache/arrow/pull/8794#discussion_r533682639\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/cast.rs\n##########\n@@ -376,6 +378,27 @@ pub fn cast(array: &ArrayRef, to_type: &DataType) -> Result<ArrayRef> {\n             Int64 => cast_string_to_numeric::<Int64Type>(array),\n             Float32 => cast_string_to_numeric::<Float32Type>(array),\n             Float64 => cast_string_to_numeric::<Float64Type>(array),\n+            Date32(DateUnit::Day) => {\n+                use chrono::{NaiveDate, NaiveTime};\n+                let zero_time = NaiveTime::from_hms(0, 0, 0);\n+                let string_array = array.as_any().downcast_ref::<StringArray>().unwrap();\n\nReview comment:\n       @andygrove thank you for taking the time to review this change; I absolutely agree with limiting use of unwrap() in general, but in this case because of `match (from_type, to_type) {` and then the specific case of `(Utf8, _) => match to_type {` it is unlikely that the cast of the array to cast to a `StringArray` will fail; or am I missing something?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-01T19:56:27.335+0000",
                    "updated": "2020-12-01T19:56:27.335+0000",
                    "started": "2020-12-01T19:56:27.335+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "518623",
                    "issueId": "13343113"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13343113/worklog/518643",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "yordan-pavlov commented on a change in pull request #8794:\nURL: https://github.com/apache/arrow/pull/8794#discussion_r533701070\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/cast.rs\n##########\n@@ -2720,6 +2743,42 @@ mod tests {\n             .collect()\n     }\n \n+    #[test]\n+    fn test_cast_utf8_to_date32() {\n+        use chrono::{NaiveDate, NaiveTime};\n+\n+        let a = StringArray::from(vec![\n+            \"2000-01-01\",\n+            \"2000-2-2\",\n+            \"2000-00-00\",\n+            \"2000-01-01T12:00:00\",\n+            \"2000\",\n+        ]);\n+        let array = Arc::new(a) as ArrayRef;\n+        let b = cast(&array, &DataType::Date32(DateUnit::Day)).unwrap();\n+        let c = b.as_any().downcast_ref::<Date32Array>().unwrap();\n+\n+        let zero_time = NaiveTime::from_hms(0, 0, 0);\n+\n+        let date_value = (NaiveDate::from_ymd(2000, 1, 1)\n+            .and_time(zero_time)\n+            .timestamp()\n+            / SECONDS_IN_DAY) as i32;\n+        assert_eq!(true, c.is_valid(0));\n+        assert_eq!(date_value, c.value(0));\n+\n+        let date_value = (NaiveDate::from_ymd(2000, 2, 2)\n+            .and_time(zero_time)\n+            .timestamp()\n+            / SECONDS_IN_DAY) as i32;\n+        assert_eq!(true, c.is_valid(1));\n+        assert_eq!(date_value, c.value(1));\n+\n+        assert_eq!(false, c.is_valid(2));\n+        assert_eq!(false, c.is_valid(3));\n+        assert_eq!(false, c.is_valid(4));\n\nReview comment:\n       I have added some more comments to make the test easier to read\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-01T20:29:21.689+0000",
                    "updated": "2020-12-01T20:29:21.689+0000",
                    "started": "2020-12-01T20:29:21.689+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "518643",
                    "issueId": "13343113"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13343113/worklog/518699",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on a change in pull request #8794:\nURL: https://github.com/apache/arrow/pull/8794#discussion_r533816728\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/cast.rs\n##########\n@@ -376,6 +378,27 @@ pub fn cast(array: &ArrayRef, to_type: &DataType) -> Result<ArrayRef> {\n             Int64 => cast_string_to_numeric::<Int64Type>(array),\n             Float32 => cast_string_to_numeric::<Float32Type>(array),\n             Float64 => cast_string_to_numeric::<Float64Type>(array),\n+            Date32(DateUnit::Day) => {\n+                use chrono::{NaiveDate, NaiveTime};\n+                let zero_time = NaiveTime::from_hms(0, 0, 0);\n+                let string_array = array.as_any().downcast_ref::<StringArray>().unwrap();\n\nReview comment:\n       I took a look at the code leading up to this and can see that the data type is coming from the array, so yes, I agree that this should be unlikely to fail :+1: \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-02T00:38:37.032+0000",
                    "updated": "2020-12-02T00:38:37.032+0000",
                    "started": "2020-12-02T00:38:37.032+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "518699",
                    "issueId": "13343113"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13343113/worklog/519119",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb closed pull request #8794:\nURL: https://github.com/apache/arrow/pull/8794\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-02T16:59:08.122+0000",
                    "updated": "2020-12-02T16:59:08.122+0000",
                    "started": "2020-12-02T16:59:08.122+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "519119",
                    "issueId": "13343113"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13343113/worklog/519260",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "seddonm1 commented on a change in pull request #8794:\nURL: https://github.com/apache/arrow/pull/8794#discussion_r534498221\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/cast.rs\n##########\n@@ -376,6 +378,27 @@ pub fn cast(array: &ArrayRef, to_type: &DataType) -> Result<ArrayRef> {\n             Int64 => cast_string_to_numeric::<Int64Type>(array),\n             Float32 => cast_string_to_numeric::<Float32Type>(array),\n             Float64 => cast_string_to_numeric::<Float64Type>(array),\n+            Date32(DateUnit::Day) => {\n+                use chrono::{NaiveDate, NaiveTime};\n+                let zero_time = NaiveTime::from_hms(0, 0, 0);\n+                let string_array = array.as_any().downcast_ref::<StringArray>().unwrap();\n+                let mut builder = PrimitiveBuilder::<Date32Type>::new(string_array.len());\n+                for i in 0..string_array.len() {\n+                    if string_array.is_null(i) {\n+                        builder.append_null()?;\n+                    } else {\n+                        match NaiveDate::parse_from_str(string_array.value(i), \"%Y-%m-%d\")\n+                        {\n+                            Ok(date) => builder.append_value(\n+                                (date.and_time(zero_time).timestamp() / SECONDS_IN_DAY)\n+                                    as i32,\n+                            )?,\n+                            Err(_) => builder.append_null()?, // not a valid date\n\nReview comment:\n       I know this has been merged but do you really want to append null and not inform user when a value cannot be correctly parsed? This is the behaviour of Spark but is very dangerous in some cases (especially dealing with money).\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-02T21:38:33.131+0000",
                    "updated": "2020-12-02T21:38:33.131+0000",
                    "started": "2020-12-02T21:38:33.131+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "519260",
                    "issueId": "13343113"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13343113/worklog/519266",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "yordan-pavlov commented on a change in pull request #8794:\nURL: https://github.com/apache/arrow/pull/8794#discussion_r534500610\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/cast.rs\n##########\n@@ -376,6 +378,27 @@ pub fn cast(array: &ArrayRef, to_type: &DataType) -> Result<ArrayRef> {\n             Int64 => cast_string_to_numeric::<Int64Type>(array),\n             Float32 => cast_string_to_numeric::<Float32Type>(array),\n             Float64 => cast_string_to_numeric::<Float64Type>(array),\n+            Date32(DateUnit::Day) => {\n+                use chrono::{NaiveDate, NaiveTime};\n+                let zero_time = NaiveTime::from_hms(0, 0, 0);\n+                let string_array = array.as_any().downcast_ref::<StringArray>().unwrap();\n+                let mut builder = PrimitiveBuilder::<Date32Type>::new(string_array.len());\n+                for i in 0..string_array.len() {\n+                    if string_array.is_null(i) {\n+                        builder.append_null()?;\n+                    } else {\n+                        match NaiveDate::parse_from_str(string_array.value(i), \"%Y-%m-%d\")\n+                        {\n+                            Ok(date) => builder.append_value(\n+                                (date.and_time(zero_time).timestamp() / SECONDS_IN_DAY)\n+                                    as i32,\n+                            )?,\n+                            Err(_) => builder.append_null()?, // not a valid date\n\nReview comment:\n       I was thinking about that as well, but this is a pattern repeated throughout the cast kernel so I thought it best to follow it; what do you think would be better to do instead?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-02T21:42:59.725+0000",
                    "updated": "2020-12-02T21:42:59.725+0000",
                    "started": "2020-12-02T21:42:59.724+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "519266",
                    "issueId": "13343113"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13343113/worklog/519268",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "seddonm1 commented on a change in pull request #8794:\nURL: https://github.com/apache/arrow/pull/8794#discussion_r534504272\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/cast.rs\n##########\n@@ -376,6 +378,27 @@ pub fn cast(array: &ArrayRef, to_type: &DataType) -> Result<ArrayRef> {\n             Int64 => cast_string_to_numeric::<Int64Type>(array),\n             Float32 => cast_string_to_numeric::<Float32Type>(array),\n             Float64 => cast_string_to_numeric::<Float64Type>(array),\n+            Date32(DateUnit::Day) => {\n+                use chrono::{NaiveDate, NaiveTime};\n+                let zero_time = NaiveTime::from_hms(0, 0, 0);\n+                let string_array = array.as_any().downcast_ref::<StringArray>().unwrap();\n+                let mut builder = PrimitiveBuilder::<Date32Type>::new(string_array.len());\n+                for i in 0..string_array.len() {\n+                    if string_array.is_null(i) {\n+                        builder.append_null()?;\n+                    } else {\n+                        match NaiveDate::parse_from_str(string_array.value(i), \"%Y-%m-%d\")\n+                        {\n+                            Ok(date) => builder.append_value(\n+                                (date.and_time(zero_time).timestamp() / SECONDS_IN_DAY)\n+                                    as i32,\n+                            )?,\n+                            Err(_) => builder.append_null()?, // not a valid date\n\nReview comment:\n       @andygrove this is a fundamental question about ANSI type SQL support vs a lower compatibility.\r\n   \r\n   Apache Spark has put a lot of work into adding ANSI behaviour to Spark (https://spark.apache.org/docs/3.0.0/sql-ref-ansi-compliance.html#type-conversion) to correct error on invalid values which I believe is the correct approach rather than the error suppression strategy which Spark inherited from Hive SQL.\r\n   \r\n   This is not the place for this discussion but it feels like a good time to address this kind of fundamental question.\r\n   \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-02T21:49:42.240+0000",
                    "updated": "2020-12-02T21:49:42.240+0000",
                    "started": "2020-12-02T21:49:42.239+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "519268",
                    "issueId": "13343113"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13343113/worklog/519270",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on a change in pull request #8794:\nURL: https://github.com/apache/arrow/pull/8794#discussion_r534510261\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/cast.rs\n##########\n@@ -376,6 +378,27 @@ pub fn cast(array: &ArrayRef, to_type: &DataType) -> Result<ArrayRef> {\n             Int64 => cast_string_to_numeric::<Int64Type>(array),\n             Float32 => cast_string_to_numeric::<Float32Type>(array),\n             Float64 => cast_string_to_numeric::<Float64Type>(array),\n+            Date32(DateUnit::Day) => {\n+                use chrono::{NaiveDate, NaiveTime};\n+                let zero_time = NaiveTime::from_hms(0, 0, 0);\n+                let string_array = array.as_any().downcast_ref::<StringArray>().unwrap();\n+                let mut builder = PrimitiveBuilder::<Date32Type>::new(string_array.len());\n+                for i in 0..string_array.len() {\n+                    if string_array.is_null(i) {\n+                        builder.append_null()?;\n+                    } else {\n+                        match NaiveDate::parse_from_str(string_array.value(i), \"%Y-%m-%d\")\n+                        {\n+                            Ok(date) => builder.append_value(\n+                                (date.and_time(zero_time).timestamp() / SECONDS_IN_DAY)\n+                                    as i32,\n+                            )?,\n+                            Err(_) => builder.append_null()?, // not a valid date\n\nReview comment:\n       Thanks @seddonm1 this is a great point and I am actually pretty familiar with Spark's CAST and ANSI CAST support and I agree that Spark has a lot of dangerous behavior that hides data errors. I wasn't really thinking about this while reviewing this PR. \r\n   \r\n   I filed https://issues.apache.org/jira/browse/ARROW-10793 to faciliate this discussion.\r\n   \r\n   \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-02T22:00:09.912+0000",
                    "updated": "2020-12-02T22:00:09.912+0000",
                    "started": "2020-12-02T22:00:09.912+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "519270",
                    "issueId": "13343113"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13343113/worklog/519278",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "seddonm1 commented on a change in pull request #8794:\nURL: https://github.com/apache/arrow/pull/8794#discussion_r534517271\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/cast.rs\n##########\n@@ -376,6 +378,27 @@ pub fn cast(array: &ArrayRef, to_type: &DataType) -> Result<ArrayRef> {\n             Int64 => cast_string_to_numeric::<Int64Type>(array),\n             Float32 => cast_string_to_numeric::<Float32Type>(array),\n             Float64 => cast_string_to_numeric::<Float64Type>(array),\n+            Date32(DateUnit::Day) => {\n+                use chrono::{NaiveDate, NaiveTime};\n+                let zero_time = NaiveTime::from_hms(0, 0, 0);\n+                let string_array = array.as_any().downcast_ref::<StringArray>().unwrap();\n+                let mut builder = PrimitiveBuilder::<Date32Type>::new(string_array.len());\n+                for i in 0..string_array.len() {\n+                    if string_array.is_null(i) {\n+                        builder.append_null()?;\n+                    } else {\n+                        match NaiveDate::parse_from_str(string_array.value(i), \"%Y-%m-%d\")\n+                        {\n+                            Ok(date) => builder.append_value(\n+                                (date.and_time(zero_time).timestamp() / SECONDS_IN_DAY)\n+                                    as i32,\n+                            )?,\n+                            Err(_) => builder.append_null()?, // not a valid date\n\nReview comment:\n       Thanks Andy. I'm keen to be more involved with DataFusion.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-02T22:13:53.210+0000",
                    "updated": "2020-12-02T22:13:53.210+0000",
                    "started": "2020-12-02T22:13:53.209+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "519278",
                    "issueId": "13343113"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13343113/worklog/519336",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on a change in pull request #8794:\nURL: https://github.com/apache/arrow/pull/8794#discussion_r534625962\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/cast.rs\n##########\n@@ -376,6 +378,27 @@ pub fn cast(array: &ArrayRef, to_type: &DataType) -> Result<ArrayRef> {\n             Int64 => cast_string_to_numeric::<Int64Type>(array),\n             Float32 => cast_string_to_numeric::<Float32Type>(array),\n             Float64 => cast_string_to_numeric::<Float64Type>(array),\n+            Date32(DateUnit::Day) => {\n+                use chrono::{NaiveDate, NaiveTime};\n+                let zero_time = NaiveTime::from_hms(0, 0, 0);\n+                let string_array = array.as_any().downcast_ref::<StringArray>().unwrap();\n+                let mut builder = PrimitiveBuilder::<Date32Type>::new(string_array.len());\n+                for i in 0..string_array.len() {\n+                    if string_array.is_null(i) {\n+                        builder.append_null()?;\n+                    } else {\n+                        match NaiveDate::parse_from_str(string_array.value(i), \"%Y-%m-%d\")\n+                        {\n+                            Ok(date) => builder.append_value(\n+                                (date.and_time(zero_time).timestamp() / SECONDS_IN_DAY)\n+                                    as i32,\n+                            )?,\n+                            Err(_) => builder.append_null()?, // not a valid date\n\nReview comment:\n       A possible solution is to add cast options (there's a JIRA open somewhere), which we can use to tweak the behaviour. We could look at the options in the C++ implementations.\r\n   One cast option would be whether failed should return errors or be converted to nulls.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-03T02:45:08.429+0000",
                    "updated": "2020-12-03T02:45:08.429+0000",
                    "started": "2020-12-03T02:45:08.429+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "519336",
                    "issueId": "13343113"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13343113/worklog/519338",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "seddonm1 commented on a change in pull request #8794:\nURL: https://github.com/apache/arrow/pull/8794#discussion_r534629774\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/cast.rs\n##########\n@@ -376,6 +378,27 @@ pub fn cast(array: &ArrayRef, to_type: &DataType) -> Result<ArrayRef> {\n             Int64 => cast_string_to_numeric::<Int64Type>(array),\n             Float32 => cast_string_to_numeric::<Float32Type>(array),\n             Float64 => cast_string_to_numeric::<Float64Type>(array),\n+            Date32(DateUnit::Day) => {\n+                use chrono::{NaiveDate, NaiveTime};\n+                let zero_time = NaiveTime::from_hms(0, 0, 0);\n+                let string_array = array.as_any().downcast_ref::<StringArray>().unwrap();\n+                let mut builder = PrimitiveBuilder::<Date32Type>::new(string_array.len());\n+                for i in 0..string_array.len() {\n+                    if string_array.is_null(i) {\n+                        builder.append_null()?;\n+                    } else {\n+                        match NaiveDate::parse_from_str(string_array.value(i), \"%Y-%m-%d\")\n+                        {\n+                            Ok(date) => builder.append_value(\n+                                (date.and_time(zero_time).timestamp() / SECONDS_IN_DAY)\n+                                    as i32,\n+                            )?,\n+                            Err(_) => builder.append_null()?, // not a valid date\n\nReview comment:\n       @nevi-me \r\n   Yes, that is definitely an option but I would hope that the default is strict with the option to relax for users that understand the risk.\r\n   \r\n   We wrote a lot of code (https://github.com/tripl-ai/arc/blob/master/src/main/scala/ai/tripl/arc/transform/TypingTransform.scala) to safely apply correct data typing from strings in Spark in a way that allows us to parse the entire dataset and collect errors per row before returning. \r\n   \r\n   This works in one of two ways (like you have described):\r\n   - a way that returns NULL for invalid conversions and list of errors for the row (which we should have done a `map[field name, error]`) which can then be addressed by the user. If any field that contains an error is not nullable then the job fails immediately.\r\n   - a ways that fails fast simulating the ANSI approach of first error found throws error (which can be very slow to debug).\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-03T02:55:54.453+0000",
                    "updated": "2020-12-03T02:55:54.453+0000",
                    "started": "2020-12-03T02:55:54.453+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "519338",
                    "issueId": "13343113"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 11400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@39f3fca8[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6c8dda2b[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@15ab7020[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@17f5bc3c[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@71587a88[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1c4cf990[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@52a8a049[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@6886f27c[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5a3859de[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@21c3bb70[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@36feede9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@6934ec58[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 11400,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Dec 02 16:59:07 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-12-02T16:59:07.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-10759/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-11-28T16:01:04.000+0000",
        "updated": "2020-12-24T19:03:44.000+0000",
        "timeoriginalestimate": null,
        "description": "If DataFusion had support for creating date literals using a cast expression such as\u00a0\r\n CAST('2019-01-01'\u00a0AS\u00a0DATE) this would allow a user-friendly way for direct (and therefore more efficient) comparison of date columns to scalar values (compared to representing dates as strings and then resorting to string comparison).\r\n I already have a basic implementation that works, just have to add some more tests.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 11400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust][DataFusion] Implement support for casting string to date in sql expressions",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13343113/comment/17242513",
                    "id": "17242513",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 8794\n[https://github.com/apache/arrow/pull/8794]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-12-02T16:59:07.986+0000",
                    "updated": "2020-12-02T16:59:07.986+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0l0l4:",
        "customfield_12314139": null
    }
}