{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13245969",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245969",
    "key": "ARROW-5988",
    "fields": {
        "parent": {
            "id": "13243176",
            "key": "ARROW-5845",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/13243176",
            "fields": {
                "summary": "[Java] Implement converter between Arrow record batches and Avro records",
                "status": {
                    "self": "https://issues.apache.org/jira/rest/api/2/status/4",
                    "description": "This issue was once resolved, but the resolution was deemed incorrect. From here issues are either marked assigned or resolved.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/reopened.png",
                    "name": "Reopened",
                    "id": "4",
                    "statusCategory": {
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                        "id": 2,
                        "key": "new",
                        "colorName": "blue-gray",
                        "name": "To Do"
                    }
                },
                "priority": {
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                    "name": "Major",
                    "id": "3"
                },
                "issuetype": {
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                    "id": "2",
                    "description": "A new feature of the product, which has yet to be developed.",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                    "name": "New Feature",
                    "subtask": false,
                    "avatarId": 21141
                }
            }
        },
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
            "name": "tianchen92",
            "key": "tianchen92",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
            },
            "displayName": "Ji Liu",
            "active": true,
            "timeZone": "Asia/Gaza"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
            "name": "tianchen92",
            "key": "tianchen92",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
            },
            "displayName": "Ji Liu",
            "active": true,
            "timeZone": "Asia/Gaza"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
            "name": "tianchen92",
            "key": "tianchen92",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
            },
            "displayName": "Ji Liu",
            "active": true,
            "timeZone": "Asia/Gaza"
        },
        "aggregateprogress": {
            "progress": 13800,
            "total": 13800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 13800,
            "total": 13800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5988/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 26,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245969/worklog/279640",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4910: ARROW-5988: [Java] Avro adapter implement simple Record type\nURL: https://github.com/apache/arrow/pull/4910\n \n \n   Related to [ARROW-5988](https://issues.apache.org/jira/browse/ARROW-5988).\r\n   \r\n   1. implement simple Record type witch only contains primitive types\r\n   2. add ByteBuffer cache in String/Bytes consumer to reduce creations.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-19T10:56:46.249+0000",
                    "updated": "2019-07-19T10:56:46.249+0000",
                    "started": "2019-07-19T10:56:46.248+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "279640",
                    "issueId": "13245969"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245969/worklog/279761",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4910: ARROW-5988: [Java] Avro adapter implement simple Record type\nURL: https://github.com/apache/arrow/pull/4910#issuecomment-513236970\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4910?src=pr&el=h1) Report\n   > Merging [#4910](https://codecov.io/gh/apache/arrow/pull/4910?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/e1559f21abfd385b56b9e5c18ba31c997ee581d7?src=pr&el=desc) will **increase** coverage by `2.15%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4910/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4910?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4910      +/-   ##\n   ==========================================\n   + Coverage   87.44%   89.59%   +2.15%     \n   ==========================================\n     Files         995      661     -334     \n     Lines      140479    96636   -43843     \n     Branches     1418        0    -1418     \n   ==========================================\n   - Hits       122841    86583   -36258     \n   + Misses      17276    10053    -7223     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4910?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [r/src/recordbatch.cpp](https://codecov.io/gh/apache/arrow/pull/4910/diff?src=pr&el=tree#diff-ci9zcmMvcmVjb3JkYmF0Y2guY3Bw) | | |\n   | [r/R/Table.R](https://codecov.io/gh/apache/arrow/pull/4910/diff?src=pr&el=tree#diff-ci9SL1RhYmxlLlI=) | | |\n   | [js/src/util/fn.ts](https://codecov.io/gh/apache/arrow/pull/4910/diff?src=pr&el=tree#diff-anMvc3JjL3V0aWwvZm4udHM=) | | |\n   | [go/arrow/array/bufferbuilder.go](https://codecov.io/gh/apache/arrow/pull/4910/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYnVmZmVyYnVpbGRlci5nbw==) | | |\n   | [r/src/symbols.cpp](https://codecov.io/gh/apache/arrow/pull/4910/diff?src=pr&el=tree#diff-ci9zcmMvc3ltYm9scy5jcHA=) | | |\n   | [rust/datafusion/src/execution/projection.rs](https://codecov.io/gh/apache/arrow/pull/4910/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vcHJvamVjdGlvbi5ycw==) | | |\n   | [rust/datafusion/src/execution/filter.rs](https://codecov.io/gh/apache/arrow/pull/4910/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vZmlsdGVyLnJz) | | |\n   | [rust/arrow/src/csv/writer.rs](https://codecov.io/gh/apache/arrow/pull/4910/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvY3N2L3dyaXRlci5ycw==) | | |\n   | [rust/datafusion/src/bin/main.rs](https://codecov.io/gh/apache/arrow/pull/4910/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9iaW4vbWFpbi5ycw==) | | |\n   | [go/arrow/ipc/file\\_reader.go](https://codecov.io/gh/apache/arrow/pull/4910/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaXBjL2ZpbGVfcmVhZGVyLmdv) | | |\n   | ... and [327 more](https://codecov.io/gh/apache/arrow/pull/4910/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4910?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4910?src=pr&el=footer). Last update [e1559f2...239f6f8](https://codecov.io/gh/apache/arrow/pull/4910?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-19T13:53:13.083+0000",
                    "updated": "2019-07-19T13:53:13.083+0000",
                    "started": "2019-07-19T13:53:13.083+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "279761",
                    "issueId": "13245969"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245969/worklog/280037",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4910: ARROW-5988: [Java] Avro adapter implement simple Record type\nURL: https://github.com/apache/arrow/pull/4910#discussion_r305567405\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/consumers/AvroStringConsumer.java\n ##########\n @@ -43,12 +44,15 @@ public AvroStringConsumer(VarCharVector vector) {\n   @Override\n   public void consume(Decoder decoder) throws IOException {\n     VarCharHolder holder = new VarCharHolder();\n-    ByteBuffer byteBuffer = decoder.readBytes(null);\n+\n+    //cacheBuffer is initialized null and create in the first consume,\n+    //if its capacity < size to read, decoder will create a new one with new capacity.\n+    cacheBuffer = decoder.readBytes(cacheBuffer);\n \n     holder.start = 0;\n-    holder.end = byteBuffer.capacity();\n-    holder.buffer = vector.getAllocator().buffer(byteBuffer.capacity());\n-    holder.buffer.setBytes(0, byteBuffer);\n+    holder.end = cacheBuffer.limit();\n+    holder.buffer = vector.getAllocator().buffer(cacheBuffer.limit());\n+    holder.buffer.setBytes(0, cacheBuffer, 0, cacheBuffer.limit());\n \n Review comment:\n   it would be nice to eliminate duplication here with VarBinary if at all possible\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-20T04:50:32.651+0000",
                    "updated": "2019-07-20T04:50:32.651+0000",
                    "started": "2019-07-20T04:50:32.651+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "280037",
                    "issueId": "13245969"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245969/worklog/280038",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4910: ARROW-5988: [Java] Avro adapter implement simple Record type\nURL: https://github.com/apache/arrow/pull/4910#discussion_r305567375\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/AvroToArrowUtils.java\n ##########\n @@ -113,7 +113,15 @@ private static ArrowType getArrowType(Type type) {\n     schema.getObjectProps().forEach((k,v) -> metadata.put(k, v.toString()));\n \n     if (type == Type.RECORD) {\n-      throw new UnsupportedOperationException();\n+      for (Schema.Field field : schema.getFields()) {\n+        final ArrowType arrowType = getArrowType(field.schema().getType());\n+        if (arrowType != null) {\n+          final FieldType fieldType = new FieldType(true, arrowType, null, null);\n+          List<Field> children = null;\n+          //TODO support complex type\n+          arrowFields.add(new Field(field.name(), fieldType, children));\n+        }\n \n Review comment:\n   should we throw on the else?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-20T04:50:32.658+0000",
                    "updated": "2019-07-20T04:50:32.658+0000",
                    "started": "2019-07-20T04:50:32.657+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "280038",
                    "issueId": "13245969"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245969/worklog/280039",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4910: ARROW-5988: [Java] Avro adapter implement simple Record type\nURL: https://github.com/apache/arrow/pull/4910#discussion_r305567620\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/AvroToArrowUtils.java\n ##########\n @@ -113,7 +113,15 @@ private static ArrowType getArrowType(Type type) {\n     schema.getObjectProps().forEach((k,v) -> metadata.put(k, v.toString()));\n \n     if (type == Type.RECORD) {\n-      throw new UnsupportedOperationException();\n+      for (Schema.Field field : schema.getFields()) {\n+        final ArrowType arrowType = getArrowType(field.schema().getType());\n+        if (arrowType != null) {\n+          final FieldType fieldType = new FieldType(true, arrowType, null, null);\n+          List<Field> children = null;\n+          //TODO support complex type\n \n Review comment:\n   ```suggestion\r\n             //TODO support complex type (i.e. nested records, lists, etc )\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-20T04:50:32.658+0000",
                    "updated": "2019-07-20T04:50:32.658+0000",
                    "started": "2019-07-20T04:50:32.657+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "280039",
                    "issueId": "13245969"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245969/worklog/280040",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4910: ARROW-5988: [Java] Avro adapter implement simple Record type\nURL: https://github.com/apache/arrow/pull/4910#discussion_r305567531\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/AvroToArrowUtils.java\n ##########\n @@ -113,7 +113,15 @@ private static ArrowType getArrowType(Type type) {\n     schema.getObjectProps().forEach((k,v) -> metadata.put(k, v.toString()));\n \n     if (type == Type.RECORD) {\n-      throw new UnsupportedOperationException();\n+      for (Schema.Field field : schema.getFields()) {\n+        final ArrowType arrowType = getArrowType(field.schema().getType());\n+        if (arrowType != null) {\n+          final FieldType fieldType = new FieldType(true, arrowType, null, null);\n \n Review comment:\n   please add comments /*parameter name = */ for  \"true\" and the null values\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-20T04:50:32.717+0000",
                    "updated": "2019-07-20T04:50:32.717+0000",
                    "started": "2019-07-20T04:50:32.716+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "280040",
                    "issueId": "13245969"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245969/worklog/280229",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4910: ARROW-5988: [Java] Avro adapter implement simple Record type\nURL: https://github.com/apache/arrow/pull/4910#discussion_r305672840\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/AvroToArrowUtils.java\n ##########\n @@ -113,7 +113,15 @@ private static ArrowType getArrowType(Type type) {\n     schema.getObjectProps().forEach((k,v) -> metadata.put(k, v.toString()));\n \n     if (type == Type.RECORD) {\n-      throw new UnsupportedOperationException();\n+      for (Schema.Field field : schema.getFields()) {\n+        final ArrowType arrowType = getArrowType(field.schema().getType());\n+        if (arrowType != null) {\n+          final FieldType fieldType = new FieldType(true, arrowType, null, null);\n+          List<Field> children = null;\n+          //TODO support complex type\n+          arrowFields.add(new Field(field.name(), fieldType, children));\n+        }\n \n Review comment:\n   Thanks, getArrowType won't return null, so I just removed if condition here.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-22T04:51:47.455+0000",
                    "updated": "2019-07-22T04:51:47.455+0000",
                    "started": "2019-07-22T04:51:47.454+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "280229",
                    "issueId": "13245969"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245969/worklog/280230",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4910: ARROW-5988: [Java] Avro adapter implement simple Record type\nURL: https://github.com/apache/arrow/pull/4910#discussion_r305673070\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/consumers/AvroStringConsumer.java\n ##########\n @@ -43,12 +44,15 @@ public AvroStringConsumer(VarCharVector vector) {\n   @Override\n   public void consume(Decoder decoder) throws IOException {\n     VarCharHolder holder = new VarCharHolder();\n-    ByteBuffer byteBuffer = decoder.readBytes(null);\n+\n+    //cacheBuffer is initialized null and create in the first consume,\n+    //if its capacity < size to read, decoder will create a new one with new capacity.\n+    cacheBuffer = decoder.readBytes(cacheBuffer);\n \n     holder.start = 0;\n-    holder.end = byteBuffer.capacity();\n-    holder.buffer = vector.getAllocator().buffer(byteBuffer.capacity());\n-    holder.buffer.setBytes(0, byteBuffer);\n+    holder.end = cacheBuffer.limit();\n+    holder.buffer = vector.getAllocator().buffer(cacheBuffer.limit());\n+    holder.buffer.setBytes(0, cacheBuffer, 0, cacheBuffer.limit());\n \n Review comment:\n   They have different type holder, seems hard to unify together?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-22T04:53:36.312+0000",
                    "updated": "2019-07-22T04:53:36.312+0000",
                    "started": "2019-07-22T04:53:36.311+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "280230",
                    "issueId": "13245969"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245969/worklog/280231",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4910: ARROW-5988: [Java] Avro adapter implement simple Record type\nURL: https://github.com/apache/arrow/pull/4910#discussion_r305673085\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/AvroToArrowUtils.java\n ##########\n @@ -113,7 +113,15 @@ private static ArrowType getArrowType(Type type) {\n     schema.getObjectProps().forEach((k,v) -> metadata.put(k, v.toString()));\n \n     if (type == Type.RECORD) {\n-      throw new UnsupportedOperationException();\n+      for (Schema.Field field : schema.getFields()) {\n+        final ArrowType arrowType = getArrowType(field.schema().getType());\n+        if (arrowType != null) {\n+          final FieldType fieldType = new FieldType(true, arrowType, null, null);\n \n Review comment:\n   Thanks, fixed.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-22T04:53:39.781+0000",
                    "updated": "2019-07-22T04:53:39.781+0000",
                    "started": "2019-07-22T04:53:39.780+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "280231",
                    "issueId": "13245969"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245969/worklog/280232",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4910: ARROW-5988: [Java] Avro adapter implement simple Record type\nURL: https://github.com/apache/arrow/pull/4910#discussion_r305673115\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/AvroToArrowUtils.java\n ##########\n @@ -113,7 +113,15 @@ private static ArrowType getArrowType(Type type) {\n     schema.getObjectProps().forEach((k,v) -> metadata.put(k, v.toString()));\n \n     if (type == Type.RECORD) {\n-      throw new UnsupportedOperationException();\n+      for (Schema.Field field : schema.getFields()) {\n+        final ArrowType arrowType = getArrowType(field.schema().getType());\n+        if (arrowType != null) {\n+          final FieldType fieldType = new FieldType(true, arrowType, null, null);\n+          List<Field> children = null;\n+          //TODO support complex type\n \n Review comment:\n   fixed.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-22T04:53:52.237+0000",
                    "updated": "2019-07-22T04:53:52.237+0000",
                    "started": "2019-07-22T04:53:52.236+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "280232",
                    "issueId": "13245969"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245969/worklog/280233",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4910: ARROW-5988: [Java] Avro adapter implement simple Record type\nURL: https://github.com/apache/arrow/pull/4910#issuecomment-513236970\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4910?src=pr&el=h1) Report\n   > Merging [#4910](https://codecov.io/gh/apache/arrow/pull/4910?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/e1559f21abfd385b56b9e5c18ba31c997ee581d7?src=pr&el=desc) will **increase** coverage by `2.16%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4910/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4910?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4910      +/-   ##\n   ==========================================\n   + Coverage   87.44%   89.61%   +2.16%     \n   ==========================================\n     Files         995      660     -335     \n     Lines      140479    96546   -43933     \n     Branches     1418        0    -1418     \n   ==========================================\n   - Hits       122846    86519   -36327     \n   + Misses      17271    10027    -7244     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4910?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/parquet/column\\_reader.cc](https://codecov.io/gh/apache/arrow/pull/4910/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2NvbHVtbl9yZWFkZXIuY2M=) | `89.48% <0%> (-2.03%)` | :arrow_down: |\n   | [cpp/src/parquet/arrow/reader.cc](https://codecov.io/gh/apache/arrow/pull/4910/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2Fycm93L3JlYWRlci5jYw==) | `85.52% <0%> (\u00f8)` | :arrow_up: |\n   | [r/src/recordbatch.cpp](https://codecov.io/gh/apache/arrow/pull/4910/diff?src=pr&el=tree#diff-ci9zcmMvcmVjb3JkYmF0Y2guY3Bw) | | |\n   | [r/R/Table.R](https://codecov.io/gh/apache/arrow/pull/4910/diff?src=pr&el=tree#diff-ci9SL1RhYmxlLlI=) | | |\n   | [js/src/util/fn.ts](https://codecov.io/gh/apache/arrow/pull/4910/diff?src=pr&el=tree#diff-anMvc3JjL3V0aWwvZm4udHM=) | | |\n   | [go/arrow/array/bufferbuilder.go](https://codecov.io/gh/apache/arrow/pull/4910/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYnVmZmVyYnVpbGRlci5nbw==) | | |\n   | [r/src/symbols.cpp](https://codecov.io/gh/apache/arrow/pull/4910/diff?src=pr&el=tree#diff-ci9zcmMvc3ltYm9scy5jcHA=) | | |\n   | [rust/datafusion/src/execution/projection.rs](https://codecov.io/gh/apache/arrow/pull/4910/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vcHJvamVjdGlvbi5ycw==) | | |\n   | [rust/datafusion/src/execution/filter.rs](https://codecov.io/gh/apache/arrow/pull/4910/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vZmlsdGVyLnJz) | | |\n   | [rust/arrow/src/csv/writer.rs](https://codecov.io/gh/apache/arrow/pull/4910/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvY3N2L3dyaXRlci5ycw==) | | |\n   | ... and [332 more](https://codecov.io/gh/apache/arrow/pull/4910/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4910?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4910?src=pr&el=footer). Last update [e1559f2...a42ffaa](https://codecov.io/gh/apache/arrow/pull/4910?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-22T05:30:28.242+0000",
                    "updated": "2019-07-22T05:30:28.242+0000",
                    "started": "2019-07-22T05:30:28.241+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "280233",
                    "issueId": "13245969"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245969/worklog/280758",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4910: ARROW-5988: [Java] Avro adapter implement simple Record type\nURL: https://github.com/apache/arrow/pull/4910#discussion_r306106131\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/AvroToArrowUtils.java\n ##########\n @@ -113,7 +113,13 @@ private static ArrowType getArrowType(Type type) {\n     schema.getObjectProps().forEach((k,v) -> metadata.put(k, v.toString()));\n \n     if (type == Type.RECORD) {\n-      throw new UnsupportedOperationException();\n+      for (Schema.Field field : schema.getFields()) {\n+        final ArrowType arrowType = getArrowType(field.schema().getType());\n+        final FieldType fieldType = new FieldType(/*nullable=*/true, arrowType, /*dictionary=*/null, /*metadata=*/null);\n \n Review comment:\n   it can be a follow-up PR but each field appears to have getObjectProps as well.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-23T02:32:37.994+0000",
                    "updated": "2019-07-23T02:32:37.994+0000",
                    "started": "2019-07-23T02:32:37.993+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "280758",
                    "issueId": "13245969"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245969/worklog/280759",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4910: ARROW-5988: [Java] Avro adapter implement simple Record type\nURL: https://github.com/apache/arrow/pull/4910#discussion_r306106172\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/AvroToArrowUtils.java\n ##########\n @@ -113,7 +113,13 @@ private static ArrowType getArrowType(Type type) {\n     schema.getObjectProps().forEach((k,v) -> metadata.put(k, v.toString()));\n \n     if (type == Type.RECORD) {\n-      throw new UnsupportedOperationException();\n+      for (Schema.Field field : schema.getFields()) {\n+        final ArrowType arrowType = getArrowType(field.schema().getType());\n+        final FieldType fieldType = new FieldType(/*nullable=*/true, arrowType, /*dictionary=*/null, /*metadata=*/null);\n \n Review comment:\n   this should be false?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-23T02:32:38.099+0000",
                    "updated": "2019-07-23T02:32:38.099+0000",
                    "started": "2019-07-23T02:32:38.098+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "280759",
                    "issueId": "13245969"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245969/worklog/280760",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4910: ARROW-5988: [Java] Avro adapter implement simple Record type\nURL: https://github.com/apache/arrow/pull/4910#discussion_r306106522\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/consumers/AvroStringConsumer.java\n ##########\n @@ -43,12 +44,15 @@ public AvroStringConsumer(VarCharVector vector) {\n   @Override\n   public void consume(Decoder decoder) throws IOException {\n     VarCharHolder holder = new VarCharHolder();\n-    ByteBuffer byteBuffer = decoder.readBytes(null);\n+\n+    //cacheBuffer is initialized null and create in the first consume,\n+    //if its capacity < size to read, decoder will create a new one with new capacity.\n+    cacheBuffer = decoder.readBytes(cacheBuffer);\n \n     holder.start = 0;\n-    holder.end = byteBuffer.capacity();\n-    holder.buffer = vector.getAllocator().buffer(byteBuffer.capacity());\n-    holder.buffer.setBytes(0, byteBuffer);\n+    holder.end = cacheBuffer.limit();\n+    holder.buffer = vector.getAllocator().buffer(cacheBuffer.limit());\n+    holder.buffer.setBytes(0, cacheBuffer, 0, cacheBuffer.limit());\n \n Review comment:\n   Hmm, we might want to go back to direct vector access or make a common some sort of common interface, this can probably be done as a follow-up (please make a JIRA so we don't forget).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-23T02:32:38.101+0000",
                    "updated": "2019-07-23T02:32:38.101+0000",
                    "started": "2019-07-23T02:32:38.101+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "280760",
                    "issueId": "13245969"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245969/worklog/280761",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4910: ARROW-5988: [Java] Avro adapter implement simple Record type\nURL: https://github.com/apache/arrow/pull/4910#discussion_r306106285\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/consumers/AvroBytesConsumer.java\n ##########\n @@ -43,12 +44,15 @@ public AvroBytesConsumer(VarBinaryVector vector) {\n   @Override\n   public void consume(Decoder decoder) throws IOException {\n     VarBinaryHolder holder = new VarBinaryHolder();\n-    ByteBuffer byteBuffer = decoder.readBytes(null);\n+\n+    //cacheBuffer is initialized null and create in the first consume,\n \n Review comment:\n   nit: space after //\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-23T02:32:38.128+0000",
                    "updated": "2019-07-23T02:32:38.128+0000",
                    "started": "2019-07-23T02:32:38.127+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "280761",
                    "issueId": "13245969"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245969/worklog/280767",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4910: ARROW-5988: [Java] Avro adapter implement simple Record type\nURL: https://github.com/apache/arrow/pull/4910#discussion_r306109460\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/consumers/AvroBytesConsumer.java\n ##########\n @@ -43,12 +44,15 @@ public AvroBytesConsumer(VarBinaryVector vector) {\n   @Override\n   public void consume(Decoder decoder) throws IOException {\n     VarBinaryHolder holder = new VarBinaryHolder();\n-    ByteBuffer byteBuffer = decoder.readBytes(null);\n+\n+    //cacheBuffer is initialized null and create in the first consume,\n \n Review comment:\n   Thanks for reminder, seems we should enhance style check for something like continues empty line which could speed up code review :)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-23T02:50:22.365+0000",
                    "updated": "2019-07-23T02:50:22.365+0000",
                    "started": "2019-07-23T02:50:22.364+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "280767",
                    "issueId": "13245969"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245969/worklog/280768",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4910: ARROW-5988: [Java] Avro adapter implement simple Record type\nURL: https://github.com/apache/arrow/pull/4910#discussion_r306109603\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/AvroToArrowUtils.java\n ##########\n @@ -113,7 +113,13 @@ private static ArrowType getArrowType(Type type) {\n     schema.getObjectProps().forEach((k,v) -> metadata.put(k, v.toString()));\n \n     if (type == Type.RECORD) {\n-      throw new UnsupportedOperationException();\n+      for (Schema.Field field : schema.getFields()) {\n+        final ArrowType arrowType = getArrowType(field.schema().getType());\n+        final FieldType fieldType = new FieldType(/*nullable=*/true, arrowType, /*dictionary=*/null, /*metadata=*/null);\n \n Review comment:\n   fixed. Now false is enough, when union type is supported, this should be true?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-23T02:51:13.003+0000",
                    "updated": "2019-07-23T02:51:13.003+0000",
                    "started": "2019-07-23T02:51:13.002+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "280768",
                    "issueId": "13245969"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245969/worklog/280769",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4910: ARROW-5988: [Java] Avro adapter implement simple Record type\nURL: https://github.com/apache/arrow/pull/4910#discussion_r306109650\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/AvroToArrowUtils.java\n ##########\n @@ -113,7 +113,13 @@ private static ArrowType getArrowType(Type type) {\n     schema.getObjectProps().forEach((k,v) -> metadata.put(k, v.toString()));\n \n     if (type == Type.RECORD) {\n-      throw new UnsupportedOperationException();\n+      for (Schema.Field field : schema.getFields()) {\n+        final ArrowType arrowType = getArrowType(field.schema().getType());\n+        final FieldType fieldType = new FieldType(/*nullable=*/true, arrowType, /*dictionary=*/null, /*metadata=*/null);\n \n Review comment:\n   Thanks, I fixed now.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-23T02:51:30.370+0000",
                    "updated": "2019-07-23T02:51:30.370+0000",
                    "started": "2019-07-23T02:51:30.369+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "280769",
                    "issueId": "13245969"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245969/worklog/280770",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4910: ARROW-5988: [Java] Avro adapter implement simple Record type\nURL: https://github.com/apache/arrow/pull/4910#discussion_r306109945\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/consumers/AvroStringConsumer.java\n ##########\n @@ -43,12 +44,15 @@ public AvroStringConsumer(VarCharVector vector) {\n   @Override\n   public void consume(Decoder decoder) throws IOException {\n     VarCharHolder holder = new VarCharHolder();\n-    ByteBuffer byteBuffer = decoder.readBytes(null);\n+\n+    //cacheBuffer is initialized null and create in the first consume,\n+    //if its capacity < size to read, decoder will create a new one with new capacity.\n+    cacheBuffer = decoder.readBytes(cacheBuffer);\n \n     holder.start = 0;\n-    holder.end = byteBuffer.capacity();\n-    holder.buffer = vector.getAllocator().buffer(byteBuffer.capacity());\n-    holder.buffer.setBytes(0, byteBuffer);\n+    holder.end = cacheBuffer.limit();\n+    holder.buffer = vector.getAllocator().buffer(cacheBuffer.limit());\n+    holder.buffer.setBytes(0, cacheBuffer, 0, cacheBuffer.limit());\n \n Review comment:\n   Sure, thanks!\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-23T02:53:10.320+0000",
                    "updated": "2019-07-23T02:53:10.320+0000",
                    "started": "2019-07-23T02:53:10.319+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "280770",
                    "issueId": "13245969"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245969/worklog/280774",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4910: ARROW-5988: [Java] Avro adapter implement simple Record type\nURL: https://github.com/apache/arrow/pull/4910#discussion_r306111143\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/AvroToArrowUtils.java\n ##########\n @@ -113,7 +113,13 @@ private static ArrowType getArrowType(Type type) {\n     schema.getObjectProps().forEach((k,v) -> metadata.put(k, v.toString()));\n \n     if (type == Type.RECORD) {\n-      throw new UnsupportedOperationException();\n+      for (Schema.Field field : schema.getFields()) {\n+        final ArrowType arrowType = getArrowType(field.schema().getType());\n+        final FieldType fieldType = new FieldType(/*nullable=*/true, arrowType, /*dictionary=*/null, /*metadata=*/null);\n \n Review comment:\n   I think when union type is supported there will need to be a check if the schema is simply a union of [null, type] then the type becomes nullable, if it is more then that it would map to the arrow union type, does that sound right?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-23T03:00:54.130+0000",
                    "updated": "2019-07-23T03:00:54.130+0000",
                    "started": "2019-07-23T03:00:54.129+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "280774",
                    "issueId": "13245969"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
            "id": "7",
            "description": "The sub-task of the issue",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
            "name": "Sub-task",
            "subtask": true,
            "avatarId": 21146
        },
        "timespent": 13800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@4a0e1cdd[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@29bc444c[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3775b2ed[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7ca00e6b[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7df8f9d1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@4d141531[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@576c34a4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@2bc3bb74[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@11cff9ac[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@7c1fdb39[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4ae0090a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7cce0339[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 13800,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Jul 24 04:43:18 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-07-24T04:43:18.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5988/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-07-19T10:52:57.000+0000",
        "updated": "2019-08-01T22:39:41.000+0000",
        "timeoriginalestimate": null,
        "description": "1.\u00a0implement simple Record type witch only contains primitive types\r\n\r\n2. add ByteBuffer cache in String/Bytes consumer to reduce creations.\u00a0",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 13800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] Avro adapter implement simple Record type ",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245969/comment/16891603",
                    "id": "16891603",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 4910\n[https://github.com/apache/arrow/pull/4910]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-07-24T04:43:18.727+0000",
                    "updated": "2019-07-24T04:43:18.727+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z04u34:",
        "customfield_12314139": null
    }
}