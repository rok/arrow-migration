{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13192575",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192575",
    "key": "ARROW-3555",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343858",
                "id": "12343858",
                "description": "",
                "name": "0.12.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-01-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=guoyuhong85",
            "name": "guoyuhong85",
            "key": "guoyuhong85",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=guoyuhong85&avatarId=36251",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=guoyuhong85&avatarId=36251",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=guoyuhong85&avatarId=36251",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=guoyuhong85&avatarId=36251"
            },
            "displayName": "Yuhong Guo",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332956",
                "id": "12332956",
                "name": "C++ - Plasma"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=guoyuhong85",
            "name": "guoyuhong85",
            "key": "guoyuhong85",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=guoyuhong85&avatarId=36251",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=guoyuhong85&avatarId=36251",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=guoyuhong85&avatarId=36251",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=guoyuhong85&avatarId=36251"
            },
            "displayName": "Yuhong Guo",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=guoyuhong85",
            "name": "guoyuhong85",
            "key": "guoyuhong85",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=guoyuhong85&avatarId=36251",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=guoyuhong85&avatarId=36251",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=guoyuhong85&avatarId=36251",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=guoyuhong85&avatarId=36251"
            },
            "displayName": "Yuhong Guo",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 17400,
            "total": 17400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 17400,
            "total": 17400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3555/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 30,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192575/worklog/155957",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "guoyuhong opened a new pull request #2788: ARROW-3555: [Plasma] Unify plasma client get function using metadata.\nURL: https://github.com/apache/arrow/pull/2788\n \n \n   Sometimes, it is very hard for the data consumer to know whether an object is a buffer or other types of object. If we use `try-catch` statement to catch the pyarrow deserialization exception and then using `plasma_client.get_buffer`, the code is not clean.\r\n   \r\n   As discussed with @robertnishihara , we may leverage the metadata which is not used at all to mark the buffer data. Furthermore, this will avoid output `None` when the object is actually not available, which is showed in the test.\r\n   \r\n   In the client of other language, corresponding change would be easy.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-18T15:18:32.850+0000",
                    "updated": "2018-10-18T15:18:32.850+0000",
                    "started": "2018-10-18T15:18:32.850+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "155957",
                    "issueId": "13192575"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192575/worklog/156203",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "robertnishihara commented on issue #2788: ARROW-3555: [Plasma] Unify plasma client get function using metadata.\nURL: https://github.com/apache/arrow/pull/2788#issuecomment-431213307\n \n \n   Slightly related, but what is the relationship between `get_buffer` and `get_buffers`?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-19T01:14:10.790+0000",
                    "updated": "2018-10-19T01:14:10.790+0000",
                    "started": "2018-10-19T01:14:10.789+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "156203",
                    "issueId": "13192575"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192575/worklog/156210",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "guoyuhong commented on issue #2788: ARROW-3555: [Plasma] Unify plasma client get function using metadata.\nURL: https://github.com/apache/arrow/pull/2788#issuecomment-431228217\n \n \n   In last PR\uff0cI added two functions: put_buffer & get_buffer. `get_buffer` is similar to get_buffers. I removed get_buffer in the PR and merge the mechanism to `get` and change put_buffer to put_raw_buffer.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-19T02:49:26.432+0000",
                    "updated": "2018-10-19T02:49:26.432+0000",
                    "started": "2018-10-19T02:49:26.432+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "156210",
                    "issueId": "13192575"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192575/worklog/156231",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "robertnishihara commented on issue #2788: ARROW-3555: [Plasma] Unify plasma client get function using metadata.\nURL: https://github.com/apache/arrow/pull/2788#issuecomment-431245326\n \n \n   @guoyuhong why not just allow `put_raw` to take an optional metadata argument, and let the application decide how to format the metadata?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-19T05:00:26.431+0000",
                    "updated": "2018-10-19T05:00:26.431+0000",
                    "started": "2018-10-19T05:00:26.430+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "156231",
                    "issueId": "13192575"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192575/worklog/156237",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "robertnishihara commented on issue #2788: ARROW-3555: [Plasma] Unify plasma client get function using metadata.\nURL: https://github.com/apache/arrow/pull/2788#issuecomment-431255789\n \n \n   I think it'd be preferable to allow the user to pass in metadata, and if there is no metadata, then just use the empty string.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-19T06:12:43.415+0000",
                    "updated": "2018-10-19T06:12:43.415+0000",
                    "started": "2018-10-19T06:12:43.413+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "156237",
                    "issueId": "13192575"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192575/worklog/156238",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "robertnishihara edited a comment on issue #2788: ARROW-3555: [Plasma] Unify plasma client get function using metadata.\nURL: https://github.com/apache/arrow/pull/2788#issuecomment-431255789\n \n \n   I think it'd be preferable to allow the user to pass in metadata, and if there is no metadata, then just use the empty string.\r\n   \r\n   EDIT: I see that would prevent you from handling both `get` and `get_raw` within the same method. Let me think about this a bit more. I have a feeling that unifying things here will be hard and users may need to manually look at the metadata anyway.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-19T06:15:40.775+0000",
                    "updated": "2018-10-19T06:15:40.775+0000",
                    "started": "2018-10-19T06:15:40.774+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "156238",
                    "issueId": "13192575"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192575/worklog/156244",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "guoyuhong commented on issue #2788: ARROW-3555: [Plasma] Unify plasma client get function using metadata.\nURL: https://github.com/apache/arrow/pull/2788#issuecomment-431259279\n \n \n   That is OK. We can put the logic in ray's python code, as long as no `try-catch` statement  is use. Actually, to put `b\"RAW\"` in Arrow is not a good practice. \r\n   Currently, there is no API for user to get the meta-data. Even the function `get_buffers` only returns the wrapped data field. In the user part, we can provide a function to get data and meta-data. If user found the meta-data is not as expected. The user need to call another function which deserialize the input bytes to a python object.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-19T06:32:33.560+0000",
                    "updated": "2018-10-19T06:32:33.560+0000",
                    "started": "2018-10-19T06:32:33.560+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "156244",
                    "issueId": "13192575"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192575/worklog/156344",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "guoyuhong commented on issue #2788: ARROW-3555: [Plasma] Unify plasma client get function using metadata.\nURL: https://github.com/apache/arrow/pull/2788#issuecomment-431376543\n \n \n   @robertnishihara I think we should provide 2 APIs to the users. One is still the original `get` function. The users using `get` function don't need to call `release` function because the shared memory is deserialized. For the second API we need to provide a function to return both data buffer and meta-data buffer. The meta data buffer is very small, so we can copy it to a buffer. For the data buffer, we have two options:\r\n   1. copy it to another buffer which could be a waste if the user will deserialize it and throw it away since the buffer could be very big.\r\n   2. return the shared memory directly, but the user need to call `release` function when he/she finishes using it.\r\n   I prefer Option 2. Which one do you think is better?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-19T14:11:14.618+0000",
                    "updated": "2018-10-19T14:11:14.618+0000",
                    "started": "2018-10-19T14:11:14.617+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "156344",
                    "issueId": "13192575"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192575/worklog/157168",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "guoyuhong commented on issue #2788: ARROW-3555: [Plasma] Unify plasma client get function using metadata.\nURL: https://github.com/apache/arrow/pull/2788#issuecomment-431933530\n \n \n   @robertnishihara @wesm In the recent commit, I removed \"RAW\" metadata from plasma and implemented two `get` APIs for raw buffer:\r\n   1. `get_raw_buffer` returns both the metadata and data buffer, but users need to do deserialization or change buffer to bytes themselves.\r\n   2. add an argument `do_serialization_func` which is defined by the user to compare the metadata to determine whether do the serialization or direct bytes to `get` function.\r\n   Which one do you think is better?\r\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-22T20:16:58.159+0000",
                    "updated": "2018-10-22T20:16:58.159+0000",
                    "started": "2018-10-22T20:16:58.158+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "157168",
                    "issueId": "13192575"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192575/worklog/157290",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "robertnishihara commented on issue #2788: ARROW-3555: [Plasma] Unify plasma client get function using metadata.\nURL: https://github.com/apache/arrow/pull/2788#issuecomment-432041776\n \n \n   @guoyuhong I think the first one is better/simpler.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-23T00:43:33.912+0000",
                    "updated": "2018-10-23T00:43:33.912+0000",
                    "started": "2018-10-23T00:43:33.911+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "157290",
                    "issueId": "13192575"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192575/worklog/157291",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "robertnishihara commented on a change in pull request #2788: ARROW-3555: [Plasma] Unify plasma client get function using metadata.\nURL: https://github.com/apache/arrow/pull/2788#discussion_r227184791\n \n \n\n ##########\n File path: python/pyarrow/_plasma.pyx\n ##########\n @@ -451,28 +454,39 @@ cdef class PlasmaClient:\n             The number of milliseconds that the get call should block before\n             timing out and returning. Pass -1 if the call should block and 0\n             if the call should return immediately.\n-\n-        Returns\n+         Returns\n \n Review comment:\n   Please restore the newline and I think there is an accidental extra space in front of `Returns`\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-23T00:43:45.743+0000",
                    "updated": "2018-10-23T00:43:45.743+0000",
                    "started": "2018-10-23T00:43:45.743+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "157291",
                    "issueId": "13192575"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192575/worklog/157292",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "robertnishihara commented on a change in pull request #2788: ARROW-3555: [Plasma] Unify plasma client get function using metadata.\nURL: https://github.com/apache/arrow/pull/2788#discussion_r227184829\n \n \n\n ##########\n File path: python/pyarrow/_plasma.pyx\n ##########\n @@ -505,7 +519,8 @@ cdef class PlasmaClient:\n         self.seal(target_id)\n         return target_id\n \n-    def get(self, object_ids, int timeout_ms=-1, serialization_context=None):\n+    def get(self, object_ids, do_serialization_func=None,int timeout_ms=-1,\n \n Review comment:\n   space before `int`\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-23T00:43:45.787+0000",
                    "updated": "2018-10-23T00:43:45.787+0000",
                    "started": "2018-10-23T00:43:45.786+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "157292",
                    "issueId": "13192575"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192575/worklog/157293",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "robertnishihara commented on a change in pull request #2788: ARROW-3555: [Plasma] Unify plasma client get function using metadata.\nURL: https://github.com/apache/arrow/pull/2788#discussion_r227184659\n \n \n\n ##########\n File path: python/pyarrow/tests/test_plasma.py\n ##########\n @@ -292,19 +292,38 @@ def test_put_and_get(self):\n             assert result == pa.plasma.ObjectNotAvailable\n \n     def test_put_and_get_buffer_without_serialization(self):\n+        def do_serialization(meta):\n+            return meta != b\"RAW\"\n+        def deserialize_or_output(meta_data):\n+            if meta_data[0] == b\"RAW\":\n+                return ray.worker.global_worker.plasma_client.get_bytes_from_buffer(meta_data[1])\n+            else:\n+                if meta_data[1] == pa.plasma.ObjectNotAvailable:\n+                    return pa.plasma.ObjectNotAvailable\n+                else:\n+                    return ray.worker.global_worker.plasma_client.deserialize_buffer(meta_data[1])\n \n Review comment:\n   typo here :) presumably should be `self.plasma_client`? If this test is passing then that suggests that these lines are not hit.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-23T00:43:45.790+0000",
                    "updated": "2018-10-23T00:43:45.790+0000",
                    "started": "2018-10-23T00:43:45.789+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "157293",
                    "issueId": "13192575"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192575/worklog/157294",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "robertnishihara commented on a change in pull request #2788: ARROW-3555: [Plasma] Unify plasma client get function using metadata.\nURL: https://github.com/apache/arrow/pull/2788#discussion_r227184364\n \n \n\n ##########\n File path: python/pyarrow/_plasma.pyx\n ##########\n @@ -451,28 +454,39 @@ cdef class PlasmaClient:\n             The number of milliseconds that the get call should block before\n             timing out and returning. Pass -1 if the call should block and 0\n             if the call should return immediately.\n-\n-        Returns\n+         Returns\n         -------\n-        list of buffer objects or a buffer object\n-            Python buffer or list of Python buffer for the data\n-            associated with the object_ids and ObjectNotAvailable if the\n-            object was not available.\n+        list of tuples of metadata bytes and a buffer object\n+            Python tuple or list of tuples of metadata bytes and a buffer\n+            object associated with the object_ids and ObjectNotAvailable if\n+            the object was not available.\n         \"\"\"\n         cdef c_vector[CObjectBuffer] object_buffers\n         if isinstance(object_ids, collections.Sequence):\n             results = []\n             self._get_object_buffers(object_ids, timeout_ms, &object_buffers)\n             for i in range(object_buffers.size()):\n                 if object_buffers[i].data.get() != nullptr:\n-                    size = object_buffers[i].data.get().size()\n-                    results.append(object_buffers[i].data.get().data()[:size])\n+                    data = pyarrow_wrap_buffer(object_buffers[i].data)\n                 else:\n-                    results.append(None)\n+                    data = ObjectNotAvailable\n+                if object_buffers[i].data.get() != nullptr:\n+                    metadata = object_buffers[i].metadata.get().data()[:]\n+                else:\n+                    metadata = None\n+                results.append((metadata, data))\n             return results\n         else:\n             return self.get_buffer([object_ids], timeout_ms)[0]\n \n+    def deserialize_buffe(self, buffer, serialization_context=None):\n \n Review comment:\n   buffe -> buffer\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-23T00:43:45.824+0000",
                    "updated": "2018-10-23T00:43:45.824+0000",
                    "started": "2018-10-23T00:43:45.822+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "157294",
                    "issueId": "13192575"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192575/worklog/159767",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "robertnishihara commented on a change in pull request #2788: ARROW-3555: [Plasma] Unify plasma client get function using metadata.\nURL: https://github.com/apache/arrow/pull/2788#discussion_r228765058\n \n \n\n ##########\n File path: python/pyarrow/_plasma.pyx\n ##########\n @@ -487,24 +491,36 @@ cdef class PlasmaClient:\n \n         Returns\n         -------\n-        list of buffer objects or a buffer object\n-            Python buffer or list of Python buffer for the data\n-            associated with the object_ids and ObjectNotAvailable if the\n-            object was not available.\n+        list of tuples of metadata bytes and a buffer object\n+            Python tuple or list of tuples of metadata bytes and a buffer\n+            object associated with the object_ids and ObjectNotAvailable if\n+            the object was not available.\n         \"\"\"\n         cdef c_vector[CObjectBuffer] object_buffers\n         if isinstance(object_ids, collections.Sequence):\n             results = []\n             self._get_object_buffers(object_ids, timeout_ms, &object_buffers)\n             for i in range(object_buffers.size()):\n                 if object_buffers[i].data.get() != nullptr:\n-                    size = object_buffers[i].data.get().size()\n-                    results.append(object_buffers[i].data.get().data()[:size])\n+                    data = pyarrow_wrap_buffer(object_buffers[i].data)\n                 else:\n-                    results.append(None)\n+                    data = ObjectNotAvailable\n+                if object_buffers[i].data.get() != nullptr:\n+                    metadata = object_buffers[i].metadata.get().data()[:]\n+                else:\n+                    metadata = None\n+                results.append((metadata, data))\n             return results\n         else:\n-            return self.get_buffer([object_ids], timeout_ms)[0]\n+            return self.get_raw_buffer([object_ids], timeout_ms)[0]\n+\n+    def deserialize_buffer(self, buffer, serialization_context=None):\n+        return pyarrow.deserialize(buffer, serialization_context)\n+\n+    def get_bytes_from_buffer(self, buffer):\n+        buf = pyarrow_unwrap_buffer(buffer)\n \n Review comment:\n   Not a huge deal, but `buffer` is not the best variable name because it is a special keyword in python 2.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-28T21:00:57.862+0000",
                    "updated": "2018-10-28T21:00:57.862+0000",
                    "started": "2018-10-28T21:00:57.862+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "159767",
                    "issueId": "13192575"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192575/worklog/159768",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "robertnishihara commented on a change in pull request #2788: ARROW-3555: [Plasma] Unify plasma client get function using metadata.\nURL: https://github.com/apache/arrow/pull/2788#discussion_r228765147\n \n \n\n ##########\n File path: python/pyarrow/_plasma.pyx\n ##########\n @@ -487,24 +491,36 @@ cdef class PlasmaClient:\n \n         Returns\n         -------\n-        list of buffer objects or a buffer object\n-            Python buffer or list of Python buffer for the data\n-            associated with the object_ids and ObjectNotAvailable if the\n-            object was not available.\n+        list of tuples of metadata bytes and a buffer object\n+            Python tuple or list of tuples of metadata bytes and a buffer\n+            object associated with the object_ids and ObjectNotAvailable if\n+            the object was not available.\n         \"\"\"\n         cdef c_vector[CObjectBuffer] object_buffers\n         if isinstance(object_ids, collections.Sequence):\n             results = []\n             self._get_object_buffers(object_ids, timeout_ms, &object_buffers)\n             for i in range(object_buffers.size()):\n                 if object_buffers[i].data.get() != nullptr:\n-                    size = object_buffers[i].data.get().size()\n-                    results.append(object_buffers[i].data.get().data()[:size])\n+                    data = pyarrow_wrap_buffer(object_buffers[i].data)\n                 else:\n-                    results.append(None)\n+                    data = ObjectNotAvailable\n+                if object_buffers[i].data.get() != nullptr:\n+                    metadata = object_buffers[i].metadata.get().data()[:]\n+                else:\n+                    metadata = None\n+                results.append((metadata, data))\n             return results\n         else:\n-            return self.get_buffer([object_ids], timeout_ms)[0]\n+            return self.get_raw_buffer([object_ids], timeout_ms)[0]\n+\n+    def deserialize_buffer(self, buffer, serialization_context=None):\n+        return pyarrow.deserialize(buffer, serialization_context)\n+\n+    def get_bytes_from_buffer(self, buffer):\n \n Review comment:\n   Why do we need this method?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-28T21:03:14.577+0000",
                    "updated": "2018-10-28T21:03:14.577+0000",
                    "started": "2018-10-28T21:03:14.576+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "159768",
                    "issueId": "13192575"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192575/worklog/159817",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "guoyuhong commented on a change in pull request #2788: ARROW-3555: [Plasma] Unify plasma client get function using metadata.\nURL: https://github.com/apache/arrow/pull/2788#discussion_r228784976\n \n \n\n ##########\n File path: python/pyarrow/_plasma.pyx\n ##########\n @@ -487,24 +491,36 @@ cdef class PlasmaClient:\n \n         Returns\n         -------\n-        list of buffer objects or a buffer object\n-            Python buffer or list of Python buffer for the data\n-            associated with the object_ids and ObjectNotAvailable if the\n-            object was not available.\n+        list of tuples of metadata bytes and a buffer object\n+            Python tuple or list of tuples of metadata bytes and a buffer\n+            object associated with the object_ids and ObjectNotAvailable if\n+            the object was not available.\n         \"\"\"\n         cdef c_vector[CObjectBuffer] object_buffers\n         if isinstance(object_ids, collections.Sequence):\n             results = []\n             self._get_object_buffers(object_ids, timeout_ms, &object_buffers)\n             for i in range(object_buffers.size()):\n                 if object_buffers[i].data.get() != nullptr:\n-                    size = object_buffers[i].data.get().size()\n-                    results.append(object_buffers[i].data.get().data()[:size])\n+                    data = pyarrow_wrap_buffer(object_buffers[i].data)\n                 else:\n-                    results.append(None)\n+                    data = ObjectNotAvailable\n+                if object_buffers[i].data.get() != nullptr:\n+                    metadata = object_buffers[i].metadata.get().data()[:]\n+                else:\n+                    metadata = None\n+                results.append((metadata, data))\n             return results\n         else:\n-            return self.get_buffer([object_ids], timeout_ms)[0]\n+            return self.get_raw_buffer([object_ids], timeout_ms)[0]\n+\n+    def deserialize_buffer(self, buffer, serialization_context=None):\n+        return pyarrow.deserialize(buffer, serialization_context)\n+\n+    def get_bytes_from_buffer(self, buffer):\n \n Review comment:\n   The returned data buffer is the result of `pyarrow_wrap_buffer`. The buffer is easy to be used to deserialize. This function is used to returned the copied `bytes`. You can check the test function `deserialize_or_output`. Is there a better way?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-29T02:54:11.990+0000",
                    "updated": "2018-10-29T02:54:11.990+0000",
                    "started": "2018-10-29T02:54:11.989+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "159817",
                    "issueId": "13192575"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192575/worklog/159819",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "robertnishihara commented on a change in pull request #2788: ARROW-3555: [Plasma] Unify plasma client get function using metadata.\nURL: https://github.com/apache/arrow/pull/2788#discussion_r228785383\n \n \n\n ##########\n File path: python/pyarrow/_plasma.pyx\n ##########\n @@ -487,24 +491,36 @@ cdef class PlasmaClient:\n \n         Returns\n         -------\n-        list of buffer objects or a buffer object\n-            Python buffer or list of Python buffer for the data\n-            associated with the object_ids and ObjectNotAvailable if the\n-            object was not available.\n+        list of tuples of metadata bytes and a buffer object\n+            Python tuple or list of tuples of metadata bytes and a buffer\n+            object associated with the object_ids and ObjectNotAvailable if\n+            the object was not available.\n         \"\"\"\n         cdef c_vector[CObjectBuffer] object_buffers\n         if isinstance(object_ids, collections.Sequence):\n             results = []\n             self._get_object_buffers(object_ids, timeout_ms, &object_buffers)\n             for i in range(object_buffers.size()):\n                 if object_buffers[i].data.get() != nullptr:\n-                    size = object_buffers[i].data.get().size()\n-                    results.append(object_buffers[i].data.get().data()[:size])\n+                    data = pyarrow_wrap_buffer(object_buffers[i].data)\n                 else:\n-                    results.append(None)\n+                    data = ObjectNotAvailable\n+                if object_buffers[i].data.get() != nullptr:\n+                    metadata = object_buffers[i].metadata.get().data()[:]\n+                else:\n+                    metadata = None\n+                results.append((metadata, data))\n             return results\n         else:\n-            return self.get_buffer([object_ids], timeout_ms)[0]\n+            return self.get_raw_buffer([object_ids], timeout_ms)[0]\n+\n+    def deserialize_buffer(self, buffer, serialization_context=None):\n+        return pyarrow.deserialize(buffer, serialization_context)\n+\n+    def get_bytes_from_buffer(self, buffer):\n \n Review comment:\n   `get_raw_buffer` returns the same kind of buffer that `get_buffers` returns, right? And we never needed the helper function before, so it seems like it should not be necessary now, right?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-29T02:57:54.882+0000",
                    "updated": "2018-10-29T02:57:54.882+0000",
                    "started": "2018-10-29T02:57:54.881+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "159819",
                    "issueId": "13192575"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192575/worklog/159820",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "robertnishihara commented on a change in pull request #2788: ARROW-3555: [Plasma] Unify plasma client get function using metadata.\nURL: https://github.com/apache/arrow/pull/2788#discussion_r228785450\n \n \n\n ##########\n File path: python/pyarrow/_plasma.pyx\n ##########\n @@ -487,24 +491,36 @@ cdef class PlasmaClient:\n \n         Returns\n         -------\n-        list of buffer objects or a buffer object\n-            Python buffer or list of Python buffer for the data\n-            associated with the object_ids and ObjectNotAvailable if the\n-            object was not available.\n+        list of tuples of metadata bytes and a buffer object\n+            Python tuple or list of tuples of metadata bytes and a buffer\n+            object associated with the object_ids and ObjectNotAvailable if\n+            the object was not available.\n         \"\"\"\n         cdef c_vector[CObjectBuffer] object_buffers\n         if isinstance(object_ids, collections.Sequence):\n             results = []\n             self._get_object_buffers(object_ids, timeout_ms, &object_buffers)\n             for i in range(object_buffers.size()):\n                 if object_buffers[i].data.get() != nullptr:\n-                    size = object_buffers[i].data.get().size()\n-                    results.append(object_buffers[i].data.get().data()[:size])\n+                    data = pyarrow_wrap_buffer(object_buffers[i].data)\n                 else:\n-                    results.append(None)\n+                    data = ObjectNotAvailable\n+                if object_buffers[i].data.get() != nullptr:\n+                    metadata = object_buffers[i].metadata.get().data()[:]\n+                else:\n+                    metadata = None\n+                results.append((metadata, data))\n             return results\n         else:\n-            return self.get_buffer([object_ids], timeout_ms)[0]\n+            return self.get_raw_buffer([object_ids], timeout_ms)[0]\n+\n+    def deserialize_buffer(self, buffer, serialization_context=None):\n \n Review comment:\n   This method does not belong in the plasma client. The application can always call `pyarrow.deserialize`.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-29T02:58:23.086+0000",
                    "updated": "2018-10-29T02:58:23.086+0000",
                    "started": "2018-10-29T02:58:23.085+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "159820",
                    "issueId": "13192575"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192575/worklog/159825",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "guoyuhong commented on a change in pull request #2788: ARROW-3555: [Plasma] Unify plasma client get function using metadata.\nURL: https://github.com/apache/arrow/pull/2788#discussion_r228789696\n \n \n\n ##########\n File path: python/pyarrow/_plasma.pyx\n ##########\n @@ -487,24 +491,36 @@ cdef class PlasmaClient:\n \n         Returns\n         -------\n-        list of buffer objects or a buffer object\n-            Python buffer or list of Python buffer for the data\n-            associated with the object_ids and ObjectNotAvailable if the\n-            object was not available.\n+        list of tuples of metadata bytes and a buffer object\n+            Python tuple or list of tuples of metadata bytes and a buffer\n+            object associated with the object_ids and ObjectNotAvailable if\n+            the object was not available.\n         \"\"\"\n         cdef c_vector[CObjectBuffer] object_buffers\n         if isinstance(object_ids, collections.Sequence):\n             results = []\n             self._get_object_buffers(object_ids, timeout_ms, &object_buffers)\n             for i in range(object_buffers.size()):\n                 if object_buffers[i].data.get() != nullptr:\n-                    size = object_buffers[i].data.get().size()\n-                    results.append(object_buffers[i].data.get().data()[:size])\n+                    data = pyarrow_wrap_buffer(object_buffers[i].data)\n                 else:\n-                    results.append(None)\n+                    data = ObjectNotAvailable\n+                if object_buffers[i].data.get() != nullptr:\n+                    metadata = object_buffers[i].metadata.get().data()[:]\n+                else:\n+                    metadata = None\n+                results.append((metadata, data))\n             return results\n         else:\n-            return self.get_buffer([object_ids], timeout_ms)[0]\n+            return self.get_raw_buffer([object_ids], timeout_ms)[0]\n+\n+    def deserialize_buffer(self, buffer, serialization_context=None):\n+        return pyarrow.deserialize(buffer, serialization_context)\n+\n+    def get_bytes_from_buffer(self, buffer):\n \n Review comment:\n   It is a bit different. `get_buffers` only returns the data part and throw away the metadata part. `get_raw_buffer` returns both part. We can merge the two functions.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-29T03:35:04.085+0000",
                    "updated": "2018-10-29T03:35:04.085+0000",
                    "started": "2018-10-29T03:35:04.084+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "159825",
                    "issueId": "13192575"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 17400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@649acbe2[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@53f33287[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@16c2a0bc[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5c6fdfe9[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3539975f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@3c555649[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3f11c63f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@1da3c6a3[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@64592927[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@72a8dcfb[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4339ccaf[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@40ac9cb5[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 17400,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Oct 29 17:04:09 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-10-29T17:04:09.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3555/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-10-18T15:12:54.000+0000",
        "updated": "2019-06-03T12:31:01.000+0000",
        "timeoriginalestimate": null,
        "description": "Sometimes, it is very hard for the data consumer to know whether an object is a buffer or other objects. If we use try-catch to catch the pyarrow deserialization exception and then using `plasma_client.get_buffer`, the code is not clean.\r\nWe may leverage the metadata which is not used at all to mark the buffer data. In the client of other language, this would be simple to implement. ",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "4h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 17400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Plasma] Unify plasma client get function using metadata.",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192575/comment/16667460",
                    "id": "16667460",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=robertnishihara",
                        "name": "robertnishihara",
                        "key": "robertnishihara",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Robert Nishihara",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 2788\n[https://github.com/apache/arrow/pull/2788]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=robertnishihara",
                        "name": "robertnishihara",
                        "key": "robertnishihara",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Robert Nishihara",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-10-29T17:04:09.402+0000",
                    "updated": "2018-10-29T17:04:09.402+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|i3zd7j:",
        "customfield_12314139": null
    }
}