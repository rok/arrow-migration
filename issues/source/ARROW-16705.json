{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13447884",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13447884",
    "key": "ARROW-16705",
    "fields": {
        "fixVersions": [],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "async",
            "ipc",
            "javascript",
            "stream"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351051",
                "id": "12351051",
                "description": "",
                "name": "8.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-05-06"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": null,
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
            "name": "Closed",
            "id": "6",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332552",
                "id": "12332552",
                "name": "JavaScript"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=vic-bonilla",
            "name": "vic-bonilla",
            "key": "JIRAUSER290308",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
            },
            "displayName": "Victor Bonilla",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=vic-bonilla",
            "name": "vic-bonilla",
            "key": "JIRAUSER290308",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
            },
            "displayName": "Victor Bonilla",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-16705/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@1b4951cb[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@783fac2b[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1fdbc7b6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@1a006e92[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5bc1b2e0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@7daf09cd[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3c8887b9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@25650a44[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@73e5faba[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@7681746a[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@e4c904c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@3f69ceb[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Jun 03 07:54:43 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": [
            "javascript"
        ],
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-06-03T07:58:13.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-16705/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2022-06-01T09:38:21.000+0000",
        "updated": "2022-06-03T07:58:27.000+0000",
        "timeoriginalestimate": null,
        "description": "Trying to code a real-time stream from an async iterable of objects to an IPC Streaming format file I'm getting a TypeError.\r\n\r\nThe idea is to stream every message to the arrow file as soon as it arrives without waiting to build the complete table to stream it. To take advantage of the stream event handling, I'm using the functional approach of [node:stream|https://nodejs.org/docs/latest-v16.x/api/stream.html] module (Nodejs v16.13.0).\r\n\r\nThe async iterable contains messages that are JS objects containing different data types, for example:\r\n{code:javascript}\r\n{\r\n    id: '6345',\r\n    product: 'foo',\r\n    price: 62.78,\r\n    created: '2022-05-01T16:01:00.105Z',\r\n}{code}\r\nCode to replicate the error:\r\n{code:javascript}\r\nconst {\r\n    Struct, Field, Utf8, Float32, TimestampMillisecond,\r\n    RecordBatchReader, RecordBatchStreamWriter,\r\n    builderThroughAsyncIterable,\r\n} = require('apache-arrow')\r\nconst fs = require(\"fs\");\r\nconst path = require(\"path\");\r\nconst {pipeline} = require('node:stream');\r\n\r\nconst asyncIterable = {\r\n    [Symbol.asyncIterator]: async function* () {\r\n        while (true) {\r\n            const obj = {\r\n                id: Math.floor(Math.random() * 10).toString(),\r\n                product: 'foo',\r\n                price: Math.random() + Math.floor(Math.random() * 10),\r\n                created: new Date(),\r\n            }\r\n            yield obj;\r\n            // insert some asynchrony\r\n            await new Promise((r) => setTimeout(r, 1000));\r\n        }\r\n    }\r\n}\r\n\r\nasync function streamToArrow(messagesAsyncIterable) {\r\n    const message_type = new Struct([\r\n        new Field('id', new Utf8, false),\r\n \u00a0 \u00a0 \u00a0 \u00a0new Field('product', new Utf8, false),\r\n  \u00a0 \u00a0 \u00a0 new Field('price', new Float32, false),\r\n        new Field('created', new TimestampMillisecond, false),\r\n    ]);\r\n\r\n    const builderOptions = {\r\n        type: message_type,\r\n        nullValues: [null, 'n/a', undefined],\r\n        highWaterMark: 30,\r\n        queueingStrategy: 'count',\r\n    };\r\n\r\n    const transform = builderThroughAsyncIterable(builderOptions);  \r\n    let file_path = './ipc_stream.arrow';\r\n    const fsWriter = fs.createWriteStream(file_path);\r\n\r\n    pipeline(\r\n        RecordBatchReader\r\n            .from(transform(messagesAsyncIterable))\r\n            .toNodeStream(),  // Throws TypeError: RecordBatchReader.from(...).toNodeStream is not a function \u00a0 \u00a0 \u00a0 \u00a0 \r\n        RecordBatchStreamWriter.throughNode(),\r\n        fsWriter,\r\n        (err, value) => {\r\n            if (err) {\r\n                console.error(err);\r\n            } else {\r\n                console.log(value, 'value returned');\r\n            }\r\n        }\r\n    ).on('close', () => {\r\n        console.log('Closed pipeline')\r\n    });\r\n\r\n}\r\n\r\nstreamToArrow(asyncIterable){code}\r\n\u00a0",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[JavaScript] TypeError: RecordBatchReader.from(...).toNodeStream is not a function",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": "Nodejs v16.13.0",
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13447884/comment/17545007",
                    "id": "17545007",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=paul.e.taylor",
                        "name": "paul.e.taylor",
                        "key": "paul.e.taylor",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Paul Taylor",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "[~vic-bonilla]\u00a0The RecordBatchReader is used to transform the IPC format off the wire into RecordBatches. You don't need to use the RecordBatchReader, because the Builder already produces RecordBatches (or the Vectors that can go inside a RecordBatch).\r\n\r\nInstead you can transform the StructVector produced by the Builder into a RecordBatch, and go straight to the IPC format with the writer like this:\r\n{code:java}\r\nconst {Readable, pipeline} = require('node:stream');\r\nconst {RecordBatch, Schema} = require('apache-arrow')\r\n\r\nconst messagesToBatches = async function*(source) {\r\n  let schema = undefined; \r\n \u00a0const transform = builderThroughAsyncIterable(builderOptions);\r\n  for await (const vector of transform(source)) {\r\n    schema ??= new Schema(vector.type.children);\r\n    for (const chunk of vector.data) {\r\n      yield new RecordBatch(schema, chunk);\r\n    }\r\n  }\r\n}\r\n\r\npipeline(\r\n \u00a0Readable.from(messagesToBatches(messagesAsyncIterable)),\r\n \u00a0RecordBatchStreamWriter.throughNode(),\r\n  fsWriter\r\n) {code}\r\n\u00a0\r\n\r\n\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=paul.e.taylor",
                        "name": "paul.e.taylor",
                        "key": "paul.e.taylor",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Paul Taylor",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2022-06-01T16:25:31.618+0000",
                    "updated": "2022-06-01T18:07:01.129+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13447884/comment/17545765",
                    "id": "17545765",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=vic-bonilla",
                        "name": "vic-bonilla",
                        "key": "JIRAUSER290308",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
                        },
                        "displayName": "Victor Bonilla",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Hey [~paul.e.taylor] , I tried skipping RecordBatchReader as you suggest and it works fine, thanks for the help.\r\n\r\nA quick remark to avoid confusion about the pipeline declaration, it'll raise an error due to the missing callback (or promise). I personally solved with:\r\n{code:javascript}\r\nconst stream = require('stream'); \r\n\r\nconst pipe = stream.promises.pipeline(\r\n  Readable.from(messagesToBatches(messagesAsyncIterable)),\r\n  RecordBatchStreamWriter.throughNode(),\r\n  fsWriter\r\n);\r\nawait pipe;\r\n{code}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=vic-bonilla",
                        "name": "vic-bonilla",
                        "key": "JIRAUSER290308",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
                        },
                        "displayName": "Victor Bonilla",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-06-03T07:54:43.354+0000",
                    "updated": "2022-06-03T07:54:43.354+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|z12v20:",
        "customfield_12314139": null
    }
}