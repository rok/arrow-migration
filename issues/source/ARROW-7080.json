{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13266653",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13266653",
    "key": "ARROW-7080",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12346687",
                "id": "12346687",
                "description": "",
                "name": "0.17.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-04-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "parquet",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=TGooch44",
            "name": "TGooch44",
            "key": "tgooch44",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
            },
            "displayName": "Ted Gooch",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=TGooch44",
            "name": "TGooch44",
            "key": "tgooch44",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
            },
            "displayName": "Ted Gooch",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 31200,
            "total": 31200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 31200,
            "total": 31200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7080/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 53,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13266653/worklog/385693",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6408: ARROW-7080: [C++][Parquet] Read and write \"field_id\" attribute in Parquet files, propagate to Arrow field metadata\nURL: https://github.com/apache/arrow/pull/6408\n \n \n   The `field_id` is used for schema evolution and other things. It is surfaced in Python in the `Field.metadata` as `b'PARQUET::field_id'`\r\n   \r\n   * `ChunkedArray::Equals` would fail if a child field had unequal metadata, now it does not check the metadata\r\n   * Improved diffing output in AssertTablesEqual in testing/gtest_util.h (may need some more tests around this)\r\n   * Added a generic binary ChunkedArray iterator (see `internal::MultipleChunkIterator`) and helpful applicator `internal::ApplyToChunkOverlaps`. I retrofitted `ChunkedArray::Equals` to use this (needed it to improve the diffing output in AssertTablesEqual)\r\n   * Add `KeyValueMetadata::Merge` method\r\n   * Add `KeyValueMetadata::Make` convenience ctor\r\n   * Add `Field::WithMergedMetadata` method that calls `KeyValueMetadata::Merge`\r\n   * Print metadata in `Field::ToString`\r\n   * Add `parquet.ParquetFile.schema_arrow` property to return the effective Arrow schema\r\n   * Print field_ids in `parquet::SchemaPrinter`\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-12T05:59:38.043+0000",
                    "updated": "2020-02-12T05:59:38.043+0000",
                    "started": "2020-02-12T05:59:38.043+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "385693",
                    "issueId": "13266653"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13266653/worklog/385694",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #6408: ARROW-7080: [C++][Parquet] Read and write \"field_id\" attribute in Parquet files, propagate to Arrow field metadata\nURL: https://github.com/apache/arrow/pull/6408#issuecomment-585044892\n \n \n   https://issues.apache.org/jira/browse/ARROW-7080\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-12T06:02:56.758+0000",
                    "updated": "2020-02-12T06:02:56.758+0000",
                    "started": "2020-02-12T06:02:56.758+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "385694",
                    "issueId": "13266653"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13266653/worklog/386136",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #6408: ARROW-7080: [C++][Parquet] Read and write \"field_id\" attribute in Parquet files, propagate to Arrow field metadata. Assorted additional changes\nURL: https://github.com/apache/arrow/pull/6408#discussion_r378442519\n \n \n\n ##########\n File path: cpp/src/parquet/schema_test.cc\n ##########\n @@ -767,35 +809,38 @@ static std::string Print(const NodePtr& node) {\n TEST(TestSchemaPrinter, Examples) {\n   // Test schema 1\n   NodeVector fields;\n-  fields.push_back(Int32(\"a\", Repetition::REQUIRED));\n+  fields.push_back(Int32(\"a\", Repetition::REQUIRED, 1));\n \n   // 3-level list encoding\n-  NodePtr item1 = Int64(\"item1\");\n-  NodePtr item2 = Boolean(\"item2\", Repetition::REQUIRED);\n+  NodePtr item1 = Int64(\"item1\", Repetition::OPTIONAL, 4);\n+  NodePtr item2 = Boolean(\"item2\", Repetition::REQUIRED, 5);\n   NodePtr list(\n-      GroupNode::Make(\"b\", Repetition::REPEATED, {item1, item2}, ConvertedType::LIST));\n-  NodePtr bag(GroupNode::Make(\"bag\", Repetition::OPTIONAL, {list}));\n+      GroupNode::Make(\"b\", Repetition::REPEATED, {item1, item2}, ConvertedType::LIST, 3));\n+  NodePtr bag(\n+      GroupNode::Make(\"bag\", Repetition::OPTIONAL, {list}, /*logical_type=*/nullptr, 2));\n   fields.push_back(bag);\n \n   fields.push_back(PrimitiveNode::Make(\"c\", Repetition::REQUIRED, Type::INT32,\n-                                       ConvertedType::DECIMAL, -1, 3, 2));\n+                                       ConvertedType::DECIMAL, -1, 3, 2, 6));\n \n   fields.push_back(PrimitiveNode::Make(\"d\", Repetition::REQUIRED,\n-                                       DecimalLogicalType::Make(10, 5), Type::INT64, -1));\n+                                       DecimalLogicalType::Make(10, 5), Type::INT64,\n+                                       /*length=*/-1, 7));\n \n-  NodePtr schema = GroupNode::Make(\"schema\", Repetition::REPEATED, fields);\n+  NodePtr schema = GroupNode::Make(\"schema\", Repetition::REPEATED, fields,\n+                                   /*logical_type=*/nullptr, 0);\n \n   std::string result = Print(schema);\n-  std::string expected = R\"(message schema {\n-  required int32 a;\n-  optional group bag {\n-    repeated group b (List) {\n-      optional int64 item1;\n-      required boolean item2;\n+  std::string expected = R\"(repeated group field_id=0 schema {\n \n Review comment:\n   Just so I understand, the fact that the field ids are DFS-ordered is a test decision, not a Parquet requirement, right?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-12T18:59:57.830+0000",
                    "updated": "2020-02-12T18:59:57.830+0000",
                    "started": "2020-02-12T18:59:57.830+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "386136",
                    "issueId": "13266653"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13266653/worklog/386137",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #6408: ARROW-7080: [C++][Parquet] Read and write \"field_id\" attribute in Parquet files, propagate to Arrow field metadata. Assorted additional changes\nURL: https://github.com/apache/arrow/pull/6408#discussion_r378444593\n \n \n\n ##########\n File path: cpp/src/parquet/schema.h\n ##########\n @@ -141,7 +122,13 @@ class PARQUET_EXPORT Node {\n \n   const std::shared_ptr<const LogicalType>& logical_type() const { return logical_type_; }\n \n-  int id() const { return id_; }\n+  /// \\brief The field_id value for the serialized SchemaElement. If the\n+  /// field_id is less than 0 (e.g. -1), it will not be set when serialized to\n+  /// Thrift\n \n Review comment:\n   I'm a bit confused. In other places in this file, \"A field_id -1 means to use the default next_id()\". Is there a reason for the discrepancy?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-12T18:59:57.915+0000",
                    "updated": "2020-02-12T18:59:57.915+0000",
                    "started": "2020-02-12T18:59:57.915+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "386137",
                    "issueId": "13266653"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13266653/worklog/386138",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #6408: ARROW-7080: [C++][Parquet] Read and write \"field_id\" attribute in Parquet files, propagate to Arrow field metadata. Assorted additional changes\nURL: https://github.com/apache/arrow/pull/6408#discussion_r378449738\n \n \n\n ##########\n File path: cpp/src/arrow/table.h\n ##########\n @@ -130,6 +130,63 @@ class ARROW_EXPORT ChunkedArray {\n   ARROW_DISALLOW_COPY_AND_ASSIGN(ChunkedArray);\n };\n \n+namespace internal {\n+\n+/// \\brief EXPERIMENTAL: Utility for incremental iteration over contiguous\n+/// pieces of potentially differently-chunked ChunkedArray objects\n+class MultipleChunkIterator {\n+ public:\n+  MultipleChunkIterator(const ChunkedArray& left, const ChunkedArray& right)\n+      : left_(left),\n+        right_(right),\n+        pos_(0),\n+        length_(left.length()),\n+        chunk_idx_left_(0),\n+        chunk_idx_right_(0),\n+        chunk_pos_left_(0),\n+        chunk_pos_right_(0) {}\n+\n+  bool Next(std::shared_ptr<Array>* next_left, std::shared_ptr<Array>* next_right);\n+\n+  int64_t position() const { return pos_; }\n+\n+ private:\n+  const ChunkedArray& left_;\n+  const ChunkedArray& right_;\n+\n+  // The amount of the entire ChunkedArray consumed\n+  int64_t pos_;\n+\n+  // Length of the chunked array(s)\n+  int64_t length_;\n+\n+  // Current left chunk\n+  int chunk_idx_left_;\n+\n+  // Current right chunk\n+  int chunk_idx_right_;\n+\n+  // Offset into the current left chunk\n+  int64_t chunk_pos_left_;\n+\n+  // Offset into the current right chunk\n+  int64_t chunk_pos_right_;\n+};\n+\n+// Execute the passed function\n \n Review comment:\n   Perhaps expand this docstring a bit?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-12T18:59:58.043+0000",
                    "updated": "2020-02-12T18:59:58.043+0000",
                    "started": "2020-02-12T18:59:58.043+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "386138",
                    "issueId": "13266653"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13266653/worklog/386139",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #6408: ARROW-7080: [C++][Parquet] Read and write \"field_id\" attribute in Parquet files, propagate to Arrow field metadata. Assorted additional changes\nURL: https://github.com/apache/arrow/pull/6408#discussion_r378441040\n \n \n\n ##########\n File path: python/pyarrow/tests/test_parquet.py\n ##########\n @@ -73,6 +73,10 @@ def _read_table(*args, **kwargs):\n     return pq.read_table(*args, **kwargs)\n \n \n+def assert_tables_equal(left, right):\n \n Review comment:\n   Do we need a `pyarrow.testing` module where we would put assorted utilities like this?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-12T18:59:58.066+0000",
                    "updated": "2020-02-12T18:59:58.066+0000",
                    "started": "2020-02-12T18:59:58.066+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "386139",
                    "issueId": "13266653"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13266653/worklog/386140",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #6408: ARROW-7080: [C++][Parquet] Read and write \"field_id\" attribute in Parquet files, propagate to Arrow field metadata. Assorted additional changes\nURL: https://github.com/apache/arrow/pull/6408#discussion_r378445755\n \n \n\n ##########\n File path: cpp/src/arrow/util/key_value_metadata.h\n ##########\n @@ -34,11 +34,14 @@ namespace arrow {\n class ARROW_EXPORT KeyValueMetadata {\n  public:\n   KeyValueMetadata();\n-  KeyValueMetadata(const std::vector<std::string>& keys,\n-                   const std::vector<std::string>& values);\n+  KeyValueMetadata(std::vector<std::string> keys, std::vector<std::string> values);\n   explicit KeyValueMetadata(const std::unordered_map<std::string, std::string>& map);\n   virtual ~KeyValueMetadata() = default;\n \n+  /// \\brief Convenience constructor\n+  static std::shared_ptr<KeyValueMetadata> Make(std::vector<std::string> keys,\n \n Review comment:\n   There's already the `key_value_metadata` convenience function. Is this one really required?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-12T18:59:58.166+0000",
                    "updated": "2020-02-12T18:59:58.166+0000",
                    "started": "2020-02-12T18:59:58.166+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "386140",
                    "issueId": "13266653"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13266653/worklog/386141",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #6408: ARROW-7080: [C++][Parquet] Read and write \"field_id\" attribute in Parquet files, propagate to Arrow field metadata. Assorted additional changes\nURL: https://github.com/apache/arrow/pull/6408#discussion_r378443309\n \n \n\n ##########\n File path: cpp/src/parquet/schema_test.cc\n ##########\n @@ -43,26 +43,59 @@ namespace schema {\n \n static inline SchemaElement NewPrimitive(const std::string& name,\n                                          FieldRepetitionType::type repetition,\n-                                         Type::type type, int id = 0) {\n+                                         Type::type type, int field_id = -1) {\n   SchemaElement result;\n   result.__set_name(name);\n   result.__set_repetition_type(repetition);\n   result.__set_type(static_cast<format::Type::type>(type));\n-\n+  if (field_id >= 0) {\n+    result.__set_field_id(field_id);\n+  }\n   return result;\n }\n \n static inline SchemaElement NewGroup(const std::string& name,\n                                      FieldRepetitionType::type repetition,\n-                                     int num_children, int id = 0) {\n+                                     int num_children, int field_id = -1) {\n   SchemaElement result;\n   result.__set_name(name);\n   result.__set_repetition_type(repetition);\n   result.__set_num_children(num_children);\n \n+  if (field_id >= 0) {\n+    result.__set_field_id(field_id);\n+  }\n+\n   return result;\n }\n \n+template <typename NodeType>\n+static void CheckNodeRoundtrip(const Node& node) {\n+  format::SchemaElement serialized;\n+  node.ToParquet(&serialized);\n+  std::unique_ptr<Node> recovered = NodeType::FromParquet(&serialized);\n+  ASSERT_TRUE(node.Equals(recovered.get()))\n+      << \"Recovered node not equivalent to original node constructed \"\n+      << \"with logical type \" << node.logical_type()->ToString() << \" got \"\n+      << recovered->logical_type()->ToString();\n+  ASSERT_EQ(recovered->field_id(), node.field_id());\n \n Review comment:\n   Why not make `field_id` tested by `Node::Equals`?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-12T18:59:58.251+0000",
                    "updated": "2020-02-12T18:59:58.251+0000",
                    "started": "2020-02-12T18:59:58.250+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "386141",
                    "issueId": "13266653"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13266653/worklog/386279",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6408: ARROW-7080: [C++][Parquet] Read and write \"field_id\" attribute in Parquet files, propagate to Arrow field metadata. Assorted additional changes\nURL: https://github.com/apache/arrow/pull/6408#discussion_r378549395\n \n \n\n ##########\n File path: python/pyarrow/tests/test_parquet.py\n ##########\n @@ -73,6 +73,10 @@ def _read_table(*args, **kwargs):\n     return pq.read_table(*args, **kwargs)\n \n \n+def assert_tables_equal(left, right):\n \n Review comment:\n   We may, however this is a detail of this module because the roundtrip to Parquet now introduces extra Field metadata so that `result.equals(expected)` will fail unless the right metadata is set in `expected`\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-12T22:27:09.454+0000",
                    "updated": "2020-02-12T22:27:09.454+0000",
                    "started": "2020-02-12T22:27:09.454+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "386279",
                    "issueId": "13266653"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13266653/worklog/386280",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6408: ARROW-7080: [C++][Parquet] Read and write \"field_id\" attribute in Parquet files, propagate to Arrow field metadata. Assorted additional changes\nURL: https://github.com/apache/arrow/pull/6408#discussion_r378549675\n \n \n\n ##########\n File path: cpp/src/parquet/schema_test.cc\n ##########\n @@ -767,35 +809,38 @@ static std::string Print(const NodePtr& node) {\n TEST(TestSchemaPrinter, Examples) {\n   // Test schema 1\n   NodeVector fields;\n-  fields.push_back(Int32(\"a\", Repetition::REQUIRED));\n+  fields.push_back(Int32(\"a\", Repetition::REQUIRED, 1));\n \n   // 3-level list encoding\n-  NodePtr item1 = Int64(\"item1\");\n-  NodePtr item2 = Boolean(\"item2\", Repetition::REQUIRED);\n+  NodePtr item1 = Int64(\"item1\", Repetition::OPTIONAL, 4);\n+  NodePtr item2 = Boolean(\"item2\", Repetition::REQUIRED, 5);\n   NodePtr list(\n-      GroupNode::Make(\"b\", Repetition::REPEATED, {item1, item2}, ConvertedType::LIST));\n-  NodePtr bag(GroupNode::Make(\"bag\", Repetition::OPTIONAL, {list}));\n+      GroupNode::Make(\"b\", Repetition::REPEATED, {item1, item2}, ConvertedType::LIST, 3));\n+  NodePtr bag(\n+      GroupNode::Make(\"bag\", Repetition::OPTIONAL, {list}, /*logical_type=*/nullptr, 2));\n   fields.push_back(bag);\n \n   fields.push_back(PrimitiveNode::Make(\"c\", Repetition::REQUIRED, Type::INT32,\n-                                       ConvertedType::DECIMAL, -1, 3, 2));\n+                                       ConvertedType::DECIMAL, -1, 3, 2, 6));\n \n   fields.push_back(PrimitiveNode::Make(\"d\", Repetition::REQUIRED,\n-                                       DecimalLogicalType::Make(10, 5), Type::INT64, -1));\n+                                       DecimalLogicalType::Make(10, 5), Type::INT64,\n+                                       /*length=*/-1, 7));\n \n-  NodePtr schema = GroupNode::Make(\"schema\", Repetition::REPEATED, fields);\n+  NodePtr schema = GroupNode::Make(\"schema\", Repetition::REPEATED, fields,\n+                                   /*logical_type=*/nullptr, 0);\n \n   std::string result = Print(schema);\n-  std::string expected = R\"(message schema {\n-  required int32 a;\n-  optional group bag {\n-    repeated group b (List) {\n-      optional int64 item1;\n-      required boolean item2;\n+  std::string expected = R\"(repeated group field_id=0 schema {\n \n Review comment:\n   Right, that's how they're auto-assigned by the library but another library may set different ids\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-12T22:27:45.347+0000",
                    "updated": "2020-02-12T22:27:45.347+0000",
                    "started": "2020-02-12T22:27:45.347+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "386280",
                    "issueId": "13266653"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13266653/worklog/386281",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6408: ARROW-7080: [C++][Parquet] Read and write \"field_id\" attribute in Parquet files, propagate to Arrow field metadata. Assorted additional changes\nURL: https://github.com/apache/arrow/pull/6408#discussion_r378549759\n \n \n\n ##########\n File path: cpp/src/parquet/schema_test.cc\n ##########\n @@ -43,26 +43,59 @@ namespace schema {\n \n static inline SchemaElement NewPrimitive(const std::string& name,\n                                          FieldRepetitionType::type repetition,\n-                                         Type::type type, int id = 0) {\n+                                         Type::type type, int field_id = -1) {\n   SchemaElement result;\n   result.__set_name(name);\n   result.__set_repetition_type(repetition);\n   result.__set_type(static_cast<format::Type::type>(type));\n-\n+  if (field_id >= 0) {\n+    result.__set_field_id(field_id);\n+  }\n   return result;\n }\n \n static inline SchemaElement NewGroup(const std::string& name,\n                                      FieldRepetitionType::type repetition,\n-                                     int num_children, int id = 0) {\n+                                     int num_children, int field_id = -1) {\n   SchemaElement result;\n   result.__set_name(name);\n   result.__set_repetition_type(repetition);\n   result.__set_num_children(num_children);\n \n+  if (field_id >= 0) {\n+    result.__set_field_id(field_id);\n+  }\n+\n   return result;\n }\n \n+template <typename NodeType>\n+static void CheckNodeRoundtrip(const Node& node) {\n+  format::SchemaElement serialized;\n+  node.ToParquet(&serialized);\n+  std::unique_ptr<Node> recovered = NodeType::FromParquet(&serialized);\n+  ASSERT_TRUE(node.Equals(recovered.get()))\n+      << \"Recovered node not equivalent to original node constructed \"\n+      << \"with logical type \" << node.logical_type()->ToString() << \" got \"\n+      << recovered->logical_type()->ToString();\n+  ASSERT_EQ(recovered->field_id(), node.field_id());\n \n Review comment:\n   I did that later, I'll remove this superfluous check\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-12T22:27:58.761+0000",
                    "updated": "2020-02-12T22:27:58.761+0000",
                    "started": "2020-02-12T22:27:58.761+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "386281",
                    "issueId": "13266653"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13266653/worklog/386282",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6408: ARROW-7080: [C++][Parquet] Read and write \"field_id\" attribute in Parquet files, propagate to Arrow field metadata. Assorted additional changes\nURL: https://github.com/apache/arrow/pull/6408#discussion_r378550378\n \n \n\n ##########\n File path: cpp/src/parquet/schema.h\n ##########\n @@ -141,7 +122,13 @@ class PARQUET_EXPORT Node {\n \n   const std::shared_ptr<const LogicalType>& logical_type() const { return logical_type_; }\n \n-  int id() const { return id_; }\n+  /// \\brief The field_id value for the serialized SchemaElement. If the\n+  /// field_id is less than 0 (e.g. -1), it will not be set when serialized to\n+  /// Thrift\n \n Review comment:\n   The `next_id()` default assignments only occur during serialization of the entire `SchemaDescriptor` (I think, will double check), but if you have `field_id == -1` and call `Node::ToParquet` it will happily serialize. I'll add some comments to clarify\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-12T22:29:24.223+0000",
                    "updated": "2020-02-12T22:29:24.223+0000",
                    "started": "2020-02-12T22:29:24.223+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "386282",
                    "issueId": "13266653"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13266653/worklog/386283",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6408: ARROW-7080: [C++][Parquet] Read and write \"field_id\" attribute in Parquet files, propagate to Arrow field metadata. Assorted additional changes\nURL: https://github.com/apache/arrow/pull/6408#discussion_r378550442\n \n \n\n ##########\n File path: cpp/src/arrow/util/key_value_metadata.h\n ##########\n @@ -34,11 +34,14 @@ namespace arrow {\n class ARROW_EXPORT KeyValueMetadata {\n  public:\n   KeyValueMetadata();\n-  KeyValueMetadata(const std::vector<std::string>& keys,\n-                   const std::vector<std::string>& values);\n+  KeyValueMetadata(std::vector<std::string> keys, std::vector<std::string> values);\n   explicit KeyValueMetadata(const std::unordered_map<std::string, std::string>& map);\n   virtual ~KeyValueMetadata() = default;\n \n+  /// \\brief Convenience constructor\n+  static std::shared_ptr<KeyValueMetadata> Make(std::vector<std::string> keys,\n \n Review comment:\n   Good point. I'll remove this\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-12T22:29:36.459+0000",
                    "updated": "2020-02-12T22:29:36.459+0000",
                    "started": "2020-02-12T22:29:36.458+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "386283",
                    "issueId": "13266653"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13266653/worklog/386284",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6408: ARROW-7080: [C++][Parquet] Read and write \"field_id\" attribute in Parquet files, propagate to Arrow field metadata. Assorted additional changes\nURL: https://github.com/apache/arrow/pull/6408#discussion_r378550490\n \n \n\n ##########\n File path: cpp/src/arrow/table.h\n ##########\n @@ -130,6 +130,63 @@ class ARROW_EXPORT ChunkedArray {\n   ARROW_DISALLOW_COPY_AND_ASSIGN(ChunkedArray);\n };\n \n+namespace internal {\n+\n+/// \\brief EXPERIMENTAL: Utility for incremental iteration over contiguous\n+/// pieces of potentially differently-chunked ChunkedArray objects\n+class MultipleChunkIterator {\n+ public:\n+  MultipleChunkIterator(const ChunkedArray& left, const ChunkedArray& right)\n+      : left_(left),\n+        right_(right),\n+        pos_(0),\n+        length_(left.length()),\n+        chunk_idx_left_(0),\n+        chunk_idx_right_(0),\n+        chunk_pos_left_(0),\n+        chunk_pos_right_(0) {}\n+\n+  bool Next(std::shared_ptr<Array>* next_left, std::shared_ptr<Array>* next_right);\n+\n+  int64_t position() const { return pos_; }\n+\n+ private:\n+  const ChunkedArray& left_;\n+  const ChunkedArray& right_;\n+\n+  // The amount of the entire ChunkedArray consumed\n+  int64_t pos_;\n+\n+  // Length of the chunked array(s)\n+  int64_t length_;\n+\n+  // Current left chunk\n+  int chunk_idx_left_;\n+\n+  // Current right chunk\n+  int chunk_idx_right_;\n+\n+  // Offset into the current left chunk\n+  int64_t chunk_pos_left_;\n+\n+  // Offset into the current right chunk\n+  int64_t chunk_pos_right_;\n+};\n+\n+// Execute the passed function\n \n Review comment:\n   Will do\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-12T22:29:43.497+0000",
                    "updated": "2020-02-12T22:29:43.497+0000",
                    "started": "2020-02-12T22:29:43.496+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "386284",
                    "issueId": "13266653"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13266653/worklog/386388",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #6408: ARROW-7080: [C++][Parquet] Read and write \"field_id\" attribute in Parquet files, propagate to Arrow field metadata. Assorted additional changes\nURL: https://github.com/apache/arrow/pull/6408#issuecomment-585536640\n \n \n   A note for myself, the metadata key should be `b'PARQUET:field_id'` not `b'PARQUET::field_id'`\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-13T03:49:42.452+0000",
                    "updated": "2020-02-13T03:49:42.452+0000",
                    "started": "2020-02-13T03:49:42.451+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "386388",
                    "issueId": "13266653"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13266653/worklog/387473",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #6408: ARROW-7080: [C++][Parquet] Read and write \"field_id\" attribute in Parquet files, propagate to Arrow field metadata. Assorted additional changes\nURL: https://github.com/apache/arrow/pull/6408#issuecomment-586373978\n \n \n   I looked a little more at the automatic field_id assignment and I'm not sure what we're doing is correct, but we should fix it in a dedicated PR. This PR leaves the existing behavior unchanged\r\n   \r\n   https://issues.apache.org/jira/browse/PARQUET-1798\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-14T16:54:26.210+0000",
                    "updated": "2020-02-14T16:54:26.210+0000",
                    "started": "2020-02-14T16:54:26.209+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "387473",
                    "issueId": "13266653"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13266653/worklog/387522",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6408: ARROW-7080: [C++][Parquet] Read and write \"field_id\" attribute in Parquet files, propagate to Arrow field metadata. Assorted additional changes\nURL: https://github.com/apache/arrow/pull/6408#discussion_r379568628\n \n \n\n ##########\n File path: cpp/src/parquet/schema.h\n ##########\n @@ -141,7 +122,13 @@ class PARQUET_EXPORT Node {\n \n   const std::shared_ptr<const LogicalType>& logical_type() const { return logical_type_; }\n \n-  int id() const { return id_; }\n+  /// \\brief The field_id value for the serialized SchemaElement. If the\n+  /// field_id is less than 0 (e.g. -1), it will not be set when serialized to\n+  /// Thrift\n \n Review comment:\n   I fixed these comments. There's follow up investigation to do per PARQUET-1798\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-14T18:02:07.570+0000",
                    "updated": "2020-02-14T18:02:07.570+0000",
                    "started": "2020-02-14T18:02:07.570+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "387522",
                    "issueId": "13266653"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13266653/worklog/387524",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #6408: ARROW-7080: [C++][Parquet] Read and write \"field_id\" attribute in Parquet files, propagate to Arrow field metadata. Assorted additional changes\nURL: https://github.com/apache/arrow/pull/6408#issuecomment-586402335\n \n \n   Alright this should be merge-ready\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-14T18:03:12.622+0000",
                    "updated": "2020-02-14T18:03:12.622+0000",
                    "started": "2020-02-14T18:03:12.621+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "387524",
                    "issueId": "13266653"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13266653/worklog/388376",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #6408: ARROW-7080: [C++][Parquet] Read and write \"field_id\" attribute in Parquet files, propagate to Arrow field metadata. Assorted additional changes\nURL: https://github.com/apache/arrow/pull/6408#issuecomment-586975762\n \n \n   @kou @shiro615 this patch needs some GLib fixes to check schema equality without comparing the metadata, would you be able to take a look (I can try too)?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-17T12:41:09.173+0000",
                    "updated": "2020-02-17T12:41:09.173+0000",
                    "started": "2020-02-17T12:41:09.173+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "388376",
                    "issueId": "13266653"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13266653/worklog/388523",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "shiro615 commented on issue #6408: ARROW-7080: [C++][Parquet] Read and write \"field_id\" attribute in Parquet files, propagate to Arrow field metadata. Assorted additional changes\nURL: https://github.com/apache/arrow/pull/6408#issuecomment-587077588\n \n \n   Sure. I'll take a look this.\r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-17T16:41:51.487+0000",
                    "updated": "2020-02-17T16:41:51.487+0000",
                    "started": "2020-02-17T16:41:51.486+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "388523",
                    "issueId": "13266653"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 31200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@18e33823[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4597f6f6[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5b271ab9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@217d776d[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@38f42031[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@42157f16[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2184573f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@6b888a7d[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@72e4ca95[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1be0e610[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@18de67fc[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@37aacdf8[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 31200,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Feb 21 08:19:09 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-02-21T08:19:09.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7080/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2019-11-06T18:50:52.000+0000",
        "updated": "2020-02-21T09:15:05.000+0000",
        "timeoriginalestimate": null,
        "description": "I'm in the process of adding parquet read support to Iceberg([https://iceberg.apache.org/]), and we use the parquet field_ids as a consistent id when reading a parquet file to create a map between the current schema and the\u00a0schema of the file being read.\u00a0 Unless I've missed something, it appears that field_id is not exposed in the python APIs in pyarrow._parquet.ParquetSchema nor is it available in pyarrow.lib.Schema.\r\n\r\nWould it be possible to add this to either of those two objects?",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "8h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 31200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python][Parquet][C++] Expose parquet field_id in Schema objects",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13266653/comment/16968829",
                    "id": "16968829",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Please feel free. You can propagate it to the Arrow schema as field-level metadata if you like, too. ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-11-07T00:51:31.733+0000",
                    "updated": "2019-11-07T00:51:31.733+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13266653/comment/17018381",
                    "id": "17018381",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "This has to be properly handled in C++. I assigned it to myself for now, if someone else starts working on it please let me know",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-01-17T22:51:07.815+0000",
                    "updated": "2020-01-17T22:51:07.815+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13266653/comment/17035064",
                    "id": "17035064",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "This ended up being a slight can of worms to handle properly. I'm going to put up a PR shortly",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-02-12T05:24:04.957+0000",
                    "updated": "2020-02-12T05:24:04.957+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13266653/comment/17041663",
                    "id": "17041663",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 6408\n[https://github.com/apache/arrow/pull/6408]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-02-21T08:19:09.592+0000",
                    "updated": "2020-02-21T08:19:09.592+0000"
                }
            ],
            "maxResults": 4,
            "total": 4,
            "startAt": 0
        },
        "customfield_12311820": "0|z08bt4:",
        "customfield_12314139": null
    }
}