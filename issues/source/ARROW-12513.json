{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13374478",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374478",
    "key": "ARROW-12513",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350323",
                "id": "12350323",
                "description": "",
                "name": "6.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-10-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/2",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/critical.svg",
            "name": "Critical",
            "id": "2"
        },
        "labels": [
            "parquet-statistics",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12348647",
                "id": "12348647",
                "name": "1.0.1",
                "archived": false,
                "released": true,
                "releaseDate": "2020-08-21"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345977",
                "id": "12345977",
                "description": "",
                "name": "2.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-10-19"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12348823",
                "id": "12348823",
                "description": "",
                "name": "3.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-01-25"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
            "name": "westonpace",
            "key": "westonpace",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Weston Pace",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12337837",
                "id": "12337837",
                "name": "Parquet"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=dbeach24",
            "name": "dbeach24",
            "key": "dbeach24",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34060",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34060",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34060",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34060"
            },
            "displayName": "David Beach",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=dbeach24",
            "name": "dbeach24",
            "key": "dbeach24",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34060",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34060",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34060",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34060"
            },
            "displayName": "David Beach",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 23400,
            "total": 23400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 23400,
            "total": 23400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12513/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 39,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374478/worklog/623400",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace opened a new pull request #10729:\nURL: https://github.com/apache/arrow/pull/10729\n\n\n   This fixes two issues.\r\n   * The null_count must be obtained from the indices array and not the values array\r\n   * The min/max should be based on referenced values and not all values in the values array\r\n   \r\n   Note: This further adds a dependency from parquet onto arrow::compute (I use it both to compute the unique indices and to take the referenced values).  This dependency already existed (column_writer.cc relies on arrow::compute::Cast) so I'm pretty sure this isn't a problem.  Related: ARROW-8891\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-16T04:39:48.591+0000",
                    "updated": "2021-07-16T04:39:48.591+0000",
                    "started": "2021-07-16T04:39:48.591+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623400",
                    "issueId": "13374478"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374478/worklog/623401",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10729:\nURL: https://github.com/apache/arrow/pull/10729#issuecomment-881171588\n\n\n   https://issues.apache.org/jira/browse/ARROW-12513\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-16T04:40:02.896+0000",
                    "updated": "2021-07-16T04:40:02.896+0000",
                    "started": "2021-07-16T04:40:02.896+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623401",
                    "issueId": "13374478"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374478/worklog/623402",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #10729:\nURL: https://github.com/apache/arrow/pull/10729#discussion_r670961210\n\n\n\n##########\nFile path: cpp/src/parquet/statistics.cc\n##########\n@@ -567,6 +568,27 @@ class TypedStatisticsImpl : public TypedStatistics<DType> {\n     SetMinMaxPair(comparator_->GetMinMax(values));\n   }\n \n+  void UpdateArrowDictionary(const ::arrow::Array& indices,\n+                             const ::arrow::Array& dictionary) {\n+    IncrementNullCount(indices.null_count());\n+    IncrementNumValues(indices.length() - indices.null_count());\n+\n+    if (indices.null_count() == indices.length()) {\n+      return;\n+    }\n+\n+    ::arrow::compute::ExecContext ctx(pool_);\n\nReview comment:\n       we probably want to turn off threading.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-16T04:42:54.928+0000",
                    "updated": "2021-07-16T04:42:54.928+0000",
                    "started": "2021-07-16T04:42:54.928+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623402",
                    "issueId": "13374478"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374478/worklog/623403",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #10729:\nURL: https://github.com/apache/arrow/pull/10729#discussion_r670961610\n\n\n\n##########\nFile path: cpp/src/parquet/statistics.cc\n##########\n@@ -567,6 +568,27 @@ class TypedStatisticsImpl : public TypedStatistics<DType> {\n     SetMinMaxPair(comparator_->GetMinMax(values));\n   }\n \n+  void UpdateArrowDictionary(const ::arrow::Array& indices,\n+                             const ::arrow::Array& dictionary) {\n+    IncrementNullCount(indices.null_count());\n+    IncrementNumValues(indices.length() - indices.null_count());\n+\n+    if (indices.null_count() == indices.length()) {\n+      return;\n+    }\n+\n+    ::arrow::compute::ExecContext ctx(pool_);\n+    PARQUET_ASSIGN_OR_THROW(auto referenced_indices,\n\nReview comment:\n       please spell out the auto types here and below, its not really clear what the output type is.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-16T04:44:20.488+0000",
                    "updated": "2021-07-16T04:44:20.488+0000",
                    "started": "2021-07-16T04:44:20.488+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623403",
                    "issueId": "13374478"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374478/worklog/623404",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #10729:\nURL: https://github.com/apache/arrow/pull/10729#discussion_r670962655\n\n\n\n##########\nFile path: cpp/src/parquet/statistics.h\n##########\n@@ -291,6 +291,9 @@ class TypedStatistics : public Statistics {\n   /// arrow::BinaryArray\n   virtual void Update(const ::arrow::Array& values) = 0;\n \n+  virtual void UpdateArrowDictionary(const ::arrow::Array& indices,\n\nReview comment:\n       can this be moved to the caller instead.  It would be nice to try to avoid more coupling of Arrow with the default parquet library.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-16T04:48:00.574+0000",
                    "updated": "2021-07-16T04:48:00.574+0000",
                    "started": "2021-07-16T04:48:00.573+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623404",
                    "issueId": "13374478"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374478/worklog/623405",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #10729:\nURL: https://github.com/apache/arrow/pull/10729#discussion_r670963422\n\n\n\n##########\nFile path: cpp/src/parquet/statistics.cc\n##########\n@@ -567,6 +568,27 @@ class TypedStatisticsImpl : public TypedStatistics<DType> {\n     SetMinMaxPair(comparator_->GetMinMax(values));\n   }\n \n+  void UpdateArrowDictionary(const ::arrow::Array& indices,\n+                             const ::arrow::Array& dictionary) {\n+    IncrementNullCount(indices.null_count());\n+    IncrementNumValues(indices.length() - indices.null_count());\n+\n+    if (indices.null_count() == indices.length()) {\n+      return;\n+    }\n+\n+    ::arrow::compute::ExecContext ctx(pool_);\n+    PARQUET_ASSIGN_OR_THROW(auto referenced_indices,\n+                            ::arrow::compute::Unique(indices, &ctx));\n+    PARQUET_ASSIGN_OR_THROW(\n\nReview comment:\n       this allocate a whole new array?  maybe we should file a follow-up JIRA to make this more efficient.  \r\n   \r\n   In particular it seems like it could be more efficient to get map of dictionary index to sort order (I think we already have a kernel for this) if necessary each time before calculating the statistics if there are any new entries then iterate through the indices doing a comparison in index space.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-16T04:50:43.105+0000",
                    "updated": "2021-07-16T04:50:43.105+0000",
                    "started": "2021-07-16T04:50:43.105+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623405",
                    "issueId": "13374478"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374478/worklog/623407",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #10729:\nURL: https://github.com/apache/arrow/pull/10729#discussion_r670964526\n\n\n\n##########\nFile path: cpp/src/parquet/arrow/arrow_reader_writer_test.cc\n##########\n@@ -3796,6 +3796,95 @@ TEST(TestArrowWriterAdHoc, SchemaMismatch) {\n   ASSERT_RAISES(Invalid, writer->WriteTable(*tbl, 1));\n }\n \n+// ----------------------------------------------------------------------\n+// Tests for directly writing DictionaryArray\n+class TestArrowWriteDictionary : public ::testing::Test {\n+ public:\n+  void SetUp() override {\n+    properties_ = default_arrow_writer_properties();\n+    serialized_data_ = AllocateBuffer();\n+  }\n+\n+  // Generates a range of single character strings from start to end (inclusive)\n+  // Nulls will be inserted starting at index 0.  If there are any null\n+  // values then start will not be the true min.  However, the dictionary\n+  // array will always contain all the values even if they aren't all used.\n+  void GenerateRange(int num_nulls, char start, char end) {\n\nReview comment:\n       this seems overly complex, could you construct the arrays in question with JSON and then combine into a single test case that verifies all of the statistics?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-16T04:54:08.584+0000",
                    "updated": "2021-07-16T04:54:08.584+0000",
                    "started": "2021-07-16T04:54:08.584+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623407",
                    "issueId": "13374478"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374478/worklog/623412",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #10729:\nURL: https://github.com/apache/arrow/pull/10729#issuecomment-881177183\n\n\n   This also fixes: ARROW-11634\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-16T04:58:20.010+0000",
                    "updated": "2021-07-16T04:58:20.010+0000",
                    "started": "2021-07-16T04:58:20.010+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623412",
                    "issueId": "13374478"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374478/worklog/623414",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #10729:\nURL: https://github.com/apache/arrow/pull/10729#issuecomment-881177476\n\n\n   And apparently: PARQUET-1783 a triple wammy\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-16T04:59:15.366+0000",
                    "updated": "2021-07-16T04:59:15.366+0000",
                    "started": "2021-07-16T04:59:15.366+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623414",
                    "issueId": "13374478"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374478/worklog/623416",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #10729:\nURL: https://github.com/apache/arrow/pull/10729#issuecomment-881177867\n\n\n   @westonpace this looks ok to me, I think the only real blocker is not putting this in the parquet statistics class but moving to the call-site.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-16T05:00:33.125+0000",
                    "updated": "2021-07-16T05:00:33.125+0000",
                    "started": "2021-07-16T05:00:33.124+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623416",
                    "issueId": "13374478"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374478/worklog/623426",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #10729:\nURL: https://github.com/apache/arrow/pull/10729#discussion_r670978233\n\n\n\n##########\nFile path: cpp/src/parquet/statistics.cc\n##########\n@@ -567,6 +568,27 @@ class TypedStatisticsImpl : public TypedStatistics<DType> {\n     SetMinMaxPair(comparator_->GetMinMax(values));\n   }\n \n+  void UpdateArrowDictionary(const ::arrow::Array& indices,\n+                             const ::arrow::Array& dictionary) {\n+    IncrementNullCount(indices.null_count());\n+    IncrementNumValues(indices.length() - indices.null_count());\n+\n+    if (indices.null_count() == indices.length()) {\n+      return;\n+    }\n+\n+    ::arrow::compute::ExecContext ctx(pool_);\n+    PARQUET_ASSIGN_OR_THROW(auto referenced_indices,\n+                            ::arrow::compute::Unique(indices, &ctx));\n+    PARQUET_ASSIGN_OR_THROW(\n\nReview comment:\n       I'll create a follow-up.  Another approach I considered was that we could compute the unique indices and then pass those down as a selection filter to the GetMinMax function.  My goal was minimizing change to the existing code.\r\n   \r\n   Or, since we have all these compute kernels now, just use ::arrow::compute::MinMax and pass the min & max into the statistics directly.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-16T05:37:09.832+0000",
                    "updated": "2021-07-16T05:37:09.832+0000",
                    "started": "2021-07-16T05:37:09.831+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623426",
                    "issueId": "13374478"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374478/worklog/623427",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #10729:\nURL: https://github.com/apache/arrow/pull/10729#discussion_r670979161\n\n\n\n##########\nFile path: cpp/src/parquet/statistics.h\n##########\n@@ -291,6 +291,9 @@ class TypedStatistics : public Statistics {\n   /// arrow::BinaryArray\n   virtual void Update(const ::arrow::Array& values) = 0;\n \n+  virtual void UpdateArrowDictionary(const ::arrow::Array& indices,\n\nReview comment:\n       I can move the \"compute referenced values\" logic to the caller so that statistics.cc doesn't depend on ::arrow::compute but I think I still need a second Update method here because the null count comes from the indices array and the min/max from the values array.\r\n   \r\n   Alternatively, I could change the existing Update method to take an optional null_count parameter (where -1 flags to use the old behavior and grab from the array).  I think I'll do this latter approach.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-16T05:40:04.086+0000",
                    "updated": "2021-07-16T05:40:04.086+0000",
                    "started": "2021-07-16T05:40:04.085+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623427",
                    "issueId": "13374478"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374478/worklog/623709",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #10729:\nURL: https://github.com/apache/arrow/pull/10729#discussion_r671368919\n\n\n\n##########\nFile path: cpp/src/parquet/statistics.cc\n##########\n@@ -567,6 +568,27 @@ class TypedStatisticsImpl : public TypedStatistics<DType> {\n     SetMinMaxPair(comparator_->GetMinMax(values));\n   }\n \n+  void UpdateArrowDictionary(const ::arrow::Array& indices,\n+                             const ::arrow::Array& dictionary) {\n+    IncrementNullCount(indices.null_count());\n+    IncrementNumValues(indices.length() - indices.null_count());\n+\n+    if (indices.null_count() == indices.length()) {\n+      return;\n+    }\n+\n+    ::arrow::compute::ExecContext ctx(pool_);\n+    PARQUET_ASSIGN_OR_THROW(auto referenced_indices,\n+                            ::arrow::compute::Unique(indices, &ctx));\n+    PARQUET_ASSIGN_OR_THROW(\n\nReview comment:\n       If we have MinMax and it works for dictionary arrays that sounds like a good idea to me.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-16T16:07:04.257+0000",
                    "updated": "2021-07-16T16:07:04.257+0000",
                    "started": "2021-07-16T16:07:04.256+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623709",
                    "issueId": "13374478"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374478/worklog/623716",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #10729:\nURL: https://github.com/apache/arrow/pull/10729#discussion_r671375657\n\n\n\n##########\nFile path: cpp/src/parquet/statistics.h\n##########\n@@ -291,6 +291,9 @@ class TypedStatistics : public Statistics {\n   /// arrow::BinaryArray\n   virtual void Update(const ::arrow::Array& values) = 0;\n \n+  virtual void UpdateArrowDictionary(const ::arrow::Array& indices,\n\nReview comment:\n       I think making update take an optional null_count parameter actually makes the most sense.  Not sure if you are subscribed to dev@parquet but the null_count statistics are incorrect for repeated fields https://issues.apache.org/jira/browse/PARQUET-2067 and I think the fix will involve passing along the null count as well.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-16T16:17:26.477+0000",
                    "updated": "2021-07-16T16:17:26.477+0000",
                    "started": "2021-07-16T16:17:26.477+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623716",
                    "issueId": "13374478"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374478/worklog/623725",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #10729:\nURL: https://github.com/apache/arrow/pull/10729#discussion_r671385913\n\n\n\n##########\nFile path: cpp/src/parquet/column_writer.cc\n##########\n@@ -1490,7 +1490,8 @@ Status TypedColumnWriterImpl<DType>::WriteArrowDictionary(\n     // TODO(wesm): If some dictionary values are unobserved, then the\n\nReview comment:\n       this comment should be deleted.  I also think you need to move this into WriteIndicesChunk above (I think you need to adjust your test to have batch size and page size small enough to generate multiple pages to catch this (I actually guess this is a different bug though).\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-16T16:34:01.948+0000",
                    "updated": "2021-07-16T16:34:01.948+0000",
                    "started": "2021-07-16T16:34:01.948+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623725",
                    "issueId": "13374478"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374478/worklog/623752",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #10729:\nURL: https://github.com/apache/arrow/pull/10729#discussion_r671401408\n\n\n\n##########\nFile path: cpp/src/parquet/arrow/arrow_reader_writer_test.cc\n##########\n@@ -3796,6 +3796,95 @@ TEST(TestArrowWriterAdHoc, SchemaMismatch) {\n   ASSERT_RAISES(Invalid, writer->WriteTable(*tbl, 1));\n }\n \n+// ----------------------------------------------------------------------\n+// Tests for directly writing DictionaryArray\n+class TestArrowWriteDictionary : public ::testing::Test {\n+ public:\n+  void SetUp() override {\n+    properties_ = default_arrow_writer_properties();\n+    serialized_data_ = AllocateBuffer();\n+  }\n+\n+  // Generates a range of single character strings from start to end (inclusive)\n+  // Nulls will be inserted starting at index 0.  If there are any null\n+  // values then start will not be the true min.  However, the dictionary\n+  // array will always contain all the values even if they aren't all used.\n+  void GenerateRange(int num_nulls, char start, char end) {\n+    int num_values = end - start + 1;\n+    DCHECK_LT(num_nulls, num_values);\n+\n+    ::arrow::StringBuilder dictionary_builder;\n+    ::arrow::Int32Builder indices_builder;\n+\n+    for (char val = start; val <= end; val++) {\n+      int32_t index = static_cast<int32_t>(val - start);\n+      if (val - start >= num_nulls) {\n+        ASSERT_OK(indices_builder.Append(index));\n+      } else {\n+        ASSERT_OK(indices_builder.AppendNull());\n+      }\n+      ASSERT_OK(dictionary_builder.Append(&val, 1));\n+    }\n+\n+    std::shared_ptr<::arrow::Array> dictionary;\n+    std::shared_ptr<::arrow::Array> indices;\n+    ASSERT_OK(dictionary_builder.Finish(&dictionary));\n+    ASSERT_OK(indices_builder.Finish(&indices));\n+\n+    ASSERT_OK_AND_ASSIGN(auto test_column,\n+                         ::arrow::DictionaryArray::FromArrays(indices, dictionary));\n+\n+    auto schema = ::arrow::schema({::arrow::field(\"values\", test_column->type())});\n+    auto batch = ::arrow::RecordBatch::Make(schema, num_values, {test_column});\n+    ASSERT_OK_AND_ASSIGN(test_data_, ::arrow::Table::FromRecordBatches({batch}));\n+  }\n+\n+  void WriteToBuffer() {\n+    auto out_stream = std::make_shared<::arrow::io::BufferOutputStream>(serialized_data_);\n+    auto writer_properties = default_writer_properties();\n+    std::unique_ptr<FileWriter> writer;\n+    ASSERT_OK(FileWriter::Open(*test_data_->schema(), ::arrow::default_memory_pool(),\n+                               out_stream, writer_properties,\n+                               default_arrow_writer_properties(), &writer));\n+    ASSERT_OK(writer->WriteTable(*test_data_, std::numeric_limits<int64_t>::max()));\n+    ASSERT_OK(writer->Close());\n+  }\n+\n+  std::shared_ptr<FileMetaData> LoadWrittenMetadata() {\n+    auto buffer_reader = std::make_shared<::arrow::io::BufferReader>(serialized_data_);\n+    auto parquet_reader = ParquetFileReader::Open(std::move(buffer_reader));\n+    return parquet_reader->metadata();\n+  }\n+\n+  void CheckNullCount() {\n+    GenerateRange(5, 'a', 'z');\n+    WriteToBuffer();\n+    auto metadata = LoadWrittenMetadata();\n+    auto stats = metadata->RowGroup(0)->ColumnChunk(0)->statistics();\n+    ASSERT_TRUE(stats->HasNullCount());\n+    ASSERT_EQ(stats->null_count(), 5);\n+    ASSERT_EQ(stats->num_values(), 21);\n+  }\n+\n+  void CheckMinMax() {\n+    GenerateRange(5, 'a', 'z');\n+    WriteToBuffer();\n+    auto metadata = LoadWrittenMetadata();\n+    auto stats = metadata->RowGroup(0)->ColumnChunk(0)->statistics();\n+    ASSERT_TRUE(stats->HasMinMax());\n+    ASSERT_EQ(stats->EncodeMin(), \"f\");\n\nReview comment:\n       nit: min and max should probably use EXPECT_EQ instead.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-16T17:00:41.850+0000",
                    "updated": "2021-07-16T17:00:41.850+0000",
                    "started": "2021-07-16T17:00:41.850+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623752",
                    "issueId": "13374478"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374478/worklog/623755",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #10729:\nURL: https://github.com/apache/arrow/pull/10729#discussion_r671403080\n\n\n\n##########\nFile path: cpp/src/parquet/arrow/arrow_reader_writer_test.cc\n##########\n@@ -3796,6 +3796,95 @@ TEST(TestArrowWriterAdHoc, SchemaMismatch) {\n   ASSERT_RAISES(Invalid, writer->WriteTable(*tbl, 1));\n }\n \n+// ----------------------------------------------------------------------\n+// Tests for directly writing DictionaryArray\n+class TestArrowWriteDictionary : public ::testing::Test {\n+ public:\n+  void SetUp() override {\n+    properties_ = default_arrow_writer_properties();\n+    serialized_data_ = AllocateBuffer();\n+  }\n+\n+  // Generates a range of single character strings from start to end (inclusive)\n+  // Nulls will be inserted starting at index 0.  If there are any null\n+  // values then start will not be the true min.  However, the dictionary\n+  // array will always contain all the values even if they aren't all used.\n+  void GenerateRange(int num_nulls, char start, char end) {\n+    int num_values = end - start + 1;\n+    DCHECK_LT(num_nulls, num_values);\n+\n+    ::arrow::StringBuilder dictionary_builder;\n+    ::arrow::Int32Builder indices_builder;\n+\n+    for (char val = start; val <= end; val++) {\n+      int32_t index = static_cast<int32_t>(val - start);\n+      if (val - start >= num_nulls) {\n+        ASSERT_OK(indices_builder.Append(index));\n+      } else {\n+        ASSERT_OK(indices_builder.AppendNull());\n+      }\n+      ASSERT_OK(dictionary_builder.Append(&val, 1));\n+    }\n+\n+    std::shared_ptr<::arrow::Array> dictionary;\n+    std::shared_ptr<::arrow::Array> indices;\n+    ASSERT_OK(dictionary_builder.Finish(&dictionary));\n+    ASSERT_OK(indices_builder.Finish(&indices));\n+\n+    ASSERT_OK_AND_ASSIGN(auto test_column,\n+                         ::arrow::DictionaryArray::FromArrays(indices, dictionary));\n+\n+    auto schema = ::arrow::schema({::arrow::field(\"values\", test_column->type())});\n+    auto batch = ::arrow::RecordBatch::Make(schema, num_values, {test_column});\n+    ASSERT_OK_AND_ASSIGN(test_data_, ::arrow::Table::FromRecordBatches({batch}));\n+  }\n+\n+  void WriteToBuffer() {\n+    auto out_stream = std::make_shared<::arrow::io::BufferOutputStream>(serialized_data_);\n+    auto writer_properties = default_writer_properties();\n+    std::unique_ptr<FileWriter> writer;\n+    ASSERT_OK(FileWriter::Open(*test_data_->schema(), ::arrow::default_memory_pool(),\n+                               out_stream, writer_properties,\n+                               default_arrow_writer_properties(), &writer));\n+    ASSERT_OK(writer->WriteTable(*test_data_, std::numeric_limits<int64_t>::max()));\n+    ASSERT_OK(writer->Close());\n+  }\n+\n+  std::shared_ptr<FileMetaData> LoadWrittenMetadata() {\n+    auto buffer_reader = std::make_shared<::arrow::io::BufferReader>(serialized_data_);\n+    auto parquet_reader = ParquetFileReader::Open(std::move(buffer_reader));\n+    return parquet_reader->metadata();\n+  }\n+\n+  void CheckNullCount() {\n+    GenerateRange(5, 'a', 'z');\n+    WriteToBuffer();\n+    auto metadata = LoadWrittenMetadata();\n+    auto stats = metadata->RowGroup(0)->ColumnChunk(0)->statistics();\n+    ASSERT_TRUE(stats->HasNullCount());\n+    ASSERT_EQ(stats->null_count(), 5);\n+    ASSERT_EQ(stats->num_values(), 21);\n+  }\n+\n+  void CheckMinMax() {\n+    GenerateRange(5, 'a', 'z');\n+    WriteToBuffer();\n+    auto metadata = LoadWrittenMetadata();\n\nReview comment:\n       Please generally careful with the use of auto.  The [style guide recommends it just of saving space](https://google.github.io/styleguide/cppguide.html#Type_deduction)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-16T17:03:56.474+0000",
                    "updated": "2021-07-16T17:03:56.474+0000",
                    "started": "2021-07-16T17:03:56.473+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623755",
                    "issueId": "13374478"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374478/worklog/623961",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #10729:\nURL: https://github.com/apache/arrow/pull/10729#discussion_r671592867\n\n\n\n##########\nFile path: cpp/src/parquet/statistics.cc\n##########\n@@ -567,6 +568,27 @@ class TypedStatisticsImpl : public TypedStatistics<DType> {\n     SetMinMaxPair(comparator_->GetMinMax(values));\n   }\n \n+  void UpdateArrowDictionary(const ::arrow::Array& indices,\n+                             const ::arrow::Array& dictionary) {\n+    IncrementNullCount(indices.null_count());\n+    IncrementNumValues(indices.length() - indices.null_count());\n+\n+    if (indices.null_count() == indices.length()) {\n+      return;\n+    }\n+\n+    ::arrow::compute::ExecContext ctx(pool_);\n\nReview comment:\n       Done.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-17T02:08:42.030+0000",
                    "updated": "2021-07-17T02:08:42.030+0000",
                    "started": "2021-07-17T02:08:42.030+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623961",
                    "issueId": "13374478"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374478/worklog/623962",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #10729:\nURL: https://github.com/apache/arrow/pull/10729#discussion_r671592983\n\n\n\n##########\nFile path: cpp/src/parquet/statistics.cc\n##########\n@@ -567,6 +568,27 @@ class TypedStatisticsImpl : public TypedStatistics<DType> {\n     SetMinMaxPair(comparator_->GetMinMax(values));\n   }\n \n+  void UpdateArrowDictionary(const ::arrow::Array& indices,\n+                             const ::arrow::Array& dictionary) {\n+    IncrementNullCount(indices.null_count());\n+    IncrementNumValues(indices.length() - indices.null_count());\n+\n+    if (indices.null_count() == indices.length()) {\n+      return;\n+    }\n+\n+    ::arrow::compute::ExecContext ctx(pool_);\n+    PARQUET_ASSIGN_OR_THROW(auto referenced_indices,\n\nReview comment:\n       I removed all instances of `auto` unless it was blatantly obvious (e.g. returning from make_shared).  Although in this spot it is Datum which isn't much clearer :)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-17T02:09:27.637+0000",
                    "updated": "2021-07-17T02:09:27.637+0000",
                    "started": "2021-07-17T02:09:27.637+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623962",
                    "issueId": "13374478"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374478/worklog/623963",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #10729:\nURL: https://github.com/apache/arrow/pull/10729#discussion_r671593084\n\n\n\n##########\nFile path: cpp/src/parquet/statistics.h\n##########\n@@ -291,6 +291,9 @@ class TypedStatistics : public Statistics {\n   /// arrow::BinaryArray\n   virtual void Update(const ::arrow::Array& values) = 0;\n \n+  virtual void UpdateArrowDictionary(const ::arrow::Array& indices,\n\nReview comment:\n       I ended up just exposing `IncrementNullCount` and `IncrementNumValues` and then added `bool update_counts` to `Update`.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-17T02:10:32.188+0000",
                    "updated": "2021-07-17T02:10:32.188+0000",
                    "started": "2021-07-17T02:10:32.188+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623963",
                    "issueId": "13374478"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 23400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@4cb68c50[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@21bfeb5f[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7e2b4925[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@2090a0ac[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@505f7e83[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@6aefa768[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4e29a971[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@6b99e5d8[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4099354e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@575a0ed2[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@54bb4769[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7028cf03[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 23400,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Aug 09 20:38:08 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-08-09T20:38:08.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12513/watchers",
            "watchCount": 6,
            "isWatching": false
        },
        "created": "2021-04-22T18:09:53.000+0000",
        "updated": "2021-08-09T20:38:08.000+0000",
        "timeoriginalestimate": null,
        "description": "When writing a Table as Parquet, when the table contains columns represented as dictionary-encoded arrays, those columns show an incorrect null_count of 0 in the Parquet metadata.\u00a0 If the same data is saved without dictionary-encoding the array, then the null_count is correct.\r\n\r\nConfirmed bug with PyArrow 1.0.1, 2.0.0, and 3.0.0.\r\n\r\nNOTE: I'm a PyArrow user, but I believe this bug is actually in the C++ implementation of the Arrow/Parquet writer.\r\nh3. Setup\r\n{code:python}\r\nimport pyarrow as pa\r\nfrom pyarrow import parquet{code}\r\nh3. Bug\r\n\r\n(writes a dictionary encoded Arrow array to parquet)\r\n{code:python}\r\narray1 = pa.array([None, 'foo', 'bar'] * 5, type=pa.string())\r\nassert array1.null_count == 5\r\narray1dict = array1.dictionary_encode()\r\nassert array1dict.null_count == 5\r\ntable = pa.Table.from_arrays([array1dict], [\"mycol\"])\r\nparquet.write_table(table, \"testtable.parquet\")\r\nmeta = parquet.read_metadata(\"testtable.parquet\")\r\nmeta.row_group(0).column(0).statistics.null_count  # RESULT: 0 (WRONG!){code}\r\nh3. Correct\r\n\r\n(writes same data without dictionary encoding the Arrow array)\r\n{code:python}\r\narray1 = pa.array([None, 'foo', 'bar'] * 5, type=pa.string())\r\nassert array1.null_count == 5\r\ntable = pa.Table.from_arrays([array1], [\"mycol\"])\r\nparquet.write_table(table, \"testtable.parquet\")\r\nmeta = parquet.read_metadata(\"testtable.parquet\")\r\nmeta.row_group(0).column(0).statistics.null_count  # RESULT: 5 (CORRECT)\r\n{code}\r\n\u00a0",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "6.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 23400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Parquet] Parquet Writer always puts null_count=0 in Parquet statistics for dictionary-encoded array with nulls",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": "RHEL6",
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374478/comment/17368224",
                    "id": "17368224",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=klykov",
                        "name": "klykov",
                        "key": "klykov",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=klykov&avatarId=44539",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=klykov&avatarId=44539",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=klykov&avatarId=44539",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=klykov&avatarId=44539"
                        },
                        "displayName": "Kirill Lykov",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "I would like to have a look and will try to reproduce in a C++ unit test",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=klykov",
                        "name": "klykov",
                        "key": "klykov",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=klykov&avatarId=44539",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=klykov&avatarId=44539",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=klykov&avatarId=44539",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=klykov&avatarId=44539"
                        },
                        "displayName": "Kirill Lykov",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-06-23T13:54:28.871+0000",
                    "updated": "2021-06-23T13:54:28.871+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374478/comment/17373588",
                    "id": "17373588",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=klykov",
                        "name": "klykov",
                        "key": "klykov",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=klykov&avatarId=44539",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=klykov&avatarId=44539",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=klykov&avatarId=44539",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=klykov&avatarId=44539"
                        },
                        "displayName": "Kirill Lykov",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "This problem is only with strings and binarytype. It can be reproduced on cpp level. distinct_count is also 0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=klykov",
                        "name": "klykov",
                        "key": "klykov",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=klykov&avatarId=44539",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=klykov&avatarId=44539",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=klykov&avatarId=44539",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=klykov&avatarId=44539"
                        },
                        "displayName": "Kirill Lykov",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-07-02T15:12:38.122+0000",
                    "updated": "2021-07-02T15:18:24.912+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374478/comment/17377460",
                    "id": "17377460",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=klykov",
                        "name": "klykov",
                        "key": "klykov",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=klykov&avatarId=44539",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=klykov&avatarId=44539",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=klykov&avatarId=44539",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=klykov&avatarId=44539"
                        },
                        "displayName": "Kirill Lykov",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Looks like there are different call stacks for int32 and strings.\r\nFor int32\r\ncolumn_writer.cc:1438\r\n\r\n> WriteArrowDense >WriteArrowZeroCopy >WriteBatchSpaced > WriteValuesSpaced\r\nthere we compute num_nulls: num_spaced_values - num_values;\r\nand pass the value down\r\n> UpdateSpaced > IncrementNullCount\r\n\r\n--------------\r\nwhile for string:\r\n\r\n> WriteArrow > WriteArrowDictionary \r\nthere is a suspicious TODO comment by wesm (If some dictionary values are unobserved...)\r\nhere as input we receive array and make dictionary out of it.\r\nAlso Array might have null_count != 0, dictionary will have it 0: \r\nsee https://github.com/apache/arrow/blob/master/cpp/src/parquet/column_writer.cc#L1455\r\nThis happens because in https://github.com/apache/arrow/blob/master/cpp/src/arrow/array/array_dict.cc#L111 we create array without null_count information.\r\nLater this dictionary passed down and we set null_count to 0\r\n>Update \r\n-- Array values has null_count == 0\r\n> IncrementNullCount\r\n\r\n\r\nBut this is not all the differences between two call stacks.\r\nFor strings we return here -- https://github.com/apache/arrow/blob/master/cpp/src/parquet/column_writer.cc#L1303\r\nSo the value stored in new_null_count is lost. ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=klykov",
                        "name": "klykov",
                        "key": "klykov",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=klykov&avatarId=44539",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=klykov&avatarId=44539",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=klykov&avatarId=44539",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=klykov&avatarId=44539"
                        },
                        "displayName": "Kirill Lykov",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-07-08T15:27:31.661+0000",
                    "updated": "2021-07-08T15:30:31.177+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374478/comment/17377482",
                    "id": "17377482",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield",
                        "name": "emkornfield",
                        "key": "emkornfield",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "I think this is exactly a problem with the comment left by Wes.\u00a0 In the Python example I would guess the dictionary array has zero nulls?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield",
                        "name": "emkornfield",
                        "key": "emkornfield",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-07-08T16:08:37.260+0000",
                    "updated": "2021-07-08T16:08:37.260+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374478/comment/17377493",
                    "id": "17377493",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I agree that definitely we should compute the accurate statistics given the observed dictionary values and account for the nulls (if any) in the dictionary indices. This was an oversight on my part (the fact that a 0 null count would be written when using the dictionary values to compute the statistics) ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-07-08T16:28:38.579+0000",
                    "updated": "2021-07-08T16:28:38.579+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374478/comment/17377579",
                    "id": "17377579",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "The comment is in the right spot but it's a little unclear what it is saying.\r\n\r\nAt the risk of being redundant, I'll add some explanation.\u00a0\u00a0 There are two ways that a null can be stored in a dictionary encoded array.\u00a0 Keep in mind that every dictionary contains two arrays.\u00a0 There is a long array of indices and a short array of values (usually called the \"dictionary\" but I will call it \"values\" to avoid confusion).\r\n\r\nThe first method, called \"MASK\", in arrow::compute::DictionaryEncodeOptions is done by storing a 0 in the validity bit of the long indices array:\r\n{code:java}\r\nauto indices = ArrayFromJSON(int32(), \"[3, 0, 0, 0, null, null, 3, 0, null, 3, 0, null]\");\r\nauto values = ArrayFromJSON(int64(), \"[10, 20, 30, 40]\");\r\n{code}\r\nThe second method, called \"ENCODE\" in arrow::compute::DictionaryEncodeOptions is done by storing a 0 in the values array and then referencing the index of that null value.\r\n{code:java}\r\nauto indices = ArrayFromJSON(int32(), \"[3, 0, 0, 0, 1, 1, 3, 0, 1, 3, 0, 1]\");\r\nauto values = ArrayFromJSON(int64(), \"[10, null, 30, 40]\");\r\n{code}\r\nBoth of these represent the (plain encoded) array:\r\n{code:java}\r\nArrayFromJSON(int64(), \"[40, 10, 10, 10, null, null, 40, 10, null, 40, 10, null]\");\r\n{code}\r\nThe two approaches can also be mixed.\u00a0\u00a0 At one point in time (and I'm pretty sure it is still true today) an array created with ENCODE will not report a correct null count because the null count does not currently consider anything other than how many bits are masked.\r\n\r\nCurrently arrow will prevent you from trying to write parquet data unless the dictionary is fully MASKed (that is, there are no nulls in the values array) ([https://github.com/apache/arrow/blob/81ff679c47754692224f655dab32cc0936bb5f55/cpp/src/parquet/arrow/path_internal.cc#L753)]\r\n\r\n\u00a0\r\n\r\nSo, when actually writing an Arrow dictionary array to parquet it first splits the array into its two components (the indices array and the values array).\u00a0 It is then using the values array to update statistics.\u00a0 This makes sense for min/max.\u00a0 However, for null, we have already ensured that the values array does not have a null in it.\r\n\r\n\u00a0\r\n\r\nSo we should be using the indices array for the null count.\u00a0 Given that we know the values array does not have null we can safely assume that all nulls are stored in the indices array and that should always give us the correct value.\u00a0 I can take a stab at a fix if no one else is planning on it.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-07-08T20:04:34.799+0000",
                    "updated": "2021-07-08T20:04:34.799+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374478/comment/17377582",
                    "id": "17377582",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield",
                        "name": "emkornfield",
                        "key": "emkornfield",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": ">\u00a0This makes sense for min/max.\u00a0\r\n\r\nThis doesn't necessarily make sense even for dictionary values.\u00a0 It only makes sense if all values in the dictionary are referenced.\u00a0 Otherwise the bounds still ends up being loose (there is was an open bug on this).\u00a0\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield",
                        "name": "emkornfield",
                        "key": "emkornfield",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-07-08T20:12:59.134+0000",
                    "updated": "2021-07-08T20:12:59.134+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374478/comment/17377589",
                    "id": "17377589",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Ah, I see your point Micah.\u00a0 Now Wes' comment is clear to me.\u00a0 Is there a performance concern for extracting the \"referenced\" / \"observed\" values?\u00a0 Or is it simply a \"to be implemented\"?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-07-08T20:54:40.295+0000",
                    "updated": "2021-07-08T20:54:40.295+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374478/comment/17377891",
                    "id": "17377891",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=klykov",
                        "name": "klykov",
                        "key": "klykov",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=klykov&avatarId=44539",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=klykov&avatarId=44539",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=klykov&avatarId=44539",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=klykov&avatarId=44539"
                        },
                        "displayName": "Kirill Lykov",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Thanks for detailed explanation, I didn't get that there are two ways of storing null_count from the code.\r\n[~westonpace]\u00a0> I can take a stab at a fix if no one else is planning on it.\r\nPlease go ahead, I've unassigned it, I think it will require too much guidance for me to fix it.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=klykov",
                        "name": "klykov",
                        "key": "klykov",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=klykov&avatarId=44539",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=klykov&avatarId=44539",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=klykov&avatarId=44539",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=klykov&avatarId=44539"
                        },
                        "displayName": "Kirill Lykov",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-07-09T07:39:31.601+0000",
                    "updated": "2021-07-09T07:39:31.601+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374478/comment/17378140",
                    "id": "17378140",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield",
                        "name": "emkornfield",
                        "key": "emkornfield",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "[~westonpace]\u00a0my thinking here is it would be better to have accurate statistics rather then any performance gains.\u00a0 If we ever want to support parquet indexes we will need to visit each value per page anyways.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield",
                        "name": "emkornfield",
                        "key": "emkornfield",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-07-09T15:52:50.973+0000",
                    "updated": "2021-07-09T15:52:50.973+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13374478/comment/17396274",
                    "id": "17396274",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Issue resolved by pull request 10729\n[https://github.com/apache/arrow/pull/10729]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-08-09T20:38:08.670+0000",
                    "updated": "2021-08-09T20:38:08.670+0000"
                }
            ],
            "maxResults": 11,
            "total": 11,
            "startAt": 0
        },
        "customfield_12311820": "0|z0qcq8:",
        "customfield_12314139": null
    }
}