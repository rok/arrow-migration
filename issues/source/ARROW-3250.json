{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13185545",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13185545",
    "key": "ARROW-3250",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343066",
                "id": "12343066",
                "description": "",
                "name": "0.11.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-10-08"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=atris",
            "name": "atris",
            "key": "atris",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Atri Sharma",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 7800,
            "total": 7800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 7800,
            "total": 7800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3250/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 15,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13185545/worklog/149697",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "atris opened a new pull request #2660: ARROW-3250: Buffer implementation to own memory from a std::string\nURL: https://github.com/apache/arrow/pull/2660\n \n \n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-30T04:11:40.361+0000",
                    "updated": "2018-09-30T04:11:40.361+0000",
                    "started": "2018-09-30T04:11:40.361+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "149697",
                    "issueId": "13185545"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13185545/worklog/149744",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy commented on a change in pull request #2660: ARROW-3250: Buffer implementation which owns memory from a std::string\nURL: https://github.com/apache/arrow/pull/2660#discussion_r221452469\n \n \n\n ##########\n File path: cpp/src/arrow/buffer.h\n ##########\n @@ -357,6 +371,15 @@ Status AllocateEmptyBitmap(MemoryPool* pool, int64_t length,\n ARROW_EXPORT\n Status AllocateEmptyBitmap(int64_t length, std::shared_ptr<Buffer>* out);\n \n+/// \\brief Allocate a Buffer which owns the memory held by a std::string\n+///\n+/// \\param[in] data input data std::string\n+/// \\param[out] out the allocated buffer\n+///\n+/// \\return Status message\n+ARROW_EXPORT\n+Status AllocateSTLStringBuffer(std::string& data, std::shared_ptr<STLStringBuffer>* out);\n \n Review comment:\n   Can you change the type of `data` to `const std::string&`?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-30T09:00:19.733+0000",
                    "updated": "2018-09-30T09:00:19.733+0000",
                    "started": "2018-09-30T09:00:19.732+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "149744",
                    "issueId": "13185545"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13185545/worklog/149752",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "atris commented on a change in pull request #2660: ARROW-3250: Buffer implementation which owns memory from a std::string\nURL: https://github.com/apache/arrow/pull/2660#discussion_r221453485\n \n \n\n ##########\n File path: cpp/src/arrow/buffer.h\n ##########\n @@ -357,6 +371,15 @@ Status AllocateEmptyBitmap(MemoryPool* pool, int64_t length,\n ARROW_EXPORT\n Status AllocateEmptyBitmap(int64_t length, std::shared_ptr<Buffer>* out);\n \n+/// \\brief Allocate a Buffer which owns the memory held by a std::string\n+///\n+/// \\param[in] data input data std::string\n+/// \\param[out] out the allocated buffer\n+///\n+/// \\return Status message\n+ARROW_EXPORT\n+Status AllocateSTLStringBuffer(std::string& data, std::shared_ptr<STLStringBuffer>* out);\n \n Review comment:\n   Good point. I did not make this as ``const``, since according to ``std::move`` semantics, the memory held by the original object will be in an `undefined` state after the move operation. So, essentially, we are mutating the state of the object post facto ``std::move``.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-30T09:35:05.857+0000",
                    "updated": "2018-09-30T09:35:05.857+0000",
                    "started": "2018-09-30T09:35:05.856+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "149752",
                    "issueId": "13185545"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13185545/worklog/149754",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy commented on a change in pull request #2660: ARROW-3250: Buffer implementation which owns memory from a std::string\nURL: https://github.com/apache/arrow/pull/2660#discussion_r221453673\n \n \n\n ##########\n File path: cpp/src/arrow/buffer.h\n ##########\n @@ -357,6 +371,15 @@ Status AllocateEmptyBitmap(MemoryPool* pool, int64_t length,\n ARROW_EXPORT\n Status AllocateEmptyBitmap(int64_t length, std::shared_ptr<Buffer>* out);\n \n+/// \\brief Allocate a Buffer which owns the memory held by a std::string\n+///\n+/// \\param[in] data input data std::string\n+/// \\param[out] out the allocated buffer\n+///\n+/// \\return Status message\n+ARROW_EXPORT\n+Status AllocateSTLStringBuffer(std::string& data, std::shared_ptr<STLStringBuffer>* out);\n \n Review comment:\n   Thanks, that makes sense. \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-30T09:43:28.483+0000",
                    "updated": "2018-09-30T09:43:28.483+0000",
                    "started": "2018-09-30T09:43:28.482+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "149754",
                    "issueId": "13185545"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13185545/worklog/149755",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2660: ARROW-3250: Buffer implementation which owns memory from a std::string\nURL: https://github.com/apache/arrow/pull/2660#discussion_r221453831\n \n \n\n ##########\n File path: cpp/src/arrow/buffer.h\n ##########\n @@ -357,6 +371,15 @@ Status AllocateEmptyBitmap(MemoryPool* pool, int64_t length,\n ARROW_EXPORT\n Status AllocateEmptyBitmap(int64_t length, std::shared_ptr<Buffer>* out);\n \n+/// \\brief Allocate a Buffer which owns the memory held by a std::string\n+///\n+/// \\param[in] data input data std::string\n+/// \\param[out] out the allocated buffer\n+///\n+/// \\return Status message\n+ARROW_EXPORT\n+Status AllocateSTLStringBuffer(std::string& data, std::shared_ptr<STLStringBuffer>* out);\n \n Review comment:\n   This isn't the desired scope of ARROW-3250. The idea was to be able to write `Buffer::FromString(std::move(str), &buffer)` and have the memory from `str` transferred to an `std::string` member of `buffer`\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-30T09:46:39.447+0000",
                    "updated": "2018-09-30T09:46:39.447+0000",
                    "started": "2018-09-30T09:46:39.446+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "149755",
                    "issueId": "13185545"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13185545/worklog/149756",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2660: ARROW-3250: Buffer implementation which owns memory from a std::string\nURL: https://github.com/apache/arrow/pull/2660#discussion_r221453707\n \n \n\n ##########\n File path: cpp/src/arrow/buffer.h\n ##########\n @@ -259,6 +259,20 @@ class ARROW_EXPORT ResizableBuffer : public MutableBuffer {\n   ResizableBuffer(uint8_t* data, int64_t size) : MutableBuffer(data, size) {}\n };\n \n+/// \\class STLStringBuffer\n+/// \\brief A Buffer which owns the memory pointed to by a std::string\n+class ARROW_EXPORT STLStringBuffer : public Buffer {\n+public:\n+  STLStringBuffer(std::string& data)\n+  : Buffer(reinterpret_cast<const uint8_t*>(std::move(data.c_str())),\n+          static_cast<int64_t>(data.size())) {\n \n Review comment:\n   This isn't right. This class does not take ownership of the memory in `data`\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-30T09:46:39.449+0000",
                    "updated": "2018-09-30T09:46:39.449+0000",
                    "started": "2018-09-30T09:46:39.449+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "149756",
                    "issueId": "13185545"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13185545/worklog/149757",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2660: ARROW-3250: Buffer implementation which owns memory from a std::string\nURL: https://github.com/apache/arrow/pull/2660#discussion_r221453846\n \n \n\n ##########\n File path: cpp/src/arrow/buffer-test.cc\n ##########\n @@ -141,6 +141,19 @@ TEST(TestMutableBuffer, Wrap) {\n   ASSERT_EQ(4, values[1]);\n }\n \n+TEST(TestSTLStringBuffer, STLStringBuffer) {\n+  std::string expected = \"input data\";\n+\n+  std::shared_ptr<STLStringBuffer> buffer;\n+  {\n+    std::string data_str = \"input data\";\n+    ASSERT_OK(AllocateSTLStringBuffer(data_str, &buffer));\n+  }\n+\n+  ASSERT_EQ(0, memcmp(buffer->data(), expected.c_str(), expected.size()));\n+  ASSERT_EQ(static_cast<int64_t>(expected.size()), buffer->size());\n \n Review comment:\n   You should test that `expected` is empty now (not sure what are the expected semantics for a `std::string` after it has been moved\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-30T09:46:39.468+0000",
                    "updated": "2018-09-30T09:46:39.468+0000",
                    "started": "2018-09-30T09:46:39.467+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "149757",
                    "issueId": "13185545"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13185545/worklog/149758",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2660: ARROW-3250: Buffer implementation which owns memory from a std::string\nURL: https://github.com/apache/arrow/pull/2660#discussion_r221453697\n \n \n\n ##########\n File path: cpp/src/arrow/buffer.h\n ##########\n @@ -259,6 +259,20 @@ class ARROW_EXPORT ResizableBuffer : public MutableBuffer {\n   ResizableBuffer(uint8_t* data, int64_t size) : MutableBuffer(data, size) {}\n };\n \n+/// \\class STLStringBuffer\n+/// \\brief A Buffer which owns the memory pointed to by a std::string\n+class ARROW_EXPORT STLStringBuffer : public Buffer {\n \n Review comment:\n   I don't think this should be a public class. \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-30T09:46:39.471+0000",
                    "updated": "2018-09-30T09:46:39.471+0000",
                    "started": "2018-09-30T09:46:39.470+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "149758",
                    "issueId": "13185545"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13185545/worklog/149766",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "atris commented on a change in pull request #2660: ARROW-3250: Buffer implementation which owns memory from a std::string\nURL: https://github.com/apache/arrow/pull/2660#discussion_r221454442\n \n \n\n ##########\n File path: cpp/src/arrow/buffer.h\n ##########\n @@ -259,6 +259,20 @@ class ARROW_EXPORT ResizableBuffer : public MutableBuffer {\n   ResizableBuffer(uint8_t* data, int64_t size) : MutableBuffer(data, size) {}\n };\n \n+/// \\class STLStringBuffer\n+/// \\brief A Buffer which owns the memory pointed to by a std::string\n+class ARROW_EXPORT STLStringBuffer : public Buffer {\n+public:\n+  STLStringBuffer(std::string& data)\n+  : Buffer(reinterpret_cast<const uint8_t*>(std::move(data.c_str())),\n+          static_cast<int64_t>(data.size())) {\n \n Review comment:\n   ``STLStringBuffer`` will initialize its base class's ``data_`` member with the rvalue reference returned by ``std::move``. Post the operation, ``data_`` member in the class should be the only one with a valid reference to the memory.\r\n   \r\n   Is gaining ownership of the actual data i.e. ``data.c_str()`` the objective, or would we rather have everything that ``data`` points to? I took inspiration from ``FromString`` methods and took reference for only the ``char`` part of the ``string object``\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-30T10:09:48.707+0000",
                    "updated": "2018-09-30T10:09:48.707+0000",
                    "started": "2018-09-30T10:09:48.706+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "149766",
                    "issueId": "13185545"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13185545/worklog/149767",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "atris commented on a change in pull request #2660: ARROW-3250: Buffer implementation which owns memory from a std::string\nURL: https://github.com/apache/arrow/pull/2660#discussion_r221454465\n \n \n\n ##########\n File path: cpp/src/arrow/buffer-test.cc\n ##########\n @@ -141,6 +141,19 @@ TEST(TestMutableBuffer, Wrap) {\n   ASSERT_EQ(4, values[1]);\n }\n \n+TEST(TestSTLStringBuffer, STLStringBuffer) {\n+  std::string expected = \"input data\";\n+\n+  std::shared_ptr<STLStringBuffer> buffer;\n+  {\n+    std::string data_str = \"input data\";\n+    ASSERT_OK(AllocateSTLStringBuffer(data_str, &buffer));\n+  }\n+\n+  ASSERT_EQ(0, memcmp(buffer->data(), expected.c_str(), expected.size()));\n+  ASSERT_EQ(static_cast<int64_t>(expected.size()), buffer->size());\n \n Review comment:\n   ``std::move`` does not define a specific state for the state of the moved memory, just cautions that the original reference should not be treated as valid anymore\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-30T10:11:05.726+0000",
                    "updated": "2018-09-30T10:11:05.726+0000",
                    "started": "2018-09-30T10:11:05.725+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "149767",
                    "issueId": "13185545"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13185545/worklog/149771",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2660: ARROW-3250: Buffer implementation which owns memory from a std::string\nURL: https://github.com/apache/arrow/pull/2660#discussion_r221454578\n \n \n\n ##########\n File path: cpp/src/arrow/buffer.h\n ##########\n @@ -259,6 +259,20 @@ class ARROW_EXPORT ResizableBuffer : public MutableBuffer {\n   ResizableBuffer(uint8_t* data, int64_t size) : MutableBuffer(data, size) {}\n };\n \n+/// \\class STLStringBuffer\n+/// \\brief A Buffer which owns the memory pointed to by a std::string\n+class ARROW_EXPORT STLStringBuffer : public Buffer {\n+public:\n+  STLStringBuffer(std::string& data)\n+  : Buffer(reinterpret_cast<const uint8_t*>(std::move(data.c_str())),\n+          static_cast<int64_t>(data.size())) {\n \n Review comment:\n   `Buffer` won't deallocate this memory, though, because it has a trivial destructor. The safest thing would be to use a `std::string` to transfer the internal state of the input `std::string` and have deallocation handled by RAII\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-30T10:15:15.169+0000",
                    "updated": "2018-09-30T10:15:15.169+0000",
                    "started": "2018-09-30T10:15:15.168+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "149771",
                    "issueId": "13185545"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13185545/worklog/149772",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2660: ARROW-3250: Buffer implementation which owns memory from a std::string\nURL: https://github.com/apache/arrow/pull/2660#discussion_r221453846\n \n \n\n ##########\n File path: cpp/src/arrow/buffer-test.cc\n ##########\n @@ -141,6 +141,19 @@ TEST(TestMutableBuffer, Wrap) {\n   ASSERT_EQ(4, values[1]);\n }\n \n+TEST(TestSTLStringBuffer, STLStringBuffer) {\n+  std::string expected = \"input data\";\n+\n+  std::shared_ptr<STLStringBuffer> buffer;\n+  {\n+    std::string data_str = \"input data\";\n+    ASSERT_OK(AllocateSTLStringBuffer(data_str, &buffer));\n+  }\n+\n+  ASSERT_EQ(0, memcmp(buffer->data(), expected.c_str(), expected.size()));\n+  ASSERT_EQ(static_cast<int64_t>(expected.size()), buffer->size());\n \n Review comment:\n   You should test that `data_str` is empty after the move (not sure what are the expected semantics for a `std::string` after it has been moved)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-30T10:17:04.706+0000",
                    "updated": "2018-09-30T10:17:04.706+0000",
                    "started": "2018-09-30T10:17:04.705+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "149772",
                    "issueId": "13185545"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13185545/worklog/149776",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "atris commented on issue #2660: ARROW-3250: Buffer implementation which owns memory from a std::string\nURL: https://github.com/apache/arrow/pull/2660#issuecomment-425710988\n \n \n   That would seem like a duplication of responsibilities between data_ and\n   the new proposed string member. IMO the destructor should have a way to\n   know if it owns the memory, and should de allocate it on destruction of\n   object.\n   \n   On Sun, 30 Sep 2018 at 3:45 PM, Wes McKinney <notifications@github.com>\n   wrote:\n   \n   > *@wesm* commented on this pull request.\n   > ------------------------------\n   >\n   > In cpp/src/arrow/buffer.h\n   > <https://github.com/apache/arrow/pull/2660#discussion_r221454578>:\n   >\n   > > @@ -259,6 +259,20 @@ class ARROW_EXPORT ResizableBuffer : public MutableBuffer {\n   >    ResizableBuffer(uint8_t* data, int64_t size) : MutableBuffer(data, size) {}\n   >  };\n   >\n   > +/// \\class STLStringBuffer\n   > +/// \\brief A Buffer which owns the memory pointed to by a std::string\n   > +class ARROW_EXPORT STLStringBuffer : public Buffer {\n   > +public:\n   > +  STLStringBuffer(std::string& data)\n   > +  : Buffer(reinterpret_cast<const uint8_t*>(std::move(data.c_str())),\n   > +          static_cast<int64_t>(data.size())) {\n   >\n   > Buffer won't deallocate this memory, though, because it has a trivial\n   > destructor. The safest thing would be to use a std::string to transfer\n   > the internal state of the input std::string and have deallocation handled\n   > by RAII\n   >\n   > \u2014\n   > You are receiving this because you authored the thread.\n   > Reply to this email directly, view it on GitHub\n   > <https://github.com/apache/arrow/pull/2660#discussion_r221454578>, or mute\n   > the thread\n   > <https://github.com/notifications/unsubscribe-auth/ABpO49K5mMkCGlnsI4Me05aXdc6Nicqzks5ugJm4gaJpZM4XAzaS>\n   > .\n   >\n   -- \n   Regards,\n   \n   Atri\n   *l'apprenant*\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-30T10:33:19.266+0000",
                    "updated": "2018-09-30T10:33:19.266+0000",
                    "started": "2018-09-30T10:33:19.265+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "149776",
                    "issueId": "13185545"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13185545/worklog/149907",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2660: ARROW-3250: Buffer implementation which owns memory from a std::string\nURL: https://github.com/apache/arrow/pull/2660#issuecomment-425822651\n \n \n   +1. I learned about small string optimizations (SSO) -- when strings are small, the value of `c_str()` does not refer to heap memory and so does not stay the safe through a `move` operation\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-01T08:08:27.197+0000",
                    "updated": "2018-10-01T08:08:27.197+0000",
                    "started": "2018-10-01T08:08:27.195+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "149907",
                    "issueId": "13185545"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13185545/worklog/149908",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm closed pull request #2660: ARROW-3250: [C++] Buffer implementation which owns memory from a std::string\nURL: https://github.com/apache/arrow/pull/2660\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/buffer-test.cc b/cpp/src/arrow/buffer-test.cc\nindex b66425019a..6ee60765d2 100644\n--- a/cpp/src/arrow/buffer-test.cc\n+++ b/cpp/src/arrow/buffer-test.cc\n@@ -141,6 +141,21 @@ TEST(TestMutableBuffer, Wrap) {\n   ASSERT_EQ(4, values[1]);\n }\n \n+TEST(TestBuffer, FromStringRvalue) {\n+  std::string expected = \"input data\";\n+\n+  std::shared_ptr<Buffer> buffer;\n+  {\n+    std::string data_str = \"input data\";\n+    buffer = Buffer::FromString(std::move(data_str));\n+  }\n+\n+  ASSERT_FALSE(buffer->is_mutable());\n+\n+  ASSERT_EQ(0, memcmp(buffer->data(), expected.c_str(), expected.size()));\n+  ASSERT_EQ(static_cast<int64_t>(expected.size()), buffer->size());\n+}\n+\n TEST(TestBuffer, SliceMutableBuffer) {\n   std::string data_str = \"some data to slice\";\n   auto data = reinterpret_cast<const uint8_t*>(data_str.c_str());\ndiff --git a/cpp/src/arrow/buffer.cc b/cpp/src/arrow/buffer.cc\nindex 006fe0f903..01bb0c3496 100644\n--- a/cpp/src/arrow/buffer.cc\n+++ b/cpp/src/arrow/buffer.cc\n@@ -71,6 +71,22 @@ Status Buffer::FromString(const std::string& data, std::shared_ptr<Buffer>* out)\n   return FromString(data, default_memory_pool(), out);\n }\n \n+class StlStringBuffer : public Buffer {\n+ public:\n+  explicit StlStringBuffer(std::string&& data) : Buffer(nullptr, 0), input_(data) {\n+    data_ = reinterpret_cast<const uint8_t*>(input_.c_str());\n+    size_ = static_cast<int64_t>(input_.size());\n+    capacity_ = size_;\n+  }\n+\n+ private:\n+  std::string input_;\n+};\n+\n+std::shared_ptr<Buffer> Buffer::FromString(std::string&& data) {\n+  return std::make_shared<StlStringBuffer>(std::move(data));\n+}\n+\n std::string Buffer::ToString() const {\n   return std::string(reinterpret_cast<const char*>(data_), static_cast<size_t>(size_));\n }\ndiff --git a/cpp/src/arrow/buffer.h b/cpp/src/arrow/buffer.h\nindex 75d0c215d8..d37a3365b1 100644\n--- a/cpp/src/arrow/buffer.h\n+++ b/cpp/src/arrow/buffer.h\n@@ -124,6 +124,12 @@ class ARROW_EXPORT Buffer {\n   /// using the default memory pool\n   static Status FromString(const std::string& data, std::shared_ptr<Buffer>* out);\n \n+  /// \\brief Construct an immutable buffer that takes ownership of the contents\n+  /// of an std::string\n+  /// \\param[in] data an rvalue-reference of a string\n+  /// \\return a new Buffer instance\n+  static std::shared_ptr<Buffer> FromString(std::string&& data);\n+\n   /// \\brief Create buffer referencing typed memory with some length without\n   /// copying\n   /// \\param[in] data the typed memory as C array\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-01T08:10:21.026+0000",
                    "updated": "2018-10-01T08:10:21.026+0000",
                    "started": "2018-10-01T08:10:21.026+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "149908",
                    "issueId": "13185545"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 7800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6bc13861[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4254ef6e[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2790872f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@42da232c[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7d9b6662[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@3d455abc[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1ecf0bc4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@d1f8872[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2b1157c5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3c9668a1[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5a61c5dc[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@2bcc9afa[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 7800,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Oct 01 08:10:19 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-10-01T08:10:19.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3250/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-09-17T14:51:49.000+0000",
        "updated": "2018-10-01T08:10:21.000+0000",
        "timeoriginalestimate": null,
        "description": "There are instances where it is useful to be able retain ownership to a {{std::string}} owned by another as a {{arrow::Buffer}}, so we could have an interface like {{StlStringBuffer(std::string&& input)}} and transfer the memory that way",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 7800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Create Buffer implementation that takes ownership for the memory from a std::string via std::move",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13185545/comment/16633694",
                    "id": "16633694",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 2660\n[https://github.com/apache/arrow/pull/2660]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-10-01T08:10:19.080+0000",
                    "updated": "2018-10-01T08:10:19.080+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|i3y61z:",
        "customfield_12314139": null
    }
}