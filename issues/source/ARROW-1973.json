{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13129051",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13129051",
    "key": "ARROW-1973",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341707",
                "id": "12341707",
                "description": "",
                "name": "0.9.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-03-19"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341352",
                "id": "12341352",
                "name": "0.8.0",
                "archived": false,
                "released": true,
                "releaseDate": "2017-12-18"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=cpcloud",
            "name": "cpcloud",
            "key": "cpcloud",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=cpcloud&avatarId=31265",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cpcloud&avatarId=31265",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cpcloud&avatarId=31265",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cpcloud&avatarId=31265"
            },
            "displayName": "Phillip Cloud",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=ostrokach",
            "name": "ostrokach",
            "key": "ostrokach",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=ostrokach&avatarId=33889",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=ostrokach&avatarId=33889",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=ostrokach&avatarId=33889",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=ostrokach&avatarId=33889"
            },
            "displayName": "Alexey Strokach",
            "active": true,
            "timeZone": "America/Toronto"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=ostrokach",
            "name": "ostrokach",
            "key": "ostrokach",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=ostrokach&avatarId=33889",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=ostrokach&avatarId=33889",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=ostrokach&avatarId=33889",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=ostrokach&avatarId=33889"
            },
            "displayName": "Alexey Strokach",
            "active": true,
            "timeZone": "America/Toronto"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1973/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@7dc3e415[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2ceb0baa[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5b56f933[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@2f940fa8[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@629caa09[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@61c22a4b[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@d31c821[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@2d77f60[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@59c41d1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@75fca35b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@768f0d05[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@4f9a40cb[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Feb 10 23:35:01 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-02-09T21:07:11.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1973/watchers",
            "watchCount": 4,
            "isWatching": false
        },
        "created": "2018-01-07T03:29:30.000+0000",
        "updated": "2018-02-10T23:35:01.000+0000",
        "timeoriginalestimate": null,
        "description": "There appears to be a memory leak when using PyArrow to convert tables containing array columns to Pandas DataFrames.\r\n\r\n See the `test_memory_leak.py` example here: https://gitlab.com/ostrokach/pyarrow_duplicate_column_errors",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Memory leak when converting Arrow tables with array columns to Pandas dataframes.",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": "Linux Mint 18.2\r\nAnaconda Python distribution + pyarrow installed from the conda-forge channel",
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": "https://github.com/apache/arrow/issues/1461",
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13129051/comment/16356138",
                    "id": "16356138",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=cpcloud",
                        "name": "cpcloud",
                        "key": "cpcloud",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=cpcloud&avatarId=31265",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cpcloud&avatarId=31265",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cpcloud&avatarId=31265",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cpcloud&avatarId=31265"
                        },
                        "displayName": "Phillip Cloud",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Working on this.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=cpcloud",
                        "name": "cpcloud",
                        "key": "cpcloud",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=cpcloud&avatarId=31265",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cpcloud&avatarId=31265",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cpcloud&avatarId=31265",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cpcloud&avatarId=31265"
                        },
                        "displayName": "Phillip Cloud",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-02-07T22:03:58.823+0000",
                    "updated": "2018-02-07T22:03:58.823+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13129051/comment/16357303",
                    "id": "16357303",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1578: ARROW-1973: [Python] Memory leak when converting Arrow tables with array columns to Pandas dataframes.\nURL: https://github.com/apache/arrow/pull/1578#discussion_r167014864\n \n \n\n ##########\n File path: cpp/src/arrow/python/arrow_to_pandas.cc\n ##########\n @@ -1484,8 +1480,53 @@ class ArrowDeserializer {\n       // Error occurred, trust that SetBaseObject set the error state\n       return Status::OK();\n     } else {\n-      // PyArray_SetBaseObject steals our reference to base\n-      Py_INCREF(base);\n+      /*\n+       * See ARROW-1973 for the original memory leak report.\n+       *\n+       * There are two scenarios: py_ref_ is nullptr or py_ref_ is not nullptr\n+       *\n+       *   1. py_ref_ is nullptr (it **was not** passed in to ArrowDeserializer's\n+       *      constructor)\n+       *\n+       *      In this case, the stolen reference must not be incremented since nothing\n+       *      outside of the PyArrayObject* (the arr_ member) is holding a reference to\n+       *      it. If we increment this, then we have a memory leak.\n+       *\n+       *\n+       *      Here's an example of how memory can be leaked when converting an arrow Array\n+       *      of List<Float64>.to a numpy array\n+       *\n+       *      1. Create a 1D numpy that is the flattened arrow array.\n+       *\n+       *         There's nothing outside of the serializer that owns this new numpy array.\n+       *\n+       *      2. Make a capsule for the base array.\n+       *\n+       *         The reference count of base is 1.\n+       *\n+       *      3. Call PyArray_SetBaseObject(arr_, base)\n+       *\n+       *         The reference count is still 1, because the reference is stolen.\n+       *\n+       *      4. Increment the reference count of base (unconditionally)\n+       *\n+       *         The reference count is now 2. This is okay if there's an object holding\n+       *         another reference. The PyArrayObject that stole the reference will\n+       *         eventually decrement the reference count, which will leaves us with a\n+       *         refcount of 1, with nothing owning that 1 reference. Memory leakage\n+       *         ensues.\n+       *\n+       *   2. py_ref_ is not nullptr (it **was** passed in to ArrowDeserializer's\n+       *      constructor)\n+       *\n+       *      This case is simpler. We assume that the reference accounting is correct\n+       *      coming in. We need to preserve that accounting knowing that the\n+       *      PyArrayObject that stole the reference will eventually decref it, thus we\n+       *      increment the reference count.\n+       */\n \n Review comment:\n   Can you use C++-style comment with `//`? \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-08T17:52:12.382+0000",
                    "updated": "2018-02-08T17:52:12.382+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13129051/comment/16357304",
                    "id": "16357304",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1578: ARROW-1973: [Python] Memory leak when converting Arrow tables with array columns to Pandas dataframes.\nURL: https://github.com/apache/arrow/pull/1578#discussion_r167015825\n \n \n\n ##########\n File path: cpp/src/arrow/python/arrow_to_pandas.cc\n ##########\n @@ -1484,8 +1480,53 @@ class ArrowDeserializer {\n       // Error occurred, trust that SetBaseObject set the error state\n       return Status::OK();\n     } else {\n-      // PyArray_SetBaseObject steals our reference to base\n-      Py_INCREF(base);\n+      /*\n+       * See ARROW-1973 for the original memory leak report.\n+       *\n+       * There are two scenarios: py_ref_ is nullptr or py_ref_ is not nullptr\n+       *\n+       *   1. py_ref_ is nullptr (it **was not** passed in to ArrowDeserializer's\n+       *      constructor)\n+       *\n+       *      In this case, the stolen reference must not be incremented since nothing\n+       *      outside of the PyArrayObject* (the arr_ member) is holding a reference to\n+       *      it. If we increment this, then we have a memory leak.\n+       *\n+       *\n+       *      Here's an example of how memory can be leaked when converting an arrow Array\n+       *      of List<Float64>.to a numpy array\n+       *\n+       *      1. Create a 1D numpy that is the flattened arrow array.\n+       *\n+       *         There's nothing outside of the serializer that owns this new numpy array.\n+       *\n+       *      2. Make a capsule for the base array.\n+       *\n+       *         The reference count of base is 1.\n+       *\n+       *      3. Call PyArray_SetBaseObject(arr_, base)\n+       *\n+       *         The reference count is still 1, because the reference is stolen.\n+       *\n+       *      4. Increment the reference count of base (unconditionally)\n+       *\n+       *         The reference count is now 2. This is okay if there's an object holding\n+       *         another reference. The PyArrayObject that stole the reference will\n+       *         eventually decrement the reference count, which will leaves us with a\n+       *         refcount of 1, with nothing owning that 1 reference. Memory leakage\n+       *         ensues.\n+       *\n+       *   2. py_ref_ is not nullptr (it **was** passed in to ArrowDeserializer's\n+       *      constructor)\n+       *\n+       *      This case is simpler. We assume that the reference accounting is correct\n+       *      coming in. We need to preserve that accounting knowing that the\n+       *      PyArrayObject that stole the reference will eventually decref it, thus we\n+       *      increment the reference count.\n+       */\n+      if (base == py_ref_) {\n+        Py_INCREF(base);\n \n Review comment:\n   Another way to handle this would be to put the INCREF in the branch without the capsule. Then if `PyArray_SetBaseObject` fails, we decref `base` unconditionally (which will either destroy the capsule or reset the `py_ref_` ref count to what it was originally)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-08T17:52:12.406+0000",
                    "updated": "2018-02-08T17:52:12.406+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13129051/comment/16357319",
                    "id": "16357319",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on a change in pull request #1578: ARROW-1973: [Python] Memory leak when converting Arrow tables with array columns to Pandas dataframes.\nURL: https://github.com/apache/arrow/pull/1578#discussion_r167017997\n \n \n\n ##########\n File path: cpp/src/arrow/python/arrow_to_pandas.cc\n ##########\n @@ -1484,8 +1480,53 @@ class ArrowDeserializer {\n       // Error occurred, trust that SetBaseObject set the error state\n       return Status::OK();\n     } else {\n-      // PyArray_SetBaseObject steals our reference to base\n-      Py_INCREF(base);\n+      /*\n+       * See ARROW-1973 for the original memory leak report.\n+       *\n+       * There are two scenarios: py_ref_ is nullptr or py_ref_ is not nullptr\n+       *\n+       *   1. py_ref_ is nullptr (it **was not** passed in to ArrowDeserializer's\n+       *      constructor)\n+       *\n+       *      In this case, the stolen reference must not be incremented since nothing\n+       *      outside of the PyArrayObject* (the arr_ member) is holding a reference to\n+       *      it. If we increment this, then we have a memory leak.\n+       *\n+       *\n+       *      Here's an example of how memory can be leaked when converting an arrow Array\n+       *      of List<Float64>.to a numpy array\n+       *\n+       *      1. Create a 1D numpy that is the flattened arrow array.\n+       *\n+       *         There's nothing outside of the serializer that owns this new numpy array.\n+       *\n+       *      2. Make a capsule for the base array.\n+       *\n+       *         The reference count of base is 1.\n+       *\n+       *      3. Call PyArray_SetBaseObject(arr_, base)\n+       *\n+       *         The reference count is still 1, because the reference is stolen.\n+       *\n+       *      4. Increment the reference count of base (unconditionally)\n+       *\n+       *         The reference count is now 2. This is okay if there's an object holding\n+       *         another reference. The PyArrayObject that stole the reference will\n+       *         eventually decrement the reference count, which will leaves us with a\n+       *         refcount of 1, with nothing owning that 1 reference. Memory leakage\n+       *         ensues.\n+       *\n+       *   2. py_ref_ is not nullptr (it **was** passed in to ArrowDeserializer's\n+       *      constructor)\n+       *\n+       *      This case is simpler. We assume that the reference accounting is correct\n+       *      coming in. We need to preserve that accounting knowing that the\n+       *      PyArrayObject that stole the reference will eventually decref it, thus we\n+       *      increment the reference count.\n+       */\n+      if (base == py_ref_) {\n+        Py_INCREF(base);\n \n Review comment:\n   True, I can change. Most of the work here was understanding the accounting flow here :)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-08T17:59:11.898+0000",
                    "updated": "2018-02-08T17:59:11.898+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13129051/comment/16357320",
                    "id": "16357320",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on a change in pull request #1578: ARROW-1973: [Python] Memory leak when converting Arrow tables with array columns to Pandas dataframes.\nURL: https://github.com/apache/arrow/pull/1578#discussion_r167017997\n \n \n\n ##########\n File path: cpp/src/arrow/python/arrow_to_pandas.cc\n ##########\n @@ -1484,8 +1480,53 @@ class ArrowDeserializer {\n       // Error occurred, trust that SetBaseObject set the error state\n       return Status::OK();\n     } else {\n-      // PyArray_SetBaseObject steals our reference to base\n-      Py_INCREF(base);\n+      /*\n+       * See ARROW-1973 for the original memory leak report.\n+       *\n+       * There are two scenarios: py_ref_ is nullptr or py_ref_ is not nullptr\n+       *\n+       *   1. py_ref_ is nullptr (it **was not** passed in to ArrowDeserializer's\n+       *      constructor)\n+       *\n+       *      In this case, the stolen reference must not be incremented since nothing\n+       *      outside of the PyArrayObject* (the arr_ member) is holding a reference to\n+       *      it. If we increment this, then we have a memory leak.\n+       *\n+       *\n+       *      Here's an example of how memory can be leaked when converting an arrow Array\n+       *      of List<Float64>.to a numpy array\n+       *\n+       *      1. Create a 1D numpy that is the flattened arrow array.\n+       *\n+       *         There's nothing outside of the serializer that owns this new numpy array.\n+       *\n+       *      2. Make a capsule for the base array.\n+       *\n+       *         The reference count of base is 1.\n+       *\n+       *      3. Call PyArray_SetBaseObject(arr_, base)\n+       *\n+       *         The reference count is still 1, because the reference is stolen.\n+       *\n+       *      4. Increment the reference count of base (unconditionally)\n+       *\n+       *         The reference count is now 2. This is okay if there's an object holding\n+       *         another reference. The PyArrayObject that stole the reference will\n+       *         eventually decrement the reference count, which will leaves us with a\n+       *         refcount of 1, with nothing owning that 1 reference. Memory leakage\n+       *         ensues.\n+       *\n+       *   2. py_ref_ is not nullptr (it **was** passed in to ArrowDeserializer's\n+       *      constructor)\n+       *\n+       *      This case is simpler. We assume that the reference accounting is correct\n+       *      coming in. We need to preserve that accounting knowing that the\n+       *      PyArrayObject that stole the reference will eventually decref it, thus we\n+       *      increment the reference count.\n+       */\n+      if (base == py_ref_) {\n+        Py_INCREF(base);\n \n Review comment:\n   True, I can change. Most of the work here was understanding the accounting flow :)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-08T17:59:19.412+0000",
                    "updated": "2018-02-08T17:59:19.412+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13129051/comment/16357322",
                    "id": "16357322",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on a change in pull request #1578: ARROW-1973: [Python] Memory leak when converting Arrow tables with array columns to Pandas dataframes.\nURL: https://github.com/apache/arrow/pull/1578#discussion_r167018073\n \n \n\n ##########\n File path: cpp/src/arrow/python/arrow_to_pandas.cc\n ##########\n @@ -1484,8 +1480,53 @@ class ArrowDeserializer {\n       // Error occurred, trust that SetBaseObject set the error state\n       return Status::OK();\n     } else {\n-      // PyArray_SetBaseObject steals our reference to base\n-      Py_INCREF(base);\n+      /*\n+       * See ARROW-1973 for the original memory leak report.\n+       *\n+       * There are two scenarios: py_ref_ is nullptr or py_ref_ is not nullptr\n+       *\n+       *   1. py_ref_ is nullptr (it **was not** passed in to ArrowDeserializer's\n+       *      constructor)\n+       *\n+       *      In this case, the stolen reference must not be incremented since nothing\n+       *      outside of the PyArrayObject* (the arr_ member) is holding a reference to\n+       *      it. If we increment this, then we have a memory leak.\n+       *\n+       *\n+       *      Here's an example of how memory can be leaked when converting an arrow Array\n+       *      of List<Float64>.to a numpy array\n+       *\n+       *      1. Create a 1D numpy that is the flattened arrow array.\n+       *\n+       *         There's nothing outside of the serializer that owns this new numpy array.\n+       *\n+       *      2. Make a capsule for the base array.\n+       *\n+       *         The reference count of base is 1.\n+       *\n+       *      3. Call PyArray_SetBaseObject(arr_, base)\n+       *\n+       *         The reference count is still 1, because the reference is stolen.\n+       *\n+       *      4. Increment the reference count of base (unconditionally)\n+       *\n+       *         The reference count is now 2. This is okay if there's an object holding\n+       *         another reference. The PyArrayObject that stole the reference will\n+       *         eventually decrement the reference count, which will leaves us with a\n+       *         refcount of 1, with nothing owning that 1 reference. Memory leakage\n+       *         ensues.\n+       *\n+       *   2. py_ref_ is not nullptr (it **was** passed in to ArrowDeserializer's\n+       *      constructor)\n+       *\n+       *      This case is simpler. We assume that the reference accounting is correct\n+       *      coming in. We need to preserve that accounting knowing that the\n+       *      PyArrayObject that stole the reference will eventually decref it, thus we\n+       *      increment the reference count.\n+       */\n \n Review comment:\n   Ye\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-08T17:59:30.774+0000",
                    "updated": "2018-02-08T17:59:30.774+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13129051/comment/16357323",
                    "id": "16357323",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on a change in pull request #1578: ARROW-1973: [Python] Memory leak when converting Arrow tables with array columns to Pandas dataframes.\nURL: https://github.com/apache/arrow/pull/1578#discussion_r167018073\n \n \n\n ##########\n File path: cpp/src/arrow/python/arrow_to_pandas.cc\n ##########\n @@ -1484,8 +1480,53 @@ class ArrowDeserializer {\n       // Error occurred, trust that SetBaseObject set the error state\n       return Status::OK();\n     } else {\n-      // PyArray_SetBaseObject steals our reference to base\n-      Py_INCREF(base);\n+      /*\n+       * See ARROW-1973 for the original memory leak report.\n+       *\n+       * There are two scenarios: py_ref_ is nullptr or py_ref_ is not nullptr\n+       *\n+       *   1. py_ref_ is nullptr (it **was not** passed in to ArrowDeserializer's\n+       *      constructor)\n+       *\n+       *      In this case, the stolen reference must not be incremented since nothing\n+       *      outside of the PyArrayObject* (the arr_ member) is holding a reference to\n+       *      it. If we increment this, then we have a memory leak.\n+       *\n+       *\n+       *      Here's an example of how memory can be leaked when converting an arrow Array\n+       *      of List<Float64>.to a numpy array\n+       *\n+       *      1. Create a 1D numpy that is the flattened arrow array.\n+       *\n+       *         There's nothing outside of the serializer that owns this new numpy array.\n+       *\n+       *      2. Make a capsule for the base array.\n+       *\n+       *         The reference count of base is 1.\n+       *\n+       *      3. Call PyArray_SetBaseObject(arr_, base)\n+       *\n+       *         The reference count is still 1, because the reference is stolen.\n+       *\n+       *      4. Increment the reference count of base (unconditionally)\n+       *\n+       *         The reference count is now 2. This is okay if there's an object holding\n+       *         another reference. The PyArrayObject that stole the reference will\n+       *         eventually decrement the reference count, which will leaves us with a\n+       *         refcount of 1, with nothing owning that 1 reference. Memory leakage\n+       *         ensues.\n+       *\n+       *   2. py_ref_ is not nullptr (it **was** passed in to ArrowDeserializer's\n+       *      constructor)\n+       *\n+       *      This case is simpler. We assume that the reference accounting is correct\n+       *      coming in. We need to preserve that accounting knowing that the\n+       *      PyArrayObject that stole the reference will eventually decref it, thus we\n+       *      increment the reference count.\n+       */\n \n Review comment:\n   Yep\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-08T17:59:34.137+0000",
                    "updated": "2018-02-08T17:59:34.137+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13129051/comment/16357324",
                    "id": "16357324",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on a change in pull request #1578: ARROW-1973: [Python] Memory leak when converting Arrow tables with array columns to Pandas dataframes.\nURL: https://github.com/apache/arrow/pull/1578#discussion_r167018125\n \n \n\n ##########\n File path: cpp/src/arrow/python/arrow_to_pandas.cc\n ##########\n @@ -502,18 +502,20 @@ template <typename ArrowType>\n inline Status ConvertListsLike(PandasOptions options, const std::shared_ptr<Column>& col,\n                                PyObject** out_values) {\n   const ChunkedArray& data = *col->data().get();\n-  auto list_type = std::static_pointer_cast<ListType>(col->type());\n+  const auto& list_type = static_cast<const ListType&>(*col->type());\n \n   // Get column of underlying value arrays\n   std::vector<std::shared_ptr<Array>> value_arrays;\n   for (int c = 0; c < data.num_chunks(); c++) {\n-    auto arr = std::static_pointer_cast<ListArray>(data.chunk(c));\n-    value_arrays.emplace_back(arr->values());\n+    const auto& arr = static_cast<const ListArray&>(*data.chunk(c));\n+    value_arrays.emplace_back(arr.values());\n   }\n-  auto flat_column = std::make_shared<Column>(list_type->value_field(), value_arrays);\n+  auto flat_column = std::make_shared<Column>(list_type.value_field(), value_arrays);\n   // TODO(ARROW-489): Currently we don't have a Python reference for single columns.\n   //    Storing a reference to the whole Array would be to expensive.\n-  PyObject* numpy_array;\n+  OwnedRef owned_numpy_array;\n \n Review comment:\n   This one doesn't seem used. By passing `&numpy_array` below you're not changing the internal pointer. Perhaps use `ref()` instead?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-08T17:59:41.169+0000",
                    "updated": "2018-02-08T17:59:41.169+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13129051/comment/16357411",
                    "id": "16357411",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on a change in pull request #1578: ARROW-1973: [Python] Memory leak when converting Arrow tables with array columns to Pandas dataframes.\nURL: https://github.com/apache/arrow/pull/1578#discussion_r167034173\n \n \n\n ##########\n File path: cpp/src/arrow/python/arrow_to_pandas.cc\n ##########\n @@ -502,18 +502,20 @@ template <typename ArrowType>\n inline Status ConvertListsLike(PandasOptions options, const std::shared_ptr<Column>& col,\n                                PyObject** out_values) {\n   const ChunkedArray& data = *col->data().get();\n-  auto list_type = std::static_pointer_cast<ListType>(col->type());\n+  const auto& list_type = static_cast<const ListType&>(*col->type());\n \n   // Get column of underlying value arrays\n   std::vector<std::shared_ptr<Array>> value_arrays;\n   for (int c = 0; c < data.num_chunks(); c++) {\n-    auto arr = std::static_pointer_cast<ListArray>(data.chunk(c));\n-    value_arrays.emplace_back(arr->values());\n+    const auto& arr = static_cast<const ListArray&>(*data.chunk(c));\n+    value_arrays.emplace_back(arr.values());\n   }\n-  auto flat_column = std::make_shared<Column>(list_type->value_field(), value_arrays);\n+  auto flat_column = std::make_shared<Column>(list_type.value_field(), value_arrays);\n   // TODO(ARROW-489): Currently we don't have a Python reference for single columns.\n   //    Storing a reference to the whole Array would be to expensive.\n-  PyObject* numpy_array;\n+  OwnedRef owned_numpy_array;\n \n Review comment:\n   Yep, thank you.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-08T18:57:56.600+0000",
                    "updated": "2018-02-08T18:57:56.600+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13129051/comment/16357576",
                    "id": "16357576",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1578: ARROW-1973: [Python] Memory leak when converting Arrow tables with array columns to Pandas dataframes.\nURL: https://github.com/apache/arrow/pull/1578#issuecomment-364249569\n \n \n   This needed a clang-format\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-08T21:11:29.334+0000",
                    "updated": "2018-02-08T21:11:29.334+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13129051/comment/16357581",
                    "id": "16357581",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on issue #1578: ARROW-1973: [Python] Memory leak when converting Arrow tables with array columns to Pandas dataframes.\nURL: https://github.com/apache/arrow/pull/1578#issuecomment-364250198\n \n \n   Hm, okay. I did run that. It's probably because I'm using clang 5\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-08T21:13:52.377+0000",
                    "updated": "2018-02-08T21:13:52.377+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13129051/comment/16357584",
                    "id": "16357584",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on issue #1578: ARROW-1973: [Python] Memory leak when converting Arrow tables with array columns to Pandas dataframes.\nURL: https://github.com/apache/arrow/pull/1578#issuecomment-364250409\n \n \n   How do we decide when to upgrade? When it's released on ubuntu or some other slowish moving distro?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-08T21:14:44.419+0000",
                    "updated": "2018-02-08T21:14:44.419+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13129051/comment/16357589",
                    "id": "16357589",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1578: ARROW-1973: [Python] Memory leak when converting Arrow tables with array columns to Pandas dataframes.\nURL: https://github.com/apache/arrow/pull/1578#issuecomment-364251400\n \n \n   It looks like LLVM 5 has been promoted to stable (according to http://apt.llvm.org/) so I think we should upgrade our pin to clang 5.0\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-08T21:18:20.733+0000",
                    "updated": "2018-02-08T21:18:20.733+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13129051/comment/16357616",
                    "id": "16357616",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on issue #1578: ARROW-1973: [Python] Memory leak when converting Arrow tables with array columns to Pandas dataframes.\nURL: https://github.com/apache/arrow/pull/1578#issuecomment-364257181\n \n \n   Opened a JIRA for it: https://issues.apache.org/jira/browse/ARROW-2117\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-08T21:40:09.560+0000",
                    "updated": "2018-02-08T21:40:09.560+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13129051/comment/16358629",
                    "id": "16358629",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on issue #1578: ARROW-1973: [Python] Memory leak when converting Arrow tables with array columns to Pandas dataframes.\nURL: https://github.com/apache/arrow/pull/1578#issuecomment-364486459\n \n \n   Merging on green.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-09T16:37:40.089+0000",
                    "updated": "2018-02-09T16:37:40.089+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13129051/comment/16358732",
                    "id": "16358732",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1578: ARROW-1973: [Python] Memory leak when converting Arrow tables with array columns to Pandas dataframes.\nURL: https://github.com/apache/arrow/pull/1578#issuecomment-364500733\n \n \n   The clang-format check failed again\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-09T17:26:01.990+0000",
                    "updated": "2018-02-09T17:26:01.990+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13129051/comment/16358747",
                    "id": "16358747",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on issue #1578: ARROW-1973: [Python] Memory leak when converting Arrow tables with array columns to Pandas dataframes.\nURL: https://github.com/apache/arrow/pull/1578#issuecomment-364503411\n \n \n   Gah I forgot to pull from my own branch.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-09T17:35:36.112+0000",
                    "updated": "2018-02-09T17:35:36.112+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13129051/comment/16358760",
                    "id": "16358760",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on issue #1578: ARROW-1973: [Python] Memory leak when converting Arrow tables with array columns to Pandas dataframes.\nURL: https://github.com/apache/arrow/pull/1578#issuecomment-364506488\n \n \n   I'm downgrading my clang until we update the pin, should be done shortly\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-09T17:47:11.912+0000",
                    "updated": "2018-02-09T17:47:11.912+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13129051/comment/16358782",
                    "id": "16358782",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy commented on issue #1578: ARROW-1973: [Python] Memory leak when converting Arrow tables with array columns to Pandas dataframes.\nURL: https://github.com/apache/arrow/pull/1578#issuecomment-364513881\n \n \n   @cpcloud you should be able to have clang 5 and 4 installed at the same time. Normally the packages don't conflict.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-09T18:15:06.847+0000",
                    "updated": "2018-02-09T18:15:06.847+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13129051/comment/16358789",
                    "id": "16358789",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on issue #1578: ARROW-1973: [Python] Memory leak when converting Arrow tables with array columns to Pandas dataframes.\nURL: https://github.com/apache/arrow/pull/1578#issuecomment-364516616\n \n \n   @xhochy It's a distro issue. AFAIK Arch Linux doesn't support more than one installation by `pacman` at at time.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-09T18:25:31.311+0000",
                    "updated": "2018-02-09T18:25:31.311+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13129051/comment/16358791",
                    "id": "16358791",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on issue #1578: ARROW-1973: [Python] Memory leak when converting Arrow tables with array columns to Pandas dataframes.\nURL: https://github.com/apache/arrow/pull/1578#issuecomment-364516616\n \n \n   @xhochy It's a distro issue. AFAIK Arch Linux doesn't support more than one installation of a package by `pacman` at at time.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-09T18:25:45.095+0000",
                    "updated": "2018-02-09T18:25:45.095+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13129051/comment/16358951",
                    "id": "16358951",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud closed pull request #1578: ARROW-1973: [Python] Memory leak when converting Arrow tables with array columns to Pandas dataframes.\nURL: https://github.com/apache/arrow/pull/1578\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/python/arrow_to_pandas.cc b/cpp/src/arrow/python/arrow_to_pandas.cc\nindex a17d14bf6..60a2eae5d 100644\n--- a/cpp/src/arrow/python/arrow_to_pandas.cc\n+++ b/cpp/src/arrow/python/arrow_to_pandas.cc\n@@ -502,19 +502,23 @@ template <typename ArrowType>\n inline Status ConvertListsLike(PandasOptions options, const std::shared_ptr<Column>& col,\n                                PyObject** out_values) {\n   const ChunkedArray& data = *col->data().get();\n-  auto list_type = std::static_pointer_cast<ListType>(col->type());\n+  const auto& list_type = static_cast<const ListType&>(*col->type());\n \n   // Get column of underlying value arrays\n   std::vector<std::shared_ptr<Array>> value_arrays;\n   for (int c = 0; c < data.num_chunks(); c++) {\n-    auto arr = std::static_pointer_cast<ListArray>(data.chunk(c));\n-    value_arrays.emplace_back(arr->values());\n+    const auto& arr = static_cast<const ListArray&>(*data.chunk(c));\n+    value_arrays.emplace_back(arr.values());\n   }\n-  auto flat_column = std::make_shared<Column>(list_type->value_field(), value_arrays);\n+  auto flat_column = std::make_shared<Column>(list_type.value_field(), value_arrays);\n   // TODO(ARROW-489): Currently we don't have a Python reference for single columns.\n   //    Storing a reference to the whole Array would be to expensive.\n-  PyObject* numpy_array;\n-  RETURN_NOT_OK(ConvertColumnToPandas(options, flat_column, nullptr, &numpy_array));\n+\n+  OwnedRef owned_numpy_array;\n+  RETURN_NOT_OK(\n+      ConvertColumnToPandas(options, flat_column, nullptr, owned_numpy_array.ref()));\n+\n+  PyObject* numpy_array = owned_numpy_array.obj();\n \n   PyAcquireGIL lock;\n \n@@ -528,24 +532,20 @@ inline Status ConvertListsLike(PandasOptions options, const std::shared_ptr<Colu\n         Py_INCREF(Py_None);\n         *out_values = Py_None;\n       } else {\n-        PyObject* start = PyLong_FromLongLong(arr->value_offset(i) + chunk_offset);\n-        PyObject* end = PyLong_FromLongLong(arr->value_offset(i + 1) + chunk_offset);\n-        PyObject* slice = PySlice_New(start, end, NULL);\n-        Py_XDECREF(start);\n-        Py_XDECREF(end);\n+        OwnedRef start(PyLong_FromLongLong(arr->value_offset(i) + chunk_offset));\n+        OwnedRef end(PyLong_FromLongLong(arr->value_offset(i + 1) + chunk_offset));\n+        OwnedRef slice(PySlice_New(start.obj(), end.obj(), nullptr));\n \n-        if (ARROW_PREDICT_FALSE(slice == nullptr)) {\n+        if (ARROW_PREDICT_FALSE(slice.obj() == nullptr)) {\n           // Fall out of loop, will return from RETURN_IF_PYERROR\n           break;\n         }\n-        *out_values = PyObject_GetItem(numpy_array, slice);\n+        *out_values = PyObject_GetItem(numpy_array, slice.obj());\n \n         if (*out_values == nullptr) {\n           // Fall out of loop, will return from RETURN_IF_PYERROR\n           break;\n         }\n-\n-        Py_XDECREF(slice);\n       }\n       ++out_values;\n     }\n@@ -554,7 +554,6 @@ inline Status ConvertListsLike(PandasOptions options, const std::shared_ptr<Colu\n     chunk_offset += arr->values()->length();\n   }\n \n-  Py_XDECREF(numpy_array);\n   return Status::OK();\n }\n \n@@ -1447,7 +1446,7 @@ class ArrowDeserializer {\n \n   template <int TYPE>\n   Status ConvertValuesZeroCopy(PandasOptions options, int npy_type,\n-                               std::shared_ptr<Array> arr) {\n+                               const std::shared_ptr<Array>& arr) {\n     typedef typename internal::arrow_traits<TYPE>::T T;\n \n     const T* in_values = GetPrimitiveValues<T>(*arr);\n@@ -1461,15 +1460,57 @@ class ArrowDeserializer {\n     result_ = NewArray1DFromType(col_->type().get(), npy_type, col_->length(), data);\n     arr_ = reinterpret_cast<PyArrayObject*>(result_);\n \n-    if (arr_ == NULL) {\n+    if (arr_ == nullptr) {\n       // Error occurred, trust that error set\n       return Status::OK();\n     }\n \n+    // See ARROW-1973 for the original memory leak report.\n+    //\n+    // There are two scenarios: py_ref_ is nullptr or py_ref_ is not nullptr\n+    //\n+    //   1. py_ref_ is nullptr (it **was not** passed in to ArrowDeserializer's\n+    //      constructor)\n+    //\n+    //      In this case, the stolen reference must not be incremented since nothing\n+    //      outside of the PyArrayObject* (the arr_ member) is holding a reference to\n+    //      it. If we increment this, then we have a memory leak.\n+    //\n+    //\n+    //      Here's an example of how memory can be leaked when converting an arrow Array\n+    //      of List<Float64>.to a numpy array\n+    //\n+    //      1. Create a 1D numpy that is the flattened arrow array.\n+    //\n+    //         There's nothing outside of the serializer that owns this new numpy array.\n+    //\n+    //      2. Make a capsule for the base array.\n+    //\n+    //         The reference count of base is 1.\n+    //\n+    //      3. Call PyArray_SetBaseObject(arr_, base)\n+    //\n+    //         The reference count is still 1, because the reference is stolen.\n+    //\n+    //      4. Increment the reference count of base (unconditionally)\n+    //\n+    //         The reference count is now 2. This is okay if there's an object holding\n+    //         another reference. The PyArrayObject that stole the reference will\n+    //         eventually decrement the reference count, which will leaves us with a\n+    //         refcount of 1, with nothing owning that 1 reference. Memory leakage\n+    //         ensues.\n+    //\n+    //   2. py_ref_ is not nullptr (it **was** passed in to ArrowDeserializer's\n+    //      constructor)\n+    //\n+    //      This case is simpler. We assume that the reference accounting is correct\n+    //      coming in. We need to preserve that accounting knowing that the\n+    //      PyArrayObject that stole the reference will eventually decref it, thus we\n+    //      increment the reference count.\n+\n     PyObject* base;\n     if (py_ref_ == nullptr) {\n-      ArrowCapsule* capsule = new ArrowCapsule;\n-      capsule->array = arr;\n+      auto capsule = new ArrowCapsule{{arr}};\n       base = PyCapsule_New(reinterpret_cast<void*>(capsule), \"arrow\",\n                            &ArrowCapsule_Destructor);\n       if (base == nullptr) {\n@@ -1478,14 +1519,13 @@ class ArrowDeserializer {\n       }\n     } else {\n       base = py_ref_;\n+      Py_INCREF(base);\n     }\n \n     if (PyArray_SetBaseObject(arr_, base) == -1) {\n       // Error occurred, trust that SetBaseObject set the error state\n+      Py_XDECREF(base);\n       return Status::OK();\n-    } else {\n-      // PyArray_SetBaseObject steals our reference to base\n-      Py_INCREF(base);\n     }\n \n     // Arrow data is immutable.\n@@ -1686,7 +1726,9 @@ class ArrowDeserializer {\n     RETURN_IF_PYERROR();\n \n     PyDict_SetItemString(result_, \"indices\", block->block_arr());\n+    RETURN_IF_PYERROR();\n     PyDict_SetItemString(result_, \"dictionary\", block->dictionary());\n+    RETURN_IF_PYERROR();\n \n     return Status::OK();\n   }\ndiff --git a/cpp/src/arrow/python/common.cc b/cpp/src/arrow/python/common.cc\nindex 53bd57bf6..14a8ae6fd 100644\n--- a/cpp/src/arrow/python/common.cc\n+++ b/cpp/src/arrow/python/common.cc\n@@ -65,16 +65,22 @@ PyBuffer::~PyBuffer() {\n \n Status CheckPyError(StatusCode code) {\n   if (PyErr_Occurred()) {\n-    PyObject *exc_type, *exc_value, *traceback;\n+    PyObject* exc_type = nullptr;\n+    PyObject* exc_value = nullptr;\n+    PyObject* traceback = nullptr;\n+\n+    OwnedRef exc_type_ref(exc_type);\n+    OwnedRef exc_value_ref(exc_value);\n+    OwnedRef traceback_ref(traceback);\n+\n     PyErr_Fetch(&exc_type, &exc_value, &traceback);\n+\n     PyErr_NormalizeException(&exc_type, &exc_value, &traceback);\n-    PyObject* exc_value_str = PyObject_Str(exc_value);\n-    PyObjectStringify stringified(exc_value_str);\n+\n+    OwnedRef exc_value_str(PyObject_Str(exc_value));\n+    PyObjectStringify stringified(exc_value_str.obj());\n     std::string message(stringified.bytes);\n-    Py_XDECREF(exc_type);\n-    Py_XDECREF(exc_value);\n-    Py_XDECREF(exc_value_str);\n-    Py_XDECREF(traceback);\n+\n     PyErr_Clear();\n     return Status(code, message);\n   }\ndiff --git a/python/pyarrow/array.pxi b/python/pyarrow/array.pxi\nindex 9b6ae0fc6..f85363cb1 100644\n--- a/python/pyarrow/array.pxi\n+++ b/python/pyarrow/array.pxi\n@@ -414,7 +414,7 @@ cdef class Array:\n         return pyarrow_wrap_array(result)\n \n     def to_pandas(self, c_bool strings_to_categorical=False,\n-                  zero_copy_only=False):\n+                  c_bool zero_copy_only=False):\n         \"\"\"\n         Convert to an array object suitable for use in pandas\n \ndiff --git a/python/pyarrow/table.pxi b/python/pyarrow/table.pxi\nindex b03ee2670..e14d4739f 100644\n--- a/python/pyarrow/table.pxi\n+++ b/python/pyarrow/table.pxi\n@@ -271,7 +271,9 @@ cdef class Column:\n         casted_data = pyarrow_wrap_chunked_array(out.chunked_array())\n         return column(self.name, casted_data)\n \n-    def to_pandas(self, strings_to_categorical=False, zero_copy_only=False):\n+    def to_pandas(self,\n+                  c_bool strings_to_categorical=False,\n+                  c_bool zero_copy_only=False):\n         \"\"\"\n         Convert the arrow::Column to a pandas.Series\n \n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-09T21:07:07.369+0000",
                    "updated": "2018-02-09T21:07:07.369+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13129051/comment/16358952",
                    "id": "16358952",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=cpcloud",
                        "name": "cpcloud",
                        "key": "cpcloud",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=cpcloud&avatarId=31265",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cpcloud&avatarId=31265",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cpcloud&avatarId=31265",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cpcloud&avatarId=31265"
                        },
                        "displayName": "Phillip Cloud",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 1578\n[https://github.com/apache/arrow/pull/1578]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=cpcloud",
                        "name": "cpcloud",
                        "key": "cpcloud",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=cpcloud&avatarId=31265",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cpcloud&avatarId=31265",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cpcloud&avatarId=31265",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cpcloud&avatarId=31265"
                        },
                        "displayName": "Phillip Cloud",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-02-09T21:07:11.581+0000",
                    "updated": "2018-02-09T21:07:11.581+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13129051/comment/16359564",
                    "id": "16359564",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy commented on issue #1578: ARROW-1973: [Python] Memory leak when converting Arrow tables with array columns to Pandas dataframes.\nURL: https://github.com/apache/arrow/pull/1578#issuecomment-364677934\n \n \n   Ah, ok. Homebrew and Debian-based distribution do support it. I'm wondering if it would be possible to get the clang-tools on conda-forge as this is the preferred environment for C++ development. This would make this less distribution dependent.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-10T18:20:02.363+0000",
                    "updated": "2018-02-10T18:20:02.363+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13129051/comment/16359653",
                    "id": "16359653",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1578: ARROW-1973: [Python] Memory leak when converting Arrow tables with array columns to Pandas dataframes.\nURL: https://github.com/apache/arrow/pull/1578#issuecomment-364698570\n \n \n   For Arch you would want to install LLVM 4.0 from source in a separate location like /opt/llvm-4.0. I don't think we should go out of our way to support Linux users outside yum/apt-based distros. \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-10T22:03:10.226+0000",
                    "updated": "2018-02-10T22:03:10.226+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13129051/comment/16359672",
                    "id": "16359672",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on issue #1578: ARROW-1973: [Python] Memory leak when converting Arrow tables with array columns to Pandas dataframes.\nURL: https://github.com/apache/arrow/pull/1578#issuecomment-364705015\n \n \n   Yeah that's fine I don't think we should either.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-10T23:35:01.691+0000",
                    "updated": "2018-02-10T23:35:01.691+0000"
                }
            ],
            "maxResults": 26,
            "total": 26,
            "startAt": 0
        },
        "customfield_12311820": "0|i3olqv:",
        "customfield_12314139": null
    }
}