{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13193866",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13193866",
    "key": "ARROW-3609",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343858",
                "id": "12343858",
                "description": "",
                "name": "0.12.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-01-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=shyamsingh",
            "name": "shyamsingh",
            "key": "shyamsingh",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "shyam narayan singh",
            "active": true,
            "timeZone": "Asia/Kolkata"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334626",
                "id": "12334626",
                "name": "C++ - Gandiva"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=praveenbingo",
            "name": "praveenbingo",
            "key": "praveenbingo",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Praveen Kumar",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=praveenbingo",
            "name": "praveenbingo",
            "key": "praveenbingo",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Praveen Kumar",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 6600,
            "total": 6600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 6600,
            "total": 6600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3609/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 11,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13193866/worklog/167338",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "shyambits2004 opened a new pull request #2991: ARROW-3609: [Gandiva] Convert Gandiva benchmark tests as gbenchmark t\u2026\nURL: https://github.com/apache/arrow/pull/2991\n \n \n   \u2026ests.\r\n   \r\n   Gandiva benchmark tests are out of gandiva integration testsuite and part of arrow benchmark suite.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-19T10:28:52.248+0000",
                    "updated": "2018-11-19T10:28:52.248+0000",
                    "started": "2018-11-19T10:28:52.247+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "167338",
                    "issueId": "13193866"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13193866/worklog/167364",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy commented on a change in pull request #2991: ARROW-3609: [Gandiva] Convert Gandiva benchmark tests as gbenchmark t\u2026\nURL: https://github.com/apache/arrow/pull/2991#discussion_r234601583\n \n \n\n ##########\n File path: cpp/src/gandiva/tests/CMakeLists.txt\n ##########\n @@ -27,9 +27,16 @@ foreach(lib_type \"shared\" \"static\")\n   add_gandiva_integ_test(utf8_test.cc gandiva_${lib_type})\n   add_gandiva_integ_test(binary_test.cc gandiva_${lib_type})\n   add_gandiva_integ_test(date_time_test.cc gandiva_${lib_type})\n-  add_gandiva_integ_test(micro_benchmarks.cc gandiva_${lib_type})\n   add_gandiva_integ_test(to_string_test.cc gandiva_${lib_type})\n   add_gandiva_integ_test(hash_test.cc gandiva_${lib_type})\n   add_gandiva_integ_test(in_expr_test.cc gandiva_${lib_type})\n   add_gandiva_integ_test(null_validity_test.cc gandiva_${lib_type})\n endforeach(lib_type)\n+\n+set(GANDIVA_BENCHMARK_LINK_LIBRARIES\n+  gandiva_static\n+)\n+\n+ADD_ARROW_BENCHMARK(micro_benchmarks)\n \n Review comment:\n   Add a `gandiva_` prefix to this.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-19T12:33:58.425+0000",
                    "updated": "2018-11-19T12:33:58.425+0000",
                    "started": "2018-11-19T12:33:58.425+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "167364",
                    "issueId": "13193866"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13193866/worklog/167430",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2991: ARROW-3609: [Gandiva] Convert Gandiva benchmark tests as gbenchmark t\u2026\nURL: https://github.com/apache/arrow/pull/2991#discussion_r234677510\n \n \n\n ##########\n File path: cpp/src/gandiva/tests/CMakeLists.txt\n ##########\n @@ -27,9 +27,16 @@ foreach(lib_type \"shared\" \"static\")\n   add_gandiva_integ_test(utf8_test.cc gandiva_${lib_type})\n   add_gandiva_integ_test(binary_test.cc gandiva_${lib_type})\n   add_gandiva_integ_test(date_time_test.cc gandiva_${lib_type})\n-  add_gandiva_integ_test(micro_benchmarks.cc gandiva_${lib_type})\n   add_gandiva_integ_test(to_string_test.cc gandiva_${lib_type})\n   add_gandiva_integ_test(hash_test.cc gandiva_${lib_type})\n   add_gandiva_integ_test(in_expr_test.cc gandiva_${lib_type})\n   add_gandiva_integ_test(null_validity_test.cc gandiva_${lib_type})\n endforeach(lib_type)\n+\n+set(GANDIVA_BENCHMARK_LINK_LIBRARIES\n+  gandiva_static\n+)\n+\n+ADD_ARROW_BENCHMARK(micro_benchmarks)\n \n Review comment:\n   It'd be nice to have a PREFIX argument like ADD_ARROW_TEST\r\n   \r\n   https://issues.apache.org/jira/browse/ARROW-3836\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-19T16:02:53.582+0000",
                    "updated": "2018-11-19T16:02:53.582+0000",
                    "started": "2018-11-19T16:02:53.581+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "167430",
                    "issueId": "13193866"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13193866/worklog/167432",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2991: ARROW-3609: [Gandiva] Convert Gandiva benchmark tests as gbenchmark t\u2026\nURL: https://github.com/apache/arrow/pull/2991#issuecomment-439945229\n \n \n   It's so nice that GitHub is showing force pushes now\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-19T16:03:18.669+0000",
                    "updated": "2018-11-19T16:03:18.669+0000",
                    "started": "2018-11-19T16:03:18.669+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "167432",
                    "issueId": "13193866"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13193866/worklog/167436",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2991: ARROW-3609: [Gandiva] Convert Gandiva benchmark tests as gbenchmark t\u2026\nURL: https://github.com/apache/arrow/pull/2991#issuecomment-439945978\n \n \n   Unrelated to this, but we're getting a lot of gflags failures lately on Windows. Could it be related to the recent conda-forge version bump? \r\n   \r\n   ```\r\n   \"C:\\projects\\arrow\\cpp\\build\\install.vcxproj\" (default target) (1) ->\r\n   \"C:\\projects\\arrow\\cpp\\build\\ALL_BUILD.vcxproj\" (default target) (3) ->\r\n   \"C:\\projects\\arrow\\cpp\\build\\src\\arrow\\ipc\\json-integration-test.vcxproj\" (default target) (33) ->\r\n   (Link target) -> \r\n     json-integration-test.obj : error LNK2019: unresolved external symbol \"__declspec(dllimport) unsigned int __cdecl google::ParseCommandLineFlags(int *,char * * *,bool)\" (__imp_?ParseCommandLineFlags@google@@YAIPEAHPEAPEAPEAD_N@Z) referenced in function main [C:\\projects\\arrow\\cpp\\build\\src\\arrow\\ipc\\json-integration-test.vcxproj]\r\n     json-integration-test.obj : error LNK2019: unresolved external symbol \"__declspec(dllimport) void __cdecl google::ShutDownCommandLineFlags(void)\" (__imp_?ShutDownCommandLineFlags@google@@YAXXZ) referenced in function main [C:\\projects\\arrow\\cpp\\build\\src\\arrow\\ipc\\json-integration-test.vcxproj]\r\n     json-integration-test.obj : error LNK2019: unresolved external symbol \"__declspec(dllimport) public: __cdecl google::FlagRegisterer::FlagRegisterer<bool>(char const *,char const *,char const *,bool *,bool *)\" (__imp_??$?0_N@FlagRegisterer@google@@QEAA@PEBD00PEA_N1@Z) referenced in function \"void __cdecl fLB::`dynamic initializer for 'o_integration''(void)\" (??__Eo_integration@fLB@@YAXXZ) [C:\\projects\\arrow\\cpp\\build\\src\\arrow\\ipc\\json-integration-test.vcxproj]\r\n     json-integration-test.obj : error LNK2019: unresolved external symbol \"__declspec(dllimport) public: __cdecl google::FlagRegisterer::FlagRegisterer<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(char const *,char const *,char const *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > *)\" (__imp_??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@FlagRegisterer@google@@QEAA@PEBD00PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@1@Z) referenced in function \"void __cdecl fLS::`dynamic initializer for 'o_arrow''(void)\" (??__Eo_arrow@fLS@@YAXXZ) [C:\\projects\\arrow\\cpp\\build\\src\\arrow\\ipc\\json-integration-test.vcxproj]\r\n     C:\\projects\\arrow\\cpp\\build\\release\\Release\\json-integration-test.exe : fatal error LNK1120: 4 unresolved externals [C:\\projects\\arrow\\cpp\\build\\src\\arrow\\ipc\\json-integration-test.vcxproj]\r\n   ```\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-19T16:05:25.629+0000",
                    "updated": "2018-11-19T16:05:25.629+0000",
                    "started": "2018-11-19T16:05:25.628+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "167436",
                    "issueId": "13193866"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13193866/worklog/167491",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2991: ARROW-3609: [Gandiva] Convert Gandiva benchmark tests as gbenchmark t\u2026\nURL: https://github.com/apache/arrow/pull/2991#issuecomment-440009643\n \n \n   I just opened https://github.com/apache/arrow/pull/2993. I'd like to add the \"gandiva-\" prefix before merging this\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-19T19:17:30.044+0000",
                    "updated": "2018-11-19T19:17:30.044+0000",
                    "started": "2018-11-19T19:17:30.043+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "167491",
                    "issueId": "13193866"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13193866/worklog/167507",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2991: ARROW-3609: [Gandiva] Convert Gandiva benchmark tests as gbenchmark t\u2026\nURL: https://github.com/apache/arrow/pull/2991#issuecomment-440037862\n \n \n   I added the \"gandiva\" prefix. I tried running these locally, but something is not right\r\n   \r\n   ```\r\n   $ ./debug/gandiva-micro_benchmarks \r\n   2018-11-19 15:18:32\r\n   Running ./debug/gandiva-micro_benchmarks\r\n   Run on (8 X 3700 MHz CPU s)\r\n   CPU Caches:\r\n     L1 Data 32K (x4)\r\n     L1 Instruction 32K (x4)\r\n     L2 Unified 256K (x4)\r\n     L3 Unified 8192K (x1)\r\n   -------------------------------------------------------------------------\r\n   Benchmark                                  Time           CPU Iterations\r\n   -------------------------------------------------------------------------\r\n   TimedTestAdd3/iterations:1           2169927 ns    2169144 ns          1\r\n   TimedTestBigNested/iterations:1     15394219 ns   15394107 ns          1\r\n   TimedTestBigNested/iterations:1     15697215 ns   15697429 ns          1\r\n   TimedTestExtractYear/iterations:1   10789657 ns   10789284 ns          1\r\n   TimedTestFilterAdd2/iterations:1     2141252 ns    2140686 ns          1\r\n   TimedTestFilterLike/iterations:1   633241800 ns  633253074 ns          1\r\n   TimedTestAllocs/iterations:1        52421817 ns   52422539 ns          1\r\n   TimedTestMultiOr/iterations:1       25234957 ns   25234687 ns          1\r\n   TimedTestInExpr/iterations:1        17494901 ns   17494212 ns          1\r\n   ```\r\n   \r\n   Running the benchmarks for only a single iteration probably won't yield very high precision results. I found a bug in `TimedEvaluate` that presents when you run the loop multiple times, so fixed that. I also found that `make micro_benchmarks` yielded a broken executable due to a missing dependency on `precompiled`. I also changed to use the `ASSERT_OK` macros so we get higher quality error messages (I had to do this to diagnose the missing dependency on irhelpers.bc). \r\n   \r\n   This is looking better, have a look\r\n   \r\n   ```\r\n   $ ./release/gandiva-micro_benchmarks \r\n   2018-11-19 15:50:45\r\n   Running ./release/gandiva-micro_benchmarks\r\n   Run on (8 X 3700 MHz CPU s)\r\n   CPU Caches:\r\n     L1 Data 32K (x4)\r\n     L1 Instruction 32K (x4)\r\n     L2 Unified 256K (x4)\r\n     L3 Unified 8192K (x1)\r\n   ---------------------------------------------------------------------------\r\n   Benchmark                                    Time           CPU Iterations\r\n   ---------------------------------------------------------------------------\r\n   TimedTestAdd3/min_time:1.000               863 us        862 us       1650\r\n   TimedTestBigNested/min_time:1.000        14881 us      14872 us         97\r\n   TimedTestBigNested/min_time:1.000        15055 us      15047 us         91\r\n   TimedTestExtractYear/min_time:1.000      10610 us      10604 us        137\r\n   TimedTestFilterAdd2/min_time:1.000        1368 us       1367 us       1018\r\n   TimedTestFilterLike/min_time:1.000      616936 us     616606 us          2\r\n   TimedTestAllocs/min_time:1.000           31298 us      31256 us         44\r\n   TimedTestMultiOr/min_time:1.000          25368 us      25364 us         54\r\n   TimedTestInExpr/min_time:1.000           13443 us      13441 us        107\r\n   ```\r\n   \r\n   BTW I'm surprised by https://issues.apache.org/jira/browse/ARROW-3544 every time I switch to release builds. I think compile times can be significantly improved by breaking this into multiple compilation units\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-19T20:53:04.637+0000",
                    "updated": "2018-11-19T20:53:04.637+0000",
                    "started": "2018-11-19T20:53:04.636+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "167507",
                    "issueId": "13193866"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13193866/worklog/167876",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm closed pull request #2991: ARROW-3609: [Gandiva] Convert Gandiva benchmark tests as gbenchmark t\u2026\nURL: https://github.com/apache/arrow/pull/2991\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/gandiva/CMakeLists.txt b/cpp/src/gandiva/CMakeLists.txt\nindex 40e17a8475..515802a46c 100644\n--- a/cpp/src/gandiva/CMakeLists.txt\n+++ b/cpp/src/gandiva/CMakeLists.txt\n@@ -77,7 +77,7 @@ set(GANDIVA_STATIC_LINK_LIBS\n ADD_ARROW_LIB(gandiva\n   SOURCES ${SRC_FILES}\n   OUTPUTS GANDIVA_LIBRARIES\n-  DEPENDENCIES arrow_dependencies\n+  DEPENDENCIES arrow_dependencies precompiled\n   EXTRA_INCLUDES\n   $<TARGET_PROPERTY:LLVM::LLVM_INTERFACE,INTERFACE_INCLUDE_DIRECTORIES>\n   SHARED_LINK_LIBS arrow_shared\ndiff --git a/cpp/src/gandiva/tests/CMakeLists.txt b/cpp/src/gandiva/tests/CMakeLists.txt\nindex 3bef5cf45f..ae600634e7 100644\n--- a/cpp/src/gandiva/tests/CMakeLists.txt\n+++ b/cpp/src/gandiva/tests/CMakeLists.txt\n@@ -27,9 +27,16 @@ foreach(lib_type \"shared\" \"static\")\n   add_gandiva_integ_test(utf8_test.cc gandiva_${lib_type})\n   add_gandiva_integ_test(binary_test.cc gandiva_${lib_type})\n   add_gandiva_integ_test(date_time_test.cc gandiva_${lib_type})\n-  add_gandiva_integ_test(micro_benchmarks.cc gandiva_${lib_type})\n   add_gandiva_integ_test(to_string_test.cc gandiva_${lib_type})\n   add_gandiva_integ_test(hash_test.cc gandiva_${lib_type})\n   add_gandiva_integ_test(in_expr_test.cc gandiva_${lib_type})\n   add_gandiva_integ_test(null_validity_test.cc gandiva_${lib_type})\n endforeach(lib_type)\n+\n+set(GANDIVA_BENCHMARK_LINK_LIBRARIES\n+  gandiva_static\n+)\n+\n+ADD_ARROW_BENCHMARK(micro_benchmarks\n+  PREFIX \"gandiva\"\n+  EXTRA_LINK_LIBS ${GANDIVA_BENCHMARK_LINK_LIBRARIES})\ndiff --git a/cpp/src/gandiva/tests/micro_benchmarks.cc b/cpp/src/gandiva/tests/micro_benchmarks.cc\nindex 7494d09d21..7d844eb378 100644\n--- a/cpp/src/gandiva/tests/micro_benchmarks.cc\n+++ b/cpp/src/gandiva/tests/micro_benchmarks.cc\n@@ -14,11 +14,11 @@\n // KIND, either express or implied.  See the License for the\n // specific language governing permissions and limitations\n // under the License.\n-#include <stdlib.h>\n \n-#include <gtest/gtest.h>\n+#include <stdlib.h>\n #include \"arrow/memory_pool.h\"\n #include \"arrow/status.h\"\n+#include \"benchmark/benchmark.h\"\n #include \"gandiva/projector.h\"\n #include \"gandiva/tests/test_util.h\"\n #include \"gandiva/tests/timed_evaluate.h\"\n@@ -35,20 +35,13 @@ using arrow::utf8;\n // for the hardware used by travis.\n float tolerance_ratio = 6.0;\n \n-class TestBenchmarks : public ::testing::Test {\n- public:\n-  void SetUp() { pool_ = arrow::default_memory_pool(); }\n-\n- protected:\n-  arrow::MemoryPool* pool_;\n-};\n-\n-TEST_F(TestBenchmarks, TimedTestAdd3) {\n+static void TimedTestAdd3(benchmark::State& state) {\n   // schema for input fields\n   auto field0 = field(\"f0\", int64());\n   auto field1 = field(\"f1\", int64());\n   auto field2 = field(\"f2\", int64());\n   auto schema = arrow::schema({field0, field1, field2});\n+  auto pool_ = arrow::default_memory_pool();\n \n   // output field\n   auto field_sum = field(\"add\", int64());\n@@ -63,25 +56,21 @@ TEST_F(TestBenchmarks, TimedTestAdd3) {\n   auto sum_expr = TreeExprBuilder::MakeExpression(sum, field_sum);\n \n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {sum_expr}, &projector);\n-  EXPECT_TRUE(status.ok());\n+  ASSERT_OK(Projector::Make(schema, {sum_expr}, &projector));\n \n-  int64_t elapsed_millis;\n   Int64DataGenerator data_generator;\n   ProjectEvaluator evaluator(projector);\n \n-  status = TimedEvaluate<arrow::Int64Type, int64_t>(schema, evaluator, data_generator,\n-                                                    pool_, 1 * MILLION, 16 * THOUSAND,\n-                                                    elapsed_millis);\n-  ASSERT_TRUE(status.ok());\n-  std::cout << \"Time taken for Add3 \" << elapsed_millis << \" ms\\n\";\n-  EXPECT_LE(elapsed_millis, 2 * tolerance_ratio);\n+  Status status = TimedEvaluate<arrow::Int64Type, int64_t>(\n+      schema, evaluator, data_generator, pool_, 1 * MILLION, 16 * THOUSAND, state);\n+  ASSERT_OK(status);\n }\n \n-TEST_F(TestBenchmarks, TimedTestBigNested) {\n+static void TimedTestBigNested(benchmark::State& state) {\n   // schema for input fields\n   auto fielda = field(\"a\", int32());\n   auto schema = arrow::schema({fielda});\n+  auto pool_ = arrow::default_memory_pool();\n \n   // output fields\n   auto field_result = field(\"res\", int32());\n@@ -110,26 +99,21 @@ TEST_F(TestBenchmarks, TimedTestBigNested) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {expr}, &projector);\n-  EXPECT_TRUE(status.ok());\n+  ASSERT_OK(Projector::Make(schema, {expr}, &projector));\n \n-  int64_t elapsed_millis;\n   BoundedInt32DataGenerator data_generator(250);\n   ProjectEvaluator evaluator(projector);\n \n-  status = TimedEvaluate<arrow::Int32Type, int32_t>(schema, evaluator, data_generator,\n-                                                    pool_, 1 * MILLION, 16 * THOUSAND,\n-                                                    elapsed_millis);\n+  Status status = TimedEvaluate<arrow::Int32Type, int32_t>(\n+      schema, evaluator, data_generator, pool_, 1 * MILLION, 16 * THOUSAND, state);\n   ASSERT_TRUE(status.ok());\n-  std::cout << \"Time taken for BigNestedIf \" << elapsed_millis << \" ms\\n\";\n-\n-  EXPECT_LE(elapsed_millis, 12 * tolerance_ratio);\n }\n \n-TEST_F(TestBenchmarks, TimedTestExtractYear) {\n+static void TimedTestExtractYear(benchmark::State& state) {\n   // schema for input fields\n   auto field0 = field(\"f0\", arrow::date64());\n   auto schema = arrow::schema({field0});\n+  auto pool_ = arrow::default_memory_pool();\n \n   // output field\n   auto field_res = field(\"res\", int64());\n@@ -138,28 +122,23 @@ TEST_F(TestBenchmarks, TimedTestExtractYear) {\n   auto expr = TreeExprBuilder::MakeExpression(\"extractYear\", {field0}, field_res);\n \n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {expr}, &projector);\n-  EXPECT_TRUE(status.ok());\n+  ASSERT_OK(Projector::Make(schema, {expr}, &projector));\n \n-  int64_t elapsed_millis;\n   Int64DataGenerator data_generator;\n   ProjectEvaluator evaluator(projector);\n \n-  status = TimedEvaluate<arrow::Date64Type, int64_t>(schema, evaluator, data_generator,\n-                                                     pool_, 1 * MILLION, 16 * THOUSAND,\n-                                                     elapsed_millis);\n+  Status status = TimedEvaluate<arrow::Date64Type, int64_t>(\n+      schema, evaluator, data_generator, pool_, 1 * MILLION, 16 * THOUSAND, state);\n   ASSERT_TRUE(status.ok());\n-  std::cout << \"Time taken for extractYear \" << elapsed_millis << \" ms\\n\";\n-\n-  EXPECT_LE(elapsed_millis, 11 * tolerance_ratio);\n }\n \n-TEST_F(TestBenchmarks, TimedTestFilterAdd2) {\n+static void TimedTestFilterAdd2(benchmark::State& state) {\n   // schema for input fields\n   auto field0 = field(\"f0\", int64());\n   auto field1 = field(\"f1\", int64());\n   auto field2 = field(\"f2\", int64());\n   auto schema = arrow::schema({field0, field1, field2});\n+  auto pool_ = arrow::default_memory_pool();\n \n   // Build expression\n   auto sum = TreeExprBuilder::MakeFunction(\n@@ -170,25 +149,21 @@ TEST_F(TestBenchmarks, TimedTestFilterAdd2) {\n   auto condition = TreeExprBuilder::MakeCondition(less_than);\n \n   std::shared_ptr<Filter> filter;\n-  Status status = Filter::Make(schema, condition, &filter);\n-  EXPECT_TRUE(status.ok());\n+  ASSERT_OK(Filter::Make(schema, condition, &filter));\n \n-  int64_t elapsed_millis;\n   Int64DataGenerator data_generator;\n   FilterEvaluator evaluator(filter);\n \n-  status = TimedEvaluate<arrow::Int64Type, int64_t>(\n-      schema, evaluator, data_generator, pool_, MILLION, 16 * THOUSAND, elapsed_millis);\n+  Status status = TimedEvaluate<arrow::Int64Type, int64_t>(\n+      schema, evaluator, data_generator, pool_, MILLION, 16 * THOUSAND, state);\n   ASSERT_TRUE(status.ok());\n-  std::cout << \"Time taken for Filter with Add2 \" << elapsed_millis << \" ms\\n\";\n-\n-  EXPECT_LE(elapsed_millis, 2.5 * tolerance_ratio);\n }\n \n-TEST_F(TestBenchmarks, TimedTestFilterLike) {\n+static void TimedTestFilterLike(benchmark::State& state) {\n   // schema for input fields\n   auto fielda = field(\"a\", utf8());\n   auto schema = arrow::schema({fielda});\n+  auto pool_ = arrow::default_memory_pool();\n \n   // build expression.\n   auto node_a = TreeExprBuilder::MakeField(fielda);\n@@ -198,26 +173,21 @@ TEST_F(TestBenchmarks, TimedTestFilterLike) {\n   auto condition = TreeExprBuilder::MakeCondition(like_yellow);\n \n   std::shared_ptr<Filter> filter;\n-  Status status = Filter::Make(schema, condition, &filter);\n-  EXPECT_TRUE(status.ok());\n+  ASSERT_OK(Filter::Make(schema, condition, &filter));\n \n-  int64_t elapsed_millis;\n   FastUtf8DataGenerator data_generator(32);\n   FilterEvaluator evaluator(filter);\n \n-  status = TimedEvaluate<arrow::StringType, std::string>(\n-      schema, evaluator, data_generator, pool_, 1 * MILLION, 16 * THOUSAND,\n-      elapsed_millis);\n+  Status status = TimedEvaluate<arrow::StringType, std::string>(\n+      schema, evaluator, data_generator, pool_, 1 * MILLION, 16 * THOUSAND, state);\n   ASSERT_TRUE(status.ok());\n-  std::cout << \"Time taken for Filter with like \" << elapsed_millis << \" ms\\n\";\n-\n-  EXPECT_LE(elapsed_millis, 600 * tolerance_ratio);\n }\n \n-TEST_F(TestBenchmarks, TimedTestAllocs) {\n+static void TimedTestAllocs(benchmark::State& state) {\n   // schema for input fields\n   auto field_a = field(\"a\", arrow::utf8());\n   auto schema = arrow::schema({field_a});\n+  auto pool_ = arrow::default_memory_pool();\n \n   // output field\n   auto field_res = field(\"res\", int32());\n@@ -229,27 +199,23 @@ TEST_F(TestBenchmarks, TimedTestAllocs) {\n   auto expr = TreeExprBuilder::MakeExpression(length, field_res);\n \n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {expr}, &projector);\n-  EXPECT_TRUE(status.ok());\n+  ASSERT_OK(Projector::Make(schema, {expr}, &projector));\n \n-  int64_t elapsed_millis;\n   FastUtf8DataGenerator data_generator(64);\n   ProjectEvaluator evaluator(projector);\n \n-  status = TimedEvaluate<arrow::StringType, std::string>(\n-      schema, evaluator, data_generator, pool_, 1 * MILLION, 16 * THOUSAND,\n-      elapsed_millis);\n+  Status status = TimedEvaluate<arrow::StringType, std::string>(\n+      schema, evaluator, data_generator, pool_, 1 * MILLION, 16 * THOUSAND, state);\n   ASSERT_TRUE(status.ok());\n-  std::cout << \"Time taken for length(upper(utf8)) \" << elapsed_millis << \" ms\\n\";\n }\n-\n // following two tests are for benchmark optimization of\n // in expr. will be used in follow-up PRs to optimize in expr.\n \n-TEST_F(TestBenchmarks, TimedTestMultiOr) {\n+static void TimedTestMultiOr(benchmark::State& state) {\n   // schema for input fields\n   auto fielda = field(\"a\", utf8());\n   auto schema = arrow::schema({fielda});\n+  auto pool_ = arrow::default_memory_pool();\n \n   // output fields\n   auto field_result = field(\"res\", boolean());\n@@ -271,23 +237,20 @@ TEST_F(TestBenchmarks, TimedTestMultiOr) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {expr}, &projector);\n-  EXPECT_TRUE(status.ok());\n+  ASSERT_OK(Projector::Make(schema, {expr}, &projector));\n \n-  int64_t elapsed_millis;\n   FastUtf8DataGenerator data_generator(250);\n   ProjectEvaluator evaluator(projector);\n-  status = TimedEvaluate<arrow::StringType, std::string>(\n-      schema, evaluator, data_generator, pool_, 100 * THOUSAND, 16 * THOUSAND,\n-      elapsed_millis);\n-  ASSERT_TRUE(status.ok());\n-  std::cout << \"Time taken for BooleanOr (100K) \" << elapsed_millis << \" ms\\n\";\n+  Status status = TimedEvaluate<arrow::StringType, std::string>(\n+      schema, evaluator, data_generator, pool_, 100 * THOUSAND, 16 * THOUSAND, state);\n+  ASSERT_OK(status);\n }\n \n-TEST_F(TestBenchmarks, TimedTestInExpr) {\n+static void TimedTestInExpr(benchmark::State& state) {\n   // schema for input fields\n   auto fielda = field(\"a\", utf8());\n   auto schema = arrow::schema({fielda});\n+  auto pool_ = arrow::default_memory_pool();\n \n   // output fields\n   auto field_result = field(\"res\", boolean());\n@@ -306,19 +269,25 @@ TEST_F(TestBenchmarks, TimedTestInExpr) {\n \n   // Build a projector for the expressions.\n   std::shared_ptr<Projector> projector;\n-  Status status = Projector::Make(schema, {expr}, &projector);\n-  EXPECT_TRUE(status.ok());\n+  ASSERT_OK(Projector::Make(schema, {expr}, &projector));\n \n-  int64_t elapsed_millis;\n   FastUtf8DataGenerator data_generator(250);\n   ProjectEvaluator evaluator(projector);\n \n-  status = TimedEvaluate<arrow::StringType, std::string>(\n-      schema, evaluator, data_generator, pool_, 100 * THOUSAND, 16 * THOUSAND,\n-      elapsed_millis);\n+  Status status = TimedEvaluate<arrow::StringType, std::string>(\n+      schema, evaluator, data_generator, pool_, 100 * THOUSAND, 16 * THOUSAND, state);\n \n-  ASSERT_TRUE(status.ok());\n-  std::cout << \"Time taken for BooleanIn (100K) \" << elapsed_millis << \" ms\\n\";\n+  ASSERT_OK(status);\n }\n \n+BENCHMARK(TimedTestAdd3)->MinTime(1.0)->Unit(benchmark::kMicrosecond);\n+BENCHMARK(TimedTestBigNested)->MinTime(1.0)->Unit(benchmark::kMicrosecond);\n+BENCHMARK(TimedTestBigNested)->MinTime(1.0)->Unit(benchmark::kMicrosecond);\n+BENCHMARK(TimedTestExtractYear)->MinTime(1.0)->Unit(benchmark::kMicrosecond);\n+BENCHMARK(TimedTestFilterAdd2)->MinTime(1.0)->Unit(benchmark::kMicrosecond);\n+BENCHMARK(TimedTestFilterLike)->MinTime(1.0)->Unit(benchmark::kMicrosecond);\n+BENCHMARK(TimedTestAllocs)->MinTime(1.0)->Unit(benchmark::kMicrosecond);\n+BENCHMARK(TimedTestMultiOr)->MinTime(1.0)->Unit(benchmark::kMicrosecond);\n+BENCHMARK(TimedTestInExpr)->MinTime(1.0)->Unit(benchmark::kMicrosecond);\n+\n }  // namespace gandiva\ndiff --git a/cpp/src/gandiva/tests/timed_evaluate.h b/cpp/src/gandiva/tests/timed_evaluate.h\nindex e5ee5715f2..dab47c2f21 100644\n--- a/cpp/src/gandiva/tests/timed_evaluate.h\n+++ b/cpp/src/gandiva/tests/timed_evaluate.h\n@@ -17,6 +17,7 @@\n \n #include <memory>\n #include <vector>\n+#include \"benchmark/benchmark.h\"\n #include \"gandiva/arrow.h\"\n #include \"gandiva/filter.h\"\n #include \"gandiva/projector.h\"\n@@ -27,6 +28,7 @@\n \n #define THOUSAND (1024)\n #define MILLION (1024 * 1024)\n+#define NUM_BATCHES 16\n \n namespace gandiva {\n \n@@ -84,48 +86,49 @@ class FilterEvaluator : public BaseEvaluator {\n template <typename TYPE, typename C_TYPE>\n Status TimedEvaluate(SchemaPtr schema, BaseEvaluator& evaluator,\n                      DataGenerator<C_TYPE>& data_generator, arrow::MemoryPool* pool,\n-                     int num_records, int batch_size, int64_t& num_millis) {\n+                     int num_records, int batch_size, benchmark::State& state) {\n   int num_remaining = num_records;\n   int num_fields = schema->num_fields();\n   int num_calls = 0;\n   Status status;\n-  std::chrono::duration<int64_t, std::micro> micros(0);\n-  std::chrono::time_point<std::chrono::high_resolution_clock> start;\n-  std::chrono::time_point<std::chrono::high_resolution_clock> finish;\n-\n-  while (num_remaining > 0) {\n-    int num_in_batch = batch_size;\n-    if (batch_size > num_remaining) {\n-      num_in_batch = num_remaining;\n-    }\n \n+  // Generate batches of data\n+  std::shared_ptr<arrow::RecordBatch> batches[NUM_BATCHES];\n+  for (int i = 0; i < NUM_BATCHES; i++) {\n     // generate data for all columns in the schema\n     std::vector<ArrayPtr> columns;\n     for (int col = 0; col < num_fields; col++) {\n-      std::vector<C_TYPE> data = GenerateData<C_TYPE>(num_in_batch, data_generator);\n-      std::vector<bool> validity(num_in_batch, true);\n+      std::vector<C_TYPE> data = GenerateData<C_TYPE>(batch_size, data_generator);\n+      std::vector<bool> validity(batch_size, true);\n       ArrayPtr col_data = MakeArrowArray<TYPE, C_TYPE>(data, validity);\n-\n       columns.push_back(col_data);\n     }\n \n     // make the record batch\n-    auto in_batch = arrow::RecordBatch::Make(schema, num_in_batch, columns);\n-\n-    // evaluate\n-    start = std::chrono::high_resolution_clock::now();\n-    status = evaluator.Evaluate(*in_batch, pool);\n-    finish = std::chrono::high_resolution_clock::now();\n-    if (!status.ok()) {\n-      return status;\n-    }\n+    std::shared_ptr<arrow::RecordBatch> batch =\n+        arrow::RecordBatch::Make(schema, batch_size, columns);\n+    batches[i] = batch;\n+  }\n+\n+  for (auto _ : state) {\n+    int num_in_batch = batch_size;\n+    num_remaining = num_records;\n+    while (num_remaining > 0) {\n+      if (batch_size > num_remaining) {\n+        num_in_batch = num_remaining;\n+      }\n \n-    micros += std::chrono::duration_cast<std::chrono::microseconds>(finish - start);\n-    num_calls++;\n-    num_remaining -= num_in_batch;\n+      status = evaluator.Evaluate(*(batches[num_calls % NUM_BATCHES]), pool);\n+      if (!status.ok()) {\n+        state.SkipWithError(\"Evaluation of the batch failed\");\n+        return status;\n+      }\n+\n+      num_calls++;\n+      num_remaining -= num_in_batch;\n+    }\n   }\n \n-  num_millis = micros.count() / 1000;\n   return Status::OK();\n }\n \n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-20T17:41:26.658+0000",
                    "updated": "2018-11-20T17:41:26.658+0000",
                    "started": "2018-11-20T17:41:26.657+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "167876",
                    "issueId": "13193866"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13193866/worklog/167877",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2991: ARROW-3609: [Gandiva] Convert Gandiva benchmark tests as gbenchmark t\u2026\nURL: https://github.com/apache/arrow/pull/2991#issuecomment-440365529\n \n \n   @shyambits2004 can you let me know your JIRA id so I can assign the issue to you?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-20T17:41:36.831+0000",
                    "updated": "2018-11-20T17:41:36.831+0000",
                    "started": "2018-11-20T17:41:36.830+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "167877",
                    "issueId": "13193866"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13193866/worklog/167897",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2991: ARROW-3609: [Gandiva] Convert Gandiva benchmark tests as gbenchmark t\u2026\nURL: https://github.com/apache/arrow/pull/2991#issuecomment-440372487\n \n \n   Found you https://issues.apache.org/jira/secure/ViewProfile.jspa?name=shyamsingh\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-20T17:59:41.391+0000",
                    "updated": "2018-11-20T17:59:41.391+0000",
                    "started": "2018-11-20T17:59:41.390+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "167897",
                    "issueId": "13193866"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13193866/worklog/167948",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #2991: ARROW-3609: [Gandiva] Convert Gandiva benchmark tests as gbenchmark t\u2026\nURL: https://github.com/apache/arrow/pull/2991#issuecomment-440410889\n \n \n   Thank you @shyambits2004 for doing this!\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-20T20:01:56.005+0000",
                    "updated": "2018-11-20T20:01:56.005+0000",
                    "started": "2018-11-20T20:01:56.005+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "167948",
                    "issueId": "13193866"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/3",
            "id": "3",
            "description": "A task that needs to be done.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21148&avatarType=issuetype",
            "name": "Task",
            "subtask": false,
            "avatarId": 21148
        },
        "timespent": 6600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@78854520[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@ece5a55[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@73f8900[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7bdf7740[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2ba91fdb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@75608fe1[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@e6c7fc4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@e896c3e[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6d3dedf3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1c537832[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@71acb623[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@3481ccb4[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 6600,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Nov 20 17:41:16 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-11-20T17:41:16.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3609/watchers",
            "watchCount": 4,
            "isWatching": false
        },
        "created": "2018-10-24T13:21:00.000+0000",
        "updated": "2018-11-20T20:01:56.000+0000",
        "timeoriginalestimate": null,
        "description": "Currently the benchmarks are run as integ tests. We should move them out as gbenchmark tests.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 6600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Gandiva] Move benchmark tests out of unit test",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13193866/comment/16664000",
                    "id": "16664000",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Also note that benchmarks can sometimes fail on CI:\r\nhttps://travis-ci.org/apache/arrow/jobs/446256761#L2133\r\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2018-10-25T16:50:41.808+0000",
                    "updated": "2018-10-25T16:50:41.808+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13193866/comment/16686900",
                    "id": "16686900",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
                        "name": "pravindra",
                        "key": "pravindra",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
                        },
                        "displayName": "Pindikura Ravindra",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "body": "I looked at gbenchmark - they don't seem to support the functionality of measuring the time only time consumed by some internal functions. for eg. in gandiva benchmarks, we want to measure only the time it takes to evaluate the batches - but not the time taken for generating data, for building the record batches, ..\r\n\r\nFor the immediate issue (spurious CI failures), I plan to use a different label for these tests (benchmark instead of integ) so that they don't run as part of CI.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
                        "name": "pravindra",
                        "key": "pravindra",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
                        },
                        "displayName": "Pindikura Ravindra",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "created": "2018-11-14T17:41:01.118+0000",
                    "updated": "2018-11-14T17:41:01.118+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13193866/comment/16686935",
                    "id": "16686935",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Actually, I think it does that by design. Only what is inside the \"while (state.KeepRunning())\" loop is measured. [~wesmckinn].",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2018-11-14T18:11:53.753+0000",
                    "updated": "2018-11-14T18:11:53.753+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13193866/comment/16686966",
                    "id": "16686966",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
                        "name": "pravindra",
                        "key": "pravindra",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
                        },
                        "displayName": "Pindikura Ravindra",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "body": "thanks [~pitrou]\u00a0- I'll try this.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
                        "name": "pravindra",
                        "key": "pravindra",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
                        },
                        "displayName": "Pindikura Ravindra",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "created": "2018-11-14T18:34:56.115+0000",
                    "updated": "2018-11-14T18:34:56.115+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13193866/comment/16687035",
                    "id": "16687035",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "+1. Let us know if you run into issues",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-11-14T19:48:11.843+0000",
                    "updated": "2018-11-14T19:48:11.843+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13193866/comment/16693570",
                    "id": "16693570",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 2991\n[https://github.com/apache/arrow/pull/2991]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-11-20T17:41:16.702+0000",
                    "updated": "2018-11-20T17:41:16.702+0000"
                }
            ],
            "maxResults": 6,
            "total": 6,
            "startAt": 0
        },
        "customfield_12311820": "0|i3zl4n:",
        "customfield_12314139": null
    }
}