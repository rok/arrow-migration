{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13211303",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13211303",
    "key": "ARROW-4337",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12344925",
                "id": "12344925",
                "description": "",
                "name": "0.14.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-07-04"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "c#",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": 43200,
        "timeestimate": 16800,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=cshutchinson",
            "name": "cshutchinson",
            "key": "cshutchinson",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Chris Hutchinson",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334712",
                "id": "12334712",
                "name": "C#"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 16800,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=cshutchinson",
            "name": "cshutchinson",
            "key": "cshutchinson",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Chris Hutchinson",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=cshutchinson",
            "name": "cshutchinson",
            "key": "cshutchinson",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Chris Hutchinson",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 26400,
            "total": 43200,
            "percent": 61
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 26400,
            "total": 43200,
            "percent": 61
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4337/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 45,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13211303/worklog/195325",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "chutchinson commented on pull request #3574: ARROW-4337: [C#] Implemented Fluent API for building arrays and record batches\nURL: https://github.com/apache/arrow/pull/3574\n \n \n   Implemented Fluent API for building arrays and record batches. Includes some unit tests for builders but more work is needed to improve coverage.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-06T19:40:42.593+0000",
                    "updated": "2019-02-06T19:40:42.593+0000",
                    "started": "2019-02-06T19:40:42.593+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "195325",
                    "issueId": "13211303"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13211303/worklog/196427",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy commented on issue #3574: ARROW-4337: [C#] Implemented Fluent API for building arrays and record batches\nURL: https://github.com/apache/arrow/pull/3574#issuecomment-461954034\n \n \n   Rebased\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-08T21:32:42.242+0000",
                    "updated": "2019-02-08T21:32:42.242+0000",
                    "started": "2019-02-08T21:32:42.241+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "196427",
                    "issueId": "13211303"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13211303/worklog/207961",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "eerhardt commented on pull request #3574: ARROW-4337: [C#] Implemented Fluent API for building arrays and record batches\nURL: https://github.com/apache/arrow/pull/3574#discussion_r262631838\n \n \n\n ##########\n File path: csharp/examples/FluentBuilderExample/FluentBuilderExample.csproj\n ##########\n @@ -0,0 +1,15 @@\n+\ufeff<Project Sdk=\"Microsoft.NET.Sdk\">\n+  \n+  <Import Project=\"../../build/Common.props\" />\n+\n+  <PropertyGroup>\n+    <LangVersion>7.2</LangVersion>\n+    <OutputType>Exe</OutputType>\n+    <TargetFramework>netcoreapp2.0</TargetFramework>\n \n Review comment:\n   FYI - `netcoreapp2.0` is no longer supported. This should be `netcoreapp2.1`.\r\n   \r\n   [https://devblogs.microsoft.com/dotnet/net-core-2-0-will-reach-end-of-life-on-september-1-2018/](https://devblogs.microsoft.com/dotnet/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-05T18:36:06.802+0000",
                    "updated": "2019-03-05T18:36:06.802+0000",
                    "started": "2019-03-05T18:36:06.801+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "207961",
                    "issueId": "13211303"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13211303/worklog/207963",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "eerhardt commented on pull request #3574: ARROW-4337: [C#] Implemented Fluent API for building arrays and record batches\nURL: https://github.com/apache/arrow/pull/3574#discussion_r262632116\n \n \n\n ##########\n File path: csharp/examples/FluentBuilderExample/FluentBuilderExample.csproj\n ##########\n @@ -0,0 +1,15 @@\n+\ufeff<Project Sdk=\"Microsoft.NET.Sdk\">\n+  \n+  <Import Project=\"../../build/Common.props\" />\n+\n+  <PropertyGroup>\n+    <LangVersion>7.2</LangVersion>\n \n Review comment:\n   What do you think about putting `LangVersion` in the `Common.props`?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-05T18:36:31.001+0000",
                    "updated": "2019-03-05T18:36:31.001+0000",
                    "started": "2019-03-05T18:36:31.000+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "207963",
                    "issueId": "13211303"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13211303/worklog/208000",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "eerhardt commented on pull request #3574: ARROW-4337: [C#] Implemented Fluent API for building arrays and record batches\nURL: https://github.com/apache/arrow/pull/3574#discussion_r262658013\n \n \n\n ##########\n File path: csharp/src/Apache.Arrow/Arrays/PrimitiveArray.cs\n ##########\n @@ -19,49 +19,48 @@\n \n namespace Apache.Arrow\n {\n-    public abstract class PrimitiveArray<T> : Array\n+    public abstract partial class PrimitiveArray<T> : Array\n \n Review comment:\n   I don't see this `partial` class anywhere else. Can `partial` be removed here?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-05T19:36:32.299+0000",
                    "updated": "2019-03-05T19:36:32.299+0000",
                    "started": "2019-03-05T19:36:32.298+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "208000",
                    "issueId": "13211303"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13211303/worklog/208004",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "eerhardt commented on pull request #3574: ARROW-4337: [C#] Implemented Fluent API for building arrays and record batches\nURL: https://github.com/apache/arrow/pull/3574#discussion_r262658814\n \n \n\n ##########\n File path: csharp/src/Apache.Arrow/Arrays/BinaryArray.cs\n ##########\n @@ -35,6 +48,107 @@ public BinaryArray(ArrowTypeId typeId, ArrayData data)\n             data.EnsureBufferCount(3);\n         }\n \n+        public abstract class AbstractBuilder<TArray, TBuilder>: IArrowArrayBuilder<byte, TArray, TBuilder>\n \n Review comment:\n   Instead of `AbstractBuilder`, how do you feel about the name `BuilderBase`? Having the word `Abstract` in a class name is unusual.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-05T19:38:29.009+0000",
                    "updated": "2019-03-05T19:38:29.009+0000",
                    "started": "2019-03-05T19:38:29.009+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "208004",
                    "issueId": "13211303"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13211303/worklog/208008",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "eerhardt commented on pull request #3574: ARROW-4337: [C#] Implemented Fluent API for building arrays and record batches\nURL: https://github.com/apache/arrow/pull/3574#discussion_r262661205\n \n \n\n ##########\n File path: csharp/src/Apache.Arrow/Interfaces/IArrowArrayBuilder.cs\n ##########\n @@ -0,0 +1,46 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements. See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+using Apache.Arrow.Memory;\n+using System;\n+using System.Collections.Generic;\n+\n+namespace Apache.Arrow\n+{\n+    public interface IArrowArrayBuilder { }\n \n Review comment:\n   Empty interfaces should be avoided unless absolutely necessary. Is there something that can be added here?\r\n   \r\n   [https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/interface](https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/interface)\r\n   \r\n   X AVOID using marker interfaces (interfaces with no members).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-05T19:44:27.834+0000",
                    "updated": "2019-03-05T19:44:27.834+0000",
                    "started": "2019-03-05T19:44:27.834+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "208008",
                    "issueId": "13211303"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13211303/worklog/208009",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "eerhardt commented on pull request #3574: ARROW-4337: [C#] Implemented Fluent API for building arrays and record batches\nURL: https://github.com/apache/arrow/pull/3574#discussion_r262661358\n \n \n\n ##########\n File path: csharp/src/Apache.Arrow/Apache.Arrow.csproj\n ##########\n @@ -14,7 +14,7 @@\n     <RepositoryType>git</RepositoryType>\n     <PackageTags>apache arrow</PackageTags>\n     <Company>Apache</Company>\n-    <Version>0.0.1</Version>\n+    <Version>0.0.4</Version>\n \n Review comment:\n   ? What's the reasoning for jumping from `1` to `4`?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-05T19:44:55.884+0000",
                    "updated": "2019-03-05T19:44:55.884+0000",
                    "started": "2019-03-05T19:44:55.883+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "208009",
                    "issueId": "13211303"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13211303/worklog/208013",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "eerhardt commented on pull request #3574: ARROW-4337: [C#] Implemented Fluent API for building arrays and record batches\nURL: https://github.com/apache/arrow/pull/3574#discussion_r262662083\n \n \n\n ##########\n File path: csharp/src/Apache.Arrow/Arrays/BooleanArray.cs\n ##########\n @@ -34,11 +147,8 @@ public BooleanArray(ArrayData data)\n \n         public override void Accept(IArrowArrayVisitor visitor) => Accept(this, visitor);\n \n-        public bool? GetBoolean(int index)\n+        public bool GetBoolean(int index)\n         {\n-            if (IsNull(index))\n \n Review comment:\n   Do we no longer support nulls in BooleanArrays?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-05T19:46:46.453+0000",
                    "updated": "2019-03-05T19:46:46.453+0000",
                    "started": "2019-03-05T19:46:46.453+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "208013",
                    "issueId": "13211303"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13211303/worklog/208014",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "eerhardt commented on pull request #3574: ARROW-4337: [C#] Implemented Fluent API for building arrays and record batches\nURL: https://github.com/apache/arrow/pull/3574#discussion_r262662133\n \n \n\n ##########\n File path: csharp/src/Apache.Arrow/Arrays/BooleanArray.cs\n ##########\n @@ -13,12 +13,125 @@\n // See the License for the specific language governing permissions and\n // limitations under the License.\n \n+using Apache.Arrow.Memory;\n using Apache.Arrow.Types;\n+using System;\n+using System.Collections.Generic;\n \n namespace Apache.Arrow\n {\n-    public class BooleanArray: PrimitiveArray<byte>\n+    public class BooleanArray: Array\n \n Review comment:\n   Why is this no longer a `PrimitiveArray`?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-05T19:46:55.343+0000",
                    "updated": "2019-03-05T19:46:55.343+0000",
                    "started": "2019-03-05T19:46:55.342+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "208014",
                    "issueId": "13211303"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13211303/worklog/208061",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "eerhardt commented on pull request #3574: ARROW-4337: [C#] Implemented Fluent API for building arrays and record batches\nURL: https://github.com/apache/arrow/pull/3574#discussion_r262688352\n \n \n\n ##########\n File path: csharp/src/Apache.Arrow/RecordBatch.Builder.cs\n ##########\n @@ -0,0 +1,149 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements. See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+using Apache.Arrow.Memory;\n+using System;\n+using System.Collections.Generic;\n+using System.Linq;\n+\n+namespace Apache.Arrow\n+{\n+    public partial class RecordBatch\n+    {\n+        public class ArrayBuilder\n+        {\n+            private readonly MemoryPool _memoryPool;\n+\n+            internal ArrayBuilder(MemoryPool memoryPool)\n+            {\n+                _memoryPool = memoryPool;\n+            }\n+\n+            public BooleanArray Boolean(Action<BooleanArray.Builder> action) => Build<BooleanArray, BooleanArray.Builder>(action);\n+            public Int8Array Int8(Action<Int8Array.Builder> action) => Build<Int8Array, Int8Array.Builder>(action);\n+            public Int16Array Int16(Action<Int16Array.Builder> action) => Build<Int16Array, Int16Array.Builder>(action);\n+            public Int32Array Int32(Action<Int32Array.Builder> action) => Build<Int32Array, Int32Array.Builder>(action);\n+            public Int64Array Int64(Action<Int64Array.Builder> action) => Build<Int64Array, Int64Array.Builder>(action);\n+            public UInt8Array UInt8(Action<UInt8Array.Builder> action) => Build<UInt8Array, UInt8Array.Builder>(action);\n+            public UInt16Array UInt16(Action<UInt16Array.Builder> action) => Build<UInt16Array, UInt16Array.Builder>(action);\n+            public UInt32Array UInt32(Action<UInt32Array.Builder> action) => Build<UInt32Array, UInt32Array.Builder>(action);\n+            public UInt64Array UInt64(Action<UInt64Array.Builder> action) => Build<UInt64Array, UInt64Array.Builder>(action);\n+            public FloatArray Float(Action<FloatArray.Builder> action) => Build<FloatArray, FloatArray.Builder>(action);\n+            public DoubleArray Double(Action<DoubleArray.Builder> action) => Build<DoubleArray, DoubleArray.Builder>(action);\n+            public Date32Array Date32(Action<Date32Array.Builder> action) => Build<Date32Array, Date32Array.Builder>(action);\n+            public Date64Array Date64(Action<Date64Array.Builder> action) => Build<Date64Array, Date64Array.Builder>(action);\n+            public BinaryArray Binary(Action<BinaryArray.Builder> action) => Build<BinaryArray, BinaryArray.Builder>(action);\n+            public StringArray String(Action<StringArray.Builder> action) => Build<StringArray, StringArray.Builder>(action);\n+\n+            private TArray Build<TArray, TArrayBuilder>(Action<TArrayBuilder> action)\n+                where TArray: IArrowArray\n+                where TArrayBuilder: IArrowArrayBuilder<TArray>, new()\n+            {\n+                if (action == null)\n+                {\n+                    return default;\n+                }\n+\n+                var builder = new TArrayBuilder();\n+                action(builder);\n+\n+                return builder.Build(_memoryPool);\n+            }\n+        }\n+\n+        public class Builder\n+        {\n+            private readonly MemoryPool _memoryPool;\n+            private readonly Schema.Builder _schema;\n+            private readonly LinkedList<IArrowArray> _arrays;\n+\n+            public Builder(MemoryPool memoryPool = default)\n+            {\n+                _memoryPool = memoryPool ?? MemoryPool.Default.Value;\n+                _schema = new Schema.Builder();\n+                _arrays = new LinkedList<IArrowArray>();\n+            }\n+\n+            public RecordBatch Build()\n+            {\n+                var schema = _schema.Build();\n+                var length = _arrays.Max(x => x.Length);\n+                var batch = new RecordBatch(schema, _arrays, length);\n+\n+                return batch;\n+            }\n+\n+            public Builder Clear()\n+            {\n+                _schema.Clear();\n+                _arrays.Clear();\n+                return this;\n+            }\n+\n+            public Builder Append(RecordBatch batch)\n+            {\n+                foreach (var field in batch.Schema.Fields)\n+                {\n+                    _schema.Field(field.Value);\n+                }\n+\n+                foreach (var array in batch.Arrays)\n+                {\n+                    _arrays.AddLast(array);\n+                }\n+\n+                return this;\n+            }\n+\n+            public Builder Append<TArray>(string name, bool nullable, IArrowArrayBuilder<TArray> builder)\n+                where TArray: IArrowArray\n+            {\n+                return builder == null \n+                    ? this \n+                    : Append(name, nullable, builder.Build(_memoryPool));\n+            }\n+\n+            public Builder Append<TArray>(string name, bool nullable, TArray array)\n+                where TArray: IArrowArray\n+            {\n+                if (string.IsNullOrWhiteSpace(name)) throw new ArgumentNullException(nameof(name));\n+                if (array == null) return this;\n+\n+                _arrays.AddLast(array);\n+\n+                _schema.Field(f => f\n+                    .Name(name)\n+                    .Nullable(nullable)\n+                    .DataType(array.Data.DataType));\n+\n+                return this;\n+            }\n+\n+            public Builder Append<TArray>(string name, bool nullable, Func<ArrayBuilder, TArray> action)\n+                where TArray: IArrowArray\n+            {\n+                if (action == null) return this;\n+\n+                var arrayBuilder = new ArrayBuilder(_memoryPool);\n \n Review comment:\n   Do we need to create a new instance of `ArrayBuilder` for every call to this method?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-05T21:02:33.571+0000",
                    "updated": "2019-03-05T21:02:33.571+0000",
                    "started": "2019-03-05T21:02:33.570+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "208061",
                    "issueId": "13211303"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13211303/worklog/208062",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "eerhardt commented on pull request #3574: ARROW-4337: [C#] Implemented Fluent API for building arrays and record batches\nURL: https://github.com/apache/arrow/pull/3574#discussion_r262688978\n \n \n\n ##########\n File path: csharp/src/Apache.Arrow/RecordBatch.Builder.cs\n ##########\n @@ -0,0 +1,149 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements. See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+using Apache.Arrow.Memory;\n+using System;\n+using System.Collections.Generic;\n+using System.Linq;\n+\n+namespace Apache.Arrow\n+{\n+    public partial class RecordBatch\n+    {\n+        public class ArrayBuilder\n+        {\n+            private readonly MemoryPool _memoryPool;\n+\n+            internal ArrayBuilder(MemoryPool memoryPool)\n+            {\n+                _memoryPool = memoryPool;\n+            }\n+\n+            public BooleanArray Boolean(Action<BooleanArray.Builder> action) => Build<BooleanArray, BooleanArray.Builder>(action);\n+            public Int8Array Int8(Action<Int8Array.Builder> action) => Build<Int8Array, Int8Array.Builder>(action);\n+            public Int16Array Int16(Action<Int16Array.Builder> action) => Build<Int16Array, Int16Array.Builder>(action);\n+            public Int32Array Int32(Action<Int32Array.Builder> action) => Build<Int32Array, Int32Array.Builder>(action);\n+            public Int64Array Int64(Action<Int64Array.Builder> action) => Build<Int64Array, Int64Array.Builder>(action);\n+            public UInt8Array UInt8(Action<UInt8Array.Builder> action) => Build<UInt8Array, UInt8Array.Builder>(action);\n+            public UInt16Array UInt16(Action<UInt16Array.Builder> action) => Build<UInt16Array, UInt16Array.Builder>(action);\n+            public UInt32Array UInt32(Action<UInt32Array.Builder> action) => Build<UInt32Array, UInt32Array.Builder>(action);\n+            public UInt64Array UInt64(Action<UInt64Array.Builder> action) => Build<UInt64Array, UInt64Array.Builder>(action);\n+            public FloatArray Float(Action<FloatArray.Builder> action) => Build<FloatArray, FloatArray.Builder>(action);\n+            public DoubleArray Double(Action<DoubleArray.Builder> action) => Build<DoubleArray, DoubleArray.Builder>(action);\n+            public Date32Array Date32(Action<Date32Array.Builder> action) => Build<Date32Array, Date32Array.Builder>(action);\n+            public Date64Array Date64(Action<Date64Array.Builder> action) => Build<Date64Array, Date64Array.Builder>(action);\n+            public BinaryArray Binary(Action<BinaryArray.Builder> action) => Build<BinaryArray, BinaryArray.Builder>(action);\n+            public StringArray String(Action<StringArray.Builder> action) => Build<StringArray, StringArray.Builder>(action);\n+\n+            private TArray Build<TArray, TArrayBuilder>(Action<TArrayBuilder> action)\n+                where TArray: IArrowArray\n+                where TArrayBuilder: IArrowArrayBuilder<TArray>, new()\n+            {\n+                if (action == null)\n+                {\n+                    return default;\n+                }\n+\n+                var builder = new TArrayBuilder();\n+                action(builder);\n+\n+                return builder.Build(_memoryPool);\n+            }\n+        }\n+\n+        public class Builder\n+        {\n+            private readonly MemoryPool _memoryPool;\n+            private readonly Schema.Builder _schema;\n+            private readonly LinkedList<IArrowArray> _arrays;\n \n Review comment:\n   Why use a `LinkedList` here? Why not just a regular `List`?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-05T21:04:24.480+0000",
                    "updated": "2019-03-05T21:04:24.480+0000",
                    "started": "2019-03-05T21:04:24.479+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "208062",
                    "issueId": "13211303"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13211303/worklog/208063",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "eerhardt commented on pull request #3574: ARROW-4337: [C#] Implemented Fluent API for building arrays and record batches\nURL: https://github.com/apache/arrow/pull/3574#discussion_r262689533\n \n \n\n ##########\n File path: csharp/src/Apache.Arrow/RecordBatch.Builder.cs\n ##########\n @@ -0,0 +1,149 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements. See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+using Apache.Arrow.Memory;\n+using System;\n+using System.Collections.Generic;\n+using System.Linq;\n+\n+namespace Apache.Arrow\n+{\n+    public partial class RecordBatch\n+    {\n+        public class ArrayBuilder\n+        {\n+            private readonly MemoryPool _memoryPool;\n+\n+            internal ArrayBuilder(MemoryPool memoryPool)\n+            {\n+                _memoryPool = memoryPool;\n+            }\n+\n+            public BooleanArray Boolean(Action<BooleanArray.Builder> action) => Build<BooleanArray, BooleanArray.Builder>(action);\n+            public Int8Array Int8(Action<Int8Array.Builder> action) => Build<Int8Array, Int8Array.Builder>(action);\n+            public Int16Array Int16(Action<Int16Array.Builder> action) => Build<Int16Array, Int16Array.Builder>(action);\n+            public Int32Array Int32(Action<Int32Array.Builder> action) => Build<Int32Array, Int32Array.Builder>(action);\n+            public Int64Array Int64(Action<Int64Array.Builder> action) => Build<Int64Array, Int64Array.Builder>(action);\n+            public UInt8Array UInt8(Action<UInt8Array.Builder> action) => Build<UInt8Array, UInt8Array.Builder>(action);\n+            public UInt16Array UInt16(Action<UInt16Array.Builder> action) => Build<UInt16Array, UInt16Array.Builder>(action);\n+            public UInt32Array UInt32(Action<UInt32Array.Builder> action) => Build<UInt32Array, UInt32Array.Builder>(action);\n+            public UInt64Array UInt64(Action<UInt64Array.Builder> action) => Build<UInt64Array, UInt64Array.Builder>(action);\n+            public FloatArray Float(Action<FloatArray.Builder> action) => Build<FloatArray, FloatArray.Builder>(action);\n+            public DoubleArray Double(Action<DoubleArray.Builder> action) => Build<DoubleArray, DoubleArray.Builder>(action);\n+            public Date32Array Date32(Action<Date32Array.Builder> action) => Build<Date32Array, Date32Array.Builder>(action);\n+            public Date64Array Date64(Action<Date64Array.Builder> action) => Build<Date64Array, Date64Array.Builder>(action);\n+            public BinaryArray Binary(Action<BinaryArray.Builder> action) => Build<BinaryArray, BinaryArray.Builder>(action);\n+            public StringArray String(Action<StringArray.Builder> action) => Build<StringArray, StringArray.Builder>(action);\n+\n+            private TArray Build<TArray, TArrayBuilder>(Action<TArrayBuilder> action)\n+                where TArray: IArrowArray\n+                where TArrayBuilder: IArrowArrayBuilder<TArray>, new()\n+            {\n+                if (action == null)\n+                {\n+                    return default;\n+                }\n+\n+                var builder = new TArrayBuilder();\n+                action(builder);\n+\n+                return builder.Build(_memoryPool);\n+            }\n+        }\n+\n+        public class Builder\n+        {\n+            private readonly MemoryPool _memoryPool;\n+            private readonly Schema.Builder _schema;\n+            private readonly LinkedList<IArrowArray> _arrays;\n+\n+            public Builder(MemoryPool memoryPool = default)\n+            {\n+                _memoryPool = memoryPool ?? MemoryPool.Default.Value;\n+                _schema = new Schema.Builder();\n+                _arrays = new LinkedList<IArrowArray>();\n+            }\n+\n+            public RecordBatch Build()\n+            {\n+                var schema = _schema.Build();\n+                var length = _arrays.Max(x => x.Length);\n+                var batch = new RecordBatch(schema, _arrays, length);\n \n Review comment:\n   If you use the new ctor I'm adding here:\r\n   \r\n   [https://github.com/apache/arrow/pull/3736/files#diff-96784cd3353fe0069df2887812e5b784R56](https://github.com/apache/arrow/pull/3736/files#diff-96784cd3353fe0069df2887812e5b784R56)\r\n   \r\n   Then you can avoid allocating an extra List and copying the instances over.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-05T21:05:57.433+0000",
                    "updated": "2019-03-05T21:05:57.433+0000",
                    "started": "2019-03-05T21:05:57.433+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "208063",
                    "issueId": "13211303"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13211303/worklog/208065",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "eerhardt commented on pull request #3574: ARROW-4337: [C#] Implemented Fluent API for building arrays and record batches\nURL: https://github.com/apache/arrow/pull/3574#discussion_r262689907\n \n \n\n ##########\n File path: csharp/src/Apache.Arrow/RecordBatch.Builder.cs\n ##########\n @@ -0,0 +1,149 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements. See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+using Apache.Arrow.Memory;\n+using System;\n+using System.Collections.Generic;\n+using System.Linq;\n+\n+namespace Apache.Arrow\n+{\n+    public partial class RecordBatch\n+    {\n+        public class ArrayBuilder\n+        {\n+            private readonly MemoryPool _memoryPool;\n+\n+            internal ArrayBuilder(MemoryPool memoryPool)\n+            {\n+                _memoryPool = memoryPool;\n+            }\n+\n+            public BooleanArray Boolean(Action<BooleanArray.Builder> action) => Build<BooleanArray, BooleanArray.Builder>(action);\n+            public Int8Array Int8(Action<Int8Array.Builder> action) => Build<Int8Array, Int8Array.Builder>(action);\n+            public Int16Array Int16(Action<Int16Array.Builder> action) => Build<Int16Array, Int16Array.Builder>(action);\n+            public Int32Array Int32(Action<Int32Array.Builder> action) => Build<Int32Array, Int32Array.Builder>(action);\n+            public Int64Array Int64(Action<Int64Array.Builder> action) => Build<Int64Array, Int64Array.Builder>(action);\n+            public UInt8Array UInt8(Action<UInt8Array.Builder> action) => Build<UInt8Array, UInt8Array.Builder>(action);\n+            public UInt16Array UInt16(Action<UInt16Array.Builder> action) => Build<UInt16Array, UInt16Array.Builder>(action);\n+            public UInt32Array UInt32(Action<UInt32Array.Builder> action) => Build<UInt32Array, UInt32Array.Builder>(action);\n+            public UInt64Array UInt64(Action<UInt64Array.Builder> action) => Build<UInt64Array, UInt64Array.Builder>(action);\n+            public FloatArray Float(Action<FloatArray.Builder> action) => Build<FloatArray, FloatArray.Builder>(action);\n+            public DoubleArray Double(Action<DoubleArray.Builder> action) => Build<DoubleArray, DoubleArray.Builder>(action);\n+            public Date32Array Date32(Action<Date32Array.Builder> action) => Build<Date32Array, Date32Array.Builder>(action);\n+            public Date64Array Date64(Action<Date64Array.Builder> action) => Build<Date64Array, Date64Array.Builder>(action);\n+            public BinaryArray Binary(Action<BinaryArray.Builder> action) => Build<BinaryArray, BinaryArray.Builder>(action);\n+            public StringArray String(Action<StringArray.Builder> action) => Build<StringArray, StringArray.Builder>(action);\n+\n+            private TArray Build<TArray, TArrayBuilder>(Action<TArrayBuilder> action)\n+                where TArray: IArrowArray\n+                where TArrayBuilder: IArrowArrayBuilder<TArray>, new()\n+            {\n+                if (action == null)\n+                {\n+                    return default;\n+                }\n+\n+                var builder = new TArrayBuilder();\n+                action(builder);\n+\n+                return builder.Build(_memoryPool);\n+            }\n+        }\n+\n+        public class Builder\n+        {\n+            private readonly MemoryPool _memoryPool;\n+            private readonly Schema.Builder _schema;\n \n Review comment:\n   (minor) Should this be named `_schemaBuilder`? It is a bit confusing reading the code to see `_schema`, but it really being a builder.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-05T21:07:13.641+0000",
                    "updated": "2019-03-05T21:07:13.641+0000",
                    "started": "2019-03-05T21:07:13.640+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "208065",
                    "issueId": "13211303"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13211303/worklog/208067",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "eerhardt commented on pull request #3574: ARROW-4337: [C#] Implemented Fluent API for building arrays and record batches\nURL: https://github.com/apache/arrow/pull/3574#discussion_r262690609\n \n \n\n ##########\n File path: csharp/src/Apache.Arrow/RecordBatch.Builder.cs\n ##########\n @@ -0,0 +1,149 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements. See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+using Apache.Arrow.Memory;\n+using System;\n+using System.Collections.Generic;\n+using System.Linq;\n+\n+namespace Apache.Arrow\n+{\n+    public partial class RecordBatch\n+    {\n+        public class ArrayBuilder\n+        {\n+            private readonly MemoryPool _memoryPool;\n+\n+            internal ArrayBuilder(MemoryPool memoryPool)\n+            {\n+                _memoryPool = memoryPool;\n+            }\n+\n+            public BooleanArray Boolean(Action<BooleanArray.Builder> action) => Build<BooleanArray, BooleanArray.Builder>(action);\n+            public Int8Array Int8(Action<Int8Array.Builder> action) => Build<Int8Array, Int8Array.Builder>(action);\n+            public Int16Array Int16(Action<Int16Array.Builder> action) => Build<Int16Array, Int16Array.Builder>(action);\n+            public Int32Array Int32(Action<Int32Array.Builder> action) => Build<Int32Array, Int32Array.Builder>(action);\n+            public Int64Array Int64(Action<Int64Array.Builder> action) => Build<Int64Array, Int64Array.Builder>(action);\n+            public UInt8Array UInt8(Action<UInt8Array.Builder> action) => Build<UInt8Array, UInt8Array.Builder>(action);\n+            public UInt16Array UInt16(Action<UInt16Array.Builder> action) => Build<UInt16Array, UInt16Array.Builder>(action);\n+            public UInt32Array UInt32(Action<UInt32Array.Builder> action) => Build<UInt32Array, UInt32Array.Builder>(action);\n+            public UInt64Array UInt64(Action<UInt64Array.Builder> action) => Build<UInt64Array, UInt64Array.Builder>(action);\n+            public FloatArray Float(Action<FloatArray.Builder> action) => Build<FloatArray, FloatArray.Builder>(action);\n+            public DoubleArray Double(Action<DoubleArray.Builder> action) => Build<DoubleArray, DoubleArray.Builder>(action);\n+            public Date32Array Date32(Action<Date32Array.Builder> action) => Build<Date32Array, Date32Array.Builder>(action);\n+            public Date64Array Date64(Action<Date64Array.Builder> action) => Build<Date64Array, Date64Array.Builder>(action);\n+            public BinaryArray Binary(Action<BinaryArray.Builder> action) => Build<BinaryArray, BinaryArray.Builder>(action);\n+            public StringArray String(Action<StringArray.Builder> action) => Build<StringArray, StringArray.Builder>(action);\n+\n+            private TArray Build<TArray, TArrayBuilder>(Action<TArrayBuilder> action)\n+                where TArray: IArrowArray\n+                where TArrayBuilder: IArrowArrayBuilder<TArray>, new()\n+            {\n+                if (action == null)\n+                {\n+                    return default;\n+                }\n+\n+                var builder = new TArrayBuilder();\n+                action(builder);\n+\n+                return builder.Build(_memoryPool);\n+            }\n+        }\n+\n+        public class Builder\n+        {\n+            private readonly MemoryPool _memoryPool;\n+            private readonly Schema.Builder _schema;\n+            private readonly LinkedList<IArrowArray> _arrays;\n+\n+            public Builder(MemoryPool memoryPool = default)\n+            {\n+                _memoryPool = memoryPool ?? MemoryPool.Default.Value;\n+                _schema = new Schema.Builder();\n+                _arrays = new LinkedList<IArrowArray>();\n+            }\n+\n+            public RecordBatch Build()\n+            {\n+                var schema = _schema.Build();\n+                var length = _arrays.Max(x => x.Length);\n+                var batch = new RecordBatch(schema, _arrays, length);\n+\n+                return batch;\n+            }\n+\n+            public Builder Clear()\n+            {\n+                _schema.Clear();\n+                _arrays.Clear();\n+                return this;\n+            }\n+\n+            public Builder Append(RecordBatch batch)\n+            {\n+                foreach (var field in batch.Schema.Fields)\n \n Review comment:\n   If I have 2 `RecordBatch` instances with the same schema and I append them to the same builder, should I really get double the columns?\r\n   \r\n   I would have thought I'd get the same output schema, just the rows concated together.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-05T21:09:22.999+0000",
                    "updated": "2019-03-05T21:09:22.999+0000",
                    "started": "2019-03-05T21:09:22.999+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "208067",
                    "issueId": "13211303"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13211303/worklog/208088",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "eerhardt commented on pull request #3574: ARROW-4337: [C#] Implemented Fluent API for building arrays and record batches\nURL: https://github.com/apache/arrow/pull/3574#discussion_r262699155\n \n \n\n ##########\n File path: csharp/src/Apache.Arrow/ArrowBuffer.Builder.cs\n ##########\n @@ -25,17 +25,24 @@ public partial struct ArrowBuffer\n         public class Builder<T>\n             where T : struct\n         {\n+            private const int DefaultCapacity = 8;\n+\n             private readonly int _size;\n-            private byte[] _buffer;\n \n-            public int Capacity => _buffer.Length / _size;\n+            public int Capacity => Memory.Length / _size;\n             public int Length { get; private set; }\n+            public Memory<byte> Memory { get; private set; }\n+            public Span<T> Span\n+            {\n+                [MethodImpl(MethodImplOptions.AggressiveInlining)]\n+                get => Memory.Span.CastTo<T>();\n+            }\n \n-            public Builder(int capacity = 8)\n+            public Builder(int capacity = DefaultCapacity)\n             {\n                 _size = Unsafe.SizeOf<T>();\n-                _buffer = new byte[capacity * _size];\n \n+                Memory = new byte[capacity * _size];\n \n Review comment:\n   Should the `MemoryPool` say where this memory should come from?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-05T21:34:06.564+0000",
                    "updated": "2019-03-05T21:34:06.564+0000",
                    "started": "2019-03-05T21:34:06.563+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "208088",
                    "issueId": "13211303"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13211303/worklog/208089",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "eerhardt commented on pull request #3574: ARROW-4337: [C#] Implemented Fluent API for building arrays and record batches\nURL: https://github.com/apache/arrow/pull/3574#discussion_r262699372\n \n \n\n ##########\n File path: csharp/src/Apache.Arrow/ArrowBuffer.Builder.cs\n ##########\n @@ -146,17 +134,13 @@ private void Reallocate(int length)\n \n                 if (length != 0)\n                 {\n-                    System.Array.Resize(ref _buffer, length);\n+                    var memory = new Memory<byte>(new byte[length]);\n \n Review comment:\n   Similarly here - Should we use the `MemoryPool` for allocating this memory?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-05T21:34:41.211+0000",
                    "updated": "2019-03-05T21:34:41.211+0000",
                    "started": "2019-03-05T21:34:41.210+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "208089",
                    "issueId": "13211303"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13211303/worklog/208091",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "eerhardt commented on pull request #3574: ARROW-4337: [C#] Implemented Fluent API for building arrays and record batches\nURL: https://github.com/apache/arrow/pull/3574#discussion_r262699560\n \n \n\n ##########\n File path: csharp/src/Apache.Arrow/Ipc/ArrowStreamWriter.cs\n ##########\n @@ -83,8 +83,12 @@ public ArrowRecordBatchFlatBufferBuilder()\n             public void Visit(DoubleArray array) => CreateBuffers(array);\n             public void Visit(TimestampArray array) => CreateBuffers(array);\n             public void Visit(BooleanArray array) => CreateBuffers(array);\n-            public void Visit(Date32Array array) => CreateBuffers(array);\n-            public void Visit(Date64Array array) => CreateBuffers(array);\n+            public void Visit(Date32Array array)\n+            {\n+                _buffers.Add(CreateBuffer(array.NullBitmapBuffer));\n+                _buffers.Add(CreateBuffer(array.ValueBuffer));\n+            }\n+            public void Visit(Date64Array array) {} //CreateBuffers(null);\n \n Review comment:\n   Should this `throw` instead?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-05T21:35:16.126+0000",
                    "updated": "2019-03-05T21:35:16.126+0000",
                    "started": "2019-03-05T21:35:16.125+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "208091",
                    "issueId": "13211303"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13211303/worklog/208092",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "eerhardt commented on pull request #3574: ARROW-4337: [C#] Implemented Fluent API for building arrays and record batches\nURL: https://github.com/apache/arrow/pull/3574#discussion_r262699845\n \n \n\n ##########\n File path: csharp/src/Apache.Arrow/Interfaces/IArrowArrayBuilder.cs\n ##########\n @@ -0,0 +1,46 @@\n+// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements. See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+using Apache.Arrow.Memory;\n+using System;\n+using System.Collections.Generic;\n+\n+namespace Apache.Arrow\n+{\n+    public interface IArrowArrayBuilder { }\n+\n+    public interface IArrowArrayBuilder<out TArray> : IArrowArrayBuilder\n+        where TArray: IArrowArray\n+    {\n+        TArray Build(MemoryPool pool);\n+    }\n+\n+    public interface IArrowArrayBuilder<T, out TArray> : IArrowArrayBuilder<TArray>\n+        where TArray: IArrowArray { }\n+\n+    public interface IArrowArrayBuilder<T, out TArray, out TBuilder> : IArrowArrayBuilder<T, TArray>\n+        where TArray : IArrowArray\n+        where TBuilder : IArrowArrayBuilder<TArray>\n+    {\n+        TBuilder Append(T value);\n+        TBuilder Append(ReadOnlySpan<T> span);\n \n Review comment:\n   Should this be named `AppendRange`?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-05T21:36:00.961+0000",
                    "updated": "2019-03-05T21:36:00.961+0000",
                    "started": "2019-03-05T21:36:00.958+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "208092",
                    "issueId": "13211303"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13211303/worklog/208093",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "eerhardt commented on pull request #3574: ARROW-4337: [C#] Implemented Fluent API for building arrays and record batches\nURL: https://github.com/apache/arrow/pull/3574#discussion_r262700465\n \n \n\n ##########\n File path: csharp/src/Apache.Arrow/Arrays/PrimitiveArrayBuilder.cs\n ##########\n @@ -0,0 +1,168 @@\n+\ufeff// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements. See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+using Apache.Arrow.Memory;\n+using System;\n+using System.Collections.Generic;\n+using System.Linq;\n+\n+namespace Apache.Arrow\n+{\n+    public abstract class PrimitiveArrayBuilder<TFrom, TTo, TArray, TBuilder> : IArrowArrayBuilder<TFrom, TArray>\n+        where TTo: struct\n+        where TArray: IArrowArray\n+        where TBuilder: class, IArrowArrayBuilder<TArray>\n+    {\n+        protected TBuilder Instance => this as TBuilder;\n+        protected IArrowArrayBuilder<TTo, TArray, IArrowArrayBuilder<TTo, TArray>> ArrayBuilder { get; }\n+\n+        internal PrimitiveArrayBuilder(IArrowArrayBuilder<TTo, TArray, IArrowArrayBuilder<TTo, TArray>> builder)\n+        {\n+            ArrayBuilder = builder ?? throw new ArgumentNullException(nameof(builder));\n+        }\n+\n+        public TArray Build(MemoryPool pool = default) => ArrayBuilder.Build(pool);\n+\n+        public TBuilder Append(TFrom value)\n+        {\n+            ArrayBuilder.Append(ConvertTo(value));\n+            return Instance;\n+        }\n+\n+        public TBuilder Append(ReadOnlySpan<TFrom> span)\n+        {\n+            foreach (var value in span)\n+            {\n+                Append(value);\n \n Review comment:\n   >value [](start = 23, length = 5)\r\n   \r\n   It would probably be best to get the `span.Length`, and then ensure capacity is enough for the entire span. That way we only need to allocate and copy at most a single time. Instead of potentially multiple times.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-05T21:37:44.928+0000",
                    "updated": "2019-03-05T21:37:44.928+0000",
                    "started": "2019-03-05T21:37:44.928+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "208093",
                    "issueId": "13211303"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 26400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@4d1d354b[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4f2d95f2[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@a6e0888[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@29cf9e32[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@cd2bfdb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@4cd4b7ff[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3604dca5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@63effa59[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7adabd98[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@13589673[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3299149[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@1f089e47[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 26400,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Jun 22 20:17:38 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-06-22T20:17:38.000+0000",
        "workratio": 61,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4337/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2019-01-23T15:36:30.000+0000",
        "updated": "2019-06-24T14:59:11.000+0000",
        "timeoriginalestimate": 43200,
        "description": "Implement a fluent API for building arrays and record batches from Arrow buffers,\u00a0flat arrays,\u00a0spans, enumerables,\u00a0etc.\r\n\r\nA future implementation could extend this API\u00a0with support for ADO.NET DataTables.",
        "customfield_10010": null,
        "timetracking": {
            "originalEstimate": "12h",
            "remainingEstimate": "4h 40m",
            "timeSpent": "7h 20m",
            "originalEstimateSeconds": 43200,
            "remainingEstimateSeconds": 16800,
            "timeSpentSeconds": 26400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C#] Array / RecordBatch Builder Fluent API",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": "2019-02-01",
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13211303/comment/16798475",
                    "id": "16798475",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Does this need to ship in 0.13?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-03-21T21:56:26.863+0000",
                    "updated": "2019-03-21T21:56:26.863+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13211303/comment/16870353",
                    "id": "16870353",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 4640\n[https://github.com/apache/arrow/pull/4640]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-06-22T20:17:38.743+0000",
                    "updated": "2019-06-22T20:17:38.743+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|yi083s:",
        "customfield_12314139": null
    }
}