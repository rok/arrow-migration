{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13399380",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399380",
    "key": "ARROW-13901",
    "fields": {
        "parent": {
            "id": "13398987",
            "key": "ARROW-13866",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/13398987",
            "fields": {
                "summary": "[R] Implement Options for all compute kernels available via list_compute_functions",
                "status": {
                    "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                    "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                    "name": "Resolved",
                    "id": "5",
                    "statusCategory": {
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                        "id": 3,
                        "key": "done",
                        "colorName": "green",
                        "name": "Done"
                    }
                },
                "priority": {
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                    "name": "Major",
                    "id": "3"
                },
                "issuetype": {
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                    "id": "4",
                    "description": "An improvement or enhancement to an existing feature or task.",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                    "name": "Improvement",
                    "subtask": false,
                    "avatarId": 21140
                }
            }
        },
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350323",
                "id": "12350323",
                "description": "",
                "name": "6.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-10-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
            "name": "thisisnic",
            "key": "thisisnic",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
            },
            "displayName": "Nicola Crane",
            "active": true,
            "timeZone": "Africa/Casablanca"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333008",
                "id": "12333008",
                "name": "R"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
            "name": "thisisnic",
            "key": "thisisnic",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
            },
            "displayName": "Nicola Crane",
            "active": true,
            "timeZone": "Africa/Casablanca"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
            "name": "thisisnic",
            "key": "thisisnic",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
            },
            "displayName": "Nicola Crane",
            "active": true,
            "timeZone": "Africa/Casablanca"
        },
        "aggregateprogress": {
            "progress": 9000,
            "total": 9000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 9000,
            "total": 9000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13901/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 15,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399380/worklog/661748",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11357:\nURL: https://github.com/apache/arrow/pull/11357#issuecomment-937974636\n\n\n   https://issues.apache.org/jira/browse/ARROW-13901\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-07T16:48:37.083+0000",
                    "updated": "2021-10-07T16:48:37.083+0000",
                    "started": "2021-10-07T16:48:37.083+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "661748",
                    "issueId": "13399380"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399380/worklog/661761",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11357:\nURL: https://github.com/apache/arrow/pull/11357#discussion_r724374825\n\n\n\n##########\nFile path: r/src/compute.cpp\n##########\n@@ -254,6 +254,11 @@ std::shared_ptr<arrow::compute::FunctionOptions> make_compute_options(\n                                      cpp11::as_cpp<bool>(options[\"skip_nulls\"]));\n   }\n \n+  if (func_name == \"index\") {\n+    using Options = arrow::compute::IndexOptions;\n+    return std::make_shared<Options>(cpp11::as_cpp<arrow::Scalar>(options[\"value\"]));\n\nReview comment:\n       Perhaps try `cpp11::as_cpp<std::shared_ptr<arrow::Scalar>>`?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-07T17:08:18.133+0000",
                    "updated": "2021-10-07T17:08:18.133+0000",
                    "started": "2021-10-07T17:08:18.133+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "661761",
                    "issueId": "13399380"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399380/worklog/661766",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #11357:\nURL: https://github.com/apache/arrow/pull/11357#discussion_r724383885\n\n\n\n##########\nFile path: r/src/compute.cpp\n##########\n@@ -254,6 +254,11 @@ std::shared_ptr<arrow::compute::FunctionOptions> make_compute_options(\n                                      cpp11::as_cpp<bool>(options[\"skip_nulls\"]));\n   }\n \n+  if (func_name == \"index\") {\n+    using Options = arrow::compute::IndexOptions;\n+    return std::make_shared<Options>(cpp11::as_cpp<arrow::Scalar>(options[\"value\"]));\n\nReview comment:\n       I doubt that will work because you still have to convert somewhere from R objects (`SEXP`) to Arrow. \r\n   \r\n   I see the one above does `cpp11::as_cpp<arrow::Datum>`, and I know for those kernels we create the Scalar or Array in the R layer. So we could have that requirement here, and just make sure that we don't crash if it's not that type. \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-07T17:20:53.849+0000",
                    "updated": "2021-10-07T17:20:53.849+0000",
                    "started": "2021-10-07T17:20:53.849+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "661766",
                    "issueId": "13399380"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399380/worklog/661901",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on a change in pull request #11357:\nURL: https://github.com/apache/arrow/pull/11357#discussion_r724516367\n\n\n\n##########\nFile path: r/src/compute.cpp\n##########\n@@ -254,6 +254,11 @@ std::shared_ptr<arrow::compute::FunctionOptions> make_compute_options(\n                                      cpp11::as_cpp<bool>(options[\"skip_nulls\"]));\n   }\n \n+  if (func_name == \"index\") {\n+    using Options = arrow::compute::IndexOptions;\n+    return std::make_shared<Options>(cpp11::as_cpp<arrow::Scalar>(options[\"value\"]));\n\nReview comment:\n       > Perhaps try cpp11::as_cpp<std::shared_ptr<arrow::Scalar>>\r\n   Whilst this way actually compiles, it means I have to supply an Arrow Object to the call, e.g. \r\n   `call_function(\"index\", Array$create(c(1, 2, 3, 4, 5)), options = list(value = Scalar$create(2)))`\r\n   which is inconsistent with all the other Arrow functions.\r\n   \r\n   If I try the same suggestion, with `<arrow::Datum>` in the place of `<arrow::Scalar>` it fails to compile with this error: `error: matching function for call to \u2018arrow::compute::IndexOptions::IndexOptions(std::shared_ptr<arrow::Datum>)` \r\n   \r\n   Similarly, if I try it without the `<std::shard_ptr...>` bit, I just get `error:  matching function for call to \u2018arrow::compute::IndexOptions::IndexOptions(arrow::Datum)`.\r\n   \r\n   I will try to see if I can find other code from converting from R objects to Arrow that I can copy to wrap around `options[\"value\"]` maybe?\r\n   \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-07T20:39:36.086+0000",
                    "updated": "2021-10-07T20:39:36.086+0000",
                    "started": "2021-10-07T20:39:36.086+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "661901",
                    "issueId": "13399380"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399380/worklog/661902",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on a change in pull request #11357:\nURL: https://github.com/apache/arrow/pull/11357#discussion_r724516367\n\n\n\n##########\nFile path: r/src/compute.cpp\n##########\n@@ -254,6 +254,11 @@ std::shared_ptr<arrow::compute::FunctionOptions> make_compute_options(\n                                      cpp11::as_cpp<bool>(options[\"skip_nulls\"]));\n   }\n \n+  if (func_name == \"index\") {\n+    using Options = arrow::compute::IndexOptions;\n+    return std::make_shared<Options>(cpp11::as_cpp<arrow::Scalar>(options[\"value\"]));\n\nReview comment:\n       > Perhaps try cpp11::as_cpp<std::shared_ptr<arrow::Scalar>>\r\n   Whilst this way actually compiles, it means I have to supply an Arrow Object to the call, e.g. \r\n   `call_function(\"index\", Array$create(c(1, 2, 3, 4, 5)), options = list(value = Scalar$create(2)))`\r\n   which is inconsistent with all the other Arrow functions.\r\n   \r\n   If I try the same suggestion, with `<arrow::Datum>` in the place of `<arrow::Scalar>` it fails to compile with this error: \r\n   \r\n   ```error: matching function for call to \u2018arrow::compute::IndexOptions::IndexOptions(std::shared_ptr<arrow::Datum>)```\r\n   \r\n   Similarly, if I try it without the `<std::shard_ptr...>` bit, I just get `error:  matching function for call to \u2018arrow::compute::IndexOptions::IndexOptions(arrow::Datum)`.\r\n   \r\n   I will try to see if I can find other code from converting from R objects to Arrow that I can copy to wrap around `options[\"value\"]` maybe?\r\n   \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-07T20:39:59.340+0000",
                    "updated": "2021-10-07T20:39:59.340+0000",
                    "started": "2021-10-07T20:39:59.340+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "661902",
                    "issueId": "13399380"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399380/worklog/661904",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on a change in pull request #11357:\nURL: https://github.com/apache/arrow/pull/11357#discussion_r724516367\n\n\n\n##########\nFile path: r/src/compute.cpp\n##########\n@@ -254,6 +254,11 @@ std::shared_ptr<arrow::compute::FunctionOptions> make_compute_options(\n                                      cpp11::as_cpp<bool>(options[\"skip_nulls\"]));\n   }\n \n+  if (func_name == \"index\") {\n+    using Options = arrow::compute::IndexOptions;\n+    return std::make_shared<Options>(cpp11::as_cpp<arrow::Scalar>(options[\"value\"]));\n\nReview comment:\n       > Perhaps try cpp11::as_cpp<std::shared_ptr<arrow::Scalar>>\r\n   \r\n   Whilst this way actually compiles, it means I have to supply an Arrow Object to the call, e.g. \r\n   `call_function(\"index\", Array$create(c(1, 2, 3, 4, 5)), options = list(value = Scalar$create(2)))`\r\n   which is inconsistent with all the other Arrow functions.\r\n   \r\n   If I try the same suggestion, with `<arrow::Datum>` in the place of `<arrow::Scalar>` it fails to compile with this error: \r\n   \r\n   ```error: matching function for call to \u2018arrow::compute::IndexOptions::IndexOptions(std::shared_ptr<arrow::Datum>)```\r\n   \r\n   Similarly, if I try it without the `<std::shard_ptr...>` bit, I just get `error:  matching function for call to \u2018arrow::compute::IndexOptions::IndexOptions(arrow::Datum)`.\r\n   \r\n   I will try to see if I can find other code from converting from R objects to Arrow that I can copy to wrap around `options[\"value\"]` maybe?\r\n   \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-07T20:45:52.500+0000",
                    "updated": "2021-10-07T20:45:52.500+0000",
                    "started": "2021-10-07T20:45:52.500+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "661904",
                    "issueId": "13399380"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399380/worklog/661905",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on a change in pull request #11357:\nURL: https://github.com/apache/arrow/pull/11357#discussion_r724516367\n\n\n\n##########\nFile path: r/src/compute.cpp\n##########\n@@ -254,6 +254,11 @@ std::shared_ptr<arrow::compute::FunctionOptions> make_compute_options(\n                                      cpp11::as_cpp<bool>(options[\"skip_nulls\"]));\n   }\n \n+  if (func_name == \"index\") {\n+    using Options = arrow::compute::IndexOptions;\n+    return std::make_shared<Options>(cpp11::as_cpp<arrow::Scalar>(options[\"value\"]));\n\nReview comment:\n       > Perhaps try cpp11::as_cpp<std::shared_ptr<arrow::Scalar>>\r\n   \r\n   Whilst this way actually compiles, it means I have to supply an Arrow Object to the call, e.g. \r\n   `call_function(\"index\", Array$create(c(1, 2, 3, 4, 5)), options = list(value = Scalar$create(2)))`\r\n   which is inconsistent with all the other Arrow functions.\r\n   \r\n   If I call `call_function(\"index\", Array$create(c(1, 2, 3, 4, 5)), options = list(value = 2))` (the typical way to call these), I get `Error: Invalid R object for std::shared_ptr<arrow::Scalar>, must be an ArrowObject`\r\n   \r\n   If I try the same suggestion, with `<arrow::Datum>` in the place of `<arrow::Scalar>` it fails to compile with this error: \r\n   \r\n   ```error: matching function for call to \u2018arrow::compute::IndexOptions::IndexOptions(std::shared_ptr<arrow::Datum>)```\r\n   \r\n   Similarly, if I try it without the `<std::shard_ptr...>` bit, I just get `error:  matching function for call to \u2018arrow::compute::IndexOptions::IndexOptions(arrow::Datum)`.\r\n   \r\n   I will try to see if I can find other code from converting from R objects to Arrow that I can copy to wrap around `options[\"value\"]` maybe?\r\n   \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-07T20:46:35.756+0000",
                    "updated": "2021-10-07T20:46:35.756+0000",
                    "started": "2021-10-07T20:46:35.756+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "661905",
                    "issueId": "13399380"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399380/worklog/661906",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11357:\nURL: https://github.com/apache/arrow/pull/11357#discussion_r724524473\n\n\n\n##########\nFile path: r/src/compute.cpp\n##########\n@@ -254,6 +254,11 @@ std::shared_ptr<arrow::compute::FunctionOptions> make_compute_options(\n                                      cpp11::as_cpp<bool>(options[\"skip_nulls\"]));\n   }\n \n+  if (func_name == \"index\") {\n+    using Options = arrow::compute::IndexOptions;\n+    return std::make_shared<Options>(cpp11::as_cpp<arrow::Scalar>(options[\"value\"]));\n\nReview comment:\n       > Whilst this way actually compiles, it means I have to supply an Arrow Object to the call, e.g. `call_function(\"index\", Array$create(c(1, 2, 3, 4, 5)), options = list(value = Scalar$create(2)))` which is inconsistent with all the other Arrow functions.\r\n   \r\n   Oh, I see. Well, you just have to call `Scalar$create` implicitly then, or the R/C++ equivalent (I don't know what it is).\r\n   \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-07T20:51:25.351+0000",
                    "updated": "2021-10-07T20:51:25.351+0000",
                    "started": "2021-10-07T20:51:25.350+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "661906",
                    "issueId": "13399380"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399380/worklog/661915",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on a change in pull request #11357:\nURL: https://github.com/apache/arrow/pull/11357#discussion_r724531735\n\n\n\n##########\nFile path: r/src/compute.cpp\n##########\n@@ -254,6 +254,11 @@ std::shared_ptr<arrow::compute::FunctionOptions> make_compute_options(\n                                      cpp11::as_cpp<bool>(options[\"skip_nulls\"]));\n   }\n \n+  if (func_name == \"index\") {\n+    using Options = arrow::compute::IndexOptions;\n+    return std::make_shared<Options>(cpp11::as_cpp<arrow::Scalar>(options[\"value\"]));\n\nReview comment:\n       I'll submit a bit of a hack that works and then see where to go from that :) \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-07T21:03:25.635+0000",
                    "updated": "2021-10-07T21:03:25.635+0000",
                    "started": "2021-10-07T21:03:25.635+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "661915",
                    "issueId": "13399380"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399380/worklog/662107",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11357:\nURL: https://github.com/apache/arrow/pull/11357#issuecomment-937974636\n\n\n   https://issues.apache.org/jira/browse/ARROW-13901\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-07T23:17:09.014+0000",
                    "updated": "2021-10-07T23:17:09.014+0000",
                    "started": "2021-10-07T23:17:09.014+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "662107",
                    "issueId": "13399380"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399380/worklog/662238",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on a change in pull request #11357:\nURL: https://github.com/apache/arrow/pull/11357#discussion_r724516367\n\n\n\n##########\nFile path: r/src/compute.cpp\n##########\n@@ -254,6 +254,11 @@ std::shared_ptr<arrow::compute::FunctionOptions> make_compute_options(\n                                      cpp11::as_cpp<bool>(options[\"skip_nulls\"]));\n   }\n \n+  if (func_name == \"index\") {\n+    using Options = arrow::compute::IndexOptions;\n+    return std::make_shared<Options>(cpp11::as_cpp<arrow::Scalar>(options[\"value\"]));\n\nReview comment:\n       > Perhaps try cpp11::as_cpp<std::shared_ptr<arrow::Scalar>>\r\n   Whilst this way actually compiles, it means I have to supply an Arrow Object to the call, e.g. \r\n   `call_function(\"index\", Array$create(c(1, 2, 3, 4, 5)), options = list(value = Scalar$create(2)))`\r\n   which is inconsistent with all the other Arrow functions.\r\n   \r\n   If I try the same suggestion, with `<arrow::Datum>` in the place of `<arrow::Scalar>` it fails to compile with this error: `error: matching function for call to \u2018arrow::compute::IndexOptions::IndexOptions(std::shared_ptr<arrow::Datum>)` \r\n   \r\n   Similarly, if I try it without the `<std::shard_ptr...>` bit, I just get `error:  matching function for call to \u2018arrow::compute::IndexOptions::IndexOptions(arrow::Datum)`.\r\n   \r\n   I will try to see if I can find other code from converting from R objects to Arrow that I can copy to wrap around `options[\"value\"]` maybe?\r\n   \n\n##########\nFile path: r/src/compute.cpp\n##########\n@@ -254,6 +254,11 @@ std::shared_ptr<arrow::compute::FunctionOptions> make_compute_options(\n                                      cpp11::as_cpp<bool>(options[\"skip_nulls\"]));\n   }\n \n+  if (func_name == \"index\") {\n+    using Options = arrow::compute::IndexOptions;\n+    return std::make_shared<Options>(cpp11::as_cpp<arrow::Scalar>(options[\"value\"]));\n\nReview comment:\n       > Perhaps try cpp11::as_cpp<std::shared_ptr<arrow::Scalar>>\r\n   Whilst this way actually compiles, it means I have to supply an Arrow Object to the call, e.g. \r\n   `call_function(\"index\", Array$create(c(1, 2, 3, 4, 5)), options = list(value = Scalar$create(2)))`\r\n   which is inconsistent with all the other Arrow functions.\r\n   \r\n   If I try the same suggestion, with `<arrow::Datum>` in the place of `<arrow::Scalar>` it fails to compile with this error: \r\n   \r\n   ```error: matching function for call to \u2018arrow::compute::IndexOptions::IndexOptions(std::shared_ptr<arrow::Datum>)```\r\n   \r\n   Similarly, if I try it without the `<std::shard_ptr...>` bit, I just get `error:  matching function for call to \u2018arrow::compute::IndexOptions::IndexOptions(arrow::Datum)`.\r\n   \r\n   I will try to see if I can find other code from converting from R objects to Arrow that I can copy to wrap around `options[\"value\"]` maybe?\r\n   \n\n##########\nFile path: r/src/compute.cpp\n##########\n@@ -254,6 +254,11 @@ std::shared_ptr<arrow::compute::FunctionOptions> make_compute_options(\n                                      cpp11::as_cpp<bool>(options[\"skip_nulls\"]));\n   }\n \n+  if (func_name == \"index\") {\n+    using Options = arrow::compute::IndexOptions;\n+    return std::make_shared<Options>(cpp11::as_cpp<arrow::Scalar>(options[\"value\"]));\n\nReview comment:\n       > Perhaps try cpp11::as_cpp<std::shared_ptr<arrow::Scalar>>\r\n   \r\n   Whilst this way actually compiles, it means I have to supply an Arrow Object to the call, e.g. \r\n   `call_function(\"index\", Array$create(c(1, 2, 3, 4, 5)), options = list(value = Scalar$create(2)))`\r\n   which is inconsistent with all the other Arrow functions.\r\n   \r\n   If I try the same suggestion, with `<arrow::Datum>` in the place of `<arrow::Scalar>` it fails to compile with this error: \r\n   \r\n   ```error: matching function for call to \u2018arrow::compute::IndexOptions::IndexOptions(std::shared_ptr<arrow::Datum>)```\r\n   \r\n   Similarly, if I try it without the `<std::shard_ptr...>` bit, I just get `error:  matching function for call to \u2018arrow::compute::IndexOptions::IndexOptions(arrow::Datum)`.\r\n   \r\n   I will try to see if I can find other code from converting from R objects to Arrow that I can copy to wrap around `options[\"value\"]` maybe?\r\n   \n\n##########\nFile path: r/src/compute.cpp\n##########\n@@ -254,6 +254,11 @@ std::shared_ptr<arrow::compute::FunctionOptions> make_compute_options(\n                                      cpp11::as_cpp<bool>(options[\"skip_nulls\"]));\n   }\n \n+  if (func_name == \"index\") {\n+    using Options = arrow::compute::IndexOptions;\n+    return std::make_shared<Options>(cpp11::as_cpp<arrow::Scalar>(options[\"value\"]));\n\nReview comment:\n       > Perhaps try cpp11::as_cpp<std::shared_ptr<arrow::Scalar>>\r\n   \r\n   Whilst this way actually compiles, it means I have to supply an Arrow Object to the call, e.g. \r\n   `call_function(\"index\", Array$create(c(1, 2, 3, 4, 5)), options = list(value = Scalar$create(2)))`\r\n   which is inconsistent with all the other Arrow functions.\r\n   \r\n   If I call `call_function(\"index\", Array$create(c(1, 2, 3, 4, 5)), options = list(value = 2))` (the typical way to call these), I get `Error: Invalid R object for std::shared_ptr<arrow::Scalar>, must be an ArrowObject`\r\n   \r\n   If I try the same suggestion, with `<arrow::Datum>` in the place of `<arrow::Scalar>` it fails to compile with this error: \r\n   \r\n   ```error: matching function for call to \u2018arrow::compute::IndexOptions::IndexOptions(std::shared_ptr<arrow::Datum>)```\r\n   \r\n   Similarly, if I try it without the `<std::shard_ptr...>` bit, I just get `error:  matching function for call to \u2018arrow::compute::IndexOptions::IndexOptions(arrow::Datum)`.\r\n   \r\n   I will try to see if I can find other code from converting from R objects to Arrow that I can copy to wrap around `options[\"value\"]` maybe?\r\n   \n\n##########\nFile path: r/src/compute.cpp\n##########\n@@ -254,6 +254,11 @@ std::shared_ptr<arrow::compute::FunctionOptions> make_compute_options(\n                                      cpp11::as_cpp<bool>(options[\"skip_nulls\"]));\n   }\n \n+  if (func_name == \"index\") {\n+    using Options = arrow::compute::IndexOptions;\n+    return std::make_shared<Options>(cpp11::as_cpp<arrow::Scalar>(options[\"value\"]));\n\nReview comment:\n       I'll submit a bit of a hack that works and then see where to go from that :) \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-07T23:28:12.470+0000",
                    "updated": "2021-10-07T23:28:12.470+0000",
                    "started": "2021-10-07T23:28:12.469+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "662238",
                    "issueId": "13399380"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399380/worklog/662244",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #11357:\nURL: https://github.com/apache/arrow/pull/11357#discussion_r724383885\n\n\n\n##########\nFile path: r/src/compute.cpp\n##########\n@@ -254,6 +254,11 @@ std::shared_ptr<arrow::compute::FunctionOptions> make_compute_options(\n                                      cpp11::as_cpp<bool>(options[\"skip_nulls\"]));\n   }\n \n+  if (func_name == \"index\") {\n+    using Options = arrow::compute::IndexOptions;\n+    return std::make_shared<Options>(cpp11::as_cpp<arrow::Scalar>(options[\"value\"]));\n\nReview comment:\n       I doubt that will work because you still have to convert somewhere from R objects (`SEXP`) to Arrow. \r\n   \r\n   I see the one above does `cpp11::as_cpp<arrow::Datum>`, and I know for those kernels we create the Scalar or Array in the R layer. So we could have that requirement here, and just make sure that we don't crash if it's not that type. \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-07T23:28:38.975+0000",
                    "updated": "2021-10-07T23:28:38.975+0000",
                    "started": "2021-10-07T23:28:38.975+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "662244",
                    "issueId": "13399380"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399380/worklog/662352",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11357:\nURL: https://github.com/apache/arrow/pull/11357#discussion_r724374825\n\n\n\n##########\nFile path: r/src/compute.cpp\n##########\n@@ -254,6 +254,11 @@ std::shared_ptr<arrow::compute::FunctionOptions> make_compute_options(\n                                      cpp11::as_cpp<bool>(options[\"skip_nulls\"]));\n   }\n \n+  if (func_name == \"index\") {\n+    using Options = arrow::compute::IndexOptions;\n+    return std::make_shared<Options>(cpp11::as_cpp<arrow::Scalar>(options[\"value\"]));\n\nReview comment:\n       Perhaps try `cpp11::as_cpp<std::shared_ptr<arrow::Scalar>>`?\n\n##########\nFile path: r/src/compute.cpp\n##########\n@@ -254,6 +254,11 @@ std::shared_ptr<arrow::compute::FunctionOptions> make_compute_options(\n                                      cpp11::as_cpp<bool>(options[\"skip_nulls\"]));\n   }\n \n+  if (func_name == \"index\") {\n+    using Options = arrow::compute::IndexOptions;\n+    return std::make_shared<Options>(cpp11::as_cpp<arrow::Scalar>(options[\"value\"]));\n\nReview comment:\n       > Whilst this way actually compiles, it means I have to supply an Arrow Object to the call, e.g. `call_function(\"index\", Array$create(c(1, 2, 3, 4, 5)), options = list(value = Scalar$create(2)))` which is inconsistent with all the other Arrow functions.\r\n   \r\n   Oh, I see. Well, you just have to call `Scalar$create` implicitly then, or the R/C++ equivalent (I don't know what it is).\r\n   \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-07T23:37:48.357+0000",
                    "updated": "2021-10-07T23:37:48.357+0000",
                    "started": "2021-10-07T23:37:48.357+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "662352",
                    "issueId": "13399380"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399380/worklog/662691",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #11357:\nURL: https://github.com/apache/arrow/pull/11357#discussion_r724980827\n\n\n\n##########\nFile path: r/R/compute.R\n##########\n@@ -49,6 +49,11 @@ call_function <- function(function_name, ..., args = list(...), options = empty_\n \n   datum_classes <- c(\"Array\", \"ChunkedArray\", \"RecordBatch\", \"Table\", \"Scalar\")\n   valid_args <- map_lgl(args, ~ inherits(., datum_classes))\n+\n+  if (function_name == \"index\") {\n+    options$value <- Scalar$create(options$value)\n+  }\n+\n\nReview comment:\n       Let's leave the burden on the user for this, just like we do for all of the other kernels (`call_function` is too low level to handle this)\r\n   \r\n   ```suggestion\r\n   ```\n\n##########\nFile path: r/tests/testthat/test-compute-no-bindings.R\n##########\n@@ -190,3 +190,12 @@ test_that(\"non-bound compute kernels using ExtractRegexOptions\", {\n     Scalar$create(tibble::tibble(letter = \"a\"))\n   )\n })\n+\n+test_that(\"non-bound compute kernels using IndexOptions\", {\n+  expect_equal(\n+    as.vector(\n+      call_function(\"index\", Array$create(c(10, 20, 30, 40)), options = list(value = 40))\n\nReview comment:\n       ```suggestion\r\n         call_function(\"index\", Array$create(c(10, 20, 30, 40)), options = list(value = Scalar$create(40)))\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-08T12:49:47.589+0000",
                    "updated": "2021-10-08T12:49:47.589+0000",
                    "started": "2021-10-08T12:49:47.588+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "662691",
                    "issueId": "13399380"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399380/worklog/662843",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson closed pull request #11357:\nURL: https://github.com/apache/arrow/pull/11357\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-08T16:36:44.713+0000",
                    "updated": "2021-10-08T16:36:44.713+0000",
                    "started": "2021-10-08T16:36:44.712+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "662843",
                    "issueId": "13399380"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
            "id": "7",
            "description": "The sub-task of the issue",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
            "name": "Sub-task",
            "subtask": true,
            "avatarId": 21146
        },
        "timespent": 9000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@d559bdd[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@db8a0ef[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@193179b7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@51c61da6[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@8bc495a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@6cf32591[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7e9d1579[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@1fd70c21[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@754b7018[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@611c8d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1641f725[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@31d047c8[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 9000,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Oct 08 16:36:37 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-10-08T16:36:37.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13901/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2021-09-04T10:16:03.000+0000",
        "updated": "2021-10-08T16:36:45.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 9000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[R] Implement IndexOptions",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399380/comment/17426272",
                    "id": "17426272",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Issue resolved by pull request 11357\n[https://github.com/apache/arrow/pull/11357]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-10-08T16:36:37.474+0000",
                    "updated": "2021-10-08T16:36:37.474+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0um60:",
        "customfield_12314139": null
    }
}