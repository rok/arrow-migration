{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13141830",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141830",
    "key": "ARROW-2240",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341707",
                "id": "12341707",
                "description": "",
                "name": "0.9.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-03-19"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341352",
                "id": "12341352",
                "name": "0.8.0",
                "archived": false,
                "released": true,
                "releaseDate": "2017-12-18"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=cpcloud",
            "name": "cpcloud",
            "key": "cpcloud",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=cpcloud&avatarId=31265",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cpcloud&avatarId=31265",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cpcloud&avatarId=31265",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cpcloud&avatarId=31265"
            },
            "displayName": "Phillip Cloud",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fjetter",
            "name": "fjetter",
            "key": "fjetter",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Florian Jetter",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fjetter",
            "name": "fjetter",
            "key": "fjetter",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Florian Jetter",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2240/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@432f0c29[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1e763c92[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3457d7ec[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@1beaef58[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@570d99c1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@4e553631[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@443770a0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@8ebc751[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3313941c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@5490c8f1[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2bdd00b3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7d5a8bd6[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Jun 12 19:52:39 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-03-12T18:09:51.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2240/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2018-03-01T15:59:05.000+0000",
        "updated": "2019-06-12T19:52:39.000+0000",
        "timeoriginalestimate": null,
        "description": "\u00a0\r\n\r\nArrow initialization fails for string arrays with leading numpy NAN\r\n{code:java}\r\nimport pyarrow as pa\r\nimport numpy as np\r\n\r\npa.array([np.nan, 'str'])\r\n# Py3: ArrowException: Unknown error: must be real number, not str\r\n# Py2: ArrowException: Unknown error: a float is required{code}",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Array initialization with leading numpy nan fails with exception",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141830/comment/16382617",
                    "id": "16382617",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=cpcloud",
                        "name": "cpcloud",
                        "key": "cpcloud",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=cpcloud&avatarId=31265",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cpcloud&avatarId=31265",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cpcloud&avatarId=31265",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cpcloud&avatarId=31265"
                        },
                        "displayName": "Phillip Cloud",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "PR coming shortly.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=cpcloud",
                        "name": "cpcloud",
                        "key": "cpcloud",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=cpcloud&avatarId=31265",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cpcloud&avatarId=31265",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cpcloud&avatarId=31265",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cpcloud&avatarId=31265"
                        },
                        "displayName": "Phillip Cloud",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-03-01T20:38:07.147+0000",
                    "updated": "2018-03-01T20:38:07.147+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141830/comment/16383621",
                    "id": "16383621",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy commented on issue #1686: ARROW-2240: [Python] Array initialization with leading numpy nan fails with exception\nURL: https://github.com/apache/arrow/pull/1686#issuecomment-369933263\n \n \n   rebased\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-02T14:21:16.664+0000",
                    "updated": "2018-03-02T14:21:16.664+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141830/comment/16384154",
                    "id": "16384154",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1686: ARROW-2240: [Python] Array initialization with leading numpy nan fails with exception\nURL: https://github.com/apache/arrow/pull/1686#issuecomment-370053014\n \n \n   Going to take a look at this\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-02T21:09:18.526+0000",
                    "updated": "2018-03-02T21:09:18.526+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141830/comment/16384156",
                    "id": "16384156",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on issue #1686: ARROW-2240: [Python] Array initialization with leading numpy nan fails with exception\nURL: https://github.com/apache/arrow/pull/1686#issuecomment-370053567\n \n \n   looks like a linting error\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-02T21:11:39.547+0000",
                    "updated": "2018-03-02T21:11:39.547+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141830/comment/16384157",
                    "id": "16384157",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on issue #1686: ARROW-2240: [Python] Array initialization with leading numpy nan fails with exception\nURL: https://github.com/apache/arrow/pull/1686#issuecomment-370053602\n \n \n   fixing now\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-02T21:11:46.463+0000",
                    "updated": "2018-03-02T21:11:46.463+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141830/comment/16384193",
                    "id": "16384193",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1686: ARROW-2240: [Python] Array initialization with leading numpy nan fails with exception\nURL: https://github.com/apache/arrow/pull/1686#discussion_r171970277\n \n \n\n ##########\n File path: cpp/src/arrow/python/python-test.cc\n ##########\n @@ -367,5 +367,20 @@ TEST_F(DecimalTest, UpdateWithNaN) {\n   ASSERT_EQ(std::numeric_limits<int32_t>::min(), metadata.scale());\n }\n \n+TEST(PythonTest, ConstructStringArrayWithLeadingZeros) {\n+  PyAcquireGIL lock;\n+\n+  OwnedRef list_ref(PyList_New(2));\n+  PyObject* list = list_ref.obj();\n+  std::string str(\"str\");\n+\n+  ASSERT_EQ(0, PyList_SetItem(list, 0, PyFloat_FromDouble(NAN)));\n+  ASSERT_EQ(0, PyList_SetItem(list, 1, PyUnicode_FromString(str.c_str())));\n+\n+  std::shared_ptr<Array> out;\n+  auto pool = default_memory_pool();\n+  ASSERT_OK(ConvertPySequence(list, pool, &out));\n+}\n \n Review comment:\n   Is this unit test redundant from the Python unit test below?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-02T21:41:38.164+0000",
                    "updated": "2018-03-02T21:41:38.164+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141830/comment/16384194",
                    "id": "16384194",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1686: ARROW-2240: [Python] Array initialization with leading numpy nan fails with exception\nURL: https://github.com/apache/arrow/pull/1686#discussion_r171969572\n \n \n\n ##########\n File path: cpp/src/arrow/python/builtin_convert.cc\n ##########\n @@ -88,7 +88,7 @@ class ScalarVisitor {\n \n   Status Visit(PyObject* obj) {\n     ++total_count_;\n-    if (obj == Py_None) {\n+    if (obj == Py_None || (PyFloat_Check(obj) && std::isnan(PyFloat_AsDouble(obj)))) {\n \n Review comment:\n   This logic is slightly duplicated with `PyFloat_IsNaN`\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-02T21:41:38.171+0000",
                    "updated": "2018-03-02T21:41:38.171+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141830/comment/16384198",
                    "id": "16384198",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on a change in pull request #1686: ARROW-2240: [Python] Array initialization with leading numpy nan fails with exception\nURL: https://github.com/apache/arrow/pull/1686#discussion_r171970850\n \n \n\n ##########\n File path: cpp/src/arrow/python/python-test.cc\n ##########\n @@ -367,5 +367,20 @@ TEST_F(DecimalTest, UpdateWithNaN) {\n   ASSERT_EQ(std::numeric_limits<int32_t>::min(), metadata.scale());\n }\n \n+TEST(PythonTest, ConstructStringArrayWithLeadingZeros) {\n+  PyAcquireGIL lock;\n+\n+  OwnedRef list_ref(PyList_New(2));\n+  PyObject* list = list_ref.obj();\n+  std::string str(\"str\");\n+\n+  ASSERT_EQ(0, PyList_SetItem(list, 0, PyFloat_FromDouble(NAN)));\n+  ASSERT_EQ(0, PyList_SetItem(list, 1, PyUnicode_FromString(str.c_str())));\n+\n+  std::shared_ptr<Array> out;\n+  auto pool = default_memory_pool();\n+  ASSERT_OK(ConvertPySequence(list, pool, &out));\n+}\n \n Review comment:\n   It is, I can remove the python ones. I personally find it easier to write the C API calls and debug those (if necessary) than to cross the language boundary\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-02T21:44:28.206+0000",
                    "updated": "2018-03-02T21:44:28.206+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141830/comment/16384200",
                    "id": "16384200",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1686: ARROW-2240: [Python] Array initialization with leading numpy nan fails with exception\nURL: https://github.com/apache/arrow/pull/1686#discussion_r171970987\n \n \n\n ##########\n File path: cpp/src/arrow/python/python-test.cc\n ##########\n @@ -367,5 +367,20 @@ TEST_F(DecimalTest, UpdateWithNaN) {\n   ASSERT_EQ(std::numeric_limits<int32_t>::min(), metadata.scale());\n }\n \n+TEST(PythonTest, ConstructStringArrayWithLeadingZeros) {\n+  PyAcquireGIL lock;\n+\n+  OwnedRef list_ref(PyList_New(2));\n+  PyObject* list = list_ref.obj();\n+  std::string str(\"str\");\n+\n+  ASSERT_EQ(0, PyList_SetItem(list, 0, PyFloat_FromDouble(NAN)));\n+  ASSERT_EQ(0, PyList_SetItem(list, 1, PyUnicode_FromString(str.c_str())));\n+\n+  std::shared_ptr<Array> out;\n+  auto pool = default_memory_pool();\n+  ASSERT_OK(ConvertPySequence(list, pool, &out));\n+}\n \n Review comment:\n   OK, let's leave them both here then =)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-02T21:45:07.609+0000",
                    "updated": "2018-03-02T21:45:07.609+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141830/comment/16385784",
                    "id": "16385784",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on a change in pull request #1686: ARROW-2240: [Python] Array initialization with leading numpy nan fails with exception\nURL: https://github.com/apache/arrow/pull/1686#discussion_r172115938\n \n \n\n ##########\n File path: cpp/src/arrow/python/builtin_convert.cc\n ##########\n @@ -88,7 +88,7 @@ class ScalarVisitor {\n \n   Status Visit(PyObject* obj) {\n     ++total_count_;\n-    if (obj == Py_None) {\n+    if (obj == Py_None || internal::PyFloat_IsNaN(obj)) {\n \n Review comment:\n   Hmm... Ideally, we should handle all scalar types here, including decimal or np.float32?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T08:33:36.621+0000",
                    "updated": "2018-03-05T08:33:36.621+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141830/comment/16385791",
                    "id": "16385791",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on issue #1686: ARROW-2240: [Python] Array initialization with leading numpy nan fails with exception\nURL: https://github.com/apache/arrow/pull/1686#issuecomment-370345571\n \n \n   Is this a real bug at all? A NaN is still a floating-point \"number\", so it sounds reasonable to abort type inference when given both a FP number and a Python string...\r\n   \r\n   As a point of comparison, it also fails when you pass an explicit type:\r\n   ```\r\n   >>> pa.array([np.nan, 's'], type=pa.string())\r\n   Traceback (most recent call last):\r\n     File \"<ipython-input-18-015a2f2f7924>\", line 1, in <module>\r\n       pa.array([np.nan, 's'], type=pa.string())\r\n     File \"array.pxi\", line 181, in pyarrow.lib.array\r\n     File \"array.pxi\", line 36, in pyarrow.lib._sequence_to_array\r\n     File \"error.pxi\", line 77, in pyarrow.lib.check_status\r\n   ArrowInvalid: /home/antoine/arrow/cpp/src/arrow/python/builtin_convert.cc:979 code: AppendPySequence(seq, size, real_type, builder.get())\r\n   /home/antoine/arrow/cpp/src/arrow/python/builtin_convert.cc:402 code: static_cast<Derived*>(this)->AppendSingle(ref.obj())\r\n   Non bytes/unicode value encountered: nan\r\n   ```\r\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T08:35:44.250+0000",
                    "updated": "2018-03-05T08:35:44.250+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141830/comment/16385794",
                    "id": "16385794",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy commented on issue #1686: ARROW-2240: [Python] Array initialization with leading numpy nan fails with exception\nURL: https://github.com/apache/arrow/pull/1686#issuecomment-370346637\n \n \n   Although `np.nan` is actually a float value, it is used at various places to represent null entries in arrays that don't have a nullability mask.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T08:40:17.160+0000",
                    "updated": "2018-03-05T08:40:17.160+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141830/comment/16385800",
                    "id": "16385800",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on issue #1686: ARROW-2240: [Python] Array initialization with leading numpy nan fails with exception\nURL: https://github.com/apache/arrow/pull/1686#issuecomment-370347470\n \n \n   I suppose only in object arrays?\r\n   Currently `pa.array([np.nan])` and `pa.array([np.nan, 1])` both return a float64 array... Does the PR change this?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T08:43:47.484+0000",
                    "updated": "2018-03-05T08:43:47.484+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141830/comment/16386265",
                    "id": "16386265",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1686: ARROW-2240: [Python] Array initialization with leading numpy nan fails with exception\nURL: https://github.com/apache/arrow/pull/1686#issuecomment-370466748\n \n \n   It's a bit of a slippery slope to be treating NaN unilaterally as null -- if we did that then `pa.array([nan])` should return a NullArray. It may make sense to have an option `nan_as_null` to toggle this behavior on and off (if off, then nan is treated as any other floating point value)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T15:59:45.112+0000",
                    "updated": "2018-03-05T15:59:45.112+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141830/comment/16386516",
                    "id": "16386516",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy commented on issue #1686: ARROW-2240: [Python] Array initialization with leading numpy nan fails with exception\nURL: https://github.com/apache/arrow/pull/1686#issuecomment-370519970\n \n \n   +1 for the option. I guess with nulls we can never have a case that caters for everyone by default.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T18:42:00.517+0000",
                    "updated": "2018-03-05T18:42:00.517+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141830/comment/16395599",
                    "id": "16395599",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm closed pull request #1686: ARROW-2240: [Python] Array initialization with leading numpy nan fails with exception\nURL: https://github.com/apache/arrow/pull/1686\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/python/builtin_convert.cc b/cpp/src/arrow/python/builtin_convert.cc\nindex d2f900f6ae..595499de79 100644\n--- a/cpp/src/arrow/python/builtin_convert.cc\n+++ b/cpp/src/arrow/python/builtin_convert.cc\n@@ -88,7 +88,7 @@ class ScalarVisitor {\n \n   Status Visit(PyObject* obj) {\n     ++total_count_;\n-    if (obj == Py_None) {\n+    if (obj == Py_None || internal::PyFloat_IsNaN(obj)) {\n       ++none_count_;\n     } else if (PyBool_Check(obj)) {\n       ++bool_count_;\n@@ -412,9 +412,10 @@ class TypedConverterVisitor : public TypedConverter<BuilderType> {\n     RETURN_NOT_OK(this->typed_builder_->Reserve(size));\n     // Iterate over the items adding each one\n     if (PySequence_Check(obj)) {\n+      auto self = static_cast<Derived*>(this);\n       for (int64_t i = 0; i < size; ++i) {\n         OwnedRef ref(PySequence_GetItem(obj, i));\n-        RETURN_NOT_OK(static_cast<Derived*>(this)->AppendSingle(ref.obj()));\n+        RETURN_NOT_OK(self->AppendSingle(ref.obj()));\n       }\n     } else {\n       return Status::TypeError(\"Object is not a sequence\");\n@@ -424,7 +425,8 @@ class TypedConverterVisitor : public TypedConverter<BuilderType> {\n \n   // Append a missing item (default implementation)\n   Status AppendNull() { return this->typed_builder_->AppendNull(); }\n-  bool IsNull(PyObject* obj) const { return obj == Py_None; }\n+\n+  bool IsNull(PyObject* obj) const { return internal::PandasObjectIsNull(obj); }\n };\n \n class NullConverter : public TypedConverterVisitor<NullBuilder, NullConverter> {\n@@ -438,7 +440,9 @@ class NullConverter : public TypedConverterVisitor<NullBuilder, NullConverter> {\n class BoolConverter : public TypedConverterVisitor<BooleanBuilder, BoolConverter> {\n  public:\n   // Append a non-missing item\n-  Status AppendItem(PyObject* obj) { return typed_builder_->Append(obj == Py_True); }\n+  Status AppendItem(PyObject* obj) {\n+    return typed_builder_->Append(PyObject_IsTrue(obj) == 1);\n+  }\n };\n \n class Int8Converter : public TypedConverterVisitor<Int8Builder, Int8Converter> {\n@@ -851,11 +855,6 @@ class DecimalConverter\n     RETURN_NOT_OK(internal::DecimalFromPythonDecimal(obj, type, &value));\n     return typed_builder_->Append(value);\n   }\n-\n-  bool IsNull(PyObject* obj) const {\n-    return obj == Py_None || obj == numpy_nan || internal::PyFloat_isnan(obj) ||\n-           (internal::PyDecimal_Check(obj) && internal::PyDecimal_ISNAN(obj));\n-  }\n };\n \n // Dynamic constructor for sequence converters\ndiff --git a/cpp/src/arrow/python/helpers.cc b/cpp/src/arrow/python/helpers.cc\nindex 429068dd1a..5840401315 100644\n--- a/cpp/src/arrow/python/helpers.cc\n+++ b/cpp/src/arrow/python/helpers.cc\n@@ -225,10 +225,6 @@ Status UInt64FromPythonInt(PyObject* obj, uint64_t* out) {\n   return Status::OK();\n }\n \n-bool PyFloat_isnan(PyObject* obj) {\n-  return PyFloat_Check(obj) && std::isnan(PyFloat_AS_DOUBLE(obj));\n-}\n-\n bool PyDecimal_Check(PyObject* obj) {\n   // TODO(phillipc): Is this expensive?\n   OwnedRef Decimal;\n@@ -281,6 +277,15 @@ Status DecimalMetadata::Update(PyObject* object) {\n   return Update(precision, scale);\n }\n \n+bool PyFloat_IsNaN(PyObject* obj) {\n+  return PyFloat_Check(obj) && std::isnan(PyFloat_AsDouble(obj));\n+}\n+\n+bool PandasObjectIsNull(PyObject* obj) {\n+  return obj == Py_None || obj == numpy_nan || PyFloat_IsNaN(obj) ||\n+         (internal::PyDecimal_Check(obj) && internal::PyDecimal_ISNAN(obj));\n+}\n+\n }  // namespace internal\n }  // namespace py\n }  // namespace arrow\ndiff --git a/cpp/src/arrow/python/helpers.h b/cpp/src/arrow/python/helpers.h\nindex 6be0e49b18..b9f505a160 100644\n--- a/cpp/src/arrow/python/helpers.h\n+++ b/cpp/src/arrow/python/helpers.h\n@@ -82,8 +82,11 @@ Status DecimalFromPythonDecimal(PyObject* python_decimal, const DecimalType& arr\n // \\brief Check whether obj is an integer, independent of Python versions.\n bool IsPyInteger(PyObject* obj);\n \n+// \\brief Use pandas missing value semantics to check if a value is null\n+bool PandasObjectIsNull(PyObject* obj);\n+\n // \\brief Check whether obj is nan\n-bool PyFloat_isnan(PyObject* obj);\n+bool PyFloat_IsNaN(PyObject* obj);\n \n // \\brief Check whether obj is an instance of Decimal\n bool PyDecimal_Check(PyObject* obj);\ndiff --git a/cpp/src/arrow/python/numpy_to_arrow.cc b/cpp/src/arrow/python/numpy_to_arrow.cc\nindex 04a71c1f64..9e3534d628 100644\n--- a/cpp/src/arrow/python/numpy_to_arrow.cc\n+++ b/cpp/src/arrow/python/numpy_to_arrow.cc\n@@ -67,11 +67,6 @@ constexpr int64_t kBinaryMemoryLimit = std::numeric_limits<int32_t>::max();\n \n namespace {\n \n-inline bool PandasObjectIsNull(PyObject* obj) {\n-  return obj == Py_None || obj == numpy_nan || internal::PyFloat_isnan(obj) ||\n-         (internal::PyDecimal_Check(obj) && internal::PyDecimal_ISNAN(obj));\n-}\n-\n inline bool PyObject_is_string(PyObject* obj) {\n #if PY_MAJOR_VERSION >= 3\n   return PyUnicode_Check(obj) || PyBytes_Check(obj);\n@@ -161,7 +156,7 @@ static Status AppendObjectBinaries(PyArrayObject* arr, PyArrayObject* mask,\n   for (; offset < objects.size(); ++offset) {\n     OwnedRef tmp_obj;\n     obj = objects[offset];\n-    if ((have_mask && mask_values[offset]) || PandasObjectIsNull(obj)) {\n+    if ((have_mask && mask_values[offset]) || internal::PandasObjectIsNull(obj)) {\n       RETURN_NOT_OK(builder->AppendNull());\n       continue;\n     } else if (!PyBytes_Check(obj)) {\n@@ -207,7 +202,7 @@ static Status AppendObjectStrings(PyArrayObject* arr, PyArrayObject* mask, int64\n   for (; offset < objects.size(); ++offset) {\n     OwnedRef tmp_obj;\n     obj = objects[offset];\n-    if ((have_mask && mask_values[offset]) || PandasObjectIsNull(obj)) {\n+    if ((have_mask && mask_values[offset]) || internal::PandasObjectIsNull(obj)) {\n       RETURN_NOT_OK(builder->AppendNull());\n       continue;\n     } else if (PyUnicode_Check(obj)) {\n@@ -256,7 +251,7 @@ static Status AppendObjectFixedWidthBytes(PyArrayObject* arr, PyArrayObject* mas\n   for (; offset < objects.size(); ++offset) {\n     OwnedRef tmp_obj;\n     obj = objects[offset];\n-    if ((have_mask && mask_values[offset]) || PandasObjectIsNull(obj)) {\n+    if ((have_mask && mask_values[offset]) || internal::PandasObjectIsNull(obj)) {\n       RETURN_NOT_OK(builder->AppendNull());\n       continue;\n     } else if (PyUnicode_Check(obj)) {\n@@ -722,7 +717,7 @@ Status NumPyConverter::ConvertDates() {\n   PyObject* obj;\n   for (int64_t i = 0; i < length_; ++i) {\n     obj = objects[i];\n-    if ((have_mask && mask_values[i]) || PandasObjectIsNull(obj)) {\n+    if ((have_mask && mask_values[i]) || internal::PandasObjectIsNull(obj)) {\n       RETURN_NOT_OK(builder.AppendNull());\n     } else if (PyDate_CheckExact(obj)) {\n       RETURN_NOT_OK(builder.Append(UnboxDate<ArrowType>::Unbox(obj)));\n@@ -770,7 +765,7 @@ Status NumPyConverter::ConvertDecimals() {\n       RETURN_IF_PYERROR();\n     }\n \n-    if (PandasObjectIsNull(object)) {\n+    if (internal::PandasObjectIsNull(object)) {\n       RETURN_NOT_OK(builder.AppendNull());\n     } else {\n       Decimal128 value;\n@@ -798,7 +793,7 @@ Status NumPyConverter::ConvertDateTimes() {\n     if (PyDateTime_Check(obj)) {\n       RETURN_NOT_OK(\n           builder.Append(PyDateTime_to_us(reinterpret_cast<PyDateTime_DateTime*>(obj))));\n-    } else if (PandasObjectIsNull(obj)) {\n+    } else if (internal::PandasObjectIsNull(obj)) {\n       RETURN_NOT_OK(builder.AppendNull());\n     } else {\n       std::stringstream ss;\n@@ -826,7 +821,7 @@ Status NumPyConverter::ConvertTimes() {\n     obj = objects[i];\n     if (PyTime_Check(obj)) {\n       RETURN_NOT_OK(builder.Append(PyTime_to_us(obj)));\n-    } else if (PandasObjectIsNull(obj)) {\n+    } else if (internal::PandasObjectIsNull(obj)) {\n       RETURN_NOT_OK(builder.AppendNull());\n     } else {\n       std::stringstream ss;\n@@ -895,7 +890,7 @@ Status NumPyConverter::ConvertObjectFloats() {\n   PyObject* obj;\n   for (int64_t i = 0; i < objects.size(); ++i) {\n     obj = objects[i];\n-    if ((have_mask && mask_values[i]) || PandasObjectIsNull(obj)) {\n+    if ((have_mask && mask_values[i]) || internal::PandasObjectIsNull(obj)) {\n       RETURN_NOT_OK(builder.AppendNull());\n     } else if (PyFloat_Check(obj)) {\n       double val = PyFloat_AsDouble(obj);\n@@ -930,7 +925,7 @@ Status NumPyConverter::ConvertObjectIntegers() {\n   PyObject* obj;\n   for (int64_t i = 0; i < objects.size(); ++i) {\n     obj = objects[i];\n-    if ((have_mask && mask_values[i]) || PandasObjectIsNull(obj)) {\n+    if ((have_mask && mask_values[i]) || internal::PandasObjectIsNull(obj)) {\n       RETURN_NOT_OK(builder.AppendNull());\n     } else if (PyObject_is_integer(obj)) {\n       const int64_t val = static_cast<int64_t>(PyLong_AsLong(obj));\n@@ -999,7 +994,7 @@ Status NumPyConverter::ConvertBooleans() {\n   PyObject* obj;\n   for (int64_t i = 0; i < length_; ++i) {\n     obj = objects[i];\n-    if ((have_mask && mask_values[i]) || PandasObjectIsNull(obj)) {\n+    if ((have_mask && mask_values[i]) || internal::PandasObjectIsNull(obj)) {\n       ++null_count;\n     } else if (obj == Py_True) {\n       BitUtil::SetBit(bitmap, i);\n@@ -1028,7 +1023,7 @@ Status NumPyConverter::ConvertObjectsInfer() {\n \n   for (int64_t i = 0; i < length_; ++i) {\n     PyObject* obj = objects[i];\n-    if (PandasObjectIsNull(obj)) {\n+    if (internal::PandasObjectIsNull(obj)) {\n       continue;\n     } else if (PyObject_is_string(obj)) {\n       return ConvertObjectStrings();\n@@ -1221,7 +1216,7 @@ inline Status NumPyConverter::ConvertTypedLists(const std::shared_ptr<DataType>&\n   BuilderT* value_builder = static_cast<BuilderT*>(builder->value_builder());\n \n   auto foreach_item = [&](PyObject* object, bool mask) {\n-    if (mask || PandasObjectIsNull(object)) {\n+    if (mask || internal::PandasObjectIsNull(object)) {\n       return builder->AppendNull();\n     } else if (PyArray_Check(object)) {\n       auto numpy_array = reinterpret_cast<PyArrayObject*>(object);\n@@ -1266,7 +1261,7 @@ inline Status NumPyConverter::ConvertTypedLists<NPY_OBJECT, NullType>(\n   auto value_builder = static_cast<NullBuilder*>(builder->value_builder());\n \n   auto foreach_item = [&](PyObject* object, bool mask) {\n-    if (mask || PandasObjectIsNull(object)) {\n+    if (mask || internal::PandasObjectIsNull(object)) {\n       return builder->AppendNull();\n     } else if (PyArray_Check(object)) {\n       auto numpy_array = reinterpret_cast<PyArrayObject*>(object);\n@@ -1312,7 +1307,7 @@ inline Status NumPyConverter::ConvertTypedLists<NPY_OBJECT, BinaryType>(\n   auto value_builder = static_cast<BinaryBuilder*>(builder->value_builder());\n \n   auto foreach_item = [&](PyObject* object, bool mask) {\n-    if (mask || PandasObjectIsNull(object)) {\n+    if (mask || internal::PandasObjectIsNull(object)) {\n       return builder->AppendNull();\n     } else if (PyArray_Check(object)) {\n       auto numpy_array = reinterpret_cast<PyArrayObject*>(object);\n@@ -1365,7 +1360,7 @@ inline Status NumPyConverter::ConvertTypedLists<NPY_OBJECT, StringType>(\n   auto value_builder = static_cast<StringBuilder*>(builder->value_builder());\n \n   auto foreach_item = [&](PyObject* object, bool mask) {\n-    if (mask || PandasObjectIsNull(object)) {\n+    if (mask || internal::PandasObjectIsNull(object)) {\n       return builder->AppendNull();\n     } else if (PyArray_Check(object)) {\n       auto numpy_array = reinterpret_cast<PyArrayObject*>(object);\n@@ -1428,7 +1423,7 @@ Status NumPyConverter::ConvertLists(const std::shared_ptr<DataType>& type,\n       auto value_builder = static_cast<ListBuilder*>(builder->value_builder());\n \n       auto foreach_item = [this, &builder, &value_builder, &list_type](PyObject* object) {\n-        if (PandasObjectIsNull(object)) {\n+        if (internal::PandasObjectIsNull(object)) {\n           return builder->AppendNull();\n         } else {\n           RETURN_NOT_OK(builder->Append(true));\ndiff --git a/cpp/src/arrow/python/python-test.cc b/cpp/src/arrow/python/python-test.cc\nindex 16ac1e332b..c18b1598ff 100644\n--- a/cpp/src/arrow/python/python-test.cc\n+++ b/cpp/src/arrow/python/python-test.cc\n@@ -367,5 +367,20 @@ TEST_F(DecimalTest, UpdateWithNaN) {\n   ASSERT_EQ(std::numeric_limits<int32_t>::min(), metadata.scale());\n }\n \n+TEST(PythonTest, ConstructStringArrayWithLeadingZeros) {\n+  PyAcquireGIL lock;\n+\n+  OwnedRef list_ref(PyList_New(2));\n+  PyObject* list = list_ref.obj();\n+  std::string str(\"str\");\n+\n+  ASSERT_EQ(0, PyList_SetItem(list, 0, PyFloat_FromDouble(NAN)));\n+  ASSERT_EQ(0, PyList_SetItem(list, 1, PyUnicode_FromString(str.c_str())));\n+\n+  std::shared_ptr<Array> out;\n+  auto pool = default_memory_pool();\n+  ASSERT_OK(ConvertPySequence(list, pool, &out));\n+}\n+\n }  // namespace py\n }  // namespace arrow\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-12T18:00:27.554+0000",
                    "updated": "2018-03-12T18:00:27.554+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141830/comment/16395624",
                    "id": "16395624",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 1686\n[https://github.com/apache/arrow/pull/1686]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-03-12T18:09:51.830+0000",
                    "updated": "2018-03-12T18:09:51.830+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141830/comment/16862412",
                    "id": "16862412",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Heads up: in https://github.com/apache/arrow/pull/4527 I am reverting this behavior unless you explicitly pass {{from_pandas=True}}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-06-12T19:52:39.005+0000",
                    "updated": "2019-06-12T19:52:39.005+0000"
                }
            ],
            "maxResults": 18,
            "total": 18,
            "startAt": 0
        },
        "customfield_12311820": "0|i3qr07:",
        "customfield_12314139": null
    }
}