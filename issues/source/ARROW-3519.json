{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13191537",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191537",
    "key": "ARROW-3519",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343858",
                "id": "12343858",
                "description": "",
                "name": "0.12.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-01-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
            "name": "pravindra",
            "key": "pravindra",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
            },
            "displayName": "Pindikura Ravindra",
            "active": true,
            "timeZone": "Asia/Kolkata"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334626",
                "id": "12334626",
                "name": "C++ - Gandiva"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
            "name": "pravindra",
            "key": "pravindra",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
            },
            "displayName": "Pindikura Ravindra",
            "active": true,
            "timeZone": "Asia/Kolkata"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
            "name": "pravindra",
            "key": "pravindra",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
            },
            "displayName": "Pindikura Ravindra",
            "active": true,
            "timeZone": "Asia/Kolkata"
        },
        "aggregateprogress": {
            "progress": 21000,
            "total": 21000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 21000,
            "total": 21000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3519/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 39,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191537/worklog/159153",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra opened a new pull request #2843: ARROW-3519: [Gandiva] Arena for varlen output fns\nURL: https://github.com/apache/arrow/pull/2843\n \n \n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-26T11:59:51.668+0000",
                    "updated": "2018-10-26T11:59:51.668+0000",
                    "started": "2018-10-26T11:59:51.667+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "159153",
                    "issueId": "13191537"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191537/worklog/159215",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on issue #2843: ARROW-3519: [Gandiva] Arena for varlen output fns\nURL: https://github.com/apache/arrow/pull/2843#issuecomment-433448012\n \n \n   @praveenbingo @pitrou can you please review this change ?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-26T15:30:04.377+0000",
                    "updated": "2018-10-26T15:30:04.377+0000",
                    "started": "2018-10-26T15:30:04.376+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "159215",
                    "issueId": "13191537"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191537/worklog/159319",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #2843: ARROW-3519: [Gandiva] Arena for varlen output fns\nURL: https://github.com/apache/arrow/pull/2843#issuecomment-433506450\n \n \n   I'll take a look in a couple of days. Is that ok?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-26T18:43:56.680+0000",
                    "updated": "2018-10-26T18:43:56.680+0000",
                    "started": "2018-10-26T18:43:56.679+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "159319",
                    "issueId": "13191537"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191537/worklog/159916",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2843: ARROW-3519: [Gandiva] Arena for varlen output fns\nURL: https://github.com/apache/arrow/pull/2843#discussion_r228861618\n \n \n\n ##########\n File path: cpp/src/gandiva/simple_arena.h\n ##########\n @@ -0,0 +1,127 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#ifndef GANDIVA_SIMPLE_ARENA_H\n+#define GANDIVA_SIMPLE_ARENA_H\n+\n+#include <memory>\n+#include <utility>\n+#include <vector>\n+\n+namespace gandiva {\n+\n+#ifdef GDV_HELPERS\n \n Review comment:\n   Is this still necessary? This is a new API, backwards compatibility isn't required.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-29T10:18:12.989+0000",
                    "updated": "2018-10-29T10:18:12.989+0000",
                    "started": "2018-10-29T10:18:12.989+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "159916",
                    "issueId": "13191537"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191537/worklog/159917",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2843: ARROW-3519: [Gandiva] Arena for varlen output fns\nURL: https://github.com/apache/arrow/pull/2843#discussion_r228863183\n \n \n\n ##########\n File path: cpp/src/gandiva/simple_arena.h\n ##########\n @@ -0,0 +1,127 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#ifndef GANDIVA_SIMPLE_ARENA_H\n+#define GANDIVA_SIMPLE_ARENA_H\n+\n+#include <memory>\n+#include <utility>\n+#include <vector>\n+\n+namespace gandiva {\n+\n+#ifdef GDV_HELPERS\n+namespace helpers {\n+#endif\n+\n+/// \\brief Simple arena allocator.\n+///\n+/// Memory is allocated from system in units of chunk-size, and dished out in the\n+/// requested sizes. If the requested size > chunk-size, allocate directly from the\n+/// system.\n+///\n+/// The allocated memory gets released only when the arena is destroyed, or on\n+/// Reset.\n+///\n+/// This code is not multi-thread safe, and avoids all locking for efficiency.\n+///\n+class SimpleArena {\n+ public:\n+  explicit SimpleArena(int32_t chunk_size = 4096);\n+\n+  // Allocate buffer of requested size.\n+  uint8_t* Allocate(int32_t size);\n+\n+  // Reset arena state.\n+  void Reset();\n+\n+  // total bytes allocated from system.\n+  int32_t total_bytes() { return total_bytes_; }\n+\n+  // total bytes available for allocations.\n+  int32_t avail_bytes() { return avail_bytes_; }\n+\n+ private:\n+  // Allocate new chunk.\n+  void AllocateChunk(int size);\n+\n+  // The chunk-size used for allocations from system.\n+  int32_t chunk_size_;\n+\n+  // The size of the first chunk.\n+  int32_t first_chunk_size_;\n+\n+  // Total bytes allocated from system.\n+  int32_t total_bytes_;\n+\n+  // Bytes available from allocated chunk.\n+  int32_t avail_bytes_;\n+\n+  // buffer from current chunk.\n+  uint8_t* avail_buf_;\n+\n+  // List of alloced chunks.\n+  std::vector<std::unique_ptr<uint8_t>> chunks_;\n+};\n+\n+inline SimpleArena::SimpleArena(int32_t chunk_size)\n+    : chunk_size_(chunk_size),\n+      first_chunk_size_(0),\n+      total_bytes_(0),\n+      avail_bytes_(0),\n+      avail_buf_(NULL) {}\n+\n+inline uint8_t* SimpleArena::Allocate(int32_t size) {\n+  if (avail_bytes_ < size) {\n+    AllocateChunk(size <= chunk_size_ ? chunk_size_ : size);\n+  }\n+\n+  uint8_t* ret = avail_buf_;\n+  avail_buf_ += size;\n+  avail_bytes_ -= size;\n+  return ret;\n+}\n+\n+inline void SimpleArena::AllocateChunk(int size) {\n+  std::unique_ptr<uint8_t> chunk(new uint8_t[size]);\n+  avail_buf_ = chunk.get();\n+  avail_bytes_ = size;  // left-over bytes in the previous chunk cannot be used anymore.\n+  if (total_bytes_ == 0) {\n+    first_chunk_size_ = size;\n+  }\n+  total_bytes_ += size;\n+\n+  chunks_.push_back(std::move(chunk));\n+}\n+\n+inline void SimpleArena::Reset() {\n+  // Release all but the first chunk.\n \n Review comment:\n   Why \"but the first chunk\"? Is there a particular reason?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-29T10:18:13.000+0000",
                    "updated": "2018-10-29T10:18:13.000+0000",
                    "started": "2018-10-29T10:18:12.999+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "159917",
                    "issueId": "13191537"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191537/worklog/159918",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2843: ARROW-3519: [Gandiva] Arena for varlen output fns\nURL: https://github.com/apache/arrow/pull/2843#discussion_r228863066\n \n \n\n ##########\n File path: cpp/src/gandiva/simple_arena.h\n ##########\n @@ -0,0 +1,127 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#ifndef GANDIVA_SIMPLE_ARENA_H\n+#define GANDIVA_SIMPLE_ARENA_H\n+\n+#include <memory>\n+#include <utility>\n+#include <vector>\n+\n+namespace gandiva {\n+\n+#ifdef GDV_HELPERS\n+namespace helpers {\n+#endif\n+\n+/// \\brief Simple arena allocator.\n+///\n+/// Memory is allocated from system in units of chunk-size, and dished out in the\n+/// requested sizes. If the requested size > chunk-size, allocate directly from the\n+/// system.\n+///\n+/// The allocated memory gets released only when the arena is destroyed, or on\n+/// Reset.\n+///\n+/// This code is not multi-thread safe, and avoids all locking for efficiency.\n+///\n+class SimpleArena {\n+ public:\n+  explicit SimpleArena(int32_t chunk_size = 4096);\n+\n+  // Allocate buffer of requested size.\n+  uint8_t* Allocate(int32_t size);\n+\n+  // Reset arena state.\n+  void Reset();\n+\n+  // total bytes allocated from system.\n+  int32_t total_bytes() { return total_bytes_; }\n+\n+  // total bytes available for allocations.\n+  int32_t avail_bytes() { return avail_bytes_; }\n+\n+ private:\n+  // Allocate new chunk.\n+  void AllocateChunk(int size);\n+\n+  // The chunk-size used for allocations from system.\n+  int32_t chunk_size_;\n+\n+  // The size of the first chunk.\n+  int32_t first_chunk_size_;\n+\n+  // Total bytes allocated from system.\n+  int32_t total_bytes_;\n+\n+  // Bytes available from allocated chunk.\n+  int32_t avail_bytes_;\n+\n+  // buffer from current chunk.\n+  uint8_t* avail_buf_;\n+\n+  // List of alloced chunks.\n+  std::vector<std::unique_ptr<uint8_t>> chunks_;\n+};\n+\n+inline SimpleArena::SimpleArena(int32_t chunk_size)\n+    : chunk_size_(chunk_size),\n+      first_chunk_size_(0),\n+      total_bytes_(0),\n+      avail_bytes_(0),\n+      avail_buf_(NULL) {}\n+\n+inline uint8_t* SimpleArena::Allocate(int32_t size) {\n+  if (avail_bytes_ < size) {\n+    AllocateChunk(size <= chunk_size_ ? chunk_size_ : size);\n \n Review comment:\n   Using [std::max](https://en.cppreference.com/w/cpp/algorithm/max) is a bit more idiomatic.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-29T10:18:13.065+0000",
                    "updated": "2018-10-29T10:18:13.065+0000",
                    "started": "2018-10-29T10:18:13.064+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "159918",
                    "issueId": "13191537"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191537/worklog/159919",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2843: ARROW-3519: [Gandiva] Arena for varlen output fns\nURL: https://github.com/apache/arrow/pull/2843#discussion_r228862093\n \n \n\n ##########\n File path: cpp/src/gandiva/simple_arena.h\n ##########\n @@ -0,0 +1,127 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#ifndef GANDIVA_SIMPLE_ARENA_H\n+#define GANDIVA_SIMPLE_ARENA_H\n+\n+#include <memory>\n+#include <utility>\n+#include <vector>\n+\n+namespace gandiva {\n+\n+#ifdef GDV_HELPERS\n+namespace helpers {\n+#endif\n+\n+/// \\brief Simple arena allocator.\n+///\n+/// Memory is allocated from system in units of chunk-size, and dished out in the\n+/// requested sizes. If the requested size > chunk-size, allocate directly from the\n+/// system.\n+///\n+/// The allocated memory gets released only when the arena is destroyed, or on\n+/// Reset.\n+///\n+/// This code is not multi-thread safe, and avoids all locking for efficiency.\n+///\n+class SimpleArena {\n+ public:\n+  explicit SimpleArena(int32_t chunk_size = 4096);\n+\n+  // Allocate buffer of requested size.\n+  uint8_t* Allocate(int32_t size);\n+\n+  // Reset arena state.\n+  void Reset();\n+\n+  // total bytes allocated from system.\n+  int32_t total_bytes() { return total_bytes_; }\n+\n+  // total bytes available for allocations.\n+  int32_t avail_bytes() { return avail_bytes_; }\n+\n+ private:\n+  // Allocate new chunk.\n+  void AllocateChunk(int size);\n+\n+  // The chunk-size used for allocations from system.\n+  int32_t chunk_size_;\n+\n+  // The size of the first chunk.\n+  int32_t first_chunk_size_;\n+\n+  // Total bytes allocated from system.\n+  int32_t total_bytes_;\n+\n+  // Bytes available from allocated chunk.\n+  int32_t avail_bytes_;\n+\n+  // buffer from current chunk.\n+  uint8_t* avail_buf_;\n+\n+  // List of alloced chunks.\n+  std::vector<std::unique_ptr<uint8_t>> chunks_;\n+};\n+\n+inline SimpleArena::SimpleArena(int32_t chunk_size)\n+    : chunk_size_(chunk_size),\n+      first_chunk_size_(0),\n+      total_bytes_(0),\n+      avail_bytes_(0),\n+      avail_buf_(NULL) {}\n+\n+inline uint8_t* SimpleArena::Allocate(int32_t size) {\n+  if (avail_bytes_ < size) {\n+    AllocateChunk(size <= chunk_size_ ? chunk_size_ : size);\n+  }\n+\n+  uint8_t* ret = avail_buf_;\n+  avail_buf_ += size;\n+  avail_bytes_ -= size;\n+  return ret;\n+}\n+\n+inline void SimpleArena::AllocateChunk(int size) {\n+  std::unique_ptr<uint8_t> chunk(new uint8_t[size]);\n \n Review comment:\n   Arrow has the MemoryPool abstraction, which will often use jemalloc under the hood. We probably shouldn't hardcode calls to the C++ allocator for performance-sensitive allocations.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-29T10:18:13.088+0000",
                    "updated": "2018-10-29T10:18:13.088+0000",
                    "started": "2018-10-29T10:18:13.087+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "159919",
                    "issueId": "13191537"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191537/worklog/159920",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2843: ARROW-3519: [Gandiva] Arena for varlen output fns\nURL: https://github.com/apache/arrow/pull/2843#discussion_r228862509\n \n \n\n ##########\n File path: cpp/src/gandiva/simple_arena.h\n ##########\n @@ -0,0 +1,127 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#ifndef GANDIVA_SIMPLE_ARENA_H\n+#define GANDIVA_SIMPLE_ARENA_H\n+\n+#include <memory>\n+#include <utility>\n+#include <vector>\n+\n+namespace gandiva {\n+\n+#ifdef GDV_HELPERS\n+namespace helpers {\n+#endif\n+\n+/// \\brief Simple arena allocator.\n+///\n+/// Memory is allocated from system in units of chunk-size, and dished out in the\n+/// requested sizes. If the requested size > chunk-size, allocate directly from the\n+/// system.\n+///\n+/// The allocated memory gets released only when the arena is destroyed, or on\n+/// Reset.\n+///\n+/// This code is not multi-thread safe, and avoids all locking for efficiency.\n+///\n+class SimpleArena {\n+ public:\n+  explicit SimpleArena(int32_t chunk_size = 4096);\n+\n+  // Allocate buffer of requested size.\n+  uint8_t* Allocate(int32_t size);\n+\n+  // Reset arena state.\n+  void Reset();\n+\n+  // total bytes allocated from system.\n+  int32_t total_bytes() { return total_bytes_; }\n+\n+  // total bytes available for allocations.\n+  int32_t avail_bytes() { return avail_bytes_; }\n+\n+ private:\n+  // Allocate new chunk.\n+  void AllocateChunk(int size);\n \n Review comment:\n   You should either use `int32_t` or `int64_t` (I'm not sure why you're defaulting on `int32_t`, by the way).\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-29T10:18:13.118+0000",
                    "updated": "2018-10-29T10:18:13.118+0000",
                    "started": "2018-10-29T10:18:13.118+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "159920",
                    "issueId": "13191537"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191537/worklog/159921",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2843: ARROW-3519: [Gandiva] Arena for varlen output fns\nURL: https://github.com/apache/arrow/pull/2843#discussion_r228865286\n \n \n\n ##########\n File path: cpp/src/gandiva/context_helper.cc\n ##########\n @@ -50,4 +64,16 @@ void gdv_fn_context_set_error_msg(int64_t context_ptr, char const* err_msg) {\n       reinterpret_cast<gandiva::ExecutionContext*>(context_ptr);\n   (execution_context_ptr)->set_error_msg(err_msg);\n }\n+\n+uint8_t* gdv_fn_context_arena_malloc(int64_t context_ptr, int32_t size) {\n+  gandiva::ExecutionContext* execution_context_ptr =\n \n Review comment:\n   By the way, you can write:\r\n   ```cpp\r\n   auto execution_ptr = reinterpret_cast<gandiva::ExecutionContext*>(context_ptr);\r\n   ```\r\n   \r\n   (a bit less typing involved :-))\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-29T10:18:13.128+0000",
                    "updated": "2018-10-29T10:18:13.128+0000",
                    "started": "2018-10-29T10:18:13.127+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "159921",
                    "issueId": "13191537"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191537/worklog/159922",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2843: ARROW-3519: [Gandiva] Arena for varlen output fns\nURL: https://github.com/apache/arrow/pull/2843#discussion_r228863616\n \n \n\n ##########\n File path: cpp/src/gandiva/simple_arena_test.cc\n ##########\n @@ -0,0 +1,105 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"gandiva/simple_arena.h\"\n+\n+#include <gtest/gtest.h>\n+\n+namespace gandiva {\n+\n+class TestSimpleArena : public ::testing::Test {};\n+\n+TEST_F(TestSimpleArena, TestAlloc) {\n+  int32_t chunk_size = 4096;\n+  SimpleArena arena(chunk_size);\n+\n+  // Small allocations should come from the same chunk.\n+  int small_size = 100;\n \n Review comment:\n   `int32_t`, probably\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-29T10:18:13.130+0000",
                    "updated": "2018-10-29T10:18:13.130+0000",
                    "started": "2018-10-29T10:18:13.130+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "159922",
                    "issueId": "13191537"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191537/worklog/159923",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2843: ARROW-3519: [Gandiva] Arena for varlen output fns\nURL: https://github.com/apache/arrow/pull/2843#discussion_r228863993\n \n \n\n ##########\n File path: cpp/src/gandiva/simple_arena_test.cc\n ##########\n @@ -0,0 +1,105 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"gandiva/simple_arena.h\"\n+\n+#include <gtest/gtest.h>\n+\n+namespace gandiva {\n+\n+class TestSimpleArena : public ::testing::Test {};\n+\n+TEST_F(TestSimpleArena, TestAlloc) {\n+  int32_t chunk_size = 4096;\n+  SimpleArena arena(chunk_size);\n+\n+  // Small allocations should come from the same chunk.\n+  int small_size = 100;\n+  for (int i = 0; i < 20; ++i) {\n+    auto p = arena.Allocate(small_size);\n+    EXPECT_NE(p, nullptr);\n+\n+    EXPECT_EQ(arena.total_bytes(), chunk_size);\n+    EXPECT_EQ(arena.avail_bytes(), chunk_size - (i + 1) * small_size);\n+  }\n+\n+  // large allocations require separate chunks\n+  int32_t large_size = 100 * chunk_size;\n+  auto p = arena.Allocate(large_size);\n+  EXPECT_NE(p, nullptr);\n+  EXPECT_EQ(arena.total_bytes(), chunk_size + large_size);\n+  EXPECT_EQ(arena.avail_bytes(), 0);\n+}\n+\n+// small followed by big, then reset\n+TEST_F(TestSimpleArena, TestReset1) {\n+  int32_t chunk_size = 4096;\n+  SimpleArena arena(chunk_size);\n+\n+  int small_size = 100;\n+  auto p = arena.Allocate(small_size);\n+  EXPECT_NE(p, nullptr);\n+\n+  int32_t large_size = 100 * chunk_size;\n+  p = arena.Allocate(large_size);\n+  EXPECT_NE(p, nullptr);\n+\n+  EXPECT_EQ(arena.total_bytes(), chunk_size + large_size);\n+  EXPECT_EQ(arena.avail_bytes(), 0);\n+  arena.Reset();\n+  EXPECT_EQ(arena.total_bytes(), chunk_size);\n+  EXPECT_EQ(arena.avail_bytes(), chunk_size);\n+\n+  // should re-use buffer after reset.\n+  p = arena.Allocate(small_size);\n+  EXPECT_NE(p, nullptr);\n+  EXPECT_EQ(arena.total_bytes(), chunk_size);\n+  EXPECT_EQ(arena.avail_bytes(), chunk_size - small_size);\n+}\n+\n+// big followed by small, then reset\n+TEST_F(TestSimpleArena, TestReset2) {\n+  int32_t chunk_size = 4096;\n+  SimpleArena arena(chunk_size);\n+\n+  int32_t large_size = 100 * chunk_size;\n+  auto p = arena.Allocate(large_size);\n+  EXPECT_NE(p, nullptr);\n+\n+  int small_size = 100;\n+  p = arena.Allocate(small_size);\n+  EXPECT_NE(p, nullptr);\n+\n+  EXPECT_EQ(arena.total_bytes(), chunk_size + large_size);\n+  EXPECT_EQ(arena.avail_bytes(), chunk_size - small_size);\n+  arena.Reset();\n+  EXPECT_EQ(arena.total_bytes(), large_size);\n+  EXPECT_EQ(arena.avail_bytes(), large_size);\n+\n+  // should re-use buffer after reset.\n+  p = arena.Allocate(small_size);\n+  EXPECT_NE(p, nullptr);\n+  EXPECT_EQ(arena.total_bytes(), large_size);\n+  EXPECT_EQ(arena.avail_bytes(), large_size - small_size);\n+}\n+\n+int main(int argc, char** argv) {\n \n Review comment:\n   Hmm... I don't think you need to declare this explicitly?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-29T10:18:13.144+0000",
                    "updated": "2018-10-29T10:18:13.144+0000",
                    "started": "2018-10-29T10:18:13.144+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "159923",
                    "issueId": "13191537"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191537/worklog/159924",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2843: ARROW-3519: [Gandiva] Arena for varlen output fns\nURL: https://github.com/apache/arrow/pull/2843#discussion_r228864941\n \n \n\n ##########\n File path: cpp/src/gandiva/precompiled/string_ops.cc\n ##########\n @@ -140,4 +140,22 @@ UTF8_LENGTH(char_length, utf8)\n UTF8_LENGTH(length, utf8)\n UTF8_LENGTH(lengthUtf8, binary)\n \n+// Convert a utf8 sequence to upper case.\n+FORCE_INLINE\n+char* upper_utf8(int64 context, const char* data, int32 data_len, int32_t* out_len) {\n \n Review comment:\n   I suppose you know that, but the implementation is obviously wrong when it comes to non-ASCII characters. For example in Python:\r\n   ```\r\n   >>> \"\u00e9\".upper()\r\n   '\u00c9'\r\n   ```\r\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-29T10:18:13.145+0000",
                    "updated": "2018-10-29T10:18:13.145+0000",
                    "started": "2018-10-29T10:18:13.144+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "159924",
                    "issueId": "13191537"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191537/worklog/159925",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on a change in pull request #2843: ARROW-3519: [Gandiva] Arena for varlen output fns\nURL: https://github.com/apache/arrow/pull/2843#discussion_r228868385\n \n \n\n ##########\n File path: cpp/src/gandiva/simple_arena.h\n ##########\n @@ -0,0 +1,127 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#ifndef GANDIVA_SIMPLE_ARENA_H\n+#define GANDIVA_SIMPLE_ARENA_H\n+\n+#include <memory>\n+#include <utility>\n+#include <vector>\n+\n+namespace gandiva {\n+\n+#ifdef GDV_HELPERS\n \n Review comment:\n   yeah, rebased from an old change. will remove.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-29T10:23:12.938+0000",
                    "updated": "2018-10-29T10:23:12.938+0000",
                    "started": "2018-10-29T10:23:12.937+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "159925",
                    "issueId": "13191537"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191537/worklog/159927",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on a change in pull request #2843: ARROW-3519: [Gandiva] Arena for varlen output fns\nURL: https://github.com/apache/arrow/pull/2843#discussion_r228868937\n \n \n\n ##########\n File path: cpp/src/gandiva/simple_arena.h\n ##########\n @@ -0,0 +1,127 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#ifndef GANDIVA_SIMPLE_ARENA_H\n+#define GANDIVA_SIMPLE_ARENA_H\n+\n+#include <memory>\n+#include <utility>\n+#include <vector>\n+\n+namespace gandiva {\n+\n+#ifdef GDV_HELPERS\n+namespace helpers {\n+#endif\n+\n+/// \\brief Simple arena allocator.\n+///\n+/// Memory is allocated from system in units of chunk-size, and dished out in the\n+/// requested sizes. If the requested size > chunk-size, allocate directly from the\n+/// system.\n+///\n+/// The allocated memory gets released only when the arena is destroyed, or on\n+/// Reset.\n+///\n+/// This code is not multi-thread safe, and avoids all locking for efficiency.\n+///\n+class SimpleArena {\n+ public:\n+  explicit SimpleArena(int32_t chunk_size = 4096);\n+\n+  // Allocate buffer of requested size.\n+  uint8_t* Allocate(int32_t size);\n+\n+  // Reset arena state.\n+  void Reset();\n+\n+  // total bytes allocated from system.\n+  int32_t total_bytes() { return total_bytes_; }\n+\n+  // total bytes available for allocations.\n+  int32_t avail_bytes() { return avail_bytes_; }\n+\n+ private:\n+  // Allocate new chunk.\n+  void AllocateChunk(int size);\n+\n+  // The chunk-size used for allocations from system.\n+  int32_t chunk_size_;\n+\n+  // The size of the first chunk.\n+  int32_t first_chunk_size_;\n+\n+  // Total bytes allocated from system.\n+  int32_t total_bytes_;\n+\n+  // Bytes available from allocated chunk.\n+  int32_t avail_bytes_;\n+\n+  // buffer from current chunk.\n+  uint8_t* avail_buf_;\n+\n+  // List of alloced chunks.\n+  std::vector<std::unique_ptr<uint8_t>> chunks_;\n+};\n+\n+inline SimpleArena::SimpleArena(int32_t chunk_size)\n+    : chunk_size_(chunk_size),\n+      first_chunk_size_(0),\n+      total_bytes_(0),\n+      avail_bytes_(0),\n+      avail_buf_(NULL) {}\n+\n+inline uint8_t* SimpleArena::Allocate(int32_t size) {\n+  if (avail_bytes_ < size) {\n+    AllocateChunk(size <= chunk_size_ ? chunk_size_ : size);\n+  }\n+\n+  uint8_t* ret = avail_buf_;\n+  avail_buf_ += size;\n+  avail_bytes_ -= size;\n+  return ret;\n+}\n+\n+inline void SimpleArena::AllocateChunk(int size) {\n+  std::unique_ptr<uint8_t> chunk(new uint8_t[size]);\n \n Review comment:\n   ok - I'll try and use jemalloc.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-29T10:24:59.437+0000",
                    "updated": "2018-10-29T10:24:59.437+0000",
                    "started": "2018-10-29T10:24:59.436+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "159927",
                    "issueId": "13191537"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191537/worklog/159928",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on a change in pull request #2843: ARROW-3519: [Gandiva] Arena for varlen output fns\nURL: https://github.com/apache/arrow/pull/2843#discussion_r228869203\n \n \n\n ##########\n File path: cpp/src/gandiva/simple_arena.h\n ##########\n @@ -0,0 +1,127 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#ifndef GANDIVA_SIMPLE_ARENA_H\n+#define GANDIVA_SIMPLE_ARENA_H\n+\n+#include <memory>\n+#include <utility>\n+#include <vector>\n+\n+namespace gandiva {\n+\n+#ifdef GDV_HELPERS\n+namespace helpers {\n+#endif\n+\n+/// \\brief Simple arena allocator.\n+///\n+/// Memory is allocated from system in units of chunk-size, and dished out in the\n+/// requested sizes. If the requested size > chunk-size, allocate directly from the\n+/// system.\n+///\n+/// The allocated memory gets released only when the arena is destroyed, or on\n+/// Reset.\n+///\n+/// This code is not multi-thread safe, and avoids all locking for efficiency.\n+///\n+class SimpleArena {\n+ public:\n+  explicit SimpleArena(int32_t chunk_size = 4096);\n+\n+  // Allocate buffer of requested size.\n+  uint8_t* Allocate(int32_t size);\n+\n+  // Reset arena state.\n+  void Reset();\n+\n+  // total bytes allocated from system.\n+  int32_t total_bytes() { return total_bytes_; }\n+\n+  // total bytes available for allocations.\n+  int32_t avail_bytes() { return avail_bytes_; }\n+\n+ private:\n+  // Allocate new chunk.\n+  void AllocateChunk(int size);\n \n Review comment:\n   will switch to int64_t.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-29T10:25:45.168+0000",
                    "updated": "2018-10-29T10:25:45.168+0000",
                    "started": "2018-10-29T10:25:45.165+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "159928",
                    "issueId": "13191537"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191537/worklog/159929",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on a change in pull request #2843: ARROW-3519: [Gandiva] Arena for varlen output fns\nURL: https://github.com/apache/arrow/pull/2843#discussion_r228869288\n \n \n\n ##########\n File path: cpp/src/gandiva/simple_arena.h\n ##########\n @@ -0,0 +1,127 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#ifndef GANDIVA_SIMPLE_ARENA_H\n+#define GANDIVA_SIMPLE_ARENA_H\n+\n+#include <memory>\n+#include <utility>\n+#include <vector>\n+\n+namespace gandiva {\n+\n+#ifdef GDV_HELPERS\n+namespace helpers {\n+#endif\n+\n+/// \\brief Simple arena allocator.\n+///\n+/// Memory is allocated from system in units of chunk-size, and dished out in the\n+/// requested sizes. If the requested size > chunk-size, allocate directly from the\n+/// system.\n+///\n+/// The allocated memory gets released only when the arena is destroyed, or on\n+/// Reset.\n+///\n+/// This code is not multi-thread safe, and avoids all locking for efficiency.\n+///\n+class SimpleArena {\n+ public:\n+  explicit SimpleArena(int32_t chunk_size = 4096);\n+\n+  // Allocate buffer of requested size.\n+  uint8_t* Allocate(int32_t size);\n+\n+  // Reset arena state.\n+  void Reset();\n+\n+  // total bytes allocated from system.\n+  int32_t total_bytes() { return total_bytes_; }\n+\n+  // total bytes available for allocations.\n+  int32_t avail_bytes() { return avail_bytes_; }\n+\n+ private:\n+  // Allocate new chunk.\n+  void AllocateChunk(int size);\n+\n+  // The chunk-size used for allocations from system.\n+  int32_t chunk_size_;\n+\n+  // The size of the first chunk.\n+  int32_t first_chunk_size_;\n+\n+  // Total bytes allocated from system.\n+  int32_t total_bytes_;\n+\n+  // Bytes available from allocated chunk.\n+  int32_t avail_bytes_;\n+\n+  // buffer from current chunk.\n+  uint8_t* avail_buf_;\n+\n+  // List of alloced chunks.\n+  std::vector<std::unique_ptr<uint8_t>> chunks_;\n+};\n+\n+inline SimpleArena::SimpleArena(int32_t chunk_size)\n+    : chunk_size_(chunk_size),\n+      first_chunk_size_(0),\n+      total_bytes_(0),\n+      avail_bytes_(0),\n+      avail_buf_(NULL) {}\n+\n+inline uint8_t* SimpleArena::Allocate(int32_t size) {\n+  if (avail_bytes_ < size) {\n+    AllocateChunk(size <= chunk_size_ ? chunk_size_ : size);\n \n Review comment:\n   will fix.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-29T10:25:55.629+0000",
                    "updated": "2018-10-29T10:25:55.629+0000",
                    "started": "2018-10-29T10:25:55.628+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "159929",
                    "issueId": "13191537"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191537/worklog/159930",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2843: ARROW-3519: [Gandiva] Arena for varlen output fns\nURL: https://github.com/apache/arrow/pull/2843#discussion_r228869479\n \n \n\n ##########\n File path: cpp/src/gandiva/simple_arena.h\n ##########\n @@ -0,0 +1,127 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#ifndef GANDIVA_SIMPLE_ARENA_H\n+#define GANDIVA_SIMPLE_ARENA_H\n+\n+#include <memory>\n+#include <utility>\n+#include <vector>\n+\n+namespace gandiva {\n+\n+#ifdef GDV_HELPERS\n+namespace helpers {\n+#endif\n+\n+/// \\brief Simple arena allocator.\n+///\n+/// Memory is allocated from system in units of chunk-size, and dished out in the\n+/// requested sizes. If the requested size > chunk-size, allocate directly from the\n+/// system.\n+///\n+/// The allocated memory gets released only when the arena is destroyed, or on\n+/// Reset.\n+///\n+/// This code is not multi-thread safe, and avoids all locking for efficiency.\n+///\n+class SimpleArena {\n+ public:\n+  explicit SimpleArena(int32_t chunk_size = 4096);\n+\n+  // Allocate buffer of requested size.\n+  uint8_t* Allocate(int32_t size);\n+\n+  // Reset arena state.\n+  void Reset();\n+\n+  // total bytes allocated from system.\n+  int32_t total_bytes() { return total_bytes_; }\n+\n+  // total bytes available for allocations.\n+  int32_t avail_bytes() { return avail_bytes_; }\n+\n+ private:\n+  // Allocate new chunk.\n+  void AllocateChunk(int size);\n+\n+  // The chunk-size used for allocations from system.\n+  int32_t chunk_size_;\n+\n+  // The size of the first chunk.\n+  int32_t first_chunk_size_;\n+\n+  // Total bytes allocated from system.\n+  int32_t total_bytes_;\n+\n+  // Bytes available from allocated chunk.\n+  int32_t avail_bytes_;\n+\n+  // buffer from current chunk.\n+  uint8_t* avail_buf_;\n+\n+  // List of alloced chunks.\n+  std::vector<std::unique_ptr<uint8_t>> chunks_;\n+};\n+\n+inline SimpleArena::SimpleArena(int32_t chunk_size)\n+    : chunk_size_(chunk_size),\n+      first_chunk_size_(0),\n+      total_bytes_(0),\n+      avail_bytes_(0),\n+      avail_buf_(NULL) {}\n+\n+inline uint8_t* SimpleArena::Allocate(int32_t size) {\n+  if (avail_bytes_ < size) {\n+    AllocateChunk(size <= chunk_size_ ? chunk_size_ : size);\n+  }\n+\n+  uint8_t* ret = avail_buf_;\n+  avail_buf_ += size;\n+  avail_bytes_ -= size;\n+  return ret;\n+}\n+\n+inline void SimpleArena::AllocateChunk(int size) {\n+  std::unique_ptr<uint8_t> chunk(new uint8_t[size]);\n \n Review comment:\n   Sorry. My suggestion was to take a `MemoryPool*` as parameter and use that instead :-)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-29T10:26:28.079+0000",
                    "updated": "2018-10-29T10:26:28.079+0000",
                    "started": "2018-10-29T10:26:28.076+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "159930",
                    "issueId": "13191537"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191537/worklog/159933",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on a change in pull request #2843: ARROW-3519: [Gandiva] Arena for varlen output fns\nURL: https://github.com/apache/arrow/pull/2843#discussion_r228870578\n \n \n\n ##########\n File path: cpp/src/gandiva/simple_arena.h\n ##########\n @@ -0,0 +1,127 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#ifndef GANDIVA_SIMPLE_ARENA_H\n+#define GANDIVA_SIMPLE_ARENA_H\n+\n+#include <memory>\n+#include <utility>\n+#include <vector>\n+\n+namespace gandiva {\n+\n+#ifdef GDV_HELPERS\n+namespace helpers {\n+#endif\n+\n+/// \\brief Simple arena allocator.\n+///\n+/// Memory is allocated from system in units of chunk-size, and dished out in the\n+/// requested sizes. If the requested size > chunk-size, allocate directly from the\n+/// system.\n+///\n+/// The allocated memory gets released only when the arena is destroyed, or on\n+/// Reset.\n+///\n+/// This code is not multi-thread safe, and avoids all locking for efficiency.\n+///\n+class SimpleArena {\n+ public:\n+  explicit SimpleArena(int32_t chunk_size = 4096);\n+\n+  // Allocate buffer of requested size.\n+  uint8_t* Allocate(int32_t size);\n+\n+  // Reset arena state.\n+  void Reset();\n+\n+  // total bytes allocated from system.\n+  int32_t total_bytes() { return total_bytes_; }\n+\n+  // total bytes available for allocations.\n+  int32_t avail_bytes() { return avail_bytes_; }\n+\n+ private:\n+  // Allocate new chunk.\n+  void AllocateChunk(int size);\n+\n+  // The chunk-size used for allocations from system.\n+  int32_t chunk_size_;\n+\n+  // The size of the first chunk.\n+  int32_t first_chunk_size_;\n+\n+  // Total bytes allocated from system.\n+  int32_t total_bytes_;\n+\n+  // Bytes available from allocated chunk.\n+  int32_t avail_bytes_;\n+\n+  // buffer from current chunk.\n+  uint8_t* avail_buf_;\n+\n+  // List of alloced chunks.\n+  std::vector<std::unique_ptr<uint8_t>> chunks_;\n+};\n+\n+inline SimpleArena::SimpleArena(int32_t chunk_size)\n+    : chunk_size_(chunk_size),\n+      first_chunk_size_(0),\n+      total_bytes_(0),\n+      avail_bytes_(0),\n+      avail_buf_(NULL) {}\n+\n+inline uint8_t* SimpleArena::Allocate(int32_t size) {\n+  if (avail_bytes_ < size) {\n+    AllocateChunk(size <= chunk_size_ ? chunk_size_ : size);\n+  }\n+\n+  uint8_t* ret = avail_buf_;\n+  avail_buf_ += size;\n+  avail_bytes_ -= size;\n+  return ret;\n+}\n+\n+inline void SimpleArena::AllocateChunk(int size) {\n+  std::unique_ptr<uint8_t> chunk(new uint8_t[size]);\n+  avail_buf_ = chunk.get();\n+  avail_bytes_ = size;  // left-over bytes in the previous chunk cannot be used anymore.\n+  if (total_bytes_ == 0) {\n+    first_chunk_size_ = size;\n+  }\n+  total_bytes_ += size;\n+\n+  chunks_.push_back(std::move(chunk));\n+}\n+\n+inline void SimpleArena::Reset() {\n+  // Release all but the first chunk.\n \n Review comment:\n   In the most common case, we'll allocate a chunk when processing the first record. And, we can use the same chunk for the remaining records in the batch.\r\n   \r\n   eg. if we have a batch size of 4K, we'll have 1 malloc instead of 4k mallocs.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-29T10:29:52.886+0000",
                    "updated": "2018-10-29T10:29:52.886+0000",
                    "started": "2018-10-29T10:29:52.885+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "159933",
                    "issueId": "13191537"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191537/worklog/159934",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on a change in pull request #2843: ARROW-3519: [Gandiva] Arena for varlen output fns\nURL: https://github.com/apache/arrow/pull/2843#discussion_r228870758\n \n \n\n ##########\n File path: cpp/src/gandiva/simple_arena_test.cc\n ##########\n @@ -0,0 +1,105 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"gandiva/simple_arena.h\"\n+\n+#include <gtest/gtest.h>\n+\n+namespace gandiva {\n+\n+class TestSimpleArena : public ::testing::Test {};\n+\n+TEST_F(TestSimpleArena, TestAlloc) {\n+  int32_t chunk_size = 4096;\n+  SimpleArena arena(chunk_size);\n+\n+  // Small allocations should come from the same chunk.\n+  int small_size = 100;\n \n Review comment:\n   will fix\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-29T10:30:27.832+0000",
                    "updated": "2018-10-29T10:30:27.832+0000",
                    "started": "2018-10-29T10:30:27.831+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "159934",
                    "issueId": "13191537"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191537/worklog/159937",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "praveenbingo commented on a change in pull request #2843: ARROW-3519: [Gandiva] Arena for varlen output fns\nURL: https://github.com/apache/arrow/pull/2843#discussion_r228866011\n \n \n\n ##########\n File path: cpp/src/gandiva/precompiled/string_ops.cc\n ##########\n @@ -140,4 +140,22 @@ UTF8_LENGTH(char_length, utf8)\n UTF8_LENGTH(length, utf8)\n UTF8_LENGTH(lengthUtf8, binary)\n \n+// Convert a utf8 sequence to upper case.\n+FORCE_INLINE\n+char* upper_utf8(int64 context, const char* data, int32 data_len, int32_t* out_len) {\n+  char* ret = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(context, data_len));\n+  for (int32 i = 0; i < data_len; ++i) {\n+    char cur = data[i];\n+\n+    // 'A- - 'Z' : 0x41 - 0x5a\n+    // 'a' - 'z' : 0x61 - 0x7a\n+    if (cur >= 0x61 && cur <= 0x7a) {\n \n Review comment:\n   can we assume english only?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-29T10:33:03.796+0000",
                    "updated": "2018-10-29T10:33:03.796+0000",
                    "started": "2018-10-29T10:33:03.796+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "159937",
                    "issueId": "13191537"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/3",
            "id": "3",
            "description": "A task that needs to be done.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21148&avatarType=issuetype",
            "name": "Task",
            "subtask": false,
            "avatarId": 21148
        },
        "timespent": 21000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@55fc3062[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@64f81e1[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6100ec89[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@1bba39c1[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@337b671[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@bbf0fcc[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6d3dde96[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@278396c1[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@19b9387e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@6a0b95ea[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@69413f53[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@52cf8924[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 21000,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Oct 30 12:44:02 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-10-30T12:44:02.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3519/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-10-15T09:23:38.000+0000",
        "updated": "2018-10-30T12:44:16.000+0000",
        "timeoriginalestimate": null,
        "description": "This is a pre-requisite for ARROW-3459.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "5h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 21000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Gandiva] Add support for functions that can return variable len output",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13191537/comment/16668647",
                    "id": "16668647",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 2843\n[https://github.com/apache/arrow/pull/2843]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2018-10-30T12:44:02.487+0000",
                    "updated": "2018-10-30T12:44:02.487+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|i3z6tj:",
        "customfield_12314139": null
    }
}