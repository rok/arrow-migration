{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13328339",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13328339",
    "key": "ARROW-10042",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12348823",
                "id": "12348823",
                "description": "",
                "name": "3.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-01-25"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12348647",
                "id": "12348647",
                "name": "1.0.1",
                "archived": false,
                "released": true,
                "releaseDate": "2020-08-21"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=carols10cents",
            "name": "carols10cents",
            "key": "carols10cents",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=carols10cents&avatarId=44235",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=carols10cents&avatarId=44235",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=carols10cents&avatarId=44235",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=carols10cents&avatarId=44235"
            },
            "displayName": "Carol Nichols",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
            "name": "jorgecarleitao",
            "key": "jorgecarleitao",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
            },
            "displayName": "Jorge Leit\u00e3o",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
            "name": "jorgecarleitao",
            "key": "jorgecarleitao",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
            },
            "displayName": "Jorge Leit\u00e3o",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 16800,
            "total": 16800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 16800,
            "total": 16800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-10042/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 28,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13328339/worklog/507660",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "carols10cents opened a new pull request #8590:\nURL: https://github.com/apache/arrow/pull/8590\n\n\n   And disregard differences in capacity.\r\n   \r\n   This gets 2 ignored Parquet -> Arrow roundtrip tests to pass because they were only failing due to differences in `BufferData` capacities.\r\n   \r\n   I noticed that `MutableBuffer`'s `PartialEq` also checks `capacity`, and I think that's still correct: two `MutableBuffer`s who differ only in `capacity` could have different behavior if you try to add the same data to each of them and one doesn't have sufficient capacity.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-04T15:39:47.701+0000",
                    "updated": "2020-11-04T15:39:47.701+0000",
                    "started": "2020-11-04T15:39:47.701+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "507660",
                    "issueId": "13328339"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13328339/worklog/507665",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #8590:\nURL: https://github.com/apache/arrow/pull/8590#issuecomment-721810399\n\n\n   https://issues.apache.org/jira/browse/ARROW-10042\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-04T15:46:44.088+0000",
                    "updated": "2020-11-04T15:46:44.088+0000",
                    "started": "2020-11-04T15:46:44.088+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "507665",
                    "issueId": "13328339"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13328339/worklog/507669",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on pull request #8590:\nURL: https://github.com/apache/arrow/pull/8590#issuecomment-721818365\n\n\n   Could you describe where do we need to compare buffers?\r\n   \r\n   I am asking because I have worked on this problem before, and in my last iteration of this, I abandoned the idea of comparing buffers: a `Buffer` is purely a physical representation of data without any logical interpretation: two buffers from two different arrays can be equal and the arrays still be different (e.g. due to the nullability), and the opposite is also true: two arrays can be equal but have different buffers (e.g. if the child data is different, or if the datatype is different).\r\n   \r\n   IMO the equality should be done via `ArrayData`, which contains all the relevant data _and_ logical representation of that data -- `DataType`, to make it possible to logically compare two arrays. I fielded #8541 with that idea, which IMO will also help the parquet work. I think that @nevi-me also had some ideas in mind.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-04T16:00:40.831+0000",
                    "updated": "2020-11-04T16:00:40.831+0000",
                    "started": "2020-11-04T16:00:40.831+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "507669",
                    "issueId": "13328339"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13328339/worklog/507673",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao edited a comment on pull request #8590:\nURL: https://github.com/apache/arrow/pull/8590#issuecomment-721818365\n\n\n   Could you describe where do we need to compare buffers?\r\n   \r\n   I am asking because I have worked on this problem before, and in my last iteration of this, I abandoned the idea of comparing buffers: a `Buffer` is purely a physical representation of data without any logical interpretation: two buffers from two different arrays can be equal and the arrays still be different (e.g. due to the nullability or offset), and the opposite is also true: two arrays can be equal but have different buffers (e.g. if the child data is different, or if the datatype is different).\r\n   \r\n   My current hypothesis is that equality should be done via `ArrayData`, which contains all the relevant data _and_ logical representation of that data -- `DataType`, to make it possible to logically compare two arrays. I fielded #8541 with that idea, which IMO will also help the parquet work. I think that @nevi-me also had some ideas in mind.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-04T16:15:29.774+0000",
                    "updated": "2020-11-04T16:15:29.774+0000",
                    "started": "2020-11-04T16:15:29.773+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "507673",
                    "issueId": "13328339"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13328339/worklog/507705",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paddyhoran commented on pull request #8590:\nURL: https://github.com/apache/arrow/pull/8590#issuecomment-721891808\n\n\n   I can't find the reference now but this was discussed some time ago on a PR.  The thinking for taking `capacity` into account when comparing `Buffer`'s was that array equality, etc. would be done at a higher level as @jorgecarleitao described.  I think that @sunchao, in particular, favored taking `capacity` into account when comparing `Buffer`'s.  i.e. this is a more low-level equality check.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-04T18:13:28.198+0000",
                    "updated": "2020-11-04T18:13:28.198+0000",
                    "started": "2020-11-04T18:13:28.198+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "507705",
                    "issueId": "13328339"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13328339/worklog/507707",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paddyhoran commented on pull request #8590:\nURL: https://github.com/apache/arrow/pull/8590#issuecomment-721893832\n\n\n   Here is the PR: #4331\r\n   \r\n   See the comment about half way down (I'm can't seem to link to it directly)\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-04T18:17:28.752+0000",
                    "updated": "2020-11-04T18:17:28.752+0000",
                    "started": "2020-11-04T18:17:28.752+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "507707",
                    "issueId": "13328339"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13328339/worklog/507721",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "carols10cents commented on pull request #8590:\nURL: https://github.com/apache/arrow/pull/8590#issuecomment-721903270\n\n\n   If I remove the `impl PartialEq for BufferData` entirely, compiling then complains that the `#[derive(PartialEq)]` on `Buffer` can't work. If I remove the derived `PartialEq` on `Buffer`, I then get compilation errors in places such as:\r\n   \r\n   - https://github.com/apache/arrow/blob/913cd7612aebd235eaa35bf8b344448e281b2cbe/rust/arrow/src/array/data.rs#L264 the new-ish `compare_buffer_regions` function that I think is relevant to [this discussion](https://github.com/apache/arrow/pull/8541/files#r516989210)\r\n   - https://github.com/apache/arrow/blob/5355f7cbc031b2dd4dcdf55aa15cb5c0ef80bea4/rust/arrow/src/array/array.rs#L2429 and a bunch of other tests in that file\r\n   - https://github.com/apache/arrow/blob/913cd7612aebd235eaa35bf8b344448e281b2cbe/rust/arrow/src/array/builder.rs#L2705 and a bunch of other tests in that file\r\n   - https://github.com/apache/arrow/blob/913cd7612aebd235eaa35bf8b344448e281b2cbe/rust/arrow/src/array/union.rs#L656-L659 and a bunch of other tests in that file \r\n   - A bunch of tests in arrow/src/buffer.rs of course\r\n   - https://github.com/apache/arrow/blob/913cd7612aebd235eaa35bf8b344448e281b2cbe/rust/arrow/src/compute/kernels/cast.rs#L1365-L1368\r\n   - https://github.com/apache/arrow/blob/913cd7612aebd235eaa35bf8b344448e281b2cbe/rust/arrow/src/compute/kernels/filter.rs#L1117-L1120 and a bunch of other tests in that file\r\n   - https://github.com/apache/arrow/blob/913cd7612aebd235eaa35bf8b344448e281b2cbe/rust/arrow/src/compute/util.rs#L241-L244 and a bunch of other tests in that file\r\n   \r\n   I'm not sure enough of those cases whether they do expect the `capacity` to be equal and mean this `PartialEq` should stay as-is, or if these cases are being tested at too low a level and should be checking `ArrayData` instead... please let me know what you all think!\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-04T18:37:02.832+0000",
                    "updated": "2020-11-04T18:37:02.832+0000",
                    "started": "2020-11-04T18:37:02.832+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "507721",
                    "issueId": "13328339"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13328339/worklog/507750",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on pull request #8590:\nURL: https://github.com/apache/arrow/pull/8590#issuecomment-721939420\n\n\n   @carols10cents , I do not think that we should remove `impl PartialEq for BufferData`. I am only trying to understand why would we would like to compare two `Buffer` and not take the `ArrayData::offset` into account in the equality. Without the offset, comparing buffers is basically comparing physical memory, and IMO has limited use-cases.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-04T19:49:22.182+0000",
                    "updated": "2020-11-04T19:49:22.182+0000",
                    "started": "2020-11-04T19:49:22.182+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "507750",
                    "issueId": "13328339"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13328339/worklog/507753",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "carols10cents commented on pull request #8590:\nURL: https://github.com/apache/arrow/pull/8590#issuecomment-721941737\n\n\n   > I do not think that we should remove `impl PartialEq for BufferData`. I am only trying to understand why would we would like to compare two `Buffer` and not take the `ArrayData::offset` into account in the equality. Without the offset, comparing buffers is basically comparing physical memory, and IMO has limited use-cases.\r\n   \r\n   I was not proposing that we remove `impl PartialEq for BufferData`, I was only doing that to get the compiler to tell me about all the places we're using it.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-04T19:54:14.621+0000",
                    "updated": "2020-11-04T19:54:14.621+0000",
                    "started": "2020-11-04T19:54:14.621+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "507753",
                    "issueId": "13328339"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13328339/worklog/507813",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "carols10cents commented on pull request #8590:\nURL: https://github.com/apache/arrow/pull/8590#issuecomment-721995452\n\n\n   Additional data to consider: I'm not confident the implementations are exactly comparable, but the C++ Buffer type does not take its [`capacity`](https://github.com/apache/arrow/blob/1c223f517f30f4d577a00eae3d0dbca929b2ffac/cpp/src/arrow/buffer.h#L64) into account [in its `Equals` implementations](https://github.com/apache/arrow/blob/1c223f517f30f4d577a00eae3d0dbca929b2ffac/cpp/src/arrow/buffer.cc#L91-L101).\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-04T21:54:14.836+0000",
                    "updated": "2020-11-04T21:54:14.836+0000",
                    "started": "2020-11-04T21:54:14.836+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "507813",
                    "issueId": "13328339"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13328339/worklog/508565",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "carols10cents commented on pull request #8590:\nURL: https://github.com/apache/arrow/pull/8590#issuecomment-723248048\n\n\n   @jorgecarleitao @nevi-me @alamb I've just force pushed an alternative solution to this problem that doesn't change `BufferData`'s `PartialEq` implementation, and I've added more tests to demonstrate the problems I'm trying to solve. I would appreciate another look and to know what you think!\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-06T19:03:13.130+0000",
                    "updated": "2020-11-06T19:03:13.130+0000",
                    "started": "2020-11-06T19:03:13.130+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "508565",
                    "issueId": "13328339"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13328339/worklog/508566",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "carols10cents edited a comment on pull request #8590:\nURL: https://github.com/apache/arrow/pull/8590#issuecomment-723248048\n\n\n   @jorgecarleitao @nevi-me @alamb I've just force pushed an alternative solution to this problem that doesn't change `BufferData`'s `PartialEq` implementation, and I've added more tests to demonstrate the problems I'm trying to solve. I would appreciate another look and to know what you think!\r\n   \r\n   I've updated the PR title and description. I'm still associating this to the same JIRA ticket as I think this change will \"resolve\" the question posed in the ticket, but it no longer \"fixes\" the problem as proposed there.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-06T19:04:16.035+0000",
                    "updated": "2020-11-06T19:04:16.035+0000",
                    "started": "2020-11-06T19:04:16.035+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "508566",
                    "issueId": "13328339"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13328339/worklog/508568",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #8590:\nURL: https://github.com/apache/arrow/pull/8590#discussion_r518949715\n\n\n\n##########\nFile path: rust/arrow/src/array/data.rs\n##########\n@@ -211,57 +211,66 @@ impl ArrayData {\n \n impl PartialEq for ArrayData {\n     fn eq(&self, other: &Self) -> bool {\n-        assert_eq!(\n-            self.data_type(),\n-            other.data_type(),\n-            \"Data types not the same\"\n-        );\n-        assert_eq!(self.len(), other.len(), \"Lengths not the same\");\n-        // TODO: when adding tests for this, test that we can compare with arrays that have offsets\n-        assert_eq!(self.offset(), other.offset(), \"Offsets not the same\");\n-        assert_eq!(self.null_count(), other.null_count());\n-        // compare buffers excluding padding\n-        let self_buffers = self.buffers();\n-        let other_buffers = other.buffers();\n-        assert_eq!(self_buffers.len(), other_buffers.len());\n-        self_buffers.iter().zip(other_buffers).for_each(|(s, o)| {\n-            compare_buffer_regions(\n-                s,\n-                self.offset(), // TODO mul by data length\n-                o,\n-                other.offset(), // TODO mul by data len\n-            );\n-        });\n-        // assert_eq!(self.buffers(), other.buffers());\n-\n-        assert_eq!(self.child_data(), other.child_data());\n-        // null arrays can skip the null bitmap, thus only compare if there are no nulls\n-        if self.null_count() != 0 || other.null_count() != 0 {\n-            compare_buffer_regions(\n+        self.data_type() == other.data_type()\n+            && self.len() == other.len()\n+            // TODO: when adding tests for this, test that we can compare with arrays that have\n+            // offsets\n+            && self.offset() == other.offset()\n+            && compare_buffers(\n+                    self.buffers(),\n+                    self.offset(),\n+                    other.buffers(),\n+                    other.offset(),\n+                )\n+            && self.child_data() == other.child_data()\n+            && self.null_count() == other.null_count()\n+            // null arrays can skip the null bitmap, thus only compare if there are no nulls\n\nReview comment:\n       \ud83d\udc4d  for comments\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-06T19:11:49.479+0000",
                    "updated": "2020-11-06T19:11:49.479+0000",
                    "started": "2020-11-06T19:11:49.479+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "508568",
                    "issueId": "13328339"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13328339/worklog/508583",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "carols10cents commented on a change in pull request #8590:\nURL: https://github.com/apache/arrow/pull/8590#discussion_r518973664\n\n\n\n##########\nFile path: rust/arrow/src/array/data.rs\n##########\n@@ -211,57 +211,66 @@ impl ArrayData {\n \n impl PartialEq for ArrayData {\n     fn eq(&self, other: &Self) -> bool {\n-        assert_eq!(\n-            self.data_type(),\n-            other.data_type(),\n-            \"Data types not the same\"\n-        );\n-        assert_eq!(self.len(), other.len(), \"Lengths not the same\");\n-        // TODO: when adding tests for this, test that we can compare with arrays that have offsets\n-        assert_eq!(self.offset(), other.offset(), \"Offsets not the same\");\n-        assert_eq!(self.null_count(), other.null_count());\n-        // compare buffers excluding padding\n-        let self_buffers = self.buffers();\n-        let other_buffers = other.buffers();\n-        assert_eq!(self_buffers.len(), other_buffers.len());\n-        self_buffers.iter().zip(other_buffers).for_each(|(s, o)| {\n-            compare_buffer_regions(\n-                s,\n-                self.offset(), // TODO mul by data length\n-                o,\n-                other.offset(), // TODO mul by data len\n-            );\n-        });\n-        // assert_eq!(self.buffers(), other.buffers());\n-\n-        assert_eq!(self.child_data(), other.child_data());\n-        // null arrays can skip the null bitmap, thus only compare if there are no nulls\n-        if self.null_count() != 0 || other.null_count() != 0 {\n-            compare_buffer_regions(\n+        self.data_type() == other.data_type()\n+            && self.len() == other.len()\n+            // TODO: when adding tests for this, test that we can compare with arrays that have\n+            // offsets\n+            && self.offset() == other.offset()\n+            && compare_buffers(\n+                    self.buffers(),\n+                    self.offset(),\n+                    other.buffers(),\n+                    other.offset(),\n+                )\n+            && self.child_data() == other.child_data()\n+            && self.null_count() == other.null_count()\n+            // null arrays can skip the null bitmap, thus only compare if there are no nulls\n\nReview comment:\n       I'm pretty sure those are @nevi-me 's, I just kept them in there :)\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-06T19:59:48.185+0000",
                    "updated": "2020-11-06T19:59:48.185+0000",
                    "started": "2020-11-06T19:59:48.185+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "508583",
                    "issueId": "13328339"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13328339/worklog/508616",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jhorstmann commented on a change in pull request #8590:\nURL: https://github.com/apache/arrow/pull/8590#discussion_r519011669\n\n\n\n##########\nFile path: rust/arrow/src/array/data.rs\n##########\n@@ -211,57 +211,66 @@ impl ArrayData {\n \n impl PartialEq for ArrayData {\n     fn eq(&self, other: &Self) -> bool {\n-        assert_eq!(\n-            self.data_type(),\n-            other.data_type(),\n-            \"Data types not the same\"\n-        );\n-        assert_eq!(self.len(), other.len(), \"Lengths not the same\");\n-        // TODO: when adding tests for this, test that we can compare with arrays that have offsets\n-        assert_eq!(self.offset(), other.offset(), \"Offsets not the same\");\n-        assert_eq!(self.null_count(), other.null_count());\n-        // compare buffers excluding padding\n-        let self_buffers = self.buffers();\n-        let other_buffers = other.buffers();\n-        assert_eq!(self_buffers.len(), other_buffers.len());\n-        self_buffers.iter().zip(other_buffers).for_each(|(s, o)| {\n-            compare_buffer_regions(\n-                s,\n-                self.offset(), // TODO mul by data length\n-                o,\n-                other.offset(), // TODO mul by data len\n-            );\n-        });\n-        // assert_eq!(self.buffers(), other.buffers());\n-\n-        assert_eq!(self.child_data(), other.child_data());\n-        // null arrays can skip the null bitmap, thus only compare if there are no nulls\n-        if self.null_count() != 0 || other.null_count() != 0 {\n-            compare_buffer_regions(\n+        self.data_type() == other.data_type()\n+            && self.len() == other.len()\n+            // TODO: when adding tests for this, test that we can compare with arrays that have\n+            // offsets\n+            && self.offset() == other.offset()\n\nReview comment:\n       I think the offset does not have to be equal. Consider a buffer `[1,2,3,4,1,2,3,4]` and two arrays referencing this buffer, one with offset 0 and len 4, the other with offset 4 and len 4. Both arrays should be considered to contain the same 4 elements. This also means the `compare_buffers` function needs to take the array length as additional parameter.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-06T21:23:10.572+0000",
                    "updated": "2020-11-06T21:23:10.572+0000",
                    "started": "2020-11-06T21:23:10.572+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "508616",
                    "issueId": "13328339"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13328339/worklog/508617",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jhorstmann commented on a change in pull request #8590:\nURL: https://github.com/apache/arrow/pull/8590#discussion_r519014044\n\n\n\n##########\nFile path: rust/arrow/src/array/data.rs\n##########\n@@ -211,57 +211,66 @@ impl ArrayData {\n \n impl PartialEq for ArrayData {\n     fn eq(&self, other: &Self) -> bool {\n-        assert_eq!(\n-            self.data_type(),\n-            other.data_type(),\n-            \"Data types not the same\"\n-        );\n-        assert_eq!(self.len(), other.len(), \"Lengths not the same\");\n-        // TODO: when adding tests for this, test that we can compare with arrays that have offsets\n-        assert_eq!(self.offset(), other.offset(), \"Offsets not the same\");\n-        assert_eq!(self.null_count(), other.null_count());\n-        // compare buffers excluding padding\n-        let self_buffers = self.buffers();\n-        let other_buffers = other.buffers();\n-        assert_eq!(self_buffers.len(), other_buffers.len());\n-        self_buffers.iter().zip(other_buffers).for_each(|(s, o)| {\n-            compare_buffer_regions(\n-                s,\n-                self.offset(), // TODO mul by data length\n-                o,\n-                other.offset(), // TODO mul by data len\n-            );\n-        });\n-        // assert_eq!(self.buffers(), other.buffers());\n-\n-        assert_eq!(self.child_data(), other.child_data());\n-        // null arrays can skip the null bitmap, thus only compare if there are no nulls\n-        if self.null_count() != 0 || other.null_count() != 0 {\n-            compare_buffer_regions(\n+        self.data_type() == other.data_type()\n+            && self.len() == other.len()\n+            // TODO: when adding tests for this, test that we can compare with arrays that have\n+            // offsets\n+            && self.offset() == other.offset()\n+            && compare_buffers(\n+                    self.buffers(),\n+                    self.offset(),\n+                    other.buffers(),\n+                    other.offset(),\n+                )\n+            && self.child_data() == other.child_data()\n+            && self.null_count() == other.null_count()\n+            // null arrays can skip the null bitmap, thus only compare if there are no nulls\n+            // previous line would fail if null counts differed, so this check only needs to\n+            // check one null_count to see if there are no nulls\n+            && (self.null_count() == 0 || compare_buffer_regions(\n\nReview comment:\n       `compare_buffers_regions` also needs an additional parameter for the array length to be correct since the array could be a slice of some bigger underlying buffers.\r\n   \r\n   I missed the PR that introduced `compare_buffers_regions`, the way it is written it will only work correctly for bitpacked buffers. That is correct for this call, but I found another usage where it is used for other buffers. It uses the `buffer.bit_slice` method which is documented to take an offset in bits.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-06T21:28:39.451+0000",
                    "updated": "2020-11-06T21:28:39.451+0000",
                    "started": "2020-11-06T21:28:39.450+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "508617",
                    "issueId": "13328339"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13328339/worklog/508619",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jhorstmann commented on a change in pull request #8590:\nURL: https://github.com/apache/arrow/pull/8590#discussion_r519016891\n\n\n\n##########\nFile path: rust/arrow/src/array/data.rs\n##########\n@@ -211,57 +211,66 @@ impl ArrayData {\n \n impl PartialEq for ArrayData {\n     fn eq(&self, other: &Self) -> bool {\n-        assert_eq!(\n-            self.data_type(),\n-            other.data_type(),\n-            \"Data types not the same\"\n-        );\n-        assert_eq!(self.len(), other.len(), \"Lengths not the same\");\n-        // TODO: when adding tests for this, test that we can compare with arrays that have offsets\n-        assert_eq!(self.offset(), other.offset(), \"Offsets not the same\");\n-        assert_eq!(self.null_count(), other.null_count());\n-        // compare buffers excluding padding\n-        let self_buffers = self.buffers();\n-        let other_buffers = other.buffers();\n-        assert_eq!(self_buffers.len(), other_buffers.len());\n-        self_buffers.iter().zip(other_buffers).for_each(|(s, o)| {\n-            compare_buffer_regions(\n-                s,\n-                self.offset(), // TODO mul by data length\n-                o,\n-                other.offset(), // TODO mul by data len\n-            );\n-        });\n-        // assert_eq!(self.buffers(), other.buffers());\n-\n-        assert_eq!(self.child_data(), other.child_data());\n-        // null arrays can skip the null bitmap, thus only compare if there are no nulls\n-        if self.null_count() != 0 || other.null_count() != 0 {\n-            compare_buffer_regions(\n+        self.data_type() == other.data_type()\n+            && self.len() == other.len()\n+            // TODO: when adding tests for this, test that we can compare with arrays that have\n+            // offsets\n+            && self.offset() == other.offset()\n+            && compare_buffers(\n+                    self.buffers(),\n+                    self.offset(),\n+                    other.buffers(),\n+                    other.offset(),\n+                )\n+            && self.child_data() == other.child_data()\n+            && self.null_count() == other.null_count()\n+            // null arrays can skip the null bitmap, thus only compare if there are no nulls\n+            // previous line would fail if null counts differed, so this check only needs to\n+            // check one null_count to see if there are no nulls\n+            && (self.null_count() == 0 || compare_buffer_regions(\n\nReview comment:\n       Looking at that function again, `compare_buffers_regions` and also `PartialEq for ArrayData` do `assert_eq!` instead of returning true/false, that is probably also not intended.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-06T21:35:45.051+0000",
                    "updated": "2020-11-06T21:35:45.051+0000",
                    "started": "2020-11-06T21:35:45.051+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "508619",
                    "issueId": "13328339"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13328339/worklog/508620",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jhorstmann commented on a change in pull request #8590:\nURL: https://github.com/apache/arrow/pull/8590#discussion_r519016891\n\n\n\n##########\nFile path: rust/arrow/src/array/data.rs\n##########\n@@ -211,57 +211,66 @@ impl ArrayData {\n \n impl PartialEq for ArrayData {\n     fn eq(&self, other: &Self) -> bool {\n-        assert_eq!(\n-            self.data_type(),\n-            other.data_type(),\n-            \"Data types not the same\"\n-        );\n-        assert_eq!(self.len(), other.len(), \"Lengths not the same\");\n-        // TODO: when adding tests for this, test that we can compare with arrays that have offsets\n-        assert_eq!(self.offset(), other.offset(), \"Offsets not the same\");\n-        assert_eq!(self.null_count(), other.null_count());\n-        // compare buffers excluding padding\n-        let self_buffers = self.buffers();\n-        let other_buffers = other.buffers();\n-        assert_eq!(self_buffers.len(), other_buffers.len());\n-        self_buffers.iter().zip(other_buffers).for_each(|(s, o)| {\n-            compare_buffer_regions(\n-                s,\n-                self.offset(), // TODO mul by data length\n-                o,\n-                other.offset(), // TODO mul by data len\n-            );\n-        });\n-        // assert_eq!(self.buffers(), other.buffers());\n-\n-        assert_eq!(self.child_data(), other.child_data());\n-        // null arrays can skip the null bitmap, thus only compare if there are no nulls\n-        if self.null_count() != 0 || other.null_count() != 0 {\n-            compare_buffer_regions(\n+        self.data_type() == other.data_type()\n+            && self.len() == other.len()\n+            // TODO: when adding tests for this, test that we can compare with arrays that have\n+            // offsets\n+            && self.offset() == other.offset()\n+            && compare_buffers(\n+                    self.buffers(),\n+                    self.offset(),\n+                    other.buffers(),\n+                    other.offset(),\n+                )\n+            && self.child_data() == other.child_data()\n+            && self.null_count() == other.null_count()\n+            // null arrays can skip the null bitmap, thus only compare if there are no nulls\n+            // previous line would fail if null counts differed, so this check only needs to\n+            // check one null_count to see if there are no nulls\n+            && (self.null_count() == 0 || compare_buffer_regions(\n\nReview comment:\n       Looking at that function again, <del>`compare_buffers_regions` and also</del> `PartialEq for ArrayData` do `assert_eq!` instead of returning true/false, that is probably also not intended.\r\n   \r\n   Update: Ok, I see the return type is fixed in this PR.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-06T21:37:40.146+0000",
                    "updated": "2020-11-06T21:37:40.146+0000",
                    "started": "2020-11-06T21:37:40.146+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "508620",
                    "issueId": "13328339"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13328339/worklog/508710",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on pull request #8590:\nURL: https://github.com/apache/arrow/pull/8590#issuecomment-723399529\n\n\n   Also, I very much agree with @carols10cents that we need a methodology to compare arrays with granularity :)\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-07T06:26:45.137+0000",
                    "updated": "2020-11-07T06:26:45.137+0000",
                    "started": "2020-11-07T06:26:45.137+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "508710",
                    "issueId": "13328339"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13328339/worklog/508735",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on pull request #8590:\nURL: https://github.com/apache/arrow/pull/8590#issuecomment-723429467\n\n\n   > One idea:\r\n   > \r\n   > 1. Make the array comparison on the parquet tests be done using the `PartialEq`, like this PR is doing\r\n   > 2. Make `PartialEq` use the function `equal` being introduced on #8541\r\n   > 3. Remove both `#[ignore]`\r\n   \r\n   I also like this approach, as #8541 now accounts for logical equality\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-07T10:41:27.244+0000",
                    "updated": "2020-11-07T10:41:27.244+0000",
                    "started": "2020-11-07T10:41:27.244+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "508735",
                    "issueId": "13328339"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 16800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@566b5371[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@38454902[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@74d3c3fd[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@66cc993c[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6642f3ec[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@61508d01[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@b7676fd[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@9710bd6[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@785d4487[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1d00e608[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2579aacb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@24d73a09[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 16800,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Nov 10 22:56:35 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-11-10T22:56:35.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-10042/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-09-19T07:25:08.000+0000",
        "updated": "2020-11-10T22:56:35.000+0000",
        "timeoriginalestimate": null,
        "description": "Two (byte) buffers are equal if their contents are equal.\r\n\r\nHowever, currently,\u00a0{{BufferData}} comparison ({{PartialEq}}) uses its {{capacity}} as part of the comparison. Therefore, two slices are considered different even when their content is the same but the corresponding {{BufferData}} has a different capacity.\r\n\r\nSince this equality is used by {{Buffer}}'s equality, which is used by all our arrays, currently arrays are different when their contents are the same but the underlying capacity is different. I am not sure that this is what we want.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "4h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 16800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] Buffer equalities may be incorrect",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13328339/comment/17229557",
                    "id": "17229557",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 8590\n[https://github.com/apache/arrow/pull/8590]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-11-10T22:56:35.947+0000",
                    "updated": "2020-11-10T22:56:35.947+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0iqgo:",
        "customfield_12314139": null
    }
}