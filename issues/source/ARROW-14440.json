{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13407977",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407977",
    "key": "ARROW-14440",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350591",
                "id": "12350591",
                "description": "",
                "name": "7.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-02-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12625823",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12625823",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "inwardIssue": {
                    "id": "13410034",
                    "key": "ARROW-14585",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410034",
                    "fields": {
                        "summary": "[C++] Detect gRPC::grpc++_reflection in FindgRPCAlt",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334621",
                "id": "12334621",
                "name": "FlightRPC"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 10200,
            "total": 10200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 10200,
            "total": 10200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14440/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 17,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407977/worklog/669004",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm opened a new pull request #11524:\nURL: https://github.com/apache/arrow/pull/11524\n\n\n   This demonstrates how to register a normal gRPC service on a Flight server, allowing you to use all of gRPC's features and ecosystem while still serving Flight, all on the same port. This can be helpful for when DoAction is too limited/inconvenient an extension point and you are already using gRPC.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-22T15:39:25.652+0000",
                    "updated": "2021-10-22T15:39:25.652+0000",
                    "started": "2021-10-22T15:39:25.651+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "669004",
                    "issueId": "13407977"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407977/worklog/669005",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11524:\nURL: https://github.com/apache/arrow/pull/11524#issuecomment-949743966\n\n\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-22T15:39:42.033+0000",
                    "updated": "2021-10-22T15:39:42.033+0000",
                    "started": "2021-10-22T15:39:42.032+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "669005",
                    "issueId": "13407977"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407977/worklog/670472",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on a change in pull request #11524:\nURL: https://github.com/apache/arrow/pull/11524#discussion_r737116654\n\n\n\n##########\nFile path: cpp/examples/arrow/CMakeLists.txt\n##########\n@@ -15,30 +15,80 @@\n # specific language governing permissions and limitations\n # under the License.\n \n-ADD_ARROW_EXAMPLE(row_wise_conversion_example)\n+add_arrow_example(row_wise_conversion_example)\n \n-if (ARROW_COMPUTE)\n-  ADD_ARROW_EXAMPLE(compute_register_example)\n+if(ARROW_COMPUTE)\n+  add_arrow_example(compute_register_example)\n endif()\n \n-if (ARROW_COMPUTE AND ARROW_CSV)\n-  ADD_ARROW_EXAMPLE(compute_and_write_csv_example)\n+if(ARROW_COMPUTE AND ARROW_CSV)\n+  add_arrow_example(compute_and_write_csv_example)\n endif()\n \n-if (ARROW_PARQUET AND ARROW_DATASET)\n-  if (ARROW_BUILD_SHARED)\n+if(ARROW_FLIGHT)\n+  if(ARROW_BUILD_SHARED)\n+    set(FLIGHT_EXAMPLES_LINK_LIBS arrow_flight_shared)\n+  else()\n+    set(FLIGHT_EXAMPLES_LINK_LIBS arrow_flight_static)\n+  endif()\n+\n+  set(FLIGHT_EXAMPLE_GENERATED_PROTO_FILES\n+      \"${CMAKE_CURRENT_BINARY_DIR}/helloworld.pb.cc\"\n+      \"${CMAKE_CURRENT_BINARY_DIR}/helloworld.pb.h\"\n+      \"${CMAKE_CURRENT_BINARY_DIR}/helloworld.grpc.pb.cc\"\n+      \"${CMAKE_CURRENT_BINARY_DIR}/helloworld.grpc.pb.h\")\n+  set_source_files_properties(${FLIGHT_EXAMPLE_GENERATED_PROTO_FILES} PROPERTIES GENERATED\n+                                                                                 TRUE)\n+\n+  set(FLIGHT_EXAMPLE_PROTO \"helloworld.proto\")\n+  set(FLIGHT_EXAMPLE_PROTO_PATH \"${CMAKE_CURRENT_LIST_DIR}\")\n+  set(FLIGHT_EXAMPLE_PROTO_DEPENDS ${FLIGHT_EXAMPLE_PROTO} ${ARROW_PROTOBUF_LIBPROTOBUF}\n+                                   gRPC::grpc_cpp_plugin)\n+\n+  add_custom_command(OUTPUT ${FLIGHT_EXAMPLE_GENERATED_PROTO_FILES}\n+                     COMMAND ${ARROW_PROTOBUF_PROTOC} \"-I${FLIGHT_EXAMPLE_PROTO_PATH}\"\n+                             \"--cpp_out=${CMAKE_CURRENT_BINARY_DIR}\"\n+                             \"${FLIGHT_EXAMPLE_PROTO}\"\n+                     DEPENDS ${PROTO_EXAMPLE_PROTO_DEPENDS} ARGS\n+                     COMMAND ${ARROW_PROTOBUF_PROTOC} \"-I${FLIGHT_EXAMPLE_PROTO_PATH}\"\n+                             \"--grpc_out=${CMAKE_CURRENT_BINARY_DIR}\"\n+                             \"--plugin=protoc-gen-grpc=$<TARGET_FILE:gRPC::grpc_cpp_plugin>\"\n+                             \"${FLIGHT_EXAMPLE_PROTO}\")\n+\n+  add_custom_target(flight_grpc_example_gen ALL\n+                    DEPENDS ${FLIGHT_EXAMPLE_GENERATED_PROTO_FILES})\n+\n+  add_arrow_example(flight_grpc_example\n+                    DEPENDENCIES\n+                    flight_grpc_example_gen\n+                    # Not CMAKE_CURRENT_BINARY_DIR so we can #include\n+                    # \"examples/arrow/helloworld.pb.h\" instead of\n+                    # \"helloworld.pb.h\" (which fails lint)\n+                    EXTRA_INCLUDES\n+                    ${CMAKE_BINARY_DIR}\n+                    EXTRA_LINK_LIBS\n+                    ${FLIGHT_EXAMPLES_LINK_LIBS}\n+                    gRPC::grpc++\n+                    gRPC::grpc++_reflection\n\nReview comment:\n       Looks cmake cannot file gRPC::grpc++_reflection for *bundled* gRPC?\r\n   ```\r\n   CMake Error at cmake_modules/BuildUtils.cmake:828 (add_executable):\r\n     Target \"flight_grpc_example\" links to target \"gRPC::grpc++_reflection\" but\r\n     the target was not found.  Perhaps a find_package() call is missing for an\r\n     IMPORTED target, or an ALIAS target is missing?\r\n   Call Stack (most recent call first):\r\n     examples/arrow/CMakeLists.txt:61 (add_arrow_example)\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-27T05:27:32.413+0000",
                    "updated": "2021-10-27T05:27:32.413+0000",
                    "started": "2021-10-27T05:27:32.413+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "670472",
                    "issueId": "13407977"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407977/worklog/670474",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on a change in pull request #11524:\nURL: https://github.com/apache/arrow/pull/11524#discussion_r737122290\n\n\n\n##########\nFile path: cpp/examples/arrow/flight_grpc_example.cc\n##########\n@@ -0,0 +1,100 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements. See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership. The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License. You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied. See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include <signal.h>\n+#include <cstdlib>\n+#include <iostream>\n+\n+#include <arrow/api.h>\n+#include <arrow/flight/api.h>\n+#include <gflags/gflags.h>\n+#include <grpc++/grpc++.h>\n+\n+#include \"examples/arrow/helloworld.grpc.pb.h\"\n+#include \"examples/arrow/helloworld.pb.h\"\n+\n+// Demonstrate registering a gRPC service alongside a Flight service\n+//\n+// The gRPC service can be accessed with a gRPC client, on the same\n+// port as the Flight service. Additionally, the CMake config for this\n+// example links against the gRPC reflection library, enabling tools\n+// like grpc_cli and grpcurl to list and call RPCs on the server\n+// without needing local copies of the Protobuf definitions.\n+// For example, with grpcurl (https://github.com/fullstorydev/grpcurl):\n+//\n+// grpcurl -d '{\"name\": \"Rakka\"}' -plaintext localhost:31337 HelloWorldService/SayHello\n+\n+DEFINE_int32(port, -1, \"Server port to listen on\");\n+\n+namespace flight = ::arrow::flight;\n+\n+#define ABORT_ON_FAILURE(expr)                     \\\n+  do {                                             \\\n+    arrow::Status status_ = (expr);                \\\n+    if (!status_.ok()) {                           \\\n+      std::cerr << status_.message() << std::endl; \\\n+      abort();                                     \\\n+    }                                              \\\n+  } while (0);\n+\n+// Flight service\n+class SimpleFlightServer : public flight::FlightServerBase {};\n+\n+// gRPC service\n+class HelloWorldServiceImpl : public HelloWorldService::Service {\n+  grpc::Status SayHello(grpc::ServerContext* ctx, const HelloRequest* request,\n+                        HelloResponse* reply) override {\n+    const std::string& name = request->name();\n+    if (name.empty()) {\n+      return grpc::Status(grpc::StatusCode::INVALID_ARGUMENT, \"Must provide a name!\");\n+    }\n+    reply->set_reply(\"Hello, \" + name);\n+    return grpc::Status::OK;\n+  }\n+};\n+\n+int main(int argc, char** argv) {\n+  gflags::ParseCommandLineFlags(&argc, &argv, true);\n+\n+  if (FLAGS_port < 0) {\n+    // For CI\n+    std::cout << \"Must specify a port with -port\" << std::endl;\n+    return EXIT_SUCCESS;\n+  }\n+\n+  std::unique_ptr<flight::FlightServerBase> server;\n+  server.reset(new SimpleFlightServer());\n+\n+  flight::Location bind_location;\n+  ABORT_ON_FAILURE(flight::Location::ForGrpcTcp(\"0.0.0.0\", FLAGS_port, &bind_location));\n+  flight::FlightServerOptions options(bind_location);\n+\n+  HelloWorldServiceImpl grpc_service;\n+  int extra_port = 0;\n+\n+  options.builder_hook = [&](void* raw_builder) {\n+    auto* builder = reinterpret_cast<grpc::ServerBuilder*>(raw_builder);\n+    builder->AddListeningPort(\"0.0.0.0:0\", grpc::InsecureServerCredentials(),\n+                              &extra_port);\n+    builder->RegisterService(&grpc_service);\n+  };\n+  ABORT_ON_FAILURE(server->Init(options));\n\nReview comment:\n       I'm getting a crash from grpc: https://github.com/grpc/grpc/blob/v1.35.0/src/core/lib/iomgr/resolve_address.cc#L48\r\n   `grpc_resolve_address_impl` is nullptr.\r\n   \r\n   Please **note** I commented out grpc++_reflection in cmake and build with bundled grpc v1.35.\r\n   Build with `cmake -GNinja -DARROW_FLIGHT=ON -DCMAKE_BUILD_TYPE=Debug -DARROW_BUILD_EXAMPLES=ON ..`\r\n   \r\n   Call stack attached if useful.\r\n   ```\r\n   #0  0x0000555555844c80 in grpc_blocking_resolve_address (name=0x555555f07b28 \"0.0.0.0:0\", default_port=0x555555bf6706 \"https\", addresses=0x7fffffffd8c8)\r\n       at /home/cyb/arrow/cpp/debug/grpc_ep-prefix/src/grpc_ep/src/core/lib/iomgr/resolve_address.cc:48\r\n   #1  0x0000555555962e0a in grpc_core::<lambda()>::operator()(void) const (__closure=0x7fffffffd910) at /home/cyb/arrow/cpp/debug/grpc_ep-prefix/src/grpc_ep/src/core/ext/transport/chttp2/server/chttp2_server.cc:533\r\n   #2  0x00005555559633ed in grpc_core::Chttp2ServerAddPort (server=0x555555f02710, addr=0x555555f07b28 \"0.0.0.0:0\", args=0x555555f04a60, port_num=0x7fffffffd98c)\r\n       at /home/cyb/arrow/cpp/debug/grpc_ep-prefix/src/grpc_ep/src/core/ext/transport/chttp2/server/chttp2_server.cc:575\r\n   #3  0x000055555581b835 in grpc_server_add_insecure_http2_port (server=0x555555f026f0, addr=0x555555f07b28 \"0.0.0.0:0\")\r\n       at /home/cyb/arrow/cpp/debug/grpc_ep-prefix/src/grpc_ep/src/core/ext/transport/chttp2/server/insecure/server_chttp2.cc:35\r\n   #4  0x00005555555bd744 in grpc::(anonymous namespace)::InsecureServerCredentialsImpl::AddPortToServer (this=0x555555efe250, addr=\"0.0.0.0:0\", server=0x555555f026f0)\r\n       at /home/cyb/arrow/cpp/debug/grpc_ep-prefix/src/grpc_ep/src/cpp/server/insecure_server_credentials.cc:29\r\n   #5  0x00007ffff765815d in grpc::Server::AddListeningPort (this=0x555555f01ff0, addr=\"0.0.0.0:0\", creds=0x555555efe250) at /home/cyb/arrow/cpp/debug/grpc_ep-prefix/src/grpc_ep/src/cpp/server/server_cc.cc:1100\r\n   #6  0x00007ffff7647ee5 in grpc::ServerBuilder::BuildAndStart (this=0x7fffffffdd10) at /home/cyb/arrow/cpp/debug/grpc_ep-prefix/src/grpc_ep/src/cpp/server/server_builder.cc:399\r\n   #7  0x00007ffff760c305 in arrow::flight::FlightServerBase::Init (this=0x555555efee70, options=...) at ../src/arrow/flight/server.cc:963\r\n   #8  0x00005555555a4386 in main (argc=1, argv=0x7fffffffe308) at ../examples/arrow/flight_grpc_example.cc:95\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-27T05:41:23.407+0000",
                    "updated": "2021-10-27T05:41:23.407+0000",
                    "started": "2021-10-27T05:41:23.406+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "670474",
                    "issueId": "13407977"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407977/worklog/670479",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on a change in pull request #11524:\nURL: https://github.com/apache/arrow/pull/11524#discussion_r737122290\n\n\n\n##########\nFile path: cpp/examples/arrow/flight_grpc_example.cc\n##########\n@@ -0,0 +1,100 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements. See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership. The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License. You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied. See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include <signal.h>\n+#include <cstdlib>\n+#include <iostream>\n+\n+#include <arrow/api.h>\n+#include <arrow/flight/api.h>\n+#include <gflags/gflags.h>\n+#include <grpc++/grpc++.h>\n+\n+#include \"examples/arrow/helloworld.grpc.pb.h\"\n+#include \"examples/arrow/helloworld.pb.h\"\n+\n+// Demonstrate registering a gRPC service alongside a Flight service\n+//\n+// The gRPC service can be accessed with a gRPC client, on the same\n+// port as the Flight service. Additionally, the CMake config for this\n+// example links against the gRPC reflection library, enabling tools\n+// like grpc_cli and grpcurl to list and call RPCs on the server\n+// without needing local copies of the Protobuf definitions.\n+// For example, with grpcurl (https://github.com/fullstorydev/grpcurl):\n+//\n+// grpcurl -d '{\"name\": \"Rakka\"}' -plaintext localhost:31337 HelloWorldService/SayHello\n+\n+DEFINE_int32(port, -1, \"Server port to listen on\");\n+\n+namespace flight = ::arrow::flight;\n+\n+#define ABORT_ON_FAILURE(expr)                     \\\n+  do {                                             \\\n+    arrow::Status status_ = (expr);                \\\n+    if (!status_.ok()) {                           \\\n+      std::cerr << status_.message() << std::endl; \\\n+      abort();                                     \\\n+    }                                              \\\n+  } while (0);\n+\n+// Flight service\n+class SimpleFlightServer : public flight::FlightServerBase {};\n+\n+// gRPC service\n+class HelloWorldServiceImpl : public HelloWorldService::Service {\n+  grpc::Status SayHello(grpc::ServerContext* ctx, const HelloRequest* request,\n+                        HelloResponse* reply) override {\n+    const std::string& name = request->name();\n+    if (name.empty()) {\n+      return grpc::Status(grpc::StatusCode::INVALID_ARGUMENT, \"Must provide a name!\");\n+    }\n+    reply->set_reply(\"Hello, \" + name);\n+    return grpc::Status::OK;\n+  }\n+};\n+\n+int main(int argc, char** argv) {\n+  gflags::ParseCommandLineFlags(&argc, &argv, true);\n+\n+  if (FLAGS_port < 0) {\n+    // For CI\n+    std::cout << \"Must specify a port with -port\" << std::endl;\n+    return EXIT_SUCCESS;\n+  }\n+\n+  std::unique_ptr<flight::FlightServerBase> server;\n+  server.reset(new SimpleFlightServer());\n+\n+  flight::Location bind_location;\n+  ABORT_ON_FAILURE(flight::Location::ForGrpcTcp(\"0.0.0.0\", FLAGS_port, &bind_location));\n+  flight::FlightServerOptions options(bind_location);\n+\n+  HelloWorldServiceImpl grpc_service;\n+  int extra_port = 0;\n+\n+  options.builder_hook = [&](void* raw_builder) {\n+    auto* builder = reinterpret_cast<grpc::ServerBuilder*>(raw_builder);\n+    builder->AddListeningPort(\"0.0.0.0:0\", grpc::InsecureServerCredentials(),\n+                              &extra_port);\n+    builder->RegisterService(&grpc_service);\n+  };\n+  ABORT_ON_FAILURE(server->Init(options));\n\nReview comment:\n       I'm getting a crash from grpc: https://github.com/grpc/grpc/blob/v1.35.0/src/core/lib/iomgr/resolve_address.cc#L48\r\n   `grpc_resolve_address_impl` is nullptr.\r\n   \r\n   Please **note** I commented out grpc++_reflection in cmake and build with bundled grpc v1.35.\r\n   Build with `cmake -GNinja -DARROW_FLIGHT=ON -DCMAKE_BUILD_TYPE=Debug -DARROW_BUILD_EXAMPLES=ON ..`\r\n   Test command `debug/flight_grpc_example -port 8899`.\r\n   \r\n   Call stack attached if useful.\r\n   ```\r\n   #0  0x0000555555844c80 in grpc_blocking_resolve_address (name=0x555555f07b28 \"0.0.0.0:0\", default_port=0x555555bf6706 \"https\", addresses=0x7fffffffd8c8)\r\n       at /home/cyb/arrow/cpp/debug/grpc_ep-prefix/src/grpc_ep/src/core/lib/iomgr/resolve_address.cc:48\r\n   #1  0x0000555555962e0a in grpc_core::<lambda()>::operator()(void) const (__closure=0x7fffffffd910) at /home/cyb/arrow/cpp/debug/grpc_ep-prefix/src/grpc_ep/src/core/ext/transport/chttp2/server/chttp2_server.cc:533\r\n   #2  0x00005555559633ed in grpc_core::Chttp2ServerAddPort (server=0x555555f02710, addr=0x555555f07b28 \"0.0.0.0:0\", args=0x555555f04a60, port_num=0x7fffffffd98c)\r\n       at /home/cyb/arrow/cpp/debug/grpc_ep-prefix/src/grpc_ep/src/core/ext/transport/chttp2/server/chttp2_server.cc:575\r\n   #3  0x000055555581b835 in grpc_server_add_insecure_http2_port (server=0x555555f026f0, addr=0x555555f07b28 \"0.0.0.0:0\")\r\n       at /home/cyb/arrow/cpp/debug/grpc_ep-prefix/src/grpc_ep/src/core/ext/transport/chttp2/server/insecure/server_chttp2.cc:35\r\n   #4  0x00005555555bd744 in grpc::(anonymous namespace)::InsecureServerCredentialsImpl::AddPortToServer (this=0x555555efe250, addr=\"0.0.0.0:0\", server=0x555555f026f0)\r\n       at /home/cyb/arrow/cpp/debug/grpc_ep-prefix/src/grpc_ep/src/cpp/server/insecure_server_credentials.cc:29\r\n   #5  0x00007ffff765815d in grpc::Server::AddListeningPort (this=0x555555f01ff0, addr=\"0.0.0.0:0\", creds=0x555555efe250) at /home/cyb/arrow/cpp/debug/grpc_ep-prefix/src/grpc_ep/src/cpp/server/server_cc.cc:1100\r\n   #6  0x00007ffff7647ee5 in grpc::ServerBuilder::BuildAndStart (this=0x7fffffffdd10) at /home/cyb/arrow/cpp/debug/grpc_ep-prefix/src/grpc_ep/src/cpp/server/server_builder.cc:399\r\n   #7  0x00007ffff760c305 in arrow::flight::FlightServerBase::Init (this=0x555555efee70, options=...) at ../src/arrow/flight/server.cc:963\r\n   #8  0x00005555555a4386 in main (argc=1, argv=0x7fffffffe308) at ../examples/arrow/flight_grpc_example.cc:95\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-27T05:49:27.829+0000",
                    "updated": "2021-10-27T05:49:27.829+0000",
                    "started": "2021-10-27T05:49:27.829+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "670479",
                    "issueId": "13407977"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407977/worklog/670674",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #11524:\nURL: https://github.com/apache/arrow/pull/11524#discussion_r737394140\n\n\n\n##########\nFile path: cpp/examples/arrow/flight_grpc_example.cc\n##########\n@@ -0,0 +1,100 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements. See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership. The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License. You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied. See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include <signal.h>\n+#include <cstdlib>\n+#include <iostream>\n+\n+#include <arrow/api.h>\n+#include <arrow/flight/api.h>\n+#include <gflags/gflags.h>\n+#include <grpc++/grpc++.h>\n+\n+#include \"examples/arrow/helloworld.grpc.pb.h\"\n+#include \"examples/arrow/helloworld.pb.h\"\n+\n+// Demonstrate registering a gRPC service alongside a Flight service\n+//\n+// The gRPC service can be accessed with a gRPC client, on the same\n+// port as the Flight service. Additionally, the CMake config for this\n+// example links against the gRPC reflection library, enabling tools\n+// like grpc_cli and grpcurl to list and call RPCs on the server\n+// without needing local copies of the Protobuf definitions.\n+// For example, with grpcurl (https://github.com/fullstorydev/grpcurl):\n+//\n+// grpcurl -d '{\"name\": \"Rakka\"}' -plaintext localhost:31337 HelloWorldService/SayHello\n+\n+DEFINE_int32(port, -1, \"Server port to listen on\");\n+\n+namespace flight = ::arrow::flight;\n+\n+#define ABORT_ON_FAILURE(expr)                     \\\n+  do {                                             \\\n+    arrow::Status status_ = (expr);                \\\n+    if (!status_.ok()) {                           \\\n+      std::cerr << status_.message() << std::endl; \\\n+      abort();                                     \\\n+    }                                              \\\n+  } while (0);\n+\n+// Flight service\n+class SimpleFlightServer : public flight::FlightServerBase {};\n+\n+// gRPC service\n+class HelloWorldServiceImpl : public HelloWorldService::Service {\n+  grpc::Status SayHello(grpc::ServerContext* ctx, const HelloRequest* request,\n+                        HelloResponse* reply) override {\n+    const std::string& name = request->name();\n+    if (name.empty()) {\n+      return grpc::Status(grpc::StatusCode::INVALID_ARGUMENT, \"Must provide a name!\");\n+    }\n+    reply->set_reply(\"Hello, \" + name);\n+    return grpc::Status::OK;\n+  }\n+};\n+\n+int main(int argc, char** argv) {\n+  gflags::ParseCommandLineFlags(&argc, &argv, true);\n+\n+  if (FLAGS_port < 0) {\n+    // For CI\n+    std::cout << \"Must specify a port with -port\" << std::endl;\n+    return EXIT_SUCCESS;\n+  }\n+\n+  std::unique_ptr<flight::FlightServerBase> server;\n+  server.reset(new SimpleFlightServer());\n+\n+  flight::Location bind_location;\n+  ABORT_ON_FAILURE(flight::Location::ForGrpcTcp(\"0.0.0.0\", FLAGS_port, &bind_location));\n+  flight::FlightServerOptions options(bind_location);\n+\n+  HelloWorldServiceImpl grpc_service;\n+  int extra_port = 0;\n+\n+  options.builder_hook = [&](void* raw_builder) {\n+    auto* builder = reinterpret_cast<grpc::ServerBuilder*>(raw_builder);\n+    builder->AddListeningPort(\"0.0.0.0:0\", grpc::InsecureServerCredentials(),\n+                              &extra_port);\n+    builder->RegisterService(&grpc_service);\n+  };\n+  ABORT_ON_FAILURE(server->Init(options));\n\nReview comment:\n       Thanks for testing this, I'll try with the bundled build.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-27T12:03:17.488+0000",
                    "updated": "2021-10-27T12:03:17.488+0000",
                    "started": "2021-10-27T12:03:17.488+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "670674",
                    "issueId": "13407977"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407977/worklog/671602",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #11524:\nURL: https://github.com/apache/arrow/pull/11524#discussion_r738704269\n\n\n\n##########\nFile path: cpp/examples/arrow/CMakeLists.txt\n##########\n@@ -15,30 +15,80 @@\n # specific language governing permissions and limitations\n # under the License.\n \n-ADD_ARROW_EXAMPLE(row_wise_conversion_example)\n+add_arrow_example(row_wise_conversion_example)\n \n-if (ARROW_COMPUTE)\n-  ADD_ARROW_EXAMPLE(compute_register_example)\n+if(ARROW_COMPUTE)\n+  add_arrow_example(compute_register_example)\n endif()\n \n-if (ARROW_COMPUTE AND ARROW_CSV)\n-  ADD_ARROW_EXAMPLE(compute_and_write_csv_example)\n+if(ARROW_COMPUTE AND ARROW_CSV)\n+  add_arrow_example(compute_and_write_csv_example)\n endif()\n \n-if (ARROW_PARQUET AND ARROW_DATASET)\n-  if (ARROW_BUILD_SHARED)\n+if(ARROW_FLIGHT)\n+  if(ARROW_BUILD_SHARED)\n+    set(FLIGHT_EXAMPLES_LINK_LIBS arrow_flight_shared)\n+  else()\n+    set(FLIGHT_EXAMPLES_LINK_LIBS arrow_flight_static)\n+  endif()\n+\n+  set(FLIGHT_EXAMPLE_GENERATED_PROTO_FILES\n+      \"${CMAKE_CURRENT_BINARY_DIR}/helloworld.pb.cc\"\n+      \"${CMAKE_CURRENT_BINARY_DIR}/helloworld.pb.h\"\n+      \"${CMAKE_CURRENT_BINARY_DIR}/helloworld.grpc.pb.cc\"\n+      \"${CMAKE_CURRENT_BINARY_DIR}/helloworld.grpc.pb.h\")\n+  set_source_files_properties(${FLIGHT_EXAMPLE_GENERATED_PROTO_FILES} PROPERTIES GENERATED\n+                                                                                 TRUE)\n+\n+  set(FLIGHT_EXAMPLE_PROTO \"helloworld.proto\")\n+  set(FLIGHT_EXAMPLE_PROTO_PATH \"${CMAKE_CURRENT_LIST_DIR}\")\n+  set(FLIGHT_EXAMPLE_PROTO_DEPENDS ${FLIGHT_EXAMPLE_PROTO} ${ARROW_PROTOBUF_LIBPROTOBUF}\n+                                   gRPC::grpc_cpp_plugin)\n+\n+  add_custom_command(OUTPUT ${FLIGHT_EXAMPLE_GENERATED_PROTO_FILES}\n+                     COMMAND ${ARROW_PROTOBUF_PROTOC} \"-I${FLIGHT_EXAMPLE_PROTO_PATH}\"\n+                             \"--cpp_out=${CMAKE_CURRENT_BINARY_DIR}\"\n+                             \"${FLIGHT_EXAMPLE_PROTO}\"\n+                     DEPENDS ${PROTO_EXAMPLE_PROTO_DEPENDS} ARGS\n+                     COMMAND ${ARROW_PROTOBUF_PROTOC} \"-I${FLIGHT_EXAMPLE_PROTO_PATH}\"\n+                             \"--grpc_out=${CMAKE_CURRENT_BINARY_DIR}\"\n+                             \"--plugin=protoc-gen-grpc=$<TARGET_FILE:gRPC::grpc_cpp_plugin>\"\n+                             \"${FLIGHT_EXAMPLE_PROTO}\")\n+\n+  add_custom_target(flight_grpc_example_gen ALL\n+                    DEPENDS ${FLIGHT_EXAMPLE_GENERATED_PROTO_FILES})\n+\n+  add_arrow_example(flight_grpc_example\n+                    DEPENDENCIES\n+                    flight_grpc_example_gen\n+                    # Not CMAKE_CURRENT_BINARY_DIR so we can #include\n+                    # \"examples/arrow/helloworld.pb.h\" instead of\n+                    # \"helloworld.pb.h\" (which fails lint)\n+                    EXTRA_INCLUDES\n+                    ${CMAKE_BINARY_DIR}\n+                    EXTRA_LINK_LIBS\n+                    ${FLIGHT_EXAMPLES_LINK_LIBS}\n+                    gRPC::grpc++\n+                    gRPC::grpc++_reflection\n\nReview comment:\n       I added a target for this.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-28T19:44:54.597+0000",
                    "updated": "2021-10-28T19:44:54.597+0000",
                    "started": "2021-10-28T19:44:54.596+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "671602",
                    "issueId": "13407977"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407977/worklog/671604",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #11524:\nURL: https://github.com/apache/arrow/pull/11524#discussion_r738706628\n\n\n\n##########\nFile path: cpp/examples/arrow/flight_grpc_example.cc\n##########\n@@ -0,0 +1,100 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements. See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership. The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License. You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied. See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include <signal.h>\n+#include <cstdlib>\n+#include <iostream>\n+\n+#include <arrow/api.h>\n+#include <arrow/flight/api.h>\n+#include <gflags/gflags.h>\n+#include <grpc++/grpc++.h>\n+\n+#include \"examples/arrow/helloworld.grpc.pb.h\"\n+#include \"examples/arrow/helloworld.pb.h\"\n+\n+// Demonstrate registering a gRPC service alongside a Flight service\n+//\n+// The gRPC service can be accessed with a gRPC client, on the same\n+// port as the Flight service. Additionally, the CMake config for this\n+// example links against the gRPC reflection library, enabling tools\n+// like grpc_cli and grpcurl to list and call RPCs on the server\n+// without needing local copies of the Protobuf definitions.\n+// For example, with grpcurl (https://github.com/fullstorydev/grpcurl):\n+//\n+// grpcurl -d '{\"name\": \"Rakka\"}' -plaintext localhost:31337 HelloWorldService/SayHello\n+\n+DEFINE_int32(port, -1, \"Server port to listen on\");\n+\n+namespace flight = ::arrow::flight;\n+\n+#define ABORT_ON_FAILURE(expr)                     \\\n+  do {                                             \\\n+    arrow::Status status_ = (expr);                \\\n+    if (!status_.ok()) {                           \\\n+      std::cerr << status_.message() << std::endl; \\\n+      abort();                                     \\\n+    }                                              \\\n+  } while (0);\n+\n+// Flight service\n+class SimpleFlightServer : public flight::FlightServerBase {};\n+\n+// gRPC service\n+class HelloWorldServiceImpl : public HelloWorldService::Service {\n+  grpc::Status SayHello(grpc::ServerContext* ctx, const HelloRequest* request,\n+                        HelloResponse* reply) override {\n+    const std::string& name = request->name();\n+    if (name.empty()) {\n+      return grpc::Status(grpc::StatusCode::INVALID_ARGUMENT, \"Must provide a name!\");\n+    }\n+    reply->set_reply(\"Hello, \" + name);\n+    return grpc::Status::OK;\n+  }\n+};\n+\n+int main(int argc, char** argv) {\n+  gflags::ParseCommandLineFlags(&argc, &argv, true);\n+\n+  if (FLAGS_port < 0) {\n+    // For CI\n+    std::cout << \"Must specify a port with -port\" << std::endl;\n+    return EXIT_SUCCESS;\n+  }\n+\n+  std::unique_ptr<flight::FlightServerBase> server;\n+  server.reset(new SimpleFlightServer());\n+\n+  flight::Location bind_location;\n+  ABORT_ON_FAILURE(flight::Location::ForGrpcTcp(\"0.0.0.0\", FLAGS_port, &bind_location));\n+  flight::FlightServerOptions options(bind_location);\n+\n+  HelloWorldServiceImpl grpc_service;\n+  int extra_port = 0;\n+\n+  options.builder_hook = [&](void* raw_builder) {\n+    auto* builder = reinterpret_cast<grpc::ServerBuilder*>(raw_builder);\n+    builder->AddListeningPort(\"0.0.0.0:0\", grpc::InsecureServerCredentials(),\n+                              &extra_port);\n+    builder->RegisterService(&grpc_service);\n+  };\n+  ABORT_ON_FAILURE(server->Init(options));\n\nReview comment:\n       The issue was that by default, the example would link both to libarrow_flight.so and the static gRPC libraries, violating ODR. The solution is to link to static libarrow_flight.a if we're using static gRPC. I tried building gRPC dynamically, but that poses issues because then the gRPC Protobuf plugin can't find libgrpc.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-28T19:47:21.238+0000",
                    "updated": "2021-10-28T19:47:21.238+0000",
                    "started": "2021-10-28T19:47:21.238+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "671604",
                    "issueId": "13407977"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407977/worklog/671841",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on pull request #11524:\nURL: https://github.com/apache/arrow/pull/11524#issuecomment-954477426\n\n\n   Thanks @lidavidm , the test program is working fine on my side.\r\n   \r\n   One last issue is that grpc reflection is broken on ubuntu.\r\n   grpcurl fails with `server does not support the reflection API`.\r\n   \r\n   From grpc reflection [doc](https://github.com/grpc/grpc/blob/master/doc/server_reflection_tutorial.md#enable-server-reflection-in-c-servers):\r\n   ```\r\n   Some platforms (e.g. Ubuntu 11.10 onwards) only link in libraries that\r\n   directly contain symbols used by the application.\r\n   \r\n   On these platforms, LD flag --no-as-needed is needed for dynamic linking\r\n   and --whole-archive is needed for static linking.\r\n   ```\r\n   \r\n   I manually added `-Wl,--whole-archive` before *libgrpc++_reflection.a*, and `-Wl,--no-whole-archive` after. It fixes the issue. But I don't know how to adapt cmake.\r\n   \r\n   Original link command (doesn't support reflection)\r\n   ```\r\n   /usr/bin/clang++-10 ... \\\r\n      -o debug/flight_grpc_example ... \\\r\n      grpc_ep-install/lib/libgrpc++.a  \\\r\n      grpc_ep-install/lib/libgrpc++_reflection.a \\\r\n      ...\r\n   ```\r\n   \r\n   Manually updated link command (supports reflection)\r\n   ```\r\n   /usr/bin/clang++-10 ... \\\r\n      -o debug/flight_grpc_example ... \\\r\n      grpc_ep-install/lib/libgrpc++.a  \\\r\n      -Wl,--whole-archive grpc_ep-install/lib/libgrpc++_reflection.a -Wl,--no-whole-archive \\\r\n      ...\r\n   ```\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-29T06:55:21.498+0000",
                    "updated": "2021-10-29T06:55:21.498+0000",
                    "started": "2021-10-29T06:55:21.498+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "671841",
                    "issueId": "13407977"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407977/worklog/671954",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #11524:\nURL: https://github.com/apache/arrow/pull/11524#issuecomment-954732491\n\n\n   It turns out you can just [put the linker flags inline](https://stackoverflow.com/questions/5693405/specifying-link-flags-for-only-one-static-lib-while-linking-executable), though only because the reflection library doesn't have any further dependencies. Updated the PR, thanks for testing this.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-29T13:11:39.867+0000",
                    "updated": "2021-10-29T13:11:39.867+0000",
                    "started": "2021-10-29T13:11:39.866+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "671954",
                    "issueId": "13407977"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407977/worklog/672509",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 closed pull request #11524:\nURL: https://github.com/apache/arrow/pull/11524\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-01T01:39:14.016+0000",
                    "updated": "2021-11-01T01:39:14.016+0000",
                    "started": "2021-11-01T01:39:14.016+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "672509",
                    "issueId": "13407977"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407977/worklog/672510",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on pull request #11524:\nURL: https://github.com/apache/arrow/pull/11524#issuecomment-955853260\n\n\n   Benchmark runs are scheduled for baseline = f1672ed2405be42b64a11e38bd03fb76c0eb53b9 and contender = 07b4813ef4c9e1bd0769100035c000093c3e2fbf. 07b4813ef4c9e1bd0769100035c000093c3e2fbf is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Scheduled] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/bebfbaea12b5475ba08c25491f09328d...76c06e8b604749c1be31212ff41c6cbd/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/bc9405d800504252af08ae7c4dfe0741...736f8a0f338946559d89f02eef9f1443/)\n   [Scheduled] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/83c6365d715d45ceb9fd5b9d665dcfbc...1c819559651f4af280f71a4ce523609c/)\n   Supported benchmarks:\n   ursa-i9-9960x: langs = Python, R, JavaScript\n   ursa-thinkcentre-m75q: langs = C++, Java\n   ec2-t3-xlarge-us-east-2: cloud = True\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-01T01:39:27.377+0000",
                    "updated": "2021-11-01T01:39:27.377+0000",
                    "started": "2021-11-01T01:39:27.377+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "672510",
                    "issueId": "13407977"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407977/worklog/672511",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #11524:\nURL: https://github.com/apache/arrow/pull/11524#issuecomment-955853260\n\n\n   Benchmark runs are scheduled for baseline = f1672ed2405be42b64a11e38bd03fb76c0eb53b9 and contender = 07b4813ef4c9e1bd0769100035c000093c3e2fbf. 07b4813ef4c9e1bd0769100035c000093c3e2fbf is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/bebfbaea12b5475ba08c25491f09328d...76c06e8b604749c1be31212ff41c6cbd/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/bc9405d800504252af08ae7c4dfe0741...736f8a0f338946559d89f02eef9f1443/)\n   [Scheduled] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/83c6365d715d45ceb9fd5b9d665dcfbc...1c819559651f4af280f71a4ce523609c/)\n   Supported benchmarks:\n   ursa-i9-9960x: langs = Python, R, JavaScript\n   ursa-thinkcentre-m75q: langs = C++, Java\n   ec2-t3-xlarge-us-east-2: cloud = True\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-01T01:49:37.519+0000",
                    "updated": "2021-11-01T01:49:37.519+0000",
                    "started": "2021-11-01T01:49:37.518+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "672511",
                    "issueId": "13407977"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407977/worklog/672522",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #11524:\nURL: https://github.com/apache/arrow/pull/11524#issuecomment-955853260\n\n\n   Benchmark runs are scheduled for baseline = f1672ed2405be42b64a11e38bd03fb76c0eb53b9 and contender = 07b4813ef4c9e1bd0769100035c000093c3e2fbf. 07b4813ef4c9e1bd0769100035c000093c3e2fbf is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/bebfbaea12b5475ba08c25491f09328d...76c06e8b604749c1be31212ff41c6cbd/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/bc9405d800504252af08ae7c4dfe0741...736f8a0f338946559d89f02eef9f1443/)\n   [Finished :arrow_down:0.85% :arrow_up:0.22%] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/83c6365d715d45ceb9fd5b9d665dcfbc...1c819559651f4af280f71a4ce523609c/)\n   Supported benchmarks:\n   ursa-i9-9960x: langs = Python, R, JavaScript\n   ursa-thinkcentre-m75q: langs = C++, Java\n   ec2-t3-xlarge-us-east-2: cloud = True\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-01T03:22:26.570+0000",
                    "updated": "2021-11-01T03:22:26.570+0000",
                    "started": "2021-11-01T03:22:26.570+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "672522",
                    "issueId": "13407977"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407977/worklog/672524",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #11524:\nURL: https://github.com/apache/arrow/pull/11524#issuecomment-955853260\n\n\n   Benchmark runs are scheduled for baseline = f1672ed2405be42b64a11e38bd03fb76c0eb53b9 and contender = 07b4813ef4c9e1bd0769100035c000093c3e2fbf. 07b4813ef4c9e1bd0769100035c000093c3e2fbf is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/bebfbaea12b5475ba08c25491f09328d...76c06e8b604749c1be31212ff41c6cbd/)\n   [Finished :arrow_down:1.54% :arrow_up:0.0%] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/bc9405d800504252af08ae7c4dfe0741...736f8a0f338946559d89f02eef9f1443/)\n   [Finished :arrow_down:0.85% :arrow_up:0.22%] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/83c6365d715d45ceb9fd5b9d665dcfbc...1c819559651f4af280f71a4ce523609c/)\n   Supported benchmarks:\n   ursa-i9-9960x: langs = Python, R, JavaScript\n   ursa-thinkcentre-m75q: langs = C++, Java\n   ec2-t3-xlarge-us-east-2: cloud = True\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-01T03:37:24.316+0000",
                    "updated": "2021-11-01T03:37:24.316+0000",
                    "started": "2021-11-01T03:37:24.316+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "672524",
                    "issueId": "13407977"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407977/worklog/676175",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #11524:\nURL: https://github.com/apache/arrow/pull/11524#issuecomment-960398494\n\n\n   Could you also update `cpp/cmake_modules/FindgRPCAlt.cmake` to detect `gRPC::grpc++_reflection`?\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-04T02:43:19.770+0000",
                    "updated": "2021-11-04T02:43:19.770+0000",
                    "started": "2021-11-04T02:43:19.769+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "676175",
                    "issueId": "13407977"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407977/worklog/676372",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #11524:\nURL: https://github.com/apache/arrow/pull/11524#issuecomment-960791559\n\n\n   Sorry for missing that. I filed ARROW-14585 and will take care of it.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-04T12:22:10.904+0000",
                    "updated": "2021-11-04T12:22:10.904+0000",
                    "started": "2021-11-04T12:22:10.904+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "676372",
                    "issueId": "13407977"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 10200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@9bd1978[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@27848262[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7976ad03[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7a62b7dd[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@77135901[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@67ef4aac[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2bbdede7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@440e6b12[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2938e9c3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@349f6c62[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@70897dc3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@47e8de3b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 10200,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Nov 01 01:39:03 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-11-01T01:39:03.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14440/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2021-10-22T15:34:11.000+0000",
        "updated": "2021-11-04T12:22:12.000+0000",
        "timeoriginalestimate": null,
        "description": "Some applications may want to use gRPC in conjunction with Flight to benefit from gRPC's tooling. This is fairly straightforward to do in Java, not possible in Python, and possible in gRPC but needs some demonstration.\r\n\r\nThis may also be good to have as a cookbook example.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 10200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][FlightRPC] Add example of registering gRPC service on a Flight server",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407977/comment/17436580",
                    "id": "17436580",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=yibocai",
                        "name": "yibocai",
                        "key": "yibo",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=yibo&avatarId=47542",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=yibo&avatarId=47542",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=yibo&avatarId=47542",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=yibo&avatarId=47542"
                        },
                        "displayName": "Yibo Cai",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 11524\n[https://github.com/apache/arrow/pull/11524]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=yibocai",
                        "name": "yibocai",
                        "key": "yibo",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=yibo&avatarId=47542",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=yibo&avatarId=47542",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=yibo&avatarId=47542",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=yibo&avatarId=47542"
                        },
                        "displayName": "Yibo Cai",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-11-01T01:39:03.174+0000",
                    "updated": "2021-11-01T01:39:03.174+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0w36g:",
        "customfield_12314139": null
    }
}