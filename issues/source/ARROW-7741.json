{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13282814",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13282814",
    "key": "ARROW-7741",
    "fields": {
        "parent": {
            "id": "13107102",
            "key": "ARROW-1644",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/13107102",
            "fields": {
                "summary": "[C++][Parquet] Read and write nested Parquet data with a mix of struct and list nesting levels",
                "status": {
                    "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                    "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                    "name": "Resolved",
                    "id": "5",
                    "statusCategory": {
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                        "id": 3,
                        "key": "done",
                        "colorName": "green",
                        "name": "Done"
                    }
                },
                "priority": {
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                    "name": "Major",
                    "id": "3"
                },
                "issuetype": {
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                    "id": "2",
                    "description": "A new feature of the product, which has yet to be developed.",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                    "name": "New Feature",
                    "subtask": false,
                    "avatarId": 21141
                }
            }
        },
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12346687",
                "id": "12346687",
                "description": "",
                "name": "0.17.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-04-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12346687",
                "id": "12346687",
                "description": "",
                "name": "0.17.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-04-20"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
            "name": "emkornfield@gmail.com",
            "key": "emkornfield@gmail.com",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Micah Kornfield",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
            "name": "emkornfield@gmail.com",
            "key": "emkornfield@gmail.com",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Micah Kornfield",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
            "name": "emkornfield@gmail.com",
            "key": "emkornfield@gmail.com",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Micah Kornfield",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 21600,
            "total": 21600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 21600,
            "total": 21600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7741/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 40,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13282814/worklog/380439",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #6337: ARROW-7741: [C++] Add a enum to control parquet engine version\nURL: https://github.com/apache/arrow/pull/6337\n \n \n   There are going to be code paths added to read/write nested data.\r\n   Until these are fully validated we should have a flag to switch\r\n   the code on/off (new code to be implemented in future PRs)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-02T06:40:44.786+0000",
                    "updated": "2020-02-02T06:40:44.786+0000",
                    "started": "2020-02-02T06:40:44.786+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "380439",
                    "issueId": "13282814"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13282814/worklog/380440",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #6337: ARROW-7741: [C++] Add a enum to control parquet engine version\nURL: https://github.com/apache/arrow/pull/6337#issuecomment-581104662\n \n \n   https://issues.apache.org/jira/browse/ARROW-7741\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-02T06:46:48.552+0000",
                    "updated": "2020-02-02T06:46:48.552+0000",
                    "started": "2020-02-02T06:46:48.552+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "380440",
                    "issueId": "13282814"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13282814/worklog/381061",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #6337: ARROW-7741: [C++] Add a enum to control parquet engine version\nURL: https://github.com/apache/arrow/pull/6337#discussion_r374193861\n \n \n\n ##########\n File path: cpp/src/parquet/properties.h\n ##########\n @@ -535,6 +535,19 @@ static constexpr bool kArrowDefaultUseThreads = false;\n // Default number of rows to read when using ::arrow::RecordBatchReader\n static constexpr int64_t kArrowDefaultBatchSize = 64 * 1024;\n \n+// At times the arrow code base might contain multiple iterations\n+// of code to read/write data to Parquet.  This enum allows\n+// selection of the given code.\n+enum class ArrowEngineVersion {\n+  // The current default engine. This doesn't support mixed\n+  // struct list date.\n+  kDefault = 0,\n+\n+  // Not fully implemented.  When done this will support reading/\n+  // writing all forms of nested data.\n+  kNextGen = 1\n \n Review comment:\n   Will number 2 be named `kNextNextGen`? :-) I suggest we find other names (perhaps simply version names: `v1`, `v2`).\r\n   \r\n   (also, I don't think the `k` prefix is necessary if it's a qualified enum member?)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-03T16:13:51.454+0000",
                    "updated": "2020-02-03T16:13:51.454+0000",
                    "started": "2020-02-03T16:13:51.454+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "381061",
                    "issueId": "13282814"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13282814/worklog/381382",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #6337: ARROW-7741: [C++] Add a enum to control parquet engine version\nURL: https://github.com/apache/arrow/pull/6337#discussion_r374470334\n \n \n\n ##########\n File path: cpp/src/parquet/properties.h\n ##########\n @@ -535,6 +535,19 @@ static constexpr bool kArrowDefaultUseThreads = false;\n // Default number of rows to read when using ::arrow::RecordBatchReader\n static constexpr int64_t kArrowDefaultBatchSize = 64 * 1024;\n \n+// At times the arrow code base might contain multiple iterations\n+// of code to read/write data to Parquet.  This enum allows\n+// selection of the given code.\n+enum class ArrowEngineVersion {\n+  // The current default engine. This doesn't support mixed\n+  // struct list date.\n+  kDefault = 0,\n+\n+  // Not fully implemented.  When done this will support reading/\n+  // writing all forms of nested data.\n+  kNextGen = 1\n \n Review comment:\n   I think qualified enums are supposed to be treated like [constants](https://google.github.io/styleguide/cppguide.html#Enumerator_Names).  In this case I changed to V1 and V2\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-04T04:34:48.293+0000",
                    "updated": "2020-02-04T04:34:48.293+0000",
                    "started": "2020-02-04T04:34:48.292+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "381382",
                    "issueId": "13282814"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13282814/worklog/381387",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #6337: ARROW-7741: [C++] Add a enum to control parquet engine version\nURL: https://github.com/apache/arrow/pull/6337#issuecomment-581739778\n \n \n   > Will there be a benefit to keeping the old engine version? Will the new version break compatibility or reduce performance somehow?\r\n   \r\n   I'm hoping at some point the two can be merged but would like to keep them initially so that if there is any performance regression or bugs users can have a path to revert to old behavior (ideally if I am careful without rolling back CLs)\r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-04T04:40:24.695+0000",
                    "updated": "2020-02-04T04:40:24.695+0000",
                    "started": "2020-02-04T04:40:24.694+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "381387",
                    "issueId": "13282814"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13282814/worklog/381753",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #6337: ARROW-7741: [C++] Add a enum to control parquet engine version\nURL: https://github.com/apache/arrow/pull/6337#issuecomment-582032116\n \n \n   It seems like we should merge the Parquet nested patches into a feature branch and keep iterating on it until the performance regressions are gone, instead of maintaining multiple code paths. Thoughts?\r\n   \r\n   This patch seems also to revert some submodule changes\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-04T17:48:13.847+0000",
                    "updated": "2020-02-04T17:48:13.847+0000",
                    "started": "2020-02-04T17:48:13.846+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "381753",
                    "issueId": "13282814"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13282814/worklog/382104",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #6337: ARROW-7741: [C++] Add a enum to control parquet engine version\nURL: https://github.com/apache/arrow/pull/6337#issuecomment-582268737\n \n \n   Per mailing list reply, I'd prefer to avoid a feature branch if possible.  I'll close this PR for now and try to make incremental changes that don't have performance regressions and then we can determine if the final integrations should be hidden by a flag.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-05T06:58:25.860+0000",
                    "updated": "2020-02-05T06:58:25.860+0000",
                    "started": "2020-02-05T06:58:25.859+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "382104",
                    "issueId": "13282814"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13282814/worklog/382105",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #6337: ARROW-7741: [C++] Add a enum to control parquet engine version\nURL: https://github.com/apache/arrow/pull/6337\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-05T06:58:28.962+0000",
                    "updated": "2020-02-05T06:58:28.962+0000",
                    "started": "2020-02-05T06:58:28.962+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "382105",
                    "issueId": "13282814"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13282814/worklog/401938",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #6586: ARROW-7741: [C++ ]Adds parquet write support for nested types\nURL: https://github.com/apache/arrow/pull/6586\n \n \n   1.  Keeps the old version around (without unit tests) under V1 and\r\n       make this version (V2) a default\r\n   2.  Reworks PathInternal slightly to preserve column at a time writing\r\n       with chunked columns.  Address @bkietz comment that the vendored\r\n       visitor implementation for variants supports a return type.\r\n   3.  While debugging I found we don't preserve all null counts when\r\n       slicing, so included a small patch and unit test for that.\r\n   \r\n   I'll plan on adding bindings in python for the versioning in a follow-up CR that can also be toggled with a environment variable in case regressions are encountered \"in the wild\"\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-12T03:39:08.505+0000",
                    "updated": "2020-03-12T03:39:08.505+0000",
                    "started": "2020-03-12T03:39:08.504+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "401938",
                    "issueId": "13282814"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13282814/worklog/401939",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #6586: ARROW-7741: [C++ ]Adds parquet write support for nested types\nURL: https://github.com/apache/arrow/pull/6586#issuecomment-597990393\n \n \n   CC @wesm\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-12T03:39:16.679+0000",
                    "updated": "2020-03-12T03:39:16.679+0000",
                    "started": "2020-03-12T03:39:16.679+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "401939",
                    "issueId": "13282814"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13282814/worklog/401941",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #6586: ARROW-7741: [C++ ]Adds parquet write support for nested types\nURL: https://github.com/apache/arrow/pull/6586#discussion_r391386242\n \n \n\n ##########\n File path: cpp/src/parquet/arrow/test_util.h\n ##########\n @@ -402,6 +402,7 @@ Status MakeEmptyListsArray(int64_t size, std::shared_ptr<Array>* out_array) {\n   array_data->child_data.push_back(child_data);\n \n   *out_array = ::arrow::MakeArray(array_data);\n+  (*out_array)->null_count();\n \n Review comment:\n   need to revert this can make sure tests pass.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-12T03:41:14.336+0000",
                    "updated": "2020-03-12T03:41:14.336+0000",
                    "started": "2020-03-12T03:41:14.336+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "401941",
                    "issueId": "13282814"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13282814/worklog/401942",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #6586: ARROW-7741: [C++ ]Adds parquet write support for nested types\nURL: https://github.com/apache/arrow/pull/6586#issuecomment-597991886\n \n \n   https://issues.apache.org/jira/browse/ARROW-7741\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-12T03:46:52.737+0000",
                    "updated": "2020-03-12T03:46:52.737+0000",
                    "started": "2020-03-12T03:46:52.736+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "401942",
                    "issueId": "13282814"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13282814/worklog/402201",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6586: ARROW-7741: [C++] Adds parquet write support for nested types\nURL: https://github.com/apache/arrow/pull/6586#discussion_r391646274\n \n \n\n ##########\n File path: cpp/src/parquet/arrow/path_internal.cc\n ##########\n @@ -564,35 +565,39 @@ Status WritePath(ElementRange root_range, PathInfo* path_info,\n   // |root_range| are processed.\n   while (stack_position >= stack_base) {\n     PathInfo::Node& node = path_info->path[stack_position - stack_base];\n-    IterationResult result = kError;\n     struct {\n-      void operator()(NullableNode& node) {  // NOLINT google-runtime-references\n-        *result = node.Run(stack_position, stack_position + 1, context);\n+      IterationResult operator()(\n+          NullableNode& node) {  // NOLINT google-runtime-references\n+        return node.Run(stack_position, stack_position + 1, context);\n       }\n-      void operator()(ListNode& node) {  // NOLINT google-runtime-references\n-        *result = node.Run(stack_position, stack_position + 1, context);\n+      IterationResult operator()(ListNode& node) {  // NOLINT google-runtime-references\n+        return node.Run(stack_position, stack_position + 1, context);\n       }\n-      void operator()(NullableTerminalNode& node) {  // NOLINT google-runtime-references\n-        *result = node.Run(*stack_position, context);\n+      IterationResult operator()(\n+          NullableTerminalNode& node) {  // NOLINT google-runtime-references\n+        return node.Run(*stack_position, context);\n       }\n-      void operator()(FixedSizeListNode& node) {  // NOLINT google-runtime-references\n-        *result = node.Run(stack_position, stack_position + 1, context);\n+      IterationResult operator()(\n+          FixedSizeListNode& node) {  // NOLINT google-runtime-references\n+        return node.Run(stack_position, stack_position + 1, context);\n       }\n-      void operator()(AllPresentTerminalNode& node) {  // NOLINT google-runtime-references\n-        *result = node.Run(*stack_position, context);\n+      IterationResult operator()(\n+          AllPresentTerminalNode& node) {  // NOLINT google-runtime-references\n+        return node.Run(*stack_position, context);\n       }\n-      void operator()(AllNullsTerminalNode& node) {  // NOLINT google-runtime-references\n-        *result = node.Run(*stack_position, context);\n+      IterationResult operator()(\n+          AllNullsTerminalNode& node) {  // NOLINT google-runtime-references\n+        return node.Run(*stack_position, context);\n       }\n-      void operator()(LargeListNode& node) {  // NOLINT google-runtime-references\n-        *result = node.Run(stack_position, stack_position + 1, context);\n+      IterationResult operator()(\n+          LargeListNode& node) {  // NOLINT google-runtime-references\n+        return node.Run(stack_position, stack_position + 1, context);\n       }\n       ElementRange* stack_position;\n       PathWriteContext* context;\n-      IterationResult* result;\n-    } visitor = {stack_position, &context, &result};\n+    } visitor = {stack_position, &context};\n \n-    ::arrow::util::visit(visitor, node);\n+    IterationResult result = ::arrow::util::visit(visitor, node);\n \n Review comment:\n   :+1: \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-12T14:26:40.009+0000",
                    "updated": "2020-03-12T14:26:40.009+0000",
                    "started": "2020-03-12T14:26:40.008+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "402201",
                    "issueId": "13282814"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13282814/worklog/402202",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6586: ARROW-7741: [C++] Adds parquet write support for nested types\nURL: https://github.com/apache/arrow/pull/6586#discussion_r391646842\n \n \n\n ##########\n File path: cpp/src/parquet/arrow/path_internal.cc\n ##########\n @@ -702,7 +707,8 @@ class PathBuilder {\n     // traversing the null bitmap twice (once here and once when calculating\n     // rep/def levels).\n     int64_t null_count = array.data()->null_count.load();\n-    if (null_count == 0) {\n+    if (null_count == 0 || (null_count == ::arrow::kUnknownNullCount &&\n \n Review comment:\n   Extract to\r\n   ```c++\r\n   bool LazyNoNulls(const Array& arr);\r\n   ```\r\n   ?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-12T14:26:40.012+0000",
                    "updated": "2020-03-12T14:26:40.012+0000",
                    "started": "2020-03-12T14:26:40.012+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "402202",
                    "issueId": "13282814"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13282814/worklog/402203",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6586: ARROW-7741: [C++] Adds parquet write support for nested types\nURL: https://github.com/apache/arrow/pull/6586#discussion_r391648226\n \n \n\n ##########\n File path: cpp/src/parquet/arrow/path_internal.h\n ##########\n @@ -115,16 +116,41 @@ class PARQUET_EXPORT MultipathLevelBuilder {\n   ///   the elements in the top level array nullable.\n   /// \\param[in, out] context for use when allocating memory, etc.\n   /// \\param[out] write_leaf_callback Callback to receive results.\n-  /// There will be one call to the write_leaf_callback for\n+  /// There will be one call to the write_leaf_callback for each leaf node.\n   static ::arrow::Status Write(const ::arrow::Array& array, bool array_nullable,\n                                ArrowWriteContext* context,\n                                CallbackFunction write_leaf_callback);\n \n+  /// \\brief Construct a new instance of the builder.\n+  ///\n+  /// \\param[in] array The array to process.\n+  /// \\param[in] array_nullable Whether the algorithm should consider\n+  ///   the elements in the top level array nullable.\n+  static ::arrow::Result<std::unique_ptr<MultipathLevelBuilder>> Create(\n \n Review comment:\n   Nit:\r\n   ```suggestion\r\n     static ::arrow::Result<std::unique_ptr<MultipathLevelBuilder>> Make(\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-12T14:26:40.157+0000",
                    "updated": "2020-03-12T14:26:40.157+0000",
                    "started": "2020-03-12T14:26:40.157+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "402203",
                    "issueId": "13282814"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13282814/worklog/402204",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6586: ARROW-7741: [C++] Adds parquet write support for nested types\nURL: https://github.com/apache/arrow/pull/6586#discussion_r391656744\n \n \n\n ##########\n File path: cpp/src/parquet/arrow/path_internal.h\n ##########\n @@ -115,16 +116,41 @@ class PARQUET_EXPORT MultipathLevelBuilder {\n   ///   the elements in the top level array nullable.\n   /// \\param[in, out] context for use when allocating memory, etc.\n   /// \\param[out] write_leaf_callback Callback to receive results.\n-  /// There will be one call to the write_leaf_callback for\n+  /// There will be one call to the write_leaf_callback for each leaf node.\n   static ::arrow::Status Write(const ::arrow::Array& array, bool array_nullable,\n \n Review comment:\n   Could you explain this parameter more? It seems like it should always be equivalent to `array.null_count() == 0`\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-12T14:26:40.157+0000",
                    "updated": "2020-03-12T14:26:40.157+0000",
                    "started": "2020-03-12T14:26:40.157+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "402204",
                    "issueId": "13282814"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13282814/worklog/402205",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6586: ARROW-7741: [C++] Adds parquet write support for nested types\nURL: https://github.com/apache/arrow/pull/6586#discussion_r391653806\n \n \n\n ##########\n File path: cpp/src/parquet/arrow/path_internal.h\n ##########\n @@ -115,16 +116,41 @@ class PARQUET_EXPORT MultipathLevelBuilder {\n   ///   the elements in the top level array nullable.\n   /// \\param[in, out] context for use when allocating memory, etc.\n   /// \\param[out] write_leaf_callback Callback to receive results.\n-  /// There will be one call to the write_leaf_callback for\n+  /// There will be one call to the write_leaf_callback for each leaf node.\n   static ::arrow::Status Write(const ::arrow::Array& array, bool array_nullable,\n                                ArrowWriteContext* context,\n                                CallbackFunction write_leaf_callback);\n \n+  /// \\brief Construct a new instance of the builder.\n+  ///\n+  /// \\param[in] array The array to process.\n+  /// \\param[in] array_nullable Whether the algorithm should consider\n+  ///   the elements in the top level array nullable.\n+  static ::arrow::Result<std::unique_ptr<MultipathLevelBuilder>> Create(\n+      const ::arrow::Array& array, bool array_nullable);\n+\n+  ~MultipathLevelBuilder();\n+\n+  /// \\brief Returns the number of leaf columns that need to be written\n+  /// to Parquet.\n+  int GetLeafCount() const;\n+\n+  /// \\brief Calls write_leaf_callback with the MultipathLevelBuilderResult corresponding\n+  /// to |leaf_index|.\n+\n+  /// \\param[in] The index of the leaf column to write.  Must be in the range [0,\n+  /// GetLeafCount()]. \\param[in, out] context for use when allocating memory, etc.\n+  /// \\param[out] write_leaf_callback Callback to receive the result.\n+  ::arrow::Status Write(int leaf_index, ArrowWriteContext* context,\n+                        CallbackFunction write_leaf_callback);\n+\n  private:\n-  MultipathLevelBuilder();\n+  class Impl;\n+  MultipathLevelBuilder(Impl* impl);\n   // Not copyable.\n   MultipathLevelBuilder(const MultipathLevelBuilder&) = delete;\n   MultipathLevelBuilder& operator=(const MultipathLevelBuilder&) = delete;\n+  Impl* impl_;\n \n Review comment:\n   From my personal coding style guide (completely optional, questionably valuable): prefer unique_ptr to a custom destructor\r\n   ```suggestion\r\n     std::unique_ptr<Impl, void(*)(Impl*)> impl_;\r\n   ```\r\n   \r\n   then construct with\r\n   ```c++\r\n   MultipathLevelBuilder::MultipathLevelBuilder(Impl* impl) : impl_(impl, [](Impl* impl) { delete impl; }) {}\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-12T14:26:40.161+0000",
                    "updated": "2020-03-12T14:26:40.161+0000",
                    "started": "2020-03-12T14:26:40.160+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "402205",
                    "issueId": "13282814"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13282814/worklog/402651",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #6586: ARROW-7741: [C++] Adds parquet write support for nested types\nURL: https://github.com/apache/arrow/pull/6586#issuecomment-598543288\n \n \n   ![image](https://user-images.githubusercontent.com/17869838/76589965-1a32aa00-64a9-11ea-9a27-e44a3ece584c.png)\r\n   \r\n   Benchmarks do not show any siginificant different for write\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-13T04:33:53.484+0000",
                    "updated": "2020-03-13T04:33:53.484+0000",
                    "started": "2020-03-13T04:33:53.484+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "402651",
                    "issueId": "13282814"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13282814/worklog/402672",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #6586: ARROW-7741: [C++] Adds parquet write support for nested types\nURL: https://github.com/apache/arrow/pull/6586#discussion_r392026619\n \n \n\n ##########\n File path: cpp/src/parquet/arrow/path_internal.h\n ##########\n @@ -115,16 +116,41 @@ class PARQUET_EXPORT MultipathLevelBuilder {\n   ///   the elements in the top level array nullable.\n   /// \\param[in, out] context for use when allocating memory, etc.\n   /// \\param[out] write_leaf_callback Callback to receive results.\n-  /// There will be one call to the write_leaf_callback for\n+  /// There will be one call to the write_leaf_callback for each leaf node.\n   static ::arrow::Status Write(const ::arrow::Array& array, bool array_nullable,\n                                ArrowWriteContext* context,\n                                CallbackFunction write_leaf_callback);\n \n+  /// \\brief Construct a new instance of the builder.\n+  ///\n+  /// \\param[in] array The array to process.\n+  /// \\param[in] array_nullable Whether the algorithm should consider\n+  ///   the elements in the top level array nullable.\n+  static ::arrow::Result<std::unique_ptr<MultipathLevelBuilder>> Create(\n \n Review comment:\n   done.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-13T05:50:36.041+0000",
                    "updated": "2020-03-13T05:50:36.041+0000",
                    "started": "2020-03-13T05:50:36.041+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "402672",
                    "issueId": "13282814"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13282814/worklog/402673",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #6586: ARROW-7741: [C++] Adds parquet write support for nested types\nURL: https://github.com/apache/arrow/pull/6586#discussion_r392026760\n \n \n\n ##########\n File path: cpp/src/parquet/arrow/path_internal.h\n ##########\n @@ -115,16 +116,41 @@ class PARQUET_EXPORT MultipathLevelBuilder {\n   ///   the elements in the top level array nullable.\n   /// \\param[in, out] context for use when allocating memory, etc.\n   /// \\param[out] write_leaf_callback Callback to receive results.\n-  /// There will be one call to the write_leaf_callback for\n+  /// There will be one call to the write_leaf_callback for each leaf node.\n   static ::arrow::Status Write(const ::arrow::Array& array, bool array_nullable,\n                                ArrowWriteContext* context,\n                                CallbackFunction write_leaf_callback);\n \n+  /// \\brief Construct a new instance of the builder.\n+  ///\n+  /// \\param[in] array The array to process.\n+  /// \\param[in] array_nullable Whether the algorithm should consider\n+  ///   the elements in the top level array nullable.\n+  static ::arrow::Result<std::unique_ptr<MultipathLevelBuilder>> Create(\n+      const ::arrow::Array& array, bool array_nullable);\n+\n+  ~MultipathLevelBuilder();\n+\n+  /// \\brief Returns the number of leaf columns that need to be written\n+  /// to Parquet.\n+  int GetLeafCount() const;\n+\n+  /// \\brief Calls write_leaf_callback with the MultipathLevelBuilderResult corresponding\n+  /// to |leaf_index|.\n+\n+  /// \\param[in] The index of the leaf column to write.  Must be in the range [0,\n+  /// GetLeafCount()]. \\param[in, out] context for use when allocating memory, etc.\n+  /// \\param[out] write_leaf_callback Callback to receive the result.\n+  ::arrow::Status Write(int leaf_index, ArrowWriteContext* context,\n+                        CallbackFunction write_leaf_callback);\n+\n  private:\n-  MultipathLevelBuilder();\n+  class Impl;\n+  MultipathLevelBuilder(Impl* impl);\n   // Not copyable.\n   MultipathLevelBuilder(const MultipathLevelBuilder&) = delete;\n   MultipathLevelBuilder& operator=(const MultipathLevelBuilder&) = delete;\n+  Impl* impl_;\n \n Review comment:\n   I went back and forth on this.  I though the custom destruct was easier to understand, do you know if there is a strong pattern established in the code base for pimpl?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-13T05:50:36.044+0000",
                    "updated": "2020-03-13T05:50:36.044+0000",
                    "started": "2020-03-13T05:50:36.044+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "402673",
                    "issueId": "13282814"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
            "id": "7",
            "description": "The sub-task of the issue",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
            "name": "Sub-task",
            "subtask": true,
            "avatarId": 21146
        },
        "timespent": 21600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@65b4c7ca[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7ca1c68c[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1acd7ad4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@68aa5aa7[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3502ded8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@4f999d65[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3e735598[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@4365f93[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@27e1a5d3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@241076ff[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@eb3870[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@36173539[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 21600,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Mar 27 17:15:24 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-03-27T17:15:24.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7741/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-02-02T05:47:37.000+0000",
        "updated": "2020-03-27T18:31:24.000+0000",
        "timeoriginalestimate": null,
        "description": "This is likely going to be a decent amount of changes we should isolate them behind a feature flag.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "6h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 21600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Parquet] Incorporate new level generation logic in parquet write path with a flag to revert back to old logic",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13282814/comment/17068914",
                    "id": "17068914",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 6586\n[https://github.com/apache/arrow/pull/6586]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-03-27T17:15:24.593+0000",
                    "updated": "2020-03-27T17:15:24.593+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0b2sw:",
        "customfield_12314139": null
    }
}