{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13423766",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423766",
    "key": "ARROW-15389",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351051",
                "id": "12351051",
                "description": "",
                "name": "8.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-05-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12631641",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12631641",
                "type": {
                    "id": "10001",
                    "name": "dependent",
                    "inward": "is depended upon by",
                    "outward": "depends upon",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10001"
                },
                "outwardIssue": {
                    "id": "13377860",
                    "key": "ARROW-12735",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377860",
                    "fields": {
                        "summary": "[C++][Dev] Write gdb plugin",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/5",
                            "id": "5",
                            "description": "General wishlist item.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Wish",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334506",
                "id": "12334506",
                "name": "Developer Tools"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "aggregateprogress": {
            "progress": 9000,
            "total": 9000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 9000,
            "total": 9000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15389/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 15,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423766/worklog/718860",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou opened a new pull request #12315:\nURL: https://github.com/apache/arrow/pull/12315\n\n\n   When printing a arrow::Array or arrow::ArrayData, try to print the array contents as well as its metadata.\r\n   \r\n   This is implemented for all primitive and binary-like types.\r\n   Other types will only display the array metadata.\r\n   \r\n   Example:\r\n   ```\r\n   (gdb) p *heap_binary_array.get()\r\n   $23 = arrow::BinaryArray of length 3, offset 0, null count 1 = {[0] = null, [1] = \"abcd\", [2] = \"\\000\\037\\377\"}\r\n   ```\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-01T18:07:25.199+0000",
                    "updated": "2022-02-01T18:07:25.199+0000",
                    "started": "2022-02-01T18:07:25.199+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "718860",
                    "issueId": "13423766"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423766/worklog/718861",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #12315:\nURL: https://github.com/apache/arrow/pull/12315#issuecomment-1027137304\n\n\n   https://issues.apache.org/jira/browse/ARROW-15389\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-01T18:07:47.916+0000",
                    "updated": "2022-02-01T18:07:47.916+0000",
                    "started": "2022-02-01T18:07:47.915+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "718861",
                    "issueId": "13423766"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423766/worklog/722828",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #12315:\nURL: https://github.com/apache/arrow/pull/12315#discussion_r801611235\n\n\n\n##########\nFile path: python/pyarrow/tests/test_gdb.py\n##########\n@@ -772,27 +784,227 @@ def test_scalars_heap(gdb_arrow):\n def test_array_data(gdb_arrow):\n     check_stack_repr(\n         gdb_arrow, \"int32_array_data\",\n-        \"arrow::ArrayData of type arrow::int32(), length 4, null count 1\")\n+        (\"arrow::ArrayData of type arrow::int32(), length 4, offset 0, \"\n+         \"null count 1 = {[0] = -5, [1] = 6, [2] = null, [3] = 42}\"))\n \n \n def test_arrays_stack(gdb_arrow):\n     check_stack_repr(\n         gdb_arrow, \"int32_array\",\n-        \"arrow::Int32Array of length 4, null count 1\")\n+        (\"arrow::Int32Array of length 4, offset 0, null count 1 = \"\n+         \"{[0] = -5, [1] = 6, [2] = null, [3] = 42}\"))\n     check_stack_repr(\n         gdb_arrow, \"list_array\",\n         (\"arrow::ListArray of type arrow::list(arrow::int64()), \"\n-         \"length 3, null count 1\"))\n+         \"length 3, offset 0, null count 1\"))\n \n \n def test_arrays_heap(gdb_arrow):\n+    # Null\n+    check_heap_repr(\n+        gdb_arrow, \"heap_null_array\",\n+        \"arrow::NullArray of length 2, offset 0, null count 2\")\n+\n+    # Primitive\n     check_heap_repr(\n         gdb_arrow, \"heap_int32_array\",\n-        \"arrow::Int32Array of length 4, null count 1\")\n+        (\"arrow::Int32Array of length 4, offset 0, null count 1 = {\"\n+         \"[0] = -5, [1] = 6, [2] = null, [3] = 42}\"))\n+    check_heap_repr(\n+        gdb_arrow, \"heap_int32_array_no_nulls\",\n+        (\"arrow::Int32Array of length 4, offset 0, null count 0 = {\"\n+         \"[0] = -5, [1] = 6, [2] = 3, [3] = 42}\"))\n+    check_heap_repr(\n+        gdb_arrow, \"heap_int32_array_sliced_1_9\",\n+        (\"arrow::Int32Array of length 9, offset 1, unknown null count = {\"\n+         \"[0] = 2, [1] = -3, [2] = 4, [3] = null, [4] = -5, [5] = 6, \"\n+         \"[6] = -7, [7] = 8, [8] = null}\"))\n+    check_heap_repr(\n+        gdb_arrow, \"heap_int32_array_sliced_2_6\",\n+        (\"arrow::Int32Array of length 6, offset 2, unknown null count = {\"\n+         \"[0] = -3, [1] = 4, [2] = null, [3] = -5, [4] = 6, [5] = -7}\"))\n+    check_heap_repr(\n+        gdb_arrow, \"heap_int32_array_sliced_8_4\",\n+        (\"arrow::Int32Array of length 4, offset 8, unknown null count = {\"\n+         \"[0] = 8, [1] = null, [2] = -9, [3] = -10}\"))\n+    check_heap_repr(\n+        gdb_arrow, \"heap_int32_array_sliced_empty\",\n+        \"arrow::Int32Array of length 0, offset 6, unknown null count\")\n+\n+    check_heap_repr(\n+        gdb_arrow, \"heap_double_array\",\n+        (\"arrow::DoubleArray of length 2, offset 0, null count 1 = {\"\n+         \"[0] = -1.5, [1] = null}\"))\n+    check_heap_repr(\n+        gdb_arrow, \"heap_float16_array\",\n+        (\"arrow::HalfFloatArray of length 2, offset 0, null count 0 = {\"\n+         \"[0] = 0.0, [1] = -1.5}\"))\n+\n+    # Boolean\n+    check_heap_repr(\n+        gdb_arrow, \"heap_bool_array\",\n+        (\"arrow::BooleanArray of length 18, offset 0, null count 6 = {\"\n+         \"[0] = false, [1] = false, [2] = true, [3] = true, [4] = null, \"\n+         \"[5] = null, [6] = false, [7] = false, [8] = true, [9] = true, \"\n+         \"[10] = null, [11] = null, [12] = false, [13] = false, \"\n+         \"[14] = true, [15] = true, [16] = null, [17] = null}\"))\n\nReview comment:\n       Do we want to cut off or ellipsize the repr if the array is too long? Otherwise it might be surprising during a debugging session.\n\n##########\nFile path: cpp/src/arrow/python/gdb.cc\n##########\n@@ -394,15 +408,100 @@ void TestSession() {\n   auto heap_map_scalar_null = MakeNullScalar(heap_map_scalar->type);\n \n   // Array and ArrayData\n-  std::shared_ptr<Array> heap_int32_array;\n-  ARROW_CHECK_OK(ArrayFromJSON(int32(), \"[-5, 6, null, 42]\", &heap_int32_array));\n+  auto heap_null_array = SliceArrayFromJSON(null(), \"[null, null]\");\n+\n+  auto heap_int32_array = SliceArrayFromJSON(int32(), \"[-5, 6, null, 42]\");\n   ArrayData int32_array_data{*heap_int32_array->data()};\n   Int32Array int32_array{heap_int32_array->data()->Copy()};\n \n-  std::shared_ptr<Array> heap_list_array;\n-  ARROW_CHECK_OK(ArrayFromJSON(list(int64()), \"[[1, 2], null, []]\", &heap_list_array));\n+  auto heap_int32_array_no_nulls = SliceArrayFromJSON(int32(), \"[-5, 6, 3, 42]\");\n+\n+  const char* json_int32_array = \"[-1, 2, -3, 4, null, -5, 6, -7, 8, null, -9, -10]\";\n+  auto heap_int32_array_sliced_1_9 = SliceArrayFromJSON(int32(), json_int32_array, 1, 9);\n+  auto heap_int32_array_sliced_2_6 = SliceArrayFromJSON(int32(), json_int32_array, 2, 6);\n+  auto heap_int32_array_sliced_8_4 = SliceArrayFromJSON(int32(), json_int32_array, 8, 4);\n+  auto heap_int32_array_sliced_empty =\n+      SliceArrayFromJSON(int32(), json_int32_array, 6, 0);\n+\n+  const char* json_bool_array =\n+      \"[false, false, true, true, null, null, false, false, true, true, \"\n+      \"null, null, false, false, true, true, null, null]\";\n+  auto heap_bool_array = SliceArrayFromJSON(boolean(), json_bool_array);\n+  auto heap_bool_array_sliced_1_9 = SliceArrayFromJSON(boolean(), json_bool_array, 1, 9);\n+  auto heap_bool_array_sliced_2_6 = SliceArrayFromJSON(boolean(), json_bool_array, 2, 6);\n+  auto heap_bool_array_sliced_empty =\n+      SliceArrayFromJSON(boolean(), json_bool_array, 6, 0);\n+\n+  auto heap_list_array = SliceArrayFromJSON(list(int64()), \"[[1, 2], null, []]\");\n   ListArray list_array{heap_list_array->data()};\n \n+  const char* json_double_array = \"[-1.5, null]\";\n+  auto heap_double_array = SliceArrayFromJSON(float64(), json_double_array);\n+\n+  const char* json_float16_array = \"[0, 48640]\";\n+  auto heap_float16_array =\n+      *SliceArrayFromJSON(uint16(), json_float16_array)->View(float16());\n+\n+  auto heap_date32_array =\n+      SliceArrayFromJSON(date32(), \"[0, null, 18336, -9004, -719162, -719163]\");\n+  auto heap_date64_array = SliceArrayFromJSON(\n+      date64(), \"[1584230400000, -777945600000, -62135596800000, -62135683200000, 123]\");\n+\n+  const char* json_time_array = \"[null, -123, 456]\";\n+  auto heap_time32_array_s =\n+      SliceArrayFromJSON(time32(TimeUnit::SECOND), json_time_array);\n+  auto heap_time32_array_ms =\n+      SliceArrayFromJSON(time32(TimeUnit::MILLI), json_time_array);\n+  auto heap_time64_array_us =\n+      SliceArrayFromJSON(time64(TimeUnit::MICRO), json_time_array);\n+  auto heap_time64_array_ns = SliceArrayFromJSON(time64(TimeUnit::NANO), json_time_array);\n+\n+  auto heap_month_interval_array =\n+      SliceArrayFromJSON(month_interval(), \"[123, -456, null]\");\n+  auto heap_day_time_interval_array =\n+      SliceArrayFromJSON(day_time_interval(), \"[[1, -600], null]\");\n+  auto heap_month_day_nano_interval_array =\n+      SliceArrayFromJSON(month_day_nano_interval(), \"[[1, -600, 5000], null]\");\n+\n+  const char* json_duration_array = \"[null, -1234567890123456789]\";\n+  auto heap_duration_array_s =\n+      SliceArrayFromJSON(duration(TimeUnit::SECOND), json_duration_array);\n+  auto heap_duration_array_ns =\n+      SliceArrayFromJSON(duration(TimeUnit::NANO), json_duration_array);\n+\n+  auto heap_timestamp_array_s = SliceArrayFromJSON(\n+      timestamp(TimeUnit::SECOND),\n+      R\"([null, \"1970-01-01 00:00:00\", \"1900-02-28 12:34:56\", \"3989-07-14 00:00:00\"])\");\n+  auto heap_timestamp_array_ms = SliceArrayFromJSON(\n+      timestamp(TimeUnit::MILLI),\n+      R\"([null, \"1900-02-28 12:34:56.123\", \"3989-07-14 00:00:00.789\"])\");\n+  auto heap_timestamp_array_us = SliceArrayFromJSON(\n+      timestamp(TimeUnit::MICRO),\n+      R\"([null, \"1900-02-28 12:34:56.654321\", \"3989-07-14 00:00:00.456789\"])\");\n+  auto heap_timestamp_array_ns = SliceArrayFromJSON(\n+      timestamp(TimeUnit::NANO), R\"([null, \"1900-02-28 12:34:56.987654321\"])\");\n+\n+  auto heap_decimal128_array = SliceArrayFromJSON(\n+      decimal128(30, 6),\n+      R\"([null, \"-1234567890123456789.012345\", \"1234567890123456789.012345\"])\");\n+  auto heap_decimal256_array = SliceArrayFromJSON(\n+      decimal256(50, 6), R\"([null, \"-123456789012345678901234567890123456789.012345\"])\");\n+  auto heap_decimal128_array_sliced = heap_decimal128_array->Slice(1, 1);\n+\n+  auto heap_fixed_size_binary_array =\n+      SliceArrayFromJSON(fixed_size_binary(3), \"[null, \\\"abc\\\", \\\"\\\\u0000\\\\u001f\\xff\\\"]\");\n+  auto heap_fixed_size_binary_array_zero_width =\n+      SliceArrayFromJSON(fixed_size_binary(0), R\"([null, \"\"])\");\n+  auto heap_fixed_size_binary_array_sliced = heap_fixed_size_binary_array->Slice(1, 1);\n+\n+  const char* json_binary_array = \"[null, \\\"abcd\\\", \\\"\\\\u0000\\\\u001f\\xff\\\"]\";\n+  auto heap_binary_array = SliceArrayFromJSON(binary(), json_binary_array);\n+  auto heap_large_binary_array = SliceArrayFromJSON(large_binary(), json_binary_array);\n+  const char* json_string_array = \"[null, \\\"h\u00e9h\u00e9\\\", \\\"invalid \\xff char\\\"]\";\n+  auto heap_string_array = SliceArrayFromJSON(utf8(), json_string_array);\n+  auto heap_large_string_array = SliceArrayFromJSON(large_utf8(), json_string_array);\n+  auto heap_binary_array_sliced = heap_binary_array->Slice(1, 1);\n+\n\nReview comment:\n       How do union arrays print?\n\n##########\nFile path: cpp/gdb_arrow.py\n##########\n@@ -1230,15 +1532,245 @@ def type(self):\n         return cast_to_concrete(deref(self.val['type']), concrete_type)\n \n     def _format_contents(self):\n-        return (f\"length {self.val['length']}, \"\n+        return (f\"length {self.length}, \"\n+                f\"offset {self.offset}, \"\n                 f\"{format_null_count(self.val['null_count'])}\")\n \n+    def _buffer(self, index, type_id=None):\n+        buffers = StdVector(self.val['buffers'])\n+        bufptr = SharedPtr(buffers[index]).get()\n+        if int(bufptr) == 0:\n+            return None\n+        if type_id is not None:\n+            return TypedBuffer.from_type_id(bufptr.dereference(), type_id)\n+        else:\n+            return Buffer(bufptr.dereference())\n+\n+    def _buffer_values(self, index, type_id, length=None):\n+        \"\"\"\n+        Return a typed view of values in the buffer with the given index.\n+\n+        Values are returned as tuples since some types may decode to\n+        multiple values (for example day_time_interval).\n+        \"\"\"\n+        buf = self._buffer(index, type_id)\n+        if buf is None:\n+            return None\n+        if length is None:\n+            length = self.length\n+        return buf.view(self.offset, length)\n+\n+    def _unpacked_buffer_values(self, index, type_id, length=None):\n+        \"\"\"\n+        Like _buffer_values(), but assumes values are 1-tuples\n+        and returns them unpacked.\n+        \"\"\"\n+        return StarMappedView(identity,\n+                              self._buffer_values(index, type_id, length))\n+\n+    def _null_bitmap(self):\n+        buf = self._buffer(0) if has_null_bitmap(self.type_id) else None\n+        return NullBitmap.from_buffer(buf, self.offset, self.length)\n+\n+    def display_hint(self):\n+        return None\n+\n+    def children(self):\n+        return ()\n+\n     def to_string(self):\n         ty = self.type\n         return (f\"{self.name} of type {ty}, \"\n                 f\"{self._format_contents()}\")\n \n \n+class NumericArrayDataPrinter(ArrayDataPrinter):\n+    \"\"\"\n+    ArrayDataPrinter specialization for numeric data types.\n+    \"\"\"\n+    _format_value = staticmethod(identity)\n+\n+    def _values_view(self):\n+        return StarMappedView(self._format_value,\n+                              self._buffer_values(1, self.type_id))\n+\n+    def display_hint(self):\n+        return \"array\"\n+\n+    def children(self):\n\nReview comment:\n       Would it make sense to push this loop for printing values up into the superclass or into ArrayPrinter, and then subclasses only have to worry about formatting individual values? It would presumably then be easier to cut off or omit values to shorten the representation.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-08T13:17:28.147+0000",
                    "updated": "2022-02-08T13:17:28.147+0000",
                    "started": "2022-02-08T13:17:28.146+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "722828",
                    "issueId": "13423766"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423766/worklog/722829",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #12315:\nURL: https://github.com/apache/arrow/pull/12315#discussion_r801619963\n\n\n\n##########\nFile path: cpp/src/arrow/python/gdb.cc\n##########\n@@ -394,15 +408,100 @@ void TestSession() {\n   auto heap_map_scalar_null = MakeNullScalar(heap_map_scalar->type);\n \n   // Array and ArrayData\n-  std::shared_ptr<Array> heap_int32_array;\n-  ARROW_CHECK_OK(ArrayFromJSON(int32(), \"[-5, 6, null, 42]\", &heap_int32_array));\n+  auto heap_null_array = SliceArrayFromJSON(null(), \"[null, null]\");\n+\n+  auto heap_int32_array = SliceArrayFromJSON(int32(), \"[-5, 6, null, 42]\");\n   ArrayData int32_array_data{*heap_int32_array->data()};\n   Int32Array int32_array{heap_int32_array->data()->Copy()};\n \n-  std::shared_ptr<Array> heap_list_array;\n-  ARROW_CHECK_OK(ArrayFromJSON(list(int64()), \"[[1, 2], null, []]\", &heap_list_array));\n+  auto heap_int32_array_no_nulls = SliceArrayFromJSON(int32(), \"[-5, 6, 3, 42]\");\n+\n+  const char* json_int32_array = \"[-1, 2, -3, 4, null, -5, 6, -7, 8, null, -9, -10]\";\n+  auto heap_int32_array_sliced_1_9 = SliceArrayFromJSON(int32(), json_int32_array, 1, 9);\n+  auto heap_int32_array_sliced_2_6 = SliceArrayFromJSON(int32(), json_int32_array, 2, 6);\n+  auto heap_int32_array_sliced_8_4 = SliceArrayFromJSON(int32(), json_int32_array, 8, 4);\n+  auto heap_int32_array_sliced_empty =\n+      SliceArrayFromJSON(int32(), json_int32_array, 6, 0);\n+\n+  const char* json_bool_array =\n+      \"[false, false, true, true, null, null, false, false, true, true, \"\n+      \"null, null, false, false, true, true, null, null]\";\n+  auto heap_bool_array = SliceArrayFromJSON(boolean(), json_bool_array);\n+  auto heap_bool_array_sliced_1_9 = SliceArrayFromJSON(boolean(), json_bool_array, 1, 9);\n+  auto heap_bool_array_sliced_2_6 = SliceArrayFromJSON(boolean(), json_bool_array, 2, 6);\n+  auto heap_bool_array_sliced_empty =\n+      SliceArrayFromJSON(boolean(), json_bool_array, 6, 0);\n+\n+  auto heap_list_array = SliceArrayFromJSON(list(int64()), \"[[1, 2], null, []]\");\n   ListArray list_array{heap_list_array->data()};\n \n+  const char* json_double_array = \"[-1.5, null]\";\n+  auto heap_double_array = SliceArrayFromJSON(float64(), json_double_array);\n+\n+  const char* json_float16_array = \"[0, 48640]\";\n+  auto heap_float16_array =\n+      *SliceArrayFromJSON(uint16(), json_float16_array)->View(float16());\n+\n+  auto heap_date32_array =\n+      SliceArrayFromJSON(date32(), \"[0, null, 18336, -9004, -719162, -719163]\");\n+  auto heap_date64_array = SliceArrayFromJSON(\n+      date64(), \"[1584230400000, -777945600000, -62135596800000, -62135683200000, 123]\");\n+\n+  const char* json_time_array = \"[null, -123, 456]\";\n+  auto heap_time32_array_s =\n+      SliceArrayFromJSON(time32(TimeUnit::SECOND), json_time_array);\n+  auto heap_time32_array_ms =\n+      SliceArrayFromJSON(time32(TimeUnit::MILLI), json_time_array);\n+  auto heap_time64_array_us =\n+      SliceArrayFromJSON(time64(TimeUnit::MICRO), json_time_array);\n+  auto heap_time64_array_ns = SliceArrayFromJSON(time64(TimeUnit::NANO), json_time_array);\n+\n+  auto heap_month_interval_array =\n+      SliceArrayFromJSON(month_interval(), \"[123, -456, null]\");\n+  auto heap_day_time_interval_array =\n+      SliceArrayFromJSON(day_time_interval(), \"[[1, -600], null]\");\n+  auto heap_month_day_nano_interval_array =\n+      SliceArrayFromJSON(month_day_nano_interval(), \"[[1, -600, 5000], null]\");\n+\n+  const char* json_duration_array = \"[null, -1234567890123456789]\";\n+  auto heap_duration_array_s =\n+      SliceArrayFromJSON(duration(TimeUnit::SECOND), json_duration_array);\n+  auto heap_duration_array_ns =\n+      SliceArrayFromJSON(duration(TimeUnit::NANO), json_duration_array);\n+\n+  auto heap_timestamp_array_s = SliceArrayFromJSON(\n+      timestamp(TimeUnit::SECOND),\n+      R\"([null, \"1970-01-01 00:00:00\", \"1900-02-28 12:34:56\", \"3989-07-14 00:00:00\"])\");\n+  auto heap_timestamp_array_ms = SliceArrayFromJSON(\n+      timestamp(TimeUnit::MILLI),\n+      R\"([null, \"1900-02-28 12:34:56.123\", \"3989-07-14 00:00:00.789\"])\");\n+  auto heap_timestamp_array_us = SliceArrayFromJSON(\n+      timestamp(TimeUnit::MICRO),\n+      R\"([null, \"1900-02-28 12:34:56.654321\", \"3989-07-14 00:00:00.456789\"])\");\n+  auto heap_timestamp_array_ns = SliceArrayFromJSON(\n+      timestamp(TimeUnit::NANO), R\"([null, \"1900-02-28 12:34:56.987654321\"])\");\n+\n+  auto heap_decimal128_array = SliceArrayFromJSON(\n+      decimal128(30, 6),\n+      R\"([null, \"-1234567890123456789.012345\", \"1234567890123456789.012345\"])\");\n+  auto heap_decimal256_array = SliceArrayFromJSON(\n+      decimal256(50, 6), R\"([null, \"-123456789012345678901234567890123456789.012345\"])\");\n+  auto heap_decimal128_array_sliced = heap_decimal128_array->Slice(1, 1);\n+\n+  auto heap_fixed_size_binary_array =\n+      SliceArrayFromJSON(fixed_size_binary(3), \"[null, \\\"abc\\\", \\\"\\\\u0000\\\\u001f\\xff\\\"]\");\n+  auto heap_fixed_size_binary_array_zero_width =\n+      SliceArrayFromJSON(fixed_size_binary(0), R\"([null, \"\"])\");\n+  auto heap_fixed_size_binary_array_sliced = heap_fixed_size_binary_array->Slice(1, 1);\n+\n+  const char* json_binary_array = \"[null, \\\"abcd\\\", \\\"\\\\u0000\\\\u001f\\xff\\\"]\";\n+  auto heap_binary_array = SliceArrayFromJSON(binary(), json_binary_array);\n+  auto heap_large_binary_array = SliceArrayFromJSON(large_binary(), json_binary_array);\n+  const char* json_string_array = \"[null, \\\"h\u00e9h\u00e9\\\", \\\"invalid \\xff char\\\"]\";\n+  auto heap_string_array = SliceArrayFromJSON(utf8(), json_string_array);\n+  auto heap_large_string_array = SliceArrayFromJSON(large_utf8(), json_string_array);\n+  auto heap_binary_array_sliced = heap_binary_array->Slice(1, 1);\n+\n\nReview comment:\n       Oh I see, this is only for numeric/binary-like. Fair enough.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-08T13:18:02.669+0000",
                    "updated": "2022-02-08T13:18:02.669+0000",
                    "started": "2022-02-08T13:18:02.668+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "722829",
                    "issueId": "13423766"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423766/worklog/723507",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #12315:\nURL: https://github.com/apache/arrow/pull/12315#discussion_r802401464\n\n\n\n##########\nFile path: python/pyarrow/tests/test_gdb.py\n##########\n@@ -772,27 +784,227 @@ def test_scalars_heap(gdb_arrow):\n def test_array_data(gdb_arrow):\n     check_stack_repr(\n         gdb_arrow, \"int32_array_data\",\n-        \"arrow::ArrayData of type arrow::int32(), length 4, null count 1\")\n+        (\"arrow::ArrayData of type arrow::int32(), length 4, offset 0, \"\n+         \"null count 1 = {[0] = -5, [1] = 6, [2] = null, [3] = 42}\"))\n \n \n def test_arrays_stack(gdb_arrow):\n     check_stack_repr(\n         gdb_arrow, \"int32_array\",\n-        \"arrow::Int32Array of length 4, null count 1\")\n+        (\"arrow::Int32Array of length 4, offset 0, null count 1 = \"\n+         \"{[0] = -5, [1] = 6, [2] = null, [3] = 42}\"))\n     check_stack_repr(\n         gdb_arrow, \"list_array\",\n         (\"arrow::ListArray of type arrow::list(arrow::int64()), \"\n-         \"length 3, null count 1\"))\n+         \"length 3, offset 0, null count 1\"))\n \n \n def test_arrays_heap(gdb_arrow):\n+    # Null\n+    check_heap_repr(\n+        gdb_arrow, \"heap_null_array\",\n+        \"arrow::NullArray of length 2, offset 0, null count 2\")\n+\n+    # Primitive\n     check_heap_repr(\n         gdb_arrow, \"heap_int32_array\",\n-        \"arrow::Int32Array of length 4, null count 1\")\n+        (\"arrow::Int32Array of length 4, offset 0, null count 1 = {\"\n+         \"[0] = -5, [1] = 6, [2] = null, [3] = 42}\"))\n+    check_heap_repr(\n+        gdb_arrow, \"heap_int32_array_no_nulls\",\n+        (\"arrow::Int32Array of length 4, offset 0, null count 0 = {\"\n+         \"[0] = -5, [1] = 6, [2] = 3, [3] = 42}\"))\n+    check_heap_repr(\n+        gdb_arrow, \"heap_int32_array_sliced_1_9\",\n+        (\"arrow::Int32Array of length 9, offset 1, unknown null count = {\"\n+         \"[0] = 2, [1] = -3, [2] = 4, [3] = null, [4] = -5, [5] = 6, \"\n+         \"[6] = -7, [7] = 8, [8] = null}\"))\n+    check_heap_repr(\n+        gdb_arrow, \"heap_int32_array_sliced_2_6\",\n+        (\"arrow::Int32Array of length 6, offset 2, unknown null count = {\"\n+         \"[0] = -3, [1] = 4, [2] = null, [3] = -5, [4] = 6, [5] = -7}\"))\n+    check_heap_repr(\n+        gdb_arrow, \"heap_int32_array_sliced_8_4\",\n+        (\"arrow::Int32Array of length 4, offset 8, unknown null count = {\"\n+         \"[0] = 8, [1] = null, [2] = -9, [3] = -10}\"))\n+    check_heap_repr(\n+        gdb_arrow, \"heap_int32_array_sliced_empty\",\n+        \"arrow::Int32Array of length 0, offset 6, unknown null count\")\n+\n+    check_heap_repr(\n+        gdb_arrow, \"heap_double_array\",\n+        (\"arrow::DoubleArray of length 2, offset 0, null count 1 = {\"\n+         \"[0] = -1.5, [1] = null}\"))\n+    check_heap_repr(\n+        gdb_arrow, \"heap_float16_array\",\n+        (\"arrow::HalfFloatArray of length 2, offset 0, null count 0 = {\"\n+         \"[0] = 0.0, [1] = -1.5}\"))\n+\n+    # Boolean\n+    check_heap_repr(\n+        gdb_arrow, \"heap_bool_array\",\n+        (\"arrow::BooleanArray of length 18, offset 0, null count 6 = {\"\n+         \"[0] = false, [1] = false, [2] = true, [3] = true, [4] = null, \"\n+         \"[5] = null, [6] = false, [7] = false, [8] = true, [9] = true, \"\n+         \"[10] = null, [11] = null, [12] = false, [13] = false, \"\n+         \"[14] = true, [15] = true, [16] = null, [17] = null}\"))\n\nReview comment:\n       AFAIU, gdb does that automatically with the results we provide it. See the doc for the `children()` method:\r\n   https://sourceware.org/gdb/onlinedocs/gdb/Pretty-Printing-API.html\r\n   \r\n   > For efficiency, the children method should lazily compute its results. This will let GDB read as few elements as necessary, for example when various print settings (see [Print Settings](https://sourceware.org/gdb/onlinedocs/gdb/Print-Settings.html#Print-Settings)) or -var-list-children (see [GDB/MI Variable Objects](https://sourceware.org/gdb/onlinedocs/gdb/GDB_002fMI-Variable-Objects.html#GDB_002fMI-Variable-Objects)) limit the number of elements to be displayed.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-09T08:47:00.212+0000",
                    "updated": "2022-02-09T08:47:00.212+0000",
                    "started": "2022-02-09T08:47:00.212+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "723507",
                    "issueId": "13423766"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423766/worklog/723562",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #12315:\nURL: https://github.com/apache/arrow/pull/12315#discussion_r802522459\n\n\n\n##########\nFile path: cpp/gdb_arrow.py\n##########\n@@ -1230,15 +1532,245 @@ def type(self):\n         return cast_to_concrete(deref(self.val['type']), concrete_type)\n \n     def _format_contents(self):\n-        return (f\"length {self.val['length']}, \"\n+        return (f\"length {self.length}, \"\n+                f\"offset {self.offset}, \"\n                 f\"{format_null_count(self.val['null_count'])}\")\n \n+    def _buffer(self, index, type_id=None):\n+        buffers = StdVector(self.val['buffers'])\n+        bufptr = SharedPtr(buffers[index]).get()\n+        if int(bufptr) == 0:\n+            return None\n+        if type_id is not None:\n+            return TypedBuffer.from_type_id(bufptr.dereference(), type_id)\n+        else:\n+            return Buffer(bufptr.dereference())\n+\n+    def _buffer_values(self, index, type_id, length=None):\n+        \"\"\"\n+        Return a typed view of values in the buffer with the given index.\n+\n+        Values are returned as tuples since some types may decode to\n+        multiple values (for example day_time_interval).\n+        \"\"\"\n+        buf = self._buffer(index, type_id)\n+        if buf is None:\n+            return None\n+        if length is None:\n+            length = self.length\n+        return buf.view(self.offset, length)\n+\n+    def _unpacked_buffer_values(self, index, type_id, length=None):\n+        \"\"\"\n+        Like _buffer_values(), but assumes values are 1-tuples\n+        and returns them unpacked.\n+        \"\"\"\n+        return StarMappedView(identity,\n+                              self._buffer_values(index, type_id, length))\n+\n+    def _null_bitmap(self):\n+        buf = self._buffer(0) if has_null_bitmap(self.type_id) else None\n+        return NullBitmap.from_buffer(buf, self.offset, self.length)\n+\n+    def display_hint(self):\n+        return None\n+\n+    def children(self):\n+        return ()\n+\n     def to_string(self):\n         ty = self.type\n         return (f\"{self.name} of type {ty}, \"\n                 f\"{self._format_contents()}\")\n \n \n+class NumericArrayDataPrinter(ArrayDataPrinter):\n+    \"\"\"\n+    ArrayDataPrinter specialization for numeric data types.\n+    \"\"\"\n+    _format_value = staticmethod(identity)\n+\n+    def _values_view(self):\n+        return StarMappedView(self._format_value,\n+                              self._buffer_values(1, self.type_id))\n+\n+    def display_hint(self):\n+        return \"array\"\n+\n+    def children(self):\n\nReview comment:\n       See my answer to the other comment. We shouldn't have to worry about cutting off, gdb will do that for us following the user's printing configuration.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-09T10:41:43.173+0000",
                    "updated": "2022-02-09T10:41:43.173+0000",
                    "started": "2022-02-09T10:41:43.173+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "723562",
                    "issueId": "13423766"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423766/worklog/723575",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #12315:\nURL: https://github.com/apache/arrow/pull/12315#issuecomment-1033627450\n\n\n   @wjones127 \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-09T10:53:03.784+0000",
                    "updated": "2022-02-09T10:53:03.784+0000",
                    "started": "2022-02-09T10:53:03.783+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "723575",
                    "issueId": "13423766"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423766/worklog/723631",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #12315:\nURL: https://github.com/apache/arrow/pull/12315#discussion_r802634807\n\n\n\n##########\nFile path: cpp/gdb_arrow.py\n##########\n@@ -1230,15 +1532,245 @@ def type(self):\n         return cast_to_concrete(deref(self.val['type']), concrete_type)\n \n     def _format_contents(self):\n-        return (f\"length {self.val['length']}, \"\n+        return (f\"length {self.length}, \"\n+                f\"offset {self.offset}, \"\n                 f\"{format_null_count(self.val['null_count'])}\")\n \n+    def _buffer(self, index, type_id=None):\n+        buffers = StdVector(self.val['buffers'])\n+        bufptr = SharedPtr(buffers[index]).get()\n+        if int(bufptr) == 0:\n+            return None\n+        if type_id is not None:\n+            return TypedBuffer.from_type_id(bufptr.dereference(), type_id)\n+        else:\n+            return Buffer(bufptr.dereference())\n+\n+    def _buffer_values(self, index, type_id, length=None):\n+        \"\"\"\n+        Return a typed view of values in the buffer with the given index.\n+\n+        Values are returned as tuples since some types may decode to\n+        multiple values (for example day_time_interval).\n+        \"\"\"\n+        buf = self._buffer(index, type_id)\n+        if buf is None:\n+            return None\n+        if length is None:\n+            length = self.length\n+        return buf.view(self.offset, length)\n+\n+    def _unpacked_buffer_values(self, index, type_id, length=None):\n+        \"\"\"\n+        Like _buffer_values(), but assumes values are 1-tuples\n+        and returns them unpacked.\n+        \"\"\"\n+        return StarMappedView(identity,\n+                              self._buffer_values(index, type_id, length))\n+\n+    def _null_bitmap(self):\n+        buf = self._buffer(0) if has_null_bitmap(self.type_id) else None\n+        return NullBitmap.from_buffer(buf, self.offset, self.length)\n+\n+    def display_hint(self):\n+        return None\n+\n+    def children(self):\n+        return ()\n+\n     def to_string(self):\n         ty = self.type\n         return (f\"{self.name} of type {ty}, \"\n                 f\"{self._format_contents()}\")\n \n \n+class NumericArrayDataPrinter(ArrayDataPrinter):\n+    \"\"\"\n+    ArrayDataPrinter specialization for numeric data types.\n+    \"\"\"\n+    _format_value = staticmethod(identity)\n+\n+    def _values_view(self):\n+        return StarMappedView(self._format_value,\n+                              self._buffer_values(1, self.type_id))\n+\n+    def display_hint(self):\n+        return \"array\"\n+\n+    def children(self):\n\nReview comment:\n       Ah, I see now - that's convenient.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-09T13:00:01.785+0000",
                    "updated": "2022-02-09T13:00:01.785+0000",
                    "started": "2022-02-09T13:00:01.785+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "723631",
                    "issueId": "13423766"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423766/worklog/723910",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 commented on a change in pull request #12315:\nURL: https://github.com/apache/arrow/pull/12315#discussion_r802992022\n\n\n\n##########\nFile path: python/pyarrow/tests/test_gdb.py\n##########\n@@ -39,13 +39,23 @@\n gdb_command = [\"gdb\", \"--nx\"]\n \n \n+def environment_for_gdb():\n+    env = {}\n+    for var in ['PATH', 'LD_LIBRARY_PATH']:\n\nReview comment:\n       Thanks for this change. Was testing out on an MSYS2 environment, and the gdb tests wouldn't work without this.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-09T18:57:03.988+0000",
                    "updated": "2022-02-09T18:57:03.988+0000",
                    "started": "2022-02-09T18:57:03.988+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "723910",
                    "issueId": "13423766"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423766/worklog/724015",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm closed pull request #12315:\nURL: https://github.com/apache/arrow/pull/12315\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-09T20:43:47.213+0000",
                    "updated": "2022-02-09T20:43:47.213+0000",
                    "started": "2022-02-09T20:43:47.213+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "724015",
                    "issueId": "13423766"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423766/worklog/724023",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on pull request #12315:\nURL: https://github.com/apache/arrow/pull/12315#issuecomment-1034180760\n\n\n   Benchmark runs are scheduled for baseline = 9d1b39b3046c735ce973eede7a5b40b05d4040cb and contender = ec3608c4f71e515ae58d7e150801e6a00e7ef70e. ec3608c4f71e515ae58d7e150801e6a00e7ef70e is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Scheduled] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/c61815e41615405284b0cb1c90256c2a...95e9a9305b64476b9112d9190da63014/)\n   [Scheduled] [test-mac-arm](https://conbench.ursa.dev/compare/runs/8adf03ccaf2e49aa83639bcb0889e46c...5ecaca320cf14e919b42954087b10a6e/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/6363dc69472b4055924ecbe37a070f59...dc75e2fca76d4568ab365d2bce566a74/)\n   [Scheduled] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/b4f051fae28048a19a1bc1e5789fee0c...813f5c6ec19b4180bc333bc8eea823c9/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   test-mac-arm: Supported benchmark langs: C++, Python, R\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-09T20:52:05.352+0000",
                    "updated": "2022-02-09T20:52:05.352+0000",
                    "started": "2022-02-09T20:52:05.352+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "724023",
                    "issueId": "13423766"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423766/worklog/724058",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #12315:\nURL: https://github.com/apache/arrow/pull/12315#issuecomment-1034180760\n\n\n   Benchmark runs are scheduled for baseline = 9d1b39b3046c735ce973eede7a5b40b05d4040cb and contender = ec3608c4f71e515ae58d7e150801e6a00e7ef70e. ec3608c4f71e515ae58d7e150801e6a00e7ef70e is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/c61815e41615405284b0cb1c90256c2a...95e9a9305b64476b9112d9190da63014/)\n   [Scheduled] [test-mac-arm](https://conbench.ursa.dev/compare/runs/8adf03ccaf2e49aa83639bcb0889e46c...5ecaca320cf14e919b42954087b10a6e/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/6363dc69472b4055924ecbe37a070f59...dc75e2fca76d4568ab365d2bce566a74/)\n   [Scheduled] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/b4f051fae28048a19a1bc1e5789fee0c...813f5c6ec19b4180bc333bc8eea823c9/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   test-mac-arm: Supported benchmark langs: C++, Python, R\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-09T21:21:53.966+0000",
                    "updated": "2022-02-09T21:21:53.966+0000",
                    "started": "2022-02-09T21:21:53.966+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "724058",
                    "issueId": "13423766"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423766/worklog/724348",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #12315:\nURL: https://github.com/apache/arrow/pull/12315#issuecomment-1034180760\n\n\n   Benchmark runs are scheduled for baseline = 9d1b39b3046c735ce973eede7a5b40b05d4040cb and contender = ec3608c4f71e515ae58d7e150801e6a00e7ef70e. ec3608c4f71e515ae58d7e150801e6a00e7ef70e is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/c61815e41615405284b0cb1c90256c2a...95e9a9305b64476b9112d9190da63014/)\n   [Scheduled] [test-mac-arm](https://conbench.ursa.dev/compare/runs/8adf03ccaf2e49aa83639bcb0889e46c...5ecaca320cf14e919b42954087b10a6e/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/6363dc69472b4055924ecbe37a070f59...dc75e2fca76d4568ab365d2bce566a74/)\n   [Finished :arrow_down:0.26% :arrow_up:0.0%] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/b4f051fae28048a19a1bc1e5789fee0c...813f5c6ec19b4180bc333bc8eea823c9/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   test-mac-arm: Supported benchmark langs: C++, Python, R\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-10T08:11:25.830+0000",
                    "updated": "2022-02-10T08:11:25.830+0000",
                    "started": "2022-02-10T08:11:25.830+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "724348",
                    "issueId": "13423766"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423766/worklog/724442",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #12315:\nURL: https://github.com/apache/arrow/pull/12315#issuecomment-1034180760\n\n\n   Benchmark runs are scheduled for baseline = 9d1b39b3046c735ce973eede7a5b40b05d4040cb and contender = ec3608c4f71e515ae58d7e150801e6a00e7ef70e. ec3608c4f71e515ae58d7e150801e6a00e7ef70e is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/c61815e41615405284b0cb1c90256c2a...95e9a9305b64476b9112d9190da63014/)\n   [Finished :arrow_down:0.38% :arrow_up:0.13%] [test-mac-arm](https://conbench.ursa.dev/compare/runs/8adf03ccaf2e49aa83639bcb0889e46c...5ecaca320cf14e919b42954087b10a6e/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/6363dc69472b4055924ecbe37a070f59...dc75e2fca76d4568ab365d2bce566a74/)\n   [Finished :arrow_down:0.26% :arrow_up:0.0%] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/b4f051fae28048a19a1bc1e5789fee0c...813f5c6ec19b4180bc333bc8eea823c9/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   test-mac-arm: Supported benchmark langs: C++, Python, R\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-10T11:31:38.363+0000",
                    "updated": "2022-02-10T11:31:38.363+0000",
                    "started": "2022-02-10T11:31:38.363+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "724442",
                    "issueId": "13423766"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423766/worklog/724846",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #12315:\nURL: https://github.com/apache/arrow/pull/12315#issuecomment-1034180760\n\n\n   Benchmark runs are scheduled for baseline = 9d1b39b3046c735ce973eede7a5b40b05d4040cb and contender = ec3608c4f71e515ae58d7e150801e6a00e7ef70e. ec3608c4f71e515ae58d7e150801e6a00e7ef70e is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/c61815e41615405284b0cb1c90256c2a...95e9a9305b64476b9112d9190da63014/)\n   [Finished :arrow_down:0.38% :arrow_up:0.13%] [test-mac-arm](https://conbench.ursa.dev/compare/runs/8adf03ccaf2e49aa83639bcb0889e46c...5ecaca320cf14e919b42954087b10a6e/)\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/6363dc69472b4055924ecbe37a070f59...dc75e2fca76d4568ab365d2bce566a74/)\n   [Finished :arrow_down:0.26% :arrow_up:0.0%] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/b4f051fae28048a19a1bc1e5789fee0c...813f5c6ec19b4180bc333bc8eea823c9/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   test-mac-arm: Supported benchmark langs: C++, Python, R\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-10T23:32:10.278+0000",
                    "updated": "2022-02-10T23:32:10.278+0000",
                    "started": "2022-02-10T23:32:10.278+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "724846",
                    "issueId": "13423766"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/5",
            "id": "5",
            "description": "General wishlist item.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Wish",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 9000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@7747e0e0[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@868898a[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1bf533c1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@579dcdec[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1271402a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@2dfe0bb3[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1f275ef6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@266c1253[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3e0476a4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@637a4144[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@460f6333[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@b71f2b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 9000,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Feb 09 20:43:39 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-02-09T20:43:39.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15389/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2022-01-20T14:52:31.000+0000",
        "updated": "2022-02-10T23:32:11.000+0000",
        "timeoriginalestimate": null,
        "description": "Currently the GDB plugin will print basic information about arrays:\r\n{code}\r\n(gdb) p int32_array\r\n$175 = arrow::Int32Array of length 4, null count 1\r\n{code}\r\n\r\nIt would be nice to perhaps display a previsualization of the *data* contained in the array, at least for simple types.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 9000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Dev] Improve Array preview in GDB plugin",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423766/comment/17489801",
                    "id": "17489801",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 12315\n[https://github.com/apache/arrow/pull/12315]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2022-02-09T20:43:39.688+0000",
                    "updated": "2022-02-09T20:43:39.688+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0yrvc:",
        "customfield_12314139": null
    }
}