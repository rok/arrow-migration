{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13372695",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372695",
    "key": "ARROW-12410",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350323",
                "id": "12350323",
                "description": "",
                "name": "6.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-10-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=projjal",
            "name": "projjal",
            "key": "projjal",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
            },
            "displayName": "Projjal Chanda",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334626",
                "id": "12334626",
                "name": "C++ - Gandiva"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rodrigojdebem",
            "name": "rodrigojdebem",
            "key": "rodrigojdebem",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Rodrigo Jacomozzi de Bem",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rodrigojdebem",
            "name": "rodrigojdebem",
            "key": "rodrigojdebem",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Rodrigo Jacomozzi de Bem",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 13800,
            "total": 13800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 13800,
            "total": 13800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12410/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 23,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372695/worklog/583589",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rodrigojdebem opened a new pull request #10059:\nURL: https://github.com/apache/arrow/pull/10059\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-15T17:13:25.924+0000",
                    "updated": "2021-04-15T17:13:25.924+0000",
                    "started": "2021-04-15T17:13:25.924+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "583589",
                    "issueId": "13372695"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372695/worklog/583625",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10059:\nURL: https://github.com/apache/arrow/pull/10059#issuecomment-820610029\n\n\n   <!--\n     Licensed to the Apache Software Foundation (ASF) under one\n     or more contributor license agreements.  See the NOTICE file\n     distributed with this work for additional information\n     regarding copyright ownership.  The ASF licenses this file\n     to you under the Apache License, Version 2.0 (the\n     \"License\"); you may not use this file except in compliance\n     with the License.  You may obtain a copy of the License at\n   \n       http://www.apache.org/licenses/LICENSE-2.0\n   \n     Unless required by applicable law or agreed to in writing,\n     software distributed under the License is distributed on an\n     \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n     KIND, either express or implied.  See the License for the\n     specific language governing permissions and limitations\n     under the License.\n   -->\n   \n   Thanks for opening a pull request!\n   \n   If this is not a [minor PR](https://github.com/apache/arrow/blob/master/CONTRIBUTING.md#Minor-Fixes). Could you open an issue for this pull request on JIRA? https://issues.apache.org/jira/browse/ARROW\n   \n   Opening JIRAs ahead of time contributes to the [Openness](http://theapacheway.com/open/#:~:text=Openness%20allows%20new%20users%20the,must%20happen%20in%20the%20open.) of the Apache Arrow project.\n   \n   Then could you also rename pull request title in the following format?\n   \n       ARROW-${JIRA_ID}: [${COMPONENT}] ${SUMMARY}\n   \n   or\n   \n       MINOR: [${COMPONENT}] ${SUMMARY}\n   \n   See also:\n   \n     * [Other pull requests](https://github.com/apache/arrow/pulls/)\n     * [Contribution Guidelines - How to contribute patches](https://arrow.apache.org/docs/developers/contributing.html#how-to-contribute-patches)\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-15T17:37:47.472+0000",
                    "updated": "2021-04-15T17:37:47.472+0000",
                    "started": "2021-04-15T17:37:47.472+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "583625",
                    "issueId": "13372695"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372695/worklog/583644",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10059:\nURL: https://github.com/apache/arrow/pull/10059#issuecomment-820621984\n\n\n   https://issues.apache.org/jira/browse/ARROW-12410\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-15T17:57:26.144+0000",
                    "updated": "2021-04-15T17:57:26.144+0000",
                    "started": "2021-04-15T17:57:26.144+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "583644",
                    "issueId": "13372695"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372695/worklog/584145",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "projjal commented on a change in pull request #10059:\nURL: https://github.com/apache/arrow/pull/10059#discussion_r614659964\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/string_ops.cc\n##########\n@@ -131,6 +133,16 @@ bool is_substr_utf8_utf8(const char* data, int32_t data_len, const char* substr,\n   return false;\n }\n \n+FORCE_INLINE\n+const char* regexp_replace(const char* regexp, const char* str, const char* replace_string) {\n+    std::string s = str;\n+    std::regex r (regexp);\n\nReview comment:\n       Please use RE2 instead of std::regex. Also use a holder to prevent compiling the pattern on each call. See like_holder.h\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-16T08:31:29.613+0000",
                    "updated": "2021-04-16T08:31:29.613+0000",
                    "started": "2021-04-16T08:31:29.613+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "584145",
                    "issueId": "13372695"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372695/worklog/586637",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "projjal commented on a change in pull request #10059:\nURL: https://github.com/apache/arrow/pull/10059#discussion_r617624562\n\n\n\n##########\nFile path: cpp/src/gandiva/replace_holder.cc\n##########\n@@ -0,0 +1,100 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"gandiva/replace_holder.h\"\n+\n+#include <regex>\n+#include \"gandiva/node.h\"\n+#include \"gandiva/regex_util.h\"\n+\n+namespace gandiva {\n+\n+RE2 LikeHolder::starts_with_regex_(R\"((\\w|\\s)*\\.\\*)\");\n\nReview comment:\n       Looks like you just copy pasted like_function_holder code. This two functions do different things!\n\n##########\nFile path: cpp/src/gandiva/precompiled/string_ops.cc\n##########\n@@ -131,6 +133,16 @@ bool is_substr_utf8_utf8(const char* data, int32_t data_len, const char* substr,\n   return false;\n }\n \n+FORCE_INLINE\n+const char* regexp_replace(const char* regexp, const char* str, const char* replace_string) {\n+    std::string s = str;\n+    std::regex r (regexp);\n\nReview comment:\n       I meant for to not use this function and use a function holder instead. Looks like you just added a holder and not using that and instead still calling this function\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-21T14:58:24.122+0000",
                    "updated": "2021-04-21T14:58:24.122+0000",
                    "started": "2021-04-21T14:58:24.122+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "586637",
                    "issueId": "13372695"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372695/worklog/589442",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "anthonylouisbsb commented on a change in pull request #10059:\nURL: https://github.com/apache/arrow/pull/10059#discussion_r620635496\n\n\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -42,6 +43,12 @@ bool gdv_fn_like_utf8_utf8(int64_t ptr, const char* data, int data_len,\n   return (*holder)(std::string(data, data_len));\n }\n \n+const char* gdv_fn_regexp_replace_utf8_utf8(int64_t ptr, const char* data, int data_len,\n\nReview comment:\n       The stub function needs to accept 2 more additional parameters, the **length** of the **replace_string** and the length of the output string.\r\n   \r\n   Remember to do the changes in the line the add the function inside the GlobalMapping functions\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -31,6 +31,7 @@\n #include \"gandiva/precompiled/types.h\"\n #include \"gandiva/random_generator_holder.h\"\n #include \"gandiva/to_date_holder.h\"\n+#include \"replace_holder.h\"\n\nReview comment:\n       Change to \"gandiva/replace_holder.h\"\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-26T20:47:06.229+0000",
                    "updated": "2021-04-26T20:47:06.229+0000",
                    "started": "2021-04-26T20:47:06.229+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "589442",
                    "issueId": "13372695"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372695/worklog/590075",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rodrigojdebem commented on a change in pull request #10059:\nURL: https://github.com/apache/arrow/pull/10059#discussion_r621657220\n\n\n\n##########\nFile path: cpp/src/gandiva/replace_holder.cc\n##########\n@@ -0,0 +1,100 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"gandiva/replace_holder.h\"\n+\n+#include <regex>\n+#include \"gandiva/node.h\"\n+#include \"gandiva/regex_util.h\"\n+\n+namespace gandiva {\n+\n+RE2 LikeHolder::starts_with_regex_(R\"((\\w|\\s)*\\.\\*)\");\n\nReview comment:\n       Fixed it on the newer commits. Sorry about that, I used it as a base and forgot to remove the part I wouldn't use.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-28T00:08:54.921+0000",
                    "updated": "2021-04-28T00:08:54.921+0000",
                    "started": "2021-04-28T00:08:54.920+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "590075",
                    "issueId": "13372695"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372695/worklog/590836",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "projjal commented on a change in pull request #10059:\nURL: https://github.com/apache/arrow/pull/10059#discussion_r622732364\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/types.h\n##########\n@@ -263,6 +263,9 @@ const char* substr_utf8_int64_int64(gdv_int64 context, const char* input,\n const char* substr_utf8_int64(gdv_int64 context, const char* input, gdv_int32 in_len,\n                               gdv_int64 offset64, gdv_int32* out_len);\n \n+const char* regexp_replace(const char* regexp, const char* str,\n\nReview comment:\n       this is not required\n\n##########\nFile path: java/gandiva/src/test/java/org/apache/arrow/gandiva/evaluator/ProjectorTest.java\n##########\n@@ -648,6 +648,66 @@ public void testRegex() throws GandivaException {\n     eval.close();\n   }\n \n+  @Test\n+  public void testRegexpReplace() throws GandivaException {\n+\n+    Field x = Field.nullable(\"x\", new ArrowType.Utf8());\n+    Field replaceString = Field.nullable(\"replaceString\", new ArrowType.Utf8());\n+\n+    Field retType = Field.nullable(\"c\", new ArrowType.Utf8());\n+\n+    TreeNode cond =\n+            TreeBuilder.makeFunction(\n+                    \"regexp_replace\",\n+                    Lists.newArrayList(TreeBuilder.makeField(x), TreeBuilder.makeStringLiteral(\"ana\"),\n+                            TreeBuilder.makeField(replaceString)),\n+                    new ArrowType.Utf8());\n+    ExpressionTree expr = TreeBuilder.makeExpression(cond, retType);\n+    Schema schema = new Schema(Lists.newArrayList(x, replaceString));\n+    Projector eval = Projector.make(schema, Lists.newArrayList(expr));\n+\n+    int numRows = 5;\n+    byte[] validity = new byte[]{(byte) 15, 0};\n+    String[] valuesX = new String[]{\"banana\", \"bananaana\", \"bananana\", \"anaana\", \"anaana\"};\n+    String[] valuesReplace = new String[]{\"\", \"\", \"\", \"\", \"\"};\n\nReview comment:\n       atleast keep one non-empty replace string in the test\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -42,6 +43,41 @@ bool gdv_fn_like_utf8_utf8(int64_t ptr, const char* data, int data_len,\n   return (*holder)(std::string(data, data_len));\n }\n \n+const char* gdv_fn_regexp_replace_utf8_utf8(\n+    int64_t ptr, int64_t holder_ptr, const char* data, int32_t data_len,\n+    const char* /*pattern*/, int32_t /*pattern_len*/, const char* replace_string,\n+    int32_t replace_string_len, int32_t* out_length) {\n+  std::string user_input(data, data_len);\n+  std::string replace_input(replace_string, replace_string_len);\n+  gandiva::ExecutionContext* context = reinterpret_cast<gandiva::ExecutionContext*>(ptr);\n+\n+  gandiva::ReplaceHolder* holder = reinterpret_cast<gandiva::ReplaceHolder*>(holder_ptr);\n+  bool was_replaced = (*holder)(context, user_input, replace_input, out_length);\n+\n+  if (!was_replaced) {\n+    return data;\n+  }\n+\n+  // This condition treats the case where the whole string is replaced by an empty string\n+  if (*out_length == 0) {\n+    return \"\";\n+  }\n+\n+  char* result_buffer =\n+      reinterpret_cast<char*>(gdv_fn_context_arena_malloc(ptr, *out_length));\n+\n+  if (result_buffer == nullptr) {\n+    std::string err_msg = \"Could not allocate memory for string: \" + user_input;\n+    gdv_fn_context_set_error_msg(ptr, err_msg.data());\n+    *out_length = 0;\n+    return \"\";\n+  }\n+\n+  memcpy(result_buffer, user_input.c_str(), *out_length);\n\nReview comment:\n       Use user_input.data() instead of c_str() (Latter I believe does another allocation and copy)\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -42,6 +43,41 @@ bool gdv_fn_like_utf8_utf8(int64_t ptr, const char* data, int data_len,\n   return (*holder)(std::string(data, data_len));\n }\n \n+const char* gdv_fn_regexp_replace_utf8_utf8(\n+    int64_t ptr, int64_t holder_ptr, const char* data, int32_t data_len,\n+    const char* /*pattern*/, int32_t /*pattern_len*/, const char* replace_string,\n+    int32_t replace_string_len, int32_t* out_length) {\n+  std::string user_input(data, data_len);\n+  std::string replace_input(replace_string, replace_string_len);\n+  gandiva::ExecutionContext* context = reinterpret_cast<gandiva::ExecutionContext*>(ptr);\n+\n+  gandiva::ReplaceHolder* holder = reinterpret_cast<gandiva::ReplaceHolder*>(holder_ptr);\n+  bool was_replaced = (*holder)(context, user_input, replace_input, out_length);\n+\n+  if (!was_replaced) {\n+    return data;\n+  }\n+\n+  // This condition treats the case where the whole string is replaced by an empty string\n+  if (*out_length == 0) {\n+    return \"\";\n+  }\n+\n+  char* result_buffer =\n+      reinterpret_cast<char*>(gdv_fn_context_arena_malloc(ptr, *out_length));\n+\n+  if (result_buffer == nullptr) {\n+    std::string err_msg = \"Could not allocate memory for string: \" + user_input;\n\nReview comment:\n       This involves implicit allocation. We should not have another allocation in the error path of allocation failure. Just keep set error message to  \"Could not allocate memory for result\"\n\n##########\nFile path: cpp/src/gandiva/replace_holder_test.cc\n##########\n@@ -0,0 +1,115 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"gandiva/replace_holder.h\"\n+#include \"gandiva/regex_util.h\"\n+\n+#include <memory>\n+#include <vector>\n+\n+#include <gtest/gtest.h>\n+\n+namespace gandiva {\n+\n+class TestReplaceHolder : public ::testing::Test {\n+ public:\n+  FunctionNode BuildReplace(std::string pattern) {\n\nReview comment:\n       This function seems unnecessary. It is also building \"replace\" function node which is a different function\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-29T05:29:44.696+0000",
                    "updated": "2021-04-29T05:29:44.696+0000",
                    "started": "2021-04-29T05:29:44.695+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "590836",
                    "issueId": "13372695"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372695/worklog/591371",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "projjal commented on a change in pull request #10059:\nURL: https://github.com/apache/arrow/pull/10059#discussion_r623623465\n\n\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -42,6 +43,41 @@ bool gdv_fn_like_utf8_utf8(int64_t ptr, const char* data, int data_len,\n   return (*holder)(std::string(data, data_len));\n }\n \n+const char* gdv_fn_regexp_replace_utf8_utf8(\n+    int64_t ptr, int64_t holder_ptr, const char* data, int32_t data_len,\n+    const char* /*pattern*/, int32_t /*pattern_len*/, const char* replace_string,\n+    int32_t replace_string_len, int32_t* out_length) {\n+  std::string user_input(data, data_len);\n+  std::string replace_input(replace_string, replace_string_len);\n+  gandiva::ExecutionContext* context = reinterpret_cast<gandiva::ExecutionContext*>(ptr);\n+\n+  gandiva::ReplaceHolder* holder = reinterpret_cast<gandiva::ReplaceHolder*>(holder_ptr);\n+  bool was_replaced = (*holder)(context, user_input, replace_input, out_length);\n+\n+  if (!was_replaced) {\n+    return data;\n+  }\n+\n+  // This condition treats the case where the whole string is replaced by an empty string\n+  if (*out_length == 0) {\n+    return \"\";\n+  }\n+\n+  char* result_buffer =\n+      reinterpret_cast<char*>(gdv_fn_context_arena_malloc(ptr, *out_length));\n+\n+  if (result_buffer == nullptr) {\n+    std::string err_msg = \"Could not allocate memory for result\";\n+    gdv_fn_context_set_error_msg(ptr, err_msg.data());\n\nReview comment:\n       The above still involves an allocation.\r\n   change this to gdv_fn_context_set_error_msg(ptr, \"Could not allocate memory for result\");\n\n##########\nFile path: java/gandiva/src/test/java/org/apache/arrow/gandiva/evaluator/ProjectorTest.java\n##########\n@@ -648,6 +648,66 @@ public void testRegex() throws GandivaException {\n     eval.close();\n   }\n \n+  @Test\n+  public void testRegexpReplace() throws GandivaException {\n+\n+    Field x = Field.nullable(\"x\", new ArrowType.Utf8());\n+    Field replaceString = Field.nullable(\"replaceString\", new ArrowType.Utf8());\n+\n+    Field retType = Field.nullable(\"c\", new ArrowType.Utf8());\n+\n+    TreeNode cond =\n+            TreeBuilder.makeFunction(\n+                    \"regexp_replace\",\n+                    Lists.newArrayList(TreeBuilder.makeField(x), TreeBuilder.makeStringLiteral(\"ana\"),\n+                            TreeBuilder.makeField(replaceString)),\n+                    new ArrowType.Utf8());\n+    ExpressionTree expr = TreeBuilder.makeExpression(cond, retType);\n+    Schema schema = new Schema(Lists.newArrayList(x, replaceString));\n+    Projector eval = Projector.make(schema, Lists.newArrayList(expr));\n+\n+    int numRows = 5;\n+    byte[] validity = new byte[]{(byte) 15, 0};\n+    String[] valuesX = new String[]{\"banana\", \"bananaana\", \"bananana\", \"anaana\", \"anaana\"};\n+    String[] valuesReplace = new String[]{\"\", \"\", \"\", \"c\", \"\"};\n\nReview comment:\n       add some multi char replace string too\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -42,6 +43,41 @@ bool gdv_fn_like_utf8_utf8(int64_t ptr, const char* data, int data_len,\n   return (*holder)(std::string(data, data_len));\n }\n \n+const char* gdv_fn_regexp_replace_utf8_utf8(\n+    int64_t ptr, int64_t holder_ptr, const char* data, int32_t data_len,\n+    const char* /*pattern*/, int32_t /*pattern_len*/, const char* replace_string,\n+    int32_t replace_string_len, int32_t* out_length) {\n+  std::string user_input(data, data_len);\n+  std::string replace_input(replace_string, replace_string_len);\n+  gandiva::ExecutionContext* context = reinterpret_cast<gandiva::ExecutionContext*>(ptr);\n+\n+  gandiva::ReplaceHolder* holder = reinterpret_cast<gandiva::ReplaceHolder*>(holder_ptr);\n+  bool was_replaced = (*holder)(context, user_input, replace_input, out_length);\n+\n+  if (!was_replaced) {\n\nReview comment:\n       Why not incorporate the following logic inside the holder operator() method too?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-30T05:43:22.191+0000",
                    "updated": "2021-04-30T05:43:22.191+0000",
                    "started": "2021-04-30T05:43:22.191+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "591371",
                    "issueId": "13372695"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372695/worklog/591970",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "projjal commented on a change in pull request #10059:\nURL: https://github.com/apache/arrow/pull/10059#discussion_r624647491\n\n\n\n##########\nFile path: cpp/src/gandiva/replace_holder.h\n##########\n@@ -0,0 +1,99 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <memory>\n+#include <string>\n+\n+#include <re2/re2.h>\n+\n+#include \"arrow/status.h\"\n+\n+#include \"gandiva/execution_context.h\"\n+#include \"gandiva/function_holder.h\"\n+#include \"gandiva/node.h\"\n+#include \"gandiva/visibility.h\"\n+\n+namespace gandiva {\n+\n+/// Function Holder for 'replace'\n+class GANDIVA_EXPORT ReplaceHolder : public FunctionHolder {\n+ public:\n+  ~ReplaceHolder() override = default;\n+\n+  static Status Make(const FunctionNode& node, std::shared_ptr<ReplaceHolder>* holder);\n+\n+  static Status Make(const std::string& sql_pattern,\n+                     std::shared_ptr<ReplaceHolder>* holder);\n+\n+  /// Return true if the data matches the pattern.\n+  const char* operator()(ExecutionContext* ptr, std::string& user_input,\n+                         std::string& replace_input, int32_t* out_length) {\n+    int32_t user_input_length = static_cast<int32_t>(user_input.size());\n+    int32_t total_replaces = RE2::GlobalReplace(&user_input, regex_, replace_input);\n+    bool was_replaced = false;\n+\n+    if (total_replaces < 0) {\n+      return_error(ptr, user_input, replace_input);\n+      *out_length = 0;\n+    } else if (total_replaces == 0) {\n+      *out_length = user_input_length;\n+    } else {\n+      was_replaced = true;\n+    }\n+\n+    *out_length = static_cast<int32_t>(user_input.size());\n+\n+    if (!was_replaced) {\n+      return user_input.data();\n+    }\n+\n+    // This condition treats the case where the whole string is replaced by an empty\n+    // string\n+    if (*out_length == 0) {\n+      return \"\";\n+    }\n+    auto context = reinterpret_cast<gandiva::ExecutionContext*>(ptr);\n\nReview comment:\n       This cast doesn't seem required. Just rename the argument ptr to context\n\n##########\nFile path: cpp/src/gandiva/replace_holder.h\n##########\n@@ -0,0 +1,99 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <memory>\n+#include <string>\n+\n+#include <re2/re2.h>\n+\n+#include \"arrow/status.h\"\n+\n+#include \"gandiva/execution_context.h\"\n+#include \"gandiva/function_holder.h\"\n+#include \"gandiva/node.h\"\n+#include \"gandiva/visibility.h\"\n+\n+namespace gandiva {\n+\n+/// Function Holder for 'replace'\n+class GANDIVA_EXPORT ReplaceHolder : public FunctionHolder {\n+ public:\n+  ~ReplaceHolder() override = default;\n+\n+  static Status Make(const FunctionNode& node, std::shared_ptr<ReplaceHolder>* holder);\n+\n+  static Status Make(const std::string& sql_pattern,\n+                     std::shared_ptr<ReplaceHolder>* holder);\n+\n+  /// Return true if the data matches the pattern.\n+  const char* operator()(ExecutionContext* ptr, std::string& user_input,\n+                         std::string& replace_input, int32_t* out_length) {\n+    int32_t user_input_length = static_cast<int32_t>(user_input.size());\n+    int32_t total_replaces = RE2::GlobalReplace(&user_input, regex_, replace_input);\n+    bool was_replaced = false;\n+\n+    if (total_replaces < 0) {\n+      return_error(ptr, user_input, replace_input);\n+      *out_length = 0;\n+    } else if (total_replaces == 0) {\n+      *out_length = user_input_length;\n+    } else {\n+      was_replaced = true;\n+    }\n+\n+    *out_length = static_cast<int32_t>(user_input.size());\n\nReview comment:\n       Its probably better to move this statement inside the else statement above\n\n##########\nFile path: cpp/src/gandiva/replace_holder.h\n##########\n@@ -0,0 +1,99 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <memory>\n+#include <string>\n+\n+#include <re2/re2.h>\n+\n+#include \"arrow/status.h\"\n+\n+#include \"gandiva/execution_context.h\"\n+#include \"gandiva/function_holder.h\"\n+#include \"gandiva/node.h\"\n+#include \"gandiva/visibility.h\"\n+\n+namespace gandiva {\n+\n+/// Function Holder for 'replace'\n+class GANDIVA_EXPORT ReplaceHolder : public FunctionHolder {\n+ public:\n+  ~ReplaceHolder() override = default;\n+\n+  static Status Make(const FunctionNode& node, std::shared_ptr<ReplaceHolder>* holder);\n+\n+  static Status Make(const std::string& sql_pattern,\n+                     std::shared_ptr<ReplaceHolder>* holder);\n+\n+  /// Return true if the data matches the pattern.\n+  const char* operator()(ExecutionContext* ptr, std::string& user_input,\n+                         std::string& replace_input, int32_t* out_length) {\n+    int32_t user_input_length = static_cast<int32_t>(user_input.size());\n+    int32_t total_replaces = RE2::GlobalReplace(&user_input, regex_, replace_input);\n+    bool was_replaced = false;\n+\n+    if (total_replaces < 0) {\n+      return_error(ptr, user_input, replace_input);\n+      *out_length = 0;\n+    } else if (total_replaces == 0) {\n+      *out_length = user_input_length;\n+    } else {\n+      was_replaced = true;\n+    }\n+\n+    *out_length = static_cast<int32_t>(user_input.size());\n+\n+    if (!was_replaced) {\n+      return user_input.data();\n+    }\n+\n+    // This condition treats the case where the whole string is replaced by an empty\n+    // string\n+    if (*out_length == 0) {\n+      return \"\";\n+    }\n+    auto context = reinterpret_cast<gandiva::ExecutionContext*>(ptr);\n+\n+    char* result_buffer =\n+        reinterpret_cast<char*>(context->arena()->Allocate(*out_length));\n+\n+    if (result_buffer == nullptr) {\n+      context = reinterpret_cast<gandiva::ExecutionContext*>(ptr);\n\nReview comment:\n       cast not required\n\n##########\nFile path: cpp/src/gandiva/replace_holder.h\n##########\n@@ -0,0 +1,99 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <memory>\n+#include <string>\n+\n+#include <re2/re2.h>\n+\n+#include \"arrow/status.h\"\n+\n+#include \"gandiva/execution_context.h\"\n+#include \"gandiva/function_holder.h\"\n+#include \"gandiva/node.h\"\n+#include \"gandiva/visibility.h\"\n+\n+namespace gandiva {\n+\n+/// Function Holder for 'replace'\n+class GANDIVA_EXPORT ReplaceHolder : public FunctionHolder {\n+ public:\n+  ~ReplaceHolder() override = default;\n+\n+  static Status Make(const FunctionNode& node, std::shared_ptr<ReplaceHolder>* holder);\n+\n+  static Status Make(const std::string& sql_pattern,\n+                     std::shared_ptr<ReplaceHolder>* holder);\n+\n+  /// Return true if the data matches the pattern.\n+  const char* operator()(ExecutionContext* ptr, std::string& user_input,\n+                         std::string& replace_input, int32_t* out_length) {\n+    int32_t user_input_length = static_cast<int32_t>(user_input.size());\n+    int32_t total_replaces = RE2::GlobalReplace(&user_input, regex_, replace_input);\n+    bool was_replaced = false;\n+\n+    if (total_replaces < 0) {\n+      return_error(ptr, user_input, replace_input);\n+      *out_length = 0;\n\nReview comment:\n       return \"\" here\n\n##########\nFile path: cpp/src/gandiva/replace_holder.h\n##########\n@@ -0,0 +1,99 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <memory>\n+#include <string>\n+\n+#include <re2/re2.h>\n+\n+#include \"arrow/status.h\"\n+\n+#include \"gandiva/execution_context.h\"\n+#include \"gandiva/function_holder.h\"\n+#include \"gandiva/node.h\"\n+#include \"gandiva/visibility.h\"\n+\n+namespace gandiva {\n+\n+/// Function Holder for 'replace'\n+class GANDIVA_EXPORT ReplaceHolder : public FunctionHolder {\n+ public:\n+  ~ReplaceHolder() override = default;\n+\n+  static Status Make(const FunctionNode& node, std::shared_ptr<ReplaceHolder>* holder);\n+\n+  static Status Make(const std::string& sql_pattern,\n+                     std::shared_ptr<ReplaceHolder>* holder);\n+\n+  /// Return true if the data matches the pattern.\n+  const char* operator()(ExecutionContext* ptr, std::string& user_input,\n+                         std::string& replace_input, int32_t* out_length) {\n+    int32_t user_input_length = static_cast<int32_t>(user_input.size());\n+    int32_t total_replaces = RE2::GlobalReplace(&user_input, regex_, replace_input);\n+    bool was_replaced = false;\n+\n+    if (total_replaces < 0) {\n+      return_error(ptr, user_input, replace_input);\n+      *out_length = 0;\n+    } else if (total_replaces == 0) {\n+      *out_length = user_input_length;\n+    } else {\n+      was_replaced = true;\n+    }\n+\n+    *out_length = static_cast<int32_t>(user_input.size());\n+\n+    if (!was_replaced) {\n+      return user_input.data();\n\nReview comment:\n       You can't return user_input.data() since it wil get deallocated when returning from the parent function. Its better just pass the user_input char* and len as parameters to the method, instead of passing std::string and memcpying for no replace\n\n##########\nFile path: cpp/src/gandiva/replace_holder.h\n##########\n@@ -0,0 +1,99 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <memory>\n+#include <string>\n+\n+#include <re2/re2.h>\n+\n+#include \"arrow/status.h\"\n+\n+#include \"gandiva/execution_context.h\"\n+#include \"gandiva/function_holder.h\"\n+#include \"gandiva/node.h\"\n+#include \"gandiva/visibility.h\"\n+\n+namespace gandiva {\n+\n+/// Function Holder for 'replace'\n+class GANDIVA_EXPORT ReplaceHolder : public FunctionHolder {\n+ public:\n+  ~ReplaceHolder() override = default;\n+\n+  static Status Make(const FunctionNode& node, std::shared_ptr<ReplaceHolder>* holder);\n+\n+  static Status Make(const std::string& sql_pattern,\n+                     std::shared_ptr<ReplaceHolder>* holder);\n+\n+  /// Return true if the data matches the pattern.\n\nReview comment:\n       Update the comment\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-02T07:39:45.331+0000",
                    "updated": "2021-05-02T07:39:45.331+0000",
                    "started": "2021-05-02T07:39:45.331+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "591970",
                    "issueId": "13372695"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372695/worklog/593014",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "anthonylouisbsb commented on a change in pull request #10059:\nURL: https://github.com/apache/arrow/pull/10059#discussion_r627764037\n\n\n\n##########\nFile path: cpp/src/gandiva/replace_holder.h\n##########\n@@ -0,0 +1,99 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <memory>\n+#include <string>\n+\n+#include <re2/re2.h>\n+\n+#include \"arrow/status.h\"\n+\n+#include \"gandiva/execution_context.h\"\n+#include \"gandiva/function_holder.h\"\n+#include \"gandiva/node.h\"\n+#include \"gandiva/visibility.h\"\n+\n+namespace gandiva {\n+\n+/// Function Holder for 'replace'\n+class GANDIVA_EXPORT ReplaceHolder : public FunctionHolder {\n+ public:\n+  ~ReplaceHolder() override = default;\n+\n+  static Status Make(const FunctionNode& node, std::shared_ptr<ReplaceHolder>* holder);\n+\n+  static Status Make(const std::string& sql_pattern,\n+                     std::shared_ptr<ReplaceHolder>* holder);\n+\n+  /// Return true if the data matches the pattern.\n+  const char* operator()(ExecutionContext* ptr, std::string& user_input,\n+                         std::string& replace_input, int32_t* out_length) {\n+    int32_t user_input_length = static_cast<int32_t>(user_input.size());\n+    int32_t total_replaces = RE2::GlobalReplace(&user_input, regex_, replace_input);\n+    bool was_replaced = false;\n+\n+    if (total_replaces < 0) {\n+      return_error(ptr, user_input, replace_input);\n+      *out_length = 0;\n+    } else if (total_replaces == 0) {\n+      *out_length = user_input_length;\n+    } else {\n+      was_replaced = true;\n+    }\n+\n+    *out_length = static_cast<int32_t>(user_input.size());\n+\n+    if (!was_replaced) {\n+      return user_input.data();\n\nReview comment:\n       Problem solved, now, for this case is returning the user input char pointer\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-06T21:05:03.252+0000",
                    "updated": "2021-05-06T21:05:03.252+0000",
                    "started": "2021-05-06T21:05:03.252+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "593014",
                    "issueId": "13372695"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372695/worklog/595133",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "projjal commented on a change in pull request #10059:\nURL: https://github.com/apache/arrow/pull/10059#discussion_r630833349\n\n\n\n##########\nFile path: cpp/src/gandiva/replace_holder.cc\n##########\n@@ -0,0 +1,66 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"gandiva/replace_holder.h\"\n+\n+#include <regex>\n\nReview comment:\n       this include doesn't seem required\n\n##########\nFile path: cpp/src/gandiva/replace_holder.h\n##########\n@@ -0,0 +1,97 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <re2/re2.h>\n+\n+#include <memory>\n+#include <string>\n+\n+#include \"arrow/status.h\"\n+#include \"gandiva/execution_context.h\"\n+#include \"gandiva/function_holder.h\"\n+#include \"gandiva/node.h\"\n+#include \"gandiva/visibility.h\"\n+\n+namespace gandiva {\n+\n+/// Function Holder for 'replace'\n+class GANDIVA_EXPORT ReplaceHolder : public FunctionHolder {\n+ public:\n+  ~ReplaceHolder() override = default;\n+\n+  static Status Make(const FunctionNode& node, std::shared_ptr<ReplaceHolder>* holder);\n+\n+  static Status Make(const std::string& sql_pattern,\n+                     std::shared_ptr<ReplaceHolder>* holder);\n+\n+  /// Return a new string with the pattern that matched the regex replaced for\n+  /// the replace_input parameter.\n+  const char* operator()(ExecutionContext* ctx, const char* user_input,\n+                         int32_t user_input_len, const char* replace_input,\n+                         int32_t replace_input_len, int32_t* out_length) {\n+    std::string user_input_as_str(user_input, user_input_len);\n+    std::string replace_input_as_str(replace_input, replace_input_len);\n+\n+    int32_t total_replaces =\n+        RE2::GlobalReplace(&user_input_as_str, regex_, replace_input);\n+\n+    if (total_replaces < 0) {\n+      return_error(ctx, user_input_as_str, replace_input_as_str);\n+      *out_length = 0;\n+      return \"\";\n+    }\n+\n+    if (total_replaces == 0) {\n+      *out_length = user_input_len;\n+      return user_input;\n+    }\n+\n+    *out_length = static_cast<int32_t>(user_input_as_str.size());\n+\n+    // This condition treats the case where the whole string is replaced by an empty\n+    // string\n+    if (*out_length == 0) {\n+      return \"\";\n+    }\n+\n+    char* result_buffer = reinterpret_cast<char*>(ctx->arena()->Allocate(*out_length));\n+\n+    if (result_buffer == NULLPTR) {\n\nReview comment:\n       > nullptr\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-12T08:33:22.340+0000",
                    "updated": "2021-05-12T08:33:22.340+0000",
                    "started": "2021-05-12T08:33:22.339+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "595133",
                    "issueId": "13372695"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372695/worklog/595359",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rodrigojdebem commented on a change in pull request #10059:\nURL: https://github.com/apache/arrow/pull/10059#discussion_r631080733\n\n\n\n##########\nFile path: cpp/src/gandiva/replace_holder.h\n##########\n@@ -0,0 +1,97 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <re2/re2.h>\n+\n+#include <memory>\n+#include <string>\n+\n+#include \"arrow/status.h\"\n+#include \"gandiva/execution_context.h\"\n+#include \"gandiva/function_holder.h\"\n+#include \"gandiva/node.h\"\n+#include \"gandiva/visibility.h\"\n+\n+namespace gandiva {\n+\n+/// Function Holder for 'replace'\n+class GANDIVA_EXPORT ReplaceHolder : public FunctionHolder {\n+ public:\n+  ~ReplaceHolder() override = default;\n+\n+  static Status Make(const FunctionNode& node, std::shared_ptr<ReplaceHolder>* holder);\n+\n+  static Status Make(const std::string& sql_pattern,\n+                     std::shared_ptr<ReplaceHolder>* holder);\n+\n+  /// Return a new string with the pattern that matched the regex replaced for\n+  /// the replace_input parameter.\n+  const char* operator()(ExecutionContext* ctx, const char* user_input,\n+                         int32_t user_input_len, const char* replace_input,\n+                         int32_t replace_input_len, int32_t* out_length) {\n+    std::string user_input_as_str(user_input, user_input_len);\n+    std::string replace_input_as_str(replace_input, replace_input_len);\n+\n+    int32_t total_replaces =\n+        RE2::GlobalReplace(&user_input_as_str, regex_, replace_input);\n+\n+    if (total_replaces < 0) {\n+      return_error(ctx, user_input_as_str, replace_input_as_str);\n+      *out_length = 0;\n+      return \"\";\n+    }\n+\n+    if (total_replaces == 0) {\n+      *out_length = user_input_len;\n+      return user_input;\n+    }\n+\n+    *out_length = static_cast<int32_t>(user_input_as_str.size());\n+\n+    // This condition treats the case where the whole string is replaced by an empty\n+    // string\n+    if (*out_length == 0) {\n+      return \"\";\n+    }\n+\n+    char* result_buffer = reinterpret_cast<char*>(ctx->arena()->Allocate(*out_length));\n+\n+    if (result_buffer == NULLPTR) {\n\nReview comment:\n       @projjal the cpp linter [runs a checker (https://github.com/apache/arrow/blob/02d6675cca525d1e5faee1286a704c7d4101ab15/cpp/build-support/lint_cpp_cli.py#L31) that raises an error if there is some **nullptr** construction inside a header file. I need to use the NULLPTR macro to works.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-12T14:13:55.657+0000",
                    "updated": "2021-05-12T14:13:55.657+0000",
                    "started": "2021-05-12T14:13:55.657+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "595359",
                    "issueId": "13372695"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372695/worklog/595360",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rodrigojdebem commented on a change in pull request #10059:\nURL: https://github.com/apache/arrow/pull/10059#discussion_r631080733\n\n\n\n##########\nFile path: cpp/src/gandiva/replace_holder.h\n##########\n@@ -0,0 +1,97 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <re2/re2.h>\n+\n+#include <memory>\n+#include <string>\n+\n+#include \"arrow/status.h\"\n+#include \"gandiva/execution_context.h\"\n+#include \"gandiva/function_holder.h\"\n+#include \"gandiva/node.h\"\n+#include \"gandiva/visibility.h\"\n+\n+namespace gandiva {\n+\n+/// Function Holder for 'replace'\n+class GANDIVA_EXPORT ReplaceHolder : public FunctionHolder {\n+ public:\n+  ~ReplaceHolder() override = default;\n+\n+  static Status Make(const FunctionNode& node, std::shared_ptr<ReplaceHolder>* holder);\n+\n+  static Status Make(const std::string& sql_pattern,\n+                     std::shared_ptr<ReplaceHolder>* holder);\n+\n+  /// Return a new string with the pattern that matched the regex replaced for\n+  /// the replace_input parameter.\n+  const char* operator()(ExecutionContext* ctx, const char* user_input,\n+                         int32_t user_input_len, const char* replace_input,\n+                         int32_t replace_input_len, int32_t* out_length) {\n+    std::string user_input_as_str(user_input, user_input_len);\n+    std::string replace_input_as_str(replace_input, replace_input_len);\n+\n+    int32_t total_replaces =\n+        RE2::GlobalReplace(&user_input_as_str, regex_, replace_input);\n+\n+    if (total_replaces < 0) {\n+      return_error(ctx, user_input_as_str, replace_input_as_str);\n+      *out_length = 0;\n+      return \"\";\n+    }\n+\n+    if (total_replaces == 0) {\n+      *out_length = user_input_len;\n+      return user_input;\n+    }\n+\n+    *out_length = static_cast<int32_t>(user_input_as_str.size());\n+\n+    // This condition treats the case where the whole string is replaced by an empty\n+    // string\n+    if (*out_length == 0) {\n+      return \"\";\n+    }\n+\n+    char* result_buffer = reinterpret_cast<char*>(ctx->arena()->Allocate(*out_length));\n+\n+    if (result_buffer == NULLPTR) {\n\nReview comment:\n       @projjal the cpp linter [runs a checker](https://github.com/apache/arrow/blob/02d6675cca525d1e5faee1286a704c7d4101ab15/cpp/build-support/lint_cpp_cli.py#L31) that raises an error if there is some **nullptr** construction inside a header file. I need to use the NULLPTR macro to works.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-12T14:14:21.631+0000",
                    "updated": "2021-05-12T14:14:21.631+0000",
                    "started": "2021-05-12T14:14:21.630+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "595360",
                    "issueId": "13372695"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372695/worklog/595373",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rodrigojdebem commented on a change in pull request #10059:\nURL: https://github.com/apache/arrow/pull/10059#discussion_r631094117\n\n\n\n##########\nFile path: cpp/src/gandiva/replace_holder.cc\n##########\n@@ -0,0 +1,66 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"gandiva/replace_holder.h\"\n+\n+#include <regex>\n\nReview comment:\n       Fixed\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-12T14:28:33.831+0000",
                    "updated": "2021-05-12T14:28:33.831+0000",
                    "started": "2021-05-12T14:28:33.831+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "595373",
                    "issueId": "13372695"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372695/worklog/595860",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "projjal commented on a change in pull request #10059:\nURL: https://github.com/apache/arrow/pull/10059#discussion_r631558917\n\n\n\n##########\nFile path: cpp/src/gandiva/replace_holder.h\n##########\n@@ -0,0 +1,97 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <re2/re2.h>\n+\n+#include <memory>\n+#include <string>\n+\n+#include \"arrow/status.h\"\n+#include \"gandiva/execution_context.h\"\n+#include \"gandiva/function_holder.h\"\n+#include \"gandiva/node.h\"\n+#include \"gandiva/visibility.h\"\n+\n+namespace gandiva {\n+\n+/// Function Holder for 'replace'\n+class GANDIVA_EXPORT ReplaceHolder : public FunctionHolder {\n+ public:\n+  ~ReplaceHolder() override = default;\n+\n+  static Status Make(const FunctionNode& node, std::shared_ptr<ReplaceHolder>* holder);\n+\n+  static Status Make(const std::string& sql_pattern,\n+                     std::shared_ptr<ReplaceHolder>* holder);\n+\n+  /// Return a new string with the pattern that matched the regex replaced for\n+  /// the replace_input parameter.\n+  const char* operator()(ExecutionContext* ctx, const char* user_input,\n+                         int32_t user_input_len, const char* replace_input,\n+                         int32_t replace_input_len, int32_t* out_length) {\n+    std::string user_input_as_str(user_input, user_input_len);\n+    std::string replace_input_as_str(replace_input, replace_input_len);\n+\n+    int32_t total_replaces =\n+        RE2::GlobalReplace(&user_input_as_str, regex_, replace_input);\n+\n+    if (total_replaces < 0) {\n+      return_error(ctx, user_input_as_str, replace_input_as_str);\n+      *out_length = 0;\n+      return \"\";\n+    }\n+\n+    if (total_replaces == 0) {\n+      *out_length = user_input_len;\n+      return user_input;\n+    }\n+\n+    *out_length = static_cast<int32_t>(user_input_as_str.size());\n+\n+    // This condition treats the case where the whole string is replaced by an empty\n+    // string\n+    if (*out_length == 0) {\n+      return \"\";\n+    }\n+\n+    char* result_buffer = reinterpret_cast<char*>(ctx->arena()->Allocate(*out_length));\n+\n+    if (result_buffer == NULLPTR) {\n\nReview comment:\n       ok\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-13T04:42:04.878+0000",
                    "updated": "2021-05-13T04:42:04.878+0000",
                    "started": "2021-05-13T04:42:04.878+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "595860",
                    "issueId": "13372695"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372695/worklog/595862",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "projjal commented on a change in pull request #10059:\nURL: https://github.com/apache/arrow/pull/10059#discussion_r631561351\n\n\n\n##########\nFile path: cpp/src/gandiva/replace_holder.h\n##########\n@@ -0,0 +1,97 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <re2/re2.h>\n+\n+#include <memory>\n+#include <string>\n+\n+#include \"arrow/status.h\"\n+#include \"gandiva/execution_context.h\"\n+#include \"gandiva/function_holder.h\"\n+#include \"gandiva/node.h\"\n+#include \"gandiva/visibility.h\"\n+\n+namespace gandiva {\n+\n+/// Function Holder for 'replace'\n+class GANDIVA_EXPORT ReplaceHolder : public FunctionHolder {\n+ public:\n+  ~ReplaceHolder() override = default;\n+\n+  static Status Make(const FunctionNode& node, std::shared_ptr<ReplaceHolder>* holder);\n+\n+  static Status Make(const std::string& sql_pattern,\n+                     std::shared_ptr<ReplaceHolder>* holder);\n+\n+  /// Return a new string with the pattern that matched the regex replaced for\n+  /// the replace_input parameter.\n+  const char* operator()(ExecutionContext* ctx, const char* user_input,\n+                         int32_t user_input_len, const char* replace_input,\n+                         int32_t replace_input_len, int32_t* out_length) {\n+    std::string user_input_as_str(user_input, user_input_len);\n+    std::string replace_input_as_str(replace_input, replace_input_len);\n+\n+    int32_t total_replaces =\n+        RE2::GlobalReplace(&user_input_as_str, regex_, replace_input);\n\nReview comment:\n       shouldn't the third argument be replace_input_as_str\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-13T04:51:25.258+0000",
                    "updated": "2021-05-13T04:51:25.258+0000",
                    "started": "2021-05-13T04:51:25.258+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "595862",
                    "issueId": "13372695"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372695/worklog/599470",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva commented on a change in pull request #10059:\nURL: https://github.com/apache/arrow/pull/10059#discussion_r635595413\n\n\n\n##########\nFile path: cpp/src/gandiva/replace_holder.h\n##########\n@@ -0,0 +1,97 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <re2/re2.h>\n+\n+#include <memory>\n+#include <string>\n+\n+#include \"arrow/status.h\"\n+#include \"gandiva/execution_context.h\"\n+#include \"gandiva/function_holder.h\"\n+#include \"gandiva/node.h\"\n+#include \"gandiva/visibility.h\"\n+\n+namespace gandiva {\n+\n+/// Function Holder for 'replace'\n+class GANDIVA_EXPORT ReplaceHolder : public FunctionHolder {\n+ public:\n+  ~ReplaceHolder() override = default;\n+\n+  static Status Make(const FunctionNode& node, std::shared_ptr<ReplaceHolder>* holder);\n+\n+  static Status Make(const std::string& sql_pattern,\n+                     std::shared_ptr<ReplaceHolder>* holder);\n+\n+  /// Return a new string with the pattern that matched the regex replaced for\n+  /// the replace_input parameter.\n+  const char* operator()(ExecutionContext* ctx, const char* user_input,\n+                         int32_t user_input_len, const char* replace_input,\n+                         int32_t replace_input_len, int32_t* out_length) {\n+    std::string user_input_as_str(user_input, user_input_len);\n+    std::string replace_input_as_str(replace_input, replace_input_len);\n+\n+    int32_t total_replaces =\n+        RE2::GlobalReplace(&user_input_as_str, regex_, replace_input);\n\nReview comment:\n       @projjal yeah, it should so I did changed the argument to replace_input_as_str\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-19T21:26:16.664+0000",
                    "updated": "2021-05-19T21:26:16.664+0000",
                    "started": "2021-05-19T21:26:16.663+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "599470",
                    "issueId": "13372695"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372695/worklog/607763",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "praveenbingo commented on pull request #10059:\nURL: https://github.com/apache/arrow/pull/10059#issuecomment-855809973\n\n\n   @projjal needs a rebase\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-07T10:29:32.043+0000",
                    "updated": "2021-06-07T10:29:32.043+0000",
                    "started": "2021-06-07T10:29:32.043+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "607763",
                    "issueId": "13372695"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372695/worklog/607831",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "anthonylouisbsb commented on pull request #10059:\nURL: https://github.com/apache/arrow/pull/10059#issuecomment-855891824\n\n\n   @praveenbingo The rebase was applied in the Pull Request.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-07T12:42:47.209+0000",
                    "updated": "2021-06-07T12:42:47.209+0000",
                    "started": "2021-06-07T12:42:47.208+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "607831",
                    "issueId": "13372695"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 13800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@57d83cc8[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@37e02ac5[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@16d21d5d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@2052ab40[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2bf8421[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@50687e6f[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@56d6b9ca[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@636b00fb[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1d8b1e3b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@e0380e3[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6d787000[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@562fc98c[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 13800,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Aug 04 10:32:32 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-08-04T10:32:32.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12410/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2021-04-15T17:11:06.000+0000",
        "updated": "2021-08-05T11:29:07.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 13800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Gandiva] Implement regexp_replace function on Gandiva",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13372695/comment/17393003",
                    "id": "17393003",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=praveenbingo",
                        "name": "praveenbingo",
                        "key": "praveenbingo",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Praveen Kumar",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 10059\n[https://github.com/apache/arrow/pull/10059]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=praveenbingo",
                        "name": "praveenbingo",
                        "key": "praveenbingo",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Praveen Kumar",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-08-04T10:32:32.777+0000",
                    "updated": "2021-08-04T10:32:32.777+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0q1q8:",
        "customfield_12314139": null
    }
}