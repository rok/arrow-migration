{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13391246",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13391246",
    "key": "ARROW-13426",
    "fields": {
        "fixVersions": [],
        "resolution": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/2",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/critical.svg",
            "name": "Critical",
            "id": "2"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": null,
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
            "description": "The issue is open and ready for the assignee to start work on it.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
            "name": "Open",
            "id": "1",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                "id": 2,
                "key": "new",
                "colorName": "blue-gray",
                "name": "To Do"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334626",
                "id": "12334626",
                "name": "C++ - Gandiva"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pablosichert",
            "name": "pablosichert",
            "key": "pablosichert",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Pablo Sichert",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pablosichert",
            "name": "pablosichert",
            "key": "pablosichert",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Pablo Sichert",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 3000,
            "total": 3000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 3000,
            "total": 3000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13426/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 5,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13391246/worklog/626425",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pablosichert opened a new pull request #10772:\nURL: https://github.com/apache/arrow/pull/10772\n\n\n   Hey there!\r\n   \r\n   This PR uses pointers in the JIT code generation / function invocation instead of the hard-coded `int64_t` type, which especially breaks when indexing into pointers to pointers on platforms where the pointer size is not 64 bit wide.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-22T04:39:54.466+0000",
                    "updated": "2021-07-22T04:39:54.466+0000",
                    "started": "2021-07-22T04:39:54.465+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "626425",
                    "issueId": "13391246"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13391246/worklog/626426",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10772:\nURL: https://github.com/apache/arrow/pull/10772#issuecomment-884651721\n\n\n   https://issues.apache.org/jira/browse/ARROW-13426\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-22T04:40:08.147+0000",
                    "updated": "2021-07-22T04:40:08.147+0000",
                    "started": "2021-07-22T04:40:08.146+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "626426",
                    "issueId": "13391246"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13391246/worklog/686733",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rkavanap commented on a change in pull request #10772:\nURL: https://github.com/apache/arrow/pull/10772#discussion_r757234336\n\n\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.h\n##########\n@@ -55,119 +55,119 @@ using gdv_month_interval = int32_t;\n #endif\n #endif\n \n-bool gdv_fn_like_utf8_utf8(int64_t ptr, const char* data, int data_len,\n-                           const char* pattern, int pattern_len);\n+bool gdv_fn_like_utf8_utf8(void* ptr, const char* data, int data_len, const char* pattern,\n+                           int pattern_len);\n \n-bool gdv_fn_like_utf8_utf8_utf8(int64_t ptr, const char* data, int data_len,\n+bool gdv_fn_like_utf8_utf8_utf8(void* ptr, const char* data, int data_len,\n                                 const char* pattern, int pattern_len,\n                                 const char* escape_char, int escape_char_len);\n \n-bool gdv_fn_ilike_utf8_utf8(int64_t ptr, const char* data, int data_len,\n+bool gdv_fn_ilike_utf8_utf8(void* ptr, const char* data, int data_len,\n                             const char* pattern, int pattern_len);\n \n-int64_t gdv_fn_to_date_utf8_utf8_int32(int64_t context, int64_t ptr, const char* data,\n+int64_t gdv_fn_to_date_utf8_utf8_int32(void* context_ptr, void* ptr, const char* data,\n                                        int data_len, bool in1_validity,\n                                        const char* pattern, int pattern_len,\n                                        bool in2_validity, int32_t suppress_errors,\n                                        bool in3_validity, bool* out_valid);\n \n-void gdv_fn_context_set_error_msg(int64_t context_ptr, const char* err_msg);\n+void gdv_fn_context_set_error_msg(void* context_ptr, const char* err_msg);\n \n-uint8_t* gdv_fn_context_arena_malloc(int64_t context_ptr, int32_t data_len);\n+uint8_t* gdv_fn_context_arena_malloc(void* context_ptr, int32_t data_len);\n \n-void gdv_fn_context_arena_reset(int64_t context_ptr);\n+void gdv_fn_context_arena_reset(void* context_ptr);\n \n-bool in_expr_lookup_int32(int64_t ptr, int32_t value, bool in_validity);\n+bool in_expr_lookup_int32(void* ptr, int32_t value, bool in_validity);\n \n-bool in_expr_lookup_int64(int64_t ptr, int64_t value, bool in_validity);\n+bool in_expr_lookup_int64(void* ptr, int64_t value, bool in_validity);\n \n-bool in_expr_lookup_utf8(int64_t ptr, const char* data, int data_len, bool in_validity);\n+bool in_expr_lookup_utf8(void* ptr, const char* data, int data_len, bool in_validity);\n \n int gdv_fn_time_with_zone(int* time_fields, const char* zone, int zone_len,\n                           int64_t* ret_time);\n \n GANDIVA_EXPORT\n-const char* gdv_fn_base64_encode_binary(int64_t context, const char* in, int32_t in_len,\n+const char* gdv_fn_base64_encode_binary(void* context_ptr, const char* in, int32_t in_len,\n                                         int32_t* out_len);\n \n GANDIVA_EXPORT\n-const char* gdv_fn_base64_decode_utf8(int64_t context, const char* in, int32_t in_len,\n+const char* gdv_fn_base64_decode_utf8(void* context_ptr, const char* in, int32_t in_len,\n                                       int32_t* out_len);\n \n GANDIVA_EXPORT\n-const char* gdv_fn_castVARBINARY_int32_int64(int64_t context, gdv_int32 value,\n+const char* gdv_fn_castVARBINARY_int32_int64(void* context_ptr, gdv_int32 value,\n                                              int64_t out_len, int32_t* out_length);\n \n GANDIVA_EXPORT\n-const char* gdv_fn_castVARBINARY_int64_int64(int64_t context, gdv_int64 value,\n+const char* gdv_fn_castVARBINARY_int64_int64(void* context_ptr, gdv_int64 value,\n                                              int64_t out_len, int32_t* out_length);\n \n GANDIVA_EXPORT\n-const char* gdv_fn_sha256_decimal128(int64_t context, int64_t x_high, uint64_t x_low,\n+const char* gdv_fn_sha256_decimal128(void* context_ptr, int64_t x_high, uint64_t x_low,\n                                      int32_t x_precision, int32_t x_scale,\n                                      gdv_boolean x_isvalid, int32_t* out_length);\n \n GANDIVA_EXPORT\n-const char* gdv_fn_sha1_decimal128(int64_t context, int64_t x_high, uint64_t x_low,\n+const char* gdv_fn_sha1_decimal128(void* context_ptr, int64_t x_high, uint64_t x_low,\n                                    int32_t x_precision, int32_t x_scale,\n                                    gdv_boolean x_isvalid, int32_t* out_length);\n \n-int32_t gdv_fn_dec_from_string(int64_t context, const char* in, int32_t in_length,\n+int32_t gdv_fn_dec_from_string(void* context_ptr, const char* in, int32_t in_length,\n                                int32_t* precision_from_str, int32_t* scale_from_str,\n                                int64_t* dec_high_from_str, uint64_t* dec_low_from_str);\n \n-char* gdv_fn_dec_to_string(int64_t context, int64_t x_high, uint64_t x_low,\n+char* gdv_fn_dec_to_string(void* context_ptr, int64_t x_high, uint64_t x_low,\n                            int32_t x_scale, int32_t* dec_str_len);\n \n GANDIVA_EXPORT\n-int32_t gdv_fn_castINT_utf8(int64_t context, const char* data, int32_t data_len);\n+int32_t gdv_fn_castINT_utf8(void* context_ptr, const char* data, int32_t data_len);\n \n GANDIVA_EXPORT\n-int64_t gdv_fn_castBIGINT_utf8(int64_t context, const char* data, int32_t data_len);\n+int64_t gdv_fn_castBIGINT_utf8(void* context_ptr, const char* data, int32_t data_len);\n \n GANDIVA_EXPORT\n-float gdv_fn_castFLOAT4_utf8(int64_t context, const char* data, int32_t data_len);\n+float gdv_fn_castFLOAT4_utf8(void* context_ptr, const char* data, int32_t data_len);\n \n GANDIVA_EXPORT\n-double gdv_fn_castFLOAT8_utf8(int64_t context, const char* data, int32_t data_len);\n+double gdv_fn_castFLOAT8_utf8(void* context_ptr, const char* data, int32_t data_len);\n \n GANDIVA_EXPORT\n-const char* gdv_fn_castVARCHAR_int32_int64(int64_t context, int32_t value, int64_t len,\n+const char* gdv_fn_castVARCHAR_int32_int64(void* context_ptr, int32_t value, int64_t len,\n                                            int32_t* out_len);\n GANDIVA_EXPORT\n-const char* gdv_fn_castVARCHAR_int64_int64(int64_t context, int64_t value, int64_t len,\n+const char* gdv_fn_castVARCHAR_int64_int64(void* context_ptr, int64_t value, int64_t len,\n                                            int32_t* out_len);\n GANDIVA_EXPORT\n-const char* gdv_fn_castVARCHAR_float32_int64(int64_t context, float value, int64_t len,\n+const char* gdv_fn_castVARCHAR_float32_int64(void* context_ptr, float value, int64_t len,\n                                              int32_t* out_len);\n GANDIVA_EXPORT\n-const char* gdv_fn_castVARCHAR_float64_int64(int64_t context, double value, int64_t len,\n+const char* gdv_fn_castVARCHAR_float64_int64(void* context_ptr, double value, int64_t len,\n                                              int32_t* out_len);\n \n GANDIVA_EXPORT\n int32_t gdv_fn_utf8_char_length(char c);\n \n GANDIVA_EXPORT\n-const char* gdv_fn_upper_utf8(int64_t context, const char* data, int32_t data_len,\n+const char* gdv_fn_upper_utf8(void* context_ptr, const char* data, int32_t data_len,\n                               int32_t* out_len);\n \n GANDIVA_EXPORT\n-const char* gdv_fn_lower_utf8(int64_t context, const char* data, int32_t data_len,\n+const char* gdv_fn_lower_utf8(void* context_ptr, const char* data, int32_t data_len,\n                               int32_t* out_len);\n \n GANDIVA_EXPORT\n-const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_len,\n+const char* gdv_fn_initcap_utf8(void* context_ptr, const char* data, int32_t data_len,\n                                 int32_t* out_len);\n \n GANDIVA_EXPORT\n-int32_t gdv_fn_castINT_varbinary(gdv_int64 context, const char* in, int32_t in_len);\n\nReview comment:\n       why was this gdv_int64 instead of int64_t earlier? guessing they are of the same type.\n\n##########\nFile path: cpp/src/gandiva/precompiled/string_ops.cc\n##########\n@@ -561,111 +564,112 @@ gdv_boolean castBIT_utf8(gdv_int64 context, const char* data, gdv_int32 data_len\n     if (compare_lower_strings(\"false\", 5, trimmed_data, trimmed_len)) return false;\n   }\n   // if no 'true', 'false', '0' or '1' value is found, set an error\n-  gdv_fn_context_set_error_msg(context, \"Invalid value for boolean.\");\n+  gdv_fn_context_set_error_msg(context_ptr, \"Invalid value for boolean.\");\n\nReview comment:\n       actually this is a comment not related to this PR. But I feel the error message should have more detail. For instance, 'Invalid value for boolean \\<value\\>' Just simply stating Invalid value for boolean does not give clarity on what was wrong with the value.\n\n##########\nFile path: cpp/src/gandiva/llvm_types.h\n##########\n@@ -57,14 +58,20 @@ class GANDIVA_EXPORT LLVMTypes {\n \n   llvm::PointerType* ptr_type(llvm::Type* type) { return type->getPointerTo(); }\n \n+  llvm::PointerType* opaque_ptr_type() { return ptr_type(i8_type()); }\n\nReview comment:\n       shouldn't opaque_ptr_type be ptr_type(void_type)?; any reason why it is ptr_type() of i8_type\n\n##########\nFile path: cpp/src/gandiva/precompiled/string_ops.cc\n##########\n@@ -530,9 +533,9 @@ gdv_boolean compare_lower_strings(const char* base_str, gdv_int32 base_str_len,\n // Try to cast the received string ('0', '1', 'true', 'false'), ignoring leading\n // and trailing spaces, also ignoring lower and upper case.\n FORCE_INLINE\n-gdv_boolean castBIT_utf8(gdv_int64 context, const char* data, gdv_int32 data_len) {\n+gdv_boolean castBIT_utf8(void* context_ptr, const char* data, gdv_int32 data_len) {\n   if (data_len <= 0) {\n-    gdv_fn_context_set_error_msg(context, \"Invalid value for boolean.\");\n+    gdv_fn_context_set_error_msg(context_ptr, \"Invalid value for boolean.\");\n\nReview comment:\n       Not related to this PR. But it is a generic comment on not enough information in error messages through out Gandiva, which make it very difficult to understand why Gandiva rejected a request.\r\n   \r\n   In this case, the error message should have more details: e.g 'Invalid value for boolean; bad length \\<length\\>'\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-26T05:41:27.220+0000",
                    "updated": "2021-11-26T05:41:27.220+0000",
                    "started": "2021-11-26T05:41:27.219+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "686733",
                    "issueId": "13391246"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13391246/worklog/814856",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "js8544 commented on code in PR #10772:\nURL: https://github.com/apache/arrow/pull/10772#discussion_r990570227\n\n\n##########\ncpp/src/gandiva/llvm_types.h:\n##########\n@@ -57,14 +58,20 @@ class GANDIVA_EXPORT LLVMTypes {\n \n   llvm::PointerType* ptr_type(llvm::Type* type) { return type->getPointerTo(); }\n \n+  llvm::PointerType* opaque_ptr_type() { return ptr_type(i8_type()); }\n\nReview Comment:\n   We've recently added support for opaque pointers\n\n\n\n",
                    "created": "2022-10-08T01:38:18.606+0000",
                    "updated": "2022-10-08T01:38:18.606+0000",
                    "started": "2022-10-08T01:38:18.605+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "814856",
                    "issueId": "13391246"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13391246/worklog/814857",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "js8544 commented on PR #10772:\nURL: https://github.com/apache/arrow/pull/10772#issuecomment-1272192380\n\n   > Is it worth keeping this open/reviving it? cc @js8544\r\n   \r\n   This feature is definitely worth having, if the author would like to resolve the conflicts.\n\n\n",
                    "created": "2022-10-08T01:40:51.934+0000",
                    "updated": "2022-10-08T01:40:51.934+0000",
                    "started": "2022-10-08T01:40:51.933+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "814857",
                    "issueId": "13391246"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 3000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@2378ebee[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6d5884dd[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@240f682c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@dd86e1c[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@50ee4319[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@76662b18[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@29f773f0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@6791505c[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4545313c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@2bcfc67[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@10466733[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7d38d6d7[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 3000,
        "customfield_12312520": null,
        "customfield_12312521": "2021-07-22 04:33:02.0",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": null,
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13426/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2021-07-22T04:33:02.000+0000",
        "updated": "2022-10-08T01:40:52.000+0000",
        "timeoriginalestimate": null,
        "description": "Currently, the JIT code generation / function invocation in Gandiva uses `int64` for pointer types.\r\n\r\nThis breaks especially when indexing into pointers to pointers on platforms where the pointer size is not 64 bit wide.\r\n\r\nTo represent opaque pointers, void* (or i8* in LLVM) should be used where suitable.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 3000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Gandiva] Use platform pointer sizes in code generation",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [],
            "maxResults": 0,
            "total": 0,
            "startAt": 0
        },
        "customfield_12311820": "0|z0t7zk:",
        "customfield_12314139": null
    }
}