{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13208708",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13208708",
    "key": "ARROW-4225",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12340948",
                "id": "12340948",
                "description": "",
                "name": "0.16.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-02-07"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available",
            "sparse"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=mrkn",
            "name": "mrkn",
            "key": "mrkn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Kenta Murata",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328932",
                "id": "12328932",
                "name": "Format"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=mrkn",
            "name": "mrkn",
            "key": "mrkn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Kenta Murata",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=mrkn",
            "name": "mrkn",
            "key": "mrkn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Kenta Murata",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 21600,
            "total": 21600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 21600,
            "total": 21600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4225/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 43,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13208708/worklog/351777",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on pull request #5932: ARROW-4225: [Format][C++] Add CSC sparse matrix support\nURL: https://github.com/apache/arrow/pull/5932\n \n \n   **Note that #5862 should be merged before this**.\r\n   \r\n   I'd like to add CSC sparse matrix support in format and C++ API.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-02T07:36:27.366+0000",
                    "updated": "2019-12-02T07:36:27.366+0000",
                    "started": "2019-12-02T07:36:27.365+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "351777",
                    "issueId": "13208708"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13208708/worklog/351779",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #5932: ARROW-4225: [Format][C++] Add CSC sparse matrix support\nURL: https://github.com/apache/arrow/pull/5932#issuecomment-560274058\n \n \n   https://issues.apache.org/jira/browse/ARROW-4225\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-02T07:45:46.346+0000",
                    "updated": "2019-12-02T07:45:46.346+0000",
                    "started": "2019-12-02T07:45:46.346+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "351779",
                    "issueId": "13208708"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13208708/worklog/356740",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on pull request #5932: ARROW-4225: [Format][C++] Add CSC sparse matrix support\nURL: https://github.com/apache/arrow/pull/5932#discussion_r355793717\n \n \n\n ##########\n File path: cpp/src/arrow/sparse_tensor.cc\n ##########\n @@ -446,6 +571,29 @@ Status MakeTensorFromSparseTensor(MemoryPool* pool, const SparseTensor* sparse_t\n                                       sparse_tensor->shape());\n       return Status::OK();\n     }\n+\n+    case SparseTensorFormat::CSC: {\n+      const auto& sparse_index =\n+          internal::checked_cast<const SparseCSCIndex&>(*sparse_tensor->sparse_index());\n+      const std::shared_ptr<const Tensor> indptr = sparse_index.indptr();\n+      const std::shared_ptr<const Tensor> indices = sparse_index.indices();\n+      const auto raw_data =\n+          reinterpret_cast<const value_type*>(sparse_tensor->raw_data());\n+\n+      int64_t offset;\n+      for (int64_t j = 0; j < indptr->size() - 1; ++j) {\n+        const int64_t start = indptr->Value<IndexValueType>({j});\n+        const int64_t stop = indptr->Value<IndexValueType>({j + 1});\n+        for (int64_t i = start; i < stop; ++i) {\n+          offset = j + indices->Value<IndexValueType>({i}) * sparse_tensor->shape()[1];\n+          values[offset] = raw_data[i];\n+        }\n+      }\n+      *out = std::make_shared<Tensor>(sparse_tensor->type(), values_buffer,\n+                                      sparse_tensor->shape());\n+      return Status::OK();\n+      return Status::NotImplemented(\"CSC format is not implemented yet\");\n \n Review comment:\n   This can probably be removed.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-10T01:33:04.723+0000",
                    "updated": "2019-12-10T01:33:04.723+0000",
                    "started": "2019-12-10T01:33:04.723+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "356740",
                    "issueId": "13208708"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13208708/worklog/356741",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on pull request #5932: ARROW-4225: [Format][C++] Add CSC sparse matrix support\nURL: https://github.com/apache/arrow/pull/5932#discussion_r355797244\n \n \n\n ##########\n File path: cpp/src/arrow/sparse_tensor_test.cc\n ##########\n @@ -712,4 +744,163 @@ INSTANTIATE_TYPED_TEST_CASE_P(TestInt64, TestSparseCSRMatrixForIndexValueType, I\n INSTANTIATE_TYPED_TEST_CASE_P(TestUInt64, TestSparseCSRMatrixForIndexValueType,\n                               UInt64Type);\n \n+template <typename IndexValueType>\n+class TestSparseCSCMatrixBase : public ::testing::Test {\n+ public:\n+  void SetUp() {\n+    shape_ = {6, 4};\n+    dim_names_ = {\"foo\", \"bar\"};\n+\n+    // Dense representation:\n+    // [\n+    //    1  0  2  0\n+    //    0  3  0  4\n+    //    5  0  6  0\n+    //    0 11  0 12\n+    //   13  0 14  0\n+    //    0 15  0 16\n+    // ]\n+    std::vector<int64_t> dense_values = {1, 0,  2, 0,  0,  3, 0,  4, 5, 0,  6, 0,\n+                                         0, 11, 0, 12, 13, 0, 14, 0, 0, 15, 0, 16};\n+    auto dense_data = Buffer::Wrap(dense_values);\n+    NumericTensor<Int64Type> dense_tensor(dense_data, shape_, {}, dim_names_);\n+    ASSERT_OK_AND_ASSIGN(sparse_tensor_from_dense_,\n+                         SparseCSCMatrix::Make(\n+                             dense_tensor, TypeTraits<IndexValueType>::type_singleton()));\n+  }\n+\n+ protected:\n+  std::vector<int64_t> shape_;\n+  std::vector<std::string> dim_names_;\n+  std::shared_ptr<SparseCSCMatrix> sparse_tensor_from_dense_;\n+};\n+\n+class TestSparseCSCMatrix : public TestSparseCSCMatrixBase<Int64Type> {};\n+\n+TEST_F(TestSparseCSCMatrix, CreationFromNumericTensor2D) {\n+  std::vector<int64_t> values = {1, 0,  2, 0,  0,  3, 0,  4, 5, 0,  6, 0,\n+                                 0, 11, 0, 12, 13, 0, 14, 0, 0, 15, 0, 16};\n+  std::shared_ptr<Buffer> buffer = Buffer::Wrap(values);\n+  NumericTensor<Int64Type> tensor(buffer, this->shape_);\n+\n+  std::shared_ptr<SparseCSCMatrix> st1;\n+  ASSERT_OK_AND_ASSIGN(st1, SparseCSCMatrix::Make(tensor));\n+\n+  auto st2 = this->sparse_tensor_from_dense_;\n+\n+  CheckSparseIndexFormatType(SparseTensorFormat::CSC, *st1);\n+\n+  ASSERT_EQ(12, st1->non_zero_length());\n+  ASSERT_TRUE(st1->is_mutable());\n+\n+  ASSERT_EQ(std::vector<std::string>({\"foo\", \"bar\"}), st2->dim_names());\n+  ASSERT_EQ(\"foo\", st2->dim_name(0));\n+  ASSERT_EQ(\"bar\", st2->dim_name(1));\n+\n+  ASSERT_EQ(std::vector<std::string>({}), st1->dim_names());\n+  ASSERT_EQ(\"\", st1->dim_name(0));\n+  ASSERT_EQ(\"\", st1->dim_name(1));\n+  ASSERT_EQ(\"\", st1->dim_name(2));\n \n Review comment:\n   Is this object not only 2D?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-10T01:33:04.831+0000",
                    "updated": "2019-12-10T01:33:04.831+0000",
                    "started": "2019-12-10T01:33:04.831+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "356741",
                    "issueId": "13208708"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13208708/worklog/356742",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on pull request #5932: ARROW-4225: [Format][C++] Add CSC sparse matrix support\nURL: https://github.com/apache/arrow/pull/5932#discussion_r355801439\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/reader.cc\n ##########\n @@ -926,6 +935,15 @@ Status MakeSparseTensorWithSparseCSRIndex(\n   return Status::OK();\n }\n \n+Status MakeSparseTensorWithSparseCSCIndex(\n \n Review comment:\n   Should this also change to `Result` type? I suppose that would require changing `ReadSparseTensorPayload` and many other functions, so maybe out of scope here.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-10T01:33:04.845+0000",
                    "updated": "2019-12-10T01:33:04.845+0000",
                    "started": "2019-12-10T01:33:04.845+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "356742",
                    "issueId": "13208708"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13208708/worklog/357111",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5932: ARROW-4225: [Format][C++] Add CSC sparse matrix support\nURL: https://github.com/apache/arrow/pull/5932#discussion_r356053819\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/metadata_internal.cc\n ##########\n @@ -988,11 +988,25 @@ Status MakeSparseTensorIndexCOO(FBB& fbb, const SparseCOOIndex& sparse_index,\n   return Status::OK();\n }\n \n-Status MakeSparseMatrixIndexCSR(FBB& fbb, const SparseCSRIndex& sparse_index,\n+template <typename SparseIndexType>\n \n Review comment:\n   Perhaps we could put those helpers in the anonymous namespace?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-10T14:42:00.281+0000",
                    "updated": "2019-12-10T14:42:00.281+0000",
                    "started": "2019-12-10T14:42:00.280+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "357111",
                    "issueId": "13208708"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13208708/worklog/357112",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5932: ARROW-4225: [Format][C++] Add CSC sparse matrix support\nURL: https://github.com/apache/arrow/pull/5932#discussion_r356055229\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/read_write_test.cc\n ##########\n @@ -1242,6 +1245,46 @@ void TestSparseTensorRoundTrip<IndexValueType>::CheckSparseTensorRoundTrip(\n   ASSERT_TRUE(result->Equals(sparse_tensor));\n }\n \n+template <typename IndexValueType>\n+void TestSparseTensorRoundTrip<IndexValueType>::CheckSparseTensorRoundTrip(\n \n Review comment:\n   This is almost the same as the CSR version above. Perhaps combine the two using an additional template parameter?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-10T14:42:00.352+0000",
                    "updated": "2019-12-10T14:42:00.352+0000",
                    "started": "2019-12-10T14:42:00.352+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "357112",
                    "issueId": "13208708"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13208708/worklog/357113",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5932: ARROW-4225: [Format][C++] Add CSC sparse matrix support\nURL: https://github.com/apache/arrow/pull/5932#discussion_r356061817\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/reader.cc\n ##########\n @@ -926,6 +935,15 @@ Status MakeSparseTensorWithSparseCSRIndex(\n   return Status::OK();\n }\n \n+Status MakeSparseTensorWithSparseCSCIndex(\n \n Review comment:\n   We should probably change all `MakeSparseTensorWithSparseXXXIndex` functions at the same time, for consistency. It can be done in another PR.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-10T14:42:00.358+0000",
                    "updated": "2019-12-10T14:42:00.358+0000",
                    "started": "2019-12-10T14:42:00.358+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "357113",
                    "issueId": "13208708"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13208708/worklog/357114",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5932: ARROW-4225: [Format][C++] Add CSC sparse matrix support\nURL: https://github.com/apache/arrow/pull/5932#discussion_r356054260\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/metadata_internal.h\n ##########\n @@ -112,7 +112,7 @@ Status GetSparseCOOIndexMetadata(const flatbuf::SparseTensorIndexCOO* sparse_ind\n                                  std::shared_ptr<DataType>* indices_type);\n \n // EXPERIMENTAL: Extracting metadata of a SparseCSRIndex from the message\n \n Review comment:\n   Update this comment?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-10T14:42:00.450+0000",
                    "updated": "2019-12-10T14:42:00.450+0000",
                    "started": "2019-12-10T14:42:00.450+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "357114",
                    "issueId": "13208708"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13208708/worklog/357115",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5932: ARROW-4225: [Format][C++] Add CSC sparse matrix support\nURL: https://github.com/apache/arrow/pull/5932#discussion_r356070897\n \n \n\n ##########\n File path: cpp/src/arrow/sparse_tensor.h\n ##########\n @@ -220,14 +261,66 @@ class ARROW_EXPORT SparseCSRIndex : public internal::SparseIndexBase<SparseCSRIn\n       return Status::OK();\n     }\n \n-    return Status::Invalid(\"shape length is inconsistent with the CSR index\");\n+    return Status::Invalid(\"shape length is inconsistent with the \", ToString());\n   }\n \n  protected:\n   std::shared_ptr<Tensor> indptr_;\n   std::shared_ptr<Tensor> indices_;\n };\n \n+}  // namespace internal\n+\n+// ----------------------------------------------------------------------\n+// SparseCSRIndex class\n+\n+/// \\brief EXPERIMENTAL: The index data for a CSR sparse matrix\n+///\n+/// A CSR sparse index manages the location of its non-zero values by two\n+/// vectors.\n+///\n+/// The first vector, called indptr, represents the range of the rows; the i-th\n+/// row spans from indptr[i] to indptr[i+1] in the corresponding value vector.\n+/// So the length of an indptr vector is the number of rows + 1.\n+///\n+/// The other vector, called indices, represents the column indices of the\n+/// corresponding non-zero values.  So the length of an indices vector is same\n+/// as the number of non-zero-values.\n+class ARROW_EXPORT SparseCSRIndex\n+    : public internal::SparseCSXIndex<SparseCSRIndex,\n+                                      internal::SparseMatrixCompressedAxis::ROW> {\n+ public:\n+  constexpr static char const* TYPE_NAME = \"SparseCSRIndex\";\n \n Review comment:\n   Why not define `format_id` here instead of using `std::conditional` in the base class?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-10T14:42:00.454+0000",
                    "updated": "2019-12-10T14:42:00.454+0000",
                    "started": "2019-12-10T14:42:00.454+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "357115",
                    "issueId": "13208708"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13208708/worklog/357116",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5932: ARROW-4225: [Format][C++] Add CSC sparse matrix support\nURL: https://github.com/apache/arrow/pull/5932#discussion_r356063088\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/reader.cc\n ##########\n @@ -899,13 +898,23 @@ Status ReadSparseCSRIndex(const flatbuf::SparseTensor* sparse_tensor,\n   ARROW_ASSIGN_OR_RAISE(auto indices_data,\n                         file->ReadAt(indices_buffer->offset(), indices_buffer->length()));\n \n-  std::vector<int64_t> indptr_shape({shape[0] + 1});\n   std::vector<int64_t> indices_shape({non_zero_length});\n-\n-  *out = std::make_shared<SparseCSRIndex>(\n-      std::make_shared<Tensor>(indptr_type, indptr_data, indptr_shape),\n-      std::make_shared<Tensor>(indices_type, indices_data, indices_shape));\n-  return Status::OK();\n+  switch (sparse_index->compressedAxis()) {\n+    case flatbuf::SparseMatrixCompressedAxis_Row: {\n+      std::vector<int64_t> indptr_shape({shape[0] + 1});\n \n Review comment:\n   Perhaps we should check that `shape` has the right size here? Or is it done elsewhere already?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-10T14:42:00.457+0000",
                    "updated": "2019-12-10T14:42:00.457+0000",
                    "started": "2019-12-10T14:42:00.457+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "357116",
                    "issueId": "13208708"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13208708/worklog/357117",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5932: ARROW-4225: [Format][C++] Add CSC sparse matrix support\nURL: https://github.com/apache/arrow/pull/5932#discussion_r356066578\n \n \n\n ##########\n File path: cpp/src/arrow/sparse_tensor.cc\n ##########\n @@ -301,6 +301,127 @@ class SparseTensorConverter<TYPE, SparseCSRIndex>\n   inline Status CheckMaximumValue(const uint64_t) const { return Status::OK(); }\n };\n \n+// ----------------------------------------------------------------------\n+// SparseTensorConverter for SparseCSCIndex\n+\n+template <typename TYPE>\n+class SparseTensorConverter<TYPE, SparseCSCIndex>\n+    : private SparseTensorConverterBase<TYPE> {\n+ public:\n+  using BaseClass = SparseTensorConverterBase<TYPE>;\n+  using NumericTensorType = typename BaseClass::NumericTensorType;\n+  using value_type = typename BaseClass::value_type;\n+\n+  SparseTensorConverter(const NumericTensorType& tensor,\n+                        const std::shared_ptr<DataType>& index_value_type,\n+                        MemoryPool* pool)\n+      : BaseClass(tensor, index_value_type, pool) {}\n+\n+  template <typename IndexValueType>\n+  Status Convert() {\n+    using c_index_value_type = typename IndexValueType::c_type;\n+    RETURN_NOT_OK(CheckMaximumValue(std::numeric_limits<c_index_value_type>::max()));\n+    const int64_t indices_elsize = sizeof(c_index_value_type);\n+\n+    const int64_t ndim = tensor_.ndim();\n+    if (ndim > 2) {\n+      // LCOV_EXCL_START: The following invalid causes program failure.\n+      return Status::Invalid(\"Invalid tensor dimension\");\n+      // LCOV_EXCL_STOP\n+    }\n+\n+    const int64_t nr = tensor_.shape()[0];\n+    const int64_t nc = tensor_.shape()[1];\n+    int64_t nonzero_count = -1;\n+    RETURN_NOT_OK(tensor_.CountNonZero(&nonzero_count));\n+\n+    std::shared_ptr<Buffer> indptr_buffer;\n+    std::shared_ptr<Buffer> indices_buffer;\n+\n+    std::shared_ptr<Buffer> values_buffer;\n+    RETURN_NOT_OK(\n+        AllocateBuffer(pool_, sizeof(value_type) * nonzero_count, &values_buffer));\n+    value_type* values = reinterpret_cast<value_type*>(values_buffer->mutable_data());\n+\n+    if (ndim <= 1) {\n+      return Status::NotImplemented(\"TODO for ndim <= 1\");\n+    } else {\n+      RETURN_NOT_OK(AllocateBuffer(pool_, indices_elsize * (nc + 1), &indptr_buffer));\n+      auto* indptr = reinterpret_cast<c_index_value_type*>(indptr_buffer->mutable_data());\n+\n+      RETURN_NOT_OK(\n+          AllocateBuffer(pool_, indices_elsize * nonzero_count, &indices_buffer));\n+      auto* indices =\n+          reinterpret_cast<c_index_value_type*>(indices_buffer->mutable_data());\n+\n+      c_index_value_type k = 0;\n+      *indptr++ = 0;\n+      for (int64_t j = 0; j < nc; ++j) {\n+        for (int64_t i = 0; i < nr; ++i) {\n+          const value_type x = tensor_.Value({i, j});\n+          if (x != 0) {\n+            *values++ = x;\n+            *indices++ = static_cast<c_index_value_type>(i);\n+            k++;\n+          }\n+        }\n+        *indptr++ = k;\n+      }\n+    }\n+\n+    std::vector<int64_t> indptr_shape({nc + 1});\n+    std::shared_ptr<Tensor> indptr_tensor =\n+        std::make_shared<Tensor>(index_value_type_, indptr_buffer, indptr_shape);\n+\n+    std::vector<int64_t> indices_shape({nonzero_count});\n+    std::shared_ptr<Tensor> indices_tensor =\n+        std::make_shared<Tensor>(index_value_type_, indices_buffer, indices_shape);\n+\n+    sparse_index = std::make_shared<SparseCSCIndex>(indptr_tensor, indices_tensor);\n+    data = values_buffer;\n+\n+    return Status::OK();\n+  }\n+\n+#define CALL_TYPE_SPECIFIC_CONVERT(TYPE_CLASS) \\\n+  case TYPE_CLASS##Type::type_id:              \\\n+    return Convert<TYPE_CLASS##Type>();\n+\n+  Status Convert() {\n+    switch (index_value_type_->id()) {\n+      ARROW_GENERATE_FOR_ALL_INTEGER_TYPES(CALL_TYPE_SPECIFIC_CONVERT);\n+      // LCOV_EXCL_START: The following invalid causes program failure.\n+      default:\n+        return Status::Invalid(\"Unsupported SparseTensor index value type\");\n \n Review comment:\n   Shouldn't this be `TypeError`?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-10T14:42:00.636+0000",
                    "updated": "2019-12-10T14:42:00.636+0000",
                    "started": "2019-12-10T14:42:00.636+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "357117",
                    "issueId": "13208708"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13208708/worklog/357118",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5932: ARROW-4225: [Format][C++] Add CSC sparse matrix support\nURL: https://github.com/apache/arrow/pull/5932#discussion_r356071730\n \n \n\n ##########\n File path: cpp/src/arrow/sparse_tensor.h\n ##########\n @@ -220,14 +261,66 @@ class ARROW_EXPORT SparseCSRIndex : public internal::SparseIndexBase<SparseCSRIn\n       return Status::OK();\n     }\n \n-    return Status::Invalid(\"shape length is inconsistent with the CSR index\");\n+    return Status::Invalid(\"shape length is inconsistent with the \", ToString());\n   }\n \n  protected:\n   std::shared_ptr<Tensor> indptr_;\n   std::shared_ptr<Tensor> indices_;\n };\n \n+}  // namespace internal\n+\n+// ----------------------------------------------------------------------\n+// SparseCSRIndex class\n+\n+/// \\brief EXPERIMENTAL: The index data for a CSR sparse matrix\n+///\n+/// A CSR sparse index manages the location of its non-zero values by two\n+/// vectors.\n+///\n+/// The first vector, called indptr, represents the range of the rows; the i-th\n+/// row spans from indptr[i] to indptr[i+1] in the corresponding value vector.\n+/// So the length of an indptr vector is the number of rows + 1.\n+///\n+/// The other vector, called indices, represents the column indices of the\n+/// corresponding non-zero values.  So the length of an indices vector is same\n+/// as the number of non-zero-values.\n+class ARROW_EXPORT SparseCSRIndex\n+    : public internal::SparseCSXIndex<SparseCSRIndex,\n+                                      internal::SparseMatrixCompressedAxis::ROW> {\n+ public:\n+  constexpr static char const* TYPE_NAME = \"SparseCSRIndex\";\n \n Review comment:\n   Also, make this `kTypeName`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-10T14:42:00.684+0000",
                    "updated": "2019-12-10T14:42:00.684+0000",
                    "started": "2019-12-10T14:42:00.684+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "357118",
                    "issueId": "13208708"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13208708/worklog/357119",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5932: ARROW-4225: [Format][C++] Add CSC sparse matrix support\nURL: https://github.com/apache/arrow/pull/5932#discussion_r356064125\n \n \n\n ##########\n File path: cpp/src/arrow/sparse_tensor.cc\n ##########\n @@ -301,6 +301,127 @@ class SparseTensorConverter<TYPE, SparseCSRIndex>\n   inline Status CheckMaximumValue(const uint64_t) const { return Status::OK(); }\n };\n \n+// ----------------------------------------------------------------------\n+// SparseTensorConverter for SparseCSCIndex\n+\n+template <typename TYPE>\n+class SparseTensorConverter<TYPE, SparseCSCIndex>\n+    : private SparseTensorConverterBase<TYPE> {\n+ public:\n+  using BaseClass = SparseTensorConverterBase<TYPE>;\n+  using NumericTensorType = typename BaseClass::NumericTensorType;\n+  using value_type = typename BaseClass::value_type;\n+\n+  SparseTensorConverter(const NumericTensorType& tensor,\n+                        const std::shared_ptr<DataType>& index_value_type,\n+                        MemoryPool* pool)\n+      : BaseClass(tensor, index_value_type, pool) {}\n+\n+  template <typename IndexValueType>\n+  Status Convert() {\n+    using c_index_value_type = typename IndexValueType::c_type;\n+    RETURN_NOT_OK(CheckMaximumValue(std::numeric_limits<c_index_value_type>::max()));\n+    const int64_t indices_elsize = sizeof(c_index_value_type);\n+\n+    const int64_t ndim = tensor_.ndim();\n+    if (ndim > 2) {\n+      // LCOV_EXCL_START: The following invalid causes program failure.\n+      return Status::Invalid(\"Invalid tensor dimension\");\n+      // LCOV_EXCL_STOP\n+    }\n+\n+    const int64_t nr = tensor_.shape()[0];\n+    const int64_t nc = tensor_.shape()[1];\n+    int64_t nonzero_count = -1;\n+    RETURN_NOT_OK(tensor_.CountNonZero(&nonzero_count));\n+\n+    std::shared_ptr<Buffer> indptr_buffer;\n+    std::shared_ptr<Buffer> indices_buffer;\n+\n+    std::shared_ptr<Buffer> values_buffer;\n+    RETURN_NOT_OK(\n+        AllocateBuffer(pool_, sizeof(value_type) * nonzero_count, &values_buffer));\n+    value_type* values = reinterpret_cast<value_type*>(values_buffer->mutable_data());\n+\n+    if (ndim <= 1) {\n+      return Status::NotImplemented(\"TODO for ndim <= 1\");\n \n Review comment:\n   Why TODO? Does it make sense to use CSC for a 1-dimensional tensor?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-10T14:42:00.723+0000",
                    "updated": "2019-12-10T14:42:00.723+0000",
                    "started": "2019-12-10T14:42:00.722+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "357119",
                    "issueId": "13208708"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13208708/worklog/357120",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5932: ARROW-4225: [Format][C++] Add CSC sparse matrix support\nURL: https://github.com/apache/arrow/pull/5932#discussion_r356068566\n \n \n\n ##########\n File path: cpp/src/arrow/sparse_tensor.h\n ##########\n @@ -136,50 +139,80 @@ class ARROW_EXPORT SparseCOOIndex : public internal::SparseIndexBase<SparseCOOIn\n   std::shared_ptr<Tensor> coords_;\n };\n \n-// ----------------------------------------------------------------------\n-// SparseCSRIndex class\n+namespace internal {\n \n-/// \\brief EXPERIMENTAL: The index data for a CSR sparse matrix\n-///\n-/// A CSR sparse index manages the location of its non-zero values by two\n-/// vectors.\n-///\n-/// The first vector, called indptr, represents the range of the rows; the i-th\n-/// row spans from indptr[i] to indptr[i+1] in the corresponding value vector.\n-/// So the length of an indptr vector is the number of rows + 1.\n-///\n-/// The other vector, called indices, represents the column indices of the\n-/// corresponding non-zero values.  So the length of an indices vector is same\n-/// as the number of non-zero-values.\n-class ARROW_EXPORT SparseCSRIndex : public internal::SparseIndexBase<SparseCSRIndex> {\n- public:\n-  static constexpr SparseTensorFormat::type format_id = SparseTensorFormat::CSR;\n+struct SparseMatrixCompressedAxis {\n \n Review comment:\n   Can make this a `enum class` instead of an enum-in-a-struct.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-10T14:42:00.726+0000",
                    "updated": "2019-12-10T14:42:00.726+0000",
                    "started": "2019-12-10T14:42:00.726+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "357120",
                    "issueId": "13208708"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13208708/worklog/357121",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5932: ARROW-4225: [Format][C++] Add CSC sparse matrix support\nURL: https://github.com/apache/arrow/pull/5932#discussion_r356069708\n \n \n\n ##########\n File path: cpp/src/arrow/sparse_tensor.h\n ##########\n @@ -136,50 +139,80 @@ class ARROW_EXPORT SparseCOOIndex : public internal::SparseIndexBase<SparseCOOIn\n   std::shared_ptr<Tensor> coords_;\n };\n \n-// ----------------------------------------------------------------------\n-// SparseCSRIndex class\n+namespace internal {\n \n-/// \\brief EXPERIMENTAL: The index data for a CSR sparse matrix\n-///\n-/// A CSR sparse index manages the location of its non-zero values by two\n-/// vectors.\n-///\n-/// The first vector, called indptr, represents the range of the rows; the i-th\n-/// row spans from indptr[i] to indptr[i+1] in the corresponding value vector.\n-/// So the length of an indptr vector is the number of rows + 1.\n-///\n-/// The other vector, called indices, represents the column indices of the\n-/// corresponding non-zero values.  So the length of an indices vector is same\n-/// as the number of non-zero-values.\n-class ARROW_EXPORT SparseCSRIndex : public internal::SparseIndexBase<SparseCSRIndex> {\n- public:\n-  static constexpr SparseTensorFormat::type format_id = SparseTensorFormat::CSR;\n+struct SparseMatrixCompressedAxis {\n+  /// EXPERIMENTAL: The axis to be compressed\n+  enum type {\n+    /// The value for CSR matrix\n+    ROW,\n+    /// The value for CSC matrix\n+    COLUMN\n+  };\n+};\n+\n+ARROW_EXPORT\n+Status ValidateSparseCSXIndex(const std::shared_ptr<DataType>& indptr_type,\n+                              const std::shared_ptr<DataType>& indices_type,\n+                              const std::vector<int64_t>& indptr_shape,\n+                              const std::vector<int64_t>& indices_shape,\n+                              char const* type_name);\n \n-  /// \\brief Make SparseCSRIndex from raw properties\n-  static Result<std::shared_ptr<SparseCSRIndex>> Make(\n+ARROW_EXPORT\n+void CheckSparseCSXIndexValidity(const std::shared_ptr<DataType>& indptr_type,\n+                                 const std::shared_ptr<DataType>& indices_type,\n+                                 const std::vector<int64_t>& indptr_shape,\n+                                 const std::vector<int64_t>& indices_shape,\n+                                 char const* type_name);\n+\n+template <typename SparseIndexType, SparseMatrixCompressedAxis::type COMPRESSED_AXIS>\n+class SparseCSXIndex : public SparseIndexBase<SparseIndexType> {\n+ public:\n+  static constexpr SparseTensorFormat::type format_id = std::conditional<\n+      COMPRESSED_AXIS == SparseMatrixCompressedAxis::ROW,\n+      std::integral_constant<SparseTensorFormat::type, SparseTensorFormat::CSR>,\n \n Review comment:\n   Why is `std::integral_constant` needed?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-10T14:42:00.734+0000",
                    "updated": "2019-12-10T14:42:00.734+0000",
                    "started": "2019-12-10T14:42:00.733+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "357121",
                    "issueId": "13208708"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13208708/worklog/357122",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5932: ARROW-4225: [Format][C++] Add CSC sparse matrix support\nURL: https://github.com/apache/arrow/pull/5932#discussion_r356066826\n \n \n\n ##########\n File path: cpp/src/arrow/sparse_tensor.cc\n ##########\n @@ -446,6 +571,29 @@ Status MakeTensorFromSparseTensor(MemoryPool* pool, const SparseTensor* sparse_t\n                                       sparse_tensor->shape());\n       return Status::OK();\n     }\n+\n+    case SparseTensorFormat::CSC: {\n+      const auto& sparse_index =\n+          internal::checked_cast<const SparseCSCIndex&>(*sparse_tensor->sparse_index());\n+      const std::shared_ptr<const Tensor> indptr = sparse_index.indptr();\n+      const std::shared_ptr<const Tensor> indices = sparse_index.indices();\n+      const auto raw_data =\n+          reinterpret_cast<const value_type*>(sparse_tensor->raw_data());\n+\n+      int64_t offset;\n+      for (int64_t j = 0; j < indptr->size() - 1; ++j) {\n+        const int64_t start = indptr->Value<IndexValueType>({j});\n+        const int64_t stop = indptr->Value<IndexValueType>({j + 1});\n+        for (int64_t i = start; i < stop; ++i) {\n+          offset = j + indices->Value<IndexValueType>({i}) * sparse_tensor->shape()[1];\n+          values[offset] = raw_data[i];\n+        }\n+      }\n+      *out = std::make_shared<Tensor>(sparse_tensor->type(), values_buffer,\n+                                      sparse_tensor->shape());\n+      return Status::OK();\n+      return Status::NotImplemented(\"CSC format is not implemented yet\");\n \n Review comment:\n   +1\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-10T14:42:00.792+0000",
                    "updated": "2019-12-10T14:42:00.792+0000",
                    "started": "2019-12-10T14:42:00.792+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "357122",
                    "issueId": "13208708"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13208708/worklog/357123",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5932: ARROW-4225: [Format][C++] Add CSC sparse matrix support\nURL: https://github.com/apache/arrow/pull/5932#discussion_r356063164\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/reader.cc\n ##########\n @@ -899,13 +898,23 @@ Status ReadSparseCSRIndex(const flatbuf::SparseTensor* sparse_tensor,\n   ARROW_ASSIGN_OR_RAISE(auto indices_data,\n                         file->ReadAt(indices_buffer->offset(), indices_buffer->length()));\n \n-  std::vector<int64_t> indptr_shape({shape[0] + 1});\n   std::vector<int64_t> indices_shape({non_zero_length});\n-\n-  *out = std::make_shared<SparseCSRIndex>(\n-      std::make_shared<Tensor>(indptr_type, indptr_data, indptr_shape),\n-      std::make_shared<Tensor>(indices_type, indices_data, indices_shape));\n-  return Status::OK();\n+  switch (sparse_index->compressedAxis()) {\n+    case flatbuf::SparseMatrixCompressedAxis_Row: {\n+      std::vector<int64_t> indptr_shape({shape[0] + 1});\n+      return std::make_shared<SparseCSRIndex>(\n+          std::make_shared<Tensor>(indptr_type, indptr_data, indptr_shape),\n+          std::make_shared<Tensor>(indices_type, indices_data, indices_shape));\n+    }\n+    case flatbuf::SparseMatrixCompressedAxis_Column: {\n+      std::vector<int64_t> indptr_shape({shape[1] + 1});\n \n Review comment:\n   Ditto.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-10T14:42:00.797+0000",
                    "updated": "2019-12-10T14:42:00.797+0000",
                    "started": "2019-12-10T14:42:00.796+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "357123",
                    "issueId": "13208708"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13208708/worklog/357178",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on pull request #5932: ARROW-4225: [Format][C++] Add CSC sparse matrix support\nURL: https://github.com/apache/arrow/pull/5932#discussion_r356099409\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/reader.cc\n ##########\n @@ -899,13 +898,23 @@ Status ReadSparseCSRIndex(const flatbuf::SparseTensor* sparse_tensor,\n   ARROW_ASSIGN_OR_RAISE(auto indices_data,\n                         file->ReadAt(indices_buffer->offset(), indices_buffer->length()));\n \n-  std::vector<int64_t> indptr_shape({shape[0] + 1});\n   std::vector<int64_t> indices_shape({non_zero_length});\n-\n-  *out = std::make_shared<SparseCSRIndex>(\n-      std::make_shared<Tensor>(indptr_type, indptr_data, indptr_shape),\n-      std::make_shared<Tensor>(indices_type, indices_data, indices_shape));\n-  return Status::OK();\n+  switch (sparse_index->compressedAxis()) {\n+    case flatbuf::SparseMatrixCompressedAxis_Row: {\n+      std::vector<int64_t> indptr_shape({shape[0] + 1});\n \n Review comment:\n   It's checked when calling the [constructor](https://github.com/apache/arrow/blob/8f4a212e1278dc32e6d9ca2e9db3e602f8971473/cpp/src/arrow/sparse_tensor.h#L229) with [ValidateSparseCSXIndex](https://github.com/apache/arrow/blob/8f4a212e1278dc32e6d9ca2e9db3e602f8971473/cpp/src/arrow/sparse_tensor.cc#L726)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-10T15:20:49.713+0000",
                    "updated": "2019-12-10T15:20:49.713+0000",
                    "started": "2019-12-10T15:20:49.713+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "357178",
                    "issueId": "13208708"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13208708/worklog/357183",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on pull request #5932: ARROW-4225: [Format][C++] Add CSC sparse matrix support\nURL: https://github.com/apache/arrow/pull/5932#discussion_r356102183\n \n \n\n ##########\n File path: cpp/src/arrow/sparse_tensor.cc\n ##########\n @@ -301,6 +301,127 @@ class SparseTensorConverter<TYPE, SparseCSRIndex>\n   inline Status CheckMaximumValue(const uint64_t) const { return Status::OK(); }\n };\n \n+// ----------------------------------------------------------------------\n+// SparseTensorConverter for SparseCSCIndex\n+\n+template <typename TYPE>\n+class SparseTensorConverter<TYPE, SparseCSCIndex>\n+    : private SparseTensorConverterBase<TYPE> {\n+ public:\n+  using BaseClass = SparseTensorConverterBase<TYPE>;\n+  using NumericTensorType = typename BaseClass::NumericTensorType;\n+  using value_type = typename BaseClass::value_type;\n+\n+  SparseTensorConverter(const NumericTensorType& tensor,\n+                        const std::shared_ptr<DataType>& index_value_type,\n+                        MemoryPool* pool)\n+      : BaseClass(tensor, index_value_type, pool) {}\n+\n+  template <typename IndexValueType>\n+  Status Convert() {\n+    using c_index_value_type = typename IndexValueType::c_type;\n+    RETURN_NOT_OK(CheckMaximumValue(std::numeric_limits<c_index_value_type>::max()));\n+    const int64_t indices_elsize = sizeof(c_index_value_type);\n+\n+    const int64_t ndim = tensor_.ndim();\n+    if (ndim > 2) {\n+      // LCOV_EXCL_START: The following invalid causes program failure.\n+      return Status::Invalid(\"Invalid tensor dimension\");\n+      // LCOV_EXCL_STOP\n+    }\n+\n+    const int64_t nr = tensor_.shape()[0];\n+    const int64_t nc = tensor_.shape()[1];\n+    int64_t nonzero_count = -1;\n+    RETURN_NOT_OK(tensor_.CountNonZero(&nonzero_count));\n+\n+    std::shared_ptr<Buffer> indptr_buffer;\n+    std::shared_ptr<Buffer> indices_buffer;\n+\n+    std::shared_ptr<Buffer> values_buffer;\n+    RETURN_NOT_OK(\n+        AllocateBuffer(pool_, sizeof(value_type) * nonzero_count, &values_buffer));\n+    value_type* values = reinterpret_cast<value_type*>(values_buffer->mutable_data());\n+\n+    if (ndim <= 1) {\n+      return Status::NotImplemented(\"TODO for ndim <= 1\");\n \n Review comment:\n   Perhaps this we could implement this as Nx1 dimensional CSC?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-10T15:25:02.521+0000",
                    "updated": "2019-12-10T15:25:02.521+0000",
                    "started": "2019-12-10T15:25:02.520+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "357183",
                    "issueId": "13208708"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 21600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@27b04a33[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1591f462[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5c94f066[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@463c3d72[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@55553e37[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@2a9f3584[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@51f3e771[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@76839790[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@adbabf1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@593b8c3b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@173d3002[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7de81a62[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 21600,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Dec 18 09:33:26 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-12-18T09:33:26.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4225/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2019-01-10T06:55:02.000+0000",
        "updated": "2019-12-18T09:33:26.000+0000",
        "timeoriginalestimate": null,
        "description": "CSC sparse matrix is necessary for integration with existing sparse\u00a0matrix libraries (umfpack, superlu).\u00a0https://github.com/apache/arrow/pull/2546#issuecomment-422135645",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "6h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 21600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Format][C++] Add CSC sparse matrix support",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13208708/comment/16942565",
                    "id": "16942565",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=mrkn",
                        "name": "mrkn",
                        "key": "mrkn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Kenta Murata",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "@rok I've already started to work on this ticket.  I'm sorry for forgetting to update the ticket property.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=mrkn",
                        "name": "mrkn",
                        "key": "mrkn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Kenta Murata",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-10-02T08:02:44.265+0000",
                    "updated": "2019-10-02T08:02:44.265+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13208708/comment/16942568",
                    "id": "16942568",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=rokm",
                        "name": "rokm",
                        "key": "rokm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Rok Mihevc",
                        "active": true,
                        "timeZone": "Europe/Amsterdam"
                    },
                    "body": "That's great @mrkn! Did you also start on [CSF|https://issues.apache.org/jira/browse/ARROW-4226]? If not I'll pick it up.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=rokm",
                        "name": "rokm",
                        "key": "rokm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Rok Mihevc",
                        "active": true,
                        "timeZone": "Europe/Amsterdam"
                    },
                    "created": "2019-10-02T08:07:43.896+0000",
                    "updated": "2019-10-02T08:07:43.896+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13208708/comment/16942578",
                    "id": "16942578",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=mrkn",
                        "name": "mrkn",
                        "key": "mrkn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Kenta Murata",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "@rok No, I didn't. I guess there is no library that has CSF tensor implementation, although the paper exists.\r\nSo I'm waiting for pydata/sparse's implementation.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=mrkn",
                        "name": "mrkn",
                        "key": "mrkn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Kenta Murata",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-10-02T08:14:55.788+0000",
                    "updated": "2019-10-02T08:14:55.788+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13208708/comment/16942598",
                    "id": "16942598",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=rokm",
                        "name": "rokm",
                        "key": "rokm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Rok Mihevc",
                        "active": true,
                        "timeZone": "Europe/Amsterdam"
                    },
                    "body": "Ok, I'll check the paper and see if I can get somewhere. :)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=rokm",
                        "name": "rokm",
                        "key": "rokm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Rok Mihevc",
                        "active": true,
                        "timeZone": "Europe/Amsterdam"
                    },
                    "created": "2019-10-02T08:37:52.369+0000",
                    "updated": "2019-10-02T08:37:52.369+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13208708/comment/16998980",
                    "id": "16998980",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 5932\n[https://github.com/apache/arrow/pull/5932]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2019-12-18T09:33:26.450+0000",
                    "updated": "2019-12-18T09:33:26.450+0000"
                }
            ],
            "maxResults": 5,
            "total": 5,
            "startAt": 0
        },
        "customfield_12311820": "0|u00p1c:",
        "customfield_12314139": null
    }
}