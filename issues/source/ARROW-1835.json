{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13119507",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13119507",
    "key": "ARROW-1835",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341707",
                "id": "12341707",
                "description": "",
                "name": "0.9.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-03-19"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
            "name": "uwe",
            "key": "xhochy",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
            },
            "displayName": "Uwe Korn",
            "active": true,
            "timeZone": "Europe/Berlin"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
            "name": "uwe",
            "key": "xhochy",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
            },
            "displayName": "Uwe Korn",
            "active": true,
            "timeZone": "Europe/Berlin"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
            "name": "uwe",
            "key": "xhochy",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
            },
            "displayName": "Uwe Korn",
            "active": true,
            "timeZone": "Europe/Berlin"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1835/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6e705d85[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@679bc8f7[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3890b102[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@1751a97[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@41549e56[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@17715720[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2ad4fc6d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3dcfa02[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@669f6201[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@7b4af1a5[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@76f05d35[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@1298a503[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Sun Jan 28 15:59:56 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-01-28T15:59:56.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1835/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2017-11-19T18:08:10.000+0000",
        "updated": "2018-01-28T15:59:56.000+0000",
        "timeoriginalestimate": null,
        "description": "Given an `std::tuple` type, create an Arrow schema instance. ",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Create Arrow schema from std::tuple types",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13119507/comment/16325585",
                    "id": "16325585",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy opened a new pull request #1478: ARROW-1835: [C++] Create Arrow schema from std::tuple types\nURL: https://github.com/apache/arrow/pull/1478\n \n \n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-14T13:35:47.982+0000",
                    "updated": "2018-01-14T13:35:47.982+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13119507/comment/16342621",
                    "id": "16342621",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy commented on issue #1478: ARROW-1835: [C++] Create Arrow schema from std::tuple types\nURL: https://github.com/apache/arrow/pull/1478#issuecomment-361073296\n \n \n   +1, failures are due to Thrift\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-28T15:59:23.261+0000",
                    "updated": "2018-01-28T15:59:23.261+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13119507/comment/16342623",
                    "id": "16342623",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy closed pull request #1478: ARROW-1835: [C++] Create Arrow schema from std::tuple types\nURL: https://github.com/apache/arrow/pull/1478\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/CMakeLists.txt b/cpp/src/arrow/CMakeLists.txt\nindex ad86256e0..74674bebb 100644\n--- a/cpp/src/arrow/CMakeLists.txt\n+++ b/cpp/src/arrow/CMakeLists.txt\n@@ -153,6 +153,7 @@ install(FILES\n   pretty_print.h\n   record_batch.h\n   status.h\n+  stl.h\n   table.h\n   table_builder.h\n   tensor.h\n@@ -183,6 +184,7 @@ ADD_ARROW_TEST(memory_pool-test)\n ADD_ARROW_TEST(pretty_print-test)\n ADD_ARROW_TEST(public-api-test)\n ADD_ARROW_TEST(status-test)\n+ADD_ARROW_TEST(stl-test)\n ADD_ARROW_TEST(type-test)\n ADD_ARROW_TEST(table-test)\n ADD_ARROW_TEST(table_builder-test)\ndiff --git a/cpp/src/arrow/stl-test.cc b/cpp/src/arrow/stl-test.cc\nnew file mode 100644\nindex 000000000..c85baa3a1\n--- /dev/null\n+++ b/cpp/src/arrow/stl-test.cc\n@@ -0,0 +1,78 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"gtest/gtest.h\"\n+\n+#include \"arrow/stl.h\"\n+\n+namespace arrow {\n+namespace stl {\n+\n+TEST(TestSchemaFromTuple, PrimitiveTypesVector) {\n+  Schema expected_schema(\n+      {field(\"column1\", int8(), false), field(\"column2\", int16(), false),\n+       field(\"column3\", int32(), false), field(\"column4\", int64(), false),\n+       field(\"column5\", uint8(), false), field(\"column6\", uint16(), false),\n+       field(\"column7\", uint32(), false), field(\"column8\", uint64(), false),\n+       field(\"column9\", boolean(), false), field(\"column10\", utf8(), false)});\n+\n+  std::shared_ptr<Schema> schema =\n+      SchemaFromTuple<std::tuple<int8_t, int16_t, int32_t, int64_t, uint8_t, uint16_t,\n+                                 uint32_t, uint64_t, bool, std::string>>::\n+          MakeSchema(std::vector<std::string>({\"column1\", \"column2\", \"column3\", \"column4\",\n+                                               \"column5\", \"column6\", \"column7\", \"column8\",\n+                                               \"column9\", \"column10\"}));\n+  ASSERT_TRUE(expected_schema.Equals(*schema));\n+}\n+\n+TEST(TestSchemaFromTuple, PrimitiveTypesTuple) {\n+  Schema expected_schema(\n+      {field(\"column1\", int8(), false), field(\"column2\", int16(), false),\n+       field(\"column3\", int32(), false), field(\"column4\", int64(), false),\n+       field(\"column5\", uint8(), false), field(\"column6\", uint16(), false),\n+       field(\"column7\", uint32(), false), field(\"column8\", uint64(), false),\n+       field(\"column9\", boolean(), false), field(\"column10\", utf8(), false)});\n+\n+  std::shared_ptr<Schema> schema = SchemaFromTuple<\n+      std::tuple<int8_t, int16_t, int32_t, int64_t, uint8_t, uint16_t, uint32_t, uint64_t,\n+                 bool, std::string>>::MakeSchema(std::make_tuple(\"column1\", \"column2\",\n+                                                                 \"column3\", \"column4\",\n+                                                                 \"column5\", \"column6\",\n+                                                                 \"column7\", \"column8\",\n+                                                                 \"column9\", \"column10\"));\n+  ASSERT_TRUE(expected_schema.Equals(*schema));\n+}\n+\n+TEST(TestSchemaFromTuple, SimpleList) {\n+  Schema expected_schema({field(\"column1\", list(utf8()), false)});\n+  std::shared_ptr<Schema> schema =\n+      SchemaFromTuple<std::tuple<std::vector<std::string>>>::MakeSchema({\"column1\"});\n+\n+  ASSERT_TRUE(expected_schema.Equals(*schema));\n+}\n+\n+TEST(TestSchemaFromTuple, NestedList) {\n+  Schema expected_schema({field(\"column1\", list(list(boolean())), false)});\n+  std::shared_ptr<Schema> schema =\n+      SchemaFromTuple<std::tuple<std::vector<std::vector<bool>>>>::MakeSchema(\n+          {\"column1\"});\n+\n+  ASSERT_TRUE(expected_schema.Equals(*schema));\n+}\n+\n+}  // namespace stl\n+}  // namespace arrow\ndiff --git a/cpp/src/arrow/stl.h b/cpp/src/arrow/stl.h\nnew file mode 100644\nindex 000000000..3250b5a32\n--- /dev/null\n+++ b/cpp/src/arrow/stl.h\n@@ -0,0 +1,153 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#ifndef ARROW_STL_H\n+#define ARROW_STL_H\n+\n+#include <string>\n+#include <tuple>\n+#include <vector>\n+\n+#include \"arrow/type.h\"\n+\n+namespace arrow {\n+\n+class Schema;\n+\n+namespace stl {\n+\n+/// Traits meta class to map standard C/C++ types to equivalent Arrow types.\n+template <typename T>\n+struct ConversionTraits {};\n+\n+#define ARROW_STL_CONVERSION(c_type, ArrowType_) \\\n+  template <>                                    \\\n+  struct ConversionTraits<c_type> {              \\\n+    using ArrowType = ArrowType_;                \\\n+    constexpr static bool nullable = false;      \\\n+  };\n+\n+ARROW_STL_CONVERSION(bool, BooleanType)\n+ARROW_STL_CONVERSION(int8_t, Int8Type)\n+ARROW_STL_CONVERSION(int16_t, Int16Type)\n+ARROW_STL_CONVERSION(int32_t, Int32Type)\n+ARROW_STL_CONVERSION(int64_t, Int64Type)\n+ARROW_STL_CONVERSION(uint8_t, UInt8Type)\n+ARROW_STL_CONVERSION(uint16_t, UInt16Type)\n+ARROW_STL_CONVERSION(uint32_t, UInt32Type)\n+ARROW_STL_CONVERSION(uint64_t, UInt64Type)\n+ARROW_STL_CONVERSION(float, FloatType)\n+ARROW_STL_CONVERSION(double, DoubleType)\n+ARROW_STL_CONVERSION(std::string, StringType)\n+\n+template <typename value_c_type>\n+struct ConversionTraits<std::vector<value_c_type>> {\n+  using ArrowType = meta::ListType<typename ConversionTraits<value_c_type>::ArrowType>;\n+  constexpr static bool nullable = false;\n+};\n+\n+/// Build an arrow::Schema based upon the types defined in a std::tuple-like structure.\n+///\n+/// While the type information is available at compile-time, we still need to add the\n+/// column names at runtime, thus these methods are not constexpr.\n+template <typename Tuple, std::size_t N = std::tuple_size<Tuple>::value>\n+struct SchemaFromTuple {\n+  using Element = typename std::tuple_element<N - 1, Tuple>::type;\n+  using ArrowType = typename ConversionTraits<Element>::ArrowType;\n+\n+  // Implementations that take a vector-like object for the column names.\n+\n+  /// Recursively build a vector of arrow::Field from the defined types.\n+  ///\n+  /// In most cases MakeSchema is the better entrypoint for the Schema creation.\n+  static std::vector<std::shared_ptr<Field>> MakeSchemaRecursion(\n+      const std::vector<std::string>& names) {\n+    std::vector<std::shared_ptr<Field>> ret =\n+        SchemaFromTuple<Tuple, N - 1>::MakeSchemaRecursion(names);\n+    ret.push_back(field(names[N - 1], std::make_shared<ArrowType>(),\n+                        ConversionTraits<Element>::nullable));\n+    return ret;\n+  }\n+\n+  /// Build a Schema from the types of the tuple-like structure passed in as template\n+  /// parameter assign the column names at runtime.\n+  ///\n+  /// An example usage of this API can look like the following:\n+  ///\n+  /// \\code{.cpp}\n+  /// using TupleType = std::tuple<int, std::vector<std::string>>;\n+  /// std::shared_ptr<Schema> schema =\n+  ///   SchemaFromTuple<TupleType>::MakeSchema({\"int_column\", \"list_of_strings_column\"});\n+  /// \\endcode\n+  static std::shared_ptr<Schema> MakeSchema(const std::vector<std::string>& names) {\n+    return std::make_shared<Schema>(MakeSchemaRecursion(names));\n+  }\n+\n+  // Implementations that take a tuple-like object for the column names.\n+\n+  /// Recursively build a vector of arrow::Field from the defined types.\n+  ///\n+  /// In most cases MakeSchema is the better entrypoint for the Schema creation.\n+  template <typename NamesTuple>\n+  static std::vector<std::shared_ptr<Field>> MakeSchemaRecursionT(\n+      const NamesTuple& names) {\n+    std::vector<std::shared_ptr<Field>> ret =\n+        SchemaFromTuple<Tuple, N - 1>::MakeSchemaRecursionT(names);\n+    ret.push_back(field(std::get<N - 1>(names), std::make_shared<ArrowType>(),\n+                        ConversionTraits<Element>::nullable));\n+    return ret;\n+  }\n+\n+  /// Build a Schema from the types of the tuple-like structure passed in as template\n+  /// parameter assign the column names at runtime.\n+  ///\n+  /// An example usage of this API can look like the following:\n+  ///\n+  /// \\code{.cpp}\n+  /// using TupleType = std::tuple<int, std::vector<std::string>>;\n+  /// std::shared_ptr<Schema> schema =\n+  ///   SchemaFromTuple<TupleType>::MakeSchema({\"int_column\", \"list_of_strings_column\"});\n+  /// \\endcode\n+  template <typename NamesTuple>\n+  static std::shared_ptr<Schema> MakeSchema(const NamesTuple& names) {\n+    return std::make_shared<Schema>(MakeSchemaRecursionT<NamesTuple>(names));\n+  }\n+};\n+\n+template <typename Tuple>\n+struct SchemaFromTuple<Tuple, 0> {\n+  static std::vector<std::shared_ptr<Field>> MakeSchemaRecursion(\n+      const std::vector<std::string>& names) {\n+    std::vector<std::shared_ptr<Field>> ret;\n+    ret.reserve(names.size());\n+    return ret;\n+  }\n+\n+  template <typename NamesTuple>\n+  static std::vector<std::shared_ptr<Field>> MakeSchemaRecursionT(\n+      const NamesTuple& names) {\n+    std::vector<std::shared_ptr<Field>> ret;\n+    ret.reserve(std::tuple_size<NamesTuple>::value);\n+    return ret;\n+  }\n+};\n+/// @endcond\n+\n+}  // namespace stl\n+}  // namespace arrow\n+\n+#endif  // ARROW_STL_H\ndiff --git a/cpp/src/arrow/type.h b/cpp/src/arrow/type.h\nindex 009e07db0..cfee6fd0e 100644\n--- a/cpp/src/arrow/type.h\n+++ b/cpp/src/arrow/type.h\n@@ -407,6 +407,19 @@ class ARROW_EXPORT ListType : public NestedType {\n   std::string name() const override { return \"list\"; }\n };\n \n+namespace meta {\n+\n+/// Additional ListType class that can be instantiated with only compile-time arguments.\n+template <typename T>\n+class ARROW_EXPORT ListType : public ::arrow::ListType {\n+ public:\n+  using ValueType = T;\n+\n+  ListType() : ::arrow::ListType(std::make_shared<T>()) {}\n+};\n+\n+}  // namespace meta\n+\n // BinaryType type is represents lists of 1-byte values.\n class ARROW_EXPORT BinaryType : public DataType, public NoExtraMeta {\n  public:\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-28T15:59:54.583+0000",
                    "updated": "2018-01-28T15:59:54.583+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13119507/comment/16342624",
                    "id": "16342624",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "body": "Issue resolved by pull request 1478\n[https://github.com/apache/arrow/pull/1478]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "created": "2018-01-28T15:59:56.952+0000",
                    "updated": "2018-01-28T15:59:56.952+0000"
                }
            ],
            "maxResults": 4,
            "total": 4,
            "startAt": 0
        },
        "customfield_12311820": "0|i3mz4v:",
        "customfield_12314139": null
    }
}