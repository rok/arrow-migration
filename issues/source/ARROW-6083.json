{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13248103",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248103",
    "key": "ARROW-6083",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
            "name": "tianchen92",
            "key": "tianchen92",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
            },
            "displayName": "Ji Liu",
            "active": true,
            "timeZone": "Asia/Gaza"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
            "name": "tianchen92",
            "key": "tianchen92",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
            },
            "displayName": "Ji Liu",
            "active": true,
            "timeZone": "Asia/Gaza"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
            "name": "tianchen92",
            "key": "tianchen92",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
            },
            "displayName": "Ji Liu",
            "active": true,
            "timeZone": "Asia/Gaza"
        },
        "aggregateprogress": {
            "progress": 27000,
            "total": 27000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 27000,
            "total": 27000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6083/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 46,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248103/worklog/286495",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4978: ARROW-6083: [Java] Refactor Jdbc adapter consume logic\nURL: https://github.com/apache/arrow/pull/4978\n \n \n   Related to [ARROW-6083](https://issues.apache.org/jira/browse/ARROW-6083).\r\n   \r\n   Jdbc adapter read from ResultSet looks like:\r\n   \r\n   while (rs.next()) {\r\n   for (int i = 1; i <= columnCount; i++)\r\n   { jdbcToFieldVector( rs, i, rs.getMetaData().getColumnType(i), rowCount, root.getVector(rsmd.getColumnName(i)), config); }\r\n   rowCount++;\r\n   }\r\n   \r\n   And in jdbcToFieldVector has lots of switch-case, that is to see, for every single value from ResultSet we have to do lots of analyzing conditions.\r\n   \r\n   I think we could optimize this using consumer/delegate like avro adapter.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-01T07:12:47.390+0000",
                    "updated": "2019-08-01T07:12:47.390+0000",
                    "started": "2019-08-01T07:12:47.389+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "286495",
                    "issueId": "13248103"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248103/worklog/288255",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4978: ARROW-6083: [Java] Refactor Jdbc adapter consume logic\nURL: https://github.com/apache/arrow/pull/4978#discussion_r310297174\n \n \n\n ##########\n File path: java/adapter/jdbc/src/main/java/org/apache/arrow/adapter/jdbc/JdbcToArrowUtils.java\n ##########\n @@ -361,379 +354,81 @@ public static void jdbcToArrowVectors(ResultSet rs, VectorSchemaRoot root, Calen\n   public static void jdbcToArrowVectors(ResultSet rs, VectorSchemaRoot root, JdbcToArrowConfig config)\n       throws SQLException, IOException {\n \n-    Preconditions.checkNotNull(rs, \"JDBC ResultSet object can't be null\");\n-    Preconditions.checkNotNull(root, \"VectorSchemaRoot object can't be null\");\n-    Preconditions.checkNotNull(config, \"JDBC-to-Arrow configuration cannot be null\");\n-\n     ResultSetMetaData rsmd = rs.getMetaData();\n     int columnCount = rsmd.getColumnCount();\n-\n     allocateVectors(root, DEFAULT_BUFFER_SIZE);\n \n+    JdbcConsumer[] consumers = new JdbcConsumer[columnCount];\n+    for (int i = 1; i <= columnCount; i++) {\n+      consumers[i - 1] = getConsumer(rs, i, rs.getMetaData().getColumnType(i),\n+          root.getVector(rsmd.getColumnName(i)), config);\n+    }\n+\n     int rowCount = 0;\n     while (rs.next()) {\n-      for (int i = 1; i <= columnCount; i++) {\n-        jdbcToFieldVector(\n-            rs,\n-            i,\n-            rs.getMetaData().getColumnType(i),\n-            rowCount,\n-            root.getVector(rsmd.getColumnName(i)),\n-            config);\n+      for (JdbcConsumer consumer : consumers) {\n+        consumer.consume(rs, config.getCalendar());\n \n Review comment:\n   instead of making this a parameter to all consumers can you construct the comsumers that need it (looks like only Date) with the value?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-02T21:02:59.625+0000",
                    "updated": "2019-08-02T21:02:59.625+0000",
                    "started": "2019-08-02T21:02:59.625+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "288255",
                    "issueId": "13248103"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248103/worklog/288257",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4978: ARROW-6083: [Java] Refactor Jdbc adapter consume logic\nURL: https://github.com/apache/arrow/pull/4978#discussion_r310298180\n \n \n\n ##########\n File path: java/adapter/jdbc/src/main/java/org/apache/arrow/adapter/jdbc/consumer/BinaryConsumer.java\n ##########\n @@ -0,0 +1,99 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.adapter.jdbc.consumer;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+import java.util.Calendar;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.vector.VarBinaryVector;\n+import org.apache.arrow.vector.complex.impl.VarBinaryWriterImpl;\n+import org.apache.arrow.vector.complex.writer.VarBinaryWriter;\n+\n+import io.netty.buffer.ArrowBuf;\n+\n+/**\n+ * Consumer which consume binary type values from {@link ResultSet}.\n+ * Write the data to {@link org.apache.arrow.vector.VarBinaryVector}.\n+ */\n+public class BinaryConsumer implements JdbcConsumer {\n+\n+  private static final int BUFFER_SIZE = 1024;\n+\n+  private final VarBinaryWriter writer;\n+  private final int index;\n+  private BufferAllocator allocator;\n+\n+  private ArrowBuf reuse;\n+\n+  /**\n+   * Instantiate a BinaryConsumer.\n+   */\n+  public BinaryConsumer(VarBinaryVector vector, int index) {\n+    this.writer = new VarBinaryWriterImpl(vector);\n+    this.index = index;\n+\n+    this.allocator = vector.getAllocator();\n+    reuse = allocator.buffer(BUFFER_SIZE);\n+  }\n+\n+  /**\n+   * consume a InputStream.\n+   */\n+  public void consume(InputStream is) throws SQLException, IOException {\n+    if (is != null) {\n+      int length = is.available();\n+      if (length > reuse.capacity()) {\n+        reuse.close();\n+        reuse = allocator.buffer(length);\n+      }\n+\n+      byte[] bytes = new byte[BUFFER_SIZE];\n+      int total = 0;\n+      while (true) {\n \n Review comment:\n   Does the following work:\r\n   int read = -1;\r\n   while ((read = is.read(bytes, 0, bytes.length) != -1) {\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-02T21:06:53.872+0000",
                    "updated": "2019-08-02T21:06:53.872+0000",
                    "started": "2019-08-02T21:06:53.872+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "288257",
                    "issueId": "13248103"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248103/worklog/288265",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4978: ARROW-6083: [Java] Refactor Jdbc adapter consume logic\nURL: https://github.com/apache/arrow/pull/4978#discussion_r310298607\n \n \n\n ##########\n File path: java/adapter/jdbc/src/main/java/org/apache/arrow/adapter/jdbc/consumer/BinaryConsumer.java\n ##########\n @@ -0,0 +1,99 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.adapter.jdbc.consumer;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+import java.util.Calendar;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.vector.VarBinaryVector;\n+import org.apache.arrow.vector.complex.impl.VarBinaryWriterImpl;\n+import org.apache.arrow.vector.complex.writer.VarBinaryWriter;\n+\n+import io.netty.buffer.ArrowBuf;\n+\n+/**\n+ * Consumer which consume binary type values from {@link ResultSet}.\n+ * Write the data to {@link org.apache.arrow.vector.VarBinaryVector}.\n+ */\n+public class BinaryConsumer implements JdbcConsumer {\n+\n+  private static final int BUFFER_SIZE = 1024;\n+\n+  private final VarBinaryWriter writer;\n+  private final int index;\n+  private BufferAllocator allocator;\n+\n+  private ArrowBuf reuse;\n+\n+  /**\n+   * Instantiate a BinaryConsumer.\n+   */\n+  public BinaryConsumer(VarBinaryVector vector, int index) {\n+    this.writer = new VarBinaryWriterImpl(vector);\n+    this.index = index;\n+\n+    this.allocator = vector.getAllocator();\n+    reuse = allocator.buffer(BUFFER_SIZE);\n+  }\n+\n+  /**\n+   * consume a InputStream.\n+   */\n+  public void consume(InputStream is) throws SQLException, IOException {\n+    if (is != null) {\n+      int length = is.available();\n+      if (length > reuse.capacity()) {\n+        reuse.close();\n+        reuse = allocator.buffer(length);\n+      }\n+\n+      byte[] bytes = new byte[BUFFER_SIZE];\n \n Review comment:\n   if reuse is going to be an a member you should probably make this a member also.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-02T21:16:18.326+0000",
                    "updated": "2019-08-02T21:16:18.326+0000",
                    "started": "2019-08-02T21:16:18.325+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "288265",
                    "issueId": "13248103"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248103/worklog/288266",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4978: ARROW-6083: [Java] Refactor Jdbc adapter consume logic\nURL: https://github.com/apache/arrow/pull/4978#discussion_r310298660\n \n \n\n ##########\n File path: java/adapter/jdbc/src/main/java/org/apache/arrow/adapter/jdbc/consumer/BinaryConsumer.java\n ##########\n @@ -0,0 +1,99 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.adapter.jdbc.consumer;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+import java.util.Calendar;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.vector.VarBinaryVector;\n+import org.apache.arrow.vector.complex.impl.VarBinaryWriterImpl;\n+import org.apache.arrow.vector.complex.writer.VarBinaryWriter;\n+\n+import io.netty.buffer.ArrowBuf;\n+\n+/**\n+ * Consumer which consume binary type values from {@link ResultSet}.\n+ * Write the data to {@link org.apache.arrow.vector.VarBinaryVector}.\n+ */\n+public class BinaryConsumer implements JdbcConsumer {\n+\n+  private static final int BUFFER_SIZE = 1024;\n+\n+  private final VarBinaryWriter writer;\n+  private final int index;\n+  private BufferAllocator allocator;\n+\n+  private ArrowBuf reuse;\n+\n+  /**\n+   * Instantiate a BinaryConsumer.\n+   */\n+  public BinaryConsumer(VarBinaryVector vector, int index) {\n+    this.writer = new VarBinaryWriterImpl(vector);\n+    this.index = index;\n+\n+    this.allocator = vector.getAllocator();\n+    reuse = allocator.buffer(BUFFER_SIZE);\n+  }\n+\n+  /**\n+   * consume a InputStream.\n+   */\n+  public void consume(InputStream is) throws SQLException, IOException {\n+    if (is != null) {\n+      int length = is.available();\n+      if (length > reuse.capacity()) {\n+        reuse.close();\n+        reuse = allocator.buffer(length);\n+      }\n+\n+      byte[] bytes = new byte[BUFFER_SIZE];\n+      int total = 0;\n+      while (true) {\n+        int read = is.read(bytes, 0, bytes.length);\n+        if (read == -1) {\n+          break;\n+        }\n+        reuse.setBytes(total, bytes, 0, read);\n \n Review comment:\n   does this automatically extend reuse?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-02T21:16:18.450+0000",
                    "updated": "2019-08-02T21:16:18.450+0000",
                    "started": "2019-08-02T21:16:18.449+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "288266",
                    "issueId": "13248103"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248103/worklog/288369",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4978: ARROW-6083: [Java] Refactor Jdbc adapter consume logic\nURL: https://github.com/apache/arrow/pull/4978#discussion_r310336761\n \n \n\n ##########\n File path: java/adapter/jdbc/src/main/java/org/apache/arrow/adapter/jdbc/JdbcToArrowUtils.java\n ##########\n @@ -361,379 +354,81 @@ public static void jdbcToArrowVectors(ResultSet rs, VectorSchemaRoot root, Calen\n   public static void jdbcToArrowVectors(ResultSet rs, VectorSchemaRoot root, JdbcToArrowConfig config)\n       throws SQLException, IOException {\n \n-    Preconditions.checkNotNull(rs, \"JDBC ResultSet object can't be null\");\n-    Preconditions.checkNotNull(root, \"VectorSchemaRoot object can't be null\");\n-    Preconditions.checkNotNull(config, \"JDBC-to-Arrow configuration cannot be null\");\n-\n     ResultSetMetaData rsmd = rs.getMetaData();\n     int columnCount = rsmd.getColumnCount();\n-\n     allocateVectors(root, DEFAULT_BUFFER_SIZE);\n \n+    JdbcConsumer[] consumers = new JdbcConsumer[columnCount];\n+    for (int i = 1; i <= columnCount; i++) {\n+      consumers[i - 1] = getConsumer(rs, i, rs.getMetaData().getColumnType(i),\n+          root.getVector(rsmd.getColumnName(i)), config);\n+    }\n+\n     int rowCount = 0;\n     while (rs.next()) {\n-      for (int i = 1; i <= columnCount; i++) {\n-        jdbcToFieldVector(\n-            rs,\n-            i,\n-            rs.getMetaData().getColumnType(i),\n-            rowCount,\n-            root.getVector(rsmd.getColumnName(i)),\n-            config);\n+      for (JdbcConsumer consumer : consumers) {\n+        consumer.consume(rs, config.getCalendar());\n \n Review comment:\n   Right, fixed.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-03T03:13:53.456+0000",
                    "updated": "2019-08-03T03:13:53.456+0000",
                    "started": "2019-08-03T03:13:53.455+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "288369",
                    "issueId": "13248103"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248103/worklog/288370",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4978: ARROW-6083: [Java] Refactor Jdbc adapter consume logic\nURL: https://github.com/apache/arrow/pull/4978#discussion_r310336765\n \n \n\n ##########\n File path: java/adapter/jdbc/src/main/java/org/apache/arrow/adapter/jdbc/consumer/BinaryConsumer.java\n ##########\n @@ -0,0 +1,99 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.adapter.jdbc.consumer;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+import java.util.Calendar;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.vector.VarBinaryVector;\n+import org.apache.arrow.vector.complex.impl.VarBinaryWriterImpl;\n+import org.apache.arrow.vector.complex.writer.VarBinaryWriter;\n+\n+import io.netty.buffer.ArrowBuf;\n+\n+/**\n+ * Consumer which consume binary type values from {@link ResultSet}.\n+ * Write the data to {@link org.apache.arrow.vector.VarBinaryVector}.\n+ */\n+public class BinaryConsumer implements JdbcConsumer {\n+\n+  private static final int BUFFER_SIZE = 1024;\n+\n+  private final VarBinaryWriter writer;\n+  private final int index;\n+  private BufferAllocator allocator;\n+\n+  private ArrowBuf reuse;\n+\n+  /**\n+   * Instantiate a BinaryConsumer.\n+   */\n+  public BinaryConsumer(VarBinaryVector vector, int index) {\n+    this.writer = new VarBinaryWriterImpl(vector);\n+    this.index = index;\n+\n+    this.allocator = vector.getAllocator();\n+    reuse = allocator.buffer(BUFFER_SIZE);\n+  }\n+\n+  /**\n+   * consume a InputStream.\n+   */\n+  public void consume(InputStream is) throws SQLException, IOException {\n+    if (is != null) {\n+      int length = is.available();\n+      if (length > reuse.capacity()) {\n+        reuse.close();\n+        reuse = allocator.buffer(length);\n+      }\n+\n+      byte[] bytes = new byte[BUFFER_SIZE];\n+      int total = 0;\n+      while (true) {\n \n Review comment:\n   fixed.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-03T03:14:04.058+0000",
                    "updated": "2019-08-03T03:14:04.058+0000",
                    "started": "2019-08-03T03:14:04.057+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "288370",
                    "issueId": "13248103"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248103/worklog/288371",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4978: ARROW-6083: [Java] Refactor Jdbc adapter consume logic\nURL: https://github.com/apache/arrow/pull/4978#discussion_r310336768\n \n \n\n ##########\n File path: java/adapter/jdbc/src/main/java/org/apache/arrow/adapter/jdbc/consumer/BinaryConsumer.java\n ##########\n @@ -0,0 +1,99 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.adapter.jdbc.consumer;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+import java.util.Calendar;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.vector.VarBinaryVector;\n+import org.apache.arrow.vector.complex.impl.VarBinaryWriterImpl;\n+import org.apache.arrow.vector.complex.writer.VarBinaryWriter;\n+\n+import io.netty.buffer.ArrowBuf;\n+\n+/**\n+ * Consumer which consume binary type values from {@link ResultSet}.\n+ * Write the data to {@link org.apache.arrow.vector.VarBinaryVector}.\n+ */\n+public class BinaryConsumer implements JdbcConsumer {\n+\n+  private static final int BUFFER_SIZE = 1024;\n+\n+  private final VarBinaryWriter writer;\n+  private final int index;\n+  private BufferAllocator allocator;\n+\n+  private ArrowBuf reuse;\n+\n+  /**\n+   * Instantiate a BinaryConsumer.\n+   */\n+  public BinaryConsumer(VarBinaryVector vector, int index) {\n+    this.writer = new VarBinaryWriterImpl(vector);\n+    this.index = index;\n+\n+    this.allocator = vector.getAllocator();\n+    reuse = allocator.buffer(BUFFER_SIZE);\n+  }\n+\n+  /**\n+   * consume a InputStream.\n+   */\n+  public void consume(InputStream is) throws SQLException, IOException {\n+    if (is != null) {\n+      int length = is.available();\n+      if (length > reuse.capacity()) {\n+        reuse.close();\n+        reuse = allocator.buffer(length);\n+      }\n+\n+      byte[] bytes = new byte[BUFFER_SIZE];\n \n Review comment:\n   fixed.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-03T03:14:10.234+0000",
                    "updated": "2019-08-03T03:14:10.234+0000",
                    "started": "2019-08-03T03:14:10.233+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "288371",
                    "issueId": "13248103"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248103/worklog/288372",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4978: ARROW-6083: [Java] Refactor Jdbc adapter consume logic\nURL: https://github.com/apache/arrow/pull/4978#discussion_r310336834\n \n \n\n ##########\n File path: java/adapter/jdbc/src/main/java/org/apache/arrow/adapter/jdbc/consumer/BinaryConsumer.java\n ##########\n @@ -0,0 +1,99 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.adapter.jdbc.consumer;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+import java.util.Calendar;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.vector.VarBinaryVector;\n+import org.apache.arrow.vector.complex.impl.VarBinaryWriterImpl;\n+import org.apache.arrow.vector.complex.writer.VarBinaryWriter;\n+\n+import io.netty.buffer.ArrowBuf;\n+\n+/**\n+ * Consumer which consume binary type values from {@link ResultSet}.\n+ * Write the data to {@link org.apache.arrow.vector.VarBinaryVector}.\n+ */\n+public class BinaryConsumer implements JdbcConsumer {\n+\n+  private static final int BUFFER_SIZE = 1024;\n+\n+  private final VarBinaryWriter writer;\n+  private final int index;\n+  private BufferAllocator allocator;\n+\n+  private ArrowBuf reuse;\n+\n+  /**\n+   * Instantiate a BinaryConsumer.\n+   */\n+  public BinaryConsumer(VarBinaryVector vector, int index) {\n+    this.writer = new VarBinaryWriterImpl(vector);\n+    this.index = index;\n+\n+    this.allocator = vector.getAllocator();\n+    reuse = allocator.buffer(BUFFER_SIZE);\n+  }\n+\n+  /**\n+   * consume a InputStream.\n+   */\n+  public void consume(InputStream is) throws SQLException, IOException {\n+    if (is != null) {\n+      int length = is.available();\n+      if (length > reuse.capacity()) {\n+        reuse.close();\n+        reuse = allocator.buffer(length);\n+      }\n+\n+      byte[] bytes = new byte[BUFFER_SIZE];\n+      int total = 0;\n+      while (true) {\n+        int read = is.read(bytes, 0, bytes.length);\n+        if (read == -1) {\n+          break;\n+        }\n+        reuse.setBytes(total, bytes, 0, read);\n \n Review comment:\n   No, it is extended here https://github.com/apache/arrow/pull/4978/files#diff-6cbf4621e643c77dce9345ec4f4c069dR65\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-03T03:15:28.144+0000",
                    "updated": "2019-08-03T03:15:28.144+0000",
                    "started": "2019-08-03T03:15:28.143+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "288372",
                    "issueId": "13248103"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248103/worklog/288373",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on issue #4978: ARROW-6083: [Java] Refactor Jdbc adapter consume logic\nURL: https://github.com/apache/arrow/pull/4978#issuecomment-517889985\n \n \n   > This looks OK to me, while I think its clear i is potentially slightly slower than the original version. Is there a specific reason for this refactoring?\r\n   > \r\n   > I'm not sure if the original design was a conscious decision. CC @atuldambalkar who was the original author @siddharthteotia who merged the original one to see if he has any comments.\r\n   \r\n   Thanks @emkornfield, this refactor is mainly inspired by avro adapter design. In Jdbc adapter, it checks type for every single value in a row which is not necessary. This refactoring binds type in consumer creation and not to check type anymore, meanwhile use Writers to write vectors. I think it will even slightly faster than the original versions?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-03T03:19:29.457+0000",
                    "updated": "2019-08-03T03:19:29.457+0000",
                    "started": "2019-08-03T03:19:29.456+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "288373",
                    "issueId": "13248103"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248103/worklog/288378",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4978: ARROW-6083: [Java] Refactor Jdbc adapter consume logic\nURL: https://github.com/apache/arrow/pull/4978#issuecomment-517893322\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4978?src=pr&el=h1) Report\n   > Merging [#4978](https://codecov.io/gh/apache/arrow/pull/4978?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/6f98807e3a5e68820e70c775bf97b5871c5e7f86?src=pr&el=desc) will **increase** coverage by `2.11%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4978/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4978?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4978      +/-   ##\n   ==========================================\n   + Coverage   87.57%   89.68%   +2.11%     \n   ==========================================\n     Files        1005      670     -335     \n     Lines      143457    99102   -44355     \n     Branches     1418        0    -1418     \n   ==========================================\n   - Hits       125630    88881   -36749     \n   + Misses      17465    10221    -7244     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4978?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/plasma/thirdparty/ae/ae.c](https://codecov.io/gh/apache/arrow/pull/4978/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGhpcmRwYXJ0eS9hZS9hZS5j) | `70.75% <0%> (-0.95%)` | :arrow_down: |\n   | [r/src/recordbatch.cpp](https://codecov.io/gh/apache/arrow/pull/4978/diff?src=pr&el=tree#diff-ci9zcmMvcmVjb3JkYmF0Y2guY3Bw) | | |\n   | [r/R/Table.R](https://codecov.io/gh/apache/arrow/pull/4978/diff?src=pr&el=tree#diff-ci9SL1RhYmxlLlI=) | | |\n   | [js/src/util/fn.ts](https://codecov.io/gh/apache/arrow/pull/4978/diff?src=pr&el=tree#diff-anMvc3JjL3V0aWwvZm4udHM=) | | |\n   | [go/arrow/array/bufferbuilder.go](https://codecov.io/gh/apache/arrow/pull/4978/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYnVmZmVyYnVpbGRlci5nbw==) | | |\n   | [r/src/symbols.cpp](https://codecov.io/gh/apache/arrow/pull/4978/diff?src=pr&el=tree#diff-ci9zcmMvc3ltYm9scy5jcHA=) | | |\n   | [rust/datafusion/src/execution/projection.rs](https://codecov.io/gh/apache/arrow/pull/4978/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vcHJvamVjdGlvbi5ycw==) | | |\n   | [rust/datafusion/src/execution/filter.rs](https://codecov.io/gh/apache/arrow/pull/4978/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vZmlsdGVyLnJz) | | |\n   | [rust/arrow/src/csv/writer.rs](https://codecov.io/gh/apache/arrow/pull/4978/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvY3N2L3dyaXRlci5ycw==) | | |\n   | [rust/datafusion/src/bin/main.rs](https://codecov.io/gh/apache/arrow/pull/4978/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9iaW4vbWFpbi5ycw==) | | |\n   | ... and [326 more](https://codecov.io/gh/apache/arrow/pull/4978/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4978?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4978?src=pr&el=footer). Last update [6f98807...2b0aa78](https://codecov.io/gh/apache/arrow/pull/4978?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-03T04:28:24.351+0000",
                    "updated": "2019-08-03T04:28:24.351+0000",
                    "started": "2019-08-03T04:28:24.351+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "288378",
                    "issueId": "13248103"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248103/worklog/291777",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4978: ARROW-6083: [Java] Refactor Jdbc adapter consume logic\nURL: https://github.com/apache/arrow/pull/4978#discussion_r312322123\n \n \n\n ##########\n File path: java/adapter/jdbc/src/main/java/org/apache/arrow/adapter/jdbc/consumer/DateConsumer.java\n ##########\n @@ -0,0 +1,65 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.adapter.jdbc.consumer;\n+\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+import java.util.Calendar;\n+import java.util.Date;\n+\n+import org.apache.arrow.vector.DateMilliVector;\n+import org.apache.arrow.vector.complex.impl.DateMilliWriterImpl;\n+import org.apache.arrow.vector.complex.writer.DateMilliWriter;\n+\n+/**\n+ * Consumer which consume date type values from {@link ResultSet}.\n+ * Write the data to {@link org.apache.arrow.vector.DateMilliVector}.\n+ */\n+public class DateConsumer implements JdbcConsumer {\n+\n+  private final DateMilliWriter writer;\n+  private final int index;\n+  private final Calendar calendar;\n+\n+  private Date reuse;\n+\n+  /**\n+   * Instantiate a DateConsumer.\n+   */\n+  public DateConsumer(DateMilliVector vector, int index, Calendar calendar) {\n \n Review comment:\n   consider adding a constructor that doesn't take calendar or document calendar is nullable (I would prefer the first.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T04:01:20.057+0000",
                    "updated": "2019-08-09T04:01:20.057+0000",
                    "started": "2019-08-09T04:01:20.056+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291777",
                    "issueId": "13248103"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248103/worklog/291792",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4978: ARROW-6083: [Java] Refactor Jdbc adapter consume logic\nURL: https://github.com/apache/arrow/pull/4978#discussion_r312324431\n \n \n\n ##########\n File path: java/adapter/jdbc/src/main/java/org/apache/arrow/adapter/jdbc/consumer/DateConsumer.java\n ##########\n @@ -0,0 +1,65 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.adapter.jdbc.consumer;\n+\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+import java.util.Calendar;\n+import java.util.Date;\n+\n+import org.apache.arrow.vector.DateMilliVector;\n+import org.apache.arrow.vector.complex.impl.DateMilliWriterImpl;\n+import org.apache.arrow.vector.complex.writer.DateMilliWriter;\n+\n+/**\n+ * Consumer which consume date type values from {@link ResultSet}.\n+ * Write the data to {@link org.apache.arrow.vector.DateMilliVector}.\n+ */\n+public class DateConsumer implements JdbcConsumer {\n+\n+  private final DateMilliWriter writer;\n+  private final int index;\n+  private final Calendar calendar;\n+\n+  private Date reuse;\n+\n+  /**\n+   * Instantiate a DateConsumer.\n+   */\n+  public DateConsumer(DateMilliVector vector, int index, Calendar calendar) {\n \n Review comment:\n   Sure, add constructor without calendar for DateConsumer, TimestampConsumer and TimeConsumer.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T04:21:10.124+0000",
                    "updated": "2019-08-09T04:21:10.124+0000",
                    "started": "2019-08-09T04:21:10.123+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291792",
                    "issueId": "13248103"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248103/worklog/291892",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4978: ARROW-6083: [Java] Refactor Jdbc adapter consume logic\nURL: https://github.com/apache/arrow/pull/4978#discussion_r312374250\n \n \n\n ##########\n File path: java/adapter/jdbc/src/main/java/org/apache/arrow/adapter/jdbc/consumer/DateConsumer.java\n ##########\n @@ -0,0 +1,72 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.adapter.jdbc.consumer;\n+\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+import java.util.Calendar;\n+import java.util.Date;\n+\n+import org.apache.arrow.vector.DateMilliVector;\n+import org.apache.arrow.vector.complex.impl.DateMilliWriterImpl;\n+import org.apache.arrow.vector.complex.writer.DateMilliWriter;\n+\n+/**\n+ * Consumer which consume date type values from {@link ResultSet}.\n+ * Write the data to {@link org.apache.arrow.vector.DateMilliVector}.\n+ */\n+public class DateConsumer implements JdbcConsumer {\n+\n+  private final DateMilliWriter writer;\n+  private final int index;\n+  private final Calendar calendar;\n+\n+  private Date reuse;\n+\n+  /**\n+   * Instantiate a DateConsumer.\n+   */\n+  public DateConsumer(DateMilliVector vector, int index) {\n+    this (vector, index, null);\n+  }\n+\n+  /**\n+   * Instantiate a DateConsumer.\n+   */\n+  public DateConsumer(DateMilliVector vector, int index, Calendar calendar) {\n+    this.writer = new DateMilliWriterImpl(vector);\n+    this.index = index;\n+    this.calendar = calendar;\n+  }\n+\n+  @Override\n+  public void consume(ResultSet resultSet) throws SQLException {\n+    reuse = calendar == null ? resultSet.getDate(index) : resultSet.getDate(index, calendar);\n+    if (resultSet.wasNull()) {\n+      addNull();\n+    } else {\n+      writer.writeDateMilli(reuse.getTime());\n+      writer.setPosition(writer.getPosition() + 1);\n+    }\n+  }\n+\n+  @Override\n+  public void addNull() {\n+    writer.setPosition(writer.getPosition() + 1);\n \n Review comment:\n   this seems useless? Just write\r\n   \r\n   if (!resultSet.wasNull()) {\r\n         writer.writeDateMilli(reuse.getTime());\r\n   }\r\n   writer.setPosition(writer.getPosition() + 1);\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T08:18:51.492+0000",
                    "updated": "2019-08-09T08:18:51.492+0000",
                    "started": "2019-08-09T08:18:51.491+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291892",
                    "issueId": "13248103"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248103/worklog/291914",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4978: ARROW-6083: [Java] Refactor Jdbc adapter consume logic\nURL: https://github.com/apache/arrow/pull/4978#discussion_r312385717\n \n \n\n ##########\n File path: java/adapter/jdbc/src/main/java/org/apache/arrow/adapter/jdbc/consumer/DateConsumer.java\n ##########\n @@ -0,0 +1,72 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.adapter.jdbc.consumer;\n+\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+import java.util.Calendar;\n+import java.util.Date;\n+\n+import org.apache.arrow.vector.DateMilliVector;\n+import org.apache.arrow.vector.complex.impl.DateMilliWriterImpl;\n+import org.apache.arrow.vector.complex.writer.DateMilliWriter;\n+\n+/**\n+ * Consumer which consume date type values from {@link ResultSet}.\n+ * Write the data to {@link org.apache.arrow.vector.DateMilliVector}.\n+ */\n+public class DateConsumer implements JdbcConsumer {\n+\n+  private final DateMilliWriter writer;\n+  private final int index;\n+  private final Calendar calendar;\n+\n+  private Date reuse;\n+\n+  /**\n+   * Instantiate a DateConsumer.\n+   */\n+  public DateConsumer(DateMilliVector vector, int index) {\n+    this (vector, index, null);\n+  }\n+\n+  /**\n+   * Instantiate a DateConsumer.\n+   */\n+  public DateConsumer(DateMilliVector vector, int index, Calendar calendar) {\n+    this.writer = new DateMilliWriterImpl(vector);\n+    this.index = index;\n+    this.calendar = calendar;\n+  }\n+\n+  @Override\n+  public void consume(ResultSet resultSet) throws SQLException {\n+    reuse = calendar == null ? resultSet.getDate(index) : resultSet.getDate(index, calendar);\n+    if (resultSet.wasNull()) {\n+      addNull();\n+    } else {\n+      writer.writeDateMilli(reuse.getTime());\n+      writer.setPosition(writer.getPosition() + 1);\n+    }\n+  }\n+\n+  @Override\n+  public void addNull() {\n+    writer.setPosition(writer.getPosition() + 1);\n \n Review comment:\n   Thanks for your comments, this is mainly designed for delegate mode, such as https://github.com/apache/arrow/pull/4978/files#diff-a9b31275cc9a937d8e116c2a9beee285R57\r\n   \r\n   But in Jdbc adpater, only this class uses delegate#addNull, what about remove addNull API and only add a method in BinaryConsumer for this use case?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T08:50:38.243+0000",
                    "updated": "2019-08-09T08:50:38.243+0000",
                    "started": "2019-08-09T08:50:38.243+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291914",
                    "issueId": "13248103"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248103/worklog/291928",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4978: ARROW-6083: [Java] Refactor Jdbc adapter consume logic\nURL: https://github.com/apache/arrow/pull/4978#discussion_r312392978\n \n \n\n ##########\n File path: java/adapter/jdbc/src/main/java/org/apache/arrow/adapter/jdbc/consumer/DateConsumer.java\n ##########\n @@ -0,0 +1,72 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.adapter.jdbc.consumer;\n+\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+import java.util.Calendar;\n+import java.util.Date;\n+\n+import org.apache.arrow.vector.DateMilliVector;\n+import org.apache.arrow.vector.complex.impl.DateMilliWriterImpl;\n+import org.apache.arrow.vector.complex.writer.DateMilliWriter;\n+\n+/**\n+ * Consumer which consume date type values from {@link ResultSet}.\n+ * Write the data to {@link org.apache.arrow.vector.DateMilliVector}.\n+ */\n+public class DateConsumer implements JdbcConsumer {\n+\n+  private final DateMilliWriter writer;\n+  private final int index;\n+  private final Calendar calendar;\n+\n+  private Date reuse;\n+\n+  /**\n+   * Instantiate a DateConsumer.\n+   */\n+  public DateConsumer(DateMilliVector vector, int index) {\n+    this (vector, index, null);\n+  }\n+\n+  /**\n+   * Instantiate a DateConsumer.\n+   */\n+  public DateConsumer(DateMilliVector vector, int index, Calendar calendar) {\n+    this.writer = new DateMilliWriterImpl(vector);\n+    this.index = index;\n+    this.calendar = calendar;\n+  }\n+\n+  @Override\n+  public void consume(ResultSet resultSet) throws SQLException {\n+    reuse = calendar == null ? resultSet.getDate(index) : resultSet.getDate(index, calendar);\n+    if (resultSet.wasNull()) {\n+      addNull();\n+    } else {\n+      writer.writeDateMilli(reuse.getTime());\n+      writer.setPosition(writer.getPosition() + 1);\n+    }\n+  }\n+\n+  @Override\n+  public void addNull() {\n+    writer.setPosition(writer.getPosition() + 1);\n \n Review comment:\n   Sounds good to me. Thanks.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T09:10:08.405+0000",
                    "updated": "2019-08-09T09:10:08.405+0000",
                    "started": "2019-08-09T09:10:08.404+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291928",
                    "issueId": "13248103"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248103/worklog/291975",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4978: ARROW-6083: [Java] Refactor Jdbc adapter consume logic\nURL: https://github.com/apache/arrow/pull/4978#discussion_r312414589\n \n \n\n ##########\n File path: java/adapter/jdbc/src/main/java/org/apache/arrow/adapter/jdbc/consumer/DateConsumer.java\n ##########\n @@ -0,0 +1,72 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.adapter.jdbc.consumer;\n+\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+import java.util.Calendar;\n+import java.util.Date;\n+\n+import org.apache.arrow.vector.DateMilliVector;\n+import org.apache.arrow.vector.complex.impl.DateMilliWriterImpl;\n+import org.apache.arrow.vector.complex.writer.DateMilliWriter;\n+\n+/**\n+ * Consumer which consume date type values from {@link ResultSet}.\n+ * Write the data to {@link org.apache.arrow.vector.DateMilliVector}.\n+ */\n+public class DateConsumer implements JdbcConsumer {\n+\n+  private final DateMilliWriter writer;\n+  private final int index;\n+  private final Calendar calendar;\n+\n+  private Date reuse;\n+\n+  /**\n+   * Instantiate a DateConsumer.\n+   */\n+  public DateConsumer(DateMilliVector vector, int index) {\n+    this (vector, index, null);\n+  }\n+\n+  /**\n+   * Instantiate a DateConsumer.\n+   */\n+  public DateConsumer(DateMilliVector vector, int index, Calendar calendar) {\n+    this.writer = new DateMilliWriterImpl(vector);\n+    this.index = index;\n+    this.calendar = calendar;\n+  }\n+\n+  @Override\n+  public void consume(ResultSet resultSet) throws SQLException {\n+    reuse = calendar == null ? resultSet.getDate(index) : resultSet.getDate(index, calendar);\n+    if (resultSet.wasNull()) {\n+      addNull();\n+    } else {\n+      writer.writeDateMilli(reuse.getTime());\n+      writer.setPosition(writer.getPosition() + 1);\n+    }\n+  }\n+\n+  @Override\n+  public void addNull() {\n+    writer.setPosition(writer.getPosition() + 1);\n \n Review comment:\n   Thanks, fixed.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T10:09:30.573+0000",
                    "updated": "2019-08-09T10:09:30.573+0000",
                    "started": "2019-08-09T10:09:30.572+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291975",
                    "issueId": "13248103"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248103/worklog/292080",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "praveenbingo commented on pull request #4978: ARROW-6083: [Java] Refactor Jdbc adapter consume logic\nURL: https://github.com/apache/arrow/pull/4978#discussion_r312441686\n \n \n\n ##########\n File path: java/adapter/jdbc/src/main/java/org/apache/arrow/adapter/jdbc/consumer/DecimalConsumer.java\n ##########\n @@ -0,0 +1,55 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.adapter.jdbc.consumer;\n+\n+import java.math.BigDecimal;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+\n+import org.apache.arrow.vector.DecimalVector;\n+import org.apache.arrow.vector.complex.impl.DecimalWriterImpl;\n+import org.apache.arrow.vector.complex.writer.DecimalWriter;\n+\n+/**\n+ * Consumer which consume decimal type values from {@link ResultSet}.\n+ * Write the data to {@link org.apache.arrow.vector.DecimalVector}.\n+ */\n+public class DecimalConsumer implements JdbcConsumer {\n+\n+  private final DecimalWriter writer;\n+  private final int index;\n+\n+  private BigDecimal reuse;\n \n Review comment:\n   should this not be a method variable?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T14:44:21.260+0000",
                    "updated": "2019-08-09T14:44:21.260+0000",
                    "started": "2019-08-09T14:44:21.260+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "292080",
                    "issueId": "13248103"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248103/worklog/292081",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "praveenbingo commented on pull request #4978: ARROW-6083: [Java] Refactor Jdbc adapter consume logic\nURL: https://github.com/apache/arrow/pull/4978#discussion_r312450467\n \n \n\n ##########\n File path: java/adapter/jdbc/src/main/java/org/apache/arrow/adapter/jdbc/consumer/IntConsumer.java\n ##########\n @@ -0,0 +1,54 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.adapter.jdbc.consumer;\n+\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+\n+import org.apache.arrow.vector.IntVector;\n+import org.apache.arrow.vector.complex.impl.IntWriterImpl;\n+import org.apache.arrow.vector.complex.writer.IntWriter;\n+\n+/**\n+ * Consumer which consume int type values from {@link ResultSet}.\n+ * Write the data to {@link org.apache.arrow.vector.IntVector}.\n+ */\n+public class IntConsumer implements JdbcConsumer {\n \n Review comment:\n   can we generify instead of \r\n   \r\n   like Consumer<IntWriter,IntVector,Lamdba>\r\n   lambda being the resultSet.get method.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T14:44:21.587+0000",
                    "updated": "2019-08-09T14:44:21.587+0000",
                    "started": "2019-08-09T14:44:21.586+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "292081",
                    "issueId": "13248103"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248103/worklog/292082",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "praveenbingo commented on pull request #4978: ARROW-6083: [Java] Refactor Jdbc adapter consume logic\nURL: https://github.com/apache/arrow/pull/4978#discussion_r312449729\n \n \n\n ##########\n File path: java/adapter/jdbc/src/main/java/org/apache/arrow/adapter/jdbc/consumer/VarCharConsumer.java\n ##########\n @@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.adapter.jdbc.consumer;\n+\n+import java.nio.charset.StandardCharsets;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.vector.VarCharVector;\n+import org.apache.arrow.vector.complex.impl.VarCharWriterImpl;\n+import org.apache.arrow.vector.complex.writer.VarCharWriter;\n+\n+import io.netty.buffer.ArrowBuf;\n+\n+/**\n+ * Consumer which consume varchar type values from {@link ResultSet}.\n+ * Write the data to {@link org.apache.arrow.vector.VarCharVector}.\n+ */\n+public class VarCharConsumer implements JdbcConsumer {\n+\n+  private final VarCharWriter writer;\n+  private final int index;\n \n Review comment:\n   (!nit)\r\n   Can we please change to columnIndexInResultSet - i was confused with vector index..\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T14:44:21.594+0000",
                    "updated": "2019-08-09T14:44:21.594+0000",
                    "started": "2019-08-09T14:44:21.593+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "292082",
                    "issueId": "13248103"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 27000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@7bfa2d7f[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4fbd562b[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@75c35abd[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@506a5620[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@778ec5e7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@68c6c93b[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7bf702c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@5e6edad[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@446b10b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@5a172fa9[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@26551ad7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@14ec0035[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 27000,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Aug 12 03:13:19 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-08-12T03:09:33.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6083/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-07-31T12:43:04.000+0000",
        "updated": "2019-08-12T03:13:19.000+0000",
        "timeoriginalestimate": null,
        "description": "Jdbc adapter read from {{ResultSet}}\u00a0looks like:\r\n\r\nwhile (rs.next()) {\r\n for (int i = 1; i <= columnCount; i++) {\r\n jdbcToFieldVector(\r\n rs,\r\n i,\r\n rs.getMetaData().getColumnType(i),\r\n rowCount,\r\n root.getVector(rsmd.getColumnName(i)),\r\n config);\r\n }\r\n rowCount++;\r\n}\r\n\r\nAnd in {{jdbcToFieldVector}} has lots of switch-case, that is to see, for every single value from ResultSet we have to do lots of analyzing conditions.\r\n\r\nI think we could optimize this using consumer/delegate like avro adapter.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "7.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 27000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] Refactor Jdbc adapter consume logic",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248103/comment/16904813",
                    "id": "16904813",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 4978\n[https://github.com/apache/arrow/pull/4978]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-08-12T03:09:33.688+0000",
                    "updated": "2019-08-12T03:09:33.688+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248103/comment/16904815",
                    "id": "16904815",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
                        "name": "tianchen92",
                        "key": "tianchen92",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
                        },
                        "displayName": "Ji Liu",
                        "active": true,
                        "timeZone": "Asia/Gaza"
                    },
                    "body": "[~emkornfield@gmail.com] Thanks for your effort and sorry for always forgetting to specify the module\u00a0:)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
                        "name": "tianchen92",
                        "key": "tianchen92",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
                        },
                        "displayName": "Ji Liu",
                        "active": true,
                        "timeZone": "Asia/Gaza"
                    },
                    "created": "2019-08-12T03:13:19.681+0000",
                    "updated": "2019-08-12T03:13:19.681+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|z0578g:",
        "customfield_12314139": null
    }
}