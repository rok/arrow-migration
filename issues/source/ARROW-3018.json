{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13177541",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13177541",
    "key": "ARROW-3018",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343066",
                "id": "12343066",
                "description": "",
                "name": "0.11.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-10-08"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342562",
                "id": "12342562",
                "description": "",
                "name": "0.10.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-08-06"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pcmoritz",
            "name": "pcmoritz",
            "key": "pcmoritz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Philipp Moritz",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332956",
                "id": "12332956",
                "name": "C++ - Plasma"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pcmoritz",
            "name": "pcmoritz",
            "key": "pcmoritz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Philipp Moritz",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pcmoritz",
            "name": "pcmoritz",
            "key": "pcmoritz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Philipp Moritz",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 13800,
            "total": 13800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 13800,
            "total": 13800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3018/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 24,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13177541/worklog/132136",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz opened a new pull request #2400: ARROW-3018: [Plasma] Fix Mersenne twister seed\nURL: https://github.com/apache/arrow/pull/2400\n \n \n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-07T22:32:31.469+0000",
                    "updated": "2018-08-07T22:32:31.469+0000",
                    "started": "2018-08-07T22:32:31.468+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "132136",
                    "issueId": "13177541"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13177541/worklog/132178",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2400: ARROW-3018: [Plasma] Fix Mersenne twister seed\nURL: https://github.com/apache/arrow/pull/2400#issuecomment-411253038\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2400?src=pr&el=h1) Report\n   > Merging [#2400](https://codecov.io/gh/apache/arrow/pull/2400?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/5fda431eb748f2614022143ad3eaa951d00dd10e?src=pr&el=desc) will **increase** coverage by `2.14%`.\n   > The diff coverage is `100%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2400/graphs/tree.svg?src=pr&width=650&token=LpTCFbqVT1&height=150)](https://codecov.io/gh/apache/arrow/pull/2400?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2400      +/-   ##\n   ==========================================\n   + Coverage   84.73%   86.87%   +2.14%     \n   ==========================================\n     Files         293      237      -56     \n     Lines       45471    42709    -2762     \n   ==========================================\n   - Hits        38529    37103    -1426     \n   + Misses       6905     5606    -1299     \n   + Partials       37        0      -37\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2400?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/plasma/common.cc](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvY29tbW9uLmNj) | `94.82% <100%> (+0.38%)` | :arrow_up: |\n   | [go/arrow/math/int64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9pbnQ2NF9hbWQ2NC5nbw==) | | |\n   | [rust/src/array.rs](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-cnVzdC9zcmMvYXJyYXkucnM=) | | |\n   | [go/arrow/math/float64\\_sse4\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9mbG9hdDY0X3NzZTRfYW1kNjQuZ28=) | | |\n   | [go/arrow/memory/buffer.go](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L2J1ZmZlci5nbw==) | | |\n   | [go/arrow/math/int64\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9pbnQ2NF9hdngyX2FtZDY0Lmdv) | | |\n   | [go/arrow/memory/checked\\_allocator.go](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L2NoZWNrZWRfYWxsb2NhdG9yLmdv) | | |\n   | [go/arrow/math/uint64\\_sse4\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfc3NlNF9hbWQ2NC5nbw==) | | |\n   | [rust/src/buffer.rs](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-cnVzdC9zcmMvYnVmZmVyLnJz) | | |\n   | [rust/src/error.rs](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-cnVzdC9zcmMvZXJyb3IucnM=) | | |\n   | ... and [47 more](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2400?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2400?src=pr&el=footer). Last update [5fda431...ad4361d](https://codecov.io/gh/apache/arrow/pull/2400?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-08T01:21:13.278+0000",
                    "updated": "2018-08-08T01:21:13.278+0000",
                    "started": "2018-08-08T01:21:13.277+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "132178",
                    "issueId": "13177541"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13177541/worklog/132391",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2400: ARROW-3018: [Plasma] Fix Mersenne twister seed\nURL: https://github.com/apache/arrow/pull/2400#discussion_r208612469\n \n \n\n ##########\n File path: cpp/src/plasma/common.cc\n ##########\n @@ -29,6 +30,13 @@ namespace plasma {\n \n using arrow::Status;\n \n+std::mt19937 RandomlySeededMersenneTwister() {\n+  auto seed = static_cast<std::mt19937::result_type>(\n \n Review comment:\n   Note that C++ doesn't allow use to correctly seed the MT engine, but for this purpose it probably doesn't matter much. See http://www.pcg-random.org/posts/cpp-seeding-surprises.html\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-08T14:53:05.711+0000",
                    "updated": "2018-08-08T14:53:05.711+0000",
                    "started": "2018-08-08T14:53:05.710+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "132391",
                    "issueId": "13177541"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13177541/worklog/132392",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2400: ARROW-3018: [Plasma] Fix Mersenne twister seed\nURL: https://github.com/apache/arrow/pull/2400#discussion_r208612222\n \n \n\n ##########\n File path: cpp/src/plasma/common.cc\n ##########\n @@ -29,6 +30,13 @@ namespace plasma {\n \n using arrow::Status;\n \n+std::mt19937 RandomlySeededMersenneTwister() {\n+  auto seed = static_cast<std::mt19937::result_type>(\n \n Review comment:\n   I don't think you need to compute your own seed, just use `std::random_device` as shown in the example here: https://en.cppreference.com/w/cpp/numeric/random\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-08T14:53:05.711+0000",
                    "updated": "2018-08-08T14:53:05.711+0000",
                    "started": "2018-08-08T14:53:05.710+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "132392",
                    "issueId": "13177541"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13177541/worklog/132690",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz commented on a change in pull request #2400: ARROW-3018: [Plasma] Fix Mersenne twister seed\nURL: https://github.com/apache/arrow/pull/2400#discussion_r208748313\n \n \n\n ##########\n File path: cpp/src/plasma/common.cc\n ##########\n @@ -29,6 +30,13 @@ namespace plasma {\n \n using arrow::Status;\n \n+std::mt19937 RandomlySeededMersenneTwister() {\n+  auto seed = static_cast<std::mt19937::result_type>(\n \n Review comment:\n   Thanks for the feedback! Unfortunately std::random_device breaks the valgrind that ships with ubuntu 16.04 (it uses a processor instruction that is not implemented in that version of valgrind, but if you compile the latest valgrind it works).\r\n   \r\n   So our choices are:\r\n   - Read randomness from /dev/urandom (might not be portable)\r\n   - Come up with some good way to seed ourselves (most likely doesn't give the best possible randomness)\r\n   - Use random_device, upgrade valgrind on Travis and document somewhere that a newer version of valgrind is needed\r\n   \r\n   Let me know if you have thoughts on this!\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-08T21:53:08.939+0000",
                    "updated": "2018-08-08T21:53:08.939+0000",
                    "started": "2018-08-08T21:53:08.925+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "132690",
                    "issueId": "13177541"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13177541/worklog/132693",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz commented on a change in pull request #2400: ARROW-3018: [Plasma] Fix Mersenne twister seed\nURL: https://github.com/apache/arrow/pull/2400#discussion_r208748313\n \n \n\n ##########\n File path: cpp/src/plasma/common.cc\n ##########\n @@ -29,6 +30,13 @@ namespace plasma {\n \n using arrow::Status;\n \n+std::mt19937 RandomlySeededMersenneTwister() {\n+  auto seed = static_cast<std::mt19937::result_type>(\n \n Review comment:\n   Thanks for the feedback! Unfortunately std::random_device breaks the valgrind that ships with ubuntu 16.04 (it uses a processor instruction for generating randomness that is not implemented in that version of valgrind, but if you compile the latest valgrind it works).\r\n   \r\n   So our choices are:\r\n   - Read randomness from /dev/urandom (might not be portable)\r\n   - Come up with some good way to seed ourselves (most likely doesn't give the best possible randomness)\r\n   - Use random_device, upgrade valgrind on Travis and document somewhere that a newer version of valgrind is needed\r\n   \r\n   Let me know if you have thoughts on this!\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-08T21:53:29.941+0000",
                    "updated": "2018-08-08T21:53:29.941+0000",
                    "started": "2018-08-08T21:53:29.940+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "132693",
                    "issueId": "13177541"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13177541/worklog/132694",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz commented on a change in pull request #2400: ARROW-3018: [Plasma] Fix Mersenne twister seed\nURL: https://github.com/apache/arrow/pull/2400#discussion_r208748313\n \n \n\n ##########\n File path: cpp/src/plasma/common.cc\n ##########\n @@ -29,6 +30,13 @@ namespace plasma {\n \n using arrow::Status;\n \n+std::mt19937 RandomlySeededMersenneTwister() {\n+  auto seed = static_cast<std::mt19937::result_type>(\n \n Review comment:\n   Thanks for the feedback! Unfortunately std::random_device breaks the valgrind that ships with ubuntu 16.04 (it uses a processor instruction for generating randomness that is not implemented in that version of valgrind, but if you compile the latest valgrind it works).\r\n   \r\n   So our choices are:\r\n   - Read randomness from /dev/urandom for the seed (might not be portable)\r\n   - Come up with some good way to seed ourselves (most likely doesn't give the best possible randomness)\r\n   - Use random_device, upgrade valgrind on Travis and document somewhere that a newer version of valgrind is needed\r\n   \r\n   Let me know if you have thoughts on this!\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-08T21:53:47.598+0000",
                    "updated": "2018-08-08T21:53:47.598+0000",
                    "started": "2018-08-08T21:53:47.598+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "132694",
                    "issueId": "13177541"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13177541/worklog/132696",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2400: ARROW-3018: [Plasma] Fix Mersenne twister seed\nURL: https://github.com/apache/arrow/pull/2400#discussion_r208749567\n \n \n\n ##########\n File path: cpp/src/plasma/common.cc\n ##########\n @@ -29,6 +30,13 @@ namespace plasma {\n \n using arrow::Status;\n \n+std::mt19937 RandomlySeededMersenneTwister() {\n+  auto seed = static_cast<std::mt19937::result_type>(\n \n Review comment:\n   Ah, right, I got this locally too. Then keep the current seed and add a comment about Valgrind?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-08T21:58:04.850+0000",
                    "updated": "2018-08-08T21:58:04.850+0000",
                    "started": "2018-08-08T21:58:04.850+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "132696",
                    "issueId": "13177541"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13177541/worklog/133895",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on issue #2400: ARROW-3018: [Plasma] Fix Mersenne twister seed\nURL: https://github.com/apache/arrow/pull/2400#issuecomment-411253038\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2400?src=pr&el=h1) Report\n   > Merging [#2400](https://codecov.io/gh/apache/arrow/pull/2400?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/5fda431eb748f2614022143ad3eaa951d00dd10e?src=pr&el=desc) will **increase** coverage by `1.93%`.\n   > The diff coverage is `100%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2400/graphs/tree.svg?height=150&width=650&token=LpTCFbqVT1&src=pr)](https://codecov.io/gh/apache/arrow/pull/2400?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2400      +/-   ##\n   ==========================================\n   + Coverage   84.73%   86.66%   +1.93%     \n   ==========================================\n     Files         293      239      -54     \n     Lines       45471    42572    -2899     \n   ==========================================\n   - Hits        38529    36896    -1633     \n   + Misses       6905     5676    -1229     \n   + Partials       37        0      -37\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2400?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [python/pyarrow/tests/test\\_plasma.py](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9wbGFzbWEucHk=) | `96.34% <100%> (+0.04%)` | :arrow_up: |\n   | [cpp/src/plasma/common.cc](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvY29tbW9uLmNj) | `95.08% <100%> (+0.63%)` | :arrow_up: |\n   | [cpp/src/arrow/buffer.cc](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9idWZmZXIuY2M=) | `93.81% <0%> (-6.19%)` | :arrow_down: |\n   | [cpp/src/arrow/python/helpers.cc](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vaGVscGVycy5jYw==) | `77.54% <0%> (-4.17%)` | :arrow_down: |\n   | [cpp/src/arrow/type\\_traits.h](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90eXBlX3RyYWl0cy5o) | `96.66% <0%> (-3.34%)` | :arrow_down: |\n   | [cpp/src/arrow/python/iterators.h](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vaXRlcmF0b3JzLmg=) | `91.07% <0%> (-3.22%)` | :arrow_down: |\n   | [cpp/src/arrow/python/builtin\\_convert.cc](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vYnVpbHRpbl9jb252ZXJ0LmNj) | `89.52% <0%> (-0.78%)` | :arrow_down: |\n   | [python/pyarrow/array.pxi](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvYXJyYXkucHhp) | `66.74% <0%> (-0.38%)` | :arrow_down: |\n   | [python/pyarrow/plasma.py](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvcGxhc21hLnB5) | `87.5% <0%> (-0.22%)` | :arrow_down: |\n   | [python/pyarrow/tests/test\\_convert\\_builtin.py](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9jb252ZXJ0X2J1aWx0aW4ucHk=) | `99.51% <0%> (-0.12%)` | :arrow_down: |\n   | ... and [82 more](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2400?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2400?src=pr&el=footer). Last update [5fda431...2cb3c0f](https://codecov.io/gh/apache/arrow/pull/2400?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-11T01:38:01.471+0000",
                    "updated": "2018-08-11T01:38:01.471+0000",
                    "started": "2018-08-11T01:38:01.471+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "133895",
                    "issueId": "13177541"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13177541/worklog/133896",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz commented on issue #2400: ARROW-3018: [Plasma] Fix Mersenne twister seed\nURL: https://github.com/apache/arrow/pull/2400#issuecomment-412242309\n \n \n   @pitrou Thanks, I fixed the things you pointed out now (the seed should now be strong and also it should work with older versions of valgrind).\r\n   \r\n   I'm not sure what you mean with `you might want to protect the generator against forking` however, can you elaborate?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-11T01:41:43.521+0000",
                    "updated": "2018-08-11T01:41:43.521+0000",
                    "started": "2018-08-11T01:41:43.520+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "133896",
                    "issueId": "13177541"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13177541/worklog/133945",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2400: ARROW-3018: [Plasma] Fix Mersenne twister seed\nURL: https://github.com/apache/arrow/pull/2400#discussion_r209426514\n \n \n\n ##########\n File path: cpp/src/plasma/common.cc\n ##########\n @@ -31,10 +31,16 @@ namespace plasma {\n using arrow::Status;\n \n std::mt19937 RandomlySeededMersenneTwister() {\n-  auto seed = static_cast<std::mt19937::result_type>(\n-      std::chrono::high_resolution_clock::now().time_since_epoch().count());\n-  std::mt19937 seeded_engine(seed);\n-  return seeded_engine;\n+  // We use the \"/dev/urandom\" argument here. Without it,\n+  // std::random_device gets randomness using a special CPU instruction\n+  // (RDRND) which crashes the valgrind shipped with Ubuntu 16.04.\n \n Review comment:\n   Can you use this conditionally when valgrind is enabled? Should be `ARROW_VALGRIND` or something.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-11T13:24:09.799+0000",
                    "updated": "2018-08-11T13:24:09.799+0000",
                    "started": "2018-08-11T13:24:09.799+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "133945",
                    "issueId": "13177541"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13177541/worklog/133946",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #2400: ARROW-3018: [Plasma] Fix Mersenne twister seed\nURL: https://github.com/apache/arrow/pull/2400#issuecomment-412275170\n \n \n   What I mean is what happens when you do this:\r\n   ```python\r\n   >>> import multiprocessing as mp\r\n   >>> from pyarrow import plasma\r\n   >>> def child(): print(plasma.ObjectID.from_random())\r\n   >>> \r\n   >>> for i in range(4): mp.Process(target=child).start()\r\n   ObjectID(c0d241d281f0b269e46cf5948c2823c3263a41cf)\r\n   ObjectID(c0d241d281f0b269e46cf5948c2823c3263a41cf)\r\n   ObjectID(c0d241d281f0b269e46cf5948c2823c3263a41cf)\r\n   ObjectID(c0d241d281f0b269e46cf5948c2823c3263a41cf)\r\n   ```\r\n   \r\n   You want to re-seed or re-create your generator in each new child process...\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-11T13:29:56.629+0000",
                    "updated": "2018-08-11T13:29:56.629+0000",
                    "started": "2018-08-11T13:29:56.629+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "133946",
                    "issueId": "13177541"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13177541/worklog/137242",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on issue #2400: ARROW-3018: [Plasma] Fix Mersenne twister seed\nURL: https://github.com/apache/arrow/pull/2400#issuecomment-411253038\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2400?src=pr&el=h1) Report\n   > Merging [#2400](https://codecov.io/gh/apache/arrow/pull/2400?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/23045d2b5be37df5cd990f5932576eb701e14b18?src=pr&el=desc) will **increase** coverage by `0.01%`.\n   > The diff coverage is `100%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2400/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/2400?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2400      +/-   ##\n   ==========================================\n   + Coverage   86.14%   86.16%   +0.01%     \n   ==========================================\n     Files         306      307       +1     \n     Lines       46691    46687       -4     \n   ==========================================\n   + Hits        40224    40229       +5     \n   + Misses       6393     6388       -5     \n   + Partials       74       70       -4\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2400?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/plasma/common.cc](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvY29tbW9uLmNj) | `93.47% <\u00f8> (-0.97%)` | :arrow_down: |\n   | [cpp/src/plasma/common.h](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvY29tbW9uLmg=) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/test-common.h](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGVzdC1jb21tb24uaA==) | `100% <100%> (\u00f8)` | |\n   | [cpp/src/plasma/test/client\\_tests.cc](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGVzdC9jbGllbnRfdGVzdHMuY2M=) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/tests/test\\_plasma.py](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9wbGFzbWEucHk=) | `96.29% <100%> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/\\_plasma.pyx](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvX3BsYXNtYS5weXg=) | `56.9% <100%> (+0.23%)` | :arrow_up: |\n   | [cpp/src/plasma/test/serialization\\_tests.cc](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGVzdC9zZXJpYWxpemF0aW9uX3Rlc3RzLmNj) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [go/arrow/math/uint64\\_sse4\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfc3NlNF9hbWQ2NC5nbw==) | `0% <0%> (-100%)` | :arrow_down: |\n   | [go/arrow/memory/memory\\_sse4\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L21lbW9yeV9zc2U0X2FtZDY0Lmdv) | `0% <0%> (-100%)` | :arrow_down: |\n   | [go/arrow/math/int64\\_sse4\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9pbnQ2NF9zc2U0X2FtZDY0Lmdv) | `0% <0%> (-100%)` | :arrow_down: |\n   | ... and [12 more](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2400?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2400?src=pr&el=footer). Last update [23045d2...7eab510](https://codecov.io/gh/apache/arrow/pull/2400?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-23T04:31:19.963+0000",
                    "updated": "2018-08-23T04:31:19.963+0000",
                    "started": "2018-08-23T04:31:19.962+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "137242",
                    "issueId": "13177541"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13177541/worklog/137251",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on issue #2400: ARROW-3018: [Plasma] Remove Mersenne twister\nURL: https://github.com/apache/arrow/pull/2400#issuecomment-411253038\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2400?src=pr&el=h1) Report\n   > Merging [#2400](https://codecov.io/gh/apache/arrow/pull/2400?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/23045d2b5be37df5cd990f5932576eb701e14b18?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n   > The diff coverage is `100%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2400/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/2400?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2400      +/-   ##\n   ==========================================\n   - Coverage   86.14%   86.14%   -0.01%     \n   ==========================================\n     Files         306      307       +1     \n     Lines       46691    46689       -2     \n   ==========================================\n   - Hits        40224    40221       -3     \n   - Misses       6393     6394       +1     \n     Partials       74       74\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2400?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/plasma/common.cc](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvY29tbW9uLmNj) | `93.47% <\u00f8> (-0.97%)` | :arrow_down: |\n   | [cpp/src/plasma/common.h](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvY29tbW9uLmg=) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/tests/test\\_plasma.py](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9wbGFzbWEucHk=) | `96.29% <100%> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/\\_plasma.pyx](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvX3BsYXNtYS5weXg=) | `57.37% <100%> (+0.71%)` | :arrow_up: |\n   | [cpp/src/plasma/test/client\\_tests.cc](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGVzdC9jbGllbnRfdGVzdHMuY2M=) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/test/serialization\\_tests.cc](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGVzdC9zZXJpYWxpemF0aW9uX3Rlc3RzLmNj) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/test-common.h](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGVzdC1jb21tb24uaA==) | `100% <100%> (\u00f8)` | |\n   | [cpp/src/plasma/thirdparty/dlmalloc.c](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGhpcmRwYXJ0eS9kbG1hbGxvYy5j) | `47.4% <0%> (-0.13%)` | :arrow_down: |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2400?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2400?src=pr&el=footer). Last update [23045d2...2d5a820](https://codecov.io/gh/apache/arrow/pull/2400?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-23T05:32:00.593+0000",
                    "updated": "2018-08-23T05:32:00.593+0000",
                    "started": "2018-08-23T05:32:00.592+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "137251",
                    "issueId": "13177541"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13177541/worklog/137252",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz commented on issue #2400: ARROW-3018: [Plasma] Remove Mersenne twister\nURL: https://github.com/apache/arrow/pull/2400#issuecomment-415296683\n \n \n   This is now ready to merge now. After some deliberation I decided it was better to get rid of the C++ random number generator altogether.\r\n   \r\n   I don't think deprecation is necessary here since it is very easy to make a random object id but let me know if you think otherwise!\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-23T05:33:32.973+0000",
                    "updated": "2018-08-23T05:33:32.973+0000",
                    "started": "2018-08-23T05:33:32.971+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "137252",
                    "issueId": "13177541"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13177541/worklog/137253",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz closed pull request #2400: ARROW-3018: [Plasma] Remove Mersenne twister\nURL: https://github.com/apache/arrow/pull/2400\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/plasma/common.cc b/cpp/src/plasma/common.cc\nindex 6e368d3b45..0ca17cf814 100644\n--- a/cpp/src/plasma/common.cc\n+++ b/cpp/src/plasma/common.cc\n@@ -18,8 +18,6 @@\n #include \"plasma/common.h\"\n \n #include <limits>\n-#include <mutex>\n-#include <random>\n \n #include \"plasma/plasma_generated.h\"\n \n@@ -29,22 +27,6 @@ namespace plasma {\n \n using arrow::Status;\n \n-UniqueID UniqueID::from_random() {\n-  UniqueID id;\n-  uint8_t* data = id.mutable_data();\n-  // NOTE(pcm): The right way to do this is to have one std::mt19937 per\n-  // thread (using the thread_local keyword), but that's not supported on\n-  // older versions of macOS (see https://stackoverflow.com/a/29929949)\n-  static std::mutex mutex;\n-  std::lock_guard<std::mutex> lock(mutex);\n-  static std::mt19937 generator;\n-  std::uniform_int_distribution<uint32_t> dist(0, std::numeric_limits<uint8_t>::max());\n-  for (int i = 0; i < kUniqueIDSize; i++) {\n-    data[i] = static_cast<uint8_t>(dist(generator));\n-  }\n-  return id;\n-}\n-\n UniqueID UniqueID::from_binary(const std::string& binary) {\n   UniqueID id;\n   std::memcpy(&id, binary.data(), sizeof(id));\ndiff --git a/cpp/src/plasma/common.h b/cpp/src/plasma/common.h\nindex a41bf727f7..a8cb931872 100644\n--- a/cpp/src/plasma/common.h\n+++ b/cpp/src/plasma/common.h\n@@ -39,7 +39,6 @@ constexpr int64_t kUniqueIDSize = 20;\n \n class ARROW_EXPORT UniqueID {\n  public:\n-  static UniqueID from_random();\n   static UniqueID from_binary(const std::string& binary);\n   bool operator==(const UniqueID& rhs) const;\n   const uint8_t* data() const;\n@@ -47,6 +46,7 @@ class ARROW_EXPORT UniqueID {\n   std::string binary() const;\n   std::string hex() const;\n   size_t hash() const;\n+  static int64_t size() { return kUniqueIDSize; }\n \n  private:\n   uint8_t id_[kUniqueIDSize];\ndiff --git a/cpp/src/plasma/test-common.h b/cpp/src/plasma/test-common.h\nnew file mode 100644\nindex 0000000000..66b8c24136\n--- /dev/null\n+++ b/cpp/src/plasma/test-common.h\n@@ -0,0 +1,37 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#ifndef PLASMA_TEST_COMMON_H\n+#define PLASMA_TEST_COMMON_H\n+\n+#include \"arrow/test-util.h\"\n+#include \"gtest/gtest.h\"\n+\n+#include \"plasma/common.h\"\n+\n+namespace plasma {\n+\n+ObjectID random_object_id() {\n+  static uint32_t random_seed = 0;\n+  ObjectID result;\n+  arrow::random_bytes(kUniqueIDSize, random_seed++, result.mutable_data());\n+  return result;\n+}\n+\n+}  // namespace plasma\n+\n+#endif  // PLASMA_TEST_COMMON_H\ndiff --git a/cpp/src/plasma/test/client_tests.cc b/cpp/src/plasma/test/client_tests.cc\nindex a945ce616a..d2aeb30fde 100644\n--- a/cpp/src/plasma/test/client_tests.cc\n+++ b/cpp/src/plasma/test/client_tests.cc\n@@ -26,15 +26,13 @@\n #include <random>\n #include <thread>\n \n-#include \"arrow/test-util.h\"\n+#include \"plasma/test-common.h\"\n \n #include \"plasma/client.h\"\n #include \"plasma/common.h\"\n #include \"plasma/plasma.h\"\n #include \"plasma/protocol.h\"\n \n-#include \"gtest/gtest.h\"\n-\n namespace plasma {\n \n std::string test_executable;  // NOLINT\n@@ -105,7 +103,7 @@ TEST_F(TestPlasmaStore, NewSubscriberTest) {\n   ARROW_CHECK_OK(local_client.Connect(store_socket_name_, \"\"));\n   ARROW_CHECK_OK(local_client2.Connect(store_socket_name_, \"\"));\n \n-  ObjectID object_id = ObjectID::from_random();\n+  ObjectID object_id = random_object_id();\n \n   // Test for the object being in local Plasma store.\n   // First create object.\n@@ -122,7 +120,7 @@ TEST_F(TestPlasmaStore, NewSubscriberTest) {\n   ARROW_CHECK_OK(local_client2.Subscribe(&fd));\n   ASSERT_GT(fd, 0);\n \n-  ObjectID object_id2 = ObjectID::from_random();\n+  ObjectID object_id2 = random_object_id();\n   int64_t data_size2 = 0;\n   int64_t metadata_size2 = 0;\n   ARROW_CHECK_OK(\n@@ -146,7 +144,7 @@ TEST_F(TestPlasmaStore, NewSubscriberTest) {\n }\n \n TEST_F(TestPlasmaStore, SealErrorsTest) {\n-  ObjectID object_id = ObjectID::from_random();\n+  ObjectID object_id = random_object_id();\n \n   Status result = client_.Seal(object_id);\n   ASSERT_TRUE(result.IsPlasmaObjectNonexistent());\n@@ -161,7 +159,7 @@ TEST_F(TestPlasmaStore, SealErrorsTest) {\n }\n \n TEST_F(TestPlasmaStore, DeleteTest) {\n-  ObjectID object_id = ObjectID::from_random();\n+  ObjectID object_id = random_object_id();\n \n   // Test for deleting non-existance object.\n   Status result = client_.Delete(object_id);\n@@ -191,8 +189,8 @@ TEST_F(TestPlasmaStore, DeleteTest) {\n }\n \n TEST_F(TestPlasmaStore, DeleteObjectsTest) {\n-  ObjectID object_id1 = ObjectID::from_random();\n-  ObjectID object_id2 = ObjectID::from_random();\n+  ObjectID object_id1 = random_object_id();\n+  ObjectID object_id2 = random_object_id();\n \n   // Test for deleting non-existance object.\n   Status result = client_.Delete(std::vector<ObjectID>{object_id1, object_id2});\n@@ -241,7 +239,7 @@ TEST_F(TestPlasmaStore, DeleteObjectsTest) {\n }\n \n TEST_F(TestPlasmaStore, ContainsTest) {\n-  ObjectID object_id = ObjectID::from_random();\n+  ObjectID object_id = random_object_id();\n \n   // Test for object non-existence.\n   bool has_object;\n@@ -262,7 +260,7 @@ TEST_F(TestPlasmaStore, ContainsTest) {\n TEST_F(TestPlasmaStore, GetTest) {\n   std::vector<ObjectBuffer> object_buffers;\n \n-  ObjectID object_id = ObjectID::from_random();\n+  ObjectID object_id = random_object_id();\n \n   // Test for object non-existence.\n   ARROW_CHECK_OK(client_.Get({object_id}, 0, &object_buffers));\n@@ -299,7 +297,7 @@ TEST_F(TestPlasmaStore, GetTest) {\n \n TEST_F(TestPlasmaStore, LegacyGetTest) {\n   // Test for old non-releasing Get() variant\n-  ObjectID object_id = ObjectID::from_random();\n+  ObjectID object_id = random_object_id();\n   {\n     ObjectBuffer object_buffer;\n \n@@ -327,8 +325,8 @@ TEST_F(TestPlasmaStore, LegacyGetTest) {\n }\n \n TEST_F(TestPlasmaStore, MultipleGetTest) {\n-  ObjectID object_id1 = ObjectID::from_random();\n-  ObjectID object_id2 = ObjectID::from_random();\n+  ObjectID object_id1 = random_object_id();\n+  ObjectID object_id2 = random_object_id();\n   std::vector<ObjectID> object_ids = {object_id1, object_id2};\n   std::vector<ObjectBuffer> object_buffers;\n \n@@ -350,7 +348,7 @@ TEST_F(TestPlasmaStore, MultipleGetTest) {\n }\n \n TEST_F(TestPlasmaStore, AbortTest) {\n-  ObjectID object_id = ObjectID::from_random();\n+  ObjectID object_id = random_object_id();\n   std::vector<ObjectBuffer> object_buffers;\n \n   // Test for object non-existence.\n@@ -396,7 +394,7 @@ TEST_F(TestPlasmaStore, AbortTest) {\n }\n \n TEST_F(TestPlasmaStore, MultipleClientTest) {\n-  ObjectID object_id = ObjectID::from_random();\n+  ObjectID object_id = random_object_id();\n   std::vector<ObjectBuffer> object_buffers;\n \n   // Test for object non-existence on the first client.\n@@ -420,7 +418,7 @@ TEST_F(TestPlasmaStore, MultipleClientTest) {\n \n   // Test that one client disconnecting does not interfere with the other.\n   // First create object on the second client.\n-  object_id = ObjectID::from_random();\n+  object_id = random_object_id();\n   ARROW_CHECK_OK(client2_.Create(object_id, data_size, metadata, metadata_size, &data));\n   // Disconnect the first client.\n   ARROW_CHECK_OK(client_.Disconnect());\n@@ -437,7 +435,7 @@ TEST_F(TestPlasmaStore, ManyObjectTest) {\n   // and leave the last third unsealed.\n   std::vector<ObjectID> object_ids;\n   for (int i = 0; i < 100; i++) {\n-    ObjectID object_id = ObjectID::from_random();\n+    ObjectID object_id = random_object_id();\n     object_ids.push_back(object_id);\n \n     // Test for object non-existence on the first client.\n@@ -521,7 +519,7 @@ void AssertCudaRead(const std::shared_ptr<Buffer>& buffer,\n }  // namespace\n \n TEST_F(TestPlasmaStore, GetGPUTest) {\n-  ObjectID object_id = ObjectID::from_random();\n+  ObjectID object_id = random_object_id();\n   std::vector<ObjectBuffer> object_buffers;\n \n   // Test for object non-existence.\n@@ -555,7 +553,7 @@ TEST_F(TestPlasmaStore, GetGPUTest) {\n }\n \n TEST_F(TestPlasmaStore, MultipleClientGPUTest) {\n-  ObjectID object_id = ObjectID::from_random();\n+  ObjectID object_id = random_object_id();\n   std::vector<ObjectBuffer> object_buffers;\n \n   // Test for object non-existence on the first client.\n@@ -579,7 +577,7 @@ TEST_F(TestPlasmaStore, MultipleClientGPUTest) {\n \n   // Test that one client disconnecting does not interfere with the other.\n   // First create object on the second client.\n-  object_id = ObjectID::from_random();\n+  object_id = random_object_id();\n   ARROW_CHECK_OK(\n       client2_.Create(object_id, data_size, metadata, metadata_size, &data, 1));\n   // Disconnect the first client.\ndiff --git a/cpp/src/plasma/test/serialization_tests.cc b/cpp/src/plasma/test/serialization_tests.cc\nindex 15df7defdc..d910334df8 100644\n--- a/cpp/src/plasma/test/serialization_tests.cc\n+++ b/cpp/src/plasma/test/serialization_tests.cc\n@@ -18,13 +18,13 @@\n #include <sys/types.h>\n #include <unistd.h>\n \n+#include \"plasma/test-common.h\"\n+\n #include \"plasma/common.h\"\n #include \"plasma/io.h\"\n #include \"plasma/plasma.h\"\n #include \"plasma/protocol.h\"\n \n-#include \"gtest/gtest.h\"\n-\n namespace fb = plasma::flatbuf;\n \n namespace plasma {\n@@ -76,7 +76,7 @@ PlasmaObject random_plasma_object(void) {\n \n TEST(PlasmaSerialization, CreateRequest) {\n   int fd = create_temp_file();\n-  ObjectID object_id1 = ObjectID::from_random();\n+  ObjectID object_id1 = random_object_id();\n   int64_t data_size1 = 42;\n   int64_t metadata_size1 = 11;\n   int device_num1 = 0;\n@@ -99,7 +99,7 @@ TEST(PlasmaSerialization, CreateRequest) {\n \n TEST(PlasmaSerialization, CreateReply) {\n   int fd = create_temp_file();\n-  ObjectID object_id1 = ObjectID::from_random();\n+  ObjectID object_id1 = random_object_id();\n   PlasmaObject object1 = random_plasma_object();\n   int64_t mmap_size1 = 1000000;\n   ARROW_CHECK_OK(SendCreateReply(fd, object_id1, &object1, PlasmaError::OK, mmap_size1));\n@@ -120,7 +120,7 @@ TEST(PlasmaSerialization, CreateReply) {\n \n TEST(PlasmaSerialization, SealRequest) {\n   int fd = create_temp_file();\n-  ObjectID object_id1 = ObjectID::from_random();\n+  ObjectID object_id1 = random_object_id();\n   unsigned char digest1[kDigestSize];\n   memset(&digest1[0], 7, kDigestSize);\n   ARROW_CHECK_OK(SendSealRequest(fd, object_id1, &digest1[0]));\n@@ -135,7 +135,7 @@ TEST(PlasmaSerialization, SealRequest) {\n \n TEST(PlasmaSerialization, SealReply) {\n   int fd = create_temp_file();\n-  ObjectID object_id1 = ObjectID::from_random();\n+  ObjectID object_id1 = random_object_id();\n   ARROW_CHECK_OK(SendSealReply(fd, object_id1, PlasmaError::ObjectExists));\n   std::vector<uint8_t> data = read_message_from_file(fd, MessageType::PlasmaSealReply);\n   ObjectID object_id2;\n@@ -148,8 +148,8 @@ TEST(PlasmaSerialization, SealReply) {\n TEST(PlasmaSerialization, GetRequest) {\n   int fd = create_temp_file();\n   ObjectID object_ids[2];\n-  object_ids[0] = ObjectID::from_random();\n-  object_ids[1] = ObjectID::from_random();\n+  object_ids[0] = random_object_id();\n+  object_ids[1] = random_object_id();\n   int64_t timeout_ms = 1234;\n   ARROW_CHECK_OK(SendGetRequest(fd, object_ids, 2, timeout_ms));\n   std::vector<uint8_t> data = read_message_from_file(fd, MessageType::PlasmaGetRequest);\n@@ -166,8 +166,8 @@ TEST(PlasmaSerialization, GetRequest) {\n TEST(PlasmaSerialization, GetReply) {\n   int fd = create_temp_file();\n   ObjectID object_ids[2];\n-  object_ids[0] = ObjectID::from_random();\n-  object_ids[1] = ObjectID::from_random();\n+  object_ids[0] = random_object_id();\n+  object_ids[1] = random_object_id();\n   std::unordered_map<ObjectID, PlasmaObject> plasma_objects;\n   plasma_objects[object_ids[0]] = random_plasma_object();\n   plasma_objects[object_ids[1]] = random_plasma_object();\n@@ -200,7 +200,7 @@ TEST(PlasmaSerialization, GetReply) {\n \n TEST(PlasmaSerialization, ReleaseRequest) {\n   int fd = create_temp_file();\n-  ObjectID object_id1 = ObjectID::from_random();\n+  ObjectID object_id1 = random_object_id();\n   ARROW_CHECK_OK(SendReleaseRequest(fd, object_id1));\n   std::vector<uint8_t> data =\n       read_message_from_file(fd, MessageType::PlasmaReleaseRequest);\n@@ -212,7 +212,7 @@ TEST(PlasmaSerialization, ReleaseRequest) {\n \n TEST(PlasmaSerialization, ReleaseReply) {\n   int fd = create_temp_file();\n-  ObjectID object_id1 = ObjectID::from_random();\n+  ObjectID object_id1 = random_object_id();\n   ARROW_CHECK_OK(SendReleaseReply(fd, object_id1, PlasmaError::ObjectExists));\n   std::vector<uint8_t> data = read_message_from_file(fd, MessageType::PlasmaReleaseReply);\n   ObjectID object_id2;\n@@ -224,7 +224,7 @@ TEST(PlasmaSerialization, ReleaseReply) {\n \n TEST(PlasmaSerialization, DeleteRequest) {\n   int fd = create_temp_file();\n-  ObjectID object_id1 = ObjectID::from_random();\n+  ObjectID object_id1 = random_object_id();\n   ARROW_CHECK_OK(SendDeleteRequest(fd, std::vector<ObjectID>{object_id1}));\n   std::vector<uint8_t> data =\n       read_message_from_file(fd, MessageType::PlasmaDeleteRequest);\n@@ -237,7 +237,7 @@ TEST(PlasmaSerialization, DeleteRequest) {\n \n TEST(PlasmaSerialization, DeleteReply) {\n   int fd = create_temp_file();\n-  ObjectID object_id1 = ObjectID::from_random();\n+  ObjectID object_id1 = random_object_id();\n   PlasmaError error1 = PlasmaError::ObjectExists;\n   ARROW_CHECK_OK(SendDeleteReply(fd, std::vector<ObjectID>{object_id1},\n                                  std::vector<PlasmaError>{error1}));\n@@ -257,8 +257,8 @@ TEST(PlasmaSerialization, StatusRequest) {\n   int fd = create_temp_file();\n   constexpr int64_t num_objects = 2;\n   ObjectID object_ids[num_objects];\n-  object_ids[0] = ObjectID::from_random();\n-  object_ids[1] = ObjectID::from_random();\n+  object_ids[0] = random_object_id();\n+  object_ids[1] = random_object_id();\n   ARROW_CHECK_OK(SendStatusRequest(fd, object_ids, num_objects));\n   std::vector<uint8_t> data =\n       read_message_from_file(fd, MessageType::PlasmaStatusRequest);\n@@ -273,8 +273,8 @@ TEST(PlasmaSerialization, StatusRequest) {\n TEST(PlasmaSerialization, StatusReply) {\n   int fd = create_temp_file();\n   ObjectID object_ids[2];\n-  object_ids[0] = ObjectID::from_random();\n-  object_ids[1] = ObjectID::from_random();\n+  object_ids[0] = random_object_id();\n+  object_ids[1] = random_object_id();\n   int object_statuses[2] = {42, 43};\n   ARROW_CHECK_OK(SendStatusReply(fd, object_ids, object_statuses, 2));\n   std::vector<uint8_t> data = read_message_from_file(fd, MessageType::PlasmaStatusReply);\n@@ -316,8 +316,8 @@ TEST(PlasmaSerialization, EvictReply) {\n TEST(PlasmaSerialization, FetchRequest) {\n   int fd = create_temp_file();\n   ObjectID object_ids[2];\n-  object_ids[0] = ObjectID::from_random();\n-  object_ids[1] = ObjectID::from_random();\n+  object_ids[0] = random_object_id();\n+  object_ids[1] = random_object_id();\n   ARROW_CHECK_OK(SendFetchRequest(fd, object_ids, 2));\n   std::vector<uint8_t> data = read_message_from_file(fd, MessageType::PlasmaFetchRequest);\n   std::vector<ObjectID> object_ids_read;\n@@ -331,9 +331,9 @@ TEST(PlasmaSerialization, WaitRequest) {\n   int fd = create_temp_file();\n   const int num_objects_in = 2;\n   ObjectRequest object_requests_in[num_objects_in] = {\n-      ObjectRequest({ObjectID::from_random(), ObjectRequestType::PLASMA_QUERY_ANYWHERE,\n+      ObjectRequest({random_object_id(), ObjectRequestType::PLASMA_QUERY_ANYWHERE,\n                      ObjectLocation::Local}),\n-      ObjectRequest({ObjectID::from_random(), ObjectRequestType::PLASMA_QUERY_LOCAL,\n+      ObjectRequest({random_object_id(), ObjectRequestType::PLASMA_QUERY_LOCAL,\n                      ObjectLocation::Local})};\n   const int num_ready_objects_in = 1;\n   int64_t timeout_ms = 1000;\n@@ -365,10 +365,10 @@ TEST(PlasmaSerialization, WaitReply) {\n   const int num_objects_in = 2;\n   /* Create a map with two ObjectRequests in it. */\n   ObjectRequestMap objects_in(num_objects_in);\n-  ObjectID id1 = ObjectID::from_random();\n+  ObjectID id1 = random_object_id();\n   objects_in[id1] =\n       ObjectRequest({id1, ObjectRequestType::PLASMA_QUERY_LOCAL, ObjectLocation::Local});\n-  ObjectID id2 = ObjectID::from_random();\n+  ObjectID id2 = random_object_id();\n   objects_in[id2] = ObjectRequest(\n       {id2, ObjectRequestType::PLASMA_QUERY_LOCAL, ObjectLocation::Nonexistent});\n \n@@ -393,7 +393,7 @@ TEST(PlasmaSerialization, WaitReply) {\n \n TEST(PlasmaSerialization, DataRequest) {\n   int fd = create_temp_file();\n-  ObjectID object_id1 = ObjectID::from_random();\n+  ObjectID object_id1 = random_object_id();\n   const char* address1 = \"address1\";\n   int port1 = 12345;\n   ARROW_CHECK_OK(SendDataRequest(fd, object_id1, address1, port1));\n@@ -413,7 +413,7 @@ TEST(PlasmaSerialization, DataRequest) {\n \n TEST(PlasmaSerialization, DataReply) {\n   int fd = create_temp_file();\n-  ObjectID object_id1 = ObjectID::from_random();\n+  ObjectID object_id1 = random_object_id();\n   int64_t object_size1 = 146;\n   int64_t metadata_size1 = 198;\n   ARROW_CHECK_OK(SendDataReply(fd, object_id1, object_size1, metadata_size1));\ndiff --git a/python/pyarrow/_plasma.pyx b/python/pyarrow/_plasma.pyx\nindex b638c3885a..86a6232d3e 100644\n--- a/python/pyarrow/_plasma.pyx\n+++ b/python/pyarrow/_plasma.pyx\n@@ -28,6 +28,7 @@ from cpython.pycapsule cimport *\n \n import collections\n import pyarrow\n+import random\n \n from pyarrow.lib cimport Buffer, NativeFile, check_status, pyarrow_wrap_buffer\n from pyarrow.includes.libarrow cimport (CBuffer, CMutableBuffer,\n@@ -53,6 +54,9 @@ cdef extern from \"plasma/common.h\" nogil:\n \n         c_string binary() const\n \n+        @staticmethod\n+        int64_t size()\n+\n     cdef struct CObjectRequest\" plasma::ObjectRequest\":\n         CUniqueID object_id\n         int type\n@@ -136,7 +140,8 @@ cdef class ObjectID:\n         CUniqueID data\n \n     def __cinit__(self, object_id):\n-        if not isinstance(object_id, bytes) or len(object_id) != 20:\n+        if (not isinstance(object_id, bytes) or\n+                len(object_id) != CUniqueID.size()):\n             raise ValueError(\"Object ID must by 20 bytes,\"\n                              \" is \" + str(object_id))\n         self.data = CUniqueID.from_binary(object_id)\n@@ -169,8 +174,17 @@ cdef class ObjectID:\n \n     @staticmethod\n     def from_random():\n-        cdef CUniqueID data = CUniqueID.from_random()\n-        return ObjectID(data.binary())\n+        \"\"\"\n+        Returns a randomly generated ObjectID.\n+\n+        Returns\n+        -------\n+        ObjectID\n+            A randomly generated ObjectID.\n+        \"\"\"\n+        random_id = bytes(bytearray(\n+            random.getrandbits(8) for _ in range(CUniqueID.size())))\n+        return ObjectID(random_id)\n \n \n cdef class ObjectNotAvailable:\n@@ -627,7 +641,7 @@ cdef class PlasmaClient:\n         int\n             The metadata size of the object that was stored.\n         \"\"\"\n-        cdef ObjectID object_id = ObjectID(20 * b\"\\0\")\n+        cdef ObjectID object_id = ObjectID(CUniqueID.size() * b\"\\0\")\n         cdef int64_t data_size\n         cdef int64_t metadata_size\n         with nogil:\ndiff --git a/python/pyarrow/tests/test_plasma.py b/python/pyarrow/tests/test_plasma.py\nindex 99a5d5bd3c..62a8f1f380 100644\n--- a/python/pyarrow/tests/test_plasma.py\n+++ b/python/pyarrow/tests/test_plasma.py\n@@ -278,7 +278,7 @@ def test_put_and_get(self):\n             result = self.plasma_client.get(object_id)\n             assert result == value\n \n-            object_id = pa.plasma.ObjectID.from_random()\n+            object_id = random_object_id()\n             [result] = self.plasma_client.get([object_id], timeout_ms=0)\n             assert result == pa.plasma.ObjectNotAvailable\n \n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-23T05:33:33.532+0000",
                    "updated": "2018-08-23T05:33:33.532+0000",
                    "started": "2018-08-23T05:33:33.531+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "137253",
                    "issueId": "13177541"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13177541/worklog/137254",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz opened a new pull request #2400: ARROW-3018: [Plasma] Remove Mersenne twister\nURL: https://github.com/apache/arrow/pull/2400\n \n \n   This removes the C++ random ObjectID generator. Having a global random number generator is not a good idea and with an existing random number generator, it is very easy to write code like:\r\n   \r\n   ```\r\n   std::string random_string = // Create random string of length ObjectID::size()\r\n   auto object_id = ObjectID::from_binary(random_string);\r\n   ```\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-23T05:33:40.597+0000",
                    "updated": "2018-08-23T05:33:40.597+0000",
                    "started": "2018-08-23T05:33:40.597+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "137254",
                    "issueId": "13177541"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13177541/worklog/137255",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz edited a comment on issue #2400: ARROW-3018: [Plasma] Remove Mersenne twister\nURL: https://github.com/apache/arrow/pull/2400#issuecomment-415296683\n \n \n   This is ready to merge now. After some deliberation I decided it was better to get rid of the C++ random number generator altogether.\r\n   \r\n   I don't think deprecation is necessary here since it is very easy to make a random object id but let me know if you think otherwise!\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-23T05:33:51.283+0000",
                    "updated": "2018-08-23T05:33:51.283+0000",
                    "started": "2018-08-23T05:33:51.281+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "137255",
                    "issueId": "13177541"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13177541/worklog/137262",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on issue #2400: ARROW-3018: [Plasma] Remove Mersenne twister\nURL: https://github.com/apache/arrow/pull/2400#issuecomment-411253038\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2400?src=pr&el=h1) Report\n   > Merging [#2400](https://codecov.io/gh/apache/arrow/pull/2400?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/23045d2b5be37df5cd990f5932576eb701e14b18?src=pr&el=desc) will **increase** coverage by `0.11%`.\n   > The diff coverage is `100%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2400/graphs/tree.svg?token=LpTCFbqVT1&src=pr&width=650&height=150)](https://codecov.io/gh/apache/arrow/pull/2400?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2400      +/-   ##\n   ==========================================\n   + Coverage   86.14%   86.26%   +0.11%     \n   ==========================================\n     Files         306      307       +1     \n     Lines       46691    46689       -2     \n   ==========================================\n   + Hits        40224    40274      +50     \n   + Misses       6393     6343      -50     \n   + Partials       74       72       -2\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2400?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/plasma/common.cc](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvY29tbW9uLmNj) | `93.47% <\u00f8> (-0.97%)` | :arrow_down: |\n   | [cpp/src/plasma/common.h](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvY29tbW9uLmg=) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/test/client\\_tests.cc](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGVzdC9jbGllbnRfdGVzdHMuY2M=) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/test-common.h](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGVzdC1jb21tb24uaA==) | `100% <100%> (\u00f8)` | |\n   | [cpp/src/plasma/test/serialization\\_tests.cc](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGVzdC9zZXJpYWxpemF0aW9uX3Rlc3RzLmNj) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/tests/test\\_plasma.py](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9wbGFzbWEucHk=) | `96.29% <100%> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/\\_plasma.pyx](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvX3BsYXNtYS5weXg=) | `57.37% <100%> (+0.71%)` | :arrow_up: |\n   | [cpp/src/plasma/thirdparty/dlmalloc.c](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGhpcmRwYXJ0eS9kbG1hbGxvYy5j) | `47.4% <0%> (-0.13%)` | :arrow_down: |\n   | [go/arrow/memory/memory\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L21lbW9yeV9hbWQ2NC5nbw==) | `57.14% <0%> (+28.57%)` | :arrow_up: |\n   | ... and [8 more](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2400?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2400?src=pr&el=footer). Last update [23045d2...2d5a820](https://codecov.io/gh/apache/arrow/pull/2400?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-23T06:03:51.416+0000",
                    "updated": "2018-08-23T06:03:51.416+0000",
                    "started": "2018-08-23T06:03:51.415+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "137262",
                    "issueId": "13177541"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13177541/worklog/138032",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on issue #2400: ARROW-3018: [Plasma] Remove Mersenne twister\nURL: https://github.com/apache/arrow/pull/2400#issuecomment-411253038\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2400?src=pr&el=h1) Report\n   > Merging [#2400](https://codecov.io/gh/apache/arrow/pull/2400?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/23045d2b5be37df5cd990f5932576eb701e14b18?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n   > The diff coverage is `100%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2400/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/2400?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2400      +/-   ##\n   ==========================================\n   - Coverage   86.14%   86.14%   -0.01%     \n   ==========================================\n     Files         306      307       +1     \n     Lines       46691    46696       +5     \n   ==========================================\n   + Hits        40224    40228       +4     \n   - Misses       6393     6394       +1     \n     Partials       74       74\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2400?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/plasma/common.h](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvY29tbW9uLmg=) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/common.cc](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvY29tbW9uLmNj) | `93.47% <\u00f8> (-0.97%)` | :arrow_down: |\n   | [python/pyarrow/\\_plasma.pyx](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvX3BsYXNtYS5weXg=) | `57.37% <100%> (+0.71%)` | :arrow_up: |\n   | [cpp/src/plasma/test/serialization\\_tests.cc](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGVzdC9zZXJpYWxpemF0aW9uX3Rlc3RzLmNj) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/test-common.h](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGVzdC1jb21tb24uaA==) | `100% <100%> (\u00f8)` | |\n   | [python/pyarrow/tests/test\\_plasma.py](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9wbGFzbWEucHk=) | `96.34% <100%> (+0.04%)` | :arrow_up: |\n   | [cpp/src/plasma/test/client\\_tests.cc](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGVzdC9jbGllbnRfdGVzdHMuY2M=) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/thirdparty/dlmalloc.c](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGhpcmRwYXJ0eS9kbG1hbGxvYy5j) | `47.4% <0%> (-0.13%)` | :arrow_down: |\n   | [cpp/src/plasma/eviction\\_policy.cc](https://codecov.io/gh/apache/arrow/pull/2400/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvZXZpY3Rpb25fcG9saWN5LmNj) | `100% <0%> (\u00f8)` | :arrow_up: |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2400?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2400?src=pr&el=footer). Last update [23045d2...b859abe](https://codecov.io/gh/apache/arrow/pull/2400?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-25T00:03:52.263+0000",
                    "updated": "2018-08-25T00:03:52.263+0000",
                    "started": "2018-08-25T00:03:52.262+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "138032",
                    "issueId": "13177541"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 13800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@44623dad[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@490badc0[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@37e97b3f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@2398b5af[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@697b0b07[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@165b7c8c[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6a17ddfb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@cc438db[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3dd62977[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@70248d5d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@24887ea7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@9a7980d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 13800,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Aug 25 01:48:42 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-08-25T01:48:42.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3018/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-08-07T22:25:57.000+0000",
        "updated": "2018-10-02T14:40:50.000+0000",
        "timeoriginalestimate": null,
        "description": "As pointed out by [~pitrou], the mersenne twister in Plasma is currently not seeded appropriately (I just saw\u00a0the comment recently):\u00a0https://github.com/apache/arrow/pull/2039\r\n\r\nI can submit a patch for Plasma but I'm also wondering if we should have a properly seeded random number in Arrow.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 13800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Plasma] Improve random ObjectID generation",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13177541/comment/16592378",
                    "id": "16592378",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=robertnishihara",
                        "name": "robertnishihara",
                        "key": "robertnishihara",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Robert Nishihara",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 2400\n[https://github.com/apache/arrow/pull/2400]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=robertnishihara",
                        "name": "robertnishihara",
                        "key": "robertnishihara",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Robert Nishihara",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-08-25T01:48:42.150+0000",
                    "updated": "2018-08-25T01:48:42.150+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|i3wt0v:",
        "customfield_12314139": null
    }
}