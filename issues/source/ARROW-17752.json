{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13481815",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13481815",
    "key": "ARROW-17752",
    "fields": {
        "fixVersions": [],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/3",
            "id": "3",
            "description": "The problem is a duplicate of an existing issue.",
            "name": "Duplicate"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12647723",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12647723",
                "type": {
                    "id": "12310000",
                    "name": "Duplicate",
                    "inward": "is duplicated by",
                    "outward": "duplicates",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310000"
                },
                "outwardIssue": {
                    "id": "13360856",
                    "key": "ARROW-11776",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13360856",
                    "fields": {
                        "summary": "[Java][Dataset] Support writing to files within dataset scanner via JNI",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=Jk_Self",
            "name": "Jk_Self",
            "key": "jk_self",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Ke Jia",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
            "name": "Closed",
            "id": "6",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=Jk_Self",
            "name": "Jk_Self",
            "key": "jk_self",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Ke Jia",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=Jk_Self",
            "name": "Jk_Self",
            "key": "jk_self",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Ke Jia",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 4200,
            "total": 4200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 4200,
            "total": 4200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-17752/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 7,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13481815/worklog/809432",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zhztheplayer commented on PR #14151:\nURL: https://github.com/apache/arrow/pull/14151#issuecomment-1249038022\n\n   @JkSelf Can we just use the existing ticket ARROW-11776?\n\n\n",
                    "created": "2022-09-16T07:51:38.183+0000",
                    "updated": "2022-09-16T07:51:38.183+0000",
                    "started": "2022-09-16T07:51:38.183+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "809432",
                    "issueId": "13481815"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13481815/worklog/809434",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zhztheplayer commented on code in PR #14151:\nURL: https://github.com/apache/arrow/pull/14151#discussion_r972724760\n\n\n##########\njava/dataset/src/main/java/org/apache/arrow/dataset/file/NativeScannerAdaptorImpl.java:\n##########\n@@ -0,0 +1,146 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.dataset.file;\n+\n+import java.io.IOException;\n+import java.util.Iterator;\n+\n+import org.apache.arrow.c.ArrowArray;\n+import org.apache.arrow.c.Data;\n+import org.apache.arrow.dataset.jni.NativeRecordBatchIterator;\n+import org.apache.arrow.dataset.scanner.ScanTask;\n+import org.apache.arrow.dataset.scanner.Scanner;\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.memory.RootAllocator;\n+import org.apache.arrow.vector.ipc.ArrowReader;\n+\n+/**\n+ * Default implementation of {@link NativeScannerAdaptor}.\n+ */\n+public class NativeScannerAdaptorImpl implements NativeScannerAdaptor, AutoCloseable {\n+\n+  private final Scanner scanner;\n+  private final BufferAllocator allocator;\n+\n+  /**\n+   * Constructor.\n+   *\n+   * @param scanner the delegated scanner.\n+   */\n+  public NativeScannerAdaptorImpl(Scanner scanner, BufferAllocator allocator) {\n+    this.scanner = scanner;\n+    this.allocator = allocator;\n+  }\n+\n+  @Override\n+  public NativeRecordBatchIterator scan() {\n+    final Iterable<? extends ScanTask> tasks = scanner.scan();\n+    return new IteratorImpl(tasks, allocator);\n+  }\n+\n+  @Override\n+  public void close() throws Exception {\n+    scanner.close();\n+  }\n+\n+  private static class IteratorImpl implements NativeRecordBatchIterator {\n+\n+    private final Iterator<? extends ScanTask> taskIterator;\n+\n+    private ScanTask currentTask = null;\n+    private ArrowReader reader = null;\n+\n+    private BufferAllocator allocator = null;\n+\n+    public IteratorImpl(Iterable<? extends ScanTask> tasks,\n+                        BufferAllocator allocator) {\n+      this.taskIterator = tasks.iterator();\n+      this.allocator = allocator;\n+    }\n+\n+    @Override\n+    public void close() throws Exception {\n+      closeCurrent();\n+    }\n+\n+    private void closeCurrent() throws Exception {\n+      if (currentTask == null) {\n+        return;\n+      }\n+      currentTask.close();\n+      reader.close();\n+    }\n+\n+    private boolean advance() {\n+      if (!taskIterator.hasNext()) {\n+        return false;\n+      }\n+      try {\n+        closeCurrent();\n+      } catch (Exception e) {\n+        throw new RuntimeException(e);\n+      }\n+      currentTask = taskIterator.next();\n+      reader = currentTask.execute();\n+      return true;\n+    }\n+    @Override\n+    public boolean hasNext() {\n+\n+      if (currentTask == null) {\n+        if (!advance()) {\n+          return false;\n+        }\n+      }\n+      try {\n+        if (!reader.loadNextBatch()) {\n+          if (!advance()) {\n+            return false;\n+          }\n+        }\n+        return true;\n+      } catch (IOException e) {\n+        throw new RuntimeException(e);\n+      }\n+    }\n+\n+   byte[] longtoBytes(long data) {\n+     return new byte[]{\n+         (byte) ((data >> 0) & 0xff),\n+         (byte) ((data >> 8) & 0xff),\n+         (byte) ((data >> 16) & 0xff),\n+         (byte) ((data >> 24) & 0xff),\n+         (byte) ((data >> 32) & 0xff),\n+         (byte) ((data >> 40) & 0xff),\n+         (byte) ((data >> 48) & 0xff),\n+         (byte) ((data >> 56) & 0xff),\n+     };\n+    }\n\nReview Comment:\n   Is it necessary to conduct this kind of encoding?\n\n\n\n",
                    "created": "2022-09-16T07:58:15.679+0000",
                    "updated": "2022-09-16T07:58:15.679+0000",
                    "started": "2022-09-16T07:58:15.679+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "809434",
                    "issueId": "13481815"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13481815/worklog/809435",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zhztheplayer commented on code in PR #14151:\nURL: https://github.com/apache/arrow/pull/14151#discussion_r972726029\n\n\n##########\njava/dataset/src/main/java/org/apache/arrow/dataset/file/DatasetFileWriter.java:\n##########\n@@ -0,0 +1,75 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.dataset.file;\n+\n+import org.apache.arrow.dataset.jni.NativeRecordBatchIterator;\n+import org.apache.arrow.dataset.scanner.Scanner;\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.util.AutoCloseables;\n+import org.apache.arrow.vector.util.SchemaUtility;\n+\n+/**\n+ * JNI-based utility to write datasets into files. It internally depends on C++ static method\n+ * FileSystemDataset::Write.\n+ */\n+public class DatasetFileWriter {\n\nReview Comment:\n   Let's add some unit tests.\r\n   \r\n   You can refer to the previous PR https://github.com/apache/arrow/pull/10201/files\n\n\n\n",
                    "created": "2022-09-16T07:59:40.781+0000",
                    "updated": "2022-09-16T07:59:40.781+0000",
                    "started": "2022-09-16T07:59:40.780+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "809435",
                    "issueId": "13481815"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13481815/worklog/809443",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zhztheplayer commented on code in PR #14151:\nURL: https://github.com/apache/arrow/pull/14151#discussion_r972739331\n\n\n##########\njava/dataset/src/main/java/org/apache/arrow/dataset/file/NativeScannerAdaptorImpl.java:\n##########\n@@ -0,0 +1,146 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.dataset.file;\n+\n+import java.io.IOException;\n+import java.util.Iterator;\n+\n+import org.apache.arrow.c.ArrowArray;\n+import org.apache.arrow.c.Data;\n+import org.apache.arrow.dataset.jni.NativeRecordBatchIterator;\n+import org.apache.arrow.dataset.scanner.ScanTask;\n+import org.apache.arrow.dataset.scanner.Scanner;\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.memory.RootAllocator;\n+import org.apache.arrow.vector.ipc.ArrowReader;\n+\n+/**\n+ * Default implementation of {@link NativeScannerAdaptor}.\n+ */\n+public class NativeScannerAdaptorImpl implements NativeScannerAdaptor, AutoCloseable {\n\nReview Comment:\n   Is it needed to create this class?\r\n   \r\n   `IteratorImpl` seems to already handle everything.\n\n\n\n",
                    "created": "2022-09-16T08:13:27.205+0000",
                    "updated": "2022-09-16T08:13:27.205+0000",
                    "started": "2022-09-16T08:13:27.205+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "809443",
                    "issueId": "13481815"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13481815/worklog/809448",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zhztheplayer commented on code in PR #14151:\nURL: https://github.com/apache/arrow/pull/14151#discussion_r972752900\n\n\n##########\njava/dataset/src/main/java/org/apache/arrow/dataset/jni/NativeRecordBatchIterator.java:\n##########\n@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.dataset.jni;\n+\n+import java.util.Iterator;\n+/**\n+ * Iterate on the memory address of ArrowArray\n+ * next() should be called from C++ scanner to read the memory address of ArrowArray.\n+ */\n+public interface NativeRecordBatchIterator extends Iterator<byte[]>, AutoCloseable {\n\nReview Comment:\n   May be we can rename this as `CRecordBatchIterator` or something to make things more clearer.\n\n\n\n",
                    "created": "2022-09-16T08:23:33.172+0000",
                    "updated": "2022-09-16T08:23:33.172+0000",
                    "started": "2022-09-16T08:23:33.172+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "809448",
                    "issueId": "13481815"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13481815/worklog/809450",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zhztheplayer commented on code in PR #14151:\nURL: https://github.com/apache/arrow/pull/14151#discussion_r972755514\n\n\n##########\njava/dataset/src/main/cpp/jni_wrapper.cc:\n##########\n@@ -170,6 +177,116 @@ class DisposableScannerAdaptor {\n   }\n };\n \n+/// \\brief Simple fragment implementation that is constructed directly\n+/// from a record batch iterator.\n+class SimpleIteratorFragment : public arrow::dataset::Fragment {\n+ public:\n+  explicit SimpleIteratorFragment(arrow::RecordBatchIterator itr)\n+      : arrow::dataset::Fragment() {\n+    itr_ = std::move(itr);\n+  }\n+\n+  static arrow::Result<std::shared_ptr<SimpleIteratorFragment>> Make(\n+      arrow::RecordBatchIterator itr) {\n+    return std::make_shared<SimpleIteratorFragment>(std::move(itr));\n+  }\n+\n+  arrow::Result<arrow::RecordBatchGenerator> ScanBatchesAsync(\n+      const std::shared_ptr<arrow::dataset::ScanOptions>& options) override {\n+    struct State {\n+      State(std::shared_ptr<SimpleIteratorFragment> fragment)\n+          : fragment(std::move(fragment)) {}\n+\n+      std::shared_ptr<arrow::RecordBatch> Next() { return cur_rb; }\n+\n+      bool Finished() {\n+        arrow::Result<std::shared_ptr<arrow::RecordBatch>> next = fragment->itr_.Next();\n+        if (IsIterationEnd(next)) {\n+          cur_rb = nullptr;\n+\n+          return true;\n+        } else {\n+          cur_rb = next.ValueOrDie();\n+          return false;\n+        }\n+      }\n+\n+      std::shared_ptr<SimpleIteratorFragment> fragment;\n+      std::shared_ptr<arrow::RecordBatch> cur_rb = nullptr;\n+    };\n+\n+    struct Generator {\n+      Generator(std::shared_ptr<SimpleIteratorFragment> fragment)\n+          : state(std::make_shared<State>(std::move(fragment))) {}\n+\n+      arrow::Future<std::shared_ptr<arrow::RecordBatch>> operator()() {\n+        while (!state->Finished()) {\n+          auto next = state->Next();\n+          if (next) {\n+            return arrow::Future<std::shared_ptr<arrow::RecordBatch>>::MakeFinished(\n+                std::move(next));\n+          }\n+        }\n+        return arrow::AsyncGeneratorEnd<std::shared_ptr<arrow::RecordBatch>>();\n+      }\n+\n+      std::shared_ptr<State> state;\n+    };\n+    return Generator(arrow::internal::checked_pointer_cast<SimpleIteratorFragment>(\n+        shared_from_this()));\n+  }\n+\n+  std::string type_name() const override { return \"simple_iterator\"; }\n+\n+  arrow::Result<std::shared_ptr<arrow::Schema>> ReadPhysicalSchemaImpl() override {\n+    return arrow::Status::NotImplemented(\"No physical schema is readable\");\n+  }\n+\n+ private:\n+  arrow::RecordBatchIterator itr_;\n+  bool used_ = false;\n+};\n+\n+/// \\brief Create scanner that scans over Java dataset API's components.\n+///\n+/// Currently, we use a NativeRecordBatchIterator as the underlying\n+/// Java object to do scanning. Which means, only one single task will\n+/// be produced from C++ code.\n+arrow::Result<std::shared_ptr<arrow::dataset::Scanner>> MakeJavaDatasetScanner(\n+    JavaVM* vm, jobject iter, std::shared_ptr<arrow::Schema> schema) {\n+  arrow::RecordBatchIterator itr = arrow::MakeFunctionIterator(\n\nReview Comment:\n   There might be some better solution to distinguish on the 2 variables than just using `iter` and `itr`?\n\n\n\n",
                    "created": "2022-09-16T08:26:18.424+0000",
                    "updated": "2022-09-16T08:26:18.424+0000",
                    "started": "2022-09-16T08:26:18.423+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "809450",
                    "issueId": "13481815"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13481815/worklog/809451",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zhztheplayer commented on code in PR #14151:\nURL: https://github.com/apache/arrow/pull/14151#discussion_r972758678\n\n\n##########\njava/dataset/src/main/java/org/apache/arrow/dataset/file/NativeScannerAdaptorImpl.java:\n##########\n@@ -0,0 +1,146 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.dataset.file;\n+\n+import java.io.IOException;\n+import java.util.Iterator;\n+\n+import org.apache.arrow.c.ArrowArray;\n+import org.apache.arrow.c.Data;\n+import org.apache.arrow.dataset.jni.NativeRecordBatchIterator;\n+import org.apache.arrow.dataset.scanner.ScanTask;\n+import org.apache.arrow.dataset.scanner.Scanner;\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.memory.RootAllocator;\n+import org.apache.arrow.vector.ipc.ArrowReader;\n+\n+/**\n+ * Default implementation of {@link NativeScannerAdaptor}.\n+ */\n+public class NativeScannerAdaptorImpl implements NativeScannerAdaptor, AutoCloseable {\n+\n+  private final Scanner scanner;\n+  private final BufferAllocator allocator;\n+\n+  /**\n+   * Constructor.\n+   *\n+   * @param scanner the delegated scanner.\n+   */\n+  public NativeScannerAdaptorImpl(Scanner scanner, BufferAllocator allocator) {\n+    this.scanner = scanner;\n+    this.allocator = allocator;\n+  }\n+\n+  @Override\n+  public NativeRecordBatchIterator scan() {\n+    final Iterable<? extends ScanTask> tasks = scanner.scan();\n+    return new IteratorImpl(tasks, allocator);\n+  }\n+\n+  @Override\n+  public void close() throws Exception {\n+    scanner.close();\n+  }\n+\n+  private static class IteratorImpl implements NativeRecordBatchIterator {\n+\n+    private final Iterator<? extends ScanTask> taskIterator;\n+\n+    private ScanTask currentTask = null;\n+    private ArrowReader reader = null;\n+\n+    private BufferAllocator allocator = null;\n+\n+    public IteratorImpl(Iterable<? extends ScanTask> tasks,\n+                        BufferAllocator allocator) {\n+      this.taskIterator = tasks.iterator();\n+      this.allocator = allocator;\n+    }\n+\n+    @Override\n+    public void close() throws Exception {\n+      closeCurrent();\n+    }\n+\n+    private void closeCurrent() throws Exception {\n+      if (currentTask == null) {\n+        return;\n+      }\n+      currentTask.close();\n+      reader.close();\n+    }\n+\n+    private boolean advance() {\n+      if (!taskIterator.hasNext()) {\n+        return false;\n+      }\n+      try {\n+        closeCurrent();\n+      } catch (Exception e) {\n+        throw new RuntimeException(e);\n+      }\n+      currentTask = taskIterator.next();\n+      reader = currentTask.execute();\n+      return true;\n+    }\n+    @Override\n+    public boolean hasNext() {\n+\n+      if (currentTask == null) {\n+        if (!advance()) {\n+          return false;\n+        }\n+      }\n+      try {\n+        if (!reader.loadNextBatch()) {\n+          if (!advance()) {\n+            return false;\n+          }\n+        }\n+        return true;\n+      } catch (IOException e) {\n+        throw new RuntimeException(e);\n+      }\n+    }\n+\n+   byte[] longtoBytes(long data) {\n+     return new byte[]{\n+         (byte) ((data >> 0) & 0xff),\n+         (byte) ((data >> 8) & 0xff),\n+         (byte) ((data >> 16) & 0xff),\n+         (byte) ((data >> 24) & 0xff),\n+         (byte) ((data >> 32) & 0xff),\n+         (byte) ((data >> 40) & 0xff),\n+         (byte) ((data >> 48) & 0xff),\n+         (byte) ((data >> 56) & 0xff),\n+     };\n+    }\n+\n+    @Override\n+    public byte[] next() {\n+      ArrowArray arrowArray = ArrowArray.allocateNew(allocator);\n\nReview Comment:\n   `arrowArray` may need to be eventually closed or memory may leak\n\n\n\n",
                    "created": "2022-09-16T08:29:38.722+0000",
                    "updated": "2022-09-16T08:29:38.722+0000",
                    "started": "2022-09-16T08:29:38.722+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "809451",
                    "issueId": "13481815"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 4200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@28d53158[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5831ed98[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7fd18d07[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@285be248[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@463043f4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@41dbe389[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3211f700[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@45af0aa8[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@144ce0a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1f9db200[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2209ff04[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@1fce5ba7[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 4200,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Sep 16 08:53:12 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-09-16T08:53:12.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-17752/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2022-09-16T05:15:01.000+0000",
        "updated": "2022-09-16T08:53:12.000+0000",
        "timeoriginalestimate": null,
        "description": "Support JNI-based parquet write to write datasets into files.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 4200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "Support JNI-based parquet write to write datasets into files",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13481815/comment/17605721",
                    "id": "17605721",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=zhztheplayer",
                        "name": "zhztheplayer",
                        "key": "zhztheplayer",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Hongze Zhang",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Duplicates ARROW-11776. I am assigning that issue to you.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=zhztheplayer",
                        "name": "zhztheplayer",
                        "key": "zhztheplayer",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Hongze Zhang",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-09-16T08:53:12.877+0000",
                    "updated": "2022-09-16T08:53:12.877+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z18luo:",
        "customfield_12314139": null
    }
}