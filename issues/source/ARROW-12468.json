{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13373685",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373685",
    "key": "ARROW-12468",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349983",
                "id": "12349983",
                "description": "",
                "name": "5.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-07-28"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
            "name": "westonpace",
            "key": "westonpace",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Weston Pace",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333008",
                "id": "12333008",
                "name": "R"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
            "name": "westonpace",
            "key": "westonpace",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Weston Pace",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
            "name": "westonpace",
            "key": "westonpace",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Weston Pace",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 33600,
            "total": 33600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 33600,
            "total": 33600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12468/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 56,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373685/worklog/586246",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace opened a new pull request #10118:\nURL: https://github.com/apache/arrow/pull/10118\n\n\n   This exposes (in python & R) the `UseAsync` method added to `ScannerBuilder` in ARROW-12289.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-21T00:15:55.344+0000",
                    "updated": "2021-04-21T00:15:55.344+0000",
                    "started": "2021-04-21T00:15:55.344+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "586246",
                    "issueId": "13373685"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373685/worklog/586247",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10118:\nURL: https://github.com/apache/arrow/pull/10118#issuecomment-823683285\n\n\n   https://issues.apache.org/jira/browse/ARROW-12468\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-21T00:16:19.072+0000",
                    "updated": "2021-04-21T00:16:19.072+0000",
                    "started": "2021-04-21T00:16:19.072+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "586247",
                    "issueId": "13373685"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373685/worklog/586513",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #10118:\nURL: https://github.com/apache/arrow/pull/10118#discussion_r617470663\n\n\n\n##########\nFile path: r/R/dataset-scan.R\n##########\n@@ -183,6 +191,10 @@ ScannerBuilder <- R6Class(\"ScannerBuilder\", inherit = ArrowObject,\n       dataset___ScannerBuilder__UseThreads(self, threads)\n       self\n     },\n+    UseAsync = function(use_async = FALSE) {\n\nReview comment:\n       Did you mean to default to TRUE?\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -2746,6 +2746,10 @@ cdef class Scanner(_Weakrefable):\n     use_threads : bool, default True\n         If enabled, then maximum parallelism will be used determined by\n         the number of available CPU cores.\n+    use_async : bool, default False\n+        If enabled, the an async scanner will be used that should offer\n+        better performance with high-latency/highly-parallel filesystems\n+        (e.g. S3)\n\nReview comment:\n       The option needs to be added to _populate_builder and Scanner.from_fragment/Scanner.from_dataset or else it won't actually take effect.\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -2746,6 +2746,10 @@ cdef class Scanner(_Weakrefable):\n     use_threads : bool, default True\n         If enabled, then maximum parallelism will be used determined by\n         the number of available CPU cores.\n+    use_async : bool, default False\n+        If enabled, the an async scanner will be used that should offer\n+        better performance with high-latency/highly-parallel filesystems\n+        (e.g. S3)\n\nReview comment:\n       Should we also add the parameter to the tests? Maybe some refactoring is needed though to make it easier to share parameters like this.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-21T12:03:55.922+0000",
                    "updated": "2021-04-21T12:03:55.922+0000",
                    "started": "2021-04-21T12:03:55.921+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "586513",
                    "issueId": "13373685"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373685/worklog/597413",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #10118:\nURL: https://github.com/apache/arrow/pull/10118#discussion_r633123955\n\n\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -2746,6 +2746,10 @@ cdef class Scanner(_Weakrefable):\n     use_threads : bool, default True\n         If enabled, then maximum parallelism will be used determined by\n         the number of available CPU cores.\n+    use_async : bool, default False\n+        If enabled, the an async scanner will be used that should offer\n+        better performance with high-latency/highly-parallel filesystems\n+        (e.g. S3)\n\nReview comment:\n       I updated all the tests so that they are parameterized on use_threads/use_async.  This helped identify the spots in _populate_builder, etc. where I had missed passing the flag through.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-16T18:38:49.378+0000",
                    "updated": "2021-05-16T18:38:49.378+0000",
                    "started": "2021-05-16T18:38:49.378+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "597413",
                    "issueId": "13373685"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373685/worklog/597416",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #10118:\nURL: https://github.com/apache/arrow/pull/10118#discussion_r633124566\n\n\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -2746,6 +2746,10 @@ cdef class Scanner(_Weakrefable):\n     use_threads : bool, default True\n         If enabled, then maximum parallelism will be used determined by\n         the number of available CPU cores.\n+    use_async : bool, default False\n+        If enabled, the an async scanner will be used that should offer\n+        better performance with high-latency/highly-parallel filesystems\n+        (e.g. S3)\n\nReview comment:\n       I do think we might want to reduce the number of places we pass parameters around but this was a problem before use_async (e.g. there are a lot of places in the docs where we say \"See scan method parameters documentation.\").  That's not for this PR though and style-wise it might not be so bad so python can just forward kwargs but when it dips into cython it seems we need to materialized all the kwargs.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-16T18:44:25.604+0000",
                    "updated": "2021-05-16T18:44:25.604+0000",
                    "started": "2021-05-16T18:44:25.604+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "597416",
                    "issueId": "13373685"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373685/worklog/597420",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on pull request #10118:\nURL: https://github.com/apache/arrow/pull/10118#issuecomment-841861097\n\n\n   This PR could use some advice from the R community.  I'm adding the ability to request async (at the moment async is a performance degredation in some cases when I/O is really fast so until we've made more progress there it will need to be optional)  I've added `UseAsync` to the scanner in R which is used, for example, like this:\r\n   \r\n   ```\r\n   test_that(\"Scanner$ScanBatches\", {\r\n     ds <- open_dataset(ipc_dir, format = \"feather\")\r\n     batches <- ds$NewScan()$Finish()$ScanBatches()\r\n     table <- Table$create(!!!batches)\r\n     expect_equivalent(as.data.frame(table), rbind(df1, df2))\r\n   \r\n     batches <- ds$NewScan()$UseAsync(TRUE)$Finish()$ScanBatches()\r\n     table <- Table$create(!!!batches)\r\n     expect_equivalent(as.data.frame(table), rbind(df1, df2))\r\n   })\r\n   ```\r\n   However, most of the examples I see reading a dataset are doing something like...\r\n   \r\n   ```\r\n   ds %>%\r\n         select(string = chr, integer = int) %>%\r\n         filter(integer > 6 & integer < 11) %>%\r\n         collect() %>%\r\n         summarize(mean = mean(integer))\r\n   ```\r\n   \r\n   How should `UseAsync` be inserted into such a pattern (chain?) of calls.  Should it be it's own operator:\r\n   \r\n   ```\r\n   ds %>%\r\n         select(string = chr, integer = int) %>%\r\n         filter(integer > 6 & integer < 11) %>%\r\n         use_async() %>%\r\n         collect() %>%\r\n         summarize(mean = mean(integer))\r\n   ```\r\n   \r\n   ...or an argument to `collect`:\r\n   \r\n   ```\r\n   ds %>%\r\n         select(string = chr, integer = int) %>%\r\n         filter(integer > 6 & integer < 11) %>%\r\n         collect(use_async=TRUE) %>%\r\n         summarize(mean = mean(integer))\r\n   ```\r\n   ...or exposed some other different way?\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-16T18:57:30.917+0000",
                    "updated": "2021-05-16T18:57:30.917+0000",
                    "started": "2021-05-16T18:57:30.917+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "597420",
                    "issueId": "13373685"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373685/worklog/597429",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #10118:\nURL: https://github.com/apache/arrow/pull/10118#issuecomment-841882533\n\n\n   Elsewhere, we use a global `option` for governing e.g. whether to use multithreading, would that be appropriate here? \r\n   \r\n   Do you expect this to always be optional, or is it only optional for now while you sort out the performance optimization?\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-16T21:51:54.977+0000",
                    "updated": "2021-05-16T21:51:54.977+0000",
                    "started": "2021-05-16T21:51:54.976+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "597429",
                    "issueId": "13373685"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373685/worklog/597636",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #10118:\nURL: https://github.com/apache/arrow/pull/10118#discussion_r633533471\n\n\n\n##########\nFile path: python/pyarrow/tests/test_dataset.py\n##########\n@@ -206,6 +206,63 @@ def dataset(mockfs):\n     return factory.finish()\n \n \n+@pytest.fixture(params=[\n+    (True, True),\n+    (True, False),\n+    (False, True),\n+    (False, False)\n+], ids=['threaded-async', 'threaded-sync', 'serial-async', 'serial-sync'])\n+def dataset_reader(request):\n+    '''\n+    Fixture which allows dataset scanning operations to be\n+    run with/without threads and with/without async\n+    '''\n+    use_threads, use_async = request.param\n+\n+    class reader:\n+\n+        def __init__(self):\n+            self.use_threads = use_threads\n+            self.use_async = use_async\n+\n+        def _patch_kwargs(self, kwargs):\n+            if 'use_threads' in kwargs:\n+                raise Exception(\n+                    ('Invalid use of dataset_reader, do not specify'\n+                     ' use_threads'))\n+            if 'use_async' in kwargs:\n+                raise Exception(\n+                    'Invalid use of dataset_reader, do not specify use_async')\n+            kwargs['use_threads'] = use_threads\n+            kwargs['use_async'] = use_async\n+\n+        def to_table(self, dataset, **kwargs):\n+            self._patch_kwargs(kwargs)\n+            return dataset.to_table(**kwargs)\n+\n+        def to_batches(self, dataset, **kwargs):\n+            self._patch_kwargs(kwargs)\n+            return dataset.to_batches(**kwargs)\n+\n+        def scanner(self, dataset, **kwargs):\n+            self._patch_kwargs(kwargs)\n+            return dataset.scanner(**kwargs)\n+\n+        def head(self, dataset, num_rows, **kwargs):\n\nReview comment:\n       Note you could declare all these as `(self, dataset, *args, **kwargs)` and avoid having to replicate their individual signatures.\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -2969,6 +2982,8 @@ def _filesystemdataset_write(\n     FileSystem filesystem not None,\n     Partitioning partitioning not None,\n     FileWriteOptions file_options not None,\n+    bint use_threads,\n+    bint use_async,\n\nReview comment:\n       This doesn't seem used here? Though I guess even before use_threads was ignored. \n\n##########\nFile path: python/pyarrow/tests/test_dataset.py\n##########\n@@ -206,6 +206,63 @@ def dataset(mockfs):\n     return factory.finish()\n \n \n+@pytest.fixture(params=[\n+    (True, True),\n+    (True, False),\n+    (False, True),\n+    (False, False)\n+], ids=['threaded-async', 'threaded-sync', 'serial-async', 'serial-sync'])\n+def dataset_reader(request):\n+    '''\n+    Fixture which allows dataset scanning operations to be\n+    run with/without threads and with/without async\n+    '''\n+    use_threads, use_async = request.param\n+\n+    class reader:\n+\n+        def __init__(self):\n+            self.use_threads = use_threads\n+            self.use_async = use_async\n+\n+        def _patch_kwargs(self, kwargs):\n+            if 'use_threads' in kwargs:\n+                raise Exception(\n+                    ('Invalid use of dataset_reader, do not specify'\n+                     ' use_threads'))\n+            if 'use_async' in kwargs:\n+                raise Exception(\n+                    'Invalid use of dataset_reader, do not specify use_async')\n+            kwargs['use_threads'] = use_threads\n+            kwargs['use_async'] = use_async\n+\n+        def to_table(self, dataset, **kwargs):\n+            self._patch_kwargs(kwargs)\n+            return dataset.to_table(**kwargs)\n+\n+        def to_batches(self, dataset, **kwargs):\n+            self._patch_kwargs(kwargs)\n+            return dataset.to_batches(**kwargs)\n+\n+        def scanner(self, dataset, **kwargs):\n+            self._patch_kwargs(kwargs)\n+            return dataset.scanner(**kwargs)\n+\n+        def head(self, dataset, num_rows, **kwargs):\n\nReview comment:\n       Thanks for converting this file, by the way, this looks like it was rather tedious.\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -2746,6 +2746,10 @@ cdef class Scanner(_Weakrefable):\n     use_threads : bool, default True\n         If enabled, then maximum parallelism will be used determined by\n         the number of available CPU cores.\n+    use_async : bool, default False\n+        If enabled, the an async scanner will be used that should offer\n+        better performance with high-latency/highly-parallel filesystems\n+        (e.g. S3)\n\nReview comment:\n       It's because `_populate_builder` is cdef, i.e. gets compiled into an actual C function with a C parameter list, so it can't take `**kwargs` (but can directly take things like a shared_ptr). Though, we could pack all the non-C(++) arguments into a single `kwargs`.\n\n##########\nFile path: r/R/dataset-scan.R\n##########\n@@ -42,6 +44,7 @@\n #' - `$UseThreads(threads)`: logical: should the scan use multithreading?\n #' The method's default input is `TRUE`, but you must call the method to enable\n #' multithreading because the scanner default is `FALSE`.\n+#' - `$UseAsync(use_async)`: logical: should the async scanner be used?\n\nReview comment:\n       I think you have to roxygenize() to get these changes reflected in the actual docs? (and/or you can just `@github-actions autotune` to have CI do that for you)\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -2969,6 +2982,8 @@ def _filesystemdataset_write(\n     FileSystem filesystem not None,\n     Partitioning partitioning not None,\n     FileWriteOptions file_options not None,\n+    bint use_threads,\n+    bint use_async,\n\nReview comment:\n       I guess we'd have to do something like embed ScanOptions into FileSystemDatasetWriteOptions if we want to make these useful, and you already made a followup.\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -2986,6 +2992,8 @@ def _filesystemdataset_write(\n     c_options.max_partitions = max_partitions\n     c_options.basename_template = tobytes(basename_template)\n \n-    c_scanner = data.unwrap()\n+    scanner = data._scanner(use_threads=use_threads, use_async=use_async)\n\nReview comment:\n       Note that the method was renamed/made public recently (i.e. should be `data.scanner`)\n\n##########\nFile path: r/R/dataset-scan.R\n##########\n@@ -183,6 +191,10 @@ ScannerBuilder <- R6Class(\"ScannerBuilder\", inherit = ArrowObject,\n       dataset___ScannerBuilder__UseThreads(self, threads)\n       self\n     },\n+    UseAsync = function(use_async = FALSE) {\n\nReview comment:\n       (Otherwise the parameter above doesn't work.)\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -393,6 +393,11 @@ cdef class Dataset(_Weakrefable):\n         use_threads : bool, default True\n             If enabled, then maximum parallelism will be used determined by\n             the number of available CPU cores.\n+        use_async : bool, default False\n+            If enabled, the an async scanner will be used that should offer\n+            better performance with high-latency/highly-parallel filesystems\n+            (e.g. S3)\n+\n\nReview comment:\n       Do we want to call it out as still experimental? (Ditto for R below)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-17T13:37:47.590+0000",
                    "updated": "2021-05-17T13:37:47.590+0000",
                    "started": "2021-05-17T13:37:47.590+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "597636",
                    "issueId": "13373685"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373685/worklog/597738",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #10118:\nURL: https://github.com/apache/arrow/pull/10118#discussion_r633637602\n\n\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -393,6 +393,11 @@ cdef class Dataset(_Weakrefable):\n         use_threads : bool, default True\n             If enabled, then maximum parallelism will be used determined by\n             the number of available CPU cores.\n+        use_async : bool, default False\n+            If enabled, the an async scanner will be used that should offer\n\nReview comment:\n       ```suggestion\r\n               If enabled, an async scanner will be used that should offer\r\n   ```\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -2721,6 +2727,10 @@ cdef class Scanner(_Weakrefable):\n     use_threads : bool, default True\n         If enabled, then maximum parallelism will be used determined by\n         the number of available CPU cores.\n+    use_async : bool, default False\n+        If enabled, the an async scanner will be used that should offer\n\nReview comment:\n       ```suggestion\r\n           If enabled, an async scanner will be used that should offer\r\n   ```\n\n##########\nFile path: python/pyarrow/dataset.py\n##########\n@@ -725,6 +725,10 @@ def write_dataset(data, base_dir, basename_template=None, format=None,\n     use_threads : bool, default True\n         Write files in parallel. If enabled, then maximum parallelism will be\n         used determined by the number of available CPU cores.\n+    use_async : bool, default False\n+        If enabled, the an async scanner will be used that should offer\n\nReview comment:\n       ```suggestion\r\n           If enabled, an async scanner will be used that should offer\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-17T15:39:22.220+0000",
                    "updated": "2021-05-17T15:39:22.220+0000",
                    "started": "2021-05-17T15:39:22.220+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "597738",
                    "issueId": "13373685"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373685/worklog/597760",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #10118:\nURL: https://github.com/apache/arrow/pull/10118#issuecomment-842458877\n\n\n   One concern I had when seeing the heavy parameterization (basically a lot of tests x4) is about the run test time, but checking the most expensive tests, it's basically all related to the S3 related tests:\r\n   \r\n   ```\r\n   $ pytest python/pyarrow/tests/test_dataset.py --durations=20\r\n   ...\r\n   ============================================================================================== slowest 20 durations ===============================================================================================\r\n   15.39s call     pyarrow/tests/test_dataset.py::test_open_dataset_from_s3_with_filesystem_uri[threaded-sync]\r\n   15.36s call     pyarrow/tests/test_dataset.py::test_open_dataset_from_s3_with_filesystem_uri[serial-sync]\r\n   15.36s call     pyarrow/tests/test_dataset.py::test_open_dataset_from_s3_with_filesystem_uri[serial-async]\r\n   15.35s call     pyarrow/tests/test_dataset.py::test_open_dataset_from_s3_with_filesystem_uri[threaded-async]\r\n   3.13s call     pyarrow/tests/test_dataset.py::test_write_dataset_s3\r\n   2.03s setup    pyarrow/tests/test_dataset.py::test_open_dataset_from_uri_s3[threaded-async]\r\n   2.02s setup    pyarrow/tests/test_dataset.py::test_open_dataset_from_uri_s3_fsspec[threaded-async]\r\n   2.02s setup    pyarrow/tests/test_dataset.py::test_open_dataset_from_uri_s3[serial-async]\r\n   2.02s setup    pyarrow/tests/test_dataset.py::test_open_dataset_from_uri_s3_fsspec[serial-async]\r\n   2.02s setup    pyarrow/tests/test_dataset.py::test_open_dataset_from_uri_s3[threaded-sync]\r\n   2.02s setup    pyarrow/tests/test_dataset.py::test_open_dataset_from_uri_s3[serial-sync]\r\n   2.02s setup    pyarrow/tests/test_dataset.py::test_write_dataset_s3\r\n   2.01s setup    pyarrow/tests/test_dataset.py::test_open_dataset_from_uri_s3_fsspec[serial-sync]\r\n   1.58s setup    pyarrow/tests/test_dataset.py::test_open_dataset_from_uri_s3_fsspec[threaded-sync]\r\n   1.07s call     pyarrow/tests/test_dataset.py::test_open_dataset_from_uri_s3[threaded-async]\r\n   1.06s call     pyarrow/tests/test_dataset.py::test_open_dataset_from_uri_s3[threaded-sync]\r\n   1.05s call     pyarrow/tests/test_dataset.py::test_open_dataset_from_uri_s3[serial-sync]\r\n   1.05s call     pyarrow/tests/test_dataset.py::test_open_dataset_from_uri_s3[serial-async]\r\n   0.47s call     pyarrow/tests/test_dataset.py::test_open_dataset_from_uri_s3_fsspec[threaded-async]\r\n   0.30s setup    pyarrow/tests/test_dataset.py::test_make_fragment\r\n   ```\r\n   \r\n   So we now run those 4 times, but instead of objecting to the parameterization (since I suppose it's especially useful for S3 tests?), it's probably more useful to see why it actually takes such a long time\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-17T16:21:59.243+0000",
                    "updated": "2021-05-17T16:21:59.243+0000",
                    "started": "2021-05-17T16:21:59.242+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "597760",
                    "issueId": "13373685"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373685/worklog/597810",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #10118:\nURL: https://github.com/apache/arrow/pull/10118#issuecomment-842511238\n\n\n   Locally it's far faster with `AWS_EC2_METADATA_DISABLED=true` and test_fs.py already has a workaround for this. (AWS SDK tries to contact an AWS metadata server by default with a long timeout.)\r\n   \r\n   I filed ARROW-12810.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-17T17:42:45.678+0000",
                    "updated": "2021-05-17T17:42:45.678+0000",
                    "started": "2021-05-17T17:42:45.678+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "597810",
                    "issueId": "13373685"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373685/worklog/597904",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on pull request #10118:\nURL: https://github.com/apache/arrow/pull/10118#issuecomment-841861097\n\n\n   This PR could use some advice from the R community.  I'm adding the ability to request async (at the moment async is a performance degredation in some cases when I/O is really fast so until we've made more progress there it will need to be optional)  I've added `UseAsync` to the scanner in R which is used, for example, like this:\r\n   \r\n   ```\r\n   test_that(\"Scanner$ScanBatches\", {\r\n     ds <- open_dataset(ipc_dir, format = \"feather\")\r\n     batches <- ds$NewScan()$Finish()$ScanBatches()\r\n     table <- Table$create(!!!batches)\r\n     expect_equivalent(as.data.frame(table), rbind(df1, df2))\r\n   \r\n     batches <- ds$NewScan()$UseAsync(TRUE)$Finish()$ScanBatches()\r\n     table <- Table$create(!!!batches)\r\n     expect_equivalent(as.data.frame(table), rbind(df1, df2))\r\n   })\r\n   ```\r\n   However, most of the examples I see reading a dataset are doing something like...\r\n   \r\n   ```\r\n   ds %>%\r\n         select(string = chr, integer = int) %>%\r\n         filter(integer > 6 & integer < 11) %>%\r\n         collect() %>%\r\n         summarize(mean = mean(integer))\r\n   ```\r\n   \r\n   How should `UseAsync` be inserted into such a pattern (chain?) of calls.  Should it be it's own operator:\r\n   \r\n   ```\r\n   ds %>%\r\n         select(string = chr, integer = int) %>%\r\n         filter(integer > 6 & integer < 11) %>%\r\n         use_async() %>%\r\n         collect() %>%\r\n         summarize(mean = mean(integer))\r\n   ```\r\n   \r\n   ...or an argument to `collect`:\r\n   \r\n   ```\r\n   ds %>%\r\n         select(string = chr, integer = int) %>%\r\n         filter(integer > 6 & integer < 11) %>%\r\n         collect(use_async=TRUE) %>%\r\n         summarize(mean = mean(integer))\r\n   ```\r\n   ...or exposed some other different way?\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-17T18:10:08.182+0000",
                    "updated": "2021-05-17T18:10:08.182+0000",
                    "started": "2021-05-17T18:10:08.181+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "597904",
                    "issueId": "13373685"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373685/worklog/597919",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #10118:\nURL: https://github.com/apache/arrow/pull/10118#discussion_r633123955\n\n\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -2746,6 +2746,10 @@ cdef class Scanner(_Weakrefable):\n     use_threads : bool, default True\n         If enabled, then maximum parallelism will be used determined by\n         the number of available CPU cores.\n+    use_async : bool, default False\n+        If enabled, the an async scanner will be used that should offer\n+        better performance with high-latency/highly-parallel filesystems\n+        (e.g. S3)\n\nReview comment:\n       I updated all the tests so that they are parameterized on use_threads/use_async.  This helped identify the spots in _populate_builder, etc. where I had missed passing the flag through.\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -2746,6 +2746,10 @@ cdef class Scanner(_Weakrefable):\n     use_threads : bool, default True\n         If enabled, then maximum parallelism will be used determined by\n         the number of available CPU cores.\n+    use_async : bool, default False\n+        If enabled, the an async scanner will be used that should offer\n+        better performance with high-latency/highly-parallel filesystems\n+        (e.g. S3)\n\nReview comment:\n       I do think we might want to reduce the number of places we pass parameters around but this was a problem before use_async (e.g. there are a lot of places in the docs where we say \"See scan method parameters documentation.\").  That's not for this PR though and style-wise it might not be so bad so python can just forward kwargs but when it dips into cython it seems we need to materialized all the kwargs.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-17T18:11:57.432+0000",
                    "updated": "2021-05-17T18:11:57.432+0000",
                    "started": "2021-05-17T18:11:57.432+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "597919",
                    "issueId": "13373685"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373685/worklog/597950",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #10118:\nURL: https://github.com/apache/arrow/pull/10118#issuecomment-841882533\n\n\n   Elsewhere, we use a global `option` for governing e.g. whether to use multithreading, would that be appropriate here? \r\n   \r\n   Do you expect this to always be optional, or is it only optional for now while you sort out the performance optimization?\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-17T18:15:22.251+0000",
                    "updated": "2021-05-17T18:15:22.251+0000",
                    "started": "2021-05-17T18:15:22.250+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "597950",
                    "issueId": "13373685"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373685/worklog/597966",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #10118:\nURL: https://github.com/apache/arrow/pull/10118#issuecomment-842458877\n\n\n   One concern I had when seeing the heavy parameterization (basically a lot of tests x4) is about the run test time, but checking the most expensive tests, it's basically all related to the S3 related tests:\r\n   \r\n   ```\r\n   $ pytest python/pyarrow/tests/test_dataset.py --durations=20\r\n   ...\r\n   ============================================================================================== slowest 20 durations ===============================================================================================\r\n   15.39s call     pyarrow/tests/test_dataset.py::test_open_dataset_from_s3_with_filesystem_uri[threaded-sync]\r\n   15.36s call     pyarrow/tests/test_dataset.py::test_open_dataset_from_s3_with_filesystem_uri[serial-sync]\r\n   15.36s call     pyarrow/tests/test_dataset.py::test_open_dataset_from_s3_with_filesystem_uri[serial-async]\r\n   15.35s call     pyarrow/tests/test_dataset.py::test_open_dataset_from_s3_with_filesystem_uri[threaded-async]\r\n   3.13s call     pyarrow/tests/test_dataset.py::test_write_dataset_s3\r\n   2.03s setup    pyarrow/tests/test_dataset.py::test_open_dataset_from_uri_s3[threaded-async]\r\n   2.02s setup    pyarrow/tests/test_dataset.py::test_open_dataset_from_uri_s3_fsspec[threaded-async]\r\n   2.02s setup    pyarrow/tests/test_dataset.py::test_open_dataset_from_uri_s3[serial-async]\r\n   2.02s setup    pyarrow/tests/test_dataset.py::test_open_dataset_from_uri_s3_fsspec[serial-async]\r\n   2.02s setup    pyarrow/tests/test_dataset.py::test_open_dataset_from_uri_s3[threaded-sync]\r\n   2.02s setup    pyarrow/tests/test_dataset.py::test_open_dataset_from_uri_s3[serial-sync]\r\n   2.02s setup    pyarrow/tests/test_dataset.py::test_write_dataset_s3\r\n   2.01s setup    pyarrow/tests/test_dataset.py::test_open_dataset_from_uri_s3_fsspec[serial-sync]\r\n   1.58s setup    pyarrow/tests/test_dataset.py::test_open_dataset_from_uri_s3_fsspec[threaded-sync]\r\n   1.07s call     pyarrow/tests/test_dataset.py::test_open_dataset_from_uri_s3[threaded-async]\r\n   1.06s call     pyarrow/tests/test_dataset.py::test_open_dataset_from_uri_s3[threaded-sync]\r\n   1.05s call     pyarrow/tests/test_dataset.py::test_open_dataset_from_uri_s3[serial-sync]\r\n   1.05s call     pyarrow/tests/test_dataset.py::test_open_dataset_from_uri_s3[serial-async]\r\n   0.47s call     pyarrow/tests/test_dataset.py::test_open_dataset_from_uri_s3_fsspec[threaded-async]\r\n   0.30s setup    pyarrow/tests/test_dataset.py::test_make_fragment\r\n   ```\r\n   \r\n   So we now run those 4 times, but instead of objecting to the parameterization (since I suppose it's especially useful for S3 tests?), it's probably more useful to see why it actually takes such a long time\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-17T18:17:43.967+0000",
                    "updated": "2021-05-17T18:17:43.967+0000",
                    "started": "2021-05-17T18:17:43.966+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "597966",
                    "issueId": "13373685"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373685/worklog/598001",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #10118:\nURL: https://github.com/apache/arrow/pull/10118#discussion_r633533471\n\n\n\n##########\nFile path: python/pyarrow/tests/test_dataset.py\n##########\n@@ -206,6 +206,63 @@ def dataset(mockfs):\n     return factory.finish()\n \n \n+@pytest.fixture(params=[\n+    (True, True),\n+    (True, False),\n+    (False, True),\n+    (False, False)\n+], ids=['threaded-async', 'threaded-sync', 'serial-async', 'serial-sync'])\n+def dataset_reader(request):\n+    '''\n+    Fixture which allows dataset scanning operations to be\n+    run with/without threads and with/without async\n+    '''\n+    use_threads, use_async = request.param\n+\n+    class reader:\n+\n+        def __init__(self):\n+            self.use_threads = use_threads\n+            self.use_async = use_async\n+\n+        def _patch_kwargs(self, kwargs):\n+            if 'use_threads' in kwargs:\n+                raise Exception(\n+                    ('Invalid use of dataset_reader, do not specify'\n+                     ' use_threads'))\n+            if 'use_async' in kwargs:\n+                raise Exception(\n+                    'Invalid use of dataset_reader, do not specify use_async')\n+            kwargs['use_threads'] = use_threads\n+            kwargs['use_async'] = use_async\n+\n+        def to_table(self, dataset, **kwargs):\n+            self._patch_kwargs(kwargs)\n+            return dataset.to_table(**kwargs)\n+\n+        def to_batches(self, dataset, **kwargs):\n+            self._patch_kwargs(kwargs)\n+            return dataset.to_batches(**kwargs)\n+\n+        def scanner(self, dataset, **kwargs):\n+            self._patch_kwargs(kwargs)\n+            return dataset.scanner(**kwargs)\n+\n+        def head(self, dataset, num_rows, **kwargs):\n\nReview comment:\n       Note you could declare all these as `(self, dataset, *args, **kwargs)` and avoid having to replicate their individual signatures.\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -2969,6 +2982,8 @@ def _filesystemdataset_write(\n     FileSystem filesystem not None,\n     Partitioning partitioning not None,\n     FileWriteOptions file_options not None,\n+    bint use_threads,\n+    bint use_async,\n\nReview comment:\n       This doesn't seem used here? Though I guess even before use_threads was ignored. \n\n##########\nFile path: python/pyarrow/tests/test_dataset.py\n##########\n@@ -206,6 +206,63 @@ def dataset(mockfs):\n     return factory.finish()\n \n \n+@pytest.fixture(params=[\n+    (True, True),\n+    (True, False),\n+    (False, True),\n+    (False, False)\n+], ids=['threaded-async', 'threaded-sync', 'serial-async', 'serial-sync'])\n+def dataset_reader(request):\n+    '''\n+    Fixture which allows dataset scanning operations to be\n+    run with/without threads and with/without async\n+    '''\n+    use_threads, use_async = request.param\n+\n+    class reader:\n+\n+        def __init__(self):\n+            self.use_threads = use_threads\n+            self.use_async = use_async\n+\n+        def _patch_kwargs(self, kwargs):\n+            if 'use_threads' in kwargs:\n+                raise Exception(\n+                    ('Invalid use of dataset_reader, do not specify'\n+                     ' use_threads'))\n+            if 'use_async' in kwargs:\n+                raise Exception(\n+                    'Invalid use of dataset_reader, do not specify use_async')\n+            kwargs['use_threads'] = use_threads\n+            kwargs['use_async'] = use_async\n+\n+        def to_table(self, dataset, **kwargs):\n+            self._patch_kwargs(kwargs)\n+            return dataset.to_table(**kwargs)\n+\n+        def to_batches(self, dataset, **kwargs):\n+            self._patch_kwargs(kwargs)\n+            return dataset.to_batches(**kwargs)\n+\n+        def scanner(self, dataset, **kwargs):\n+            self._patch_kwargs(kwargs)\n+            return dataset.scanner(**kwargs)\n+\n+        def head(self, dataset, num_rows, **kwargs):\n\nReview comment:\n       Thanks for converting this file, by the way, this looks like it was rather tedious.\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -2746,6 +2746,10 @@ cdef class Scanner(_Weakrefable):\n     use_threads : bool, default True\n         If enabled, then maximum parallelism will be used determined by\n         the number of available CPU cores.\n+    use_async : bool, default False\n+        If enabled, the an async scanner will be used that should offer\n+        better performance with high-latency/highly-parallel filesystems\n+        (e.g. S3)\n\nReview comment:\n       It's because `_populate_builder` is cdef, i.e. gets compiled into an actual C function with a C parameter list, so it can't take `**kwargs` (but can directly take things like a shared_ptr). Though, we could pack all the non-C(++) arguments into a single `kwargs`.\n\n##########\nFile path: r/R/dataset-scan.R\n##########\n@@ -42,6 +44,7 @@\n #' - `$UseThreads(threads)`: logical: should the scan use multithreading?\n #' The method's default input is `TRUE`, but you must call the method to enable\n #' multithreading because the scanner default is `FALSE`.\n+#' - `$UseAsync(use_async)`: logical: should the async scanner be used?\n\nReview comment:\n       I think you have to roxygenize() to get these changes reflected in the actual docs? (and/or you can just `@github-actions autotune` to have CI do that for you)\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -2969,6 +2982,8 @@ def _filesystemdataset_write(\n     FileSystem filesystem not None,\n     Partitioning partitioning not None,\n     FileWriteOptions file_options not None,\n+    bint use_threads,\n+    bint use_async,\n\nReview comment:\n       I guess we'd have to do something like embed ScanOptions into FileSystemDatasetWriteOptions if we want to make these useful, and you already made a followup.\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -2986,6 +2992,8 @@ def _filesystemdataset_write(\n     c_options.max_partitions = max_partitions\n     c_options.basename_template = tobytes(basename_template)\n \n-    c_scanner = data.unwrap()\n+    scanner = data._scanner(use_threads=use_threads, use_async=use_async)\n\nReview comment:\n       Note that the method was renamed/made public recently (i.e. should be `data.scanner`)\n\n##########\nFile path: r/R/dataset-scan.R\n##########\n@@ -183,6 +191,10 @@ ScannerBuilder <- R6Class(\"ScannerBuilder\", inherit = ArrowObject,\n       dataset___ScannerBuilder__UseThreads(self, threads)\n       self\n     },\n+    UseAsync = function(use_async = FALSE) {\n\nReview comment:\n       (Otherwise the parameter above doesn't work.)\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -393,6 +393,11 @@ cdef class Dataset(_Weakrefable):\n         use_threads : bool, default True\n             If enabled, then maximum parallelism will be used determined by\n             the number of available CPU cores.\n+        use_async : bool, default False\n+            If enabled, the an async scanner will be used that should offer\n+            better performance with high-latency/highly-parallel filesystems\n+            (e.g. S3)\n+\n\nReview comment:\n       Do we want to call it out as still experimental? (Ditto for R below)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-17T18:22:54.161+0000",
                    "updated": "2021-05-17T18:22:54.161+0000",
                    "started": "2021-05-17T18:22:54.161+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "598001",
                    "issueId": "13373685"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373685/worklog/598038",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #10118:\nURL: https://github.com/apache/arrow/pull/10118#issuecomment-842511238\n\n\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-17T18:26:32.812+0000",
                    "updated": "2021-05-17T18:26:32.812+0000",
                    "started": "2021-05-17T18:26:32.811+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "598038",
                    "issueId": "13373685"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373685/worklog/598139",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #10118:\nURL: https://github.com/apache/arrow/pull/10118#discussion_r633637602\n\n\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -393,6 +393,11 @@ cdef class Dataset(_Weakrefable):\n         use_threads : bool, default True\n             If enabled, then maximum parallelism will be used determined by\n             the number of available CPU cores.\n+        use_async : bool, default False\n+            If enabled, the an async scanner will be used that should offer\n\nReview comment:\n       ```suggestion\r\n               If enabled, an async scanner will be used that should offer\r\n   ```\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -2721,6 +2727,10 @@ cdef class Scanner(_Weakrefable):\n     use_threads : bool, default True\n         If enabled, then maximum parallelism will be used determined by\n         the number of available CPU cores.\n+    use_async : bool, default False\n+        If enabled, the an async scanner will be used that should offer\n\nReview comment:\n       ```suggestion\r\n           If enabled, an async scanner will be used that should offer\r\n   ```\n\n##########\nFile path: python/pyarrow/dataset.py\n##########\n@@ -725,6 +725,10 @@ def write_dataset(data, base_dir, basename_template=None, format=None,\n     use_threads : bool, default True\n         Write files in parallel. If enabled, then maximum parallelism will be\n         used determined by the number of available CPU cores.\n+    use_async : bool, default False\n+        If enabled, the an async scanner will be used that should offer\n\nReview comment:\n       ```suggestion\r\n           If enabled, an async scanner will be used that should offer\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-17T18:36:49.175+0000",
                    "updated": "2021-05-17T18:36:49.175+0000",
                    "started": "2021-05-17T18:36:49.175+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "598139",
                    "issueId": "13373685"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373685/worklog/598336",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #10118:\nURL: https://github.com/apache/arrow/pull/10118#discussion_r633931273\n\n\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -2746,6 +2746,10 @@ cdef class Scanner(_Weakrefable):\n     use_threads : bool, default True\n         If enabled, then maximum parallelism will be used determined by\n         the number of available CPU cores.\n+    use_async : bool, default False\n+        If enabled, the an async scanner will be used that should offer\n+        better performance with high-latency/highly-parallel filesystems\n+        (e.g. S3)\n\nReview comment:\n       > Though, we could pack all the non-C(++) arguments into a single kwargs.\r\n   \r\n   I don't know what you mean by this.  Do you mean taking all these arguments and putting them into some kind of `ScanOptions` class?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-17T23:33:59.579+0000",
                    "updated": "2021-05-17T23:33:59.579+0000",
                    "started": "2021-05-17T23:33:59.579+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "598336",
                    "issueId": "13373685"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373685/worklog/598338",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #10118:\nURL: https://github.com/apache/arrow/pull/10118#discussion_r633932886\n\n\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -2969,6 +2982,8 @@ def _filesystemdataset_write(\n     FileSystem filesystem not None,\n     Partitioning partitioning not None,\n     FileWriteOptions file_options not None,\n+    bint use_threads,\n+    bint use_async,\n\nReview comment:\n       Nope, you're right initially.  If the function is already taking in a scanner there is no need for these properties.  They should be specified when building the scanner.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-17T23:39:08.257+0000",
                    "updated": "2021-05-17T23:39:08.257+0000",
                    "started": "2021-05-17T23:39:08.256+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "598338",
                    "issueId": "13373685"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 33600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@363491b6[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7e177d09[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@e12d6b1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@4b280d4f[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@16b4be44[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@40b63df6[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5809cc0f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@5340f034[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@60b52286[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@111deaeb[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7623573[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@53f7a4fb[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 33600,
        "customfield_12312520": null,
        "customfield_12312521": "Fri May 21 15:33:11 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-05-21T15:33:11.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12468/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2021-04-19T19:33:09.000+0000",
        "updated": "2021-05-21T15:33:17.000+0000",
        "timeoriginalestimate": null,
        "description": "ARROW-12289 adds a UseAsync option to arrow::dataset::ScannerBuilder.\u00a0 This PR exposes that option via python and R",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "9h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 33600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python][R] Expose UseAsync to python/R",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373685/comment/17349337",
                    "id": "17349337",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 10118\n[https://github.com/apache/arrow/pull/10118]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-05-21T15:33:11.886+0000",
                    "updated": "2021-05-21T15:33:11.886+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0q7u8:",
        "customfield_12314139": null
    }
}