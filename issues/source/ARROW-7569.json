{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13279321",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13279321",
    "key": "ARROW-7569",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12340948",
                "id": "12340948",
                "description": "",
                "name": "0.16.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-02-07"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12578198",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12578198",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "inwardIssue": {
                    "id": "13151095",
                    "key": "ARROW-2428",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13151095",
                    "fields": {
                        "summary": "[Python]\u00a0Add API to map Arrow types (including extension types) to pandas ExtensionArray instances for to_pandas conversions",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "aggregateprogress": {
            "progress": 4800,
            "total": 4800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 4800,
            "total": 4800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7569/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 9,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13279321/worklog/371566",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6189: ARROW-7569: [Python] Add API to map Arrow types to pandas ExtensionDtypes in to_pandas conversions\nURL: https://github.com/apache/arrow/pull/6189\n \n \n   See https://issues.apache.org/jira/browse/ARROW-7569 and https://issues.apache.org/jira/browse/ARROW-2428 for context. https://github.com/apache/arrow/pull/5512 only covered the first 2 cases described in ARROW-2428, this also tries to cover the third case.\r\n   \r\n   This PR adds a `types_mapping` to `Table.to_pandas` to specify pandas ExtensionDtypes for built-in arrow types to use in the conversion (eg to convert arrow integer types to pandas' nullable integer dtype instead of to numpy integer dtype).\r\n   \r\n   Need to add more tests, and one important concern is that using a pyarrow type instance as the dict key might not easily work for parametrized types (eg timestamp with resolution / timezone).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-14T12:11:30.673+0000",
                    "updated": "2020-01-14T12:11:30.673+0000",
                    "started": "2020-01-14T12:11:30.673+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "371566",
                    "issueId": "13279321"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13279321/worklog/371568",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #6189: ARROW-7569: [Python] Add API to map Arrow types to pandas ExtensionDtypes in to_pandas conversions\nURL: https://github.com/apache/arrow/pull/6189#issuecomment-574149866\n \n \n   https://issues.apache.org/jira/browse/ARROW-7569\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-14T12:24:01.136+0000",
                    "updated": "2020-01-14T12:24:01.136+0000",
                    "started": "2020-01-14T12:24:01.136+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "371568",
                    "issueId": "13279321"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13279321/worklog/373560",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on issue #6189: ARROW-7569: [Python] Add API to map Arrow types to pandas ExtensionDtypes in to_pandas conversions\nURL: https://github.com/apache/arrow/pull/6189#issuecomment-575594600\n \n \n   So I think a main problem with my approach here is the fact that I use pyarrow type instances in the mapping to compare with. \r\n   That would be quite cumbersome for *parametrized* types, eg timestamp (although the possible options here are limited) or dictionary type. Since a dictionary type with different indices/values types will evaluate unequal.\r\n   \r\n   Are there alternatives to the type *instance*? I think a \"name\" would be most ergonomic, but pyarrow types don't have a general name (only a str representation, but that includes the parametrization). Another option would be the `type.id`, but that seems less user-friendly (and actually, that would also be equal for all extension types). \r\n   Or a fully different API alltogether?\r\n   \r\n   cc @wesm \r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-17T11:45:49.214+0000",
                    "updated": "2020-01-17T11:45:49.214+0000",
                    "started": "2020-01-17T11:45:49.214+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "373560",
                    "issueId": "13279321"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13279321/worklog/375930",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #6189: ARROW-7569: [Python] Add API to map Arrow types to pandas ExtensionDtypes in to_pandas conversions\nURL: https://github.com/apache/arrow/pull/6189#issuecomment-577404412\n \n \n   Another option is to have the mapper be a function. \r\n   \r\n   So the case you have here is that the function is always `types_mapping.__getitem__`. So allowing any function `f(pyarrow.DataType) -> ExtensionDType` would require a bit more mental gymnastics but be more flexible. Thoughts?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-22T21:55:46.360+0000",
                    "updated": "2020-01-22T21:55:46.360+0000",
                    "started": "2020-01-22T21:55:46.360+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "375930",
                    "issueId": "13279321"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13279321/worklog/376126",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on issue #6189: ARROW-7569: [Python] Add API to map Arrow types to pandas ExtensionDtypes in to_pandas conversions\nURL: https://github.com/apache/arrow/pull/6189#issuecomment-577581044\n \n \n   > Another option is to have the mapper be a function.\r\n   \r\n   Ah, that sounds as a good idea! It's more flexible for the harder cases (like dictionary with different indices types, or extension types), and not much more difficult for the easy cases if you have a dict with the mapping. \r\n   I will maybe go with `types_mapping.get` instead of `types_mapping.__getitem__` as how the function should work for this case (so a function that returns None instead of errors if no pandas ExtensionDtype should be used).\r\n   \r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-23T08:40:19.955+0000",
                    "updated": "2020-01-23T08:40:19.955+0000",
                    "started": "2020-01-23T08:40:19.955+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "376126",
                    "issueId": "13279321"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13279321/worklog/376153",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6189: ARROW-7569: [Python] Add API to map Arrow types to pandas ExtensionDtypes in to_pandas conversions\nURL: https://github.com/apache/arrow/pull/6189#discussion_r370015478\n \n \n\n ##########\n File path: python/pyarrow/pandas_compat.py\n ##########\n @@ -799,46 +795,38 @@ def _get_extension_dtypes(table, columns_metadata, extension_columns):\n \n     # older pandas version that does not yet support extension dtypes\n     if _pandas_api.extension_dtype is None:\n-        if extension_columns is not None:\n-            raise ValueError(\n-                \"Converting to pandas ExtensionDtypes is not supported\")\n         return ext_columns\n \n-    if extension_columns is None:\n-        # infer the extension columns from the pandas metadata\n-        for col_meta in columns_metadata:\n-            name = col_meta['name']\n-            dtype = col_meta['numpy_type']\n-            if dtype not in _pandas_supported_numpy_types:\n-                # pandas_dtype is expensive, so avoid doing this for types\n-                # that are certainly numpy dtypes\n-                pandas_dtype = _pandas_api.pandas_dtype(dtype)\n-                if isinstance(pandas_dtype, _pandas_api.extension_dtype):\n-                    if hasattr(pandas_dtype, \"__from_arrow__\"):\n-                        ext_columns[name] = pandas_dtype\n-        # infer from extension type in the schema\n+    # infer the extension columns from the pandas metadata\n+    for col_meta in columns_metadata:\n+        name = col_meta['name']\n+        dtype = col_meta['numpy_type']\n+        if dtype not in _pandas_supported_numpy_types:\n+            # pandas_dtype is expensive, so avoid doing this for types\n+            # that are certainly numpy dtypes\n+            pandas_dtype = _pandas_api.pandas_dtype(dtype)\n+            if isinstance(pandas_dtype, _pandas_api.extension_dtype):\n+                if hasattr(pandas_dtype, \"__from_arrow__\"):\n+                    ext_columns[name] = pandas_dtype\n+\n+    # infer from extension type in the schema\n+    for field in table.schema:\n+        typ = field.type\n+        if isinstance(typ, pa.BaseExtensionType):\n+            try:\n+                pandas_dtype = typ.to_pandas_dtype()\n+            except NotImplementedError:\n+                pass\n+            else:\n+                ext_columns[field.name] = pandas_dtype\n+\n+    # use the specified mapping of built-in arrow types to pandas dtypes\n+    if types_mapper:\n         for field in table.schema:\n             typ = field.type\n-            if isinstance(typ, pa.BaseExtensionType):\n-                try:\n-                    pandas_dtype = typ.to_pandas_dtype()\n-                except NotImplementedError:\n-                    pass\n-                else:\n-                    ext_columns[field.name] = pandas_dtype\n-\n-    else:\n-        # get the extension dtype for the specified columns\n-        for name in extension_columns:\n-            col_meta = [\n-                meta for meta in columns_metadata if meta['name'] == name][0]\n-            pandas_dtype = _pandas_api.pandas_dtype(col_meta['numpy_type'])\n-            if not isinstance(pandas_dtype, _pandas_api.extension_dtype):\n-                raise ValueError(\"not an extension dtype\")\n-            if not hasattr(pandas_dtype, \"__from_arrow__\"):\n-                raise ValueError(\"this column does not support to be \"\n-                                 \"converted to extension dtype\")\n-            ext_columns[name] = pandas_dtype\n \n Review comment:\n   I removed this \"else\" for when `extension_columns` was specified, as this is no longer used (I added it initially to be able to specify which columns to convert to test this, when inference from the metadata was not yet implemented)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-23T09:41:25.989+0000",
                    "updated": "2020-01-23T09:41:25.989+0000",
                    "started": "2020-01-23T09:41:25.989+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "376153",
                    "issueId": "13279321"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13279321/worklog/376154",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6189: ARROW-7569: [Python] Add API to map Arrow types to pandas ExtensionDtypes in to_pandas conversions\nURL: https://github.com/apache/arrow/pull/6189#discussion_r370015478\n \n \n\n ##########\n File path: python/pyarrow/pandas_compat.py\n ##########\n @@ -799,46 +795,38 @@ def _get_extension_dtypes(table, columns_metadata, extension_columns):\n \n     # older pandas version that does not yet support extension dtypes\n     if _pandas_api.extension_dtype is None:\n-        if extension_columns is not None:\n-            raise ValueError(\n-                \"Converting to pandas ExtensionDtypes is not supported\")\n         return ext_columns\n \n-    if extension_columns is None:\n-        # infer the extension columns from the pandas metadata\n-        for col_meta in columns_metadata:\n-            name = col_meta['name']\n-            dtype = col_meta['numpy_type']\n-            if dtype not in _pandas_supported_numpy_types:\n-                # pandas_dtype is expensive, so avoid doing this for types\n-                # that are certainly numpy dtypes\n-                pandas_dtype = _pandas_api.pandas_dtype(dtype)\n-                if isinstance(pandas_dtype, _pandas_api.extension_dtype):\n-                    if hasattr(pandas_dtype, \"__from_arrow__\"):\n-                        ext_columns[name] = pandas_dtype\n-        # infer from extension type in the schema\n+    # infer the extension columns from the pandas metadata\n+    for col_meta in columns_metadata:\n+        name = col_meta['name']\n+        dtype = col_meta['numpy_type']\n+        if dtype not in _pandas_supported_numpy_types:\n+            # pandas_dtype is expensive, so avoid doing this for types\n+            # that are certainly numpy dtypes\n+            pandas_dtype = _pandas_api.pandas_dtype(dtype)\n+            if isinstance(pandas_dtype, _pandas_api.extension_dtype):\n+                if hasattr(pandas_dtype, \"__from_arrow__\"):\n+                    ext_columns[name] = pandas_dtype\n+\n+    # infer from extension type in the schema\n+    for field in table.schema:\n+        typ = field.type\n+        if isinstance(typ, pa.BaseExtensionType):\n+            try:\n+                pandas_dtype = typ.to_pandas_dtype()\n+            except NotImplementedError:\n+                pass\n+            else:\n+                ext_columns[field.name] = pandas_dtype\n+\n+    # use the specified mapping of built-in arrow types to pandas dtypes\n+    if types_mapper:\n         for field in table.schema:\n             typ = field.type\n-            if isinstance(typ, pa.BaseExtensionType):\n-                try:\n-                    pandas_dtype = typ.to_pandas_dtype()\n-                except NotImplementedError:\n-                    pass\n-                else:\n-                    ext_columns[field.name] = pandas_dtype\n-\n-    else:\n-        # get the extension dtype for the specified columns\n-        for name in extension_columns:\n-            col_meta = [\n-                meta for meta in columns_metadata if meta['name'] == name][0]\n-            pandas_dtype = _pandas_api.pandas_dtype(col_meta['numpy_type'])\n-            if not isinstance(pandas_dtype, _pandas_api.extension_dtype):\n-                raise ValueError(\"not an extension dtype\")\n-            if not hasattr(pandas_dtype, \"__from_arrow__\"):\n-                raise ValueError(\"this column does not support to be \"\n-                                 \"converted to extension dtype\")\n-            ext_columns[name] = pandas_dtype\n \n Review comment:\n   I removed this \"else\" for when `extension_columns` was specified, as this is no longer used (I added it initially to be able to specify which columns to convert to test this, when inference from the metadata was not yet implemented)\r\n   \r\n   (this makes the diff a bit harder, but in this whole `_get_extension_dtypes` basically only the `if types_mapper:` block is added (the rest is only dedented))\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-23T09:42:19.286+0000",
                    "updated": "2020-01-23T09:42:19.286+0000",
                    "started": "2020-01-23T09:42:19.286+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "376154",
                    "issueId": "13279321"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13279321/worklog/376155",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on issue #6189: ARROW-7569: [Python] Add API to map Arrow types to pandas ExtensionDtypes in to_pandas conversions\nURL: https://github.com/apache/arrow/pull/6189#issuecomment-577603649\n \n \n   OK, I changed `types_mapping` to `types_mapper` being a function, and expanded the tests a bit. I think this should be good now.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-23T09:43:06.851+0000",
                    "updated": "2020-01-23T09:43:06.851+0000",
                    "started": "2020-01-23T09:43:06.851+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "376155",
                    "issueId": "13279321"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13279321/worklog/376382",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #6189: ARROW-7569: [Python] Add API to map Arrow types to pandas ExtensionDtypes in to_pandas conversions\nURL: https://github.com/apache/arrow/pull/6189\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-23T17:42:53.241+0000",
                    "updated": "2020-01-23T17:42:53.241+0000",
                    "started": "2020-01-23T17:42:53.241+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "376382",
                    "issueId": "13279321"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 4800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@2f91711[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@416cfd02[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3f85ccc[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@25da355c[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@930ec12[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@5c4d3e23[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1d92175a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@6996a161[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@67c8903d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@524116c1[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5f64e314[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@3a5cc30[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 4800,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Jan 23 17:42:53 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-01-23T17:42:53.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7569/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2020-01-14T11:04:24.000+0000",
        "updated": "2020-01-23T17:42:53.000+0000",
        "timeoriginalestimate": null,
        "description": "ARROW-2428 was about adding such a mapping, and described three use cases (see this [comment|https://issues.apache.org/jira/browse/ARROW-2428?focusedCommentId=16914231&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-16914231] for details):\r\n\r\n* Basic roundtrip based on the pandas_metadata (in {{to_pandas}}, we check if the pandas_metadata specify pandas extension dtypes, and if so, use this as the target dtype for that column)\r\n* Conversion for pyarrow extension types that can define their equivalent pandas extension dtype\r\n* A way to override default conversion (eg for the built-in types, or in absence of pandas_metadata in the schema). This would require the user to be able to specify some mapping of pyarrow type or column name to the pandas extension dtype to use.\r\n\r\nThe PR that closed ARROW-2428 (https://github.com/apache/arrow/pull/5512) only covered the first two cases, and not the third case.\r\n\r\nI think it is still interesting to also cover the third case in some way.  \r\n\r\nAn example use case are the new nullable dtypes that are introduced in pandas (eg the nullable integer dtype).  Assume I want to read a parquet file into a pandas DataFrame using this nullable integer dtype. The pyarrow Table has no pandas_metadata indicating to use this dtype (unless it was created from a pandas DataFrame that was already using this dtype, but that will often not be the case), and the pyarrow.int64() type is also not an extension type that can define its equivalent pandas extension dtype. \r\nCurrently, the only solution is first read it into pandas DataFrame (which will use floats for the integers if there are nulls), and then afterwards to convert those floats back to a nullable integer dtype. \r\n\r\nA possible API for this could look like:\r\n\r\n{code}\r\ntable.to_pandas(types_mapping={pa.int64(): pd.Int64Dtype()})\r\n{code}\r\n\r\nto indicate that you want to convert all columns of the pyarrow table with int64 type to a pandas column using the nullable Int64 dtype.\r\n \r\n\r\n\r\n\r\n\r\n",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 4800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Add API to map Arrow types to pandas ExtensionDtypes for to_pandas conversions",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13279321/comment/17022303",
                    "id": "17022303",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Issue resolved by pull request 6189\n[https://github.com/apache/arrow/pull/6189]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2020-01-23T17:42:53.319+0000",
                    "updated": "2020-01-23T17:42:53.319+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0ahn4:",
        "customfield_12314139": null
    }
}