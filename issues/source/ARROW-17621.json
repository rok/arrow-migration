{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13480161",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13480161",
    "key": "ARROW-17621",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351947",
                "id": "12351947",
                "description": "",
                "name": "10.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-10-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=assignUser",
            "name": "assignUser",
            "key": "JIRAUSER287549",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34052",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34052",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34052",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34052"
            },
            "displayName": "Jacob Wujciak-Jens",
            "active": true,
            "timeZone": "Europe/Berlin"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333244",
                "id": "12333244",
                "name": "Continuous Integration"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=assignUser",
            "name": "assignUser",
            "key": "JIRAUSER287549",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34052",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34052",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34052",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34052"
            },
            "displayName": "Jacob Wujciak-Jens",
            "active": true,
            "timeZone": "Europe/Berlin"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=assignUser",
            "name": "assignUser",
            "key": "JIRAUSER287549",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34052",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34052",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34052",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34052"
            },
            "displayName": "Jacob Wujciak-Jens",
            "active": true,
            "timeZone": "Europe/Berlin"
        },
        "aggregateprogress": {
            "progress": 7800,
            "total": 7800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 7800,
            "total": 7800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-17621/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 13,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13480161/worklog/809609",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "assignUser opened a new pull request, #14155:\nURL: https://github.com/apache/arrow/pull/14155\n\n   In this PR I:\r\n   - reduced the scope of the automatically generated `GITHUB_TOKEN` as much as possible (technically `contents:none` would  be the minimum but it is a bit unintuitive as it does not prevent checkout of public repos, I set `contents:read` in those cases)  \r\n   - update all actions used to the newest version (checking for breaking changes, only case is actions/github-script which remains on v3 for that reason -> follow up)\r\n   - move the creation of envvars containing secrets as close to their usage as possible (-> the step they are used in), this duplicates them in workflows with multiple jobs but is safer.\r\n   \r\n   I have opted **NOT** to pin the different actions by SHA as recommended in some places as the con outweigh the possible protection in my opinion. The main danger with pinning tags or branches is that a malicious actor changes the commit the tag points to and exfiltrates secrets (either repository secrets or in case of private repos code/ip) or takes some other damaging action like deleting branches, rewriting history etc..\r\n   \r\n   We only ever pass actions the `GITHUB_TOKEN` which is ephemeral (deleted after workflow is finished) and scope limited so exfiltration of that token would worst case allow an attacker to create/delete labels and pr comments as well as modify PR branches (if the submitter activated the checkbox for maintainer access). Actions can not access secrets without the workflow author explicitly passing them as input (envvars might reveal them though)\r\n   \r\n   The Apache Org limits the actions that can be used in repos, so we only use well known allow-listed actions, while this does of course not prevent malicious actions it reduces the risk substantially.\r\n   \r\n   Pinning SHAs would mitigate these risks (provided the action at that sha was audited...) but would also necessitate regularly checking + re-auditing the actions as to not miss security patches in these actions (e.g. [here](https://github.com/matlab-actions/setup-matlab/releases/tag/v1.1.1v)). IMHO that would be a considerable effort (+ needing real expertise in typescript/node to spot any malicious additions outside of blatant secret exfiltration or nuking) resulting in a small gain.\r\n   \n\n\n",
                    "created": "2022-09-16T17:58:21.027+0000",
                    "updated": "2022-09-16T17:58:21.027+0000",
                    "started": "2022-09-16T17:58:21.026+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "809609",
                    "issueId": "13480161"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13480161/worklog/809610",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "assignUser commented on PR #14155:\nURL: https://github.com/apache/arrow/pull/14155#issuecomment-1249652230\n\n   It looks like Dependabot can also scan & update actions used in workflows: https://docs.github.com/en/code-security/dependabot/working-with-dependabot/keeping-your-actions-up-to-date-with-dependabot\r\n   \r\n   This would remove most of the workload of updating the actions, while this would still not protect against properly obfuscated attacks combined the other mitigations in this PR it might be a good compromise. @amol- @raulcd thoughts?\n\n\n",
                    "created": "2022-09-16T18:02:02.150+0000",
                    "updated": "2022-09-16T18:02:02.150+0000",
                    "started": "2022-09-16T18:02:02.150+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "809610",
                    "issueId": "13480161"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13480161/worklog/809611",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #14155:\nURL: https://github.com/apache/arrow/pull/14155#issuecomment-1249658352\n\n   https://issues.apache.org/jira/browse/ARROW-17621\n\n\n",
                    "created": "2022-09-16T18:06:59.642+0000",
                    "updated": "2022-09-16T18:06:59.642+0000",
                    "started": "2022-09-16T18:06:59.642+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "809611",
                    "issueId": "13480161"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13480161/worklog/809612",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #14155:\nURL: https://github.com/apache/arrow/pull/14155#issuecomment-1249658393\n\n   :warning: Ticket **has not been started in JIRA**, please click 'Start Progress'.\n\n\n",
                    "created": "2022-09-16T18:07:00.773+0000",
                    "updated": "2022-09-16T18:07:00.773+0000",
                    "started": "2022-09-16T18:07:00.773+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "809612",
                    "issueId": "13480161"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13480161/worklog/810365",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on PR #14155:\nURL: https://github.com/apache/arrow/pull/14155#issuecomment-1252248974\n\n   > It looks like Dependabot can also scan & update actions used in workflows\r\n   \r\n   Dependabot makes a PR to suggest the update right? \r\n   My concern would only be to contain the risk for sudden breaking changes, but if those updates are conducted in a dedicated PR, then the PR would prove that the CI still passes before getting merged.\n\n\n",
                    "created": "2022-09-20T11:58:15.925+0000",
                    "updated": "2022-09-20T11:58:15.925+0000",
                    "started": "2022-09-20T11:58:15.924+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "810365",
                    "issueId": "13480161"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13480161/worklog/810367",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "assignUser commented on PR #14155:\nURL: https://github.com/apache/arrow/pull/14155#issuecomment-1252259003\n\n   Yes Dependabot opens a PR, I think we can even configure a PR title format via a config yaml to match our needs.\n\n\n",
                    "created": "2022-09-20T12:05:44.002+0000",
                    "updated": "2022-09-20T12:05:44.002+0000",
                    "started": "2022-09-20T12:05:44.001+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "810367",
                    "issueId": "13480161"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13480161/worklog/810459",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "assignUser commented on PR #14155:\nURL: https://github.com/apache/arrow/pull/14155#issuecomment-1252681305\n\n   (I'll create a follow up jira for dependabot)\n\n\n",
                    "created": "2022-09-20T17:29:48.636+0000",
                    "updated": "2022-09-20T17:29:48.636+0000",
                    "started": "2022-09-20T17:29:48.636+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "810459",
                    "issueId": "13480161"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13480161/worklog/810520",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on code in PR #14155:\nURL: https://github.com/apache/arrow/pull/14155#discussion_r975811505\n\n\n##########\n.github/workflows/java.yml:\n##########\n@@ -111,9 +115,10 @@ jobs:\n         jdk: [11]\n     steps:\n       - name: Set up Java\n-        uses: actions/setup-java@v1\n+        uses: actions/setup-java@v3\n         with:\n           java-version: ${{ matrix.jdk }}\n+          distribution: 'zulu'\n\nReview Comment:\n   Could you sort them in alphabetical order?\n\n\n\n##########\n.github/workflows/go.yml:\n##########\n@@ -1,318 +1,326 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-\n-name: Go\n-\n-on:\n-  push:\n-    paths:\n-      - '.github/workflows/go.yml'\n-      - 'ci/docker/*_go.dockerfile'\n-      - 'ci/scripts/go_*'\n-      - 'go/**'\n-  pull_request:\n-    paths:\n-      - '.github/workflows/go.yml'\n-      - 'ci/docker/*_go.dockerfile'\n-      - 'ci/docker/**'\n-      - 'ci/scripts/go_*'\n-      - 'go/**'\n-\n-concurrency:\n-  group: ${{ github.repository }}-${{ github.head_ref || github.sha }}-${{ github.workflow }}\n-  cancel-in-progress: true\n-\n-env:\n-  ARCHERY_DOCKER_USER: ${{ secrets.DOCKERHUB_USER }}\n-  ARCHERY_DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}\n-\n-jobs:\n-\n-  docker:\n-    name: AMD64 Debian 11 Go ${{ matrix.go }}\n-    runs-on: ubuntu-latest\n-    if: ${{ !contains(github.event.pull_request.title, 'WIP') }}\n-    timeout-minutes: 15\n-    strategy:\n-      fail-fast: false\n-      matrix:\n-        go: [1.17, 1.18]\n-        include:\n-          - go: 1.17\n-            staticcheck: v0.2.2\n-          - go: 1.18\n-            staticcheck: latest\n-    env:\n-      GO: ${{ matrix.go }}\n-      STATICCHECK: ${{ matrix.staticcheck }}\n-    steps:\n-      - name: Checkout Arrow\n-        uses: actions/checkout@v3\n-        with:\n-          fetch-depth: 0\n-          submodules: recursive\n-      - name: Setup Python\n-        uses: actions/setup-python@v4\n-        with:\n-          python-version: 3.8\n-      - name: Setup Archery\n-        run: pip install -e dev/archery[docker]\n-      - name: Execute Docker Build\n-        run: archery docker run debian-go\n-      - name: Docker Push\n-        if: success() && github.event_name == 'push' && github.repository == 'apache/arrow'\n-        continue-on-error: true\n-        run: archery docker push debian-go\n-\n-  docker_cgo:\n-    name: AMD64 Debian 11 GO ${{ matrix.go }} - CGO\n-    runs-on: ubuntu-latest\n-    if: ${{ !contains(github.event.pull_request.title, 'WIP') }}\n-    timeout-minutes: 15\n-    strategy:\n-      fail-fast: false\n-      matrix:\n-        go: [1.17, 1.18]\n-        include:\n-          - go: 1.17\n-            staticcheck: v0.2.2\n-          - go: 1.18\n-            staticcheck: latest\n-    env:\n-      GO: ${{ matrix.go }}\n-      STATICCHECK: ${{ matrix.staticcheck }}\n-    steps:\n-      - name: Checkout Arrow\n-        uses: actions/checkout@v3\n-        with:\n-          fetch-depth: 0\n-          submodules: recursive\n-      - name: Setup Python\n-        uses: actions/setup-python@v4\n-        with:\n-          python-version: 3.8\n-      - name: Setup Archery\n-        run: pip install -e dev/archery[docker]\n-      - name: Execute Docker Build\n-        run: archery docker run debian-go-cgo\n-      - name: Docker Push\n-        if: success() && github.event_name == 'push' && github.repository == 'apache/arrow'\n-        continue-on-error: true\n-        run: archery docker push debian-go-cgo\n-\n-\n-  docker_cgo_python:\n-    name: AMD64 Debian 11 GO ${{ matrix.go }} - CGO Python\n-    runs-on: ubuntu-latest\n-    if: ${{ !contains(github.event.pull_request.title, 'WIP') }}\n-    timeout-minutes: 15\n-    strategy:\n-      fail-fast: false\n-      matrix:\n-        go: [1.17, 1.18]\n-        include:\n-          - go: 1.17\n-            staticcheck: v0.2.2\n-          - go: 1.18\n-            staticcheck: latest\n-    env:\n-      GO: ${{ matrix.go }}\n-      STATICCHECK: ${{ matrix.staticcheck }}\n-    steps:\n-      - name: Checkout Arrow\n-        uses: actions/checkout@v3\n-        with:\n-          fetch-depth: 0\n-      - name: Setup Python\n-        uses: actions/setup-python@v4\n-        with:\n-          python-version: 3.8\n-      - name: Setup Archery\n-        run: pip install -e dev/archery[docker]\n-      - name: Execute Docker Build\n-        run: archery docker run debian-go-cgo-python\n-      - name: Docker Push\n-        if: success() && github.event_name == 'push' && github.repository == 'apache/arrow'\n-        continue-on-error: true\n-        run: archery docker push debian-go-cgo-python\n-\n-  windows:\n-    name: AMD64 Windows 2019 Go ${{ matrix.go }}\n-    runs-on: windows-2019\n-    if: ${{ !contains(github.event.pull_request.title, 'WIP') }}\n-    timeout-minutes: 15\n-    strategy:\n-      fail-fast: false\n-      matrix:\n-        go: [1.17, 1.18]\n-        include:\n-          - go: 1.17\n-            staticcheck: v0.2.2\n-          - go: 1.18\n-            staticcheck: latest\n-    steps:      \n-      - name: Checkout Arrow\n-        uses: actions/checkout@v3\n-        with:\n-          fetch-depth: 0\n-          submodules: recursive\n-      - name: Install go\n-        uses: actions/setup-go@v3\n-        with:\n-          go-version: ${{ matrix.go }}\n-          cache: true\n-          cache-dependency-path: go/go.sum          \n-      - name: Install staticcheck\n-        run: go install honnef.co/go/tools/cmd/staticcheck@${{ matrix.staticcheck }}\n-      - name: Build\n-        shell: bash\n-        run: ci/scripts/go_build.sh $(pwd)\n-      - name: Test\n-        shell: bash\n-        run: ci/scripts/go_test.sh $(pwd)\n-\n-  macos:\n-    name: AMD64 macOS 11 Go ${{ matrix.go }}\n-    runs-on: macos-latest\n-    if: ${{ !contains(github.event.pull_request.title, 'WIP') }}\n-    timeout-minutes: 15\n-    strategy:\n-      fail-fast: false\n-      matrix:\n-        go: [1.17, 1.18]\n-        include:\n-          - go: 1.17\n-            staticcheck: v0.2.2\n-          - go: 1.18\n-            staticcheck: latest\n-    steps:      \n-      - name: Checkout Arrow\n-        uses: actions/checkout@v3\n-        with:\n-          fetch-depth: 0\n-          submodules: recursive\n-      - name: Install go\n-        uses: actions/setup-go@v3\n-        with:\n-          go-version: ${{ matrix.go }}\n-          cache: true\n-          cache-dependency-path: go/go.sum\n-      - name: Install staticcheck\n-        run: go install honnef.co/go/tools/cmd/staticcheck@${{ matrix.staticcheck }}\n-      - name: Build\n-        shell: bash\n-        run: ci/scripts/go_build.sh $(pwd)\n-      - name: Test\n-        shell: bash\n-        run: ci/scripts/go_test.sh $(pwd)\n-\n-  macos-cgo:\n-    name: AMD64 macOS 11 Go ${{ matrix.go }} - CGO\n-    runs-on: macos-latest\n-    if: ${{ !contains(github.event.pull_request.title, 'WIP') }}\n-    timeout-minutes: 60\n-    strategy:\n-      fail-fast: false\n-      matrix:\n-        go: [1.17, 1.18]\n-        include:\n-          - go: 1.17\n-            staticcheck: v0.2.2\n-          - go: 1.18\n-            staticcheck: latest\n-    env:\n-      ARROW_GO_TESTCGO: \"1\"\n-    steps:      \n-      - name: Checkout Arrow\n-        uses: actions/checkout@v3\n-        with:\n-          fetch-depth: 0\n-          submodules: recursive\n-      - name: Install go\n-        uses: actions/setup-go@v3\n-        with:\n-          go-version: ${{ matrix.go }}\n-          cache: true\n-          cache-dependency-path: go/go.sum\n-      - name: Brew Install Arrow\n-        shell: bash\n-        run: brew install apache-arrow\n-      - name: Install staticcheck\n-        run: go install honnef.co/go/tools/cmd/staticcheck@${{ matrix.staticcheck }}\n-      - name: Build\n-        shell: bash\n-        run: ci/scripts/go_build.sh $(pwd)\n-      - name: Test\n-        shell: bash\n-        run: ci/scripts/go_test.sh $(pwd)\n-\n-  windows-mingw:\n-    name: AMD64 Windows MinGW ${{ matrix.mingw-n-bits }} CGO\n-    runs-on: windows-2019\n-    if: ${{ !contains(github.event.pull_request.title, 'WIP') }}\n-    timeout-minutes: 60\n-    strategy:\n-      fail-fast: false\n-      matrix:\n-        mingw-n-bits:\n-          #- 32 runtime handling for CGO needs 64-bit currently\n-          - 64\n-    env:\n-      ARROW_GO_TESTCGO: \"1\"\n-      MINGW_LINT: \"1\"\n-    steps:\n-      - name: Disable Crash Dialogs\n-        run: |\n-          reg add `\n-            \"HKCU\\SOFTWARE\\Microsoft\\Windows\\Windows Error Reporting\" `\n-            /v DontShowUI `\n-            /t REG_DWORD `\n-            /d 1 `\n-            /f\n-      - name: Checkout Arrow\n-        uses: actions/checkout@v3\n-        with:\n-          fetch-depth: 0\n-          submodules: recursive\n-      - uses: msys2/setup-msys2@v2\n-        with:\n-          msystem: MINGW${{ matrix.mingw-n-bits }}\n-          update: true\n-      - name: Setup MSYS2\n-        shell: msys2 {0}\n-        run: |\n-          ci/scripts/msys2_setup.sh cgo\n-      - name: Update CGO Env vars\n-        shell: msys2 {0}\n-        run: |\n-          echo \"CGO_CPPFLAGS=-I$(cygpath --windows ${MINGW_PREFIX}/include)\" >> $GITHUB_ENV\n-          echo \"CGO_LDFLAGS=-g -O2 -L$(cygpath --windows ${MINGW_PREFIX}/lib) -L$(cygpath --windows ${MINGW_PREFIX}/bin)\" >> $GITHUB_ENV\n-          echo \"MINGW_PREFIX=$(cygpath --windows ${MINGW_PREFIX})\" >> $GITHUB_ENV\n-      - name: Install go\n-        uses: actions/setup-go@v3\n-        with:\n-          go-version: '1.18'\n-          cache: true\n-          cache-dependency-path: go/go.sum\n-      - name: Install staticcheck\n-        run: go install honnef.co/go/tools/cmd/staticcheck@latest\n-      - name: Build\n-        shell: bash\n-        run: ci/scripts/go_build.sh $(pwd)\n-      - name: Test\n-        shell: bash\n-        run: ci/scripts/go_test.sh $(pwd)\n+# Licensed to the Apache Software Foundation (ASF) under one\r\n\nReview Comment:\n   It seems that all lines are changed in this file. Is it intentional?\n\n\n\n##########\n.github/workflows/cpp.yml:\n##########\n@@ -45,11 +45,12 @@ concurrency:\n   group: ${{ github.repository }}-${{ github.head_ref || github.sha }}-${{ github.workflow }}\n   cancel-in-progress: true\n \n+permissions:\n+  contents: read\n+\n env:\n   ARROW_ENABLE_TIMING_TESTS: OFF\n   DOCKER_VOLUME_PREFIX: \".docker/\"\n-  ARCHERY_DOCKER_USER: ${{ secrets.DOCKERHUB_USER }}\n-  ARCHERY_DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}\n\nReview Comment:\n   We may need them for `archery docker  run` to avoid pull rate limit: https://docs.docker.com/docker-hub/download-rate-limit/\r\n   \r\n   > For anonymous users, the rate limit is set to 100 pulls per 6 hours per IP address. For [authenticated](https://docs.docker.com/docker-hub/download-rate-limit/#how-do-i-authenticate-pull-requests) users, it is 200 pulls per 6 hour period.\r\n   \r\n   If it's not a problem for us, we don't need to use them.\n\n\n\n##########\n.github/workflows/r.yml:\n##########\n@@ -1,325 +1,332 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-\n-name: R\n-\n-on:\n-  push:\n-    paths:\n-      - \".github/workflows/r.yml\"\n-      - \"ci/scripts/r_*.sh\"\n-      - \"ci/scripts/cpp_*.sh\"\n-      - \"ci/scripts/PKGBUILD\"\n-      - \"ci/etc/rprofile\"\n-      - \"ci/docker/**\"\n-      - \"cpp/**\"\n-      - \"r/**\"\n-  pull_request:\n-    paths:\n-      - \".github/workflows/r.yml\"\n-      - \"ci/scripts/r_*.sh\"\n-      - \"ci/scripts/cpp_*.sh\"\n-      - \"ci/scripts/PKGBUILD\"\n-      - \"ci/etc/rprofile\"\n-      - \"ci/docker/**\"\n-      - \"cpp/**\"\n-      - \"r/**\"\n-\n-concurrency:\n-  group: ${{ github.repository }}-${{ github.head_ref || github.sha }}-${{ github.workflow }}\n-  cancel-in-progress: true\n-\n-env:\n-  DOCKER_VOLUME_PREFIX: \".docker/\"\n-  ARCHERY_DOCKER_USER: ${{ secrets.DOCKERHUB_USER }}\n-  ARCHERY_DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}\n-\n-jobs:\n-  ubuntu:\n-    name: AMD64 Ubuntu ${{ matrix.ubuntu }} R ${{ matrix.r }} Force-Tests ${{ matrix.force-tests }}\n-    runs-on: ubuntu-latest\n-    if: ${{ !contains(github.event.pull_request.title, 'WIP') }}\n-    timeout-minutes: 75\n-    strategy:\n-      fail-fast: false\n-      matrix:\n-        r: [\"4.2\"]\n-        ubuntu: [20.04]\n-        force-tests: [\"true\", \"false\"]\n-    env:\n-      R: ${{ matrix.r }}\n-      UBUNTU: ${{ matrix.ubuntu }}\n-    steps:\n-      - name: Checkout Arrow\n-        uses: actions/checkout@v3\n-        with:\n-          fetch-depth: 0\n-      - name: Cache Docker Volumes\n-        uses: actions/cache@v2\n-        with:\n-          path: .docker\n-          # As this key is identical on both matrix builds only one will be able to successfully cache,\n-          # this is fine as there are no differences in the build\n-          key: ubuntu-${{ matrix.ubuntu }}-r-${{ matrix.r }}-${{ hashFiles('cpp/src/**/*.cc','cpp/src/**/*.h)') }}-${{ github.run_id }}\n-          restore-keys: |\n-            ubuntu-${{ matrix.ubuntu }}-r-${{ matrix.r }}-${{ hashFiles('cpp/src/**/*.cc','cpp/src/**/*.h)') }}-\n-            ubuntu-${{ matrix.ubuntu }}-r-${{ matrix.r }}-\n-      - name: Check pkgdown reference sections\n-        run: ci/scripts/r_pkgdown_check.sh\n-      - name: Setup Python\n-        uses: actions/setup-python@v4\n-        with:\n-          python-version: 3.8\n-      - name: Setup Archery\n-        run: pip install -e dev/archery[docker]\n-      - name: Execute Docker Build\n-        run: |\n-          sudo sysctl -w kernel.core_pattern=\"core.%e.%p\"\n-          ulimit -c unlimited\n-          # Setting a non-default and non-probable Marquesas French Polynesia time\n-          # it has both with a .45 offset and very very few people who live there.\n-          archery docker run -e TZ=MART -e ARROW_R_FORCE_TESTS=${{ matrix.force-tests }} ubuntu-r\n-      - name: Dump install logs\n-        run: cat r/check/arrow.Rcheck/00install.out\n-        if: always()\n-      - name: Dump test logs\n-        run: cat r/check/arrow.Rcheck/tests/testthat.Rout*\n-        if: always()\n-      - name: Save the test output\n-        if: always()\n-        uses: actions/upload-artifact@v2\n-        with:\n-          name: test-output\n-          path: r/check/arrow.Rcheck/tests/testthat.Rout*\n-      - name: Docker Push\n-        if: success() && github.event_name == 'push' && github.repository == 'apache/arrow'\n-        continue-on-error: true\n-        run: archery docker push ubuntu-r\n-\n-  bundled:\n-    name: \"${{ matrix.config.org }}/${{ matrix.config.image }}:${{ matrix.config.tag }}\"\n-    runs-on: ubuntu-latest\n-    if: ${{ !contains(github.event.pull_request.title, 'WIP') }}\n-    timeout-minutes: 60\n-    strategy:\n-      fail-fast: false\n-      matrix:\n-        config:\n-          - { org: \"rstudio\", image: \"r-base\", tag: \"4.0-centos7\", devtoolset: \"8\" }\n-          - { org: \"rhub\", image: \"debian-gcc-devel\", tag: \"latest\", devtoolset: \"\" }\n-    env:\n-      R_ORG: ${{ matrix.config.org }}\n-      R_IMAGE: ${{ matrix.config.image }}\n-      R_TAG: ${{ matrix.config.tag }}\n-      DEVTOOLSET_VERSION: ${{ matrix.config.devtoolset }}\n-    steps:\n-      - name: Checkout Arrow\n-        uses: actions/checkout@v3\n-        with:\n-          fetch-depth: 0\n-      - name: Setup Python\n-        uses: actions/setup-python@v4\n-        with:\n-          python-version: 3.8\n-      - name: Setup Archery\n-        run: pip install -e dev/archery[docker]\n-      - name: Execute Docker Build\n-        run: |\n-          sudo sysctl -w kernel.core_pattern=\"core.%e.%p\"\n-          ulimit -c unlimited\n-          # Don't set a TZ here to test that case. These builds will have the following warning in them:\n-          #   System has not been booted with systemd as init system (PID 1). Can't operate.\n-          #   Failed to connect to bus: Host is down\n-          archery docker run -e TZ=\"\" r\n-      - name: Dump install logs\n-        run: cat r/check/arrow.Rcheck/00install.out\n-        if: always()\n-      - name: Dump test logs\n-        run: cat r/check/arrow.Rcheck/tests/testthat.Rout*\n-        if: always()\n-      - name: Save the test output\n-        if: always()\n-        uses: actions/upload-artifact@v2\n-        with:\n-          name: test-output\n-          path: r/check/arrow.Rcheck/tests/testthat.Rout*\n-      - name: Docker Push\n-        if: success() && github.event_name == 'push' && github.repository == 'apache/arrow'\n-        continue-on-error: true\n-        run: archery docker push r\n-\n-  windows-cpp:\n-    name: AMD64 Windows C++ RTools ${{ matrix.config.rtools }} ${{ matrix.config.arch }}\n-    runs-on: windows-2019\n-    if: ${{ !contains(github.event.pull_request.title, 'WIP') }}\n-    timeout-minutes: 90\n-    strategy:\n-      fail-fast: false\n-      matrix:\n-        config:\n-        - { rtools: 40, arch: 'mingw32' }\n-        - { rtools: 40, arch: 'mingw64' }\n-        - { rtools: 40, arch: 'ucrt64' }\n-    steps:\n-      - run: git config --global core.autocrlf false\n-      - name: Checkout Arrow\n-        uses: actions/checkout@v3\n-        with:\n-          fetch-depth: 0\n-      - name: Setup ccache\n-        shell: bash\n-        run: |\n-          ci/scripts/ccache_setup.sh\n-          echo \"CCACHE_DIR=$(cygpath --absolute --windows ccache)\" >> $GITHUB_ENV\n-      - name: Cache ccache\n-        uses: actions/cache@v2\n-        with:\n-          path: ccache\n-          key: r-${{ matrix.config.rtools }}-ccache-mingw-${{ matrix.config.arch }}-${{ hashFiles('cpp/src/**/*.cc','cpp/src/**/*.h)') }}-${{ github.run_id }}\n-          restore-keys: |\n-            r-${{ matrix.config.rtools }}-ccache-mingw-${{ matrix.config.arch }}-${{ hashFiles('cpp/src/**/*.cc','cpp/src/**/*.h)') }}-\n-            r-${{ matrix.config.rtools }}-ccache-mingw-${{ matrix.config.arch }}-\n-      - uses: r-lib/actions/setup-r@v2\n-        with:\n-          r-version: \"4.1\"\n-          rtools-version: 40\n-          Ncpus: 2\n-      - name: Build Arrow C++\n-        shell: bash\n-        env:\n-          RTOOLS_VERSION: ${{ matrix.config.rtools }}\n-          MINGW_ARCH: ${{ matrix.config.arch }}\n-        run: ci/scripts/r_windows_build.sh\n-      - name: Rename libarrow.zip\n-        # So that they're unique when multiple are downloaded in the next step\n-        shell: bash\n-        run: mv libarrow.zip libarrow-rtools${{ matrix.config.rtools }}-${{ matrix.config.arch }}.zip\n-      - uses: actions/upload-artifact@v1\n-        with:\n-          name: libarrow-rtools${{ matrix.config.rtools }}-${{ matrix.config.arch }}.zip\n-          path: libarrow-rtools${{ matrix.config.rtools }}-${{ matrix.config.arch }}.zip\n-\n-  windows-r:\n-    needs: [windows-cpp]\n-    name: AMD64 Windows R ${{ matrix.config.rversion }} RTools ${{ matrix.config.rtools }}\n-    runs-on: windows-2019\n-    if: ${{ !contains(github.event.pull_request.title, 'WIP') }}\n-    timeout-minutes: 75\n-    strategy:\n-      fail-fast: false\n-      matrix:\n-        config:\n-        - { rtools: 40, rversion: \"4.1\" }\n-        - { rtools: 42, rversion: \"4.2\" }\n-        - { rtools: 42, rversion: \"devel\" }\n-    env:\n-      ARROW_R_CXXFLAGS: \"-Werror\"\n-      _R_CHECK_TESTS_NLINES_: 0\n-    steps:\n-      - run: git config --global core.autocrlf false\n-      - name: Checkout Arrow\n-        uses: actions/checkout@v3\n-        with:\n-          fetch-depth: 0\n-      - run: mkdir r/windows\n-      - name: Download artifacts\n-        if: ${{ matrix.config.rtools != 42 }}\n-        uses: actions/download-artifact@v2\n-        with:\n-          name: libarrow-rtools${{ matrix.config.rtools }}-mingw32.zip\n-          path: r/windows\n-      - name: Download artifacts\n-        if: ${{ matrix.config.rtools !=42 }}\n-        uses: actions/download-artifact@v2\n-        with:\n-          name: libarrow-rtools${{ matrix.config.rtools }}-mingw64.zip\n-          path: r/windows\n-      - name: Download artifacts\n-        if: ${{ matrix.config.rtools == 42 }}\n-        uses: actions/download-artifact@v2\n-        with:\n-          name: libarrow-rtools40-ucrt64.zip\n-          path: r/windows\n-      - name: Unzip and rezip libarrows\n-        shell: bash\n-        run: |\n-          cd r/windows\n-          ls *.zip | xargs -n 1 unzip -uo\n-          rm -rf *.zip\n-      - uses: r-lib/actions/setup-r@v2\n-        with:\n-          r-version: ${{ matrix.config.rversion }}\n-          rtools-version: ${{ matrix.config.rtools }}\n-          Ncpus: 2\n-      - uses: r-lib/actions/setup-r-dependencies@v2\n-        env:\n-          GITHUB_PAT: \"${{ github.token }}\"\n-        with:\n-          # For some arcane reason caching does not work on the windows runners\n-          # most likely due to https://github.com/actions/cache/issues/815\n-          cache: false\n-          working-directory: 'r'\n-          extra-packages: |\n-            any::rcmdcheck\n-      - name: Check\n-        shell: Rscript {0}\n-        run: |\n-          # Because we do R CMD build and r/windows is in .Rbuildignore,\n-          # assemble the libarrow.zip file and pass it as an env var\n-          setwd(\"r/windows\")\n-          zip(\"libarrow.zip\", \".\")\n-          setwd(\"..\")\n-\n-          Sys.setenv(\n-            RWINLIB_LOCAL = file.path(Sys.getenv(\"GITHUB_WORKSPACE\"), \"r\", \"windows\", \"libarrow.zip\"),\n-            MAKEFLAGS = paste0(\"-j\", parallel::detectCores()),\n-            ARROW_R_DEV = TRUE,\n-            \"_R_CHECK_FORCE_SUGGESTS_\" = FALSE\n-          )\n-          rcmdcheck::rcmdcheck(\".\",\n-            build_args = '--no-build-vignettes',\n-            args = c('--no-manual', '--as-cran', '--ignore-vignettes', '--run-donttest'),\n-            error_on = 'warning',\n-            check_dir = 'check',\n-            timeout = 3600\n-          )\n-      - name: Run lintr\n-        if: ${{ matrix.config.rversion == '4.2' }}\n-        env:\n-          NOT_CRAN: \"true\"\n-          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n-        shell: Rscript {0}\n-        working-directory: r\n-        run: |\n-          Sys.setenv(\n-            RWINLIB_LOCAL = file.path(Sys.getenv(\"GITHUB_WORKSPACE\"), \"r\", \"windows\", \"libarrow.zip\"),\n-            MAKEFLAGS = paste0(\"-j\", parallel::detectCores()),\n-            ARROW_R_DEV = TRUE,\n-            \"_R_CHECK_FORCE_SUGGESTS_\" = FALSE\n-          )\n-          # we use pak for package installation since it is faster, safer and more convenient\n-          pak::local_install()\n-          pak::pak(\"lintr\")\n-          lintr::expect_lint_free()\n-      - name: Dump install logs\n-        shell: cmd\n-        run: cat r/check/arrow.Rcheck/00install.out\n-        if: always()\n-      - name: Dump test logs\n-        shell: bash\n-        run: find r/check -name 'testthat.Rout*' -exec cat '{}' \\; || true\n-        if: always()\n+# Licensed to the Apache Software Foundation (ASF) under one\r\n\nReview Comment:\n   ditto.\n\n\n\n##########\n.github/workflows/dev_pr.yml:\n##########\n@@ -41,7 +46,6 @@ jobs:\n \n       - name: Comment JIRA link\n         if: |\n-          github.event_name == 'pull_request_target' &&\n             (github.event.action == 'opened' ||\n              github.event.action == 'edited')\n\nReview Comment:\n   Could you unindent them?\n\n\n\n",
                    "created": "2022-09-20T21:07:05.974+0000",
                    "updated": "2022-09-20T21:07:05.974+0000",
                    "started": "2022-09-20T21:07:05.974+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "810520",
                    "issueId": "13480161"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13480161/worklog/810675",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "assignUser commented on code in PR #14155:\nURL: https://github.com/apache/arrow/pull/14155#discussion_r976339885\n\n\n##########\n.github/workflows/go.yml:\n##########\n@@ -1,318 +1,326 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-\n-name: Go\n-\n-on:\n-  push:\n-    paths:\n-      - '.github/workflows/go.yml'\n-      - 'ci/docker/*_go.dockerfile'\n-      - 'ci/scripts/go_*'\n-      - 'go/**'\n-  pull_request:\n-    paths:\n-      - '.github/workflows/go.yml'\n-      - 'ci/docker/*_go.dockerfile'\n-      - 'ci/docker/**'\n-      - 'ci/scripts/go_*'\n-      - 'go/**'\n-\n-concurrency:\n-  group: ${{ github.repository }}-${{ github.head_ref || github.sha }}-${{ github.workflow }}\n-  cancel-in-progress: true\n-\n-env:\n-  ARCHERY_DOCKER_USER: ${{ secrets.DOCKERHUB_USER }}\n-  ARCHERY_DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}\n-\n-jobs:\n-\n-  docker:\n-    name: AMD64 Debian 11 Go ${{ matrix.go }}\n-    runs-on: ubuntu-latest\n-    if: ${{ !contains(github.event.pull_request.title, 'WIP') }}\n-    timeout-minutes: 15\n-    strategy:\n-      fail-fast: false\n-      matrix:\n-        go: [1.17, 1.18]\n-        include:\n-          - go: 1.17\n-            staticcheck: v0.2.2\n-          - go: 1.18\n-            staticcheck: latest\n-    env:\n-      GO: ${{ matrix.go }}\n-      STATICCHECK: ${{ matrix.staticcheck }}\n-    steps:\n-      - name: Checkout Arrow\n-        uses: actions/checkout@v3\n-        with:\n-          fetch-depth: 0\n-          submodules: recursive\n-      - name: Setup Python\n-        uses: actions/setup-python@v4\n-        with:\n-          python-version: 3.8\n-      - name: Setup Archery\n-        run: pip install -e dev/archery[docker]\n-      - name: Execute Docker Build\n-        run: archery docker run debian-go\n-      - name: Docker Push\n-        if: success() && github.event_name == 'push' && github.repository == 'apache/arrow'\n-        continue-on-error: true\n-        run: archery docker push debian-go\n-\n-  docker_cgo:\n-    name: AMD64 Debian 11 GO ${{ matrix.go }} - CGO\n-    runs-on: ubuntu-latest\n-    if: ${{ !contains(github.event.pull_request.title, 'WIP') }}\n-    timeout-minutes: 15\n-    strategy:\n-      fail-fast: false\n-      matrix:\n-        go: [1.17, 1.18]\n-        include:\n-          - go: 1.17\n-            staticcheck: v0.2.2\n-          - go: 1.18\n-            staticcheck: latest\n-    env:\n-      GO: ${{ matrix.go }}\n-      STATICCHECK: ${{ matrix.staticcheck }}\n-    steps:\n-      - name: Checkout Arrow\n-        uses: actions/checkout@v3\n-        with:\n-          fetch-depth: 0\n-          submodules: recursive\n-      - name: Setup Python\n-        uses: actions/setup-python@v4\n-        with:\n-          python-version: 3.8\n-      - name: Setup Archery\n-        run: pip install -e dev/archery[docker]\n-      - name: Execute Docker Build\n-        run: archery docker run debian-go-cgo\n-      - name: Docker Push\n-        if: success() && github.event_name == 'push' && github.repository == 'apache/arrow'\n-        continue-on-error: true\n-        run: archery docker push debian-go-cgo\n-\n-\n-  docker_cgo_python:\n-    name: AMD64 Debian 11 GO ${{ matrix.go }} - CGO Python\n-    runs-on: ubuntu-latest\n-    if: ${{ !contains(github.event.pull_request.title, 'WIP') }}\n-    timeout-minutes: 15\n-    strategy:\n-      fail-fast: false\n-      matrix:\n-        go: [1.17, 1.18]\n-        include:\n-          - go: 1.17\n-            staticcheck: v0.2.2\n-          - go: 1.18\n-            staticcheck: latest\n-    env:\n-      GO: ${{ matrix.go }}\n-      STATICCHECK: ${{ matrix.staticcheck }}\n-    steps:\n-      - name: Checkout Arrow\n-        uses: actions/checkout@v3\n-        with:\n-          fetch-depth: 0\n-      - name: Setup Python\n-        uses: actions/setup-python@v4\n-        with:\n-          python-version: 3.8\n-      - name: Setup Archery\n-        run: pip install -e dev/archery[docker]\n-      - name: Execute Docker Build\n-        run: archery docker run debian-go-cgo-python\n-      - name: Docker Push\n-        if: success() && github.event_name == 'push' && github.repository == 'apache/arrow'\n-        continue-on-error: true\n-        run: archery docker push debian-go-cgo-python\n-\n-  windows:\n-    name: AMD64 Windows 2019 Go ${{ matrix.go }}\n-    runs-on: windows-2019\n-    if: ${{ !contains(github.event.pull_request.title, 'WIP') }}\n-    timeout-minutes: 15\n-    strategy:\n-      fail-fast: false\n-      matrix:\n-        go: [1.17, 1.18]\n-        include:\n-          - go: 1.17\n-            staticcheck: v0.2.2\n-          - go: 1.18\n-            staticcheck: latest\n-    steps:      \n-      - name: Checkout Arrow\n-        uses: actions/checkout@v3\n-        with:\n-          fetch-depth: 0\n-          submodules: recursive\n-      - name: Install go\n-        uses: actions/setup-go@v3\n-        with:\n-          go-version: ${{ matrix.go }}\n-          cache: true\n-          cache-dependency-path: go/go.sum          \n-      - name: Install staticcheck\n-        run: go install honnef.co/go/tools/cmd/staticcheck@${{ matrix.staticcheck }}\n-      - name: Build\n-        shell: bash\n-        run: ci/scripts/go_build.sh $(pwd)\n-      - name: Test\n-        shell: bash\n-        run: ci/scripts/go_test.sh $(pwd)\n-\n-  macos:\n-    name: AMD64 macOS 11 Go ${{ matrix.go }}\n-    runs-on: macos-latest\n-    if: ${{ !contains(github.event.pull_request.title, 'WIP') }}\n-    timeout-minutes: 15\n-    strategy:\n-      fail-fast: false\n-      matrix:\n-        go: [1.17, 1.18]\n-        include:\n-          - go: 1.17\n-            staticcheck: v0.2.2\n-          - go: 1.18\n-            staticcheck: latest\n-    steps:      \n-      - name: Checkout Arrow\n-        uses: actions/checkout@v3\n-        with:\n-          fetch-depth: 0\n-          submodules: recursive\n-      - name: Install go\n-        uses: actions/setup-go@v3\n-        with:\n-          go-version: ${{ matrix.go }}\n-          cache: true\n-          cache-dependency-path: go/go.sum\n-      - name: Install staticcheck\n-        run: go install honnef.co/go/tools/cmd/staticcheck@${{ matrix.staticcheck }}\n-      - name: Build\n-        shell: bash\n-        run: ci/scripts/go_build.sh $(pwd)\n-      - name: Test\n-        shell: bash\n-        run: ci/scripts/go_test.sh $(pwd)\n-\n-  macos-cgo:\n-    name: AMD64 macOS 11 Go ${{ matrix.go }} - CGO\n-    runs-on: macos-latest\n-    if: ${{ !contains(github.event.pull_request.title, 'WIP') }}\n-    timeout-minutes: 60\n-    strategy:\n-      fail-fast: false\n-      matrix:\n-        go: [1.17, 1.18]\n-        include:\n-          - go: 1.17\n-            staticcheck: v0.2.2\n-          - go: 1.18\n-            staticcheck: latest\n-    env:\n-      ARROW_GO_TESTCGO: \"1\"\n-    steps:      \n-      - name: Checkout Arrow\n-        uses: actions/checkout@v3\n-        with:\n-          fetch-depth: 0\n-          submodules: recursive\n-      - name: Install go\n-        uses: actions/setup-go@v3\n-        with:\n-          go-version: ${{ matrix.go }}\n-          cache: true\n-          cache-dependency-path: go/go.sum\n-      - name: Brew Install Arrow\n-        shell: bash\n-        run: brew install apache-arrow\n-      - name: Install staticcheck\n-        run: go install honnef.co/go/tools/cmd/staticcheck@${{ matrix.staticcheck }}\n-      - name: Build\n-        shell: bash\n-        run: ci/scripts/go_build.sh $(pwd)\n-      - name: Test\n-        shell: bash\n-        run: ci/scripts/go_test.sh $(pwd)\n-\n-  windows-mingw:\n-    name: AMD64 Windows MinGW ${{ matrix.mingw-n-bits }} CGO\n-    runs-on: windows-2019\n-    if: ${{ !contains(github.event.pull_request.title, 'WIP') }}\n-    timeout-minutes: 60\n-    strategy:\n-      fail-fast: false\n-      matrix:\n-        mingw-n-bits:\n-          #- 32 runtime handling for CGO needs 64-bit currently\n-          - 64\n-    env:\n-      ARROW_GO_TESTCGO: \"1\"\n-      MINGW_LINT: \"1\"\n-    steps:\n-      - name: Disable Crash Dialogs\n-        run: |\n-          reg add `\n-            \"HKCU\\SOFTWARE\\Microsoft\\Windows\\Windows Error Reporting\" `\n-            /v DontShowUI `\n-            /t REG_DWORD `\n-            /d 1 `\n-            /f\n-      - name: Checkout Arrow\n-        uses: actions/checkout@v3\n-        with:\n-          fetch-depth: 0\n-          submodules: recursive\n-      - uses: msys2/setup-msys2@v2\n-        with:\n-          msystem: MINGW${{ matrix.mingw-n-bits }}\n-          update: true\n-      - name: Setup MSYS2\n-        shell: msys2 {0}\n-        run: |\n-          ci/scripts/msys2_setup.sh cgo\n-      - name: Update CGO Env vars\n-        shell: msys2 {0}\n-        run: |\n-          echo \"CGO_CPPFLAGS=-I$(cygpath --windows ${MINGW_PREFIX}/include)\" >> $GITHUB_ENV\n-          echo \"CGO_LDFLAGS=-g -O2 -L$(cygpath --windows ${MINGW_PREFIX}/lib) -L$(cygpath --windows ${MINGW_PREFIX}/bin)\" >> $GITHUB_ENV\n-          echo \"MINGW_PREFIX=$(cygpath --windows ${MINGW_PREFIX})\" >> $GITHUB_ENV\n-      - name: Install go\n-        uses: actions/setup-go@v3\n-        with:\n-          go-version: '1.18'\n-          cache: true\n-          cache-dependency-path: go/go.sum\n-      - name: Install staticcheck\n-        run: go install honnef.co/go/tools/cmd/staticcheck@latest\n-      - name: Build\n-        shell: bash\n-        run: ci/scripts/go_build.sh $(pwd)\n-      - name: Test\n-        shell: bash\n-        run: ci/scripts/go_test.sh $(pwd)\n+# Licensed to the Apache Software Foundation (ASF) under one\r\n\nReview Comment:\n   CRLF  shenanigans on windows, sorry, will fix\n\n\n\n",
                    "created": "2022-09-21T10:31:06.609+0000",
                    "updated": "2022-09-21T10:31:06.609+0000",
                    "started": "2022-09-21T10:31:06.608+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "810675",
                    "issueId": "13480161"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13480161/worklog/811171",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "assignUser commented on code in PR #14155:\nURL: https://github.com/apache/arrow/pull/14155#discussion_r977545534\n\n\n##########\n.github/workflows/cpp.yml:\n##########\n@@ -45,11 +45,12 @@ concurrency:\n   group: ${{ github.repository }}-${{ github.head_ref || github.sha }}-${{ github.workflow }}\n   cancel-in-progress: true\n \n+permissions:\n+  contents: read\n+\n env:\n   ARROW_ENABLE_TIMING_TESTS: OFF\n   DOCKER_VOLUME_PREFIX: \".docker/\"\n-  ARCHERY_DOCKER_USER: ${{ secrets.DOCKERHUB_USER }}\n-  ARCHERY_DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}\n\nReview Comment:\n   I have added the secrets to the run stages to, I don't think it is a huge problem but it might cause spurious CI failures and the fix is easy \ud83d\udc4d \n\n\n\n##########\n.github/workflows/cpp.yml:\n##########\n@@ -45,11 +45,12 @@ concurrency:\n   group: ${{ github.repository }}-${{ github.head_ref || github.sha }}-${{ github.workflow }}\n   cancel-in-progress: true\n \n+permissions:\n+  contents: read\n+\n env:\n   ARROW_ENABLE_TIMING_TESTS: OFF\n   DOCKER_VOLUME_PREFIX: \".docker/\"\n-  ARCHERY_DOCKER_USER: ${{ secrets.DOCKERHUB_USER }}\n-  ARCHERY_DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}\n\nReview Comment:\n   I have added the secrets to the run stages too, I don't think it is a huge problem but it might cause spurious CI failures and the fix is easy \ud83d\udc4d \n\n\n\n",
                    "created": "2022-09-22T11:35:55.170+0000",
                    "updated": "2022-09-22T11:35:55.170+0000",
                    "started": "2022-09-22T11:35:55.170+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "811171",
                    "issueId": "13480161"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13480161/worklog/811388",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou merged PR #14155:\nURL: https://github.com/apache/arrow/pull/14155\n\n\n",
                    "created": "2022-09-22T20:31:07.095+0000",
                    "updated": "2022-09-22T20:31:07.095+0000",
                    "started": "2022-09-22T20:31:07.094+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "811388",
                    "issueId": "13480161"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13480161/worklog/811480",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on code in PR #14155:\nURL: https://github.com/apache/arrow/pull/14155#discussion_r978255791\n\n\n##########\n.github/workflows/dev_pr.yml:\n##########\n@@ -78,10 +80,9 @@ jobs:\n \n       - name: Assign GitHub labels\n         if: |\n-          github.event_name == 'pull_request_target' &&\n-            (github.event.action == 'opened' ||\n-             github.event.action == 'synchronize')\n-        uses: actions/labeler@2.2.0\n+          (github.event.action == 'opened' ||\n+           github.event.action == 'synchronize')\n+        uses: actions/labeler@4\n\nReview Comment:\n   We need to use `@v4` here...\n\n\n\n",
                    "created": "2022-09-23T04:25:17.064+0000",
                    "updated": "2022-09-23T04:25:17.064+0000",
                    "started": "2022-09-23T04:25:17.063+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "811480",
                    "issueId": "13480161"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13480161/worklog/811555",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on PR #14155:\nURL: https://github.com/apache/arrow/pull/14155#issuecomment-1256046987\n\n   Benchmark runs are scheduled for baseline = 44ae8523ad06b75dafa701e9ce1e70b8459cad1c and contender = 36928ec32ecf1acbb58bbdcf247c49c355c2df19. 36928ec32ecf1acbb58bbdcf247c49c355c2df19 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/8c3a4e7fd1b54fe8850e9b2f442b9f2d...89c110dc59ab43ba8819d08188e322e6/)\n   [Failed :arrow_down:1.02% :arrow_up:0.07%] [test-mac-arm](https://conbench.ursa.dev/compare/runs/6433e37bd00e430a9f29e73069e2fa8d...d4d45368d1354e6f89513a422008108e/)\n   [Failed :arrow_down:0.82% :arrow_up:0.0%] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/874317047ed24e5da067030df179c145...3812a7b5ffb54ae49f970d035425001e/)\n   [Finished :arrow_down:0.25% :arrow_up:0.04%] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/513a5ec5df59474195a6c9c3e6161337...32fda7092a1d4cd6a3090fa7218fcdc1/)\n   Buildkite builds:\n   [Finished] [`36928ec3` ec2-t3-xlarge-us-east-2](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ec2-t3-xlarge-us-east-2/builds/1551)\n   [Failed] [`36928ec3` test-mac-arm](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-test-mac-arm/builds/1568)\n   [Failed] [`36928ec3` ursa-i9-9960x](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-i9-9960x/builds/1551)\n   [Finished] [`36928ec3` ursa-thinkcentre-m75q](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-thinkcentre-m75q/builds/1565)\n   [Finished] [`44ae8523` ec2-t3-xlarge-us-east-2](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ec2-t3-xlarge-us-east-2/builds/1550)\n   [Failed] [`44ae8523` test-mac-arm](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-test-mac-arm/builds/1567)\n   [Failed] [`44ae8523` ursa-i9-9960x](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-i9-9960x/builds/1550)\n   [Finished] [`44ae8523` ursa-thinkcentre-m75q](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-thinkcentre-m75q/builds/1564)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python, R. Runs only benchmarks with cloud = True\n   test-mac-arm: Supported benchmark langs: C++, Python, R\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n",
                    "created": "2022-09-23T10:32:22.639+0000",
                    "updated": "2022-09-23T10:32:22.639+0000",
                    "started": "2022-09-23T10:32:22.639+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "811555",
                    "issueId": "13480161"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 7800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@1c5ae1d[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@9aed5d[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1d3f2bb3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@4a98cd4c[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@194a2545[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1e1dc89e[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7a1b1a5d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@76e54aff[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3e4d296b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@4ee45f04[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6c8f6d77[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@306170ab[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 7800,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Sep 22 20:31:22 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-09-22T20:31:22.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-17621/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2022-09-05T16:24:02.000+0000",
        "updated": "2022-09-23T10:32:22.000+0000",
        "timeoriginalestimate": null,
        "description": "Set minimal permissions for token, check for out-dated actions, pin shas etc.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 7800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[CI] Audit workflows",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13480161/comment/17608410",
                    "id": "17608410",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "body": "Issue resolved by pull request 14155\n[https://github.com/apache/arrow/pull/14155]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "created": "2022-09-22T20:31:22.312+0000",
                    "updated": "2022-09-22T20:31:22.312+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z18br4:",
        "customfield_12314139": null
    }
}