{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13247714",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247714",
    "key": "ARROW-6063",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334621",
                "id": "12334621",
                "name": "FlightRPC"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 12000,
            "total": 12000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 12000,
            "total": 12000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6063/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 22,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247714/worklog/301258",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lihalite commented on pull request #5196: ARROW-6063: [FlightRPC] implement half-closed semantics for DoPut\nURL: https://github.com/apache/arrow/pull/5196\n \n \n   Implements [ARROW-6063](https://issues.apache.org/jira/browse/ARROW-6063) for C++/Python. In C++, gRPC reads are not thread-safe with respect to each other, but in DoPut, closing the writer (which was the only way for the client to indicate that it was done writing) would also execute reads (to prevent gRPC from hanging due to unread messages). This meant there was no way to asynchronously read application metadata during a DoPut.\r\n   \r\n   By explicitly introducing a \"done writing\" operation, the server can be notified that the client is done writing and shut down its side of the call, which then unblocks the read side of the client. This lets us run a background thread on the client to read from the channel, and block closing the reader/writer until the background thread is unblocked (by the server closing its side of the call).\r\n   \r\n   Personal Travis: https://travis-ci.com/lihalite/arrow/builds/124584278\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-26T13:48:55.832+0000",
                    "updated": "2019-08-26T13:48:55.832+0000",
                    "started": "2019-08-26T13:48:55.831+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "301258",
                    "issueId": "13247714"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247714/worklog/301802",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5196: ARROW-6063: [FlightRPC] implement half-closed semantics for DoPut\nURL: https://github.com/apache/arrow/pull/5196#discussion_r317967687\n \n \n\n ##########\n File path: cpp/src/arrow/flight/client.cc\n ##########\n @@ -351,6 +363,7 @@ Status GrpcStreamWriter::Open(\n   std::unique_ptr<GrpcStreamWriter> result(new GrpcStreamWriter);\n   std::unique_ptr<ipc::internal::IpcPayloadWriter> payload_writer(new DoPutPayloadWriter(\n       descriptor, std::move(rpc), std::move(response), writer, result.get()));\n+  result->writer_ = writer;\n \n Review comment:\n   Can't this moved to the constructor instead?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-27T09:03:11.718+0000",
                    "updated": "2019-08-27T09:03:11.718+0000",
                    "started": "2019-08-27T09:03:11.717+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "301802",
                    "issueId": "13247714"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247714/worklog/301803",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5196: ARROW-6063: [FlightRPC] implement half-closed semantics for DoPut\nURL: https://github.com/apache/arrow/pull/5196#discussion_r317969883\n \n \n\n ##########\n File path: python/pyarrow/tests/test_flight.py\n ##########\n @@ -862,3 +862,37 @@ def test_roundtrip_errors():\n             list(client.do_action(flight.Action(\"unauthorized\", b\"\")))\n         with pytest.raises(flight.FlightInternalError, match=\".*foo.*\"):\n             list(client.list_flights())\n+\n+\n+def test_do_put_independent_read_write():\n+    \"\"\"Ensure that separate threads can read/write on a DoPut.\"\"\"\n+    # ARROW-6063: previously this would segfault when the writer was\n+    # closed, or would hang forever.\n \n Review comment:\n   Hmm... why segfault? Isn't this something that we can detect and prevent programmatically? (raise an error if reading from a stream whose writer side was closed)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-27T09:03:11.721+0000",
                    "updated": "2019-08-27T09:03:11.721+0000",
                    "started": "2019-08-27T09:03:11.721+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "301803",
                    "issueId": "13247714"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247714/worklog/301931",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lihalite commented on pull request #5196: ARROW-6063: [FlightRPC] implement half-closed semantics for DoPut\nURL: https://github.com/apache/arrow/pull/5196#discussion_r318046322\n \n \n\n ##########\n File path: python/pyarrow/tests/test_flight.py\n ##########\n @@ -862,3 +862,37 @@ def test_roundtrip_errors():\n             list(client.do_action(flight.Action(\"unauthorized\", b\"\")))\n         with pytest.raises(flight.FlightInternalError, match=\".*foo.*\"):\n             list(client.list_flights())\n+\n+\n+def test_do_put_independent_read_write():\n+    \"\"\"Ensure that separate threads can read/write on a DoPut.\"\"\"\n+    # ARROW-6063: previously this would segfault when the writer was\n+    # closed, or would hang forever.\n \n Review comment:\n   Segfault is the wrong word, I'll clarify this - gRPC aborts if it sees an internal state it didn't expect. (Personally I think this is rather dumb, since it's fairly easy to cause, even just by accidentally calling certain methods twice.)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-27T12:17:09.492+0000",
                    "updated": "2019-08-27T12:17:09.492+0000",
                    "started": "2019-08-27T12:17:09.492+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "301931",
                    "issueId": "13247714"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247714/worklog/301932",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lihalite commented on pull request #5196: ARROW-6063: [FlightRPC] implement half-closed semantics for DoPut\nURL: https://github.com/apache/arrow/pull/5196#discussion_r318046322\n \n \n\n ##########\n File path: python/pyarrow/tests/test_flight.py\n ##########\n @@ -862,3 +862,37 @@ def test_roundtrip_errors():\n             list(client.do_action(flight.Action(\"unauthorized\", b\"\")))\n         with pytest.raises(flight.FlightInternalError, match=\".*foo.*\"):\n             list(client.list_flights())\n+\n+\n+def test_do_put_independent_read_write():\n+    \"\"\"Ensure that separate threads can read/write on a DoPut.\"\"\"\n+    # ARROW-6063: previously this would segfault when the writer was\n+    # closed, or would hang forever.\n \n Review comment:\n   Segfault is the wrong word, I'll clarify this - gRPC aborts if it sees an internal state it didn't expect. (Personally I think this is rather dumb, since it's fairly easy to cause, even just by accidentally calling certain methods twice or concurrently.)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-27T12:17:24.387+0000",
                    "updated": "2019-08-27T12:17:24.387+0000",
                    "started": "2019-08-27T12:17:24.387+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "301932",
                    "issueId": "13247714"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247714/worklog/301965",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lihalite commented on issue #5196: ARROW-6063: [FlightRPC] implement half-closed semantics for DoPut\nURL: https://github.com/apache/arrow/pull/5196#issuecomment-525298227\n \n \n   Rebased/addressed comments.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-27T13:21:42.647+0000",
                    "updated": "2019-08-27T13:21:42.647+0000",
                    "started": "2019-08-27T13:21:42.646+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "301965",
                    "issueId": "13247714"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247714/worklog/301966",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lihalite commented on issue #5196: ARROW-6063: [FlightRPC] implement half-closed semantics for DoPut\nURL: https://github.com/apache/arrow/pull/5196#issuecomment-525298227\n \n \n   Rebased/addressed comments. Personal Travis: https://travis-ci.com/lihalite/arrow/builds/124741965\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-27T13:22:06.588+0000",
                    "updated": "2019-08-27T13:22:06.588+0000",
                    "started": "2019-08-27T13:22:06.588+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "301966",
                    "issueId": "13247714"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247714/worklog/301999",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5196: ARROW-6063: [FlightRPC] implement half-closed semantics for DoPut\nURL: https://github.com/apache/arrow/pull/5196#discussion_r318092859\n \n \n\n ##########\n File path: python/pyarrow/tests/test_flight.py\n ##########\n @@ -862,3 +862,38 @@ def test_roundtrip_errors():\n             list(client.do_action(flight.Action(\"unauthorized\", b\"\")))\n         with pytest.raises(flight.FlightInternalError, match=\".*foo.*\"):\n             list(client.list_flights())\n+\n+\n+def test_do_put_independent_read_write():\n+    \"\"\"Ensure that separate threads can read/write on a DoPut.\"\"\"\n+    # ARROW-6063: previously this would cause gRPC to abort when the\n \n Review comment:\n   I'll ask my question again: is it possible to add our own checks and return an error in that case, instead of letting gRPC abort?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-27T13:51:54.354+0000",
                    "updated": "2019-08-27T13:51:54.354+0000",
                    "started": "2019-08-27T13:51:54.354+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "301999",
                    "issueId": "13247714"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247714/worklog/302000",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5196: ARROW-6063: [FlightRPC] implement half-closed semantics for DoPut\nURL: https://github.com/apache/arrow/pull/5196#discussion_r318093207\n \n \n\n ##########\n File path: python/pyarrow/tests/test_flight.py\n ##########\n @@ -862,3 +862,38 @@ def test_roundtrip_errors():\n             list(client.do_action(flight.Action(\"unauthorized\", b\"\")))\n         with pytest.raises(flight.FlightInternalError, match=\".*foo.*\"):\n             list(client.list_flights())\n+\n+\n+def test_do_put_independent_read_write():\n+    \"\"\"Ensure that separate threads can read/write on a DoPut.\"\"\"\n+    # ARROW-6063: previously this would cause gRPC to abort when the\n \n Review comment:\n   IIUC, the error condition is \"one of reader or writer has been closed and we're trying to issue operations on the other one\".\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-27T13:52:30.554+0000",
                    "updated": "2019-08-27T13:52:30.554+0000",
                    "started": "2019-08-27T13:52:30.554+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "302000",
                    "issueId": "13247714"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247714/worklog/302001",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5196: ARROW-6063: [FlightRPC] implement half-closed semantics for DoPut\nURL: https://github.com/apache/arrow/pull/5196#discussion_r318094001\n \n \n\n ##########\n File path: python/pyarrow/tests/test_flight.py\n ##########\n @@ -862,3 +862,38 @@ def test_roundtrip_errors():\n             list(client.do_action(flight.Action(\"unauthorized\", b\"\")))\n         with pytest.raises(flight.FlightInternalError, match=\".*foo.*\"):\n             list(client.list_flights())\n+\n+\n+def test_do_put_independent_read_write():\n+    \"\"\"Ensure that separate threads can read/write on a DoPut.\"\"\"\n+    # ARROW-6063: previously this would cause gRPC to abort when the\n+    # writer was closed (due to simultaneous reads), or would hang\n+    # forever.\n+    data = [\n+        pa.array([-10, -5, 0, 5, 10])\n+    ]\n+    table = pa.Table.from_arrays(data, names=['a'])\n+\n+    with flight_server(MetadataFlightServer) as server_location:\n+        client = flight.FlightClient.connect(server_location)\n+        writer, metadata_reader = client.do_put(\n+            flight.FlightDescriptor.for_path(''),\n+            table.schema)\n+\n+        def _reader_thread():\n+            while metadata_reader.read() is not None:\n \n Review comment:\n   Oh, and should this count of number of metadata items received? I assume it should be equal to the number of batches written, so we could check that after joining the reader.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-27T13:53:48.253+0000",
                    "updated": "2019-08-27T13:53:48.253+0000",
                    "started": "2019-08-27T13:53:48.252+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "302001",
                    "issueId": "13247714"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247714/worklog/302017",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lihalite commented on pull request #5196: ARROW-6063: [FlightRPC] implement half-closed semantics for DoPut\nURL: https://github.com/apache/arrow/pull/5196#discussion_r318106702\n \n \n\n ##########\n File path: python/pyarrow/tests/test_flight.py\n ##########\n @@ -862,3 +862,38 @@ def test_roundtrip_errors():\n             list(client.do_action(flight.Action(\"unauthorized\", b\"\")))\n         with pytest.raises(flight.FlightInternalError, match=\".*foo.*\"):\n             list(client.list_flights())\n+\n+\n+def test_do_put_independent_read_write():\n+    \"\"\"Ensure that separate threads can read/write on a DoPut.\"\"\"\n+    # ARROW-6063: previously this would cause gRPC to abort when the\n \n Review comment:\n   Ah, sorry...we could do our own locking/track flags ourselves, yes, I added one such flag already. In that case, I'll also add a benchmark first so that we can quantify whether that has a performance impact.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-27T14:16:25.313+0000",
                    "updated": "2019-08-27T14:16:25.313+0000",
                    "started": "2019-08-27T14:16:25.312+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "302017",
                    "issueId": "13247714"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247714/worklog/302018",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lihalite commented on pull request #5196: ARROW-6063: [FlightRPC] implement half-closed semantics for DoPut\nURL: https://github.com/apache/arrow/pull/5196#discussion_r318106843\n \n \n\n ##########\n File path: python/pyarrow/tests/test_flight.py\n ##########\n @@ -862,3 +862,38 @@ def test_roundtrip_errors():\n             list(client.do_action(flight.Action(\"unauthorized\", b\"\")))\n         with pytest.raises(flight.FlightInternalError, match=\".*foo.*\"):\n             list(client.list_flights())\n+\n+\n+def test_do_put_independent_read_write():\n+    \"\"\"Ensure that separate threads can read/write on a DoPut.\"\"\"\n+    # ARROW-6063: previously this would cause gRPC to abort when the\n+    # writer was closed (due to simultaneous reads), or would hang\n+    # forever.\n+    data = [\n+        pa.array([-10, -5, 0, 5, 10])\n+    ]\n+    table = pa.Table.from_arrays(data, names=['a'])\n+\n+    with flight_server(MetadataFlightServer) as server_location:\n+        client = flight.FlightClient.connect(server_location)\n+        writer, metadata_reader = client.do_put(\n+            flight.FlightDescriptor.for_path(''),\n+            table.schema)\n+\n+        def _reader_thread():\n+            while metadata_reader.read() is not None:\n \n Review comment:\n   Good point - I'll improve the test.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-27T14:16:40.031+0000",
                    "updated": "2019-08-27T14:16:40.031+0000",
                    "started": "2019-08-27T14:16:40.031+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "302018",
                    "issueId": "13247714"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247714/worklog/302019",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5196: ARROW-6063: [FlightRPC] implement half-closed semantics for DoPut\nURL: https://github.com/apache/arrow/pull/5196#discussion_r318109243\n \n \n\n ##########\n File path: python/pyarrow/tests/test_flight.py\n ##########\n @@ -862,3 +862,38 @@ def test_roundtrip_errors():\n             list(client.do_action(flight.Action(\"unauthorized\", b\"\")))\n         with pytest.raises(flight.FlightInternalError, match=\".*foo.*\"):\n             list(client.list_flights())\n+\n+\n+def test_do_put_independent_read_write():\n+    \"\"\"Ensure that separate threads can read/write on a DoPut.\"\"\"\n+    # ARROW-6063: previously this would cause gRPC to abort when the\n \n Review comment:\n   If it's just a flag, an atomic bool would probably suffice.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-27T14:21:00.389+0000",
                    "updated": "2019-08-27T14:21:00.389+0000",
                    "started": "2019-08-27T14:21:00.389+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "302019",
                    "issueId": "13247714"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247714/worklog/302024",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lihalite commented on pull request #5196: ARROW-6063: [FlightRPC] implement half-closed semantics for DoPut\nURL: https://github.com/apache/arrow/pull/5196#discussion_r318111597\n \n \n\n ##########\n File path: python/pyarrow/tests/test_flight.py\n ##########\n @@ -862,3 +862,38 @@ def test_roundtrip_errors():\n             list(client.do_action(flight.Action(\"unauthorized\", b\"\")))\n         with pytest.raises(flight.FlightInternalError, match=\".*foo.*\"):\n             list(client.list_flights())\n+\n+\n+def test_do_put_independent_read_write():\n+    \"\"\"Ensure that separate threads can read/write on a DoPut.\"\"\"\n+    # ARROW-6063: previously this would cause gRPC to abort when the\n \n Review comment:\n   Some things are flags (e.g. has DoneWriting been called yet), some things are locks (1 read and 1 write can proceed in parallel, but multiple reads and multiple writes cannot).\r\n   \r\n   The prior error condition was actually caused by the latter, since Close() would read from the call to try to drain any messages. Adding the ability to just close the write part of the channel indirectly helps avoid this because it signals to the server that we are done writing, and then the server can signal that it is done writing (by closing the call entirely), which unblocks any read calls on the client side. Then it is safe to call Close() as normal. Previously, you either called Close() without waiting for the reader thread to terminate (which caused the abort), or waited for the reader thread (which would block forever - since the server didn't have a way of knowing whether you were done writing).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-27T14:24:54.620+0000",
                    "updated": "2019-08-27T14:24:54.620+0000",
                    "started": "2019-08-27T14:24:54.620+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "302024",
                    "issueId": "13247714"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247714/worklog/302232",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #5196: ARROW-6063: [FlightRPC] implement half-closed semantics for DoPut\nURL: https://github.com/apache/arrow/pull/5196#issuecomment-525398161\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/5196?src=pr&el=h1) Report\n   > Merging [#5196](https://codecov.io/gh/apache/arrow/pull/5196?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/cef82b41f50966847896ffa1d7662c24ee6327b7?src=pr&el=desc) will **increase** coverage by `0.55%`.\n   > The diff coverage is `93.54%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/5196/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/5196?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #5196      +/-   ##\n   ==========================================\n   + Coverage   88.71%   89.27%   +0.55%     \n   ==========================================\n     Files         934      742     -192     \n     Lines      121320   106069   -15251     \n     Branches     1437        0    -1437     \n   ==========================================\n   - Hits       107627    94688   -12939     \n   + Misses      13331    11381    -1950     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/5196?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/flight/client.h](https://codecov.io/gh/apache/arrow/pull/5196/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9mbGlnaHQvY2xpZW50Lmg=) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/flight/flight\\_test.cc](https://codecov.io/gh/apache/arrow/pull/5196/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9mbGlnaHQvZmxpZ2h0X3Rlc3QuY2M=) | `98.05% <100%> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/\\_flight.pyx](https://codecov.io/gh/apache/arrow/pull/5196/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvX2ZsaWdodC5weXg=) | `54.1% <100%> (+0.3%)` | :arrow_up: |\n   | [python/pyarrow/tests/test\\_flight.py](https://codecov.io/gh/apache/arrow/pull/5196/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9mbGlnaHQucHk=) | `71.59% <100%> (+0.99%)` | :arrow_up: |\n   | [cpp/src/arrow/flight/client.cc](https://codecov.io/gh/apache/arrow/pull/5196/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9mbGlnaHQvY2xpZW50LmNj) | `92% <81.81%> (-0.14%)` | :arrow_down: |\n   | [cpp/src/plasma/thirdparty/ae/ae.c](https://codecov.io/gh/apache/arrow/pull/5196/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGhpcmRwYXJ0eS9hZS9hZS5j) | `70.75% <0%> (-0.95%)` | :arrow_down: |\n   | [cpp/src/arrow/util/thread\\_pool\\_test.cc](https://codecov.io/gh/apache/arrow/pull/5196/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL3RocmVhZF9wb29sX3Rlc3QuY2M=) | `97.66% <0%> (-0.94%)` | :arrow_down: |\n   | [python/pyarrow/tests/test\\_parquet.py](https://codecov.io/gh/apache/arrow/pull/5196/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9wYXJxdWV0LnB5) | `96.5% <0%> (-0.07%)` | :arrow_down: |\n   | [go/arrow/ipc/writer.go](https://codecov.io/gh/apache/arrow/pull/5196/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaXBjL3dyaXRlci5nbw==) | | |\n   | [go/arrow/math/uint64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/5196/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYW1kNjQuZ28=) | | |\n   | ... and [192 more](https://codecov.io/gh/apache/arrow/pull/5196/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/5196?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/5196?src=pr&el=footer). Last update [cef82b4...7f7f344](https://codecov.io/gh/apache/arrow/pull/5196?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-27T17:15:55.594+0000",
                    "updated": "2019-08-27T17:15:55.594+0000",
                    "started": "2019-08-27T17:15:55.594+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "302232",
                    "issueId": "13247714"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247714/worklog/303691",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lihalite commented on pull request #5196: ARROW-6063: [FlightRPC] implement half-closed semantics for DoPut\nURL: https://github.com/apache/arrow/pull/5196#discussion_r319062391\n \n \n\n ##########\n File path: python/pyarrow/tests/test_flight.py\n ##########\n @@ -862,3 +862,38 @@ def test_roundtrip_errors():\n             list(client.do_action(flight.Action(\"unauthorized\", b\"\")))\n         with pytest.raises(flight.FlightInternalError, match=\".*foo.*\"):\n             list(client.list_flights())\n+\n+\n+def test_do_put_independent_read_write():\n+    \"\"\"Ensure that separate threads can read/write on a DoPut.\"\"\"\n+    # ARROW-6063: previously this would cause gRPC to abort when the\n \n Review comment:\n   I ended up refactoring the benchmark a bit to support benching both DoGet and DoPut (though it could be cleaned up more), and added locking around read operations in DoPut on the client side to prevent you from trying to close the stream while a read is still in progress. It doesn't affect perf, but of course the benchmark doesn't touch that anyways...\r\n   \r\n   At least now we've confirmed that DoGet/DoPut perf is symmetric.\r\n   \r\n   ```\r\n   # Before\r\n   $ ./debug/arrow-flight-benchmark --test_put --records_per_stream=1000000000\r\n   Using remote server: false\r\n   Server running with pid 94260\r\n   Testing method: DoPut\r\n   Server host: localhost\r\n   Server port: 31337\r\n   Server port: 31337\r\n   Bytes read: 128000000000\r\n   Nanos: 50057423500\r\n   Speed: 2438.61 MB/s\r\n   \r\n   # After\r\n   $ ./debug/arrow-flight-benchmark --test_put --records_per_stream=1000000000\r\n   Using remote server: false\r\n   Server running with pid 5248\r\n   Testing method: DoPut\r\n   Server host: localhost\r\n   Server port: 31337\r\n   Server port: 31337\r\n   Bytes read: 128000000000\r\n   Nanos: 48891683693\r\n   Speed: 2496.75 MB/s\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-29T13:13:52.275+0000",
                    "updated": "2019-08-29T13:13:52.275+0000",
                    "started": "2019-08-29T13:13:52.273+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "303691",
                    "issueId": "13247714"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247714/worklog/303759",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5196: ARROW-6063: [FlightRPC] implement half-closed semantics for DoPut\nURL: https://github.com/apache/arrow/pull/5196#discussion_r319133512\n \n \n\n ##########\n File path: cpp/src/arrow/flight/client.cc\n ##########\n @@ -549,9 +575,11 @@ class FlightClient::FlightClientImpl {\n     std::shared_ptr<grpc::ClientReaderWriter<pb::FlightData, pb::PutResult>> writer(\n         stub_->DoPut(&rpc->context));\n \n-    *reader = std::unique_ptr<FlightMetadataReader>(new GrpcMetadataReader(writer));\n+    std::shared_ptr<std::mutex> read_mutex = std::shared_ptr<std::mutex>(new std::mutex);\n \n Review comment:\n   Use `std::make_shared`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-29T15:32:55.277+0000",
                    "updated": "2019-08-29T15:32:55.277+0000",
                    "started": "2019-08-29T15:32:55.276+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "303759",
                    "issueId": "13247714"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247714/worklog/303760",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5196: ARROW-6063: [FlightRPC] implement half-closed semantics for DoPut\nURL: https://github.com/apache/arrow/pull/5196#discussion_r319135385\n \n \n\n ##########\n File path: cpp/src/arrow/flight/flight_benchmark.cc\n ##########\n @@ -67,7 +73,113 @@ struct PerformanceStats {\n   }\n };\n \n-Status RunPerformanceTest(const std::string& hostname, const int port) {\n+Status WaitForReady(FlightClient* client) {\n+  Action action{\"ping\", nullptr};\n+  for (int attempt = 0; attempt < 10; attempt++) {\n+    std::unique_ptr<ResultStream> stream;\n+    if (client->DoAction(action, &stream).ok()) {\n+      return Status::OK();\n+    }\n+    std::this_thread::sleep_for(std::chrono::milliseconds(1000));\n+  }\n+  return Status::IOError(\"Server was not available after 10 attempts\");\n+}\n+\n+arrow::Result<PerformanceResult> RunDoGetTest(FlightClient* client,\n+                                              const perf::Token& token,\n+                                              const FlightEndpoint& endpoint) {\n+  std::unique_ptr<FlightStreamReader> reader;\n+  RETURN_NOT_OK(client->DoGet(endpoint.ticket, &reader));\n+\n+  FlightStreamChunk batch;\n+\n+  // This is hard-coded for right now, 4 columns each with int64\n+  const int bytes_per_record = 32;\n+\n+  // This must also be set in perf_server.cc\n+  const bool verify = false;\n+\n+  int64_t num_bytes = 0;\n+  int64_t num_records = 0;\n+  while (true) {\n+    RETURN_NOT_OK(reader->Next(&batch));\n+    if (!batch.data) {\n+      break;\n+    }\n+\n+    if (verify) {\n+      auto values = reinterpret_cast<const int64_t*>(\n+          batch.data->column_data(0)->buffers[1]->data());\n \n Review comment:\n   I think you can write `auto values = batch.data->column_data(0)->GetValues<int64_t>(1)`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-29T15:32:55.299+0000",
                    "updated": "2019-08-29T15:32:55.299+0000",
                    "started": "2019-08-29T15:32:55.299+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "303760",
                    "issueId": "13247714"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247714/worklog/303761",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5196: ARROW-6063: [FlightRPC] implement half-closed semantics for DoPut\nURL: https://github.com/apache/arrow/pull/5196#discussion_r319134517\n \n \n\n ##########\n File path: cpp/src/arrow/flight/flight_benchmark.cc\n ##########\n @@ -67,7 +73,113 @@ struct PerformanceStats {\n   }\n };\n \n-Status RunPerformanceTest(const std::string& hostname, const int port) {\n+Status WaitForReady(FlightClient* client) {\n+  Action action{\"ping\", nullptr};\n+  for (int attempt = 0; attempt < 10; attempt++) {\n+    std::unique_ptr<ResultStream> stream;\n+    if (client->DoAction(action, &stream).ok()) {\n+      return Status::OK();\n+    }\n+    std::this_thread::sleep_for(std::chrono::milliseconds(1000));\n+  }\n+  return Status::IOError(\"Server was not available after 10 attempts\");\n+}\n+\n+arrow::Result<PerformanceResult> RunDoGetTest(FlightClient* client,\n+                                              const perf::Token& token,\n+                                              const FlightEndpoint& endpoint) {\n+  std::unique_ptr<FlightStreamReader> reader;\n+  RETURN_NOT_OK(client->DoGet(endpoint.ticket, &reader));\n+\n+  FlightStreamChunk batch;\n+\n+  // This is hard-coded for right now, 4 columns each with int64\n+  const int bytes_per_record = 32;\n+\n+  // This must also be set in perf_server.cc\n+  const bool verify = false;\n+\n+  int64_t num_bytes = 0;\n+  int64_t num_records = 0;\n+  while (true) {\n+    RETURN_NOT_OK(reader->Next(&batch));\n+    if (!batch.data) {\n+      break;\n+    }\n+\n+    if (verify) {\n+      auto values = reinterpret_cast<const int64_t*>(\n+          batch.data->column_data(0)->buffers[1]->data());\n+      const int64_t start = token.start() + num_records;\n+      for (int64_t i = 0; i < batch.data->num_rows(); ++i) {\n+        if (values[i] != start + i) {\n+          return std::move(Status::Invalid(\"verification failure\"));\n \n Review comment:\n   The `std::move` here is pointless. C++ will move temporaries automatically.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-29T15:32:55.393+0000",
                    "updated": "2019-08-29T15:32:55.393+0000",
                    "started": "2019-08-29T15:32:55.393+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "303761",
                    "issueId": "13247714"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247714/worklog/303807",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lihalite commented on issue #5196: ARROW-6063: [FlightRPC] implement half-closed semantics for DoPut\nURL: https://github.com/apache/arrow/pull/5196#issuecomment-526285723\n \n \n   Thanks for the review! Fixed those concerns & rebased.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-29T17:32:44.388+0000",
                    "updated": "2019-08-29T17:32:44.388+0000",
                    "started": "2019-08-29T17:32:44.387+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "303807",
                    "issueId": "13247714"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 12000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@2b8bfa47[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@53f438aa[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@219fe28a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@53dcbf7b[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1e05b83a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@58ec2ff8[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6b90ddd[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@30284d16[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3dff741[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3af59b2d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@74ecae4b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@65e0d3d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 12000,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Sep 02 15:30:15 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-09-02T15:30:15.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6063/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-07-29T17:39:59.000+0000",
        "updated": "2019-09-02T15:30:27.000+0000",
        "timeoriginalestimate": null,
        "description": "Both sides on a DoPut should be able to half-close the stream, indicating they will no longer write. This allows a client to indicate that it is done writing data to the server, while still leaving the stream open so it can read metadata responses until the server finishes. Meanwhile, the server would see that the client has finished and be able to stop blocking on reading client messages.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 12000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[FlightRPC] Implement \"half-closed\" semantics for DoPut",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247714/comment/16920929",
                    "id": "16920929",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 5196\n[https://github.com/apache/arrow/pull/5196]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2019-09-02T15:30:15.633+0000",
                    "updated": "2019-09-02T15:30:15.633+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z054uo:",
        "customfield_12314139": null
    }
}