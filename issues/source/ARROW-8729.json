{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13303340",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13303340",
    "key": "ARROW-8729",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12347769",
                "id": "12347769",
                "description": "",
                "name": "1.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-07-24"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "dataset",
            "dataset-dask-integration",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
            "name": "bkietz",
            "key": "bkietz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
            },
            "displayName": "Ben Kietzman",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "aggregateprogress": {
            "progress": 9000,
            "total": 9000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 9000,
            "total": 9000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8729/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 15,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13303340/worklog/450591",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz opened a new pull request #7534:\nURL: https://github.com/apache/arrow/pull/7534\n\n\n   This bug is inherited from `parquet::arrow::RowGroupRecordBatchReader`, which yielded empty record batches when no columns were projected because no field readers were available from which to derive batch size. I've added logic to get usable batch sizes from file metadata in the empty columns case\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-24T19:30:10.671+0000",
                    "updated": "2020-06-24T19:30:10.671+0000",
                    "started": "2020-06-24T19:30:10.670+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "450591",
                    "issueId": "13303340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13303340/worklog/450592",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #7534:\nURL: https://github.com/apache/arrow/pull/7534#issuecomment-649022873\n\n\n   https://issues.apache.org/jira/browse/ARROW-8729\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-24T19:31:54.564+0000",
                    "updated": "2020-06-24T19:31:54.564+0000",
                    "started": "2020-06-24T19:31:54.564+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "450592",
                    "issueId": "13303340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13303340/worklog/450867",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #7534:\nURL: https://github.com/apache/arrow/pull/7534#discussion_r445392036\n\n\n\n##########\nFile path: cpp/src/parquet/arrow/reader.cc\n##########\n@@ -338,22 +348,37 @@ class RowGroupRecordBatchReader : public ::arrow::RecordBatchReader {\n     // TODO (hatemhelal): Consider refactoring this to share logic with ReadTable as this\n     // does not currently honor the use_threads option.\n     std::vector<std::shared_ptr<ChunkedArray>> columns(field_readers_.size());\n-    for (size_t i = 0; i < field_readers_.size(); ++i) {\n-      RETURN_NOT_OK(field_readers_[i]->NextBatch(batch_size_, &columns[i]));\n-      if (columns[i]->num_chunks() > 1) {\n-        return Status::NotImplemented(\"This class cannot yet iterate chunked arrays\");\n+    int64_t num_rows = -1;\n+\n+    if (columns.empty()) {\n+      num_rows = std::min(batch_size_, *row_group_remaining_size_);\n\nReview comment:\n       might be good to add a comment here why this is being done\n\n##########\nFile path: python/pyarrow/tests/test_dataset.py\n##########\n@@ -1605,3 +1605,21 @@ def test_dataset_schema_metadata(tempdir):\n     assert b\"pandas\" in schema.metadata\n     # ensure it is still there in a projected schema (with column selection)\n     assert schema.equals(projected_schema, check_metadata=True)\n+\n+\n+@pytest.mark.parquet\n+@pytest.mark.pandas\n+def test_dataset_project_only_partition_columns(tempdir):\n+    # ARROW-8729\n+    import pyarrow.parquet as pq\n+\n+    table = pa.table({'part': 'a a b b'.split(), 'col': list(range(4))})\n+\n+    path = str(tempdir / 'test_dataset')\n+    pq.write_to_dataset(table, path, partition_cols=['part'])\n+    dataset = ds.dataset(path, partitioning='hive')\n+\n+    all_cols = dataset.to_table(use_threads=False)\n+    part_only = dataset.to_table(columns=['part'], use_threads=False)\n+\n+    assert all_cols.column('part') == part_only.column('part')\n\nReview comment:\n       ```suggestion\r\n       assert all_cols.column('part').equals(part_only.column('part'))\r\n   ```\r\n   \r\n   `==` is now element-wise, and the \"truthyness\" of a boolean chunked array is always True, regardless of the values in it .. (so as long both tables have a \"part\" column, the above check would always return True even if the columns itself are not equal)\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-25T08:40:26.556+0000",
                    "updated": "2020-06-25T08:40:26.556+0000",
                    "started": "2020-06-25T08:40:26.556+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "450867",
                    "issueId": "13303340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13303340/worklog/450947",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #7534:\nURL: https://github.com/apache/arrow/pull/7534#discussion_r445470685\n\n\n\n##########\nFile path: cpp/src/parquet/arrow/reader.cc\n##########\n@@ -338,22 +348,37 @@ class RowGroupRecordBatchReader : public ::arrow::RecordBatchReader {\n     // TODO (hatemhelal): Consider refactoring this to share logic with ReadTable as this\n     // does not currently honor the use_threads option.\n     std::vector<std::shared_ptr<ChunkedArray>> columns(field_readers_.size());\n-    for (size_t i = 0; i < field_readers_.size(); ++i) {\n-      RETURN_NOT_OK(field_readers_[i]->NextBatch(batch_size_, &columns[i]));\n-      if (columns[i]->num_chunks() > 1) {\n-        return Status::NotImplemented(\"This class cannot yet iterate chunked arrays\");\n+    int64_t num_rows = -1;\n+\n+    if (columns.empty()) {\n+      num_rows = std::min(batch_size_, *row_group_remaining_size_);\n\nReview comment:\n       ```suggestion\r\n         // num_rows cannot be derived from field_readers_ so compute it using\r\n         // row group sizes cached from metadata\r\n         num_rows = std::min(batch_size_, *row_group_remaining_size_);\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-25T10:48:14.055+0000",
                    "updated": "2020-06-25T10:48:14.055+0000",
                    "started": "2020-06-25T10:48:14.054+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "450947",
                    "issueId": "13303340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13303340/worklog/450973",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #7534:\nURL: https://github.com/apache/arrow/pull/7534#issuecomment-649482676\n\n\n   The python dataset tests are crashing on Mac: https://github.com/apache/arrow/runs/806974457\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-25T11:29:20.902+0000",
                    "updated": "2020-06-25T11:29:20.902+0000",
                    "started": "2020-06-25T11:29:20.902+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "450973",
                    "issueId": "13303340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13303340/worklog/450984",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #7534:\nURL: https://github.com/apache/arrow/pull/7534#issuecomment-649500754\n\n\n   @jorisvandenbossche that build comes from the first of two `suggestion` commits and it doesn't seem to have crashed with both commits in place. Maybe it was ephemeral?\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-25T12:07:01.550+0000",
                    "updated": "2020-06-25T12:07:01.550+0000",
                    "started": "2020-06-25T12:07:01.549+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "450984",
                    "issueId": "13303340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13303340/worklog/450986",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #7534:\nURL: https://github.com/apache/arrow/pull/7534#issuecomment-649501921\n\n\n   Hmm, it failed on the last commit as well, but I restarted that one. And so now appears to be green indeed .. \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-25T12:09:28.658+0000",
                    "updated": "2020-06-25T12:09:28.658+0000",
                    "started": "2020-06-25T12:09:28.658+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "450986",
                    "issueId": "13303340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13303340/worklog/451066",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #7534:\nURL: https://github.com/apache/arrow/pull/7534#issuecomment-649579503\n\n\n   That crash is ARROW-8999. I'm fairly confident it's a real bug given that is happens about 1-5% of the time\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-25T14:23:17.951+0000",
                    "updated": "2020-06-25T14:23:17.951+0000",
                    "started": "2020-06-25T14:23:17.951+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "451066",
                    "issueId": "13303340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13303340/worklog/451067",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm edited a comment on pull request #7534:\nURL: https://github.com/apache/arrow/pull/7534#issuecomment-649579503\n\n\n   That crash is ARROW-8999. I'm fairly confident it's a real bug given that it happens about 1-5% of the time\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-25T14:23:20.786+0000",
                    "updated": "2020-06-25T14:23:20.786+0000",
                    "started": "2020-06-25T14:23:20.786+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "451067",
                    "issueId": "13303340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13303340/worklog/451088",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on a change in pull request #7534:\nURL: https://github.com/apache/arrow/pull/7534#discussion_r445605965\n\n\n\n##########\nFile path: cpp/src/parquet/arrow/reader.cc\n##########\n@@ -338,22 +348,39 @@ class RowGroupRecordBatchReader : public ::arrow::RecordBatchReader {\n     // TODO (hatemhelal): Consider refactoring this to share logic with ReadTable as this\n     // does not currently honor the use_threads option.\n     std::vector<std::shared_ptr<ChunkedArray>> columns(field_readers_.size());\n-    for (size_t i = 0; i < field_readers_.size(); ++i) {\n-      RETURN_NOT_OK(field_readers_[i]->NextBatch(batch_size_, &columns[i]));\n-      if (columns[i]->num_chunks() > 1) {\n-        return Status::NotImplemented(\"This class cannot yet iterate chunked arrays\");\n+    int64_t num_rows = -1;\n+\n+    if (columns.empty()) {\n+      // num_rows cannot be derived from field_readers_ so compute it using\n+      // row group sizes cached from metadata\n+      num_rows = std::min(batch_size_, *row_group_remaining_size_);\n+      *row_group_remaining_size_ -= num_rows;\n+      if (*row_group_remaining_size_ == 0) {\n+        ++row_group_remaining_size_;\n       }\n+    } else {\n+      for (size_t i = 0; i < field_readers_.size(); ++i) {\n+        RETURN_NOT_OK(field_readers_[i]->NextBatch(batch_size_, &columns[i]));\n+        if (columns[i]->num_chunks() > 1) {\n+          return Status::NotImplemented(\"This class cannot yet iterate chunked arrays\");\n+        }\n+      }\n+      num_rows = columns[0]->length();\n     }\n \n     // Create an intermediate table and use TableBatchReader as an adaptor to a\n     // RecordBatch\n-    std::shared_ptr<Table> table = Table::Make(schema_, columns);\n+    std::shared_ptr<Table> table = Table::Make(schema_, columns, num_rows);\n+\n     RETURN_NOT_OK(table->Validate());\n     ::arrow::TableBatchReader table_batch_reader(*table);\n     return table_batch_reader.ReadNext(out);\n   }\n \n  private:\n+  std::shared_ptr<FileMetaData> metadata_;\n\nReview comment:\n       `metadata_` is not used.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-25T14:44:31.548+0000",
                    "updated": "2020-06-25T14:44:31.548+0000",
                    "started": "2020-06-25T14:44:31.548+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "451088",
                    "issueId": "13303340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13303340/worklog/451107",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #7534:\nURL: https://github.com/apache/arrow/pull/7534#discussion_r445625710\n\n\n\n##########\nFile path: cpp/src/parquet/arrow/reader.cc\n##########\n@@ -338,22 +348,39 @@ class RowGroupRecordBatchReader : public ::arrow::RecordBatchReader {\n     // TODO (hatemhelal): Consider refactoring this to share logic with ReadTable as this\n     // does not currently honor the use_threads option.\n     std::vector<std::shared_ptr<ChunkedArray>> columns(field_readers_.size());\n-    for (size_t i = 0; i < field_readers_.size(); ++i) {\n-      RETURN_NOT_OK(field_readers_[i]->NextBatch(batch_size_, &columns[i]));\n-      if (columns[i]->num_chunks() > 1) {\n-        return Status::NotImplemented(\"This class cannot yet iterate chunked arrays\");\n+    int64_t num_rows = -1;\n+\n+    if (columns.empty()) {\n+      // num_rows cannot be derived from field_readers_ so compute it using\n+      // row group sizes cached from metadata\n+      num_rows = std::min(batch_size_, *row_group_remaining_size_);\n+      *row_group_remaining_size_ -= num_rows;\n+      if (*row_group_remaining_size_ == 0) {\n+        ++row_group_remaining_size_;\n       }\n+    } else {\n+      for (size_t i = 0; i < field_readers_.size(); ++i) {\n+        RETURN_NOT_OK(field_readers_[i]->NextBatch(batch_size_, &columns[i]));\n+        if (columns[i]->num_chunks() > 1) {\n+          return Status::NotImplemented(\"This class cannot yet iterate chunked arrays\");\n+        }\n+      }\n+      num_rows = columns[0]->length();\n     }\n \n     // Create an intermediate table and use TableBatchReader as an adaptor to a\n     // RecordBatch\n-    std::shared_ptr<Table> table = Table::Make(schema_, columns);\n+    std::shared_ptr<Table> table = Table::Make(schema_, columns, num_rows);\n+\n     RETURN_NOT_OK(table->Validate());\n     ::arrow::TableBatchReader table_batch_reader(*table);\n     return table_batch_reader.ReadNext(out);\n   }\n \n  private:\n+  std::shared_ptr<FileMetaData> metadata_;\n\nReview comment:\n       I'll remove it and rebase\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-25T15:01:11.216+0000",
                    "updated": "2020-06-25T15:01:11.216+0000",
                    "started": "2020-06-25T15:01:11.216+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "451107",
                    "issueId": "13303340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13303340/worklog/457799",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #7534:\nURL: https://github.com/apache/arrow/pull/7534#issuecomment-657278975\n\n\n   I think https://github.com/apache/arrow/pull/7704 needs to be merged first\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-07-12T21:37:24.106+0000",
                    "updated": "2020-07-12T21:37:24.106+0000",
                    "started": "2020-07-12T21:37:24.106+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "457799",
                    "issueId": "13303340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13303340/worklog/457802",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #7534:\nURL: https://github.com/apache/arrow/pull/7534#discussion_r453366215\n\n\n\n##########\nFile path: rust/datafusion/README.md\n##########\n@@ -69,5 +69,15 @@ DataFusion includes a simple command-line interactive SQL utility. See the [CLI\n - [x] Parquet primitive types\n - [ ] Parquet nested types\n \n-# Examples\n+# Supported SQL\n \n+This library currently supports the following SQL constructs:\n+\n+* `CREATE EXTERNAL TABLE X STORED AS PARQUET LOCATION '...';` to register a table's locations\n+* `SELECT ... FROM ...` together with any expression\n+* `ALIAS` to name an expression\n+* `CAST` to change types, including e.g. `Timestamp(Nanosecond, None)`\n+* most mathematical unary and binary expressions such as `+`, `/`, `sqrt`, `tan`, `>=`.\n+* `WHERE` to filter\n+* `GROUP BY` together with one of the following aggregations: `MIN`, `MAX`, `COUNT`, `SUM`, `AVG`\n+* `ORDER BY` together with an expression and optional `DESC`\n\nReview comment:\n       This shouldn't be here\n\n##########\nFile path: cpp/src/parquet/arrow/reader.h\n##########\n@@ -151,8 +151,10 @@ class PARQUET_EXPORT FileReader {\n       int i, std::shared_ptr<::arrow::ChunkedArray>* out) = 0;\n \n   /// \\brief Return a RecordBatchReader of row groups selected from row_group_indices, the\n-  ///    ordering in row_group_indices matters.\n-  /// \\returns error Status if row_group_indices contains invalid index\n+  ///     ordering in row_group_indices matters. Each row group will held in memory until\n+  ///     each slice has been yielded as a RecordBatch, at which point the next row group\n+  ///     will be loaded. FileReaders must outlive their RecordBatchReaders.\n\nReview comment:\n       Probably want to add a TODO here that we want to fix this (this is a problem for memory use)\n\n##########\nFile path: cpp/src/parquet/arrow/reader.cc\n##########\n@@ -794,8 +773,35 @@ Status FileReaderImpl::GetRecordBatchReader(const std::vector<int>& row_group_in\n     END_PARQUET_CATCH_EXCEPTIONS\n   }\n \n-  return RowGroupRecordBatchReader::Make(row_group_indices, column_indices, this,\n-                                         reader_properties_.batch_size(), out);\n+  using ::arrow::RecordBatchIterator;\n+\n+  // NB: This lambda will be invoked lazily whenever a new row group must be\n+  // scanned, so it must capture `column_indices` by value (it will not\n+  // otherwise outlive the scope of `GetRecordBatchReader()`). `this` is a non-owning\n+  // pointer so we are relying on the parent FileReader outliving this RecordBatchReader.\n+  auto row_group_index_to_batch_iterator =\n+      [column_indices, this](const int* i) -> ::arrow::Result<RecordBatchIterator> {\n+    std::shared_ptr<::arrow::Table> table;\n+    RETURN_NOT_OK(RowGroup(*i)->ReadTable(column_indices, &table));\n\nReview comment:\n       It isn't great to be reading the whole row group into memory before returning it in chunks, is there an issue about materializing only a chunk at a time (or a background actor-type reader that will prepare the materialize the next chunk asynchronously in between calls to `Next`)?\n\n##########\nFile path: cpp/src/parquet/arrow/reader.h\n##########\n@@ -163,8 +165,11 @@ class PARQUET_EXPORT FileReader {\n   /// \\brief Return a RecordBatchReader of row groups selected from\n   ///     row_group_indices, whose columns are selected by column_indices. The\n   ///     ordering in row_group_indices and column_indices matter.\n+  ///     Each row group will held in memory until each slice has been yielded as a\n+  ///     RecordBatch, at which point the next row group will be loaded. FileReaders must\n+  ///     outlive their RecordBatchReaders.\n\nReview comment:\n       Add a TODO that this is considered to be a problem\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-07-12T21:43:21.185+0000",
                    "updated": "2020-07-12T21:43:21.185+0000",
                    "started": "2020-07-12T21:43:21.185+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "457802",
                    "issueId": "13303340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13303340/worklog/458297",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #7534:\nURL: https://github.com/apache/arrow/pull/7534#discussion_r453914180\n\n\n\n##########\nFile path: cpp/src/parquet/arrow/reader.cc\n##########\n@@ -738,68 +749,90 @@ Status GetReader(const SchemaField& field, const std::shared_ptr<ReaderContext>&\n   END_PARQUET_CATCH_EXCEPTIONS\n }\n \n-Status FileReaderImpl::GetRecordBatchReader(const std::vector<int>& row_group_indices,\n+Status FileReaderImpl::GetRecordBatchReader(const std::vector<int>& row_groups,\n                                             const std::vector<int>& column_indices,\n                                             std::unique_ptr<RecordBatchReader>* out) {\n-  // row group indices check\n-  for (int row_group_index : row_group_indices) {\n-    RETURN_NOT_OK(BoundsCheckRowGroup(row_group_index));\n-  }\n+  RETURN_NOT_OK(BoundsCheck(row_groups, column_indices));\n \n-  // column indices check\n-  ARROW_ASSIGN_OR_RAISE(std::vector<int> field_indices,\n-                        manifest_.GetFieldIndices(column_indices));\n+  if (reader_properties_.pre_buffer()) {\n+    // PARQUET-1698/PARQUET-1820: pre-buffer row groups/column chunks if enabled\n+    BEGIN_PARQUET_CATCH_EXCEPTIONS\n+    reader_->PreBuffer(row_groups, column_indices, reader_properties_.async_context(),\n+                       reader_properties_.cache_options());\n+    END_PARQUET_CATCH_EXCEPTIONS\n+  }\n \n+  std::vector<std::shared_ptr<ColumnReaderImpl>> readers;\n   std::shared_ptr<::arrow::Schema> batch_schema;\n-  RETURN_NOT_OK(GetSchema(&batch_schema));\n+  RETURN_NOT_OK(GetFieldReaders(column_indices, row_groups, &readers, &batch_schema));\n+\n+  if (readers.empty()) {\n+    // Just generate all batches right now; they're cheap since they have no columns.\n+    int64_t batch_size = properties().batch_size();\n+    auto max_sized_batch =\n+        ::arrow::RecordBatch::Make(batch_schema, batch_size, ::arrow::ArrayVector{});\n+\n+    ::arrow::RecordBatchVector batches;\n+\n+    for (int row_group : row_groups) {\n+      int64_t num_rows = parquet_reader()->metadata()->RowGroup(row_group)->num_rows();\n \n-  // filter to only arrow::Fields which contain the selected physical columns\n-  {\n-    ::arrow::FieldVector selected_fields;\n+      batches.insert(batches.end(), num_rows / batch_size, max_sized_batch);\n \n-    for (int field_idx : field_indices) {\n-      selected_fields.push_back(batch_schema->field(field_idx));\n+      if (int64_t trailing_rows = num_rows % batch_size) {\n+        batches.push_back(max_sized_batch->Slice(0, trailing_rows));\n+      }\n     }\n \n-    batch_schema = ::arrow::schema(std::move(selected_fields));\n-  }\n+    *out = ::arrow::internal::make_unique<RowGroupRecordBatchReader>(\n+        ::arrow::MakeVectorIterator(std::move(batches)), std::move(batch_schema));\n \n-  if (reader_properties_.pre_buffer()) {\n-    // PARQUET-1698/PARQUET-1820: pre-buffer row groups/column chunks if enabled\n-    BEGIN_PARQUET_CATCH_EXCEPTIONS\n-    reader_->PreBuffer(row_group_indices, column_indices,\n-                       reader_properties_.async_context(),\n-                       reader_properties_.cache_options());\n-    END_PARQUET_CATCH_EXCEPTIONS\n+    return Status::OK();\n   }\n \n   using ::arrow::RecordBatchIterator;\n \n-  // NB: This lambda will be invoked lazily whenever a new row group must be\n-  // scanned, so it must capture `column_indices` by value (it will not\n-  // otherwise outlive the scope of `GetRecordBatchReader()`). `this` is a non-owning\n-  // pointer so we are relying on the parent FileReader outliving this RecordBatchReader.\n-  auto row_group_index_to_batch_iterator =\n-      [column_indices, this](const int* i) -> ::arrow::Result<RecordBatchIterator> {\n-    std::shared_ptr<::arrow::Table> table;\n-    RETURN_NOT_OK(RowGroup(*i)->ReadTable(column_indices, &table));\n-\n-    auto table_reader = std::make_shared<::arrow::TableBatchReader>(*table);\n-    table_reader->set_chunksize(properties().batch_size());\n-\n-    // NB: explicitly preserve table so that table_reader doesn't outlive it\n-    return ::arrow::MakeFunctionIterator(\n-        [table, table_reader] { return table_reader->Next(); });\n-  };\n-\n-  ::arrow::Iterator<RecordBatchIterator> row_group_batches =\n-      ::arrow::MakeMaybeMapIterator(\n-          std::move(row_group_index_to_batch_iterator),\n-          ::arrow::MakeVectorPointingIterator(row_group_indices));\n+  // NB: This lambda will be invoked outside the scope of this call to\n+  // `GetRecordBatchReader()`, so it must capture `readers` and `batch_schema` by value.\n+  // `this` is a non-owning pointer so we are relying on the parent FileReader outliving\n+  // this RecordBatchReader.\n+  ::arrow::Iterator<RecordBatchIterator> batches = ::arrow::MakeFunctionIterator(\n+      [readers, batch_schema, this]() -> ::arrow::Result<RecordBatchIterator> {\n+        // Get the next chunks for each column\n+        // (chunks[i] contains the chunks for column i).\n+        std::vector<::arrow::ArrayVector> chunks(readers.size());\n+        for (size_t i = 0; i < readers.size(); ++i) {\n+          std::shared_ptr<ChunkedArray> chunk;\n+          do {\n+            RETURN_NOT_OK(readers[i]->NextBatch(properties().batch_size(), &chunk));\n+            if (chunk == nullptr) {\n+              return ::arrow::IterationTraits<RecordBatchIterator>::End();\n+            }\n+          } while (chunk->length() == 0);\n\nReview comment:\n       IMHO this check should be internal to the ColumnReaders. I tried embedding it in TransferColumnData but discovered that other location in the codebase rely on empty chunks. Is this expected or should it be fixed?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-07-13T20:31:34.376+0000",
                    "updated": "2020-07-13T20:31:34.376+0000",
                    "started": "2020-07-13T20:31:34.376+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "458297",
                    "issueId": "13303340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13303340/worklog/458760",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm closed pull request #7534:\nURL: https://github.com/apache/arrow/pull/7534\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-07-14T16:25:10.519+0000",
                    "updated": "2020-07-14T16:25:10.519+0000",
                    "started": "2020-07-14T16:25:10.519+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "458760",
                    "issueId": "13303340"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 9000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5ed63a9f[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2ac5db53[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@39fb3474[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@3de06f5b[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4f9444b2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@2e141a9d[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4eacd3bf[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@7008e786[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1dd49ce1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@139abd34[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3b03a5d3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@c8051e2[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 9000,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Jul 14 16:24:59 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-07-14T16:24:59.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8729/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2020-05-07T10:02:53.000+0000",
        "updated": "2020-07-14T16:25:11.000+0000",
        "timeoriginalestimate": null,
        "description": "Python reproducer:\r\n\r\n{code}\r\nimport pyarrow as pa\r\nimport pyarrow.parquet as pq\r\nimport pyarrow.dataset as ds\r\npath = \"test_dataset\"\r\n\r\ntable = pa.table({'part': ['a', 'a', 'b', 'b'], 'col': [1, 2, 3, 4]})\r\npq.write_to_dataset(table, str(path), partition_cols=[\"part\"])\r\n{code}\r\n\r\ngives\r\n\r\n{code}\r\nIn [38]: ds.dataset(str(path), partitioning=\"hive\").to_table().num_rows                                                                                                                                            \r\nOut[38]: 4\r\n\r\nIn [39]: ds.dataset(str(path), partitioning=\"hive\").to_table(columns=[\"part\"]).num_rows                                                                                                                            \r\nOut[39]: 0\r\n{code}\r\n\r\nThe schema correctly only includes the \"part\" column, but there are no rows.\r\n\r\ncc [~bkietz]",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 9000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Dataset] Only selecting a partition column results in empty table",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13303340/comment/17157490",
                    "id": "17157490",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 7534\n[https://github.com/apache/arrow/pull/7534]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-07-14T16:24:59.928+0000",
                    "updated": "2020-07-14T16:24:59.928+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0egr4:",
        "customfield_12314139": null
    }
}